
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001addc  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003364  0801af9c  0801af9c  0002af9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  0801e300  0801e300  0002e300  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0801e318  0801e318  000401b4  2**0
                  CONTENTS
  5 .ARM          00000008  0801e318  0801e318  0002e318  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0801e320  0801e320  000401b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0801e320  0801e320  0002e320  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0801e338  0801e338  0002e338  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0801e340  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a5fc  20000140  0801e480  00030140  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  2000a73c  0801e480  0003a73c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000401b4  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00000000  90000000  90000000  000401e4  2**0
                  CONTENTS
 14 FontFlashSection 000001a8  90000000  90000000  00040000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 0000000c  900001a8  900001a8  000401a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00046d67  00000000  00000000  000401e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   0008bcb5  00000000  00000000  00086f4b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00012186  00000000  00000000  00112c00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002820  00000000  00000000  00124d88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012a025  00000000  00000000  001275a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00003e00  00000000  00000000  002515d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    000239b2  00000000  00000000  002553d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00037794  00000000  00000000  00278d82  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  002b0516  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007a4c  00000000  00000000  002b05e8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801af84 	.word	0x0801af84

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801af84 	.word	0x0801af84

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f003 f93f 	bl	8003850 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f019 fc71 	bl	8019eb8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ff79 	bl	80014cc <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005dc:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005e0:	0801e340 	.word	0x0801e340
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005ec:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005f0:	2000a73c 	.word	0x2000a73c

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005f6:	f000 bdf5 	b.w	80011e4 <touchgfx_init>

080005fa <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005fa:	f000 be63 	b.w	80012c4 <touchgfx_taskEntry>

080005fe <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005fe:	2100      	movs	r1, #0
 8000600:	4608      	mov	r0, r1
 8000602:	f002 bc8d 	b.w	8002f20 <BSP_PB_Init>

08000606 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000606:	2000      	movs	r0, #0
 8000608:	f002 bcc4 	b.w	8002f94 <BSP_PB_GetState>

0800060c <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800060c:	6840      	ldr	r0, [r0, #4]
    }
 800060e:	4770      	bx	lr

08000610 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000610:	6041      	str	r1, [r0, #4]
    }
 8000612:	4770      	bx	lr

08000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000614:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000618:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 800061c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000620:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000624:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000628:	6813      	ldr	r3, [r2, #0]
 800062a:	f043 0301 	orr.w	r3, r3, #1
 800062e:	6013      	str	r3, [r2, #0]
}
 8000630:	4770      	bx	lr

08000632 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000632:	1a51      	subs	r1, r2, r1
 8000634:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000638:	fbb1 f0f3 	udiv	r0, r1, r3
 800063c:	4770      	bx	lr
	...

08000640 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000640:	4b01      	ldr	r3, [pc, #4]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000642:	6858      	ldr	r0, [r3, #4]
}
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800064c:	4770      	bx	lr

0800064e <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800064e:	b510      	push	{r4, lr}
 8000650:	210c      	movs	r1, #12
 8000652:	4604      	mov	r4, r0
 8000654:	f019 fbb7 	bl	8019dc6 <_ZdlPvj>
 8000658:	4620      	mov	r0, r4
 800065a:	bd10      	pop	{r4, pc}

0800065c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065c:	6803      	ldr	r3, [r0, #0]
{
 800065e:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000660:	691b      	ldr	r3, [r3, #16]
{
 8000662:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000664:	b131      	cbz	r1, 8000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000666:	4798      	blx	r3
 8000668:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800066a:	6863      	ldr	r3, [r4, #4]
 800066c:	1a9b      	subs	r3, r3, r2
 800066e:	4418      	add	r0, r3
 8000670:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000672:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000674:	4798      	blx	r3
 8000676:	60a0      	str	r0, [r4, #8]
}
 8000678:	e7fb      	b.n	8000672 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800067a <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800067a:	4770      	bx	lr

0800067c <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 800067c:	4770      	bx	lr
	...

08000680 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000680:	b508      	push	{r3, lr}
    Buttons::init();
 8000682:	f7ff ffbc 	bl	80005fe <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000686:	4b02      	ldr	r3, [pc, #8]	; (8000690 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000688:	2200      	movs	r2, #0
 800068a:	601a      	str	r2, [r3, #0]
}
 800068c:	bd08      	pop	{r3, pc}
 800068e:	bf00      	nop
 8000690:	2000015c 	.word	0x2000015c

08000694 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000694:	b570      	push	{r4, r5, r6, lr}
 8000696:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000698:	f7ff ffb5 	bl	8000606 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 800069c:	4a0b      	ldr	r2, [pc, #44]	; (80006cc <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 800069e:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006a0:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006a2:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006a4:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006a6:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a8:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006ac:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006ae:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006b0:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006b2:	d00a      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006b4:	f016 0001 	ands.w	r0, r6, #1
 80006b8:	d007      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ba:	f011 0001 	ands.w	r0, r1, #1
 80006be:	d004      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006c0:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006c2:	bf5a      	itte	pl
 80006c4:	2001      	movpl	r0, #1
 80006c6:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006c8:	2000      	movmi	r0, #0
}
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	2000015c 	.word	0x2000015c

080006d0 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	2104      	movs	r1, #4
 80006d4:	4604      	mov	r4, r0
 80006d6:	f019 fb76 	bl	8019dc6 <_ZdlPvj>
 80006da:	4620      	mov	r0, r4
 80006dc:	bd10      	pop	{r4, pc}

080006de <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006de:	4770      	bx	lr

080006e0 <_ZN20STM32TouchControllerD0Ev>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	2104      	movs	r1, #4
 80006e4:	4604      	mov	r4, r0
 80006e6:	f019 fb6e 	bl	8019dc6 <_ZdlPvj>
 80006ea:	4620      	mov	r0, r4
 80006ec:	bd10      	pop	{r4, pc}
	...

080006f0 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006f0:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006f2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006f6:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006fa:	f002 fffb 	bl	80036f4 <BSP_TS_Init>
 80006fe:	4b07      	ldr	r3, [pc, #28]	; (800071c <_ZN20STM32TouchController4initEv+0x2c>)
 8000700:	b910      	cbnz	r0, 8000708 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000702:	2201      	movs	r2, #1
 8000704:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000706:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000708:	781b      	ldrb	r3, [r3, #0]
 800070a:	2b00      	cmp	r3, #0
 800070c:	d1fb      	bne.n	8000706 <_ZN20STM32TouchController4initEv+0x16>
 800070e:	4b04      	ldr	r3, [pc, #16]	; (8000720 <_ZN20STM32TouchController4initEv+0x30>)
 8000710:	4a04      	ldr	r2, [pc, #16]	; (8000724 <_ZN20STM32TouchController4initEv+0x34>)
 8000712:	4805      	ldr	r0, [pc, #20]	; (8000728 <_ZN20STM32TouchController4initEv+0x38>)
 8000714:	2127      	movs	r1, #39	; 0x27
 8000716:	f019 fb85 	bl	8019e24 <__assert_func>
 800071a:	bf00      	nop
 800071c:	20000160 	.word	0x20000160
 8000720:	0801b020 	.word	0x0801b020
 8000724:	0801b033 	.word	0x0801b033
 8000728:	0801b05d 	.word	0x0801b05d

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800072c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 800072e:	4b0b      	ldr	r3, [pc, #44]	; (800075c <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000730:	781c      	ldrb	r4, [r3, #0]
{
 8000732:	460e      	mov	r6, r1
 8000734:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000736:	b15c      	cbz	r4, 8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000738:	a801      	add	r0, sp, #4
 800073a:	f003 f813 	bl	8003764 <BSP_TS_GetState>
        if (state.touchDetected)
 800073e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000742:	b143      	cbz	r3, 8000756 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000744:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000748:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800074a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800074e:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000750:	4620      	mov	r0, r4
 8000752:	b004      	add	sp, #16
 8000754:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000756:	461c      	mov	r4, r3
 8000758:	e7fa      	b.n	8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800075a:	bf00      	nop
 800075c:	20000160 	.word	0x20000160

08000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000760:	2801      	cmp	r0, #1
 8000762:	d00b      	beq.n	800077c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1c>
 8000764:	2803      	cmp	r0, #3
 8000766:	d010      	beq.n	800078a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 8000768:	b9c0      	cbnz	r0, 800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800076a:	4b0d      	ldr	r3, [pc, #52]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800076c:	681a      	ldr	r2, [r3, #0]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000776:	480b      	ldr	r0, [pc, #44]	; (80007a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000778:	f004 b88e 	b.w	8004898 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800077c:	4b08      	ldr	r3, [pc, #32]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800077e:	685a      	ldr	r2, [r3, #4]
 8000780:	fab2 f282 	clz	r2, r2
 8000784:	0952      	lsrs	r2, r2, #5
 8000786:	2140      	movs	r1, #64	; 0x40
 8000788:	e7f5      	b.n	8000776 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800078a:	4b05      	ldr	r3, [pc, #20]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800078c:	4806      	ldr	r0, [pc, #24]	; (80007a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>)
 800078e:	68da      	ldr	r2, [r3, #12]
 8000790:	fab2 f282 	clz	r2, r2
 8000794:	0952      	lsrs	r2, r2, #5
 8000796:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800079a:	e7ed      	b.n	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 800079c:	4770      	bx	lr
 800079e:	bf00      	nop
 80007a0:	20000164 	.word	0x20000164
 80007a4:	40020000 	.word	0x40020000
 80007a8:	40021800 	.word	0x40021800

080007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007ac:	2801      	cmp	r0, #1
 80007ae:	d00b      	beq.n	80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1c>
 80007b0:	2803      	cmp	r0, #3
 80007b2:	d010      	beq.n	80007d6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 80007b4:	b9c0      	cbnz	r0, 80007e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007b6:	4b0d      	ldr	r3, [pc, #52]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007b8:	681a      	ldr	r2, [r3, #0]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c2:	480b      	ldr	r0, [pc, #44]	; (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007c4:	f004 b868 	b.w	8004898 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c8:	4b08      	ldr	r3, [pc, #32]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007ca:	685a      	ldr	r2, [r3, #4]
 80007cc:	3a00      	subs	r2, #0
 80007ce:	bf18      	it	ne
 80007d0:	2201      	movne	r2, #1
 80007d2:	2140      	movs	r1, #64	; 0x40
 80007d4:	e7f5      	b.n	80007c2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007d6:	4b05      	ldr	r3, [pc, #20]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007d8:	4806      	ldr	r0, [pc, #24]	; (80007f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>)
 80007da:	68da      	ldr	r2, [r3, #12]
 80007dc:	3a00      	subs	r2, #0
 80007de:	bf18      	it	ne
 80007e0:	2201      	movne	r2, #1
 80007e2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80007e6:	e7ed      	b.n	80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007e8:	4770      	bx	lr
 80007ea:	bf00      	nop
 80007ec:	20000164 	.word	0x20000164
 80007f0:	40020000 	.word	0x40020000
 80007f4:	40021800 	.word	0x40021800

080007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007f8:	2801      	cmp	r0, #1
 80007fa:	d006      	beq.n	800080a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x12>
 80007fc:	2803      	cmp	r0, #3
 80007fe:	d006      	beq.n	800080e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
 8000800:	b948      	cbnz	r0, 8000816 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1e>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000802:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000804:	4804      	ldr	r0, [pc, #16]	; (8000818 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>)
        HAL_GPIO_TogglePin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000806:	f004 b84c 	b.w	80048a2 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800080a:	2140      	movs	r1, #64	; 0x40
 800080c:	e7fa      	b.n	8000804 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800080e:	4803      	ldr	r0, [pc, #12]	; (800081c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000810:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000814:	e7f7      	b.n	8000806 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000816:	4770      	bx	lr
 8000818:	40020000 	.word	0x40020000
 800081c:	40021800 	.word	0x40021800

08000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000820:	2801      	cmp	r0, #1
{
 8000822:	b508      	push	{r3, lr}
    switch (id)
 8000824:	d00a      	beq.n	800083c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000826:	2803      	cmp	r0, #3
 8000828:	d00a      	beq.n	8000840 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
 800082a:	b968      	cbnz	r0, 8000848 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800082c:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800082e:	4807      	ldr	r0, [pc, #28]	; (800084c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2c>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000830:	f004 f82c 	bl	800488c <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000834:	1e43      	subs	r3, r0, #1
 8000836:	4258      	negs	r0, r3
 8000838:	4158      	adcs	r0, r3
 800083a:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800083c:	2140      	movs	r1, #64	; 0x40
 800083e:	e7f6      	b.n	800082e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xe>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000840:	4803      	ldr	r0, [pc, #12]	; (8000850 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000842:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000846:	e7f3      	b.n	8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000848:	2000      	movs	r0, #0
 800084a:	e7f3      	b.n	8000834 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 800084c:	40020000 	.word	0x40020000
 8000850:	40021800 	.word	0x40021800

08000854 <_ZN8touchgfx4GPIO4initEv>:
{
 8000854:	b570      	push	{r4, r5, r6, lr}
 8000856:	4d08      	ldr	r5, [pc, #32]	; (8000878 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000858:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800085a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800085c:	b2e0      	uxtb	r0, r4
 800085e:	f7ff ffdf 	bl	8000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000862:	b118      	cbz	r0, 800086c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000864:	682b      	ldr	r3, [r5, #0]
 8000866:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000868:	bf18      	it	ne
 800086a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800086c:	3401      	adds	r4, #1
 800086e:	2c05      	cmp	r4, #5
 8000870:	f105 0504 	add.w	r5, r5, #4
 8000874:	d1f2      	bne.n	800085c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000876:	bd70      	pop	{r4, r5, r6, pc}
 8000878:	20000164 	.word	0x20000164

0800087c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800087c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800087e:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000882:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000886:	4770      	bx	lr

08000888 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000888:	2000      	movs	r0, #0
 800088a:	4770      	bx	lr

0800088c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800088c:	4b03      	ldr	r3, [pc, #12]	; (800089c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800088e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000890:	3900      	subs	r1, #0
 8000892:	bf18      	it	ne
 8000894:	2101      	movne	r1, #1
 8000896:	7019      	strb	r1, [r3, #0]
    }
 8000898:	4770      	bx	lr
 800089a:	bf00      	nop
 800089c:	2000a497 	.word	0x2000a497

080008a0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80008a0:	2000      	movs	r0, #0
 80008a2:	4770      	bx	lr

080008a4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008a4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80008a6:	b10b      	cbz	r3, 80008ac <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008a8:	4608      	mov	r0, r1
 80008aa:	4718      	bx	r3
        }
    }
 80008ac:	4770      	bx	lr

080008ae <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80008ae:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80008b2:	4770      	bx	lr

080008b4 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008b4:	6840      	ldr	r0, [r0, #4]
 80008b6:	6803      	ldr	r3, [r0, #0]
 80008b8:	699b      	ldr	r3, [r3, #24]
 80008ba:	4718      	bx	r3

080008bc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008bc:	4770      	bx	lr

080008be <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008be:	4770      	bx	lr

080008c0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 80008c0:	4b01      	ldr	r3, [pc, #4]	; (80008c8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 80008c2:	6818      	ldr	r0, [r3, #0]
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	20000174 	.word	0x20000174

080008cc <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008cc:	4770      	bx	lr
	...

080008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
 80008d0:	b538      	push	{r3, r4, r5, lr}
 80008d2:	4604      	mov	r4, r0
    mcuInstr.init();
 80008d4:	4d09      	ldr	r5, [pc, #36]	; (80008fc <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80008d6:	f7ff ffbd 	bl	8000854 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80008da:	4620      	mov	r0, r4
 80008dc:	f000 fd72 	bl	80013c4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 80008e0:	2300      	movs	r3, #0
 80008e2:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 80008e6:	4628      	mov	r0, r5
 80008e8:	f7ff fe94 	bl	8000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 80008ec:	2301      	movs	r3, #1
 80008ee:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 80008f2:	4b03      	ldr	r3, [pc, #12]	; (8000900 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 80008f4:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 80008f6:	6163      	str	r3, [r4, #20]
}
 80008f8:	bd38      	pop	{r3, r4, r5, pc}
 80008fa:	bf00      	nop
 80008fc:	20000180 	.word	0x20000180
 8000900:	2000017c 	.word	0x2000017c

08000904 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000904:	6803      	ldr	r3, [r0, #0]
{
 8000906:	4604      	mov	r4, r0
 8000908:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800090a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800090e:	4798      	blx	r3
    enableInterrupts();
 8000910:	6823      	ldr	r3, [r4, #0]
 8000912:	4620      	mov	r0, r4
 8000914:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000916:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000918:	f000 fa2e 	bl	8000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800091c:	6823      	ldr	r3, [r4, #0]
 800091e:	4620      	mov	r0, r4
 8000920:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000922:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 8000924:	2100      	movs	r1, #0
 8000926:	4806      	ldr	r0, [pc, #24]	; (8000940 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8000928:	9100      	str	r1, [sp, #0]
 800092a:	2329      	movs	r3, #41	; 0x29
 800092c:	2215      	movs	r2, #21
 800092e:	f003 fd9c 	bl	800446a <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 8000932:	f000 fa21 	bl	8000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000936:	6823      	ldr	r3, [r4, #0]
 8000938:	4620      	mov	r0, r4
 800093a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800093c:	4798      	blx	r3
    for (;;)
 800093e:	e7f8      	b.n	8000932 <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 8000940:	200012c4 	.word	0x200012c4

08000944 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000944:	b510      	push	{r4, lr}
 8000946:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000948:	f009 fa9c 	bl	8009e84 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800094c:	6823      	ldr	r3, [r4, #0]
 800094e:	4620      	mov	r0, r4
 8000950:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000954:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000958:	4718      	bx	r3

0800095a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800095a:	f000 bd32 	b.w	80013c2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800095e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800095e:	f000 bd48 	b.w	80013f2 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000962 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8000962:	f000 bd48 	b.w	80013f6 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08000966 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000966:	f000 bd1b 	b.w	80013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800096a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800096a:	f000 bd21 	b.w	80013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800096e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800096e:	f000 bd45 	b.w	80013fc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

08000974 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000974:	4b02      	ldr	r3, [pc, #8]	; (8000980 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000976:	2200      	movs	r2, #0
 8000978:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 800097a:	f008 bc3d 	b.w	80091f8 <_ZN8touchgfx3HAL10beginFrameEv>
 800097e:	bf00      	nop
 8000980:	20000014 	.word	0x20000014

08000984 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000984:	b510      	push	{r4, lr}
 8000986:	4604      	mov	r4, r0
    HAL::endFrame();
 8000988:	f008 fc42 	bl	8009210 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800098c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000990:	b113      	cbz	r3, 8000998 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000992:	4b02      	ldr	r3, [pc, #8]	; (800099c <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000994:	2201      	movs	r2, #1
 8000996:	701a      	strb	r2, [r3, #0]
    }
}
 8000998:	bd10      	pop	{r4, pc}
 800099a:	bf00      	nop
 800099c:	20000014 	.word	0x20000014

080009a0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009a0:	f008 bbee 	b.w	8009180 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009a4 <_ZN11TouchGFXHALD0Ev>:
 80009a4:	b510      	push	{r4, lr}
 80009a6:	217c      	movs	r1, #124	; 0x7c
 80009a8:	4604      	mov	r4, r0
 80009aa:	f019 fa0c 	bl	8019dc6 <_ZdlPvj>
 80009ae:	4620      	mov	r0, r4
 80009b0:	bd10      	pop	{r4, pc}

080009b2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009b2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80009b6:	b11b      	cbz	r3, 80009c0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009b8:	6840      	ldr	r0, [r0, #4]
 80009ba:	6803      	ldr	r3, [r0, #0]
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	4718      	bx	r3
    }
 80009c0:	4618      	mov	r0, r3
 80009c2:	4770      	bx	lr

080009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009c4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009c6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009ca:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 80009ce:	4b0c      	ldr	r3, [pc, #48]	; (8000a00 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009d0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009d2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009d4:	d009      	beq.n	80009ea <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009d6:	b93a      	cbnz	r2, 80009e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009d8:	4a0a      	ldr	r2, [pc, #40]	; (8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009da:	490b      	ldr	r1, [pc, #44]	; (8000a08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009dc:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009de:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009e0:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009e2:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009e4:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009e6:	701a      	strb	r2, [r3, #0]
    }
 80009e8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009ea:	2a00      	cmp	r2, #0
 80009ec:	d0fc      	beq.n	80009e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ee:	4a05      	ldr	r2, [pc, #20]	; (8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009f0:	4905      	ldr	r1, [pc, #20]	; (8000a08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009f4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009f6:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009fa:	2200      	movs	r2, #0
 80009fc:	e7f3      	b.n	80009e6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009fe:	bf00      	nop
 8000a00:	2000a490 	.word	0x2000a490
 8000a04:	2000a48c 	.word	0x2000a48c
 8000a08:	2000a48e 	.word	0x2000a48e

08000a0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a0c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a0e:	4b09      	ldr	r3, [pc, #36]	; (8000a34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a10:	881b      	ldrh	r3, [r3, #0]
 8000a12:	428b      	cmp	r3, r1
 8000a14:	d803      	bhi.n	8000a1e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a16:	4b08      	ldr	r3, [pc, #32]	; (8000a38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a18:	881b      	ldrh	r3, [r3, #0]
 8000a1a:	4293      	cmp	r3, r2
 8000a1c:	d905      	bls.n	8000a2a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a1e:	4b07      	ldr	r3, [pc, #28]	; (8000a3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a20:	4a07      	ldr	r2, [pc, #28]	; (8000a40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a22:	4808      	ldr	r0, [pc, #32]	; (8000a44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a24:	219e      	movs	r1, #158	; 0x9e
 8000a26:	f019 f9fd 	bl	8019e24 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a2a:	4b07      	ldr	r3, [pc, #28]	; (8000a48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a2c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a2e:	4b07      	ldr	r3, [pc, #28]	; (8000a4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a30:	801a      	strh	r2, [r3, #0]
    }
 8000a32:	bd08      	pop	{r3, pc}
 8000a34:	2000a48c 	.word	0x2000a48c
 8000a38:	2000a48e 	.word	0x2000a48e
 8000a3c:	0801b0b4 	.word	0x0801b0b4
 8000a40:	0801b117 	.word	0x0801b117
 8000a44:	0801b15a 	.word	0x0801b15a
 8000a48:	2000a492 	.word	0x2000a492
 8000a4c:	2000a494 	.word	0x2000a494

08000a50 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	460d      	mov	r5, r1
 8000a54:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 8000a56:	4b0b      	ldr	r3, [pc, #44]	; (8000a84 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8000a58:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a5a:	b935      	cbnz	r5, 8000a6a <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 8000a5c:	4b0a      	ldr	r3, [pc, #40]	; (8000a88 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000a5e:	4a0b      	ldr	r2, [pc, #44]	; (8000a8c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000a60:	480b      	ldr	r0, [pc, #44]	; (8000a90 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000a62:	f240 21bb 	movw	r1, #699	; 0x2bb
 8000a66:	f019 f9dd 	bl	8019e24 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a6a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a6e:	4b09      	ldr	r3, [pc, #36]	; (8000a94 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 8000a70:	3a00      	subs	r2, #0
 8000a72:	bf18      	it	ne
 8000a74:	2201      	movne	r2, #1
 8000a76:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a78:	6803      	ldr	r3, [r0, #0]
}
 8000a7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000a7e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a82:	4718      	bx	r3
 8000a84:	20000174 	.word	0x20000174
 8000a88:	0801b19f 	.word	0x0801b19f
 8000a8c:	0801b1d7 	.word	0x0801b1d7
 8000a90:	0801b15a 	.word	0x0801b15a
 8000a94:	2000a496 	.word	0x2000a496

08000a98 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a98:	2801      	cmp	r0, #1
    {
 8000a9a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a9c:	d80a      	bhi.n	8000ab4 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a9e:	784b      	ldrb	r3, [r1, #1]
 8000aa0:	9300      	str	r3, [sp, #0]
 8000aa2:	780b      	ldrb	r3, [r1, #0]
 8000aa4:	4808      	ldr	r0, [pc, #32]	; (8000ac8 <DSI_IO_WriteCmd+0x30>)
 8000aa6:	2215      	movs	r2, #21
 8000aa8:	2100      	movs	r1, #0
 8000aaa:	f003 fcde 	bl	800446a <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000aae:	b003      	add	sp, #12
 8000ab0:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000ab4:	9101      	str	r1, [sp, #4]
 8000ab6:	5c0b      	ldrb	r3, [r1, r0]
 8000ab8:	9300      	str	r3, [sp, #0]
 8000aba:	2239      	movs	r2, #57	; 0x39
 8000abc:	4603      	mov	r3, r0
 8000abe:	2100      	movs	r1, #0
 8000ac0:	4801      	ldr	r0, [pc, #4]	; (8000ac8 <DSI_IO_WriteCmd+0x30>)
 8000ac2:	f003 fce3 	bl	800448c <HAL_DSI_LongWrite>
    }
 8000ac6:	e7f2      	b.n	8000aae <DSI_IO_WriteCmd+0x16>
 8000ac8:	200012c4 	.word	0x200012c4

08000acc <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000acc:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000ace:	4a0b      	ldr	r2, [pc, #44]	; (8000afc <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000ad0:	4c0b      	ldr	r4, [pc, #44]	; (8000b00 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000ad2:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000ad4:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000ad6:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000ad8:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000ada:	9201      	str	r2, [sp, #4]
 8000adc:	2244      	movs	r2, #68	; 0x44
 8000ade:	9200      	str	r2, [sp, #0]
 8000ae0:	2100      	movs	r1, #0
 8000ae2:	2239      	movs	r2, #57	; 0x39
 8000ae4:	4620      	mov	r0, r4
 8000ae6:	f003 fcd1 	bl	800448c <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000aea:	2100      	movs	r1, #0
 8000aec:	9100      	str	r1, [sp, #0]
 8000aee:	2335      	movs	r3, #53	; 0x35
 8000af0:	462a      	mov	r2, r5
 8000af2:	4620      	mov	r0, r4
 8000af4:	f003 fcb9 	bl	800446a <HAL_DSI_ShortWrite>
    }
 8000af8:	b003      	add	sp, #12
 8000afa:	bd30      	pop	{r4, r5, pc}
 8000afc:	2000018c 	.word	0x2000018c
 8000b00:	200012c4 	.word	0x200012c4

08000b04 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000b04:	b507      	push	{r0, r1, r2, lr}
 8000b06:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000b08:	f7ff ffe0 	bl	8000acc <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000b0c:	9801      	ldr	r0, [sp, #4]
}
 8000b0e:	b003      	add	sp, #12
 8000b10:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000b14:	f000 bc54 	b.w	80013c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000b18 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000b18:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000b1a:	4b07      	ldr	r3, [pc, #28]	; (8000b38 <LCD_SetUpdateRegion+0x20>)
 8000b1c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000b20:	232a      	movs	r3, #42	; 0x2a
 8000b22:	9001      	str	r0, [sp, #4]
 8000b24:	9300      	str	r3, [sp, #0]
 8000b26:	2239      	movs	r2, #57	; 0x39
 8000b28:	2304      	movs	r3, #4
 8000b2a:	2100      	movs	r1, #0
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <LCD_SetUpdateRegion+0x24>)
 8000b2e:	f003 fcad 	bl	800448c <HAL_DSI_LongWrite>
    }
 8000b32:	b003      	add	sp, #12
 8000b34:	f85d fb04 	ldr.w	pc, [sp], #4
 8000b38:	20000004 	.word	0x20000004
 8000b3c:	200012c4 	.word	0x200012c4

08000b40 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000b40:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000b42:	4d15      	ldr	r5, [pc, #84]	; (8000b98 <HAL_DSI_TearingEffectCallback+0x58>)
 8000b44:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000b46:	2000      	movs	r0, #0
 8000b48:	f7ff fe0a 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000b4c:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000b4e:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000b52:	3301      	adds	r3, #1
 8000b54:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000b58:	f000 f902 	bl	8000d60 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000b5c:	4b0f      	ldr	r3, [pc, #60]	; (8000b9c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000b5e:	6828      	ldr	r0, [r5, #0]
 8000b60:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000b62:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000b64:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000b68:	b123      	cbz	r3, 8000b74 <HAL_DSI_TearingEffectCallback+0x34>
 8000b6a:	4d0d      	ldr	r5, [pc, #52]	; (8000ba0 <HAL_DSI_TearingEffectCallback+0x60>)
 8000b6c:	782b      	ldrb	r3, [r5, #0]
 8000b6e:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000b72:	b123      	cbz	r3, 8000b7e <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b78:	2000      	movs	r0, #0
 8000b7a:	f7ff be17 	b.w	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b7e:	f009 f981 	bl	8009e84 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b82:	4b08      	ldr	r3, [pc, #32]	; (8000ba4 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b84:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b86:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b88:	f7ff ffc6 	bl	8000b18 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b8c:	4620      	mov	r0, r4
 8000b8e:	f003 fc5c 	bl	800444a <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b92:	2301      	movs	r3, #1
 8000b94:	702b      	strb	r3, [r5, #0]
    }
 8000b96:	bd70      	pop	{r4, r5, r6, pc}
 8000b98:	2000a498 	.word	0x2000a498
 8000b9c:	20000014 	.word	0x20000014
 8000ba0:	2000018e 	.word	0x2000018e
 8000ba4:	20000178 	.word	0x20000178

08000ba8 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000ba8:	4b33      	ldr	r3, [pc, #204]	; (8000c78 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000baa:	681a      	ldr	r2, [r3, #0]
 8000bac:	3201      	adds	r2, #1
    {
 8000bae:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8000bb0:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000bb2:	4b32      	ldr	r3, [pc, #200]	; (8000c7c <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000bb4:	4c32      	ldr	r4, [pc, #200]	; (8000c80 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000bb6:	6819      	ldr	r1, [r3, #0]
 8000bb8:	4b32      	ldr	r3, [pc, #200]	; (8000c84 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8000bba:	2a03      	cmp	r2, #3
    {
 8000bbc:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8000bbe:	dc2e      	bgt.n	8000c1e <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc0:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8000bc4:	f020 0008 	bic.w	r0, r0, #8
 8000bc8:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000bcc:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000bd0:	fb00 1102 	mla	r1, r0, r2, r1
 8000bd4:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000bd8:	bf0c      	ite	eq
 8000bda:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000bdc:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000bde:	3302      	adds	r3, #2
 8000be0:	4928      	ldr	r1, [pc, #160]	; (8000c84 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000be2:	041b      	lsls	r3, r3, #16
 8000be4:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000be8:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000bea:	4b27      	ldr	r3, [pc, #156]	; (8000c88 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8000bec:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000bee:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000bf2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000bf6:	4b25      	ldr	r3, [pc, #148]	; (8000c8c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bf8:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bfc:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8000bfe:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c00:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000c02:	f7ff ff89 	bl	8000b18 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000c06:	4a1e      	ldr	r2, [pc, #120]	; (8000c80 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000c08:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000c0c:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000c10:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c12:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000c16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000c1a:	f003 bc16 	b.w	800444a <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000c1e:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 8000c22:	f022 0208 	bic.w	r2, r2, #8
 8000c26:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000c2a:	4a19      	ldr	r2, [pc, #100]	; (8000c90 <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000c2c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000c30:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000c32:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 8000c36:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000c38:	4a16      	ldr	r2, [pc, #88]	; (8000c94 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000c3a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000c3e:	4a13      	ldr	r2, [pc, #76]	; (8000c8c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000c40:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c44:	2201      	movs	r2, #1
 8000c46:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000c48:	2000      	movs	r0, #0
 8000c4a:	f7ff ff65 	bl	8000b18 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c4e:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000c52:	f043 0308 	orr.w	r3, r3, #8
 8000c56:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000c5a:	2000      	movs	r0, #0
 8000c5c:	f7ff fda6 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000c60:	4b0d      	ldr	r3, [pc, #52]	; (8000c98 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 8000c62:	2200      	movs	r2, #0
 8000c64:	701a      	strb	r2, [r3, #0]
        return instance;
 8000c66:	4b0d      	ldr	r3, [pc, #52]	; (8000c9c <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8000c68:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000c6a:	b120      	cbz	r0, 8000c76 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8000c6c:	6803      	ldr	r3, [r0, #0]
    }
 8000c6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000c72:	6a1b      	ldr	r3, [r3, #32]
 8000c74:	4718      	bx	r3
 8000c76:	bd70      	pop	{r4, r5, r6, pc}
 8000c78:	20000178 	.word	0x20000178
 8000c7c:	20000174 	.word	0x20000174
 8000c80:	40016c00 	.word	0x40016c00
 8000c84:	40016800 	.word	0x40016800
 8000c88:	00ca01e3 	.word	0x00ca01e3
 8000c8c:	06800193 	.word	0x06800193
 8000c90:	00ca01e2 	.word	0x00ca01e2
 8000c94:	00ca0003 	.word	0x00ca0003
 8000c98:	2000018e 	.word	0x2000018e
 8000c9c:	2000a498 	.word	0x2000a498

08000ca0 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000ca0:	b508      	push	{r3, lr}
        return instance;
 8000ca2:	4b04      	ldr	r3, [pc, #16]	; (8000cb4 <IdleTaskHook+0x14>)
 8000ca4:	4601      	mov	r1, r0
 8000ca6:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000ca8:	b101      	cbz	r1, 8000cac <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000caa:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000cac:	f009 f904 	bl	8009eb8 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000cb0:	2001      	movs	r0, #1
 8000cb2:	bd08      	pop	{r3, pc}
 8000cb4:	2000a498 	.word	0x2000a498

08000cb8 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000cb8:	4b05      	ldr	r3, [pc, #20]	; (8000cd0 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000cba:	4806      	ldr	r0, [pc, #24]	; (8000cd4 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	605a      	str	r2, [r3, #4]
 8000cc0:	609a      	str	r2, [r3, #8]
 8000cc2:	4a05      	ldr	r2, [pc, #20]	; (8000cd8 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000cc4:	601a      	str	r2, [r3, #0]
 8000cc6:	4b05      	ldr	r3, [pc, #20]	; (8000cdc <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000cc8:	6003      	str	r3, [r0, #0]
        init();
 8000cca:	f7ff bcd9 	b.w	8000680 <_ZN8touchgfx10KeySampler4initEv>
 8000cce:	bf00      	nop
 8000cd0:	20000180 	.word	0x20000180
 8000cd4:	2000017c 	.word	0x2000017c
 8000cd8:	0801afe4 	.word	0x0801afe4
 8000cdc:	0801b00c 	.word	0x0801b00c

08000ce0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ce0:	2101      	movs	r1, #1
{
 8000ce2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ce4:	2200      	movs	r2, #0
 8000ce6:	4608      	mov	r0, r1
 8000ce8:	f005 fe57 	bl	800699a <osSemaphoreNew>
 8000cec:	4b0a      	ldr	r3, [pc, #40]	; (8000d18 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000cee:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000cf0:	b928      	cbnz	r0, 8000cfe <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000cf2:	4b0a      	ldr	r3, [pc, #40]	; (8000d1c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000cf4:	4a0a      	ldr	r2, [pc, #40]	; (8000d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cf6:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cf8:	480a      	ldr	r0, [pc, #40]	; (8000d24 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000cfa:	f019 f893 	bl	8019e24 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000cfe:	2200      	movs	r2, #0
 8000d00:	2104      	movs	r1, #4
 8000d02:	2001      	movs	r0, #1
 8000d04:	f005 fee6 	bl	8006ad4 <osMessageQueueNew>
 8000d08:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000d0a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000d0c:	b918      	cbnz	r0, 8000d16 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000d0e:	4b07      	ldr	r3, [pc, #28]	; (8000d2c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000d10:	4a03      	ldr	r2, [pc, #12]	; (8000d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000d12:	212c      	movs	r1, #44	; 0x2c
 8000d14:	e7f0      	b.n	8000cf8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000d16:	bd08      	pop	{r3, pc}
 8000d18:	20000194 	.word	0x20000194
 8000d1c:	0801b300 	.word	0x0801b300
 8000d20:	0801b349 	.word	0x0801b349
 8000d24:	0801b378 	.word	0x0801b378
 8000d28:	20000190 	.word	0x20000190
 8000d2c:	0801b3b7 	.word	0x0801b3b7

08000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000d30:	4b02      	ldr	r3, [pc, #8]	; (8000d3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000d32:	f04f 31ff 	mov.w	r1, #4294967295
 8000d36:	6818      	ldr	r0, [r3, #0]
 8000d38:	f005 be79 	b.w	8006a2e <osSemaphoreAcquire>
 8000d3c:	20000194 	.word	0x20000194

08000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000d40:	4b01      	ldr	r3, [pc, #4]	; (8000d48 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000d42:	6818      	ldr	r0, [r3, #0]
 8000d44:	f005 be9e 	b.w	8006a84 <osSemaphoreRelease>
 8000d48:	20000194 	.word	0x20000194

08000d4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000d4c:	4b02      	ldr	r3, [pc, #8]	; (8000d58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000d4e:	2100      	movs	r1, #0
 8000d50:	6818      	ldr	r0, [r3, #0]
 8000d52:	f005 be6c 	b.w	8006a2e <osSemaphoreAcquire>
 8000d56:	bf00      	nop
 8000d58:	20000194 	.word	0x20000194

08000d5c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000d5c:	f7ff bff0 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000d60 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000d60:	4803      	ldr	r0, [pc, #12]	; (8000d70 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000d62:	4904      	ldr	r1, [pc, #16]	; (8000d74 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000d64:	6800      	ldr	r0, [r0, #0]
 8000d66:	2300      	movs	r3, #0
 8000d68:	461a      	mov	r2, r3
 8000d6a:	f005 beee 	b.w	8006b4a <osMessageQueuePut>
 8000d6e:	bf00      	nop
 8000d70:	20000190 	.word	0x20000190
 8000d74:	20000018 	.word	0x20000018

08000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d78:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d7a:	4c08      	ldr	r4, [pc, #32]	; (8000d9c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	461a      	mov	r2, r3
 8000d80:	a901      	add	r1, sp, #4
 8000d82:	6820      	ldr	r0, [r4, #0]
 8000d84:	f005 ff11 	bl	8006baa <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d88:	6820      	ldr	r0, [r4, #0]
 8000d8a:	f04f 33ff 	mov.w	r3, #4294967295
 8000d8e:	2200      	movs	r2, #0
 8000d90:	a901      	add	r1, sp, #4
 8000d92:	f005 ff0a 	bl	8006baa <osMessageQueueGet>
}
 8000d96:	b002      	add	sp, #8
 8000d98:	bd10      	pop	{r4, pc}
 8000d9a:	bf00      	nop
 8000d9c:	20000190 	.word	0x20000190

08000da0 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000da0:	6803      	ldr	r3, [r0, #0]
 8000da2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000da4:	4718      	bx	r3

08000da6 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000da6:	2001      	movs	r0, #1
 8000da8:	4770      	bx	lr

08000daa <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000daa:	6803      	ldr	r3, [r0, #0]
 8000dac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000dae:	4718      	bx	r3

08000db0 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000db0:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000db2:	2300      	movs	r3, #0
 8000db4:	9301      	str	r3, [sp, #4]
 8000db6:	4b0d      	ldr	r3, [pc, #52]	; (8000dec <_ZN8STM32DMA10initializeEv+0x3c>)
 8000db8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dba:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dbe:	631a      	str	r2, [r3, #48]	; 0x30
 8000dc0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dc2:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000dc6:	9201      	str	r2, [sp, #4]
 8000dc8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000dca:	691a      	ldr	r2, [r3, #16]
 8000dcc:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dd0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000dd2:	691a      	ldr	r2, [r3, #16]
 8000dd4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000dd8:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000dda:	4b05      	ldr	r3, [pc, #20]	; (8000df0 <_ZN8STM32DMA10initializeEv+0x40>)
 8000ddc:	4a05      	ldr	r2, [pc, #20]	; (8000df4 <_ZN8STM32DMA10initializeEv+0x44>)
 8000dde:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000de0:	4b05      	ldr	r3, [pc, #20]	; (8000df8 <_ZN8STM32DMA10initializeEv+0x48>)
 8000de2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000de6:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000de8:	b002      	add	sp, #8
 8000dea:	4770      	bx	lr
 8000dec:	40023800 	.word	0x40023800
 8000df0:	20001284 	.word	0x20001284
 8000df4:	08000e3d 	.word	0x08000e3d
 8000df8:	e000e100 	.word	0xe000e100

08000dfc <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000dfc:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000e00:	4770      	bx	lr
	...

08000e04 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000e04:	4b05      	ldr	r3, [pc, #20]	; (8000e1c <_ZN8STM32DMAD1Ev+0x18>)
 8000e06:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000e08:	4b05      	ldr	r3, [pc, #20]	; (8000e20 <_ZN8STM32DMAD1Ev+0x1c>)
 8000e0a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000e0e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000e12:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000e16:	f3bf 8f6f 	isb	sy
}
 8000e1a:	4770      	bx	lr
 8000e1c:	0801b548 	.word	0x0801b548
 8000e20:	e000e100 	.word	0xe000e100

08000e24 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000e24:	b510      	push	{r4, lr}
 8000e26:	4604      	mov	r4, r0
}
 8000e28:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000e2c:	f7ff ffea 	bl	8000e04 <_ZN8STM32DMAD1Ev>
 8000e30:	4620      	mov	r0, r4
 8000e32:	f018 ffc8 	bl	8019dc6 <_ZdlPvj>
 8000e36:	4620      	mov	r0, r4
 8000e38:	bd10      	pop	{r4, pc}
	...

08000e3c <DMA2D_XferCpltCallback>:
 8000e3c:	4b02      	ldr	r3, [pc, #8]	; (8000e48 <DMA2D_XferCpltCallback+0xc>)
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000e42:	6803      	ldr	r3, [r0, #0]
 8000e44:	695b      	ldr	r3, [r3, #20]
 8000e46:	4718      	bx	r3
 8000e48:	2000a498 	.word	0x2000a498

08000e4c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000e4c:	b570      	push	{r4, r5, r6, lr}
 8000e4e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000e50:	4625      	mov	r5, r4
 8000e52:	4b0a      	ldr	r3, [pc, #40]	; (8000e7c <_ZN8STM32DMAC1Ev+0x30>)
 8000e54:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000e56:	2600      	movs	r6, #0
 8000e58:	6060      	str	r0, [r4, #4]
 8000e5a:	7226      	strb	r6, [r4, #8]
 8000e5c:	7266      	strb	r6, [r4, #9]
 8000e5e:	f845 3b20 	str.w	r3, [r5], #32
 8000e62:	2260      	movs	r2, #96	; 0x60
 8000e64:	4629      	mov	r1, r5
 8000e66:	f009 f98d 	bl	800a184 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000e6a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000e6e:	60ee      	str	r6, [r5, #12]
 8000e70:	3524      	adds	r5, #36	; 0x24
 8000e72:	42ab      	cmp	r3, r5
 8000e74:	d1fb      	bne.n	8000e6e <_ZN8STM32DMAC1Ev+0x22>
}
 8000e76:	4620      	mov	r0, r4
 8000e78:	bd70      	pop	{r4, r5, r6, pc}
 8000e7a:	bf00      	nop
 8000e7c:	0801b548 	.word	0x0801b548

08000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000e80:	b508      	push	{r3, lr}
    switch (format)
 8000e82:	290b      	cmp	r1, #11
 8000e84:	d80b      	bhi.n	8000e9e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000e86:	e8df f001 	tbb	[pc, r1]
 8000e8a:	0612      	.short	0x0612
 8000e8c:	0a0a0a10 	.word	0x0a0a0a10
 8000e90:	0808080a 	.word	0x0808080a
 8000e94:	0808      	.short	0x0808
 8000e96:	2001      	movs	r0, #1
}
 8000e98:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000e9a:	2005      	movs	r0, #5
        break;
 8000e9c:	e7fc      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000e9e:	4b05      	ldr	r3, [pc, #20]	; (8000eb4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ea0:	4a05      	ldr	r2, [pc, #20]	; (8000eb8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ea2:	4806      	ldr	r0, [pc, #24]	; (8000ebc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000ea4:	2166      	movs	r1, #102	; 0x66
 8000ea6:	f018 ffbd 	bl	8019e24 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000eaa:	2000      	movs	r0, #0
 8000eac:	e7f4      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000eae:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000eb0:	e7f2      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000eb2:	bf00      	nop
 8000eb4:	0801b3f9 	.word	0x0801b3f9
 8000eb8:	0801b414 	.word	0x0801b414
 8000ebc:	0801b45e 	.word	0x0801b45e

08000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ec0:	b508      	push	{r3, lr}
    switch (format)
 8000ec2:	290a      	cmp	r1, #10
 8000ec4:	d809      	bhi.n	8000eda <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ec6:	e8df f001 	tbb	[pc, r1]
 8000eca:	0610      	.short	0x0610
 8000ecc:	0808080e 	.word	0x0808080e
 8000ed0:	06060608 	.word	0x06060608
 8000ed4:	06          	.byte	0x06
 8000ed5:	00          	.byte	0x00
 8000ed6:	2001      	movs	r0, #1
}
 8000ed8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000eda:	4b05      	ldr	r3, [pc, #20]	; (8000ef0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000edc:	4a05      	ldr	r2, [pc, #20]	; (8000ef4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ede:	4806      	ldr	r0, [pc, #24]	; (8000ef8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ee0:	2187      	movs	r1, #135	; 0x87
 8000ee2:	f018 ff9f 	bl	8019e24 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000ee6:	2000      	movs	r0, #0
 8000ee8:	e7f6      	b.n	8000ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000eea:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000eec:	e7f4      	b.n	8000ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000eee:	bf00      	nop
 8000ef0:	0801b3f9 	.word	0x0801b3f9
 8000ef4:	0801b49b 	.word	0x0801b49b
 8000ef8:	0801b45e 	.word	0x0801b45e

08000efc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f00:	7f4f      	ldrb	r7, [r1, #29]
{
 8000f02:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f04:	4639      	mov	r1, r7
{
 8000f06:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f08:	f7ff ffba 	bl	8000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f0c:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f10:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f12:	4641      	mov	r1, r8
 8000f14:	4648      	mov	r0, r9
 8000f16:	f7ff ffb3 	bl	8000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1a:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1c:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1e:	4648      	mov	r0, r9
 8000f20:	f7ff ffce 	bl	8000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f24:	8aa1      	ldrh	r1, [r4, #20]
 8000f26:	8b62      	ldrh	r2, [r4, #26]
 8000f28:	4b42      	ldr	r3, [pc, #264]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000f2a:	1a52      	subs	r2, r2, r1
 8000f2c:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f2e:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000f30:	8b22      	ldrh	r2, [r4, #24]
 8000f32:	1a52      	subs	r2, r2, r1
 8000f34:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f36:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000f38:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f3a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f3e:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f40:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000f42:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f44:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000f46:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000f48:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f4a:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000f4e:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f50:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000f54:	d026      	beq.n	8000fa4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000f56:	d810      	bhi.n	8000f7a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000f58:	2920      	cmp	r1, #32
 8000f5a:	ea45 0402 	orr.w	r4, r5, r2
 8000f5e:	d061      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000f60:	2940      	cmp	r1, #64	; 0x40
 8000f62:	d05f      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000f64:	2904      	cmp	r1, #4
 8000f66:	d05d      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f68:	4b32      	ldr	r3, [pc, #200]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000f6a:	432a      	orrs	r2, r5
 8000f6c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000f70:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f72:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000f74:	d05a      	beq.n	800102c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f76:	4a30      	ldr	r2, [pc, #192]	; (8001038 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000f78:	e040      	b.n	8000ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000f7a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000f7e:	d007      	beq.n	8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000f80:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000f84:	d1f0      	bne.n	8000f68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f86:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000f8a:	f042 0209 	orr.w	r2, r2, #9
 8000f8e:	e003      	b.n	8000f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f90:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000f94:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f98:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000f9a:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000f9c:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f9e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fa0:	6158      	str	r0, [r3, #20]
 8000fa2:	e02a      	b.n	8000ffa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000fa4:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000fa6:	432a      	orrs	r2, r5
 8000fa8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000fac:	1d21      	adds	r1, r4, #4
 8000fae:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000fb0:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000fb2:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fb4:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fb6:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000fb8:	b142      	cbz	r2, 8000fcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000fba:	2a01      	cmp	r2, #1
 8000fbc:	d021      	beq.n	8001002 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000fbe:	4b1f      	ldr	r3, [pc, #124]	; (800103c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000fc0:	4a1f      	ldr	r2, [pc, #124]	; (8001040 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000fc2:	4820      	ldr	r0, [pc, #128]	; (8001044 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000fc4:	f240 1111 	movw	r1, #273	; 0x111
 8000fc8:	f018 ff2c 	bl	8019e24 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000fcc:	69da      	ldr	r2, [r3, #28]
 8000fce:	8861      	ldrh	r1, [r4, #2]
 8000fd0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000fd4:	3901      	subs	r1, #1
 8000fd6:	f022 0210 	bic.w	r2, r2, #16
 8000fda:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000fde:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000fe0:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000fe2:	4b14      	ldr	r3, [pc, #80]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000fe4:	69da      	ldr	r2, [r3, #28]
 8000fe6:	f042 0220 	orr.w	r2, r2, #32
 8000fea:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000fec:	69da      	ldr	r2, [r3, #28]
 8000fee:	0692      	lsls	r2, r2, #26
 8000ff0:	d4fc      	bmi.n	8000fec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000ff2:	2210      	movs	r2, #16
 8000ff4:	609a      	str	r2, [r3, #8]
            if(blend)
 8000ff6:	2800      	cmp	r0, #0
 8000ff8:	d0bd      	beq.n	8000f76 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ffa:	4a13      	ldr	r2, [pc, #76]	; (8001048 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ffc:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ffe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001002:	8862      	ldrh	r2, [r4, #2]
 8001004:	69d9      	ldr	r1, [r3, #28]
 8001006:	1e54      	subs	r4, r2, #1
 8001008:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 800100c:	f022 0210 	bic.w	r2, r2, #16
 8001010:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8001014:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001018:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 800101c:	bf18      	it	ne
 800101e:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001020:	61da      	str	r2, [r3, #28]
                break;
 8001022:	e7de      	b.n	8000fe2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001024:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001028:	61dc      	str	r4, [r3, #28]
 800102a:	e7b8      	b.n	8000f9e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800102c:	f240 2201 	movw	r2, #513	; 0x201
 8001030:	e7e4      	b.n	8000ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8001032:	bf00      	nop
 8001034:	4002b000 	.word	0x4002b000
 8001038:	00010201 	.word	0x00010201
 800103c:	0801b4e6 	.word	0x0801b4e6
 8001040:	0801b500 	.word	0x0801b500
 8001044:	0801b45e 	.word	0x0801b45e
 8001048:	00020201 	.word	0x00020201

0800104c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800104c:	b570      	push	{r4, r5, r6, lr}
 800104e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001050:	7f89      	ldrb	r1, [r1, #30]
 8001052:	f7ff ff35 	bl	8000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001056:	8aa6      	ldrh	r6, [r4, #20]
 8001058:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800105a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800105c:	4b15      	ldr	r3, [pc, #84]	; (80010b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800105e:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001060:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001062:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001066:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001068:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800106a:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800106c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800106e:	6826      	ldr	r6, [r4, #0]
 8001070:	68e1      	ldr	r1, [r4, #12]
 8001072:	2e08      	cmp	r6, #8
 8001074:	d10d      	bne.n	8001092 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001076:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001078:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800107a:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 800107c:	7f20      	ldrb	r0, [r4, #28]
 800107e:	4a0e      	ldr	r2, [pc, #56]	; (80010b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001080:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001084:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001086:	4a0d      	ldr	r2, [pc, #52]	; (80010bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001088:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800108a:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800108c:	60dd      	str	r5, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800108e:	601a      	str	r2, [r3, #0]
    }
}
 8001090:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001092:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001094:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001096:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001098:	0948      	lsrs	r0, r1, #5
 800109a:	0a0a      	lsrs	r2, r1, #8
 800109c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80010a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80010a4:	4302      	orrs	r2, r0
 80010a6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80010aa:	430a      	orrs	r2, r1
 80010ac:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80010ae:	4a04      	ldr	r2, [pc, #16]	; (80010c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 80010b0:	e7ed      	b.n	800108e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 80010b2:	bf00      	nop
 80010b4:	4002b000 	.word	0x4002b000
 80010b8:	00010009 	.word	0x00010009
 80010bc:	00020201 	.word	0x00020201
 80010c0:	00030201 	.word	0x00030201

080010c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010c4:	2001      	movs	r0, #1
 80010c6:	4770      	bx	lr

080010c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010c8:	200c      	movs	r0, #12
 80010ca:	4770      	bx	lr

080010cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010cc:	230c      	movs	r3, #12
 80010ce:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d2:	3008      	adds	r0, #8
 80010d4:	4770      	bx	lr

080010d6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010d6:	230c      	movs	r3, #12
 80010d8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010dc:	3008      	adds	r0, #8
 80010de:	4770      	bx	lr

080010e0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010e0:	2001      	movs	r0, #1
 80010e2:	4770      	bx	lr

080010e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010e4:	2098      	movs	r0, #152	; 0x98
 80010e6:	4770      	bx	lr

080010e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010e8:	2398      	movs	r3, #152	; 0x98
 80010ea:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010ee:	3008      	adds	r0, #8
 80010f0:	4770      	bx	lr

080010f2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010f2:	2398      	movs	r3, #152	; 0x98
 80010f4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010f8:	3008      	adds	r0, #8
 80010fa:	4770      	bx	lr

080010fc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010fc:	2001      	movs	r0, #1
 80010fe:	4770      	bx	lr

08001100 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001100:	2010      	movs	r0, #16
 8001102:	4770      	bx	lr

08001104 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001104:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001108:	3008      	adds	r0, #8
 800110a:	4770      	bx	lr

0800110c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800110c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001110:	3008      	adds	r0, #8
 8001112:	4770      	bx	lr

08001114 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8001114:	4608      	mov	r0, r1
 8001116:	f001 b907 	b.w	8002328 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
	...

0800111c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800111c:	b510      	push	{r4, lr}
 800111e:	4b03      	ldr	r3, [pc, #12]	; (800112c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001120:	6003      	str	r3, [r0, #0]
 8001122:	4604      	mov	r4, r0
 8001124:	f007 fd52 	bl	8008bcc <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001128:	4620      	mov	r0, r4
 800112a:	bd10      	pop	{r4, pc}
 800112c:	0801b600 	.word	0x0801b600

08001130 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001130:	b510      	push	{r4, lr}
 8001132:	4604      	mov	r4, r0
 8001134:	f7ff fff2 	bl	800111c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001138:	4620      	mov	r0, r4
 800113a:	2114      	movs	r1, #20
 800113c:	f018 fe43 	bl	8019dc6 <_ZdlPvj>
 8001140:	4620      	mov	r0, r4
 8001142:	bd10      	pop	{r4, pc}

08001144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001144:	b510      	push	{r4, lr}
 8001146:	4b03      	ldr	r3, [pc, #12]	; (8001154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001148:	6003      	str	r3, [r0, #0]
 800114a:	4604      	mov	r4, r0
 800114c:	f007 fd3e 	bl	8008bcc <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001150:	4620      	mov	r0, r4
 8001152:	bd10      	pop	{r4, pc}
 8001154:	0801b5cc 	.word	0x0801b5cc

08001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001158:	b510      	push	{r4, lr}
 800115a:	4604      	mov	r4, r0
 800115c:	f7ff fff2 	bl	8001144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001160:	4620      	mov	r0, r4
 8001162:	21a0      	movs	r1, #160	; 0xa0
 8001164:	f018 fe2f 	bl	8019dc6 <_ZdlPvj>
 8001168:	4620      	mov	r0, r4
 800116a:	bd10      	pop	{r4, pc}

0800116c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800116c:	b510      	push	{r4, lr}
 800116e:	4b03      	ldr	r3, [pc, #12]	; (800117c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001170:	6003      	str	r3, [r0, #0]
 8001172:	4604      	mov	r4, r0
 8001174:	f007 fd2a 	bl	8008bcc <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001178:	4620      	mov	r0, r4
 800117a:	bd10      	pop	{r4, pc}
 800117c:	0801b598 	.word	0x0801b598

08001180 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001180:	b510      	push	{r4, lr}
 8001182:	4604      	mov	r4, r0
 8001184:	f7ff fff2 	bl	800116c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001188:	4620      	mov	r0, r4
 800118a:	2118      	movs	r1, #24
 800118c:	f018 fe1b 	bl	8019dc6 <_ZdlPvj>
 8001190:	4620      	mov	r0, r4
 8001192:	bd10      	pop	{r4, pc}

08001194 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001194:	b510      	push	{r4, lr}
 8001196:	4b08      	ldr	r3, [pc, #32]	; (80011b8 <_ZN12FrontendHeapD1Ev+0x24>)
 8001198:	4604      	mov	r4, r0
 800119a:	f840 3bcc 	str.w	r3, [r0], #204
 800119e:	f7ff ffbd 	bl	800111c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011a2:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80011a6:	f7ff ffcd 	bl	8001144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011aa:	f104 0014 	add.w	r0, r4, #20
 80011ae:	f7ff ffdd 	bl	800116c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011b2:	4620      	mov	r0, r4
 80011b4:	bd10      	pop	{r4, pc}
 80011b6:	bf00      	nop
 80011b8:	0801b634 	.word	0x0801b634

080011bc <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011bc:	b508      	push	{r3, lr}
 80011be:	4802      	ldr	r0, [pc, #8]	; (80011c8 <__tcf_0+0xc>)
 80011c0:	f7ff ffe8 	bl	8001194 <_ZN12FrontendHeapD1Ev>
 80011c4:	bd08      	pop	{r3, pc}
 80011c6:	bf00      	nop
 80011c8:	2000019c 	.word	0x2000019c

080011cc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011cc:	b510      	push	{r4, lr}
 80011ce:	4604      	mov	r4, r0
 80011d0:	f7ff ffe0 	bl	8001194 <_ZN12FrontendHeapD1Ev>
 80011d4:	4620      	mov	r0, r4
 80011d6:	f44f 710f 	mov.w	r1, #572	; 0x23c
 80011da:	f018 fdf4 	bl	8019dc6 <_ZdlPvj>
 80011de:	4620      	mov	r0, r4
 80011e0:	bd10      	pop	{r4, pc}
	...

080011e4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011e8:	f000 ff36 	bl	8002058 <_ZN14BitmapDatabase11getInstanceEv>
 80011ec:	4605      	mov	r5, r0
 80011ee:	f000 ff37 	bl	8002060 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011f2:	2400      	movs	r4, #0
 80011f4:	4601      	mov	r1, r0
 80011f6:	4623      	mov	r3, r4
 80011f8:	4628      	mov	r0, r5
 80011fa:	4622      	mov	r2, r4
 80011fc:	9400      	str	r4, [sp, #0]
 80011fe:	f00c fcb9 	bl	800db74 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001202:	4b25      	ldr	r3, [pc, #148]	; (8001298 <touchgfx_init+0xb4>)
 8001204:	4a25      	ldr	r2, [pc, #148]	; (800129c <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8001206:	4d26      	ldr	r5, [pc, #152]	; (80012a0 <touchgfx_init+0xbc>)
 8001208:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800120a:	4620      	mov	r0, r4
 800120c:	f001 fab0 	bl	8002770 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001210:	4824      	ldr	r0, [pc, #144]	; (80012a4 <touchgfx_init+0xc0>)
 8001212:	f00c fbfb 	bl	800da0c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001216:	782b      	ldrb	r3, [r5, #0]
 8001218:	f3bf 8f5b 	dmb	ish
 800121c:	07db      	lsls	r3, r3, #31
 800121e:	d435      	bmi.n	800128c <touchgfx_init+0xa8>
 8001220:	4628      	mov	r0, r5
 8001222:	f018 fdd2 	bl	8019dca <__cxa_guard_acquire>
 8001226:	b388      	cbz	r0, 800128c <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001228:	4c1f      	ldr	r4, [pc, #124]	; (80012a8 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800122a:	4b20      	ldr	r3, [pc, #128]	; (80012ac <touchgfx_init+0xc8>)
 800122c:	6023      	str	r3, [r4, #0]
 800122e:	f104 06e4 	add.w	r6, r4, #228	; 0xe4
 8001232:	f104 0014 	add.w	r0, r4, #20
 8001236:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800123a:	f104 07cc 	add.w	r7, r4, #204	; 0xcc
 800123e:	6060      	str	r0, [r4, #4]
 8001240:	f8c4 8008 	str.w	r8, [r4, #8]
 8001244:	60e7      	str	r7, [r4, #12]
 8001246:	6126      	str	r6, [r4, #16]
 8001248:	f007 fcc2 	bl	8008bd0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800124c:	4b18      	ldr	r3, [pc, #96]	; (80012b0 <touchgfx_init+0xcc>)
 800124e:	6163      	str	r3, [r4, #20]
 8001250:	4640      	mov	r0, r8
 8001252:	f007 fcbd 	bl	8008bd0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001256:	4b17      	ldr	r3, [pc, #92]	; (80012b4 <touchgfx_init+0xd0>)
 8001258:	62e3      	str	r3, [r4, #44]	; 0x2c
 800125a:	4638      	mov	r0, r7
 800125c:	f007 fcb8 	bl	8008bd0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001260:	4b15      	ldr	r3, [pc, #84]	; (80012b8 <touchgfx_init+0xd4>)
 8001262:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8001266:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 800126a:	f001 faeb 	bl	8002844 <_ZN5ModelC1Ev>
 800126e:	4622      	mov	r2, r4
 8001270:	f104 01e0 	add.w	r1, r4, #224	; 0xe0
 8001274:	4630      	mov	r0, r6
 8001276:	f001 fadb 	bl	8002830 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800127a:	4630      	mov	r0, r6
 800127c:	f001 f854 	bl	8002328 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001280:	480e      	ldr	r0, [pc, #56]	; (80012bc <touchgfx_init+0xd8>)
 8001282:	f018 fded 	bl	8019e60 <atexit>
 8001286:	4628      	mov	r0, r5
 8001288:	f018 fdab 	bl	8019de2 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800128c:	480c      	ldr	r0, [pc, #48]	; (80012c0 <touchgfx_init+0xdc>)
}
 800128e:	b002      	add	sp, #8
 8001290:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001294:	f7ff bb1c 	b.w	80008d0 <_ZN11TouchGFXHAL10initializeEv>
 8001298:	2000a4f4 	.word	0x2000a4f4
 800129c:	200011f8 	.word	0x200011f8
 80012a0:	20000198 	.word	0x20000198
 80012a4:	2000001c 	.word	0x2000001c
 80012a8:	2000019c 	.word	0x2000019c
 80012ac:	0801b634 	.word	0x0801b634
 80012b0:	0801b598 	.word	0x0801b598
 80012b4:	0801b5cc 	.word	0x0801b5cc
 80012b8:	0801b600 	.word	0x0801b600
 80012bc:	080011bd 	.word	0x080011bd
 80012c0:	2000117c 	.word	0x2000117c

080012c4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012c4:	4801      	ldr	r0, [pc, #4]	; (80012cc <touchgfx_taskEntry+0x8>)
 80012c6:	f7ff bb1d 	b.w	8000904 <_ZN11TouchGFXHAL9taskEntryEv>
 80012ca:	bf00      	nop
 80012cc:	2000117c 	.word	0x2000117c

080012d0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012d0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80012d2:	4e23      	ldr	r6, [pc, #140]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0x90>)
{
public:

    STM32TouchController() {}
 80012d4:	4c23      	ldr	r4, [pc, #140]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static LCD16bpp display;
 80012d6:	4d24      	ldr	r5, [pc, #144]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012d8:	4b24      	ldr	r3, [pc, #144]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012da:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80012dc:	4630      	mov	r0, r6
 80012de:	f7ff fdb5 	bl	8000e4c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80012e2:	4628      	mov	r0, r5
 80012e4:	f00f fdf2 	bl	8010ecc <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012e8:	4b21      	ldr	r3, [pc, #132]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012ea:	4822      	ldr	r0, [pc, #136]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 80012ec:	60dc      	str	r4, [r3, #12]
 80012ee:	2200      	movs	r2, #0
 80012f0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012f4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012f8:	491f      	ldr	r1, [pc, #124]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80012fa:	861a      	strh	r2, [r3, #48]	; 0x30
 80012fc:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 8001300:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001304:	6759      	str	r1, [r3, #116]	; 0x74
 8001306:	2101      	movs	r1, #1
 8001308:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 800130c:	491b      	ldr	r1, [pc, #108]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 800130e:	661a      	str	r2, [r3, #96]	; 0x60
        instance = this;
 8001310:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001312:	f44f 7150 	mov.w	r1, #832	; 0x340
 8001316:	8001      	strh	r1, [r0, #0]
 8001318:	4819      	ldr	r0, [pc, #100]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 800131a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800131e:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001320:	4818      	ldr	r0, [pc, #96]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8001322:	671a      	str	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001324:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001328:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800132c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001330:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001334:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001338:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 800133c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001340:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001344:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001348:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800134c:	8001      	strh	r1, [r0, #0]
 800134e:	480e      	ldr	r0, [pc, #56]	; (8001388 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001350:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001354:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001356:	490d      	ldr	r1, [pc, #52]	; (800138c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001358:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800135a:	4a0d      	ldr	r2, [pc, #52]	; (8001390 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800135c:	601a      	str	r2, [r3, #0]
}
 800135e:	bd70      	pop	{r4, r5, r6, pc}
 8001360:	200003dc 	.word	0x200003dc
 8001364:	200003d8 	.word	0x200003d8
 8001368:	200011fc 	.word	0x200011fc
 800136c:	0801b0a4 	.word	0x0801b0a4
 8001370:	2000117c 	.word	0x2000117c
 8001374:	2000a48c 	.word	0x2000a48c
 8001378:	01000001 	.word	0x01000001
 800137c:	2000a498 	.word	0x2000a498
 8001380:	2000a492 	.word	0x2000a492
 8001384:	2000a48e 	.word	0x2000a48e
 8001388:	2000a494 	.word	0x2000a494
 800138c:	2000a490 	.word	0x2000a490
 8001390:	0801b230 	.word	0x0801b230

08001394 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001394:	4801      	ldr	r0, [pc, #4]	; (800139c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001396:	f7ff bd35 	b.w	8000e04 <_ZN8STM32DMAD1Ev>
 800139a:	bf00      	nop
 800139c:	200003dc 	.word	0x200003dc

080013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a0:	4b02      	ldr	r3, [pc, #8]	; (80013ac <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80013a2:	2290      	movs	r2, #144	; 0x90
 80013a4:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 80013a8:	4770      	bx	lr
 80013aa:	bf00      	nop
 80013ac:	e000e100 	.word	0xe000e100

080013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013b0:	4b02      	ldr	r3, [pc, #8]	; (80013bc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013b2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013b6:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013b8:	4770      	bx	lr
 80013ba:	bf00      	nop
 80013bc:	e000e100 	.word	0xe000e100

080013c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013c0:	4770      	bx	lr

080013c2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013c2:	4770      	bx	lr

080013c4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013c4:	b570      	push	{r4, r5, r6, lr}
 80013c6:	4604      	mov	r4, r0
    HAL::initialize();
 80013c8:	f007 ff2f 	bl	800922a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013cc:	6823      	ldr	r3, [r4, #0]
 80013ce:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80013d0:	f009 ffda 	bl	800b388 <_ZN8touchgfx11Application11getInstanceEv>
 80013d4:	4601      	mov	r1, r0
 80013d6:	4620      	mov	r0, r4
 80013d8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013da:	6823      	ldr	r3, [r4, #0]
 80013dc:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80013e0:	2300      	movs	r3, #0
 80013e2:	4620      	mov	r0, r4
 80013e4:	46ac      	mov	ip, r5
 80013e6:	461a      	mov	r2, r3
}
 80013e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013ec:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013f0:	4760      	bx	ip

080013f2 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013f2:	f007 becb 	b.w	800918c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013f6 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013f6:	f008 b824 	b.w	8009442 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
	...

080013fc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013fc:	4b04      	ldr	r3, [pc, #16]	; (8001410 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013fe:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001402:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001406:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800140a:	f3bf 8f6f 	isb	sy
}
 800140e:	4770      	bx	lr
 8001410:	e000e100 	.word	0xe000e100

08001414 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001414:	4901      	ldr	r1, [pc, #4]	; (800141c <vApplicationIdleHook+0x8>)
 8001416:	2000      	movs	r0, #0
 8001418:	f006 befc 	b.w	8008214 <vTaskSetApplicationTaskTag>
 800141c:	08000ca1 	.word	0x08000ca1

08001420 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001420:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001422:	2064      	movs	r0, #100	; 0x64
 8001424:	f005 faad 	bl	8006982 <osDelay>
  for(;;)
 8001428:	e7fb      	b.n	8001422 <StartDefaultTask+0x2>
	...

0800142c <SystemClock_Config>:
{
 800142c:	b530      	push	{r4, r5, lr}
 800142e:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001430:	2210      	movs	r2, #16
 8001432:	2100      	movs	r1, #0
 8001434:	a809      	add	r0, sp, #36	; 0x24
 8001436:	f018 fd81 	bl	8019f3c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800143a:	2214      	movs	r2, #20
 800143c:	2100      	movs	r1, #0
 800143e:	a802      	add	r0, sp, #8
 8001440:	f018 fd7c 	bl	8019f3c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001444:	2400      	movs	r4, #0
 8001446:	4b1f      	ldr	r3, [pc, #124]	; (80014c4 <SystemClock_Config+0x98>)
 8001448:	9400      	str	r4, [sp, #0]
 800144a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800144c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001450:	641a      	str	r2, [r3, #64]	; 0x40
 8001452:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001454:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001458:	9300      	str	r3, [sp, #0]
 800145a:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800145c:	4b1a      	ldr	r3, [pc, #104]	; (80014c8 <SystemClock_Config+0x9c>)
 800145e:	9401      	str	r4, [sp, #4]
 8001460:	681a      	ldr	r2, [r3, #0]
 8001462:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001466:	601a      	str	r2, [r3, #0]
 8001468:	681b      	ldr	r3, [r3, #0]
 800146a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800146e:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001470:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001472:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001474:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001478:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800147c:	2502      	movs	r5, #2
 800147e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001482:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001484:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001488:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800148c:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001490:	2004      	movs	r0, #4
 8001492:	2306      	movs	r3, #6
 8001494:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001498:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800149a:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800149c:	f004 fdaa 	bl	8005ff4 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80014a0:	f003 fffe 	bl	80054a0 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014a4:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014a6:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014aa:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014ac:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014b0:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014b4:	2105      	movs	r1, #5
 80014b6:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014b8:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014bc:	f004 fb6e 	bl	8005b9c <HAL_RCC_ClockConfig>
}
 80014c0:	b015      	add	sp, #84	; 0x54
 80014c2:	bd30      	pop	{r4, r5, pc}
 80014c4:	40023800 	.word	0x40023800
 80014c8:	40007000 	.word	0x40007000

080014cc <main>:
{
 80014cc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014d0:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 80014d2:	f002 f9cb 	bl	800386c <HAL_Init>
  SystemClock_Config();
 80014d6:	f7ff ffa9 	bl	800142c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014da:	2214      	movs	r2, #20
 80014dc:	2100      	movs	r1, #0
 80014de:	a82d      	add	r0, sp, #180	; 0xb4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014e0:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014e2:	f018 fd2b 	bl	8019f3c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014e6:	4bc8      	ldr	r3, [pc, #800]	; (8001808 <main+0x33c>)
 80014e8:	9403      	str	r4, [sp, #12]
 80014ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOG, MCU_ACTIVE_Pin|LED1_Pin, GPIO_PIN_RESET);
 80014ec:	48c7      	ldr	r0, [pc, #796]	; (800180c <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ee:	f042 0210 	orr.w	r2, r2, #16
 80014f2:	631a      	str	r2, [r3, #48]	; 0x30
 80014f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f6:	f002 0210 	and.w	r2, r2, #16
 80014fa:	9203      	str	r2, [sp, #12]
 80014fc:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014fe:	9404      	str	r4, [sp, #16]
 8001500:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001502:	f042 0202 	orr.w	r2, r2, #2
 8001506:	631a      	str	r2, [r3, #48]	; 0x30
 8001508:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150a:	f002 0202 	and.w	r2, r2, #2
 800150e:	9204      	str	r2, [sp, #16]
 8001510:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001512:	9405      	str	r4, [sp, #20]
 8001514:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001516:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800151a:	631a      	str	r2, [r3, #48]	; 0x30
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001522:	9205      	str	r2, [sp, #20]
 8001524:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001526:	9406      	str	r4, [sp, #24]
 8001528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152a:	f042 0208 	orr.w	r2, r2, #8
 800152e:	631a      	str	r2, [r3, #48]	; 0x30
 8001530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001532:	f002 0208 	and.w	r2, r2, #8
 8001536:	9206      	str	r2, [sp, #24]
 8001538:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800153a:	9407      	str	r4, [sp, #28]
 800153c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001542:	631a      	str	r2, [r3, #48]	; 0x30
 8001544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001546:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800154a:	9207      	str	r2, [sp, #28]
 800154c:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800154e:	9408      	str	r4, [sp, #32]
 8001550:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001552:	f042 0220 	orr.w	r2, r2, #32
 8001556:	631a      	str	r2, [r3, #48]	; 0x30
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f002 0220 	and.w	r2, r2, #32
 800155e:	9208      	str	r2, [sp, #32]
 8001560:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001562:	9409      	str	r4, [sp, #36]	; 0x24
 8001564:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001566:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800156a:	631a      	str	r2, [r3, #48]	; 0x30
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001572:	9209      	str	r2, [sp, #36]	; 0x24
 8001574:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001576:	940a      	str	r4, [sp, #40]	; 0x28
 8001578:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800157e:	631a      	str	r2, [r3, #48]	; 0x30
 8001580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001582:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001586:	920a      	str	r2, [sp, #40]	; 0x28
 8001588:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800158a:	940b      	str	r4, [sp, #44]	; 0x2c
 800158c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158e:	f042 0204 	orr.w	r2, r2, #4
 8001592:	631a      	str	r2, [r3, #48]	; 0x30
 8001594:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001596:	f002 0204 	and.w	r2, r2, #4
 800159a:	920b      	str	r2, [sp, #44]	; 0x2c
 800159c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800159e:	940c      	str	r4, [sp, #48]	; 0x30
 80015a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015a2:	f042 0201 	orr.w	r2, r2, #1
 80015a6:	631a      	str	r2, [r3, #48]	; 0x30
 80015a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015aa:	f002 0201 	and.w	r2, r2, #1
 80015ae:	920c      	str	r2, [sp, #48]	; 0x30
 80015b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015b2:	940d      	str	r4, [sp, #52]	; 0x34
 80015b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015b6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80015ba:	631a      	str	r2, [r3, #48]	; 0x30
 80015bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015be:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(GPIOG, MCU_ACTIVE_Pin|LED1_Pin, GPIO_PIN_RESET);
 80015c2:	4622      	mov	r2, r4
 80015c4:	f44f 5182 	mov.w	r1, #4160	; 0x1040
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015c8:	930d      	str	r3, [sp, #52]	; 0x34
 80015ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(GPIOG, MCU_ACTIVE_Pin|LED1_Pin, GPIO_PIN_RESET);
 80015cc:	f003 f964 	bl	8004898 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015d0:	488f      	ldr	r0, [pc, #572]	; (8001810 <main+0x344>)
 80015d2:	2201      	movs	r2, #1
 80015d4:	2108      	movs	r1, #8
 80015d6:	f003 f95f 	bl	8004898 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015da:	4622      	mov	r2, r4
 80015dc:	488d      	ldr	r0, [pc, #564]	; (8001814 <main+0x348>)
 80015de:	2146      	movs	r1, #70	; 0x46
 80015e0:	f003 f95a 	bl	8004898 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015e4:	4622      	mov	r2, r4
 80015e6:	488c      	ldr	r0, [pc, #560]	; (8001818 <main+0x34c>)
 80015e8:	2180      	movs	r1, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015ea:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015ec:	f003 f954 	bl	8004898 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015f0:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80015f8:	4884      	ldr	r0, [pc, #528]	; (800180c <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015fa:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80015fc:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015fe:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001602:	2511      	movs	r5, #17
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001604:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001608:	f002 ffb8 	bl	800457c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 800160c:	2208      	movs	r2, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800160e:	4880      	ldr	r0, [pc, #512]	; (8001810 <main+0x344>)
 8001610:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001612:	e9cd 252d 	strd	r2, r5, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001616:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800161a:	f002 ffaf 	bl	800457c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED1_Pin;
 800161e:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(LED1_GPIO_Port, &GPIO_InitStruct);
 8001620:	487a      	ldr	r0, [pc, #488]	; (800180c <main+0x340>)
 8001622:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001624:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001628:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(LED1_GPIO_Port, &GPIO_InitStruct);
 800162c:	f002 ffa6 	bl	800457c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8001630:	2246      	movs	r2, #70	; 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001632:	4878      	ldr	r0, [pc, #480]	; (8001814 <main+0x348>)
 8001634:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001636:	2780      	movs	r7, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001638:	e9cd 262d 	strd	r2, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800163c:	e9cd 482f 	strd	r4, r8, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001640:	f002 ff9c 	bl	800457c <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001644:	a92d      	add	r1, sp, #180	; 0xb4
 8001646:	4874      	ldr	r0, [pc, #464]	; (8001818 <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001648:	e9cd 752d 	strd	r7, r5, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800164c:	e9cd 482f 	strd	r4, r8, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001650:	f002 ff94 	bl	800457c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001654:	4871      	ldr	r0, [pc, #452]	; (800181c <main+0x350>)
  hdma2d.Instance = DMA2D;
 8001656:	4d72      	ldr	r5, [pc, #456]	; (8001820 <main+0x354>)
  hcrc.Instance = CRC;
 8001658:	4a72      	ldr	r2, [pc, #456]	; (8001824 <main+0x358>)
 800165a:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800165c:	f002 f9ac 	bl	80039b8 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001660:	4a71      	ldr	r2, [pc, #452]	; (8001828 <main+0x35c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001662:	e9c5 440a 	strd	r4, r4, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001666:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800166a:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 800166c:	e9c5 2400 	strd	r2, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001670:	e9c5 4402 	strd	r4, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001674:	f002 fab4 	bl	8003be0 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001678:	4631      	mov	r1, r6
 800167a:	4628      	mov	r0, r5
 800167c:	f002 fb68 	bl	8003d50 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001680:	4622      	mov	r2, r4
 8001682:	4639      	mov	r1, r7
 8001684:	4864      	ldr	r0, [pc, #400]	; (8001818 <main+0x34c>)
  hdsi.Instance = DSI;
 8001686:	4d69      	ldr	r5, [pc, #420]	; (800182c <main+0x360>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001688:	f003 f906 	bl	8004898 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800168c:	2014      	movs	r0, #20
 800168e:	f002 f919 	bl	80038c4 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001692:	4639      	mov	r1, r7
 8001694:	4632      	mov	r2, r6
 8001696:	4860      	ldr	r0, [pc, #384]	; (8001818 <main+0x34c>)
 8001698:	f003 f8fe 	bl	8004898 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 800169c:	200a      	movs	r0, #10
 800169e:	f002 f911 	bl	80038c4 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80016a2:	4621      	mov	r1, r4
 80016a4:	2224      	movs	r2, #36	; 0x24
 80016a6:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 80016a8:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80016aa:	f018 fc47 	bl	8019f3c <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80016ae:	4621      	mov	r1, r4
 80016b0:	2218      	movs	r2, #24
 80016b2:	a811      	add	r0, sp, #68	; 0x44
 80016b4:	f018 fc42 	bl	8019f3c <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80016b8:	4621      	mov	r1, r4
 80016ba:	2234      	movs	r2, #52	; 0x34
 80016bc:	a82d      	add	r0, sp, #180	; 0xb4
 80016be:	f018 fc3d 	bl	8019f3c <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80016c2:	4621      	mov	r1, r4
 80016c4:	222c      	movs	r2, #44	; 0x2c
 80016c6:	eb0d 0007 	add.w	r0, sp, r7
 80016ca:	f018 fc37 	bl	8019f3c <memset>
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016ce:	2702      	movs	r7, #2
  hdsi.Instance = DSI;
 80016d0:	4a57      	ldr	r2, [pc, #348]	; (8001830 <main+0x364>)
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016d2:	217d      	movs	r1, #125	; 0x7d
  hdsi.Init.TXEscapeCkdiv = 4;
 80016d4:	f04f 0904 	mov.w	r9, #4
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016d8:	e9cd 170e 	strd	r1, r7, [sp, #56]	; 0x38
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016dc:	4628      	mov	r0, r5
 80016de:	a90e      	add	r1, sp, #56	; 0x38
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 80016e0:	e9c5 2400 	strd	r2, r4, [r5]
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016e4:	e9c5 9602 	strd	r9, r6, [r5, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016e8:	f002 fbfa 	bl	8003ee0 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016ec:	a917      	add	r1, sp, #92	; 0x5c
 80016ee:	4628      	mov	r0, r5
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016f0:	e9cd 6417 	strd	r6, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016f4:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016f8:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016fc:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8001700:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001702:	f002 fe19 	bl	8004338 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8001706:	231c      	movs	r3, #28
 8001708:	2121      	movs	r1, #33	; 0x21
  PhyTimings.DataLaneLP2HSTime = 25;
 800170a:	220f      	movs	r2, #15
  PhyTimings.ClockLaneLP2HSTime = 33;
 800170c:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8001710:	2119      	movs	r1, #25
 8001712:	e9cd 2113 	strd	r2, r1, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001716:	4628      	mov	r0, r5
 8001718:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 800171a:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800171e:	f002 fdce 	bl	80042be <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8001722:	4649      	mov	r1, r9
 8001724:	4628      	mov	r0, r5
 8001726:	f002 fdb9 	bl	800429c <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 800172a:	f242 7110 	movw	r1, #10000	; 0x2710
 800172e:	4628      	mov	r0, r5
 8001730:	f002 ff0d 	bl	800454e <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001734:	4621      	mov	r1, r4
 8001736:	4628      	mov	r0, r5
 8001738:	f002 fb6f 	bl	8003e1a <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 800173c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001740:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001744:	e9cd 012d 	strd	r0, r1, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001748:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 800174c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001750:	e9cd a12f 	strd	sl, r1, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001754:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001758:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800175c:	e9cd 3131 	strd	r3, r1, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001760:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001764:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001768:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 800176c:	e9cd 3133 	strd	r3, r1, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001770:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001774:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001778:	e9cd c135 	strd	ip, r1, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800177c:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001780:	e9cd e137 	strd	lr, r1, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001784:	4628      	mov	r0, r5
 8001786:	a92d      	add	r1, sp, #180	; 0xb4
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001788:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 800178c:	9739      	str	r7, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800178e:	f002 fd51 	bl	8004234 <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001792:	2310      	movs	r3, #16
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001794:	a920      	add	r1, sp, #128	; 0x80
 8001796:	4628      	mov	r0, r5
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001798:	e9cd b322 	strd	fp, r3, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 800179c:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 80017a0:	e9cd 4924 	strd	r4, r9, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 80017a4:	e9cd 7426 	strd	r7, r4, [sp, #152]	; 0x98
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 80017a8:	e9cd 4428 	strd	r4, r4, [sp, #160]	; 0xa0
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 80017ac:	962a      	str	r6, [sp, #168]	; 0xa8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 80017ae:	f002 fccf 	bl	8004150 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 80017b2:	4621      	mov	r1, r4
 80017b4:	4628      	mov	r0, r5
 80017b6:	f002 fcba 	bl	800412e <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80017ba:	481e      	ldr	r0, [pc, #120]	; (8001834 <main+0x368>)
 80017bc:	491e      	ldr	r1, [pc, #120]	; (8001838 <main+0x36c>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 80017be:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80017c0:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017c4:	2340      	movs	r3, #64	; 0x40
 80017c6:	2120      	movs	r1, #32
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017c8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017cc:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80017d0:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017d4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80017d8:	e9c0 2309 	strd	r2, r3, [r0, #36]	; 0x24
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80017dc:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 80017e0:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017e2:	a92d      	add	r1, sp, #180	; 0xb4
  SdramTiming.WriteRecoveryTime = 3;
 80017e4:	e9cd 3830 	strd	r3, r8, [sp, #192]	; 0xc0
  SdramTiming.SelfRefreshTime = 4;
 80017e8:	e9cd 392e 	strd	r3, r9, [sp, #184]	; 0xb8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017ec:	e9c0 4902 	strd	r4, r9, [r0, #8]
  SdramTiming.RCDDelay = 2;
 80017f0:	e9cd 7732 	strd	r7, r7, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 80017f4:	972d      	str	r7, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017f6:	f004 fdb7 	bl	8006368 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017fa:	f001 ff65 	bl	80036c8 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017fe:	f001 ff15 	bl	800362c <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001802:	2234      	movs	r2, #52	; 0x34
 8001804:	4621      	mov	r1, r4
 8001806:	e019      	b.n	800183c <main+0x370>
 8001808:	40023800 	.word	0x40023800
 800180c:	40021800 	.word	0x40021800
 8001810:	40022800 	.word	0x40022800
 8001814:	40020000 	.word	0x40020000
 8001818:	40021c00 	.word	0x40021c00
 800181c:	2000127c 	.word	0x2000127c
 8001820:	20001284 	.word	0x20001284
 8001824:	40023000 	.word	0x40023000
 8001828:	4002b000 	.word	0x4002b000
 800182c:	200012c4 	.word	0x200012c4
 8001830:	40016c00 	.word	0x40016c00
 8001834:	20001428 	.word	0x20001428
 8001838:	a0000140 	.word	0xa0000140
 800183c:	a820      	add	r0, sp, #128	; 0x80
 800183e:	f018 fb7d 	bl	8019f3c <memset>
  hltdc.Instance = LTDC;
 8001842:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 80019ec <main+0x520>
 8001846:	4b5d      	ldr	r3, [pc, #372]	; (80019bc <main+0x4f0>)
  hltdc.Init.Backcolor.Blue = 0;
 8001848:	f8a8 4034 	strh.w	r4, [r8, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800184c:	e9c8 3400 	strd	r3, r4, [r8]
  hltdc.Init.AccumulatedActiveH = 482;
 8001850:	21ca      	movs	r1, #202	; 0xca
 8001852:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 8001856:	e9c8 1309 	strd	r1, r3, [r8, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 800185a:	20cb      	movs	r0, #203	; 0xcb
 800185c:	f240 13e3 	movw	r3, #483	; 0x1e3
 8001860:	e9c8 030b 	strd	r0, r3, [r8, #44]	; 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001864:	4640      	mov	r0, r8
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001866:	e9c8 4402 	strd	r4, r4, [r8, #8]
  hltdc.Init.HorizontalSync = 1;
 800186a:	e9c8 4604 	strd	r4, r6, [r8, #16]
  hltdc.Init.Backcolor.Red = 0;
 800186e:	f888 4036 	strb.w	r4, [r8, #54]	; 0x36
  hltdc.Init.AccumulatedHBP = 2;
 8001872:	e9c8 6706 	strd	r6, r7, [r8, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001876:	f8c8 7020 	str.w	r7, [r8, #32]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800187a:	f003 fcdb 	bl	8005234 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800187e:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001880:	f04f 0c05 	mov.w	ip, #5
  pLayerCfg.Alpha0 = 0;
 8001884:	e9cd 2425 	strd	r2, r4, [sp, #148]	; 0x94
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001888:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
 800188c:	e9cd c228 	strd	ip, r2, [sp, #160]	; 0xa0
  pLayerCfg.WindowY1 = 480;
 8001890:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001894:	4622      	mov	r2, r4
 8001896:	a920      	add	r1, sp, #128	; 0x80
 8001898:	4640      	mov	r0, r8
  pLayerCfg.WindowX1 = 200;
 800189a:	e9cd 4b20 	strd	r4, fp, [sp, #128]	; 0x80
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800189e:	e9cd 3723 	strd	r3, r7, [sp, #140]	; 0x8c
  pLayerCfg.ImageHeight = 480;
 80018a2:	e9cd b32a 	strd	fp, r3, [sp, #168]	; 0xa8
  pLayerCfg.WindowY0 = 0;
 80018a6:	9422      	str	r4, [sp, #136]	; 0x88
  pLayerCfg.Backcolor.Blue = 0;
 80018a8:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 80018ac:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80018b0:	f8cd a09c 	str.w	sl, [sp, #156]	; 0x9c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018b4:	f003 fd8a 	bl	80053cc <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 80018b8:	f8d8 2000 	ldr.w	r2, [r8]
 80018bc:	6993      	ldr	r3, [r2, #24]
 80018be:	f023 0301 	bic.w	r3, r3, #1
 80018c2:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 80018c4:	4628      	mov	r0, r5
 80018c6:	f002 fd9d 	bl	8004404 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 80018ca:	4631      	mov	r1, r6
 80018cc:	4638      	mov	r0, r7
 80018ce:	f001 f871 	bl	80029b4 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 80018d2:	2328      	movs	r3, #40	; 0x28
 80018d4:	2215      	movs	r2, #21
 80018d6:	4621      	mov	r1, r4
 80018d8:	9400      	str	r4, [sp, #0]
 80018da:	4628      	mov	r0, r5
 80018dc:	f002 fdc5 	bl	800446a <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018e0:	a92d      	add	r1, sp, #180	; 0xb4
 80018e2:	4628      	mov	r0, r5
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 80018e4:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 80018e8:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 80018ec:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018f0:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018f4:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018f8:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018fa:	f002 fc9b 	bl	8004234 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018fe:	f44f 7148 	mov.w	r1, #800	; 0x320
 8001902:	4622      	mov	r2, r4
 8001904:	4640      	mov	r0, r8
 8001906:	f003 fd8f 	bl	8005428 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 800190a:	f8d8 2000 	ldr.w	r2, [r8]
  hqspi.Instance = QUADSPI;
 800190e:	482c      	ldr	r0, [pc, #176]	; (80019c0 <main+0x4f4>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001910:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 8001912:	4d2c      	ldr	r5, [pc, #176]	; (80019c4 <main+0x4f8>)
  hi2c1.Init.ClockSpeed = 400000;
 8001914:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80019f0 <main+0x524>
  hqspi.Init.FifoThreshold = 1;
 8001918:	6086      	str	r6, [r0, #8]
  __HAL_LTDC_ENABLE(&hltdc);
 800191a:	4333      	orrs	r3, r6
 800191c:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 800191e:	4b2a      	ldr	r3, [pc, #168]	; (80019c8 <main+0x4fc>)
  hqspi.Init.FlashSize = 27;
 8001920:	f04f 0e10 	mov.w	lr, #16
  hqspi.Init.ClockPrescaler = 1;
 8001924:	e9c0 3600 	strd	r3, r6, [r0]
  hqspi.Init.FlashSize = 27;
 8001928:	231b      	movs	r3, #27
 800192a:	e9c0 e303 	strd	lr, r3, [r0, #12]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 800192e:	e9c0 a405 	strd	sl, r4, [r0, #20]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001932:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001936:	f003 fec1 	bl	80056bc <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 800193a:	f001 fd3d 	bl	80033b8 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 800193e:	f001 fc71 	bl	8003224 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001942:	f001 fbe7 	bl	8003114 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 8001946:	4b21      	ldr	r3, [pc, #132]	; (80019cc <main+0x500>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001948:	622c      	str	r4, [r5, #32]
  hi2c1.Init.ClockSpeed = 400000;
 800194a:	e9c5 8300 	strd	r8, r3, [r5]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800194e:	4628      	mov	r0, r5
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001950:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001954:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 8001958:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800195c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001960:	f003 f984 	bl	8004c6c <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001964:	4628      	mov	r0, r5
 8001966:	f003 fa29 	bl	8004dbc <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 800196a:	f7fe fe44 	bl	80005f6 <MX_TouchGFX_Init>
  osKernelInitialize();
 800196e:	f004 ff93 	bl	8006898 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001972:	4621      	mov	r1, r4
 8001974:	4a16      	ldr	r2, [pc, #88]	; (80019d0 <main+0x504>)
 8001976:	4817      	ldr	r0, [pc, #92]	; (80019d4 <main+0x508>)
 8001978:	f004 ffba 	bl	80068f0 <osThreadNew>
 800197c:	4b16      	ldr	r3, [pc, #88]	; (80019d8 <main+0x50c>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800197e:	4a17      	ldr	r2, [pc, #92]	; (80019dc <main+0x510>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001980:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001982:	4621      	mov	r1, r4
 8001984:	4816      	ldr	r0, [pc, #88]	; (80019e0 <main+0x514>)
	  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 1);
 8001986:	4c17      	ldr	r4, [pc, #92]	; (80019e4 <main+0x518>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001988:	f004 ffb2 	bl	80068f0 <osThreadNew>
 800198c:	4b16      	ldr	r3, [pc, #88]	; (80019e8 <main+0x51c>)
 800198e:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001990:	f004 ff94 	bl	80068bc <osKernelStart>
	  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 1);
 8001994:	2201      	movs	r2, #1
 8001996:	2140      	movs	r1, #64	; 0x40
 8001998:	4620      	mov	r0, r4
 800199a:	f002 ff7d 	bl	8004898 <HAL_GPIO_WritePin>
	  HAL_Delay(1000);
 800199e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80019a2:	f001 ff8f 	bl	80038c4 <HAL_Delay>
	  HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, 0);
 80019a6:	4620      	mov	r0, r4
 80019a8:	2200      	movs	r2, #0
 80019aa:	2140      	movs	r1, #64	; 0x40
 80019ac:	f002 ff74 	bl	8004898 <HAL_GPIO_WritePin>
	  HAL_Delay(1000);
 80019b0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80019b4:	f001 ff86 	bl	80038c4 <HAL_Delay>
  while (1)
 80019b8:	e7ec      	b.n	8001994 <main+0x4c8>
 80019ba:	bf00      	nop
 80019bc:	40016800 	.word	0x40016800
 80019c0:	200013dc 	.word	0x200013dc
 80019c4:	200012e0 	.word	0x200012e0
 80019c8:	a0001000 	.word	0xa0001000
 80019cc:	00061a80 	.word	0x00061a80
 80019d0:	0801b680 	.word	0x0801b680
 80019d4:	08001421 	.word	0x08001421
 80019d8:	20001278 	.word	0x20001278
 80019dc:	0801b65c 	.word	0x0801b65c
 80019e0:	080005fb 	.word	0x080005fb
 80019e4:	40021800 	.word	0x40021800
 80019e8:	20001274 	.word	0x20001274
 80019ec:	20001334 	.word	0x20001334
 80019f0:	40005400 	.word	0x40005400

080019f4 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80019f4:	6802      	ldr	r2, [r0, #0]
 80019f6:	4b03      	ldr	r3, [pc, #12]	; (8001a04 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80019f8:	429a      	cmp	r2, r3
 80019fa:	d101      	bne.n	8001a00 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80019fc:	f001 bf50 	b.w	80038a0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001a00:	4770      	bx	lr
 8001a02:	bf00      	nop
 8001a04:	40001000 	.word	0x40001000

08001a08 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001a08:	4770      	bx	lr
	...

08001a0c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a0c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a0e:	4b0e      	ldr	r3, [pc, #56]	; (8001a48 <HAL_MspInit+0x3c>)
 8001a10:	2200      	movs	r2, #0
 8001a12:	9200      	str	r2, [sp, #0]
 8001a14:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a16:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001a1a:	6459      	str	r1, [r3, #68]	; 0x44
 8001a1c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a1e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001a22:	9100      	str	r1, [sp, #0]
 8001a24:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a26:	9201      	str	r2, [sp, #4]
 8001a28:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001a2a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001a2e:	6419      	str	r1, [r3, #64]	; 0x40
 8001a30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a32:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a36:	9301      	str	r3, [sp, #4]
 8001a38:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a3a:	210f      	movs	r1, #15
 8001a3c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a40:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a42:	f001 bf65 	b.w	8003910 <HAL_NVIC_SetPriority>
 8001a46:	bf00      	nop
 8001a48:	40023800 	.word	0x40023800

08001a4c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a4c:	6802      	ldr	r2, [r0, #0]
 8001a4e:	4b09      	ldr	r3, [pc, #36]	; (8001a74 <HAL_CRC_MspInit+0x28>)
 8001a50:	429a      	cmp	r2, r3
{
 8001a52:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a54:	d10b      	bne.n	8001a6e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a56:	2300      	movs	r3, #0
 8001a58:	9301      	str	r3, [sp, #4]
 8001a5a:	4b07      	ldr	r3, [pc, #28]	; (8001a78 <HAL_CRC_MspInit+0x2c>)
 8001a5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a5e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a62:	631a      	str	r2, [r3, #48]	; 0x30
 8001a64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a66:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a6a:	9301      	str	r3, [sp, #4]
 8001a6c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a6e:	b002      	add	sp, #8
 8001a70:	4770      	bx	lr
 8001a72:	bf00      	nop
 8001a74:	40023000 	.word	0x40023000
 8001a78:	40023800 	.word	0x40023800

08001a7c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a7c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a7e:	4b0f      	ldr	r3, [pc, #60]	; (8001abc <HAL_DMA2D_MspInit+0x40>)
 8001a80:	6802      	ldr	r2, [r0, #0]
 8001a82:	429a      	cmp	r2, r3
 8001a84:	d116      	bne.n	8001ab4 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a86:	2200      	movs	r2, #0
 8001a88:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a8c:	9201      	str	r2, [sp, #4]
 8001a8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a90:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a94:	6319      	str	r1, [r3, #48]	; 0x30
 8001a96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a98:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a9c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a9e:	2105      	movs	r1, #5
 8001aa0:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001aa2:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001aa4:	f001 ff34 	bl	8003910 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001aa8:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001aaa:	b003      	add	sp, #12
 8001aac:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ab0:	f001 bf60 	b.w	8003974 <HAL_NVIC_EnableIRQ>
}
 8001ab4:	b003      	add	sp, #12
 8001ab6:	f85d fb04 	ldr.w	pc, [sp], #4
 8001aba:	bf00      	nop
 8001abc:	4002b000 	.word	0x4002b000

08001ac0 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001ac0:	b510      	push	{r4, lr}
 8001ac2:	4604      	mov	r4, r0
 8001ac4:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ac6:	2214      	movs	r2, #20
 8001ac8:	2100      	movs	r1, #0
 8001aca:	a803      	add	r0, sp, #12
 8001acc:	f018 fa36 	bl	8019f3c <memset>
  if(hdsi->Instance==DSI)
 8001ad0:	6822      	ldr	r2, [r4, #0]
 8001ad2:	4b17      	ldr	r3, [pc, #92]	; (8001b30 <HAL_DSI_MspInit+0x70>)
 8001ad4:	429a      	cmp	r2, r3
 8001ad6:	d128      	bne.n	8001b2a <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ad8:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001adc:	2400      	movs	r4, #0
 8001ade:	9401      	str	r4, [sp, #4]
 8001ae0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ae2:	4814      	ldr	r0, [pc, #80]	; (8001b34 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ae4:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001ae8:	645a      	str	r2, [r3, #68]	; 0x44
 8001aea:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001aec:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001af0:	9201      	str	r2, [sp, #4]
 8001af2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001af4:	9402      	str	r4, [sp, #8]
 8001af6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001af8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001afc:	631a      	str	r2, [r3, #48]	; 0x30
 8001afe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b00:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001b04:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b06:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001b08:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b0a:	2302      	movs	r3, #2
 8001b0c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b10:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001b12:	230d      	movs	r3, #13
 8001b14:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b16:	f002 fd31 	bl	800457c <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001b1a:	205c      	movs	r0, #92	; 0x5c
 8001b1c:	4622      	mov	r2, r4
 8001b1e:	2105      	movs	r1, #5
 8001b20:	f001 fef6 	bl	8003910 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001b24:	205c      	movs	r0, #92	; 0x5c
 8001b26:	f001 ff25 	bl	8003974 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001b2a:	b008      	add	sp, #32
 8001b2c:	bd10      	pop	{r4, pc}
 8001b2e:	bf00      	nop
 8001b30:	40016c00 	.word	0x40016c00
 8001b34:	40022400 	.word	0x40022400

08001b38 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b38:	b530      	push	{r4, r5, lr}
 8001b3a:	4604      	mov	r4, r0
 8001b3c:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b3e:	2214      	movs	r2, #20
 8001b40:	2100      	movs	r1, #0
 8001b42:	a803      	add	r0, sp, #12
 8001b44:	f018 f9fa 	bl	8019f3c <memset>
  if(hi2c->Instance==I2C1)
 8001b48:	6822      	ldr	r2, [r4, #0]
 8001b4a:	4b1a      	ldr	r3, [pc, #104]	; (8001bb4 <HAL_I2C_MspInit+0x7c>)
 8001b4c:	429a      	cmp	r2, r3
 8001b4e:	d12f      	bne.n	8001bb0 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b50:	4c19      	ldr	r4, [pc, #100]	; (8001bb8 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b52:	481a      	ldr	r0, [pc, #104]	; (8001bbc <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b54:	2500      	movs	r5, #0
 8001b56:	9501      	str	r5, [sp, #4]
 8001b58:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b5a:	f043 0302 	orr.w	r3, r3, #2
 8001b5e:	6323      	str	r3, [r4, #48]	; 0x30
 8001b60:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b62:	f003 0302 	and.w	r3, r3, #2
 8001b66:	9301      	str	r3, [sp, #4]
 8001b68:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b6a:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b6e:	2312      	movs	r3, #18
 8001b70:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b74:	2101      	movs	r1, #1
 8001b76:	2303      	movs	r3, #3
 8001b78:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b7c:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b7e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b80:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b82:	f002 fcfb 	bl	800457c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b86:	9502      	str	r5, [sp, #8]
 8001b88:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b8a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b8e:	6423      	str	r3, [r4, #64]	; 0x40
 8001b90:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b92:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b96:	9302      	str	r3, [sp, #8]
 8001b98:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b9a:	6a23      	ldr	r3, [r4, #32]
 8001b9c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001ba0:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001ba2:	6a23      	ldr	r3, [r4, #32]
 8001ba4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001ba8:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001baa:	2064      	movs	r0, #100	; 0x64
 8001bac:	f001 fe8a 	bl	80038c4 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001bb0:	b009      	add	sp, #36	; 0x24
 8001bb2:	bd30      	pop	{r4, r5, pc}
 8001bb4:	40005400 	.word	0x40005400
 8001bb8:	40023800 	.word	0x40023800
 8001bbc:	40020400 	.word	0x40020400

08001bc0 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001bc0:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001bc2:	6802      	ldr	r2, [r0, #0]
 8001bc4:	4b0a      	ldr	r3, [pc, #40]	; (8001bf0 <HAL_I2C_MspDeInit+0x30>)
 8001bc6:	429a      	cmp	r2, r3
 8001bc8:	d110      	bne.n	8001bec <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bca:	4a0a      	ldr	r2, [pc, #40]	; (8001bf4 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bcc:	480a      	ldr	r0, [pc, #40]	; (8001bf8 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bce:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001bd0:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001bd4:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bd6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001bda:	f002 fdb5 	bl	8004748 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001bde:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001be2:	4805      	ldr	r0, [pc, #20]	; (8001bf8 <HAL_I2C_MspDeInit+0x38>)
 8001be4:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001be8:	f002 bdae 	b.w	8004748 <HAL_GPIO_DeInit>
}
 8001bec:	bd08      	pop	{r3, pc}
 8001bee:	bf00      	nop
 8001bf0:	40005400 	.word	0x40005400
 8001bf4:	40023800 	.word	0x40023800
 8001bf8:	40020400 	.word	0x40020400

08001bfc <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001bfc:	b510      	push	{r4, lr}
 8001bfe:	4604      	mov	r4, r0
 8001c00:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001c02:	223c      	movs	r2, #60	; 0x3c
 8001c04:	2100      	movs	r1, #0
 8001c06:	a801      	add	r0, sp, #4
 8001c08:	f018 f998 	bl	8019f3c <memset>
  if(hltdc->Instance==LTDC)
 8001c0c:	6822      	ldr	r2, [r4, #0]
 8001c0e:	4b12      	ldr	r3, [pc, #72]	; (8001c58 <HAL_LTDC_MspInit+0x5c>)
 8001c10:	429a      	cmp	r2, r3
 8001c12:	d11f      	bne.n	8001c54 <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001c14:	2308      	movs	r3, #8
 8001c16:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001c18:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001c1c:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c1e:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001c20:	2306      	movs	r3, #6
 8001c22:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c24:	f004 f884 	bl	8005d30 <HAL_RCCEx_PeriphCLKConfig>
 8001c28:	b108      	cbz	r0, 8001c2e <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 8001c2a:	f7ff feed 	bl	8001a08 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c2e:	4b0b      	ldr	r3, [pc, #44]	; (8001c5c <HAL_LTDC_MspInit+0x60>)
 8001c30:	2200      	movs	r2, #0
 8001c32:	9200      	str	r2, [sp, #0]
 8001c34:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c36:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8001c3a:	6459      	str	r1, [r3, #68]	; 0x44
 8001c3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c3e:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c42:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c44:	2058      	movs	r0, #88	; 0x58
 8001c46:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c48:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c4a:	f001 fe61 	bl	8003910 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c4e:	2058      	movs	r0, #88	; 0x58
 8001c50:	f001 fe90 	bl	8003974 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c54:	b010      	add	sp, #64	; 0x40
 8001c56:	bd10      	pop	{r4, pc}
 8001c58:	40016800 	.word	0x40016800
 8001c5c:	40023800 	.word	0x40023800

08001c60 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c62:	4604      	mov	r4, r0
 8001c64:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c66:	2214      	movs	r2, #20
 8001c68:	2100      	movs	r1, #0
 8001c6a:	a803      	add	r0, sp, #12
 8001c6c:	f018 f966 	bl	8019f3c <memset>
  if(hqspi->Instance==QUADSPI)
 8001c70:	6822      	ldr	r2, [r4, #0]
 8001c72:	4b24      	ldr	r3, [pc, #144]	; (8001d04 <HAL_QSPI_MspInit+0xa4>)
 8001c74:	429a      	cmp	r2, r3
 8001c76:	d142      	bne.n	8001cfe <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c78:	4b23      	ldr	r3, [pc, #140]	; (8001d08 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c7a:	4824      	ldr	r0, [pc, #144]	; (8001d0c <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c7c:	2400      	movs	r4, #0
 8001c7e:	9400      	str	r4, [sp, #0]
 8001c80:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c82:	f042 0202 	orr.w	r2, r2, #2
 8001c86:	639a      	str	r2, [r3, #56]	; 0x38
 8001c88:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c8a:	f002 0202 	and.w	r2, r2, #2
 8001c8e:	9200      	str	r2, [sp, #0]
 8001c90:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c92:	9401      	str	r4, [sp, #4]
 8001c94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c96:	f042 0202 	orr.w	r2, r2, #2
 8001c9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c9e:	f002 0202 	and.w	r2, r2, #2
 8001ca2:	9201      	str	r2, [sp, #4]
 8001ca4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ca6:	9402      	str	r4, [sp, #8]
 8001ca8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001caa:	f042 0220 	orr.w	r2, r2, #32
 8001cae:	631a      	str	r2, [r3, #48]	; 0x30
 8001cb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cb2:	f003 0320 	and.w	r3, r3, #32
 8001cb6:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb8:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cba:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cbc:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cbe:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc0:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cc2:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc4:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cc8:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ccc:	f002 fc56 	bl	800457c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001cd0:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cd4:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cd8:	480d      	ldr	r0, [pc, #52]	; (8001d10 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cda:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cdc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cde:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ce0:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ce4:	f002 fc4a 	bl	800457c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001ce8:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cec:	4808      	ldr	r0, [pc, #32]	; (8001d10 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cee:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cf0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cf2:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cf6:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cfa:	f002 fc3f 	bl	800457c <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001cfe:	b009      	add	sp, #36	; 0x24
 8001d00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d02:	bf00      	nop
 8001d04:	a0001000 	.word	0xa0001000
 8001d08:	40023800 	.word	0x40023800
 8001d0c:	40020400 	.word	0x40020400
 8001d10:	40021400 	.word	0x40021400

08001d14 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001d14:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001d16:	6802      	ldr	r2, [r0, #0]
 8001d18:	4b09      	ldr	r3, [pc, #36]	; (8001d40 <HAL_QSPI_MspDeInit+0x2c>)
 8001d1a:	429a      	cmp	r2, r3
 8001d1c:	d10f      	bne.n	8001d3e <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d1e:	4a09      	ldr	r2, [pc, #36]	; (8001d44 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d20:	4809      	ldr	r0, [pc, #36]	; (8001d48 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d22:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001d24:	f023 0302 	bic.w	r3, r3, #2
 8001d28:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d2a:	2140      	movs	r1, #64	; 0x40
 8001d2c:	f002 fd0c 	bl	8004748 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001d30:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d34:	4805      	ldr	r0, [pc, #20]	; (8001d4c <HAL_QSPI_MspDeInit+0x38>)
 8001d36:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d3a:	f002 bd05 	b.w	8004748 <HAL_GPIO_DeInit>
}
 8001d3e:	bd08      	pop	{r3, pc}
 8001d40:	a0001000 	.word	0xa0001000
 8001d44:	40023800 	.word	0x40023800
 8001d48:	40020400 	.word	0x40020400
 8001d4c:	40021400 	.word	0x40021400

08001d50 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d52:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d54:	2300      	movs	r3, #0
 8001d56:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d58:	4b30      	ldr	r3, [pc, #192]	; (8001e1c <HAL_SDRAM_MspInit+0xcc>)
 8001d5a:	681c      	ldr	r4, [r3, #0]
 8001d5c:	2c00      	cmp	r4, #0
 8001d5e:	d15a      	bne.n	8001e16 <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8001d60:	2201      	movs	r2, #1
 8001d62:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d64:	4b2e      	ldr	r3, [pc, #184]	; (8001e20 <HAL_SDRAM_MspInit+0xd0>)
 8001d66:	9400      	str	r4, [sp, #0]
 8001d68:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d6a:	482e      	ldr	r0, [pc, #184]	; (8001e24 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d6c:	f042 0201 	orr.w	r2, r2, #1
 8001d70:	639a      	str	r2, [r3, #56]	; 0x38
 8001d72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001d74:	f003 0301 	and.w	r3, r3, #1
 8001d78:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d7a:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d7c:	2603      	movs	r6, #3
 8001d7e:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d80:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d82:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d84:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d88:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d8c:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d90:	f002 fbf4 	bl	800457c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d94:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d98:	4823      	ldr	r0, [pc, #140]	; (8001e28 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d9a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d9c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d9e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001da2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001da6:	f002 fbe9 	bl	800457c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001daa:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dae:	481f      	ldr	r0, [pc, #124]	; (8001e2c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001db0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001db2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001db4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001db8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dbc:	f002 fbde 	bl	800457c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001dc0:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001dc4:	481a      	ldr	r0, [pc, #104]	; (8001e30 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dc6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001dc8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dca:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dce:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001dd2:	f002 fbd3 	bl	800457c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001dd6:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dda:	4816      	ldr	r0, [pc, #88]	; (8001e34 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ddc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dde:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001de4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de8:	f002 fbc8 	bl	800457c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001dec:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001df0:	4811      	ldr	r0, [pc, #68]	; (8001e38 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001df2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001df4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001df6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dfa:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dfe:	f002 fbbd 	bl	800457c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001e02:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e04:	480d      	ldr	r0, [pc, #52]	; (8001e3c <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e06:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e08:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e0a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e0e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e12:	f002 fbb3 	bl	800457c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e16:	b007      	add	sp, #28
 8001e18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e1a:	bf00      	nop
 8001e1c:	20001460 	.word	0x20001460
 8001e20:	40023800 	.word	0x40023800
 8001e24:	40021000 	.word	0x40021000
 8001e28:	40021800 	.word	0x40021800
 8001e2c:	40020c00 	.word	0x40020c00
 8001e30:	40022000 	.word	0x40022000
 8001e34:	40021400 	.word	0x40021400
 8001e38:	40021c00 	.word	0x40021c00
 8001e3c:	40020800 	.word	0x40020800

08001e40 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e40:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e42:	4b17      	ldr	r3, [pc, #92]	; (8001ea0 <HAL_SDRAM_MspDeInit+0x60>)
 8001e44:	681a      	ldr	r2, [r3, #0]
 8001e46:	bb52      	cbnz	r2, 8001e9e <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e48:	2201      	movs	r2, #1
 8001e4a:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e4c:	4a15      	ldr	r2, [pc, #84]	; (8001ea4 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e4e:	4816      	ldr	r0, [pc, #88]	; (8001ea8 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e50:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e52:	f023 0301 	bic.w	r3, r3, #1
 8001e56:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e58:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001e5c:	f002 fc74 	bl	8004748 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001e60:	4812      	ldr	r0, [pc, #72]	; (8001eac <HAL_SDRAM_MspDeInit+0x6c>)
 8001e62:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e66:	f002 fc6f 	bl	8004748 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e6a:	4811      	ldr	r0, [pc, #68]	; (8001eb0 <HAL_SDRAM_MspDeInit+0x70>)
 8001e6c:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e70:	f002 fc6a 	bl	8004748 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e74:	480f      	ldr	r0, [pc, #60]	; (8001eb4 <HAL_SDRAM_MspDeInit+0x74>)
 8001e76:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e7a:	f002 fc65 	bl	8004748 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e7e:	480e      	ldr	r0, [pc, #56]	; (8001eb8 <HAL_SDRAM_MspDeInit+0x78>)
 8001e80:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e84:	f002 fc60 	bl	8004748 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e88:	480c      	ldr	r0, [pc, #48]	; (8001ebc <HAL_SDRAM_MspDeInit+0x7c>)
 8001e8a:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e8e:	f002 fc5b 	bl	8004748 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e92:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e96:	480a      	ldr	r0, [pc, #40]	; (8001ec0 <HAL_SDRAM_MspDeInit+0x80>)
 8001e98:	210d      	movs	r1, #13
 8001e9a:	f002 bc55 	b.w	8004748 <HAL_GPIO_DeInit>
}
 8001e9e:	bd08      	pop	{r3, pc}
 8001ea0:	2000145c 	.word	0x2000145c
 8001ea4:	40023800 	.word	0x40023800
 8001ea8:	40021000 	.word	0x40021000
 8001eac:	40021800 	.word	0x40021800
 8001eb0:	40020c00 	.word	0x40020c00
 8001eb4:	40022000 	.word	0x40022000
 8001eb8:	40021400 	.word	0x40021400
 8001ebc:	40021c00 	.word	0x40021c00
 8001ec0:	40020800 	.word	0x40020800

08001ec4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001ec4:	b530      	push	{r4, r5, lr}
 8001ec6:	4601      	mov	r1, r0
 8001ec8:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001eca:	2200      	movs	r2, #0
 8001ecc:	2036      	movs	r0, #54	; 0x36
 8001ece:	f001 fd1f 	bl	8003910 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ed2:	2036      	movs	r0, #54	; 0x36
 8001ed4:	f001 fd4e 	bl	8003974 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ed8:	2500      	movs	r5, #0
 8001eda:	4b15      	ldr	r3, [pc, #84]	; (8001f30 <HAL_InitTick+0x6c>)
 8001edc:	9502      	str	r5, [sp, #8]
 8001ede:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001ee0:	4c14      	ldr	r4, [pc, #80]	; (8001f34 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ee2:	f042 0210 	orr.w	r2, r2, #16
 8001ee6:	641a      	str	r2, [r3, #64]	; 0x40
 8001ee8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eea:	f003 0310 	and.w	r3, r3, #16
 8001eee:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ef0:	a901      	add	r1, sp, #4
 8001ef2:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ef4:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ef6:	f003 fefd 	bl	8005cf4 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001efa:	f003 feeb 	bl	8005cd4 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001efe:	4b0e      	ldr	r3, [pc, #56]	; (8001f38 <HAL_InitTick+0x74>)
 8001f00:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001f02:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f06:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001f08:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001f0a:	4b0c      	ldr	r3, [pc, #48]	; (8001f3c <HAL_InitTick+0x78>)
 8001f0c:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f10:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001f12:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f14:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001f16:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f18:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f1a:	f004 fbd1 	bl	80066c0 <HAL_TIM_Base_Init>
 8001f1e:	b920      	cbnz	r0, 8001f2a <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001f20:	4620      	mov	r0, r4
 8001f22:	f004 fa87 	bl	8006434 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f26:	b009      	add	sp, #36	; 0x24
 8001f28:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f2a:	2001      	movs	r0, #1
 8001f2c:	e7fb      	b.n	8001f26 <HAL_InitTick+0x62>
 8001f2e:	bf00      	nop
 8001f30:	40023800 	.word	0x40023800
 8001f34:	20001464 	.word	0x20001464
 8001f38:	40001000 	.word	0x40001000
 8001f3c:	000f4240 	.word	0x000f4240

08001f40 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f40:	4770      	bx	lr

08001f42 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f42:	e7fe      	b.n	8001f42 <HardFault_Handler>

08001f44 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f44:	e7fe      	b.n	8001f44 <MemManage_Handler>

08001f46 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f46:	e7fe      	b.n	8001f46 <BusFault_Handler>

08001f48 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f48:	e7fe      	b.n	8001f48 <UsageFault_Handler>

08001f4a <DebugMon_Handler>:
 8001f4a:	4770      	bx	lr

08001f4c <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f4c:	4801      	ldr	r0, [pc, #4]	; (8001f54 <TIM6_DAC_IRQHandler+0x8>)
 8001f4e:	f004 baaf 	b.w	80064b0 <HAL_TIM_IRQHandler>
 8001f52:	bf00      	nop
 8001f54:	20001464 	.word	0x20001464

08001f58 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f58:	4801      	ldr	r0, [pc, #4]	; (8001f60 <LTDC_IRQHandler+0x8>)
 8001f5a:	f003 b9da 	b.w	8005312 <HAL_LTDC_IRQHandler>
 8001f5e:	bf00      	nop
 8001f60:	20001334 	.word	0x20001334

08001f64 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f64:	4801      	ldr	r0, [pc, #4]	; (8001f6c <DMA2D_IRQHandler+0x8>)
 8001f66:	f001 be69 	b.w	8003c3c <HAL_DMA2D_IRQHandler>
 8001f6a:	bf00      	nop
 8001f6c:	20001284 	.word	0x20001284

08001f70 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f70:	4801      	ldr	r0, [pc, #4]	; (8001f78 <DSI_IRQHandler+0x8>)
 8001f72:	f002 b86a 	b.w	800404a <HAL_DSI_IRQHandler>
 8001f76:	bf00      	nop
 8001f78:	200012c4 	.word	0x200012c4

08001f7c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f7c:	2001      	movs	r0, #1
 8001f7e:	4770      	bx	lr

08001f80 <_kill>:

int _kill(int pid, int sig)
{
 8001f80:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f82:	f017 ff81 	bl	8019e88 <__errno>
 8001f86:	2316      	movs	r3, #22
 8001f88:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f8a:	f04f 30ff 	mov.w	r0, #4294967295
 8001f8e:	bd08      	pop	{r3, pc}

08001f90 <_exit>:

void _exit (int status)
{
 8001f90:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f92:	f017 ff79 	bl	8019e88 <__errno>
 8001f96:	2316      	movs	r3, #22
 8001f98:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f9a:	e7fe      	b.n	8001f9a <_exit+0xa>

08001f9c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f9c:	b570      	push	{r4, r5, r6, lr}
 8001f9e:	460d      	mov	r5, r1
 8001fa0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fa2:	460e      	mov	r6, r1
 8001fa4:	1b73      	subs	r3, r6, r5
 8001fa6:	429c      	cmp	r4, r3
 8001fa8:	dc01      	bgt.n	8001fae <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001faa:	4620      	mov	r0, r4
 8001fac:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001fae:	f3af 8000 	nop.w
 8001fb2:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fb6:	e7f5      	b.n	8001fa4 <_read+0x8>

08001fb8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001fb8:	b570      	push	{r4, r5, r6, lr}
 8001fba:	460d      	mov	r5, r1
 8001fbc:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fbe:	460e      	mov	r6, r1
 8001fc0:	1b73      	subs	r3, r6, r5
 8001fc2:	429c      	cmp	r4, r3
 8001fc4:	dc01      	bgt.n	8001fca <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001fc6:	4620      	mov	r0, r4
 8001fc8:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001fca:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001fce:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fd2:	e7f5      	b.n	8001fc0 <_write+0x8>

08001fd4 <_close>:

int _close(int file)
{
	return -1;
}
 8001fd4:	f04f 30ff 	mov.w	r0, #4294967295
 8001fd8:	4770      	bx	lr

08001fda <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fda:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fde:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fe0:	2000      	movs	r0, #0
 8001fe2:	4770      	bx	lr

08001fe4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fe4:	2001      	movs	r0, #1
 8001fe6:	4770      	bx	lr

08001fe8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fe8:	2000      	movs	r0, #0
 8001fea:	4770      	bx	lr

08001fec <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fec:	4a0a      	ldr	r2, [pc, #40]	; (8002018 <_sbrk+0x2c>)
 8001fee:	6811      	ldr	r1, [r2, #0]
{
 8001ff0:	b508      	push	{r3, lr}
 8001ff2:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001ff4:	b909      	cbnz	r1, 8001ffa <_sbrk+0xe>
		heap_end = &end;
 8001ff6:	4909      	ldr	r1, [pc, #36]	; (800201c <_sbrk+0x30>)
 8001ff8:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001ffa:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001ffc:	4669      	mov	r1, sp
 8001ffe:	4403      	add	r3, r0
 8002000:	428b      	cmp	r3, r1
 8002002:	d906      	bls.n	8002012 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002004:	f017 ff40 	bl	8019e88 <__errno>
 8002008:	230c      	movs	r3, #12
 800200a:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800200c:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002010:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002012:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002014:	e7fc      	b.n	8002010 <_sbrk+0x24>
 8002016:	bf00      	nop
 8002018:	200014ac 	.word	0x200014ac
 800201c:	2000a740 	.word	0x2000a740

08002020 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002020:	4770      	bx	lr

08002022 <_ZN23ApplicationFontProviderD0Ev>:
 8002022:	b510      	push	{r4, lr}
 8002024:	2104      	movs	r1, #4
 8002026:	4604      	mov	r4, r0
 8002028:	f017 fecd 	bl	8019dc6 <_ZdlPvj>
 800202c:	4620      	mov	r0, r4
 800202e:	bd10      	pop	{r4, pc}

08002030 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002030:	2901      	cmp	r1, #1
{
 8002032:	b508      	push	{r3, lr}
    switch (typography)
 8002034:	d006      	beq.n	8002044 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002036:	2902      	cmp	r1, #2
 8002038:	d008      	beq.n	800204c <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800203a:	b959      	cbnz	r1, 8002054 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800203c:	f000 fbd2 	bl	80027e4 <_ZN17TypedTextDatabase8getFontsEv>
 8002040:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002042:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002044:	f000 fbce 	bl	80027e4 <_ZN17TypedTextDatabase8getFontsEv>
 8002048:	6840      	ldr	r0, [r0, #4]
 800204a:	e7fa      	b.n	8002042 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800204c:	f000 fbca 	bl	80027e4 <_ZN17TypedTextDatabase8getFontsEv>
 8002050:	6880      	ldr	r0, [r0, #8]
 8002052:	e7f6      	b.n	8002042 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002054:	2000      	movs	r0, #0
 8002056:	e7f4      	b.n	8002042 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002058 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002058:	4800      	ldr	r0, [pc, #0]	; (800205c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800205a:	4770      	bx	lr
 800205c:	0801b6b8 	.word	0x0801b6b8

08002060 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002060:	2001      	movs	r0, #1
 8002062:	4770      	bx	lr

08002064 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002064:	b513      	push	{r0, r1, r4, lr}
 8002066:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002068:	b151      	cbz	r1, 8002080 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800206a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800206c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800206e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002072:	aa01      	add	r2, sp, #4
 8002074:	689c      	ldr	r4, [r3, #8]
 8002076:	f10d 0303 	add.w	r3, sp, #3
 800207a:	47a0      	blx	r4
        return glyph;
    }
 800207c:	b002      	add	sp, #8
 800207e:	bd10      	pop	{r4, pc}
            return 0;
 8002080:	4608      	mov	r0, r1
 8002082:	e7fb      	b.n	800207c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002084 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002084:	8940      	ldrh	r0, [r0, #10]
 8002086:	4770      	bx	lr

08002088 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002088:	8980      	ldrh	r0, [r0, #12]
 800208a:	4770      	bx	lr

0800208c <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 800208c:	8880      	ldrh	r0, [r0, #4]
 800208e:	4770      	bx	lr

08002090 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002090:	7983      	ldrb	r3, [r0, #6]
 8002092:	8880      	ldrh	r0, [r0, #4]
 8002094:	4418      	add	r0, r3
    }
 8002096:	b280      	uxth	r0, r0
 8002098:	4770      	bx	lr

0800209a <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800209a:	79c0      	ldrb	r0, [r0, #7]
    }
 800209c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80020a0:	4770      	bx	lr

080020a2 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80020a2:	79c0      	ldrb	r0, [r0, #7]
    }
 80020a4:	09c0      	lsrs	r0, r0, #7
 80020a6:	4770      	bx	lr

080020a8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80020a8:	4770      	bx	lr

080020aa <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 80020aa:	4770      	bx	lr

080020ac <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80020ac:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 80020b0:	6808      	ldr	r0, [r1, #0]
 80020b2:	6849      	ldr	r1, [r1, #4]
 80020b4:	c303      	stmia	r3!, {r0, r1}
    }
 80020b6:	4770      	bx	lr

080020b8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80020ba:	4770      	bx	lr

080020bc <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020bc:	6041      	str	r1, [r0, #4]
    }
 80020be:	4770      	bx	lr

080020c0 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020c0:	4770      	bx	lr
	...

080020c4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020c4:	4b06      	ldr	r3, [pc, #24]	; (80020e0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80020c6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80020ca:	2300      	movs	r3, #0
 80020cc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80020d0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80020d4:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80020d8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80020dc:	4770      	bx	lr
 80020de:	bf00      	nop
 80020e0:	08002185 	.word	0x08002185

080020e4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80020e4:	2301      	movs	r3, #1
 80020e6:	7203      	strb	r3, [r0, #8]
    }
 80020e8:	4770      	bx	lr

080020ea <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80020ea:	4770      	bx	lr

080020ec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80020ec:	4770      	bx	lr

080020ee <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80020ee:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80020f0:	68c2      	ldr	r2, [r0, #12]
 80020f2:	6841      	ldr	r1, [r0, #4]
 80020f4:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80020f6:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80020f8:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80020fc:	07d2      	lsls	r2, r2, #31
 80020fe:	bf48      	it	mi
 8002100:	590a      	ldrmi	r2, [r1, r4]
 8002102:	689b      	ldr	r3, [r3, #8]
    }
 8002104:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002108:	bf48      	it	mi
 800210a:	58d3      	ldrmi	r3, [r2, r3]
 800210c:	4718      	bx	r3

0800210e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 800210e:	6843      	ldr	r3, [r0, #4]
 8002110:	b12b      	cbz	r3, 800211e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002112:	6883      	ldr	r3, [r0, #8]
 8002114:	b92b      	cbnz	r3, 8002122 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002116:	68c0      	ldr	r0, [r0, #12]
 8002118:	f000 0001 	and.w	r0, r0, #1
 800211c:	4770      	bx	lr
 800211e:	4618      	mov	r0, r3
 8002120:	4770      	bx	lr
 8002122:	2001      	movs	r0, #1
    }
 8002124:	4770      	bx	lr

08002126 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002126:	b510      	push	{r4, lr}
 8002128:	210c      	movs	r1, #12
 800212a:	4604      	mov	r4, r0
 800212c:	f017 fe4b 	bl	8019dc6 <_ZdlPvj>
 8002130:	4620      	mov	r0, r4
 8002132:	bd10      	pop	{r4, pc}

08002134 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002134:	b510      	push	{r4, lr}
 8002136:	2110      	movs	r1, #16
 8002138:	4604      	mov	r4, r0
 800213a:	f017 fe44 	bl	8019dc6 <_ZdlPvj>
 800213e:	4620      	mov	r0, r4
 8002140:	bd10      	pop	{r4, pc}

08002142 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002142:	b510      	push	{r4, lr}
 8002144:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002148:	4604      	mov	r4, r0
 800214a:	f017 fe3c 	bl	8019dc6 <_ZdlPvj>
 800214e:	4620      	mov	r0, r4
 8002150:	bd10      	pop	{r4, pc}

08002152 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002152:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002154:	f009 f918 	bl	800b388 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8002158:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 800215c:	f009 bcdc 	b.w	800bb18 <_ZN8touchgfx11Application10invalidateEv>

08002160 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002160:	b510      	push	{r4, lr}
 8002162:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002164:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002168:	b158      	cbz	r0, 8002182 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800216a:	6803      	ldr	r3, [r0, #0]
 800216c:	68db      	ldr	r3, [r3, #12]
 800216e:	4798      	blx	r3
 8002170:	b138      	cbz	r0, 8002182 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002172:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002176:	6803      	ldr	r3, [r0, #0]
 8002178:	689b      	ldr	r3, [r3, #8]
 800217a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800217c:	2300      	movs	r3, #0
 800217e:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002182:	bd10      	pop	{r4, pc}

08002184 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002184:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002188:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 800218c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800218e:	68a8      	ldr	r0, [r5, #8]
 8002190:	6803      	ldr	r3, [r0, #0]
 8002192:	6a1b      	ldr	r3, [r3, #32]
 8002194:	4798      	blx	r3
 8002196:	2897      	cmp	r0, #151	; 0x97
 8002198:	d805      	bhi.n	80021a6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x22>
 800219a:	4b45      	ldr	r3, [pc, #276]	; (80022b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 800219c:	4a45      	ldr	r2, [pc, #276]	; (80022b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800219e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80021a0:	4845      	ldr	r0, [pc, #276]	; (80022b8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80021a2:	f017 fe3f 	bl	8019e24 <__assert_func>
 80021a6:	6868      	ldr	r0, [r5, #4]
 80021a8:	6803      	ldr	r3, [r0, #0]
 80021aa:	6a1b      	ldr	r3, [r3, #32]
 80021ac:	4798      	blx	r3
 80021ae:	280f      	cmp	r0, #15
 80021b0:	d803      	bhi.n	80021ba <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x36>
 80021b2:	4b42      	ldr	r3, [pc, #264]	; (80022bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80021b4:	4a3f      	ldr	r2, [pc, #252]	; (80022b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80021b6:	21a4      	movs	r1, #164	; 0xa4
 80021b8:	e7f2      	b.n	80021a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80021ba:	68e8      	ldr	r0, [r5, #12]
 80021bc:	6803      	ldr	r3, [r0, #0]
 80021be:	6a1b      	ldr	r3, [r3, #32]
 80021c0:	4798      	blx	r3
 80021c2:	280b      	cmp	r0, #11
 80021c4:	d803      	bhi.n	80021ce <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4a>
 80021c6:	4b3e      	ldr	r3, [pc, #248]	; (80022c0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80021c8:	4a3a      	ldr	r2, [pc, #232]	; (80022b4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80021ca:	21a5      	movs	r1, #165	; 0xa5
 80021cc:	e7e8      	b.n	80021a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1c>
    if (*currentTrans)
 80021ce:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80022c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 80021d2:	f009 f8d9 	bl	800b388 <_ZN8touchgfx11Application11getInstanceEv>
 80021d6:	f009 f8dd 	bl	800b394 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80021da:	f8d9 0000 	ldr.w	r0, [r9]
 80021de:	b110      	cbz	r0, 80021e6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x62>
        (*currentTrans)->tearDown();
 80021e0:	6803      	ldr	r3, [r0, #0]
 80021e2:	68db      	ldr	r3, [r3, #12]
 80021e4:	4798      	blx	r3
    if (*currentTrans)
 80021e6:	f8d9 0000 	ldr.w	r0, [r9]
 80021ea:	b110      	cbz	r0, 80021f2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x6e>
        (*currentTrans)->~Transition();
 80021ec:	6803      	ldr	r3, [r0, #0]
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	4798      	blx	r3
    if (*currentScreen)
 80021f2:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80022cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 80021f6:	f8d8 0000 	ldr.w	r0, [r8]
 80021fa:	b110      	cbz	r0, 8002202 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x7e>
        (*currentScreen)->tearDownScreen();
 80021fc:	6803      	ldr	r3, [r0, #0]
 80021fe:	695b      	ldr	r3, [r3, #20]
 8002200:	4798      	blx	r3
    if (*currentPresenter)
 8002202:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002206:	b110      	cbz	r0, 800220e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8a>
        (*currentPresenter)->deactivate();
 8002208:	6803      	ldr	r3, [r0, #0]
 800220a:	685b      	ldr	r3, [r3, #4]
 800220c:	4798      	blx	r3
    if (*currentScreen)
 800220e:	f8d8 0000 	ldr.w	r0, [r8]
 8002212:	b110      	cbz	r0, 800221a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x96>
        (*currentScreen)->~Screen();
 8002214:	6803      	ldr	r3, [r0, #0]
 8002216:	681b      	ldr	r3, [r3, #0]
 8002218:	4798      	blx	r3
    if (*currentPresenter)
 800221a:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800221e:	b110      	cbz	r0, 8002226 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa2>
        (*currentPresenter)->~Presenter();
 8002220:	6803      	ldr	r3, [r0, #0]
 8002222:	689b      	ldr	r3, [r3, #8]
 8002224:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002226:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002228:	6803      	ldr	r3, [r0, #0]
 800222a:	2100      	movs	r1, #0
 800222c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800222e:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002230:	f04f 0b00 	mov.w	fp, #0
 8002234:	4b23      	ldr	r3, [pc, #140]	; (80022c4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002236:	6003      	str	r3, [r0, #0]
 8002238:	4604      	mov	r4, r0
 800223a:	f8c0 b004 	str.w	fp, [r0, #4]
 800223e:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002242:	68a8      	ldr	r0, [r5, #8]
 8002244:	6803      	ldr	r3, [r0, #0]
 8002246:	4659      	mov	r1, fp
 8002248:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800224a:	4798      	blx	r3
 800224c:	4606      	mov	r6, r0
 800224e:	f000 fb25 	bl	800289c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002252:	6868      	ldr	r0, [r5, #4]
 8002254:	6803      	ldr	r3, [r0, #0]
 8002256:	4659      	mov	r1, fp
 8002258:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800225a:	4798      	blx	r3
 800225c:	4631      	mov	r1, r6
 800225e:	4605      	mov	r5, r0
 8002260:	f000 fb02 	bl	8002868 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002264:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002268:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800226c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002270:	b1e5      	cbz	r5, 80022ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x128>
 8002272:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002274:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002278:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800227a:	f8c5 a008 	str.w	sl, [r5, #8]
 800227e:	4630      	mov	r0, r6
 8002280:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002282:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002284:	4798      	blx	r3
    newPresenter->activate();
 8002286:	682b      	ldr	r3, [r5, #0]
 8002288:	4628      	mov	r0, r5
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800228e:	4621      	mov	r1, r4
 8002290:	4630      	mov	r0, r6
 8002292:	f00a fc53 	bl	800cb3c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002296:	6823      	ldr	r3, [r4, #0]
 8002298:	4620      	mov	r0, r4
 800229a:	691b      	ldr	r3, [r3, #16]
 800229c:	4798      	blx	r3
    newTransition->invalidate();
 800229e:	6823      	ldr	r3, [r4, #0]
 80022a0:	695b      	ldr	r3, [r3, #20]
 80022a2:	4620      	mov	r0, r4
}
 80022a4:	b001      	add	sp, #4
 80022a6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80022aa:	4718      	bx	r3
    model->bind(newPresenter);
 80022ac:	462b      	mov	r3, r5
 80022ae:	e7e1      	b.n	8002274 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf0>
 80022b0:	0801b6cc 	.word	0x0801b6cc
 80022b4:	0801b75a 	.word	0x0801b75a
 80022b8:	0801b85e 	.word	0x0801b85e
 80022bc:	0801b8a5 	.word	0x0801b8a5
 80022c0:	0801b948 	.word	0x0801b948
 80022c4:	0801ba58 	.word	0x0801ba58
 80022c8:	2000a4d8 	.word	0x2000a4d8
 80022cc:	2000a4d4 	.word	0x2000a4d4

080022d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80022d0:	b570      	push	{r4, r5, r6, lr}
 80022d2:	4604      	mov	r4, r0
 80022d4:	460d      	mov	r5, r1
 80022d6:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 80022d8:	f009 f876 	bl	800b3c8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80022dc:	4b0e      	ldr	r3, [pc, #56]	; (8002318 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
          pendingScreenTransitionCallback(0)
 80022de:	2100      	movs	r1, #0
      model(m)
 80022e0:	e9c4 6554 	strd	r6, r5, [r4, #336]	; 0x150
        return instance;
 80022e4:	4d0d      	ldr	r5, [pc, #52]	; (800231c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
        instance = this;
 80022e6:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 80022e8:	e9c4 1152 	strd	r1, r1, [r4, #328]	; 0x148
 80022ec:	4b0c      	ldr	r3, [pc, #48]	; (8002320 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80022ee:	6023      	str	r3, [r4, #0]
 80022f0:	6828      	ldr	r0, [r5, #0]
 80022f2:	4b0c      	ldr	r3, [pc, #48]	; (8002324 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80022f4:	e9c4 3150 	strd	r3, r1, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80022f8:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80022fa:	e9c4 114e 	strd	r1, r1, [r4, #312]	; 0x138
 80022fe:	689b      	ldr	r3, [r3, #8]
 8002300:	4798      	blx	r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002302:	682b      	ldr	r3, [r5, #0]
 8002304:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002308:	b10a      	cbz	r2, 800230e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x3e>
 800230a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800230c:	b900      	cbnz	r0, 8002310 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x40>
        return instance->lcdRef;
 800230e:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002310:	f010 fc27 	bl	8012b62 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002314:	4620      	mov	r0, r4
 8002316:	bd70      	pop	{r4, r5, r6, pc}
 8002318:	2000a4e4 	.word	0x2000a4e4
 800231c:	2000a498 	.word	0x2000a498
 8002320:	0801ba0c 	.word	0x0801ba0c
 8002324:	0801b9f4 	.word	0x0801b9f4

08002328 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002328:	4b06      	ldr	r3, [pc, #24]	; (8002344 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800232a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800232e:	2300      	movs	r3, #0
 8002330:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002334:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002338:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800233c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002340:	4770      	bx	lr
 8002342:	bf00      	nop
 8002344:	08002185 	.word	0x08002185

08002348 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002348:	6a00      	ldr	r0, [r0, #32]
 800234a:	4770      	bx	lr

0800234c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800234c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800234e:	4770      	bx	lr

08002350 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002350:	4770      	bx	lr

08002352 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002352:	888b      	ldrh	r3, [r1, #4]
 8002354:	6980      	ldr	r0, [r0, #24]
 8002356:	680a      	ldr	r2, [r1, #0]
 8002358:	0adb      	lsrs	r3, r3, #11
 800235a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800235e:	4410      	add	r0, r2
 8002360:	4770      	bx	lr

08002362 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002362:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002364:	b1c2      	cbz	r2, 8002398 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002366:	7b13      	ldrb	r3, [r2, #12]
 8002368:	b1b3      	cbz	r3, 8002398 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800236a:	7b54      	ldrb	r4, [r2, #13]
 800236c:	7ad2      	ldrb	r2, [r2, #11]
 800236e:	0224      	lsls	r4, r4, #8
 8002370:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002374:	4314      	orrs	r4, r2
 8002376:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002378:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800237a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800237e:	8813      	ldrh	r3, [r2, #0]
 8002380:	428b      	cmp	r3, r1
 8002382:	d102      	bne.n	800238a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002384:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002388:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800238a:	d805      	bhi.n	8002398 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800238c:	3801      	subs	r0, #1
 800238e:	b280      	uxth	r0, r0
 8002390:	3204      	adds	r2, #4
 8002392:	2800      	cmp	r0, #0
 8002394:	d1f3      	bne.n	800237e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002396:	e7f7      	b.n	8002388 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002398:	2000      	movs	r0, #0
 800239a:	e7f5      	b.n	8002388 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800239c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800239c:	b510      	push	{r4, lr}
 800239e:	2128      	movs	r1, #40	; 0x28
 80023a0:	4604      	mov	r4, r0
 80023a2:	f017 fd10 	bl	8019dc6 <_ZdlPvj>
 80023a6:	4620      	mov	r0, r4
 80023a8:	bd10      	pop	{r4, pc}
	...

080023ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80023ac:	b530      	push	{r4, r5, lr}
 80023ae:	b089      	sub	sp, #36	; 0x24
 80023b0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80023b2:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80023b6:	9506      	str	r5, [sp, #24]
 80023b8:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80023bc:	9505      	str	r5, [sp, #20]
 80023be:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80023c2:	9504      	str	r5, [sp, #16]
 80023c4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80023c8:	9503      	str	r5, [sp, #12]
 80023ca:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80023ce:	9502      	str	r5, [sp, #8]
 80023d0:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80023d4:	9501      	str	r5, [sp, #4]
 80023d6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80023da:	9500      	str	r5, [sp, #0]
 80023dc:	f00a f80e 	bl	800c3fc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80023e0:	4b06      	ldr	r3, [pc, #24]	; (80023fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 80023e2:	6023      	str	r3, [r4, #0]
 80023e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80023e6:	61a3      	str	r3, [r4, #24]
 80023e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80023ea:	61e3      	str	r3, [r4, #28]
 80023ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80023ee:	6223      	str	r3, [r4, #32]
 80023f0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80023f2:	6263      	str	r3, [r4, #36]	; 0x24
}
 80023f4:	4620      	mov	r0, r4
 80023f6:	b009      	add	sp, #36	; 0x24
 80023f8:	bd30      	pop	{r4, r5, pc}
 80023fa:	bf00      	nop
 80023fc:	0801ba7c 	.word	0x0801ba7c

08002400 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002400:	2000      	movs	r0, #0
 8002402:	4770      	bx	lr

08002404 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002404:	8081      	strh	r1, [r0, #4]
    }
 8002406:	4770      	bx	lr

08002408 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002408:	80c1      	strh	r1, [r0, #6]
    }
 800240a:	4770      	bx	lr

0800240c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800240c:	8101      	strh	r1, [r0, #8]
    }
 800240e:	4770      	bx	lr

08002410 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002410:	8141      	strh	r1, [r0, #10]
    }
 8002412:	4770      	bx	lr

08002414 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002414:	4770      	bx	lr

08002416 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002416:	4770      	bx	lr

08002418 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002418:	4770      	bx	lr

0800241a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800241a:	4770      	bx	lr

0800241c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800241c:	4770      	bx	lr

0800241e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800241e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002420:	88c4      	ldrh	r4, [r0, #6]
 8002422:	6803      	ldr	r3, [r0, #0]
 8002424:	1b12      	subs	r2, r2, r4
 8002426:	8884      	ldrh	r4, [r0, #4]
 8002428:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800242a:	1b09      	subs	r1, r1, r4
 800242c:	b212      	sxth	r2, r2
    }
 800242e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002432:	b209      	sxth	r1, r1
 8002434:	4718      	bx	r3

08002436 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002436:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800243a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800243c:	f04f 33ff 	mov.w	r3, #4294967295
 8002440:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002442:	6813      	ldr	r3, [r2, #0]
 8002444:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002446:	6010      	str	r0, [r2, #0]
    }
 8002448:	4770      	bx	lr

0800244a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800244a:	4770      	bx	lr

0800244c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800244c:	4770      	bx	lr

0800244e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800244e:	4770      	bx	lr

08002450 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002450:	4770      	bx	lr

08002452 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002452:	4770      	bx	lr

08002454 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002454:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002458:	b11a      	cbz	r2, 8002462 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800245a:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800245e:	b102      	cbz	r2, 8002462 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002460:	6018      	str	r0, [r3, #0]
        }
    }
 8002462:	4770      	bx	lr

08002464 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002464:	4770      	bx	lr

08002466 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002466:	4770      	bx	lr

08002468 <_ZN15Screen1ViewBaseD0Ev>:
 8002468:	b510      	push	{r4, lr}
 800246a:	2198      	movs	r1, #152	; 0x98
 800246c:	4604      	mov	r4, r0
 800246e:	f017 fcaa 	bl	8019dc6 <_ZdlPvj>
 8002472:	4620      	mov	r0, r4
 8002474:	bd10      	pop	{r4, pc}

08002476 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002476:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800247a:	461d      	mov	r5, r3
        setX(x);
 800247c:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800247e:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 8002482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002484:	4604      	mov	r4, r0
 8002486:	4616      	mov	r6, r2
        setX(x);
 8002488:	4798      	blx	r3
        setY(y);
 800248a:	6823      	ldr	r3, [r4, #0]
 800248c:	4631      	mov	r1, r6
 800248e:	4620      	mov	r0, r4
 8002490:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002492:	4798      	blx	r3
        setWidth(width);
 8002494:	6823      	ldr	r3, [r4, #0]
 8002496:	4629      	mov	r1, r5
 8002498:	4620      	mov	r0, r4
 800249a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800249c:	4798      	blx	r3
        setHeight(height);
 800249e:	6823      	ldr	r3, [r4, #0]
 80024a0:	4639      	mov	r1, r7
 80024a2:	4620      	mov	r0, r4
 80024a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80024a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 80024aa:	4718      	bx	r3

080024ac <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80024ac:	4a09      	ldr	r2, [pc, #36]	; (80024d4 <_ZN8touchgfx3BoxC1Ev+0x28>)
 80024ae:	6002      	str	r2, [r0, #0]
          visible(true)
 80024b0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80024b4:	2200      	movs	r2, #0
 80024b6:	8481      	strh	r1, [r0, #36]	; 0x24
 80024b8:	21ff      	movs	r1, #255	; 0xff
 80024ba:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024be:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80024c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80024c6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80024ca:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 80024ce:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 80024d0:	4770      	bx	lr
 80024d2:	bf00      	nop
 80024d4:	0801ca8c 	.word	0x0801ca8c

080024d8 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 80024d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024da:	4604      	mov	r4, r0
 80024dc:	b085      	sub	sp, #20
 80024de:	4625      	mov	r5, r4
        : presenter(0)
 80024e0:	f00a f980 	bl	800c7e4 <_ZN8touchgfx6ScreenC1Ev>
 80024e4:	4b18      	ldr	r3, [pc, #96]	; (8002548 <_ZN15Screen1ViewBaseC1Ev+0x70>)
 80024e6:	2200      	movs	r2, #0
 80024e8:	63e2      	str	r2, [r4, #60]	; 0x3c
 80024ea:	f845 3b40 	str.w	r3, [r5], #64
 80024ee:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 80024f2:	4628      	mov	r0, r5
 80024f4:	f7ff ffda 	bl	80024ac <_ZN8touchgfx3BoxC1Ev>
 80024f8:	4630      	mov	r0, r6
 80024fa:	f7ff ffd7 	bl	80024ac <_ZN8touchgfx3BoxC1Ev>
    __background.setPosition(0, 0, 800, 480);
 80024fe:	f44f 77f0 	mov.w	r7, #480	; 0x1e0
 8002502:	2200      	movs	r2, #0
 8002504:	4611      	mov	r1, r2
 8002506:	4628      	mov	r0, r5
 8002508:	9700      	str	r7, [sp, #0]
 800250a:	f44f 7348 	mov.w	r3, #800	; 0x320
 800250e:	f7ff ffb2 	bl	8002476 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setPosition(0, 0, 800, 480);
 8002512:	2200      	movs	r2, #0
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002514:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002518:	4611      	mov	r1, r2
 800251a:	66a3      	str	r3, [r4, #104]	; 0x68
 800251c:	4630      	mov	r0, r6
 800251e:	9700      	str	r7, [sp, #0]
 8002520:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002524:	f7ff ffa7 	bl	8002476 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002528:	f04f 33ff 	mov.w	r3, #4294967295
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800252c:	1d20      	adds	r0, r4, #4
 800252e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002532:	4629      	mov	r1, r5
 8002534:	9003      	str	r0, [sp, #12]
 8002536:	f006 fbcf 	bl	8008cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800253a:	9803      	ldr	r0, [sp, #12]
 800253c:	4631      	mov	r1, r6
 800253e:	f006 fbcb 	bl	8008cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002542:	4620      	mov	r0, r4
 8002544:	b005      	add	sp, #20
 8002546:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002548:	0801bad4 	.word	0x0801bad4

0800254c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800254c:	4770      	bx	lr
	...

08002550 <_Z23getFont_verdana_10_4bppv>:
{
 8002550:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002552:	4d15      	ldr	r5, [pc, #84]	; (80025a8 <_Z23getFont_verdana_10_4bppv+0x58>)
 8002554:	782c      	ldrb	r4, [r5, #0]
 8002556:	f3bf 8f5b 	dmb	ish
 800255a:	f014 0401 	ands.w	r4, r4, #1
{
 800255e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002560:	d11e      	bne.n	80025a0 <_Z23getFont_verdana_10_4bppv+0x50>
 8002562:	4628      	mov	r0, r5
 8002564:	f017 fc31 	bl	8019dca <__cxa_guard_acquire>
 8002568:	b1d0      	cbz	r0, 80025a0 <_Z23getFont_verdana_10_4bppv+0x50>
 800256a:	233f      	movs	r3, #63	; 0x3f
 800256c:	9307      	str	r3, [sp, #28]
 800256e:	4b0f      	ldr	r3, [pc, #60]	; (80025ac <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002570:	9306      	str	r3, [sp, #24]
 8002572:	4b0f      	ldr	r3, [pc, #60]	; (80025b0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002574:	490f      	ldr	r1, [pc, #60]	; (80025b4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002576:	4810      	ldr	r0, [pc, #64]	; (80025b8 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002578:	9408      	str	r4, [sp, #32]
 800257a:	2201      	movs	r2, #1
 800257c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002580:	2304      	movs	r3, #4
 8002582:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002586:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800258a:	230a      	movs	r3, #10
 800258c:	9403      	str	r4, [sp, #12]
 800258e:	9400      	str	r4, [sp, #0]
 8002590:	f7ff ff0c 	bl	80023ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002594:	4809      	ldr	r0, [pc, #36]	; (80025bc <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002596:	f017 fc63 	bl	8019e60 <atexit>
 800259a:	4628      	mov	r0, r5
 800259c:	f017 fc21 	bl	8019de2 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80025a0:	4805      	ldr	r0, [pc, #20]	; (80025b8 <_Z23getFont_verdana_10_4bppv+0x68>)
 80025a2:	b00d      	add	sp, #52	; 0x34
 80025a4:	bd30      	pop	{r4, r5, pc}
 80025a6:	bf00      	nop
 80025a8:	200014b0 	.word	0x200014b0
 80025ac:	0801e300 	.word	0x0801e300
 80025b0:	0801e30c 	.word	0x0801e30c
 80025b4:	90000178 	.word	0x90000178
 80025b8:	200014b4 	.word	0x200014b4
 80025bc:	0800254d 	.word	0x0800254d

080025c0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80025c0:	4770      	bx	lr
	...

080025c4 <_Z23getFont_verdana_20_4bppv>:
{
 80025c4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80025c6:	4d15      	ldr	r5, [pc, #84]	; (800261c <_Z23getFont_verdana_20_4bppv+0x58>)
 80025c8:	782c      	ldrb	r4, [r5, #0]
 80025ca:	f3bf 8f5b 	dmb	ish
 80025ce:	f014 0401 	ands.w	r4, r4, #1
{
 80025d2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80025d4:	d11e      	bne.n	8002614 <_Z23getFont_verdana_20_4bppv+0x50>
 80025d6:	4628      	mov	r0, r5
 80025d8:	f017 fbf7 	bl	8019dca <__cxa_guard_acquire>
 80025dc:	b1d0      	cbz	r0, 8002614 <_Z23getFont_verdana_20_4bppv+0x50>
 80025de:	233f      	movs	r3, #63	; 0x3f
 80025e0:	9307      	str	r3, [sp, #28]
 80025e2:	4b0f      	ldr	r3, [pc, #60]	; (8002620 <_Z23getFont_verdana_20_4bppv+0x5c>)
 80025e4:	9306      	str	r3, [sp, #24]
 80025e6:	4b0f      	ldr	r3, [pc, #60]	; (8002624 <_Z23getFont_verdana_20_4bppv+0x60>)
 80025e8:	490f      	ldr	r1, [pc, #60]	; (8002628 <_Z23getFont_verdana_20_4bppv+0x64>)
 80025ea:	4810      	ldr	r0, [pc, #64]	; (800262c <_Z23getFont_verdana_20_4bppv+0x68>)
 80025ec:	9408      	str	r4, [sp, #32]
 80025ee:	2201      	movs	r2, #1
 80025f0:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80025f4:	2304      	movs	r3, #4
 80025f6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80025fa:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80025fe:	2314      	movs	r3, #20
 8002600:	9403      	str	r4, [sp, #12]
 8002602:	9400      	str	r4, [sp, #0]
 8002604:	f7ff fed2 	bl	80023ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002608:	4809      	ldr	r0, [pc, #36]	; (8002630 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800260a:	f017 fc29 	bl	8019e60 <atexit>
 800260e:	4628      	mov	r0, r5
 8002610:	f017 fbe7 	bl	8019de2 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002614:	4805      	ldr	r0, [pc, #20]	; (800262c <_Z23getFont_verdana_20_4bppv+0x68>)
 8002616:	b00d      	add	sp, #52	; 0x34
 8002618:	bd30      	pop	{r4, r5, pc}
 800261a:	bf00      	nop
 800261c:	200014dc 	.word	0x200014dc
 8002620:	0801e304 	.word	0x0801e304
 8002624:	0801e310 	.word	0x0801e310
 8002628:	90000188 	.word	0x90000188
 800262c:	200014e0 	.word	0x200014e0
 8002630:	080025c1 	.word	0x080025c1

08002634 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002634:	4770      	bx	lr
	...

08002638 <_Z23getFont_verdana_40_4bppv>:
{
 8002638:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800263a:	4d15      	ldr	r5, [pc, #84]	; (8002690 <_Z23getFont_verdana_40_4bppv+0x58>)
 800263c:	782c      	ldrb	r4, [r5, #0]
 800263e:	f3bf 8f5b 	dmb	ish
 8002642:	f014 0401 	ands.w	r4, r4, #1
{
 8002646:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002648:	d11e      	bne.n	8002688 <_Z23getFont_verdana_40_4bppv+0x50>
 800264a:	4628      	mov	r0, r5
 800264c:	f017 fbbd 	bl	8019dca <__cxa_guard_acquire>
 8002650:	b1d0      	cbz	r0, 8002688 <_Z23getFont_verdana_40_4bppv+0x50>
 8002652:	233f      	movs	r3, #63	; 0x3f
 8002654:	9307      	str	r3, [sp, #28]
 8002656:	4b0f      	ldr	r3, [pc, #60]	; (8002694 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002658:	9306      	str	r3, [sp, #24]
 800265a:	4b0f      	ldr	r3, [pc, #60]	; (8002698 <_Z23getFont_verdana_40_4bppv+0x60>)
 800265c:	490f      	ldr	r1, [pc, #60]	; (800269c <_Z23getFont_verdana_40_4bppv+0x64>)
 800265e:	4810      	ldr	r0, [pc, #64]	; (80026a0 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002660:	9408      	str	r4, [sp, #32]
 8002662:	2201      	movs	r2, #1
 8002664:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002668:	2304      	movs	r3, #4
 800266a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800266e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002672:	2328      	movs	r3, #40	; 0x28
 8002674:	9403      	str	r4, [sp, #12]
 8002676:	9400      	str	r4, [sp, #0]
 8002678:	f7ff fe98 	bl	80023ac <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800267c:	4809      	ldr	r0, [pc, #36]	; (80026a4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800267e:	f017 fbef 	bl	8019e60 <atexit>
 8002682:	4628      	mov	r0, r5
 8002684:	f017 fbad 	bl	8019de2 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002688:	4805      	ldr	r0, [pc, #20]	; (80026a0 <_Z23getFont_verdana_40_4bppv+0x68>)
 800268a:	b00d      	add	sp, #52	; 0x34
 800268c:	bd30      	pop	{r4, r5, pc}
 800268e:	bf00      	nop
 8002690:	20001508 	.word	0x20001508
 8002694:	0801e308 	.word	0x0801e308
 8002698:	0801e314 	.word	0x0801e314
 800269c:	90000198 	.word	0x90000198
 80026a0:	2000150c 	.word	0x2000150c
 80026a4:	08002635 	.word	0x08002635

080026a8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80026a8:	2000      	movs	r0, #0
 80026aa:	4770      	bx	lr

080026ac <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80026ac:	2000      	movs	r0, #0
 80026ae:	4770      	bx	lr

080026b0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80026b0:	b40e      	push	{r1, r2, r3}
 80026b2:	b503      	push	{r0, r1, lr}
 80026b4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80026b6:	2100      	movs	r1, #0
{
 80026b8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80026bc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80026be:	f009 fccf 	bl	800c060 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80026c2:	b002      	add	sp, #8
 80026c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80026c8:	b003      	add	sp, #12
 80026ca:	4770      	bx	lr

080026cc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80026cc:	b40c      	push	{r2, r3}
 80026ce:	b507      	push	{r0, r1, r2, lr}
 80026d0:	ab04      	add	r3, sp, #16
 80026d2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80026d6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80026d8:	f009 fcc2 	bl	800c060 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80026dc:	b003      	add	sp, #12
 80026de:	f85d eb04 	ldr.w	lr, [sp], #4
 80026e2:	b002      	add	sp, #8
 80026e4:	4770      	bx	lr
	...

080026e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80026e8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80026ea:	b510      	push	{r4, lr}
 80026ec:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80026ee:	b373      	cbz	r3, 800274e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80026f0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80026f2:	b92b      	cbnz	r3, 8002700 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80026f4:	4b18      	ldr	r3, [pc, #96]	; (8002758 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80026f6:	4a19      	ldr	r2, [pc, #100]	; (800275c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80026f8:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80026fa:	4819      	ldr	r0, [pc, #100]	; (8002760 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80026fc:	f017 fb92 	bl	8019e24 <__assert_func>
            return buffer[pos];
 8002700:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8002702:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002706:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002708:	b30b      	cbz	r3, 800274e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800270a:	f00a ff2b 	bl	800d564 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800270e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8002710:	2b01      	cmp	r3, #1
 8002712:	d803      	bhi.n	800271c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002714:	4b13      	ldr	r3, [pc, #76]	; (8002764 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002716:	4a14      	ldr	r2, [pc, #80]	; (8002768 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002718:	21c5      	movs	r1, #197	; 0xc5
 800271a:	e7ee      	b.n	80026fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800271c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800271e:	1c53      	adds	r3, r2, #1
 8002720:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002722:	2b09      	cmp	r3, #9
 8002724:	4619      	mov	r1, r3
 8002726:	bf88      	it	hi
 8002728:	f1a3 010a 	subhi.w	r1, r3, #10
 800272c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002730:	f640 103f 	movw	r0, #2367	; 0x93f
 8002734:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8002736:	4281      	cmp	r1, r0
 8002738:	d109      	bne.n	800274e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800273a:	2b0a      	cmp	r3, #10
 800273c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002740:	bf28      	it	cs
 8002742:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002744:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002748:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800274a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800274c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800274e:	4620      	mov	r0, r4
}
 8002750:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002754:	f00a bdea 	b.w	800d32c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002758:	0801bb00 	.word	0x0801bb00
 800275c:	0801bb09 	.word	0x0801bb09
 8002760:	0801bbb4 	.word	0x0801bbb4
 8002764:	0801bbfe 	.word	0x0801bbfe
 8002768:	0801bc0c 	.word	0x0801bc0c

0800276c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800276c:	f00a bd96 	b.w	800d29c <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002770 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002770:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002772:	bb10      	cbnz	r0, 80027ba <_ZN8touchgfx5Texts11setLanguageEt+0x4a>
    {
        if (languagesArray[id] != 0)
 8002774:	4b11      	ldr	r3, [pc, #68]	; (80027bc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 8002776:	4812      	ldr	r0, [pc, #72]	; (80027c0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002778:	681b      	ldr	r3, [r3, #0]
 800277a:	4912      	ldr	r1, [pc, #72]	; (80027c4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800277c:	b1b3      	cbz	r3, 80027ac <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800277e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002780:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002782:	441a      	add	r2, r3
 8002784:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002786:	685a      	ldr	r2, [r3, #4]
 8002788:	441a      	add	r2, r3
 800278a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800278c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800278e:	4b0e      	ldr	r3, [pc, #56]	; (80027c8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002790:	2200      	movs	r2, #0
 8002792:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002794:	f000 f826 	bl	80027e4 <_ZN17TypedTextDatabase8getFontsEv>
 8002798:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800279a:	f000 f821 	bl	80027e0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800279e:	4b0b      	ldr	r3, [pc, #44]	; (80027cc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80027a0:	601c      	str	r4, [r3, #0]
        fonts = f;
 80027a2:	4b0b      	ldr	r3, [pc, #44]	; (80027d0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80027a4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80027a6:	4b0b      	ldr	r3, [pc, #44]	; (80027d4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80027a8:	8018      	strh	r0, [r3, #0]
    }
}
 80027aa:	e006      	b.n	80027ba <_ZN8touchgfx5Texts11setLanguageEt+0x4a>
            currentLanguageIndices = staticLanguageIndices[id];
 80027ac:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80027ae:	4b0a      	ldr	r3, [pc, #40]	; (80027d8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
            currentLanguagePtr = texts_all_languages;
 80027b0:	4a0a      	ldr	r2, [pc, #40]	; (80027dc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80027b2:	681c      	ldr	r4, [r3, #0]
            currentLanguagePtr = texts_all_languages;
 80027b4:	6002      	str	r2, [r0, #0]
    if (currentLanguageTypedText)
 80027b6:	2c00      	cmp	r4, #0
 80027b8:	d1e9      	bne.n	800278e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80027ba:	bd38      	pop	{r3, r4, r5, pc}
 80027bc:	20001534 	.word	0x20001534
 80027c0:	20001538 	.word	0x20001538
 80027c4:	2000153c 	.word	0x2000153c
 80027c8:	20001540 	.word	0x20001540
 80027cc:	2000a4e8 	.word	0x2000a4e8
 80027d0:	2000a4f0 	.word	0x2000a4f0
 80027d4:	2000a4ec 	.word	0x2000a4ec
 80027d8:	900001b0 	.word	0x900001b0
 80027dc:	900001a8 	.word	0x900001a8

080027e0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80027e0:	2001      	movs	r0, #1
 80027e2:	4770      	bx	lr

080027e4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80027e4:	4800      	ldr	r0, [pc, #0]	; (80027e8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80027e6:	4770      	bx	lr
 80027e8:	20001544 	.word	0x20001544

080027ec <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80027ec:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80027ee:	f7ff fee9 	bl	80025c4 <_Z23getFont_verdana_20_4bppv>
};
 80027f2:	4c04      	ldr	r4, [pc, #16]	; (8002804 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80027f4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80027f6:	f7ff ff1f 	bl	8002638 <_Z23getFont_verdana_40_4bppv>
};
 80027fa:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80027fc:	f7ff fea8 	bl	8002550 <_Z23getFont_verdana_10_4bppv>
};
 8002800:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002802:	bd10      	pop	{r4, pc}
 8002804:	20001544 	.word	0x20001544

08002808 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002808:	4770      	bx	lr

0800280a <_ZN19FrontendApplicationD0Ev>:
 800280a:	b510      	push	{r4, lr}
 800280c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002810:	4604      	mov	r4, r0
 8002812:	f017 fad8 	bl	8019dc6 <_ZdlPvj>
 8002816:	4620      	mov	r0, r4
 8002818:	bd10      	pop	{r4, pc}

0800281a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800281a:	b510      	push	{r4, lr}
 800281c:	4604      	mov	r4, r0
    {
        model.tick();
 800281e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8002822:	f000 f812 	bl	800284a <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002826:	4620      	mov	r0, r4
    }
 8002828:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800282c:	f008 bc2c 	b.w	800b088 <_ZN8touchgfx11Application15handleTickEventEv>

08002830 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002830:	b510      	push	{r4, lr}
 8002832:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002834:	f7ff fd4c 	bl	80022d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002838:	4b01      	ldr	r3, [pc, #4]	; (8002840 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800283a:	6023      	str	r3, [r4, #0]
{

}
 800283c:	4620      	mov	r0, r4
 800283e:	bd10      	pop	{r4, pc}
 8002840:	0801bce8 	.word	0x0801bce8

08002844 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002844:	2200      	movs	r2, #0
 8002846:	6002      	str	r2, [r0, #0]
{

}
 8002848:	4770      	bx	lr

0800284a <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800284a:	4770      	bx	lr

0800284c <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 800284c:	4770      	bx	lr

0800284e <_ZThn4_N16Screen1PresenterD1Ev>:
 800284e:	3804      	subs	r0, #4
 8002850:	4770      	bx	lr

08002852 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002852:	4770      	bx	lr

08002854 <_ZN16Screen1PresenterD0Ev>:
 8002854:	b510      	push	{r4, lr}
 8002856:	2110      	movs	r1, #16
 8002858:	4604      	mov	r4, r0
 800285a:	f017 fab4 	bl	8019dc6 <_ZdlPvj>
 800285e:	4620      	mov	r0, r4
 8002860:	bd10      	pop	{r4, pc}

08002862 <_ZThn4_N16Screen1PresenterD0Ev>:
 8002862:	f1a0 0004 	sub.w	r0, r0, #4
 8002866:	e7f5      	b.n	8002854 <_ZN16Screen1PresenterD0Ev>

08002868 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002868:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800286a:	2200      	movs	r2, #0
 800286c:	6082      	str	r2, [r0, #8]
    : view(v)
 800286e:	4a04      	ldr	r2, [pc, #16]	; (8002880 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002870:	60c1      	str	r1, [r0, #12]
 8002872:	f102 0408 	add.w	r4, r2, #8
 8002876:	3220      	adds	r2, #32
 8002878:	6004      	str	r4, [r0, #0]
 800287a:	6042      	str	r2, [r0, #4]
}
 800287c:	bd10      	pop	{r4, pc}
 800287e:	bf00      	nop
 8002880:	0801bd2c 	.word	0x0801bd2c

08002884 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002884:	4770      	bx	lr

08002886 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002886:	4770      	bx	lr

08002888 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002888:	f7ff bded 	b.w	8002466 <_ZN15Screen1ViewBase11setupScreenEv>

0800288c <_ZN11Screen1ViewD0Ev>:
 800288c:	b510      	push	{r4, lr}
 800288e:	2198      	movs	r1, #152	; 0x98
 8002890:	4604      	mov	r4, r0
 8002892:	f017 fa98 	bl	8019dc6 <_ZdlPvj>
 8002896:	4620      	mov	r0, r4
 8002898:	bd10      	pop	{r4, pc}
	...

0800289c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 800289c:	b510      	push	{r4, lr}
 800289e:	4604      	mov	r4, r0
 80028a0:	f7ff fe1a 	bl	80024d8 <_ZN15Screen1ViewBaseC1Ev>
 80028a4:	4b01      	ldr	r3, [pc, #4]	; (80028ac <_ZN11Screen1ViewC1Ev+0x10>)
 80028a6:	6023      	str	r3, [r4, #0]
}
 80028a8:	4620      	mov	r0, r4
 80028aa:	bd10      	pop	{r4, pc}
 80028ac:	0801bd5c 	.word	0x0801bd5c

080028b0 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 80028b0:	4770      	bx	lr

080028b2 <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 80028b2:	2000      	movs	r0, #0
 80028b4:	4770      	bx	lr

080028b6 <ft6x06_ReadID>:
{
 80028b6:	b510      	push	{r4, lr}
 80028b8:	4604      	mov	r4, r0
  TS_IO_Init();
 80028ba:	f000 fb75 	bl	8002fa8 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 80028be:	21a8      	movs	r1, #168	; 0xa8
 80028c0:	b2e0      	uxtb	r0, r4
 80028c2:	f000 fb8d 	bl	8002fe0 <TS_IO_Read>
}
 80028c6:	b280      	uxth	r0, r0
 80028c8:	bd10      	pop	{r4, pc}
	...

080028cc <ft6x06_TS_DetectTouch>:
{
 80028cc:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 80028ce:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80028d0:	2102      	movs	r1, #2
 80028d2:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 80028d4:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80028d8:	f000 fb82 	bl	8002fe0 <TS_IO_Read>
 80028dc:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 80028e0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80028e4:	f003 030f 	and.w	r3, r3, #15
 80028e8:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 80028ec:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80028f0:	2b02      	cmp	r3, #2
    nbTouch = 0;
 80028f2:	bf88      	it	hi
 80028f4:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80028f8:	4b04      	ldr	r3, [pc, #16]	; (800290c <ft6x06_TS_DetectTouch+0x40>)
 80028fa:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 80028fe:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002902:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8002904:	2200      	movs	r2, #0
 8002906:	709a      	strb	r2, [r3, #2]
}
 8002908:	b002      	add	sp, #8
 800290a:	bd10      	pop	{r4, pc}
 800290c:	20001552 	.word	0x20001552

08002910 <ft6x06_TS_GetXY>:
{
 8002910:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002912:	4c15      	ldr	r4, [pc, #84]	; (8002968 <ft6x06_TS_GetXY+0x58>)
{
 8002914:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002916:	78a3      	ldrb	r3, [r4, #2]
 8002918:	7862      	ldrb	r2, [r4, #1]
 800291a:	429a      	cmp	r2, r3
{
 800291c:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800291e:	d91f      	bls.n	8002960 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8002920:	b303      	cbz	r3, 8002964 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8002922:	2b01      	cmp	r3, #1
 8002924:	bf14      	ite	ne
 8002926:	2100      	movne	r1, #0
 8002928:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 800292a:	2304      	movs	r3, #4
 800292c:	eb0d 0203 	add.w	r2, sp, r3
 8002930:	b2c0      	uxtb	r0, r0
 8002932:	f000 fb73 	bl	800301c <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8002936:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800293a:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800293e:	021b      	lsls	r3, r3, #8
 8002940:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002944:	4313      	orrs	r3, r2
 8002946:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8002948:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800294c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8002950:	021b      	lsls	r3, r3, #8
 8002952:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002956:	4313      	orrs	r3, r2
 8002958:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 800295a:	78a3      	ldrb	r3, [r4, #2]
 800295c:	3301      	adds	r3, #1
 800295e:	70a3      	strb	r3, [r4, #2]
}
 8002960:	b002      	add	sp, #8
 8002962:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8002964:	2103      	movs	r1, #3
 8002966:	e7e0      	b.n	800292a <ft6x06_TS_GetXY+0x1a>
 8002968:	20001552 	.word	0x20001552

0800296c <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800296c:	2201      	movs	r2, #1
 800296e:	21a4      	movs	r1, #164	; 0xa4
 8002970:	b2c0      	uxtb	r0, r0
 8002972:	f000 bb1b 	b.w	8002fac <TS_IO_Write>

08002976 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002976:	2200      	movs	r2, #0
 8002978:	21a4      	movs	r1, #164	; 0xa4
 800297a:	b2c0      	uxtb	r0, r0
 800297c:	f000 bb16 	b.w	8002fac <TS_IO_Write>

08002980 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8002980:	f7ff bff9 	b.w	8002976 <ft6x06_TS_DisableIT>

08002984 <ft6x06_TS_ClearIT>:
 8002984:	4770      	bx	lr
	...

08002988 <ft6x06_Init>:
{  
 8002988:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 800298a:	4b09      	ldr	r3, [pc, #36]	; (80029b0 <ft6x06_Init+0x28>)
 800298c:	781a      	ldrb	r2, [r3, #0]
 800298e:	4290      	cmp	r0, r2
 8002990:	d00a      	beq.n	80029a8 <ft6x06_Init+0x20>
 8002992:	7859      	ldrb	r1, [r3, #1]
 8002994:	4288      	cmp	r0, r1
 8002996:	d007      	beq.n	80029a8 <ft6x06_Init+0x20>
 8002998:	b10a      	cbz	r2, 800299e <ft6x06_Init+0x16>
 800299a:	b929      	cbnz	r1, 80029a8 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 800299c:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 800299e:	5498      	strb	r0, [r3, r2]
}
 80029a0:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 80029a4:	f000 bb00 	b.w	8002fa8 <TS_IO_Init>
}
 80029a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80029ac:	4770      	bx	lr
 80029ae:	bf00      	nop
 80029b0:	20001550 	.word	0x20001550

080029b4 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 80029b4:	b538      	push	{r3, r4, r5, lr}
 80029b6:	4604      	mov	r4, r0
 80029b8:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80029ba:	2000      	movs	r0, #0
 80029bc:	49c9      	ldr	r1, [pc, #804]	; (8002ce4 <OTM8009A_Init+0x330>)
 80029be:	f7fe f86b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 80029c2:	49c9      	ldr	r1, [pc, #804]	; (8002ce8 <OTM8009A_Init+0x334>)
 80029c4:	2003      	movs	r0, #3
 80029c6:	f7fe f867 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 80029ca:	49c8      	ldr	r1, [pc, #800]	; (8002cec <OTM8009A_Init+0x338>)
 80029cc:	2000      	movs	r0, #0
 80029ce:	f7fe f863 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 80029d2:	49c7      	ldr	r1, [pc, #796]	; (8002cf0 <OTM8009A_Init+0x33c>)
 80029d4:	2002      	movs	r0, #2
 80029d6:	f7fe f85f 	bl	8000a98 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80029da:	49c4      	ldr	r1, [pc, #784]	; (8002cec <OTM8009A_Init+0x338>)
 80029dc:	2000      	movs	r0, #0
 80029de:	f7fe f85b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 80029e2:	49c4      	ldr	r1, [pc, #784]	; (8002cf4 <OTM8009A_Init+0x340>)
 80029e4:	2000      	movs	r0, #0
 80029e6:	f7fe f857 	bl	8000a98 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80029ea:	200a      	movs	r0, #10
 80029ec:	f000 fb2e 	bl	800304c <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 80029f0:	49c1      	ldr	r1, [pc, #772]	; (8002cf8 <OTM8009A_Init+0x344>)
 80029f2:	2000      	movs	r0, #0
 80029f4:	f7fe f850 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 80029f8:	49c0      	ldr	r1, [pc, #768]	; (8002cfc <OTM8009A_Init+0x348>)
 80029fa:	2000      	movs	r0, #0
 80029fc:	f7fe f84c 	bl	8000a98 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002a00:	200a      	movs	r0, #10
 8002a02:	f000 fb23 	bl	800304c <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8002a06:	49be      	ldr	r1, [pc, #760]	; (8002d00 <OTM8009A_Init+0x34c>)
 8002a08:	2000      	movs	r0, #0
 8002a0a:	f7fe f845 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8002a0e:	49bd      	ldr	r1, [pc, #756]	; (8002d04 <OTM8009A_Init+0x350>)
 8002a10:	2000      	movs	r0, #0
 8002a12:	f7fe f841 	bl	8000a98 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8002a16:	49bc      	ldr	r1, [pc, #752]	; (8002d08 <OTM8009A_Init+0x354>)
 8002a18:	2000      	movs	r0, #0
 8002a1a:	f7fe f83d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002a1e:	49bb      	ldr	r1, [pc, #748]	; (8002d0c <OTM8009A_Init+0x358>)
 8002a20:	2000      	movs	r0, #0
 8002a22:	f7fe f839 	bl	8000a98 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8002a26:	49ba      	ldr	r1, [pc, #744]	; (8002d10 <OTM8009A_Init+0x35c>)
 8002a28:	2000      	movs	r0, #0
 8002a2a:	f7fe f835 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8002a2e:	49b9      	ldr	r1, [pc, #740]	; (8002d14 <OTM8009A_Init+0x360>)
 8002a30:	2000      	movs	r0, #0
 8002a32:	f7fe f831 	bl	8000a98 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002a36:	49ab      	ldr	r1, [pc, #684]	; (8002ce4 <OTM8009A_Init+0x330>)
 8002a38:	2000      	movs	r0, #0
 8002a3a:	f7fe f82d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8002a3e:	49b6      	ldr	r1, [pc, #728]	; (8002d18 <OTM8009A_Init+0x364>)
 8002a40:	2000      	movs	r0, #0
 8002a42:	f7fe f829 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002a46:	49b5      	ldr	r1, [pc, #724]	; (8002d1c <OTM8009A_Init+0x368>)
 8002a48:	2000      	movs	r0, #0
 8002a4a:	f7fe f825 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8002a4e:	49b4      	ldr	r1, [pc, #720]	; (8002d20 <OTM8009A_Init+0x36c>)
 8002a50:	2000      	movs	r0, #0
 8002a52:	f7fe f821 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002a56:	49b3      	ldr	r1, [pc, #716]	; (8002d24 <OTM8009A_Init+0x370>)
 8002a58:	2000      	movs	r0, #0
 8002a5a:	f7fe f81d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8002a5e:	49b2      	ldr	r1, [pc, #712]	; (8002d28 <OTM8009A_Init+0x374>)
 8002a60:	2000      	movs	r0, #0
 8002a62:	f7fe f819 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8002a66:	49b1      	ldr	r1, [pc, #708]	; (8002d2c <OTM8009A_Init+0x378>)
 8002a68:	2000      	movs	r0, #0
 8002a6a:	f7fe f815 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8002a6e:	49b0      	ldr	r1, [pc, #704]	; (8002d30 <OTM8009A_Init+0x37c>)
 8002a70:	2000      	movs	r0, #0
 8002a72:	f7fe f811 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8002a76:	49af      	ldr	r1, [pc, #700]	; (8002d34 <OTM8009A_Init+0x380>)
 8002a78:	2000      	movs	r0, #0
 8002a7a:	f7fe f80d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002a7e:	49a3      	ldr	r1, [pc, #652]	; (8002d0c <OTM8009A_Init+0x358>)
 8002a80:	2000      	movs	r0, #0
 8002a82:	f7fe f809 	bl	8000a98 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002a86:	4997      	ldr	r1, [pc, #604]	; (8002ce4 <OTM8009A_Init+0x330>)
 8002a88:	2000      	movs	r0, #0
 8002a8a:	f7fe f805 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8002a8e:	49aa      	ldr	r1, [pc, #680]	; (8002d38 <OTM8009A_Init+0x384>)
 8002a90:	2002      	movs	r0, #2
 8002a92:	f7fe f801 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8002a96:	49a9      	ldr	r1, [pc, #676]	; (8002d3c <OTM8009A_Init+0x388>)
 8002a98:	2000      	movs	r0, #0
 8002a9a:	f7fd fffd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8002a9e:	49a8      	ldr	r1, [pc, #672]	; (8002d40 <OTM8009A_Init+0x38c>)
 8002aa0:	2000      	movs	r0, #0
 8002aa2:	f7fd fff9 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8002aa6:	49a7      	ldr	r1, [pc, #668]	; (8002d44 <OTM8009A_Init+0x390>)
 8002aa8:	2000      	movs	r0, #0
 8002aaa:	f7fd fff5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8002aae:	49a6      	ldr	r1, [pc, #664]	; (8002d48 <OTM8009A_Init+0x394>)
 8002ab0:	2000      	movs	r0, #0
 8002ab2:	f7fd fff1 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8002ab6:	49a5      	ldr	r1, [pc, #660]	; (8002d4c <OTM8009A_Init+0x398>)
 8002ab8:	2000      	movs	r0, #0
 8002aba:	f7fd ffed 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8002abe:	49a4      	ldr	r1, [pc, #656]	; (8002d50 <OTM8009A_Init+0x39c>)
 8002ac0:	2000      	movs	r0, #0
 8002ac2:	f7fd ffe9 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002ac6:	4995      	ldr	r1, [pc, #596]	; (8002d1c <OTM8009A_Init+0x368>)
 8002ac8:	2000      	movs	r0, #0
 8002aca:	f7fd ffe5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8002ace:	49a1      	ldr	r1, [pc, #644]	; (8002d54 <OTM8009A_Init+0x3a0>)
 8002ad0:	2000      	movs	r0, #0
 8002ad2:	f7fd ffe1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002ad6:	4993      	ldr	r1, [pc, #588]	; (8002d24 <OTM8009A_Init+0x370>)
 8002ad8:	2000      	movs	r0, #0
 8002ada:	f7fd ffdd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8002ade:	499e      	ldr	r1, [pc, #632]	; (8002d58 <OTM8009A_Init+0x3a4>)
 8002ae0:	2000      	movs	r0, #0
 8002ae2:	f7fd ffd9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8002ae6:	499d      	ldr	r1, [pc, #628]	; (8002d5c <OTM8009A_Init+0x3a8>)
 8002ae8:	2000      	movs	r0, #0
 8002aea:	f7fd ffd5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8002aee:	499c      	ldr	r1, [pc, #624]	; (8002d60 <OTM8009A_Init+0x3ac>)
 8002af0:	2002      	movs	r0, #2
 8002af2:	f7fd ffd1 	bl	8000a98 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002af6:	497d      	ldr	r1, [pc, #500]	; (8002cec <OTM8009A_Init+0x338>)
 8002af8:	2000      	movs	r0, #0
 8002afa:	f7fd ffcd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8002afe:	4999      	ldr	r1, [pc, #612]	; (8002d64 <OTM8009A_Init+0x3b0>)
 8002b00:	2006      	movs	r0, #6
 8002b02:	f7fd ffc9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002b06:	4998      	ldr	r1, [pc, #608]	; (8002d68 <OTM8009A_Init+0x3b4>)
 8002b08:	2000      	movs	r0, #0
 8002b0a:	f7fd ffc5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8002b0e:	4997      	ldr	r1, [pc, #604]	; (8002d6c <OTM8009A_Init+0x3b8>)
 8002b10:	200e      	movs	r0, #14
 8002b12:	f7fd ffc1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002b16:	4996      	ldr	r1, [pc, #600]	; (8002d70 <OTM8009A_Init+0x3bc>)
 8002b18:	2000      	movs	r0, #0
 8002b1a:	f7fd ffbd 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8002b1e:	4995      	ldr	r1, [pc, #596]	; (8002d74 <OTM8009A_Init+0x3c0>)
 8002b20:	200e      	movs	r0, #14
 8002b22:	f7fd ffb9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002b26:	4994      	ldr	r1, [pc, #592]	; (8002d78 <OTM8009A_Init+0x3c4>)
 8002b28:	2000      	movs	r0, #0
 8002b2a:	f7fd ffb5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8002b2e:	4993      	ldr	r1, [pc, #588]	; (8002d7c <OTM8009A_Init+0x3c8>)
 8002b30:	200a      	movs	r0, #10
 8002b32:	f7fd ffb1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002b36:	4992      	ldr	r1, [pc, #584]	; (8002d80 <OTM8009A_Init+0x3cc>)
 8002b38:	2000      	movs	r0, #0
 8002b3a:	f7fd ffad 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8002b3e:	4991      	ldr	r1, [pc, #580]	; (8002d84 <OTM8009A_Init+0x3d0>)
 8002b40:	2000      	movs	r0, #0
 8002b42:	f7fd ffa9 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002b46:	4969      	ldr	r1, [pc, #420]	; (8002cec <OTM8009A_Init+0x338>)
 8002b48:	2000      	movs	r0, #0
 8002b4a:	f7fd ffa5 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8002b4e:	498e      	ldr	r1, [pc, #568]	; (8002d88 <OTM8009A_Init+0x3d4>)
 8002b50:	200a      	movs	r0, #10
 8002b52:	f7fd ffa1 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002b56:	498d      	ldr	r1, [pc, #564]	; (8002d8c <OTM8009A_Init+0x3d8>)
 8002b58:	2000      	movs	r0, #0
 8002b5a:	f7fd ff9d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8002b5e:	498c      	ldr	r1, [pc, #560]	; (8002d90 <OTM8009A_Init+0x3dc>)
 8002b60:	200f      	movs	r0, #15
 8002b62:	f7fd ff99 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002b66:	4980      	ldr	r1, [pc, #512]	; (8002d68 <OTM8009A_Init+0x3b4>)
 8002b68:	2000      	movs	r0, #0
 8002b6a:	f7fd ff95 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8002b6e:	4989      	ldr	r1, [pc, #548]	; (8002d94 <OTM8009A_Init+0x3e0>)
 8002b70:	200f      	movs	r0, #15
 8002b72:	f7fd ff91 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002b76:	497e      	ldr	r1, [pc, #504]	; (8002d70 <OTM8009A_Init+0x3bc>)
 8002b78:	2000      	movs	r0, #0
 8002b7a:	f7fd ff8d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8002b7e:	4986      	ldr	r1, [pc, #536]	; (8002d98 <OTM8009A_Init+0x3e4>)
 8002b80:	200a      	movs	r0, #10
 8002b82:	f7fd ff89 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002b86:	497c      	ldr	r1, [pc, #496]	; (8002d78 <OTM8009A_Init+0x3c4>)
 8002b88:	2000      	movs	r0, #0
 8002b8a:	f7fd ff85 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8002b8e:	4983      	ldr	r1, [pc, #524]	; (8002d9c <OTM8009A_Init+0x3e8>)
 8002b90:	200f      	movs	r0, #15
 8002b92:	f7fd ff81 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002b96:	497a      	ldr	r1, [pc, #488]	; (8002d80 <OTM8009A_Init+0x3cc>)
 8002b98:	2000      	movs	r0, #0
 8002b9a:	f7fd ff7d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8002b9e:	4980      	ldr	r1, [pc, #512]	; (8002da0 <OTM8009A_Init+0x3ec>)
 8002ba0:	200f      	movs	r0, #15
 8002ba2:	f7fd ff79 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8002ba6:	497f      	ldr	r1, [pc, #508]	; (8002da4 <OTM8009A_Init+0x3f0>)
 8002ba8:	2000      	movs	r0, #0
 8002baa:	f7fd ff75 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 8002bae:	497e      	ldr	r1, [pc, #504]	; (8002da8 <OTM8009A_Init+0x3f4>)
 8002bb0:	200a      	movs	r0, #10
 8002bb2:	f7fd ff71 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8002bb6:	497d      	ldr	r1, [pc, #500]	; (8002dac <OTM8009A_Init+0x3f8>)
 8002bb8:	2000      	movs	r0, #0
 8002bba:	f7fd ff6d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8002bbe:	497c      	ldr	r1, [pc, #496]	; (8002db0 <OTM8009A_Init+0x3fc>)
 8002bc0:	200a      	movs	r0, #10
 8002bc2:	f7fd ff69 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002bc6:	4949      	ldr	r1, [pc, #292]	; (8002cec <OTM8009A_Init+0x338>)
 8002bc8:	2000      	movs	r0, #0
 8002bca:	f7fd ff65 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8002bce:	4979      	ldr	r1, [pc, #484]	; (8002db4 <OTM8009A_Init+0x400>)
 8002bd0:	200a      	movs	r0, #10
 8002bd2:	f7fd ff61 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002bd6:	496d      	ldr	r1, [pc, #436]	; (8002d8c <OTM8009A_Init+0x3d8>)
 8002bd8:	2000      	movs	r0, #0
 8002bda:	f7fd ff5d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8002bde:	4976      	ldr	r1, [pc, #472]	; (8002db8 <OTM8009A_Init+0x404>)
 8002be0:	200f      	movs	r0, #15
 8002be2:	f7fd ff59 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002be6:	4960      	ldr	r1, [pc, #384]	; (8002d68 <OTM8009A_Init+0x3b4>)
 8002be8:	2000      	movs	r0, #0
 8002bea:	f7fd ff55 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8002bee:	4973      	ldr	r1, [pc, #460]	; (8002dbc <OTM8009A_Init+0x408>)
 8002bf0:	200f      	movs	r0, #15
 8002bf2:	f7fd ff51 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002bf6:	495e      	ldr	r1, [pc, #376]	; (8002d70 <OTM8009A_Init+0x3bc>)
 8002bf8:	2000      	movs	r0, #0
 8002bfa:	f7fd ff4d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8002bfe:	4970      	ldr	r1, [pc, #448]	; (8002dc0 <OTM8009A_Init+0x40c>)
 8002c00:	200a      	movs	r0, #10
 8002c02:	f7fd ff49 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002c06:	495c      	ldr	r1, [pc, #368]	; (8002d78 <OTM8009A_Init+0x3c4>)
 8002c08:	2000      	movs	r0, #0
 8002c0a:	f7fd ff45 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8002c0e:	496d      	ldr	r1, [pc, #436]	; (8002dc4 <OTM8009A_Init+0x410>)
 8002c10:	200f      	movs	r0, #15
 8002c12:	f7fd ff41 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002c16:	495a      	ldr	r1, [pc, #360]	; (8002d80 <OTM8009A_Init+0x3cc>)
 8002c18:	2000      	movs	r0, #0
 8002c1a:	f7fd ff3d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8002c1e:	496a      	ldr	r1, [pc, #424]	; (8002dc8 <OTM8009A_Init+0x414>)
 8002c20:	200f      	movs	r0, #15
 8002c22:	f7fd ff39 	bl	8000a98 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002c26:	493d      	ldr	r1, [pc, #244]	; (8002d1c <OTM8009A_Init+0x368>)
 8002c28:	2000      	movs	r0, #0
 8002c2a:	f7fd ff35 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8002c2e:	4967      	ldr	r1, [pc, #412]	; (8002dcc <OTM8009A_Init+0x418>)
 8002c30:	2000      	movs	r0, #0
 8002c32:	f7fd ff31 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8002c36:	4966      	ldr	r1, [pc, #408]	; (8002dd0 <OTM8009A_Init+0x41c>)
 8002c38:	2000      	movs	r0, #0
 8002c3a:	f7fd ff2d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8002c3e:	4965      	ldr	r1, [pc, #404]	; (8002dd4 <OTM8009A_Init+0x420>)
 8002c40:	2000      	movs	r0, #0
 8002c42:	f7fd ff29 	bl	8000a98 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8002c46:	4964      	ldr	r1, [pc, #400]	; (8002dd8 <OTM8009A_Init+0x424>)
 8002c48:	2000      	movs	r0, #0
 8002c4a:	f7fd ff25 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8002c4e:	4963      	ldr	r1, [pc, #396]	; (8002ddc <OTM8009A_Init+0x428>)
 8002c50:	2000      	movs	r0, #0
 8002c52:	f7fd ff21 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002c56:	4923      	ldr	r1, [pc, #140]	; (8002ce4 <OTM8009A_Init+0x330>)
 8002c58:	2000      	movs	r0, #0
 8002c5a:	f7fd ff1d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8002c5e:	4960      	ldr	r1, [pc, #384]	; (8002de0 <OTM8009A_Init+0x42c>)
 8002c60:	2003      	movs	r0, #3
 8002c62:	f7fd ff19 	bl	8000a98 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002c66:	491f      	ldr	r1, [pc, #124]	; (8002ce4 <OTM8009A_Init+0x330>)
 8002c68:	2000      	movs	r0, #0
 8002c6a:	f7fd ff15 	bl	8000a98 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002c6e:	491d      	ldr	r1, [pc, #116]	; (8002ce4 <OTM8009A_Init+0x330>)
 8002c70:	2000      	movs	r0, #0
 8002c72:	f7fd ff11 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8002c76:	495b      	ldr	r1, [pc, #364]	; (8002de4 <OTM8009A_Init+0x430>)
 8002c78:	2010      	movs	r0, #16
 8002c7a:	f7fd ff0d 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002c7e:	4919      	ldr	r1, [pc, #100]	; (8002ce4 <OTM8009A_Init+0x330>)
 8002c80:	2000      	movs	r0, #0
 8002c82:	f7fd ff09 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8002c86:	4958      	ldr	r1, [pc, #352]	; (8002de8 <OTM8009A_Init+0x434>)
 8002c88:	2010      	movs	r0, #16
 8002c8a:	f7fd ff05 	bl	8000a98 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 8002c8e:	2000      	movs	r0, #0
 8002c90:	4956      	ldr	r1, [pc, #344]	; (8002dec <OTM8009A_Init+0x438>)
 8002c92:	f7fd ff01 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8002c96:	2078      	movs	r0, #120	; 0x78
 8002c98:	f000 f9d8 	bl	800304c <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8002c9c:	2c00      	cmp	r4, #0
 8002c9e:	f000 80c7 	beq.w	8002e30 <OTM8009A_Init+0x47c>
 8002ca2:	2c02      	cmp	r4, #2
 8002ca4:	d103      	bne.n	8002cae <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8002ca6:	4952      	ldr	r1, [pc, #328]	; (8002df0 <OTM8009A_Init+0x43c>)
 8002ca8:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002caa:	f7fd fef5 	bl	8000a98 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8002cae:	2d01      	cmp	r5, #1
 8002cb0:	d10b      	bne.n	8002cca <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 8002cb2:	4950      	ldr	r1, [pc, #320]	; (8002df4 <OTM8009A_Init+0x440>)
 8002cb4:	2000      	movs	r0, #0
 8002cb6:	f7fd feef 	bl	8000a98 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8002cba:	494f      	ldr	r1, [pc, #316]	; (8002df8 <OTM8009A_Init+0x444>)
 8002cbc:	2004      	movs	r0, #4
 8002cbe:	f7fd feeb 	bl	8000a98 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8002cc2:	494e      	ldr	r1, [pc, #312]	; (8002dfc <OTM8009A_Init+0x448>)
 8002cc4:	2004      	movs	r0, #4
 8002cc6:	f7fd fee7 	bl	8000a98 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8002cca:	494d      	ldr	r1, [pc, #308]	; (8002e00 <OTM8009A_Init+0x44c>)
 8002ccc:	2000      	movs	r0, #0
 8002cce:	f7fd fee3 	bl	8000a98 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8002cd2:	494c      	ldr	r1, [pc, #304]	; (8002e04 <OTM8009A_Init+0x450>)
 8002cd4:	2000      	movs	r0, #0
 8002cd6:	f7fd fedf 	bl	8000a98 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8002cda:	494b      	ldr	r1, [pc, #300]	; (8002e08 <OTM8009A_Init+0x454>)
 8002cdc:	2000      	movs	r0, #0
 8002cde:	f7fd fedb 	bl	8000a98 <DSI_IO_WriteCmd>
 8002ce2:	e093      	b.n	8002e0c <OTM8009A_Init+0x458>
 8002ce4:	0801bd88 	.word	0x0801bd88
 8002ce8:	0801bdee 	.word	0x0801bdee
 8002cec:	0801bd9e 	.word	0x0801bd9e
 8002cf0:	0801be74 	.word	0x0801be74
 8002cf4:	0801bdb4 	.word	0x0801bdb4
 8002cf8:	0801bdca 	.word	0x0801bdca
 8002cfc:	0801bde0 	.word	0x0801bde0
 8002d00:	0801bde6 	.word	0x0801bde6
 8002d04:	0801bde8 	.word	0x0801bde8
 8002d08:	0801bdea 	.word	0x0801bdea
 8002d0c:	0801bdec 	.word	0x0801bdec
 8002d10:	0801bd8a 	.word	0x0801bd8a
 8002d14:	0801bd8c 	.word	0x0801bd8c
 8002d18:	0801bd8e 	.word	0x0801bd8e
 8002d1c:	0801bd90 	.word	0x0801bd90
 8002d20:	0801bd92 	.word	0x0801bd92
 8002d24:	0801bd94 	.word	0x0801bd94
 8002d28:	0801bd96 	.word	0x0801bd96
 8002d2c:	0801bd98 	.word	0x0801bd98
 8002d30:	0801bd9a 	.word	0x0801bd9a
 8002d34:	0801bd9c 	.word	0x0801bd9c
 8002d38:	0801bef2 	.word	0x0801bef2
 8002d3c:	0801bda0 	.word	0x0801bda0
 8002d40:	0801bda2 	.word	0x0801bda2
 8002d44:	0801bda4 	.word	0x0801bda4
 8002d48:	0801bda6 	.word	0x0801bda6
 8002d4c:	0801bda8 	.word	0x0801bda8
 8002d50:	0801bdaa 	.word	0x0801bdaa
 8002d54:	0801bdac 	.word	0x0801bdac
 8002d58:	0801bdae 	.word	0x0801bdae
 8002d5c:	0801bdb0 	.word	0x0801bdb0
 8002d60:	0801bef5 	.word	0x0801bef5
 8002d64:	0801bef8 	.word	0x0801bef8
 8002d68:	0801bdb2 	.word	0x0801bdb2
 8002d6c:	0801beff 	.word	0x0801beff
 8002d70:	0801bdb6 	.word	0x0801bdb6
 8002d74:	0801bf0e 	.word	0x0801bf0e
 8002d78:	0801bdb8 	.word	0x0801bdb8
 8002d7c:	0801bdf2 	.word	0x0801bdf2
 8002d80:	0801bdba 	.word	0x0801bdba
 8002d84:	0801bdd8 	.word	0x0801bdd8
 8002d88:	0801bdfd 	.word	0x0801bdfd
 8002d8c:	0801bdbc 	.word	0x0801bdbc
 8002d90:	0801be08 	.word	0x0801be08
 8002d94:	0801be18 	.word	0x0801be18
 8002d98:	0801be28 	.word	0x0801be28
 8002d9c:	0801be33 	.word	0x0801be33
 8002da0:	0801be43 	.word	0x0801be43
 8002da4:	0801bdbe 	.word	0x0801bdbe
 8002da8:	0801be53 	.word	0x0801be53
 8002dac:	0801bdc0 	.word	0x0801bdc0
 8002db0:	0801be5e 	.word	0x0801be5e
 8002db4:	0801be69 	.word	0x0801be69
 8002db8:	0801be77 	.word	0x0801be77
 8002dbc:	0801be87 	.word	0x0801be87
 8002dc0:	0801be97 	.word	0x0801be97
 8002dc4:	0801bea2 	.word	0x0801bea2
 8002dc8:	0801beb2 	.word	0x0801beb2
 8002dcc:	0801bdda 	.word	0x0801bdda
 8002dd0:	0801bddc 	.word	0x0801bddc
 8002dd4:	0801bdde 	.word	0x0801bdde
 8002dd8:	0801bde2 	.word	0x0801bde2
 8002ddc:	0801bde4 	.word	0x0801bde4
 8002de0:	0801bec2 	.word	0x0801bec2
 8002de4:	0801bed0 	.word	0x0801bed0
 8002de8:	0801bee1 	.word	0x0801bee1
 8002dec:	0801bdc2 	.word	0x0801bdc2
 8002df0:	0801bdc4 	.word	0x0801bdc4
 8002df4:	0801bdc8 	.word	0x0801bdc8
 8002df8:	0801bec6 	.word	0x0801bec6
 8002dfc:	0801becb 	.word	0x0801becb
 8002e00:	0801bdcc 	.word	0x0801bdcc
 8002e04:	0801bdce 	.word	0x0801bdce
 8002e08:	0801bdd0 	.word	0x0801bdd0

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8002e0c:	490a      	ldr	r1, [pc, #40]	; (8002e38 <OTM8009A_Init+0x484>)
 8002e0e:	2000      	movs	r0, #0
 8002e10:	f7fd fe42 	bl	8000a98 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8002e14:	4909      	ldr	r1, [pc, #36]	; (8002e3c <OTM8009A_Init+0x488>)
 8002e16:	2000      	movs	r0, #0
 8002e18:	f7fd fe3e 	bl	8000a98 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002e1c:	4908      	ldr	r1, [pc, #32]	; (8002e40 <OTM8009A_Init+0x48c>)
 8002e1e:	2000      	movs	r0, #0
 8002e20:	f7fd fe3a 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8002e24:	4907      	ldr	r1, [pc, #28]	; (8002e44 <OTM8009A_Init+0x490>)
 8002e26:	2000      	movs	r0, #0
 8002e28:	f7fd fe36 	bl	8000a98 <DSI_IO_WriteCmd>

  return 0;
}
 8002e2c:	2000      	movs	r0, #0
 8002e2e:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002e30:	4905      	ldr	r1, [pc, #20]	; (8002e48 <OTM8009A_Init+0x494>)
 8002e32:	4620      	mov	r0, r4
 8002e34:	e739      	b.n	8002caa <OTM8009A_Init+0x2f6>
 8002e36:	bf00      	nop
 8002e38:	0801bdd2 	.word	0x0801bdd2
 8002e3c:	0801bdd4 	.word	0x0801bdd4
 8002e40:	0801bd88 	.word	0x0801bd88
 8002e44:	0801bdd6 	.word	0x0801bdd6
 8002e48:	0801bdc6 	.word	0x0801bdc6

08002e4c <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8002e4c:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8002e4e:	4d2f      	ldr	r5, [pc, #188]	; (8002f0c <I2C1_Init+0xc0>)
{
 8002e50:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8002e52:	4628      	mov	r0, r5
 8002e54:	f002 f964 	bl	8005120 <HAL_I2C_GetState>
 8002e58:	4604      	mov	r4, r0
 8002e5a:	2800      	cmp	r0, #0
 8002e5c:	d154      	bne.n	8002f08 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8002e5e:	4a2c      	ldr	r2, [pc, #176]	; (8002f10 <I2C1_Init+0xc4>)
 8002e60:	4b2c      	ldr	r3, [pc, #176]	; (8002f14 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002e62:	4e2d      	ldr	r6, [pc, #180]	; (8002f18 <I2C1_Init+0xcc>)
 8002e64:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8002e66:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8002e6a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8002e6e:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002e72:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002e76:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8002e7a:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002e7c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8002e7e:	f043 0302 	orr.w	r3, r3, #2
 8002e82:	6333      	str	r3, [r6, #48]	; 0x30
 8002e84:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8002e86:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002e88:	f003 0302 	and.w	r3, r3, #2
 8002e8c:	9301      	str	r3, [sp, #4]
 8002e8e:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8002e90:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002e94:	2312      	movs	r3, #18
 8002e96:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8002e9a:	2002      	movs	r0, #2
 8002e9c:	2304      	movs	r3, #4
 8002e9e:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002ea2:	a903      	add	r1, sp, #12
 8002ea4:	481d      	ldr	r0, [pc, #116]	; (8002f1c <I2C1_Init+0xd0>)
 8002ea6:	f001 fb69 	bl	800457c <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8002eaa:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002eae:	a903      	add	r1, sp, #12
 8002eb0:	481a      	ldr	r0, [pc, #104]	; (8002f1c <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8002eb2:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002eb4:	f001 fb62 	bl	800457c <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8002eb8:	9402      	str	r4, [sp, #8]
 8002eba:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8002ebc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002ec0:	6433      	str	r3, [r6, #64]	; 0x40
 8002ec2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8002ec4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002ec8:	9302      	str	r3, [sp, #8]
 8002eca:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8002ecc:	6a33      	ldr	r3, [r6, #32]
 8002ece:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002ed2:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8002ed4:	6a33      	ldr	r3, [r6, #32]
 8002ed6:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002eda:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8002edc:	4622      	mov	r2, r4
 8002ede:	2105      	movs	r1, #5
 8002ee0:	201f      	movs	r0, #31
 8002ee2:	f000 fd15 	bl	8003910 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8002ee6:	201f      	movs	r0, #31
 8002ee8:	f000 fd44 	bl	8003974 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8002eec:	4622      	mov	r2, r4
 8002eee:	2105      	movs	r1, #5
 8002ef0:	2020      	movs	r0, #32
 8002ef2:	f000 fd0d 	bl	8003910 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8002ef6:	2020      	movs	r0, #32
 8002ef8:	f000 fd3c 	bl	8003974 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8002efc:	4628      	mov	r0, r5
  }
}
 8002efe:	b008      	add	sp, #32
 8002f00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 8002f04:	f001 beb2 	b.w	8004c6c <HAL_I2C_Init>
}
 8002f08:	b008      	add	sp, #32
 8002f0a:	bd70      	pop	{r4, r5, r6, pc}
 8002f0c:	20001558 	.word	0x20001558
 8002f10:	40005400 	.word	0x40005400
 8002f14:	00061a80 	.word	0x00061a80
 8002f18:	40023800 	.word	0x40023800
 8002f1c:	40020400 	.word	0x40020400

08002f20 <BSP_PB_Init>:
{
 8002f20:	b510      	push	{r4, lr}
 8002f22:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8002f24:	4b19      	ldr	r3, [pc, #100]	; (8002f8c <BSP_PB_Init+0x6c>)
 8002f26:	2400      	movs	r4, #0
 8002f28:	9400      	str	r4, [sp, #0]
 8002f2a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002f2c:	f042 0201 	orr.w	r2, r2, #1
 8002f30:	631a      	str	r2, [r3, #48]	; 0x30
 8002f32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f34:	f003 0301 	and.w	r3, r3, #1
 8002f38:	9300      	str	r3, [sp, #0]
 8002f3a:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8002f3c:	b969      	cbnz	r1, 8002f5a <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8002f3e:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8002f40:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8002f44:	2302      	movs	r3, #2
 8002f46:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002f48:	4b11      	ldr	r3, [pc, #68]	; (8002f90 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8002f4a:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002f4c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002f50:	a901      	add	r1, sp, #4
 8002f52:	f001 fb13 	bl	800457c <HAL_GPIO_Init>
}
 8002f56:	b006      	add	sp, #24
 8002f58:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8002f5a:	2901      	cmp	r1, #1
 8002f5c:	d1fb      	bne.n	8002f56 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8002f5e:	2302      	movs	r3, #2
 8002f60:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8002f62:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002f66:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002f68:	4b09      	ldr	r3, [pc, #36]	; (8002f90 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8002f6a:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002f6c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8002f70:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002f72:	a901      	add	r1, sp, #4
 8002f74:	f001 fb02 	bl	800457c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8002f78:	4622      	mov	r2, r4
 8002f7a:	210f      	movs	r1, #15
 8002f7c:	2006      	movs	r0, #6
 8002f7e:	f000 fcc7 	bl	8003910 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8002f82:	2006      	movs	r0, #6
 8002f84:	f000 fcf6 	bl	8003974 <HAL_NVIC_EnableIRQ>
}
 8002f88:	e7e5      	b.n	8002f56 <BSP_PB_Init+0x36>
 8002f8a:	bf00      	nop
 8002f8c:	40023800 	.word	0x40023800
 8002f90:	20000048 	.word	0x20000048

08002f94 <BSP_PB_GetState>:
{
 8002f94:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8002f96:	4b03      	ldr	r3, [pc, #12]	; (8002fa4 <BSP_PB_GetState+0x10>)
 8002f98:	2101      	movs	r1, #1
 8002f9a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002f9e:	f001 fc75 	bl	800488c <HAL_GPIO_ReadPin>
}
 8002fa2:	bd08      	pop	{r3, pc}
 8002fa4:	20000048 	.word	0x20000048

08002fa8 <TS_IO_Init>:
 8002fa8:	f7ff bf50 	b.w	8002e4c <I2C1_Init>

08002fac <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8002fac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8002fae:	2301      	movs	r3, #1
 8002fb0:	f88d 2017 	strb.w	r2, [sp, #23]
 8002fb4:	2264      	movs	r2, #100	; 0x64
 8002fb6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002fba:	f10d 0217 	add.w	r2, sp, #23
 8002fbe:	9200      	str	r2, [sp, #0]
 8002fc0:	460a      	mov	r2, r1
 8002fc2:	4601      	mov	r1, r0
 8002fc4:	4805      	ldr	r0, [pc, #20]	; (8002fdc <TS_IO_Write+0x30>)
 8002fc6:	f001 ff13 	bl	8004df0 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8002fca:	b120      	cbz	r0, 8002fd6 <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 8002fcc:	4803      	ldr	r0, [pc, #12]	; (8002fdc <TS_IO_Write+0x30>)
 8002fce:	f001 fef5 	bl	8004dbc <HAL_I2C_DeInit>
  I2C1_Init();
 8002fd2:	f7ff ff3b 	bl	8002e4c <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 8002fd6:	b007      	add	sp, #28
 8002fd8:	f85d fb04 	ldr.w	pc, [sp], #4
 8002fdc:	20001558 	.word	0x20001558

08002fe0 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8002fe0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8002fe2:	2300      	movs	r3, #0
{
 8002fe4:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8002fe6:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8002fea:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002fee:	2301      	movs	r3, #1
 8002ff0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8002ff4:	f10d 0117 	add.w	r1, sp, #23
 8002ff8:	9100      	str	r1, [sp, #0]
 8002ffa:	4601      	mov	r1, r0
 8002ffc:	4806      	ldr	r0, [pc, #24]	; (8003018 <TS_IO_Read+0x38>)
 8002ffe:	f001 ff87 	bl	8004f10 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003002:	b120      	cbz	r0, 800300e <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8003004:	4804      	ldr	r0, [pc, #16]	; (8003018 <TS_IO_Read+0x38>)
 8003006:	f001 fed9 	bl	8004dbc <HAL_I2C_DeInit>
  I2C1_Init();
 800300a:	f7ff ff1f 	bl	8002e4c <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 800300e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8003012:	b007      	add	sp, #28
 8003014:	f85d fb04 	ldr.w	pc, [sp], #4
 8003018:	20001558 	.word	0x20001558

0800301c <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 800301c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800301e:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003022:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003026:	9200      	str	r2, [sp, #0]
 8003028:	2301      	movs	r3, #1
 800302a:	460a      	mov	r2, r1
 800302c:	4601      	mov	r1, r0
 800302e:	4806      	ldr	r0, [pc, #24]	; (8003048 <TS_IO_ReadMultiple+0x2c>)
 8003030:	f001 ff6e 	bl	8004f10 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003034:	4604      	mov	r4, r0
 8003036:	b120      	cbz	r0, 8003042 <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 8003038:	4803      	ldr	r0, [pc, #12]	; (8003048 <TS_IO_ReadMultiple+0x2c>)
 800303a:	f001 febf 	bl	8004dbc <HAL_I2C_DeInit>
  I2C1_Init();
 800303e:	f7ff ff05 	bl	8002e4c <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8003042:	b2a0      	uxth	r0, r4
 8003044:	b004      	add	sp, #16
 8003046:	bd10      	pop	{r4, pc}
 8003048:	20001558 	.word	0x20001558

0800304c <OTM8009A_IO_Delay>:
 800304c:	f000 bc3a 	b.w	80038c4 <HAL_Delay>

08003050 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003050:	b500      	push	{lr}
 8003052:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003054:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003058:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800305a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800305e:	2205      	movs	r2, #5
 8003060:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003062:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003064:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8003066:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8003068:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800306c:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003070:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8003074:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003076:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003078:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 800307a:	2210      	movs	r2, #16
 800307c:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800307e:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003082:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8003084:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003086:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003088:	a906      	add	r1, sp, #24
 800308a:	466a      	mov	r2, sp
 800308c:	4804      	ldr	r0, [pc, #16]	; (80030a0 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 800308e:	f002 fbc0 	bl	8005812 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8003092:	3800      	subs	r0, #0
 8003094:	bf18      	it	ne
 8003096:	2001      	movne	r0, #1
 8003098:	b015      	add	sp, #84	; 0x54
 800309a:	f85d fb04 	ldr.w	pc, [sp], #4
 800309e:	bf00      	nop
 80030a0:	200015ac 	.word	0x200015ac

080030a4 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 80030a4:	b500      	push	{lr}
 80030a6:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80030a8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80030ac:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 80030ae:	2306      	movs	r3, #6
 80030b0:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80030b2:	4817      	ldr	r0, [pc, #92]	; (8003110 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80030b4:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80030b6:	f241 3288 	movw	r2, #5000	; 0x1388
 80030ba:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80030bc:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80030c0:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 80030c4:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 80030c6:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80030c8:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80030ca:	f002 fb5e 	bl	800578a <HAL_QSPI_Command>
 80030ce:	b9e0      	cbnz	r0, 800310a <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 80030d0:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 80030d2:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80030d6:	2201      	movs	r2, #1
 80030d8:	2310      	movs	r3, #16
 80030da:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80030de:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80030e2:	2305      	movs	r3, #5
 80030e4:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80030e8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80030ec:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80030ee:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80030f0:	4807      	ldr	r0, [pc, #28]	; (8003110 <QSPI_WriteEnable.constprop.0+0x6c>)
 80030f2:	f241 3388 	movw	r3, #5000	; 0x1388
 80030f6:	466a      	mov	r2, sp
 80030f8:	a906      	add	r1, sp, #24
 80030fa:	f002 fb8a 	bl	8005812 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 80030fe:	3800      	subs	r0, #0
 8003100:	bf18      	it	ne
 8003102:	2001      	movne	r0, #1
}
 8003104:	b015      	add	sp, #84	; 0x54
 8003106:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 800310a:	2001      	movs	r0, #1
 800310c:	e7fa      	b.n	8003104 <QSPI_WriteEnable.constprop.0+0x60>
 800310e:	bf00      	nop
 8003110:	200015ac 	.word	0x200015ac

08003114 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8003114:	b500      	push	{lr}
 8003116:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003118:	f44f 7380 	mov.w	r3, #256	; 0x100
 800311c:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800311e:	23eb      	movs	r3, #235	; 0xeb
 8003120:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003122:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003126:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8003128:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800312c:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800312e:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8003132:	2300      	movs	r3, #0
 8003134:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8003138:	220a      	movs	r2, #10
 800313a:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800313c:	a902      	add	r1, sp, #8
 800313e:	466a      	mov	r2, sp
 8003140:	4806      	ldr	r0, [pc, #24]	; (800315c <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003142:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003144:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8003148:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800314a:	f002 fbb2 	bl	80058b2 <HAL_QSPI_MemoryMapped>
}
 800314e:	3800      	subs	r0, #0
 8003150:	bf18      	it	ne
 8003152:	2001      	movne	r0, #1
 8003154:	b011      	add	sp, #68	; 0x44
 8003156:	f85d fb04 	ldr.w	pc, [sp], #4
 800315a:	bf00      	nop
 800315c:	200015ac 	.word	0x200015ac

08003160 <BSP_QSPI_MspInit>:
{
 8003160:	b570      	push	{r4, r5, r6, lr}
 8003162:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8003164:	4b2c      	ldr	r3, [pc, #176]	; (8003218 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003166:	482d      	ldr	r0, [pc, #180]	; (800321c <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8003168:	2400      	movs	r4, #0
 800316a:	9400      	str	r4, [sp, #0]
 800316c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800316e:	f042 0202 	orr.w	r2, r2, #2
 8003172:	639a      	str	r2, [r3, #56]	; 0x38
 8003174:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003176:	f002 0202 	and.w	r2, r2, #2
 800317a:	9200      	str	r2, [sp, #0]
 800317c:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800317e:	699a      	ldr	r2, [r3, #24]
 8003180:	f042 0202 	orr.w	r2, r2, #2
 8003184:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003186:	699a      	ldr	r2, [r3, #24]
 8003188:	f022 0202 	bic.w	r2, r2, #2
 800318c:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800318e:	9401      	str	r4, [sp, #4]
 8003190:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003192:	f042 0202 	orr.w	r2, r2, #2
 8003196:	631a      	str	r2, [r3, #48]	; 0x30
 8003198:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800319a:	f002 0202 	and.w	r2, r2, #2
 800319e:	9201      	str	r2, [sp, #4]
 80031a0:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80031a2:	9402      	str	r4, [sp, #8]
 80031a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80031a6:	f042 0220 	orr.w	r2, r2, #32
 80031aa:	631a      	str	r2, [r3, #48]	; 0x30
 80031ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031ae:	f003 0320 	and.w	r3, r3, #32
 80031b2:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80031b4:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80031b6:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80031b8:	2302      	movs	r3, #2
 80031ba:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80031be:	2101      	movs	r1, #1
 80031c0:	2303      	movs	r3, #3
 80031c2:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80031c6:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80031c8:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80031ca:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80031cc:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80031ce:	f001 f9d5 	bl	800457c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80031d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80031d6:	a903      	add	r1, sp, #12
 80031d8:	4811      	ldr	r0, [pc, #68]	; (8003220 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80031da:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80031dc:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80031de:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80031e0:	f001 f9cc 	bl	800457c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80031e4:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80031e8:	a903      	add	r1, sp, #12
 80031ea:	480d      	ldr	r0, [pc, #52]	; (8003220 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80031ec:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80031ee:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80031f0:	f001 f9c4 	bl	800457c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80031f4:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80031f6:	a903      	add	r1, sp, #12
 80031f8:	4809      	ldr	r0, [pc, #36]	; (8003220 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80031fa:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80031fc:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80031fe:	f001 f9bd 	bl	800457c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8003202:	4622      	mov	r2, r4
 8003204:	210f      	movs	r1, #15
 8003206:	205b      	movs	r0, #91	; 0x5b
 8003208:	f000 fb82 	bl	8003910 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 800320c:	205b      	movs	r0, #91	; 0x5b
 800320e:	f000 fbb1 	bl	8003974 <HAL_NVIC_EnableIRQ>
}
 8003212:	b008      	add	sp, #32
 8003214:	bd70      	pop	{r4, r5, r6, pc}
 8003216:	bf00      	nop
 8003218:	40023800 	.word	0x40023800
 800321c:	40020400 	.word	0x40020400
 8003220:	40021400 	.word	0x40021400

08003224 <BSP_QSPI_Init>:
{
 8003224:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8003226:	4c48      	ldr	r4, [pc, #288]	; (8003348 <BSP_QSPI_Init+0x124>)
 8003228:	4b48      	ldr	r3, [pc, #288]	; (800334c <BSP_QSPI_Init+0x128>)
 800322a:	6023      	str	r3, [r4, #0]
{
 800322c:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800322e:	4620      	mov	r0, r4
 8003230:	f002 fa98 	bl	8005764 <HAL_QSPI_DeInit>
 8003234:	4605      	mov	r5, r0
 8003236:	b110      	cbz	r0, 800323e <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003238:	2001      	movs	r0, #1
}
 800323a:	b011      	add	sp, #68	; 0x44
 800323c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800323e:	4601      	mov	r1, r0
 8003240:	4620      	mov	r0, r4
 8003242:	f7ff ff8d 	bl	8003160 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8003246:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003248:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 800324a:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800324e:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003250:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8003254:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003258:	fab3 f383 	clz	r3, r3
 800325c:	3b01      	subs	r3, #1
 800325e:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003260:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8003262:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003266:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 800326a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800326e:	f002 fa25 	bl	80056bc <HAL_QSPI_Init>
 8003272:	2800      	cmp	r0, #0
 8003274:	d1e0      	bne.n	8003238 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003276:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800327a:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800327e:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003282:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003284:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8003286:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003288:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800328a:	f241 3288 	movw	r2, #5000	; 0x1388
 800328e:	a902      	add	r1, sp, #8
 8003290:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003292:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003294:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003296:	f002 fa78 	bl	800578a <HAL_QSPI_Command>
 800329a:	b108      	cbz	r0, 80032a0 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 800329c:	2004      	movs	r0, #4
 800329e:	e7cc      	b.n	800323a <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 80032a0:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032a2:	f241 3288 	movw	r2, #5000	; 0x1388
 80032a6:	a902      	add	r1, sp, #8
 80032a8:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 80032aa:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032ac:	f002 fa6d 	bl	800578a <HAL_QSPI_Command>
 80032b0:	2800      	cmp	r0, #0
 80032b2:	d1f3      	bne.n	800329c <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 80032b4:	f241 3088 	movw	r0, #5000	; 0x1388
 80032b8:	f7ff feca 	bl	8003050 <QSPI_AutoPollingMemReady.constprop.0>
 80032bc:	2800      	cmp	r0, #0
 80032be:	d1ed      	bne.n	800329c <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80032c0:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80032c4:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80032c8:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80032cc:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 80032ce:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032d0:	f241 3288 	movw	r2, #5000	; 0x1388
 80032d4:	a902      	add	r1, sp, #8
 80032d6:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80032d8:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80032da:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80032dc:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032de:	f002 fa54 	bl	800578a <HAL_QSPI_Command>
 80032e2:	2800      	cmp	r0, #0
 80032e4:	d1da      	bne.n	800329c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032e6:	f241 3288 	movw	r2, #5000	; 0x1388
 80032ea:	f10d 0107 	add.w	r1, sp, #7
 80032ee:	4620      	mov	r0, r4
 80032f0:	f002 fbc4 	bl	8005a7c <HAL_QSPI_Receive>
 80032f4:	2800      	cmp	r0, #0
 80032f6:	d1d1      	bne.n	800329c <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80032f8:	f7ff fed4 	bl	80030a4 <QSPI_WriteEnable.constprop.0>
 80032fc:	2800      	cmp	r0, #0
 80032fe:	d1cd      	bne.n	800329c <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8003300:	2381      	movs	r3, #129	; 0x81
 8003302:	9302      	str	r3, [sp, #8]
 8003304:	22f0      	movs	r2, #240	; 0xf0
 8003306:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800330a:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800330e:	210a      	movs	r1, #10
 8003310:	fab2 f282 	clz	r2, r2
 8003314:	fa01 f202 	lsl.w	r2, r1, r2
 8003318:	f003 030f 	and.w	r3, r3, #15
 800331c:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800331e:	a902      	add	r1, sp, #8
 8003320:	f241 3288 	movw	r2, #5000	; 0x1388
 8003324:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003326:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800332a:	f002 fa2e 	bl	800578a <HAL_QSPI_Command>
 800332e:	2800      	cmp	r0, #0
 8003330:	d1b4      	bne.n	800329c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003332:	f241 3288 	movw	r2, #5000	; 0x1388
 8003336:	f10d 0107 	add.w	r1, sp, #7
 800333a:	4620      	mov	r0, r4
 800333c:	f002 fb42 	bl	80059c4 <HAL_QSPI_Transmit>
 8003340:	2800      	cmp	r0, #0
 8003342:	f43f af7a 	beq.w	800323a <BSP_QSPI_Init+0x16>
 8003346:	e7a9      	b.n	800329c <BSP_QSPI_Init+0x78>
 8003348:	200015ac 	.word	0x200015ac
 800334c:	a0001000 	.word	0xa0001000

08003350 <BSP_QSPI_MspDeInit>:
{
 8003350:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8003352:	205b      	movs	r0, #91	; 0x5b
 8003354:	f000 fb1c 	bl	8003990 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8003358:	4814      	ldr	r0, [pc, #80]	; (80033ac <BSP_QSPI_MspDeInit+0x5c>)
 800335a:	2140      	movs	r1, #64	; 0x40
 800335c:	f001 f9f4 	bl	8004748 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8003360:	4813      	ldr	r0, [pc, #76]	; (80033b0 <BSP_QSPI_MspDeInit+0x60>)
 8003362:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003366:	f001 f9ef 	bl	8004748 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800336a:	4811      	ldr	r0, [pc, #68]	; (80033b0 <BSP_QSPI_MspDeInit+0x60>)
 800336c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003370:	f001 f9ea 	bl	8004748 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8003374:	480e      	ldr	r0, [pc, #56]	; (80033b0 <BSP_QSPI_MspDeInit+0x60>)
 8003376:	f44f 7100 	mov.w	r1, #512	; 0x200
 800337a:	f001 f9e5 	bl	8004748 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800337e:	480c      	ldr	r0, [pc, #48]	; (80033b0 <BSP_QSPI_MspDeInit+0x60>)
 8003380:	2180      	movs	r1, #128	; 0x80
 8003382:	f001 f9e1 	bl	8004748 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8003386:	480a      	ldr	r0, [pc, #40]	; (80033b0 <BSP_QSPI_MspDeInit+0x60>)
 8003388:	2140      	movs	r1, #64	; 0x40
 800338a:	f001 f9dd 	bl	8004748 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800338e:	4b09      	ldr	r3, [pc, #36]	; (80033b4 <BSP_QSPI_MspDeInit+0x64>)
 8003390:	699a      	ldr	r2, [r3, #24]
 8003392:	f042 0202 	orr.w	r2, r2, #2
 8003396:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003398:	699a      	ldr	r2, [r3, #24]
 800339a:	f022 0202 	bic.w	r2, r2, #2
 800339e:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 80033a0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80033a2:	f022 0202 	bic.w	r2, r2, #2
 80033a6:	639a      	str	r2, [r3, #56]	; 0x38
}
 80033a8:	bd08      	pop	{r3, pc}
 80033aa:	bf00      	nop
 80033ac:	40020400 	.word	0x40020400
 80033b0:	40021400 	.word	0x40021400
 80033b4:	40023800 	.word	0x40023800

080033b8 <BSP_QSPI_DeInit>:
{
 80033b8:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 80033ba:	4d08      	ldr	r5, [pc, #32]	; (80033dc <BSP_QSPI_DeInit+0x24>)
 80033bc:	4b08      	ldr	r3, [pc, #32]	; (80033e0 <BSP_QSPI_DeInit+0x28>)
 80033be:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80033c0:	4628      	mov	r0, r5
 80033c2:	f002 f9cf 	bl	8005764 <HAL_QSPI_DeInit>
 80033c6:	4604      	mov	r4, r0
 80033c8:	b928      	cbnz	r0, 80033d6 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 80033ca:	4601      	mov	r1, r0
 80033cc:	4628      	mov	r0, r5
 80033ce:	f7ff ffbf 	bl	8003350 <BSP_QSPI_MspDeInit>
}
 80033d2:	4620      	mov	r0, r4
 80033d4:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 80033d6:	2401      	movs	r4, #1
 80033d8:	e7fb      	b.n	80033d2 <BSP_QSPI_DeInit+0x1a>
 80033da:	bf00      	nop
 80033dc:	200015ac 	.word	0x200015ac
 80033e0:	a0001000 	.word	0xa0001000

080033e4 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 80033e4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80033e8:	4c21      	ldr	r4, [pc, #132]	; (8003470 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80033ea:	4d22      	ldr	r5, [pc, #136]	; (8003474 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80033ec:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 80033ee:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80033f2:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80033f4:	4621      	mov	r1, r4
{
 80033f6:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80033f8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80033fc:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80033fe:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8003402:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 8003406:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800340a:	f002 ffdb 	bl	80063c4 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800340e:	4630      	mov	r0, r6
 8003410:	f000 fa58 	bl	80038c4 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8003414:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003416:	4621      	mov	r1, r4
 8003418:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800341c:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800341e:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8003422:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003426:	f002 ffcd 	bl	80063c4 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800342a:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800342c:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003430:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8003432:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003434:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003438:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 800343a:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800343e:	f002 ffc1 	bl	80063c4 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8003442:	f44f 730c 	mov.w	r3, #560	; 0x230
 8003446:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8003448:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800344a:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800344e:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8003450:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8003452:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003454:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003458:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 800345a:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800345c:	f002 ffb2 	bl	80063c4 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003460:	4649      	mov	r1, r9
 8003462:	4628      	mov	r0, r5
}
 8003464:	b003      	add	sp, #12
 8003466:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800346a:	f002 bfc9 	b.w	8006400 <HAL_SDRAM_ProgramRefreshRate>
 800346e:	bf00      	nop
 8003470:	200015f8 	.word	0x200015f8
 8003474:	200016e4 	.word	0x200016e4

08003478 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003478:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800347a:	4606      	mov	r6, r0
{
 800347c:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800347e:	2800      	cmp	r0, #0
 8003480:	f000 80bd 	beq.w	80035fe <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8003484:	4b5f      	ldr	r3, [pc, #380]	; (8003604 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003486:	4860      	ldr	r0, [pc, #384]	; (8003608 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003488:	4c60      	ldr	r4, [pc, #384]	; (800360c <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 800348a:	2500      	movs	r5, #0
 800348c:	9500      	str	r5, [sp, #0]
 800348e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003490:	f042 0201 	orr.w	r2, r2, #1
 8003494:	639a      	str	r2, [r3, #56]	; 0x38
 8003496:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003498:	f002 0201 	and.w	r2, r2, #1
 800349c:	9200      	str	r2, [sp, #0]
 800349e:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 80034a0:	9501      	str	r5, [sp, #4]
 80034a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034a4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80034a8:	631a      	str	r2, [r3, #48]	; 0x30
 80034aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034ac:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80034b0:	9201      	str	r2, [sp, #4]
 80034b2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80034b4:	9502      	str	r5, [sp, #8]
 80034b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034b8:	f042 0204 	orr.w	r2, r2, #4
 80034bc:	631a      	str	r2, [r3, #48]	; 0x30
 80034be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034c0:	f002 0204 	and.w	r2, r2, #4
 80034c4:	9202      	str	r2, [sp, #8]
 80034c6:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80034c8:	9503      	str	r5, [sp, #12]
 80034ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034cc:	f042 0208 	orr.w	r2, r2, #8
 80034d0:	631a      	str	r2, [r3, #48]	; 0x30
 80034d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034d4:	f002 0208 	and.w	r2, r2, #8
 80034d8:	9203      	str	r2, [sp, #12]
 80034da:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80034dc:	9504      	str	r5, [sp, #16]
 80034de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034e0:	f042 0210 	orr.w	r2, r2, #16
 80034e4:	631a      	str	r2, [r3, #48]	; 0x30
 80034e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034e8:	f002 0210 	and.w	r2, r2, #16
 80034ec:	9204      	str	r2, [sp, #16]
 80034ee:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80034f0:	9505      	str	r5, [sp, #20]
 80034f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034f4:	f042 0220 	orr.w	r2, r2, #32
 80034f8:	631a      	str	r2, [r3, #48]	; 0x30
 80034fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034fc:	f002 0220 	and.w	r2, r2, #32
 8003500:	9205      	str	r2, [sp, #20]
 8003502:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8003504:	9506      	str	r5, [sp, #24]
 8003506:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003508:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800350c:	631a      	str	r2, [r3, #48]	; 0x30
 800350e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003510:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8003514:	9206      	str	r2, [sp, #24]
 8003516:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8003518:	9507      	str	r5, [sp, #28]
 800351a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800351c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003520:	631a      	str	r2, [r3, #48]	; 0x30
 8003522:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003524:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8003528:	9207      	str	r2, [sp, #28]
 800352a:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800352c:	9508      	str	r5, [sp, #32]
 800352e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003530:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003534:	631a      	str	r2, [r3, #48]	; 0x30
 8003536:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003538:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800353c:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800353e:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8003540:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8003542:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003544:	2301      	movs	r3, #1
 8003546:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800354a:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 800354c:	220c      	movs	r2, #12
 800354e:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8003550:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003552:	f001 f813 	bl	800457c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003556:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800355a:	482d      	ldr	r0, [pc, #180]	; (8003610 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800355c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800355e:	a909      	add	r1, sp, #36	; 0x24
 8003560:	f001 f80c 	bl	800457c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003564:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003568:	482a      	ldr	r0, [pc, #168]	; (8003614 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800356a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800356c:	a909      	add	r1, sp, #36	; 0x24
 800356e:	f001 f805 	bl	800457c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003572:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003576:	4828      	ldr	r0, [pc, #160]	; (8003618 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003578:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800357a:	a909      	add	r1, sp, #36	; 0x24
 800357c:	f000 fffe 	bl	800457c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003580:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003584:	4825      	ldr	r0, [pc, #148]	; (800361c <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003586:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003588:	a909      	add	r1, sp, #36	; 0x24
 800358a:	f000 fff7 	bl	800457c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800358e:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003592:	4823      	ldr	r0, [pc, #140]	; (8003620 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003594:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003596:	a909      	add	r1, sp, #36	; 0x24
 8003598:	f000 fff0 	bl	800457c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800359c:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80035a0:	4820      	ldr	r0, [pc, #128]	; (8003624 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80035a2:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80035a4:	a909      	add	r1, sp, #36	; 0x24
 80035a6:	f000 ffe9 	bl	800457c <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 80035aa:	2280      	movs	r2, #128	; 0x80
 80035ac:	f44f 7300 	mov.w	r3, #512	; 0x200
 80035b0:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80035b4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80035b8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80035bc:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 80035c0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 80035c4:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 80035c8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 80035cc:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 80035d0:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 80035d2:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 80035d6:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80035d8:	4b13      	ldr	r3, [pc, #76]	; (8003628 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80035da:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 80035dc:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80035de:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80035e0:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80035e2:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 80035e4:	f000 fa8e 	bl	8003b04 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 80035e8:	4620      	mov	r0, r4
 80035ea:	f000 fa0b 	bl	8003a04 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 80035ee:	2038      	movs	r0, #56	; 0x38
 80035f0:	462a      	mov	r2, r5
 80035f2:	2105      	movs	r1, #5
 80035f4:	f000 f98c 	bl	8003910 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 80035f8:	2038      	movs	r0, #56	; 0x38
 80035fa:	f000 f9bb 	bl	8003974 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80035fe:	b00e      	add	sp, #56	; 0x38
 8003600:	bd70      	pop	{r4, r5, r6, pc}
 8003602:	bf00      	nop
 8003604:	40023800 	.word	0x40023800
 8003608:	40020800 	.word	0x40020800
 800360c:	20001684 	.word	0x20001684
 8003610:	40020c00 	.word	0x40020c00
 8003614:	40021000 	.word	0x40021000
 8003618:	40021400 	.word	0x40021400
 800361c:	40021800 	.word	0x40021800
 8003620:	40021c00 	.word	0x40021c00
 8003624:	40022000 	.word	0x40022000
 8003628:	40026410 	.word	0x40026410

0800362c <BSP_SDRAM_Init>:
{
 800362c:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800362e:	4c19      	ldr	r4, [pc, #100]	; (8003694 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8003630:	4d19      	ldr	r5, [pc, #100]	; (8003698 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003632:	4b1a      	ldr	r3, [pc, #104]	; (800369c <BSP_SDRAM_Init+0x70>)
 8003634:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8003636:	2107      	movs	r1, #7
 8003638:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 800363a:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 800363c:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8003640:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8003644:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8003648:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 800364a:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800364c:	2340      	movs	r3, #64	; 0x40
 800364e:	2220      	movs	r2, #32
 8003650:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8003654:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8003656:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800365a:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800365e:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8003662:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003666:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800366a:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800366c:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8003670:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003672:	f7ff ff01 	bl	8003478 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8003676:	4629      	mov	r1, r5
 8003678:	4620      	mov	r0, r4
 800367a:	f002 fe75 	bl	8006368 <HAL_SDRAM_Init>
 800367e:	4c08      	ldr	r4, [pc, #32]	; (80036a0 <BSP_SDRAM_Init+0x74>)
 8003680:	3800      	subs	r0, #0
 8003682:	bf18      	it	ne
 8003684:	2001      	movne	r0, #1
 8003686:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8003688:	f240 5069 	movw	r0, #1385	; 0x569
 800368c:	f7ff feaa 	bl	80033e4 <BSP_SDRAM_Initialization_sequence>
}
 8003690:	7820      	ldrb	r0, [r4, #0]
 8003692:	bd38      	pop	{r3, r4, r5, pc}
 8003694:	200016e4 	.word	0x200016e4
 8003698:	20001608 	.word	0x20001608
 800369c:	a0000140 	.word	0xa0000140
 80036a0:	2000004d 	.word	0x2000004d

080036a4 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80036a4:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80036a6:	b148      	cbz	r0, 80036bc <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 80036a8:	2038      	movs	r0, #56	; 0x38
 80036aa:	f000 f971 	bl	8003990 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 80036ae:	4804      	ldr	r0, [pc, #16]	; (80036c0 <BSP_SDRAM_MspDeInit+0x1c>)
 80036b0:	4b04      	ldr	r3, [pc, #16]	; (80036c4 <BSP_SDRAM_MspDeInit+0x20>)
 80036b2:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80036b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 80036b8:	f000 ba24 	b.w	8003b04 <HAL_DMA_DeInit>
}
 80036bc:	bd08      	pop	{r3, pc}
 80036be:	bf00      	nop
 80036c0:	20001624 	.word	0x20001624
 80036c4:	40026410 	.word	0x40026410

080036c8 <BSP_SDRAM_DeInit>:
{
 80036c8:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80036ca:	4c07      	ldr	r4, [pc, #28]	; (80036e8 <BSP_SDRAM_DeInit+0x20>)
 80036cc:	4b07      	ldr	r3, [pc, #28]	; (80036ec <BSP_SDRAM_DeInit+0x24>)
 80036ce:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 80036d0:	4620      	mov	r0, r4
 80036d2:	f002 fe69 	bl	80063a8 <HAL_SDRAM_DeInit>
 80036d6:	4d06      	ldr	r5, [pc, #24]	; (80036f0 <BSP_SDRAM_DeInit+0x28>)
 80036d8:	4601      	mov	r1, r0
 80036da:	b918      	cbnz	r0, 80036e4 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 80036dc:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 80036de:	4620      	mov	r0, r4
 80036e0:	f7ff ffe0 	bl	80036a4 <BSP_SDRAM_MspDeInit>
}
 80036e4:	7828      	ldrb	r0, [r5, #0]
 80036e6:	bd38      	pop	{r3, r4, r5, pc}
 80036e8:	200016e4 	.word	0x200016e4
 80036ec:	a0000140 	.word	0xa0000140
 80036f0:	2000004c 	.word	0x2000004c

080036f4 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 80036f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 80036f8:	4d16      	ldr	r5, [pc, #88]	; (8003754 <BSP_TS_Init+0x60>)
 80036fa:	4c17      	ldr	r4, [pc, #92]	; (8003758 <BSP_TS_Init+0x64>)
 80036fc:	682b      	ldr	r3, [r5, #0]
{
 80036fe:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8003700:	7820      	ldrb	r0, [r4, #0]
{
 8003702:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8003704:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8003706:	686b      	ldr	r3, [r5, #4]
 8003708:	2054      	movs	r0, #84	; 0x54
 800370a:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 800370c:	b2c0      	uxtb	r0, r0
 800370e:	2811      	cmp	r0, #17
 8003710:	d00a      	beq.n	8003728 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8003712:	686b      	ldr	r3, [r5, #4]
 8003714:	2070      	movs	r0, #112	; 0x70
 8003716:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003718:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800371a:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800371c:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800371e:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003720:	d004      	beq.n	800372c <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8003722:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8003724:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8003728:	2354      	movs	r3, #84	; 0x54
 800372a:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 800372c:	4b0b      	ldr	r3, [pc, #44]	; (800375c <BSP_TS_Init+0x68>)
 800372e:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8003760 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 8003732:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8003734:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8003738:	42be      	cmp	r6, r7
 800373a:	bf34      	ite	cc
 800373c:	2601      	movcc	r6, #1
 800373e:	260c      	movcs	r6, #12
 8003740:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8003742:	68ab      	ldr	r3, [r5, #8]
 8003744:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8003746:	f8d8 3000 	ldr.w	r3, [r8]
 800374a:	7820      	ldrb	r0, [r4, #0]
 800374c:	68db      	ldr	r3, [r3, #12]
 800374e:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8003750:	2000      	movs	r0, #0
 8003752:	e7e7      	b.n	8003724 <BSP_TS_Init+0x30>
 8003754:	20000020 	.word	0x20000020
 8003758:	20001718 	.word	0x20001718
 800375c:	20001730 	.word	0x20001730
 8003760:	2000172c 	.word	0x2000172c

08003764 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8003764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003768:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8003848 <BSP_TS_GetState+0xe4>
 800376c:	4a33      	ldr	r2, [pc, #204]	; (800383c <BSP_TS_GetState+0xd8>)
 800376e:	f8db 3000 	ldr.w	r3, [fp]
{
 8003772:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003774:	691b      	ldr	r3, [r3, #16]
 8003776:	7810      	ldrb	r0, [r2, #0]
{
 8003778:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800377a:	4798      	blx	r3
 800377c:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 800377e:	b158      	cbz	r0, 8003798 <BSP_TS_GetState+0x34>
 8003780:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800384c <BSP_TS_GetState+0xe8>
 8003784:	4f2e      	ldr	r7, [pc, #184]	; (8003840 <BSP_TS_GetState+0xdc>)
 8003786:	f106 0a02 	add.w	sl, r6, #2
 800378a:	ad03      	add	r5, sp, #12
 800378c:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 800378e:	f04f 0900 	mov.w	r9, #0
 8003792:	7833      	ldrb	r3, [r6, #0]
 8003794:	454b      	cmp	r3, r9
 8003796:	d803      	bhi.n	80037a0 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8003798:	2000      	movs	r0, #0
 800379a:	b005      	add	sp, #20
 800379c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 80037a0:	f8db 3000 	ldr.w	r3, [fp]
 80037a4:	4825      	ldr	r0, [pc, #148]	; (800383c <BSP_TS_GetState+0xd8>)
 80037a6:	695b      	ldr	r3, [r3, #20]
 80037a8:	7800      	ldrb	r0, [r0, #0]
 80037aa:	9101      	str	r1, [sp, #4]
 80037ac:	462a      	mov	r2, r5
 80037ae:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 80037b0:	4b24      	ldr	r3, [pc, #144]	; (8003844 <BSP_TS_GetState+0xe0>)
 80037b2:	9901      	ldr	r1, [sp, #4]
 80037b4:	781b      	ldrb	r3, [r3, #0]
 80037b6:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 80037ba:	bf1f      	itttt	ne
 80037bc:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 80037be:	8828      	ldrhne	r0, [r5, #0]
 80037c0:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 80037c2:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 80037c4:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 80037c6:	bf41      	itttt	mi
 80037c8:	880a      	ldrhmi	r2, [r1, #0]
 80037ca:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 80037ce:	3203      	addmi	r2, #3
 80037d0:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 80037d2:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80037d4:	bf48      	it	mi
 80037d6:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80037d8:	f8d8 2000 	ldr.w	r2, [r8]
 80037dc:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80037e0:	bf42      	ittt	mi
 80037e2:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 80037e6:	3301      	addmi	r3, #1
 80037e8:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80037ea:	b293      	uxth	r3, r2
 80037ec:	4290      	cmp	r0, r2
 80037ee:	bf8c      	ite	hi
 80037f0:	1ac3      	subhi	r3, r0, r3
 80037f2:	1a1b      	subls	r3, r3, r0
 80037f4:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80037f6:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80037fa:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80037fc:	683b      	ldr	r3, [r7, #0]
 80037fe:	b29c      	uxth	r4, r3
 8003800:	429a      	cmp	r2, r3
 8003802:	bf88      	it	hi
 8003804:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8003806:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003808:	bf98      	it	ls
 800380a:	1aa4      	subls	r4, r4, r2
 800380c:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 800380e:	441c      	add	r4, r3
 8003810:	46c4      	mov	ip, r8
 8003812:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8003814:	bfc8      	it	gt
 8003816:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 800381a:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 800381e:	bfc8      	it	gt
 8003820:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8003822:	46be      	mov	lr, r7
 8003824:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 8003828:	f8de 3000 	ldr.w	r3, [lr]
 800382c:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8003830:	f108 0804 	add.w	r8, r8, #4
 8003834:	3704      	adds	r7, #4
 8003836:	f109 0901 	add.w	r9, r9, #1
 800383a:	e7aa      	b.n	8003792 <BSP_TS_GetState+0x2e>
 800383c:	20001718 	.word	0x20001718
 8003840:	20001724 	.word	0x20001724
 8003844:	20001730 	.word	0x20001730
 8003848:	2000172c 	.word	0x2000172c
 800384c:	2000171c 	.word	0x2000171c

08003850 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003850:	4b05      	ldr	r3, [pc, #20]	; (8003868 <SystemInit+0x18>)
 8003852:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8003856:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800385a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800385e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003862:	609a      	str	r2, [r3, #8]
#endif
}
 8003864:	4770      	bx	lr
 8003866:	bf00      	nop
 8003868:	e000ed00 	.word	0xe000ed00

0800386c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800386c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800386e:	4b0b      	ldr	r3, [pc, #44]	; (800389c <HAL_Init+0x30>)
 8003870:	681a      	ldr	r2, [r3, #0]
 8003872:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003876:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003878:	681a      	ldr	r2, [r3, #0]
 800387a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800387e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003880:	681a      	ldr	r2, [r3, #0]
 8003882:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003886:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003888:	2003      	movs	r0, #3
 800388a:	f000 f82f 	bl	80038ec <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800388e:	2000      	movs	r0, #0
 8003890:	f7fe fb18 	bl	8001ec4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003894:	f7fe f8ba 	bl	8001a0c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003898:	2000      	movs	r0, #0
 800389a:	bd08      	pop	{r3, pc}
 800389c:	40023c00 	.word	0x40023c00

080038a0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80038a0:	4a03      	ldr	r2, [pc, #12]	; (80038b0 <HAL_IncTick+0x10>)
 80038a2:	4b04      	ldr	r3, [pc, #16]	; (80038b4 <HAL_IncTick+0x14>)
 80038a4:	6811      	ldr	r1, [r2, #0]
 80038a6:	781b      	ldrb	r3, [r3, #0]
 80038a8:	440b      	add	r3, r1
 80038aa:	6013      	str	r3, [r2, #0]
}
 80038ac:	4770      	bx	lr
 80038ae:	bf00      	nop
 80038b0:	20001734 	.word	0x20001734
 80038b4:	20000054 	.word	0x20000054

080038b8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80038b8:	4b01      	ldr	r3, [pc, #4]	; (80038c0 <HAL_GetTick+0x8>)
 80038ba:	6818      	ldr	r0, [r3, #0]
}
 80038bc:	4770      	bx	lr
 80038be:	bf00      	nop
 80038c0:	20001734 	.word	0x20001734

080038c4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80038c4:	b538      	push	{r3, r4, r5, lr}
 80038c6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80038c8:	f7ff fff6 	bl	80038b8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80038cc:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80038ce:	bf1c      	itt	ne
 80038d0:	4b05      	ldrne	r3, [pc, #20]	; (80038e8 <HAL_Delay+0x24>)
 80038d2:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80038d4:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80038d6:	bf18      	it	ne
 80038d8:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80038da:	f7ff ffed 	bl	80038b8 <HAL_GetTick>
 80038de:	1b43      	subs	r3, r0, r5
 80038e0:	42a3      	cmp	r3, r4
 80038e2:	d3fa      	bcc.n	80038da <HAL_Delay+0x16>
  {
  }
}
 80038e4:	bd38      	pop	{r3, r4, r5, pc}
 80038e6:	bf00      	nop
 80038e8:	20000054 	.word	0x20000054

080038ec <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80038ec:	4907      	ldr	r1, [pc, #28]	; (800390c <HAL_NVIC_SetPriorityGrouping+0x20>)
 80038ee:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80038f0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80038f4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80038f6:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80038f8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80038fc:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80038fe:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003900:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003904:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8003908:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800390a:	4770      	bx	lr
 800390c:	e000ed00 	.word	0xe000ed00

08003910 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003910:	4b16      	ldr	r3, [pc, #88]	; (800396c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003912:	b530      	push	{r4, r5, lr}
 8003914:	68dc      	ldr	r4, [r3, #12]
 8003916:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800391a:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800391e:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003920:	2d04      	cmp	r5, #4
 8003922:	bf28      	it	cs
 8003924:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003926:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003928:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800392c:	bf8c      	ite	hi
 800392e:	3c03      	subhi	r4, #3
 8003930:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003932:	fa03 f505 	lsl.w	r5, r3, r5
 8003936:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800393a:	40a3      	lsls	r3, r4
 800393c:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003940:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8003942:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003944:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003948:	bfac      	ite	ge
 800394a:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800394e:	4a08      	ldrlt	r2, [pc, #32]	; (8003970 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003950:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003954:	bfb8      	it	lt
 8003956:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800395a:	b2db      	uxtb	r3, r3
 800395c:	bfaa      	itet	ge
 800395e:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003962:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003964:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003968:	bd30      	pop	{r4, r5, pc}
 800396a:	bf00      	nop
 800396c:	e000ed00 	.word	0xe000ed00
 8003970:	e000ed14 	.word	0xe000ed14

08003974 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003974:	2800      	cmp	r0, #0
 8003976:	db08      	blt.n	800398a <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003978:	0942      	lsrs	r2, r0, #5
 800397a:	2301      	movs	r3, #1
 800397c:	f000 001f 	and.w	r0, r0, #31
 8003980:	fa03 f000 	lsl.w	r0, r3, r0
 8003984:	4b01      	ldr	r3, [pc, #4]	; (800398c <HAL_NVIC_EnableIRQ+0x18>)
 8003986:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800398a:	4770      	bx	lr
 800398c:	e000e100 	.word	0xe000e100

08003990 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003990:	2800      	cmp	r0, #0
 8003992:	db0d      	blt.n	80039b0 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003994:	0943      	lsrs	r3, r0, #5
 8003996:	2201      	movs	r2, #1
 8003998:	f000 001f 	and.w	r0, r0, #31
 800399c:	fa02 f000 	lsl.w	r0, r2, r0
 80039a0:	3320      	adds	r3, #32
 80039a2:	4a04      	ldr	r2, [pc, #16]	; (80039b4 <HAL_NVIC_DisableIRQ+0x24>)
 80039a4:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80039a8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80039ac:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 80039b0:	4770      	bx	lr
 80039b2:	bf00      	nop
 80039b4:	e000e100 	.word	0xe000e100

080039b8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80039b8:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80039ba:	4604      	mov	r4, r0
 80039bc:	b150      	cbz	r0, 80039d4 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80039be:	7943      	ldrb	r3, [r0, #5]
 80039c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80039c4:	b913      	cbnz	r3, 80039cc <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80039c6:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80039c8:	f7fe f840 	bl	8001a4c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80039cc:	2301      	movs	r3, #1
 80039ce:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80039d0:	2000      	movs	r0, #0
}
 80039d2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80039d4:	2001      	movs	r0, #1
 80039d6:	e7fc      	b.n	80039d2 <HAL_CRC_Init+0x1a>

080039d8 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80039d8:	6803      	ldr	r3, [r0, #0]
{
 80039da:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80039dc:	4c08      	ldr	r4, [pc, #32]	; (8003a00 <DMA_CalcBaseAndBitshift+0x28>)
{
 80039de:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80039e0:	b2d9      	uxtb	r1, r3
 80039e2:	3910      	subs	r1, #16
 80039e4:	2018      	movs	r0, #24
 80039e6:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80039ea:	5c20      	ldrb	r0, [r4, r0]
 80039ec:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80039ee:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 80039f2:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 80039f6:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80039f8:	bf88      	it	hi
 80039fa:	3004      	addhi	r0, #4
 80039fc:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 80039fe:	bd10      	pop	{r4, pc}
 8003a00:	0801bf35 	.word	0x0801bf35

08003a04 <HAL_DMA_Init>:
{
 8003a04:	b570      	push	{r4, r5, r6, lr}
 8003a06:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003a08:	f7ff ff56 	bl	80038b8 <HAL_GetTick>
 8003a0c:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003a0e:	2c00      	cmp	r4, #0
 8003a10:	d073      	beq.n	8003afa <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8003a12:	2302      	movs	r3, #2
 8003a14:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003a18:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8003a1a:	2300      	movs	r3, #0
 8003a1c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003a20:	6813      	ldr	r3, [r2, #0]
 8003a22:	f023 0301 	bic.w	r3, r3, #1
 8003a26:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003a28:	6821      	ldr	r1, [r4, #0]
 8003a2a:	680b      	ldr	r3, [r1, #0]
 8003a2c:	07d8      	lsls	r0, r3, #31
 8003a2e:	d42f      	bmi.n	8003a90 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8003a30:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003a32:	4d33      	ldr	r5, [pc, #204]	; (8003b00 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003a34:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003a36:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003a38:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8003a3c:	4313      	orrs	r3, r2
 8003a3e:	68e2      	ldr	r2, [r4, #12]
 8003a40:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003a42:	6922      	ldr	r2, [r4, #16]
 8003a44:	4313      	orrs	r3, r2
 8003a46:	6962      	ldr	r2, [r4, #20]
 8003a48:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003a4a:	69e2      	ldr	r2, [r4, #28]
 8003a4c:	4303      	orrs	r3, r0
 8003a4e:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003a50:	6a22      	ldr	r2, [r4, #32]
 8003a52:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003a54:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003a56:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003a58:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003a5c:	bf02      	ittt	eq
 8003a5e:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003a62:	4335      	orreq	r5, r6
 8003a64:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003a66:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003a68:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003a6a:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003a6c:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003a70:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003a74:	d133      	bne.n	8003ade <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8003a76:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003a78:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8003a7a:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003a7c:	b37d      	cbz	r5, 8003ade <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003a7e:	b990      	cbnz	r0, 8003aa6 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8003a80:	2a01      	cmp	r2, #1
 8003a82:	d021      	beq.n	8003ac8 <HAL_DMA_Init+0xc4>
 8003a84:	f032 0202 	bics.w	r2, r2, #2
 8003a88:	d129      	bne.n	8003ade <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003a8a:	01ea      	lsls	r2, r5, #7
 8003a8c:	d527      	bpl.n	8003ade <HAL_DMA_Init+0xda>
 8003a8e:	e01e      	b.n	8003ace <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003a90:	f7ff ff12 	bl	80038b8 <HAL_GetTick>
 8003a94:	1b40      	subs	r0, r0, r5
 8003a96:	2805      	cmp	r0, #5
 8003a98:	d9c6      	bls.n	8003a28 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003a9a:	2320      	movs	r3, #32
 8003a9c:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003a9e:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8003aa0:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8003aa4:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003aa6:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8003aaa:	d114      	bne.n	8003ad6 <HAL_DMA_Init+0xd2>
    switch (tmp)
 8003aac:	2a03      	cmp	r2, #3
 8003aae:	d816      	bhi.n	8003ade <HAL_DMA_Init+0xda>
 8003ab0:	a001      	add	r0, pc, #4	; (adr r0, 8003ab8 <HAL_DMA_Init+0xb4>)
 8003ab2:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8003ab6:	bf00      	nop
 8003ab8:	08003acf 	.word	0x08003acf
 8003abc:	08003a8b 	.word	0x08003a8b
 8003ac0:	08003acf 	.word	0x08003acf
 8003ac4:	08003ac9 	.word	0x08003ac9
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003ac8:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8003acc:	d107      	bne.n	8003ade <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003ace:	2340      	movs	r3, #64	; 0x40
 8003ad0:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8003ad2:	2001      	movs	r0, #1
 8003ad4:	e7e4      	b.n	8003aa0 <HAL_DMA_Init+0x9c>
    switch (tmp)
 8003ad6:	2a02      	cmp	r2, #2
 8003ad8:	d9f9      	bls.n	8003ace <HAL_DMA_Init+0xca>
 8003ada:	2a03      	cmp	r2, #3
 8003adc:	d0d5      	beq.n	8003a8a <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8003ade:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003ae0:	4620      	mov	r0, r4
 8003ae2:	f7ff ff79 	bl	80039d8 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003ae6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003ae8:	233f      	movs	r3, #63	; 0x3f
 8003aea:	4093      	lsls	r3, r2
 8003aec:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003aee:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8003af0:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003af2:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8003af4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8003af8:	e7d4      	b.n	8003aa4 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8003afa:	2001      	movs	r0, #1
 8003afc:	e7d2      	b.n	8003aa4 <HAL_DMA_Init+0xa0>
 8003afe:	bf00      	nop
 8003b00:	f010803f 	.word	0xf010803f

08003b04 <HAL_DMA_DeInit>:
{
 8003b04:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8003b06:	4605      	mov	r5, r0
 8003b08:	b320      	cbz	r0, 8003b54 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8003b0a:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8003b0e:	2b02      	cmp	r3, #2
 8003b10:	b2dc      	uxtb	r4, r3
 8003b12:	d01d      	beq.n	8003b50 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8003b14:	6803      	ldr	r3, [r0, #0]
 8003b16:	681a      	ldr	r2, [r3, #0]
 8003b18:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8003b1c:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8003b1e:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8003b20:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8003b22:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8003b24:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8003b26:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8003b28:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8003b2a:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8003b2c:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003b2e:	f7ff ff53 	bl	80039d8 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003b32:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8003b34:	233f      	movs	r3, #63	; 0x3f
 8003b36:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8003b38:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8003b3c:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8003b40:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003b44:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003b46:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8003b48:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8003b4c:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8003b50:	4620      	mov	r0, r4
 8003b52:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8003b54:	2401      	movs	r4, #1
 8003b56:	e7fb      	b.n	8003b50 <HAL_DMA_DeInit+0x4c>

08003b58 <HAL_DMA_Abort>:
{
 8003b58:	b570      	push	{r4, r5, r6, lr}
 8003b5a:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003b5c:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8003b5e:	f7ff feab 	bl	80038b8 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003b62:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8003b66:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8003b68:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003b6a:	d006      	beq.n	8003b7a <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003b6c:	2380      	movs	r3, #128	; 0x80
 8003b6e:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8003b70:	2300      	movs	r3, #0
 8003b72:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8003b76:	2001      	movs	r0, #1
}
 8003b78:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003b7a:	6823      	ldr	r3, [r4, #0]
 8003b7c:	681a      	ldr	r2, [r3, #0]
 8003b7e:	f022 0216 	bic.w	r2, r2, #22
 8003b82:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003b84:	695a      	ldr	r2, [r3, #20]
 8003b86:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003b8a:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003b8c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003b8e:	b90a      	cbnz	r2, 8003b94 <HAL_DMA_Abort+0x3c>
 8003b90:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8003b92:	b11a      	cbz	r2, 8003b9c <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003b94:	681a      	ldr	r2, [r3, #0]
 8003b96:	f022 0208 	bic.w	r2, r2, #8
 8003b9a:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8003b9c:	681a      	ldr	r2, [r3, #0]
 8003b9e:	f022 0201 	bic.w	r2, r2, #1
 8003ba2:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003ba4:	6823      	ldr	r3, [r4, #0]
 8003ba6:	681b      	ldr	r3, [r3, #0]
 8003ba8:	f013 0301 	ands.w	r3, r3, #1
 8003bac:	d10a      	bne.n	8003bc4 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003bae:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003bb0:	223f      	movs	r2, #63	; 0x3f
 8003bb2:	408a      	lsls	r2, r1
 8003bb4:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8003bb6:	2201      	movs	r2, #1
 8003bb8:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8003bbc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8003bc0:	4618      	mov	r0, r3
 8003bc2:	e7d9      	b.n	8003b78 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003bc4:	f7ff fe78 	bl	80038b8 <HAL_GetTick>
 8003bc8:	1b40      	subs	r0, r0, r5
 8003bca:	2805      	cmp	r0, #5
 8003bcc:	d9ea      	bls.n	8003ba4 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003bce:	2320      	movs	r3, #32
 8003bd0:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003bd2:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8003bd4:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003bd6:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8003bda:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8003bde:	e7cb      	b.n	8003b78 <HAL_DMA_Abort+0x20>

08003be0 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003be0:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003be2:	4604      	mov	r4, r0
 8003be4:	b330      	cbz	r0, 8003c34 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003be6:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003bea:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003bee:	b91b      	cbnz	r3, 8003bf8 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003bf0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003bf4:	f7fd ff42 	bl	8001a7c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003bf8:	6822      	ldr	r2, [r4, #0]
 8003bfa:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003bfc:	2302      	movs	r3, #2
 8003bfe:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003c02:	6813      	ldr	r3, [r2, #0]
 8003c04:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003c08:	430b      	orrs	r3, r1
 8003c0a:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003c0c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003c0e:	68a1      	ldr	r1, [r4, #8]
 8003c10:	f023 0307 	bic.w	r3, r3, #7
 8003c14:	430b      	orrs	r3, r1
 8003c16:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003c18:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8003c1a:	68e1      	ldr	r1, [r4, #12]
 8003c1c:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003c20:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003c24:	430b      	orrs	r3, r1
 8003c26:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003c28:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003c2a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003c2c:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003c2e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8003c32:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003c34:	2001      	movs	r0, #1
 8003c36:	e7fc      	b.n	8003c32 <HAL_DMA2D_Init+0x52>

08003c38 <HAL_DMA2D_LineEventCallback>:
 8003c38:	4770      	bx	lr

08003c3a <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8003c3a:	4770      	bx	lr

08003c3c <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003c3c:	6803      	ldr	r3, [r0, #0]
{
 8003c3e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003c40:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003c42:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003c44:	07f2      	lsls	r2, r6, #31
{
 8003c46:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003c48:	d514      	bpl.n	8003c74 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003c4a:	05e9      	lsls	r1, r5, #23
 8003c4c:	d512      	bpl.n	8003c74 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003c4e:	681a      	ldr	r2, [r3, #0]
 8003c50:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003c54:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003c56:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003c58:	f042 0201 	orr.w	r2, r2, #1
 8003c5c:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8003c5e:	2201      	movs	r2, #1
 8003c60:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003c62:	2304      	movs	r3, #4
 8003c64:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003c68:	2300      	movs	r3, #0
 8003c6a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003c6e:	6943      	ldr	r3, [r0, #20]
 8003c70:	b103      	cbz	r3, 8003c74 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003c72:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003c74:	06b2      	lsls	r2, r6, #26
 8003c76:	d516      	bpl.n	8003ca6 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003c78:	04ab      	lsls	r3, r5, #18
 8003c7a:	d514      	bpl.n	8003ca6 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003c7c:	6823      	ldr	r3, [r4, #0]
 8003c7e:	681a      	ldr	r2, [r3, #0]
 8003c80:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003c84:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003c86:	2220      	movs	r2, #32
 8003c88:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003c8a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003c8c:	f043 0302 	orr.w	r3, r3, #2
 8003c90:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003c92:	2304      	movs	r3, #4
 8003c94:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003c98:	2300      	movs	r3, #0
 8003c9a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003c9e:	6963      	ldr	r3, [r4, #20]
 8003ca0:	b10b      	cbz	r3, 8003ca6 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003ca2:	4620      	mov	r0, r4
 8003ca4:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003ca6:	0730      	lsls	r0, r6, #28
 8003ca8:	d516      	bpl.n	8003cd8 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003caa:	0529      	lsls	r1, r5, #20
 8003cac:	d514      	bpl.n	8003cd8 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003cae:	6823      	ldr	r3, [r4, #0]
 8003cb0:	681a      	ldr	r2, [r3, #0]
 8003cb2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003cb6:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003cb8:	2208      	movs	r2, #8
 8003cba:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003cbc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003cbe:	f043 0304 	orr.w	r3, r3, #4
 8003cc2:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003cc4:	2304      	movs	r3, #4
 8003cc6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003cca:	2300      	movs	r3, #0
 8003ccc:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003cd0:	6963      	ldr	r3, [r4, #20]
 8003cd2:	b10b      	cbz	r3, 8003cd8 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003cd4:	4620      	mov	r0, r4
 8003cd6:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003cd8:	0772      	lsls	r2, r6, #29
 8003cda:	d50b      	bpl.n	8003cf4 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003cdc:	056b      	lsls	r3, r5, #21
 8003cde:	d509      	bpl.n	8003cf4 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003ce0:	6823      	ldr	r3, [r4, #0]
 8003ce2:	681a      	ldr	r2, [r3, #0]
 8003ce4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003ce8:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003cea:	2204      	movs	r2, #4
 8003cec:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003cee:	4620      	mov	r0, r4
 8003cf0:	f7ff ffa2 	bl	8003c38 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003cf4:	07b0      	lsls	r0, r6, #30
 8003cf6:	d514      	bpl.n	8003d22 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003cf8:	05a9      	lsls	r1, r5, #22
 8003cfa:	d512      	bpl.n	8003d22 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003cfc:	6823      	ldr	r3, [r4, #0]
 8003cfe:	681a      	ldr	r2, [r3, #0]
 8003d00:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003d04:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003d06:	2202      	movs	r2, #2
 8003d08:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003d0a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003d0c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003d0e:	2301      	movs	r3, #1
 8003d10:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003d14:	2300      	movs	r3, #0
 8003d16:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8003d1a:	6923      	ldr	r3, [r4, #16]
 8003d1c:	b10b      	cbz	r3, 8003d22 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8003d1e:	4620      	mov	r0, r4
 8003d20:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003d22:	06f2      	lsls	r2, r6, #27
 8003d24:	d513      	bpl.n	8003d4e <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003d26:	04eb      	lsls	r3, r5, #19
 8003d28:	d511      	bpl.n	8003d4e <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003d2a:	6823      	ldr	r3, [r4, #0]
 8003d2c:	681a      	ldr	r2, [r3, #0]
 8003d2e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003d32:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003d34:	2210      	movs	r2, #16
 8003d36:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003d38:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003d3a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003d3c:	2301      	movs	r3, #1
 8003d3e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003d42:	2300      	movs	r3, #0
 8003d44:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003d48:	4620      	mov	r0, r4
 8003d4a:	f7ff ff76 	bl	8003c3a <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8003d4e:	bd70      	pop	{r4, r5, r6, pc}

08003d50 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003d50:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003d52:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8003d56:	2b01      	cmp	r3, #1
 8003d58:	f04f 0302 	mov.w	r3, #2
 8003d5c:	d02b      	beq.n	8003db6 <HAL_DMA2D_ConfigLayer+0x66>
 8003d5e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003d60:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8003d64:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003d68:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8003d6c:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8003d70:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003d72:	4f18      	ldr	r7, [pc, #96]	; (8003dd4 <HAL_DMA2D_ConfigLayer+0x84>)
 8003d74:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003d78:	3c09      	subs	r4, #9
 8003d7a:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003d7c:	bf9c      	itt	ls
 8003d7e:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8003d82:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003d84:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003d88:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003d8a:	bf88      	it	hi
 8003d8c:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003d90:	b999      	cbnz	r1, 8003dba <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003d92:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003d94:	4039      	ands	r1, r7
 8003d96:	430a      	orrs	r2, r1
 8003d98:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003d9a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003d9c:	6982      	ldr	r2, [r0, #24]
 8003d9e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003da0:	d803      	bhi.n	8003daa <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8003da2:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003da4:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003da8:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003daa:	2301      	movs	r3, #1
 8003dac:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003db0:	2300      	movs	r3, #0
 8003db2:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8003db6:	4618      	mov	r0, r3

  return HAL_OK;
}
 8003db8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003dba:	69d9      	ldr	r1, [r3, #28]
 8003dbc:	4039      	ands	r1, r7
 8003dbe:	430a      	orrs	r2, r1
 8003dc0:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003dc2:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003dc4:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003dc6:	6992      	ldr	r2, [r2, #24]
 8003dc8:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003dca:	bf9c      	itt	ls
 8003dcc:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8003dd0:	621d      	strls	r5, [r3, #32]
 8003dd2:	e7ea      	b.n	8003daa <HAL_DMA2D_ConfigLayer+0x5a>
 8003dd4:	00fcfff0 	.word	0x00fcfff0

08003dd8 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8003dd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ddc:	4607      	mov	r7, r0
 8003dde:	460d      	mov	r5, r1
 8003de0:	4614      	mov	r4, r2
 8003de2:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8003de4:	f7ff fd68 	bl	80038b8 <HAL_GetTick>
 8003de8:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8003dea:	683b      	ldr	r3, [r7, #0]
 8003dec:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8003dee:	07d2      	lsls	r2, r2, #31
 8003df0:	d50a      	bpl.n	8003e08 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8003df2:	9906      	ldr	r1, [sp, #24]
 8003df4:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 8003df8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8003dfc:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8003e00:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 8003e02:	2000      	movs	r0, #0
}
 8003e04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8003e08:	f7ff fd56 	bl	80038b8 <HAL_GetTick>
 8003e0c:	eba0 0008 	sub.w	r0, r0, r8
 8003e10:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003e14:	d9e9      	bls.n	8003dea <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8003e16:	2003      	movs	r0, #3
 8003e18:	e7f4      	b.n	8003e04 <DSI_ShortWrite+0x2c>

08003e1a <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8003e1a:	7c03      	ldrb	r3, [r0, #16]
 8003e1c:	2b01      	cmp	r3, #1
 8003e1e:	d05d      	beq.n	8003edc <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8003e20:	6803      	ldr	r3, [r0, #0]
 8003e22:	2200      	movs	r2, #0
 8003e24:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8003e28:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8003e2c:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8003e2e:	bf48      	it	mi
 8003e30:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8003e34:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8003e36:	bf42      	ittt	mi
 8003e38:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8003e3c:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8003e40:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8003e44:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8003e46:	bf42      	ittt	mi
 8003e48:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8003e4c:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8003e50:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8003e54:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8003e56:	bf42      	ittt	mi
 8003e58:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003e5c:	f042 0201 	orrmi.w	r2, r2, #1
 8003e60:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8003e64:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8003e66:	bf42      	ittt	mi
 8003e68:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003e6c:	f042 0202 	orrmi.w	r2, r2, #2
 8003e70:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8003e74:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8003e76:	bf42      	ittt	mi
 8003e78:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003e7c:	f042 020c 	orrmi.w	r2, r2, #12
 8003e80:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8003e84:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8003e86:	bf42      	ittt	mi
 8003e88:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003e8c:	f042 0210 	orrmi.w	r2, r2, #16
 8003e90:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8003e94:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8003e96:	bf42      	ittt	mi
 8003e98:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003e9c:	f042 0220 	orrmi.w	r2, r2, #32
 8003ea0:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8003ea4:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8003ea6:	bf42      	ittt	mi
 8003ea8:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003eac:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8003eb0:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8003eb4:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8003eb6:	bf42      	ittt	mi
 8003eb8:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003ebc:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8003ec0:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8003ec4:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8003ec6:	bf42      	ittt	mi
 8003ec8:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003ecc:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8003ed0:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8003ed4:	2300      	movs	r3, #0
 8003ed6:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8003ed8:	4618      	mov	r0, r3
 8003eda:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8003edc:	2002      	movs	r0, #2
}
 8003ede:	4770      	bx	lr

08003ee0 <HAL_DSI_Init>:
{
 8003ee0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003ee2:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8003ee4:	4604      	mov	r4, r0
 8003ee6:	2800      	cmp	r0, #0
 8003ee8:	f000 80a9 	beq.w	800403e <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8003eec:	7c43      	ldrb	r3, [r0, #17]
 8003eee:	b90b      	cbnz	r3, 8003ef4 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8003ef0:	f7fd fde6 	bl	8001ac0 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8003ef4:	2303      	movs	r3, #3
 8003ef6:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8003ef8:	2300      	movs	r3, #0
 8003efa:	9300      	str	r3, [sp, #0]
 8003efc:	6823      	ldr	r3, [r4, #0]
 8003efe:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8003f02:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8003f06:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8003f0a:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8003f0e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003f12:	9300      	str	r3, [sp, #0]
 8003f14:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 8003f16:	f7ff fccf 	bl	80038b8 <HAL_GetTick>
 8003f1a:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8003f1c:	6822      	ldr	r2, [r4, #0]
 8003f1e:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8003f22:	04d9      	lsls	r1, r3, #19
 8003f24:	d57a      	bpl.n	800401c <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8003f26:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8003f2a:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8003f2e:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 8003f32:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 8003f36:	e9d5 0300 	ldrd	r0, r3, [r5]
 8003f3a:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8003f3c:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 8003f40:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8003f42:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 8003f46:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8003f4a:	430b      	orrs	r3, r1
 8003f4c:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8003f50:	2300      	movs	r3, #0
 8003f52:	9301      	str	r3, [sp, #4]
 8003f54:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8003f58:	f043 0301 	orr.w	r3, r3, #1
 8003f5c:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8003f60:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8003f64:	f003 0301 	and.w	r3, r3, #1
 8003f68:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 8003f6a:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 8003f6c:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 8003f6e:	f7ff fca9 	bl	80038c4 <HAL_Delay>
  tickstart = HAL_GetTick();
 8003f72:	f7ff fca1 	bl	80038b8 <HAL_GetTick>
 8003f76:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8003f78:	6823      	ldr	r3, [r4, #0]
 8003f7a:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8003f7e:	05d2      	lsls	r2, r2, #23
 8003f80:	d556      	bpl.n	8004030 <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8003f82:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8003f86:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8003f88:	f042 0206 	orr.w	r2, r2, #6
 8003f8c:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8003f90:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8003f94:	f022 0203 	bic.w	r2, r2, #3
 8003f98:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8003f9c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8003fa0:	430a      	orrs	r2, r1
 8003fa2:	f042 0201 	orr.w	r2, r2, #1
 8003fa6:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8003faa:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8003fae:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8003fb0:	f022 0203 	bic.w	r2, r2, #3
 8003fb4:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8003fb8:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8003fbc:	430a      	orrs	r2, r1
 8003fbe:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8003fc2:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8003fc4:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8003fc6:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8003fca:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8003fcc:	689a      	ldr	r2, [r3, #8]
 8003fce:	430a      	orrs	r2, r1
 8003fd0:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8003fd2:	686a      	ldr	r2, [r5, #4]
 8003fd4:	491b      	ldr	r1, [pc, #108]	; (8004044 <HAL_DSI_Init+0x164>)
 8003fd6:	2a01      	cmp	r2, #1
 8003fd8:	bf38      	it	cc
 8003fda:	2201      	movcc	r2, #1
 8003fdc:	434a      	muls	r2, r1
 8003fde:	68a9      	ldr	r1, [r5, #8]
 8003fe0:	f001 0103 	and.w	r1, r1, #3
 8003fe4:	408a      	lsls	r2, r1
 8003fe6:	6829      	ldr	r1, [r5, #0]
 8003fe8:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 8003fec:	4341      	muls	r1, r0
 8003fee:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8003ff2:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8003ff6:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8003ffa:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8003ffe:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004002:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004004:	430a      	orrs	r2, r1
 8004006:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800400a:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800400e:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8004012:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8004014:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8004016:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8004018:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800401a:	e007      	b.n	800402c <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800401c:	f7ff fc4c 	bl	80038b8 <HAL_GetTick>
 8004020:	1b80      	subs	r0, r0, r6
 8004022:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004026:	f67f af79 	bls.w	8003f1c <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800402a:	2003      	movs	r0, #3
}
 800402c:	b002      	add	sp, #8
 800402e:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004030:	f7ff fc42 	bl	80038b8 <HAL_GetTick>
 8004034:	1b80      	subs	r0, r0, r6
 8004036:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800403a:	d99d      	bls.n	8003f78 <HAL_DSI_Init+0x98>
 800403c:	e7f5      	b.n	800402a <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 800403e:	2001      	movs	r0, #1
 8004040:	e7f4      	b.n	800402c <HAL_DSI_Init+0x14c>
 8004042:	bf00      	nop
 8004044:	003d0900 	.word	0x003d0900

08004048 <HAL_DSI_ErrorCallback>:
 8004048:	4770      	bx	lr

0800404a <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800404a:	6803      	ldr	r3, [r0, #0]
 800404c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004050:	07d1      	lsls	r1, r2, #31
{
 8004052:	b510      	push	{r4, lr}
 8004054:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8004056:	d508      	bpl.n	800406a <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8004058:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800405c:	07d2      	lsls	r2, r2, #31
 800405e:	d504      	bpl.n	800406a <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8004060:	2201      	movs	r2, #1
 8004062:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 8004066:	f7fc fd6b 	bl	8000b40 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800406a:	6823      	ldr	r3, [r4, #0]
 800406c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004070:	0791      	lsls	r1, r2, #30
 8004072:	d509      	bpl.n	8004088 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8004074:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004078:	0792      	lsls	r2, r2, #30
 800407a:	d505      	bpl.n	8004088 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800407c:	2202      	movs	r2, #2
 800407e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8004082:	4620      	mov	r0, r4
 8004084:	f7fc fd90 	bl	8000ba8 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8004088:	69a3      	ldr	r3, [r4, #24]
 800408a:	2b00      	cmp	r3, #0
 800408c:	d04e      	beq.n	800412c <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800408e:	6821      	ldr	r1, [r4, #0]
 8004090:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004094:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8004098:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800409c:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800409e:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80040a2:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80040a4:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80040a6:	b119      	cbz	r1, 80040b0 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 80040a8:	6961      	ldr	r1, [r4, #20]
 80040aa:	f041 0101 	orr.w	r1, r1, #1
 80040ae:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 80040b0:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 80040b4:	bf1e      	ittt	ne
 80040b6:	6962      	ldrne	r2, [r4, #20]
 80040b8:	f042 0202 	orrne.w	r2, r2, #2
 80040bc:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 80040be:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 80040c0:	bf42      	ittt	mi
 80040c2:	6962      	ldrmi	r2, [r4, #20]
 80040c4:	f042 0204 	orrmi.w	r2, r2, #4
 80040c8:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 80040ca:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 80040cc:	bf42      	ittt	mi
 80040ce:	6962      	ldrmi	r2, [r4, #20]
 80040d0:	f042 0208 	orrmi.w	r2, r2, #8
 80040d4:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 80040d6:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 80040da:	bf1e      	ittt	ne
 80040dc:	6962      	ldrne	r2, [r4, #20]
 80040de:	f042 0210 	orrne.w	r2, r2, #16
 80040e2:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 80040e4:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 80040e6:	bf42      	ittt	mi
 80040e8:	6962      	ldrmi	r2, [r4, #20]
 80040ea:	f042 0220 	orrmi.w	r2, r2, #32
 80040ee:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 80040f0:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 80040f2:	bf42      	ittt	mi
 80040f4:	6962      	ldrmi	r2, [r4, #20]
 80040f6:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 80040fa:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 80040fc:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 80040fe:	bf42      	ittt	mi
 8004100:	6962      	ldrmi	r2, [r4, #20]
 8004102:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004106:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8004108:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800410a:	bf42      	ittt	mi
 800410c:	6962      	ldrmi	r2, [r4, #20]
 800410e:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 8004112:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8004114:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8004118:	bf1e      	ittt	ne
 800411a:	6963      	ldrne	r3, [r4, #20]
 800411c:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8004120:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8004122:	6963      	ldr	r3, [r4, #20]
 8004124:	b113      	cbz	r3, 800412c <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8004126:	4620      	mov	r0, r4
 8004128:	f7ff ff8e 	bl	8004048 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800412c:	bd10      	pop	{r4, pc}

0800412e <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800412e:	7c03      	ldrb	r3, [r0, #16]
 8004130:	2b01      	cmp	r3, #1
 8004132:	d00b      	beq.n	800414c <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8004134:	6803      	ldr	r3, [r0, #0]
 8004136:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004138:	f022 0203 	bic.w	r2, r2, #3
 800413c:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800413e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004140:	4311      	orrs	r1, r2
 8004142:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004144:	2300      	movs	r3, #0
 8004146:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004148:	4618      	mov	r0, r3
 800414a:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800414c:	2002      	movs	r0, #2
}
 800414e:	4770      	bx	lr

08004150 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8004150:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004152:	7c03      	ldrb	r3, [r0, #16]
 8004154:	2b01      	cmp	r3, #1
 8004156:	d06a      	beq.n	800422e <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004158:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800415a:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800415c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800415e:	f042 0201 	orr.w	r2, r2, #1
 8004162:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8004164:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004168:	f022 0201 	bic.w	r2, r2, #1
 800416c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8004170:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004174:	f042 0201 	orr.w	r2, r2, #1
 8004178:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800417c:	68da      	ldr	r2, [r3, #12]
 800417e:	f022 0203 	bic.w	r2, r2, #3
 8004182:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004184:	68da      	ldr	r2, [r3, #12]
 8004186:	4322      	orrs	r2, r4
 8004188:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800418a:	695a      	ldr	r2, [r3, #20]
 800418c:	f022 0207 	bic.w	r2, r2, #7
 8004190:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8004192:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 8004196:	432a      	orrs	r2, r5
 8004198:	694d      	ldr	r5, [r1, #20]
 800419a:	695c      	ldr	r4, [r3, #20]
 800419c:	432a      	orrs	r2, r5
 800419e:	4322      	orrs	r2, r4
 80041a0:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80041a2:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80041a4:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80041a6:	f022 020f 	bic.w	r2, r2, #15
 80041aa:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80041ac:	691c      	ldr	r4, [r3, #16]
 80041ae:	432c      	orrs	r4, r5
 80041b0:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 80041b2:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80041b6:	f024 040e 	bic.w	r4, r4, #14
 80041ba:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80041be:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80041c2:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80041c4:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 80041c8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 80041cc:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80041ce:	0c12      	lsrs	r2, r2, #16
 80041d0:	0412      	lsls	r2, r2, #16
 80041d2:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80041d4:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80041d6:	4322      	orrs	r2, r4
 80041d8:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 80041da:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80041de:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80041e2:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80041e6:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 80041ea:	432a      	orrs	r2, r5
 80041ec:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80041ee:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80041f2:	432a      	orrs	r2, r5
 80041f4:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80041f6:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80041f8:	432a      	orrs	r2, r5
 80041fa:	4322      	orrs	r2, r4
 80041fc:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8004200:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8004202:	f022 0201 	bic.w	r2, r2, #1
 8004206:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8004208:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800420a:	430a      	orrs	r2, r1
 800420c:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800420e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004212:	f042 0201 	orr.w	r2, r2, #1
 8004216:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800421a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800421e:	f042 0202 	orr.w	r2, r2, #2
 8004222:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004226:	2300      	movs	r3, #0
 8004228:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800422a:	4618      	mov	r0, r3
}
 800422c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800422e:	2002      	movs	r0, #2
 8004230:	e7fc      	b.n	800422c <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08004234 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8004234:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004236:	7c03      	ldrb	r3, [r0, #16]
 8004238:	2b01      	cmp	r3, #1
 800423a:	d02a      	beq.n	8004292 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800423c:	6802      	ldr	r2, [r0, #0]
 800423e:	4b16      	ldr	r3, [pc, #88]	; (8004298 <HAL_DSI_ConfigCommand+0x64>)
 8004240:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8004242:	4023      	ands	r3, r4
 8004244:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004246:	e9d1 3500 	ldrd	r3, r5, [r1]
 800424a:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800424c:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800424e:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8004250:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 8004252:	68cd      	ldr	r5, [r1, #12]
 8004254:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 8004256:	690d      	ldr	r5, [r1, #16]
 8004258:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800425a:	694d      	ldr	r5, [r1, #20]
 800425c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800425e:	698d      	ldr	r5, [r1, #24]
 8004260:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 8004262:	69cd      	ldr	r5, [r1, #28]
 8004264:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 8004266:	6a0d      	ldr	r5, [r1, #32]
 8004268:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800426a:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800426c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800426e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8004270:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 8004272:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004274:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 8004276:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004278:	4323      	orrs	r3, r4
 800427a:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800427c:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800427e:	f023 0302 	bic.w	r3, r3, #2
 8004282:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004284:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8004286:	430b      	orrs	r3, r1
 8004288:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800428a:	2300      	movs	r3, #0
 800428c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800428e:	4618      	mov	r0, r3
}
 8004290:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004292:	2002      	movs	r0, #2
 8004294:	e7fc      	b.n	8004290 <HAL_DSI_ConfigCommand+0x5c>
 8004296:	bf00      	nop
 8004298:	fef080ff 	.word	0xfef080ff

0800429c <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800429c:	7c03      	ldrb	r3, [r0, #16]
 800429e:	2b01      	cmp	r3, #1
 80042a0:	d00b      	beq.n	80042ba <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 80042a2:	6803      	ldr	r3, [r0, #0]
 80042a4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80042a6:	f022 021f 	bic.w	r2, r2, #31
 80042aa:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 80042ac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80042ae:	4311      	orrs	r1, r2
 80042b0:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80042b2:	2300      	movs	r3, #0
 80042b4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80042b6:	4618      	mov	r0, r3
 80042b8:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80042ba:	2002      	movs	r0, #2
}
 80042bc:	4770      	bx	lr

080042be <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 80042be:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 80042c0:	7c03      	ldrb	r3, [r0, #16]
 80042c2:	2b01      	cmp	r3, #1
 80042c4:	d035      	beq.n	8004332 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80042c6:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80042ca:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80042cc:	4294      	cmp	r4, r2
 80042ce:	bf38      	it	cc
 80042d0:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80042d2:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80042d6:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 80042da:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 80042de:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80042e2:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80042e6:	4322      	orrs	r2, r4
 80042e8:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 80042ec:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 80042f0:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 80042f4:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 80042f8:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 80042fc:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80042fe:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8004302:	690d      	ldr	r5, [r1, #16]
 8004304:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8004308:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800430a:	432a      	orrs	r2, r5
 800430c:	4322      	orrs	r2, r4
 800430e:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8004312:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004316:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800431a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800431e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004322:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004326:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800432a:	2300      	movs	r3, #0
 800432c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800432e:	4618      	mov	r0, r3
}
 8004330:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004332:	2002      	movs	r0, #2
 8004334:	e7fc      	b.n	8004330 <HAL_DSI_ConfigPhyTimer+0x72>
	...

08004338 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8004338:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800433a:	7c03      	ldrb	r3, [r0, #16]
 800433c:	2b01      	cmp	r3, #1
 800433e:	d05c      	beq.n	80043fa <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004340:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004342:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004344:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8004346:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004348:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800434c:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800434e:	689a      	ldr	r2, [r3, #8]
 8004350:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8004354:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004356:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004358:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800435a:	b292      	uxth	r2, r2
 800435c:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800435e:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8004360:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8004364:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 8004366:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004368:	4a25      	ldr	r2, [pc, #148]	; (8004400 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800436a:	4014      	ands	r4, r2
 800436c:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800436e:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004370:	432c      	orrs	r4, r5
 8004372:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004374:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004376:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004378:	4014      	ands	r4, r2
 800437a:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800437c:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800437e:	432c      	orrs	r4, r5
 8004380:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004382:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8004386:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004388:	4014      	ands	r4, r2
 800438a:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800438e:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8004392:	432c      	orrs	r4, r5
 8004394:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004398:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800439c:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800439e:	4014      	ands	r4, r2
 80043a0:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80043a4:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80043a8:	432c      	orrs	r4, r5
 80043aa:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 80043ae:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80043b2:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 80043b6:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 80043ba:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80043be:	698d      	ldr	r5, [r1, #24]
 80043c0:	432c      	orrs	r4, r5
 80043c2:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80043c6:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80043ca:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80043cc:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80043ce:	4014      	ands	r4, r2
 80043d0:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80043d4:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80043d8:	432c      	orrs	r4, r5
 80043da:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80043de:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 80043e2:	4022      	ands	r2, r4
 80043e4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80043e8:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80043ec:	430a      	orrs	r2, r1
 80043ee:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80043f2:	2300      	movs	r3, #0
 80043f4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80043f6:	4618      	mov	r0, r3
}
 80043f8:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80043fa:	2002      	movs	r0, #2
 80043fc:	e7fc      	b.n	80043f8 <HAL_DSI_ConfigHostTimeouts+0xc0>
 80043fe:	bf00      	nop
 8004400:	ffff0000 	.word	0xffff0000

08004404 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004404:	7c03      	ldrb	r3, [r0, #16]
 8004406:	2b01      	cmp	r3, #1
{
 8004408:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800440a:	d01c      	beq.n	8004446 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800440c:	6802      	ldr	r2, [r0, #0]
 800440e:	2300      	movs	r3, #0
 8004410:	9300      	str	r3, [sp, #0]
 8004412:	6851      	ldr	r1, [r2, #4]
 8004414:	f041 0101 	orr.w	r1, r1, #1
 8004418:	6051      	str	r1, [r2, #4]
 800441a:	6851      	ldr	r1, [r2, #4]
 800441c:	f001 0101 	and.w	r1, r1, #1
 8004420:	9100      	str	r1, [sp, #0]
 8004422:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004424:	9301      	str	r3, [sp, #4]
 8004426:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800442a:	f041 0108 	orr.w	r1, r1, #8
 800442e:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8004432:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004436:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004438:	f002 0208 	and.w	r2, r2, #8
 800443c:	9201      	str	r2, [sp, #4]
 800443e:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8004440:	4618      	mov	r0, r3
}
 8004442:	b002      	add	sp, #8
 8004444:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004446:	2002      	movs	r0, #2
 8004448:	e7fb      	b.n	8004442 <HAL_DSI_Start+0x3e>

0800444a <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800444a:	7c03      	ldrb	r3, [r0, #16]
 800444c:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800444e:	bf1f      	itttt	ne
 8004450:	6802      	ldrne	r2, [r0, #0]
 8004452:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 8004456:	f043 0304 	orrne.w	r3, r3, #4
 800445a:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800445e:	bf1d      	ittte	ne
 8004460:	2300      	movne	r3, #0
 8004462:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 8004464:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 8004466:	2002      	moveq	r0, #2
}
 8004468:	4770      	bx	lr

0800446a <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800446a:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800446c:	7c05      	ldrb	r5, [r0, #16]
 800446e:	2d01      	cmp	r5, #1
{
 8004470:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8004472:	d009      	beq.n	8004488 <HAL_DSI_ShortWrite+0x1e>
 8004474:	2501      	movs	r5, #1
 8004476:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8004478:	9d06      	ldr	r5, [sp, #24]
 800447a:	9500      	str	r5, [sp, #0]
 800447c:	f7ff fcac 	bl	8003dd8 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004480:	2300      	movs	r3, #0
 8004482:	7423      	strb	r3, [r4, #16]

  return status;
}
 8004484:	b003      	add	sp, #12
 8004486:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004488:	2002      	movs	r0, #2
 800448a:	e7fb      	b.n	8004484 <HAL_DSI_ShortWrite+0x1a>

0800448c <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800448c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004490:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004492:	7c03      	ldrb	r3, [r0, #16]
 8004494:	2b01      	cmp	r3, #1
{
 8004496:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800449a:	4606      	mov	r6, r0
 800449c:	460f      	mov	r7, r1
 800449e:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 80044a0:	d053      	beq.n	800454a <HAL_DSI_LongWrite+0xbe>
 80044a2:	2301      	movs	r3, #1
 80044a4:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 80044a6:	f7ff fa07 	bl	80038b8 <HAL_GetTick>
 80044aa:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80044ac:	6831      	ldr	r1, [r6, #0]
 80044ae:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 80044b0:	f013 0a01 	ands.w	sl, r3, #1
 80044b4:	d01a      	beq.n	80044ec <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80044b6:	2c03      	cmp	r4, #3
 80044b8:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 80044ba:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80044be:	bf28      	it	cs
 80044c0:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 80044c2:	4282      	cmp	r2, r0
 80044c4:	d11e      	bne.n	8004504 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 80044c6:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 80044c8:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 80044cc:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 80044ce:	bb1b      	cbnz	r3, 8004518 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 80044d0:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80044d2:	0222      	lsls	r2, r4, #8
 80044d4:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 80044d8:	b292      	uxth	r2, r2
 80044da:	0224      	lsls	r4, r4, #8
 80044dc:	4315      	orrs	r5, r2
 80044de:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80044e2:	432c      	orrs	r4, r5
 80044e4:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 80044e6:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 80044e8:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 80044ea:	e009      	b.n	8004500 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80044ec:	f7ff f9e4 	bl	80038b8 <HAL_GetTick>
 80044f0:	eba0 000b 	sub.w	r0, r0, fp
 80044f4:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80044f8:	d9d8      	bls.n	80044ac <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 80044fa:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 80044fe:	2003      	movs	r0, #3
}
 8004500:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8004504:	f818 3002 	ldrb.w	r3, [r8, r2]
 8004508:	3201      	adds	r2, #1
 800450a:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 800450e:	fa03 f30c 	lsl.w	r3, r3, ip
 8004512:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8004516:	e7d4      	b.n	80044c2 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004518:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800451a:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800451e:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8004520:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004522:	bf28      	it	cs
 8004524:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004528:	f812 8000 	ldrb.w	r8, [r2, r0]
 800452c:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8004530:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004532:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8004536:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004538:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 800453c:	d1f4      	bne.n	8004528 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800453e:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 8004542:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8004546:	4472      	add	r2, lr
 8004548:	e7c1      	b.n	80044ce <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800454a:	2002      	movs	r0, #2
 800454c:	e7d8      	b.n	8004500 <HAL_DSI_LongWrite+0x74>

0800454e <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800454e:	7c03      	ldrb	r3, [r0, #16]
 8004550:	2b01      	cmp	r3, #1
 8004552:	d010      	beq.n	8004576 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8004554:	6803      	ldr	r3, [r0, #0]
 8004556:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800455a:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800455e:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 8004562:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004566:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800456a:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800456e:	2300      	movs	r3, #0
 8004570:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004572:	4618      	mov	r0, r3
 8004574:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004576:	2002      	movs	r0, #2
}
 8004578:	4770      	bx	lr
	...

0800457c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800457c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004580:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8004744 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004584:	4a6d      	ldr	r2, [pc, #436]	; (800473c <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004586:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004588:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800458a:	2401      	movs	r4, #1
 800458c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800458e:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8004592:	43ac      	bics	r4, r5
 8004594:	f040 80b9 	bne.w	800470a <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004598:	684d      	ldr	r5, [r1, #4]
 800459a:	f005 0403 	and.w	r4, r5, #3
 800459e:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80045a2:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80045a4:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80045a6:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80045aa:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80045ac:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80045b0:	d834      	bhi.n	800461c <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80045b2:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80045b4:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 80045b8:	68cf      	ldr	r7, [r1, #12]
 80045ba:	fa07 f708 	lsl.w	r7, r7, r8
 80045be:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80045c2:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80045c4:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80045c6:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80045ca:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80045ce:	409f      	lsls	r7, r3
 80045d0:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80045d4:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80045d6:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80045d8:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80045dc:	688f      	ldr	r7, [r1, #8]
 80045de:	fa07 f708 	lsl.w	r7, r7, r8
 80045e2:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80045e6:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80045e8:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80045ea:	d119      	bne.n	8004620 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 80045ec:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80045f0:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80045f4:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80045f8:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80045fc:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004600:	f04f 0e0f 	mov.w	lr, #15
 8004604:	fa0e fe0b 	lsl.w	lr, lr, fp
 8004608:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800460c:	690f      	ldr	r7, [r1, #16]
 800460e:	fa07 f70b 	lsl.w	r7, r7, fp
 8004612:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8004616:	f8ca 7020 	str.w	r7, [sl, #32]
 800461a:	e001      	b.n	8004620 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800461c:	2c03      	cmp	r4, #3
 800461e:	d1da      	bne.n	80045d6 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004620:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004622:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004626:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004628:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800462a:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800462e:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004630:	d06b      	beq.n	800470a <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004632:	f04f 0a00 	mov.w	sl, #0
 8004636:	f8cd a004 	str.w	sl, [sp, #4]
 800463a:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800463e:	4c40      	ldr	r4, [pc, #256]	; (8004740 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004640:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8004644:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8004648:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800464c:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8004650:	9601      	str	r6, [sp, #4]
 8004652:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004654:	f023 0603 	bic.w	r6, r3, #3
 8004658:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800465c:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004660:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004664:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004668:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800466c:	270f      	movs	r7, #15
 800466e:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004672:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004674:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004678:	d04e      	beq.n	8004718 <HAL_GPIO_Init+0x19c>
 800467a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800467e:	42a0      	cmp	r0, r4
 8004680:	d04c      	beq.n	800471c <HAL_GPIO_Init+0x1a0>
 8004682:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004686:	42a0      	cmp	r0, r4
 8004688:	d04a      	beq.n	8004720 <HAL_GPIO_Init+0x1a4>
 800468a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800468e:	42a0      	cmp	r0, r4
 8004690:	d048      	beq.n	8004724 <HAL_GPIO_Init+0x1a8>
 8004692:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004696:	42a0      	cmp	r0, r4
 8004698:	d046      	beq.n	8004728 <HAL_GPIO_Init+0x1ac>
 800469a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800469e:	42a0      	cmp	r0, r4
 80046a0:	d044      	beq.n	800472c <HAL_GPIO_Init+0x1b0>
 80046a2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80046a6:	42a0      	cmp	r0, r4
 80046a8:	d042      	beq.n	8004730 <HAL_GPIO_Init+0x1b4>
 80046aa:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80046ae:	42a0      	cmp	r0, r4
 80046b0:	d040      	beq.n	8004734 <HAL_GPIO_Init+0x1b8>
 80046b2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80046b6:	42a0      	cmp	r0, r4
 80046b8:	d03e      	beq.n	8004738 <HAL_GPIO_Init+0x1bc>
 80046ba:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80046be:	42a0      	cmp	r0, r4
 80046c0:	bf0c      	ite	eq
 80046c2:	2409      	moveq	r4, #9
 80046c4:	240a      	movne	r4, #10
 80046c6:	fa04 f40e 	lsl.w	r4, r4, lr
 80046ca:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80046cc:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 80046ce:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80046d0:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80046d4:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 80046d6:	bf54      	ite	pl
 80046d8:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80046da:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 80046de:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 80046e0:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80046e2:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 80046e4:	bf54      	ite	pl
 80046e6:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80046e8:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 80046ec:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 80046ee:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80046f0:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 80046f2:	bf54      	ite	pl
 80046f4:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80046f6:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 80046fa:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80046fc:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80046fe:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8004700:	bf54      	ite	pl
 8004702:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004704:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8004708:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800470a:	3301      	adds	r3, #1
 800470c:	2b10      	cmp	r3, #16
 800470e:	f47f af3b 	bne.w	8004588 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004712:	b003      	add	sp, #12
 8004714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004718:	4654      	mov	r4, sl
 800471a:	e7d4      	b.n	80046c6 <HAL_GPIO_Init+0x14a>
 800471c:	2401      	movs	r4, #1
 800471e:	e7d2      	b.n	80046c6 <HAL_GPIO_Init+0x14a>
 8004720:	2402      	movs	r4, #2
 8004722:	e7d0      	b.n	80046c6 <HAL_GPIO_Init+0x14a>
 8004724:	2403      	movs	r4, #3
 8004726:	e7ce      	b.n	80046c6 <HAL_GPIO_Init+0x14a>
 8004728:	2404      	movs	r4, #4
 800472a:	e7cc      	b.n	80046c6 <HAL_GPIO_Init+0x14a>
 800472c:	2405      	movs	r4, #5
 800472e:	e7ca      	b.n	80046c6 <HAL_GPIO_Init+0x14a>
 8004730:	2406      	movs	r4, #6
 8004732:	e7c8      	b.n	80046c6 <HAL_GPIO_Init+0x14a>
 8004734:	2407      	movs	r4, #7
 8004736:	e7c6      	b.n	80046c6 <HAL_GPIO_Init+0x14a>
 8004738:	2408      	movs	r4, #8
 800473a:	e7c4      	b.n	80046c6 <HAL_GPIO_Init+0x14a>
 800473c:	40013c00 	.word	0x40013c00
 8004740:	40020000 	.word	0x40020000
 8004744:	40023800 	.word	0x40023800

08004748 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800474c:	4c4a      	ldr	r4, [pc, #296]	; (8004878 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800474e:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8004880 <HAL_GPIO_DeInit+0x138>
 8004752:	f8df a130 	ldr.w	sl, [pc, #304]	; 8004884 <HAL_GPIO_DeInit+0x13c>
 8004756:	f8df b130 	ldr.w	fp, [pc, #304]	; 8004888 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800475a:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 800475c:	2301      	movs	r3, #1
 800475e:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8004762:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8004766:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800476a:	d16e      	bne.n	800484a <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800476c:	f022 0503 	bic.w	r5, r2, #3
 8004770:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8004774:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004778:	4b40      	ldr	r3, [pc, #256]	; (800487c <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800477a:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800477e:	f002 0c03 	and.w	ip, r2, #3
 8004782:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004786:	260f      	movs	r6, #15
 8004788:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800478c:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800478e:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004792:	d05f      	beq.n	8004854 <HAL_GPIO_DeInit+0x10c>
 8004794:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004798:	4298      	cmp	r0, r3
 800479a:	d05d      	beq.n	8004858 <HAL_GPIO_DeInit+0x110>
 800479c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80047a0:	4298      	cmp	r0, r3
 80047a2:	d05b      	beq.n	800485c <HAL_GPIO_DeInit+0x114>
 80047a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80047a8:	4298      	cmp	r0, r3
 80047aa:	d059      	beq.n	8004860 <HAL_GPIO_DeInit+0x118>
 80047ac:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80047b0:	4298      	cmp	r0, r3
 80047b2:	d057      	beq.n	8004864 <HAL_GPIO_DeInit+0x11c>
 80047b4:	4548      	cmp	r0, r9
 80047b6:	d057      	beq.n	8004868 <HAL_GPIO_DeInit+0x120>
 80047b8:	4550      	cmp	r0, sl
 80047ba:	d057      	beq.n	800486c <HAL_GPIO_DeInit+0x124>
 80047bc:	4558      	cmp	r0, fp
 80047be:	d057      	beq.n	8004870 <HAL_GPIO_DeInit+0x128>
 80047c0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80047c4:	4298      	cmp	r0, r3
 80047c6:	d055      	beq.n	8004874 <HAL_GPIO_DeInit+0x12c>
 80047c8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80047cc:	4298      	cmp	r0, r3
 80047ce:	bf0c      	ite	eq
 80047d0:	2309      	moveq	r3, #9
 80047d2:	230a      	movne	r3, #10
 80047d4:	fa03 f30c 	lsl.w	r3, r3, ip
 80047d8:	4543      	cmp	r3, r8
 80047da:	d113      	bne.n	8004804 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80047dc:	6823      	ldr	r3, [r4, #0]
 80047de:	ea23 0307 	bic.w	r3, r3, r7
 80047e2:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80047e4:	6863      	ldr	r3, [r4, #4]
 80047e6:	ea23 0307 	bic.w	r3, r3, r7
 80047ea:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80047ec:	68e3      	ldr	r3, [r4, #12]
 80047ee:	ea23 0307 	bic.w	r3, r3, r7
 80047f2:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 80047f4:	68a3      	ldr	r3, [r4, #8]
 80047f6:	ea23 0307 	bic.w	r3, r3, r7
 80047fa:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 80047fc:	68ab      	ldr	r3, [r5, #8]
 80047fe:	ea23 0306 	bic.w	r3, r3, r6
 8004802:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004804:	6805      	ldr	r5, [r0, #0]
 8004806:	2603      	movs	r6, #3
 8004808:	0053      	lsls	r3, r2, #1
 800480a:	fa06 f303 	lsl.w	r3, r6, r3
 800480e:	ea25 0503 	bic.w	r5, r5, r3
 8004812:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004814:	fa22 f506 	lsr.w	r5, r2, r6
 8004818:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800481c:	f002 0c07 	and.w	ip, r2, #7
 8004820:	6a2e      	ldr	r6, [r5, #32]
 8004822:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004826:	270f      	movs	r7, #15
 8004828:	fa07 f70c 	lsl.w	r7, r7, ip
 800482c:	ea26 0707 	bic.w	r7, r6, r7
 8004830:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004832:	68c5      	ldr	r5, [r0, #12]
 8004834:	ea25 0503 	bic.w	r5, r5, r3
 8004838:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800483a:	6845      	ldr	r5, [r0, #4]
 800483c:	ea25 050e 	bic.w	r5, r5, lr
 8004840:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004842:	6885      	ldr	r5, [r0, #8]
 8004844:	ea25 0303 	bic.w	r3, r5, r3
 8004848:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800484a:	3201      	adds	r2, #1
 800484c:	2a10      	cmp	r2, #16
 800484e:	d185      	bne.n	800475c <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8004850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004854:	2300      	movs	r3, #0
 8004856:	e7bd      	b.n	80047d4 <HAL_GPIO_DeInit+0x8c>
 8004858:	2301      	movs	r3, #1
 800485a:	e7bb      	b.n	80047d4 <HAL_GPIO_DeInit+0x8c>
 800485c:	2302      	movs	r3, #2
 800485e:	e7b9      	b.n	80047d4 <HAL_GPIO_DeInit+0x8c>
 8004860:	2303      	movs	r3, #3
 8004862:	e7b7      	b.n	80047d4 <HAL_GPIO_DeInit+0x8c>
 8004864:	2304      	movs	r3, #4
 8004866:	e7b5      	b.n	80047d4 <HAL_GPIO_DeInit+0x8c>
 8004868:	2305      	movs	r3, #5
 800486a:	e7b3      	b.n	80047d4 <HAL_GPIO_DeInit+0x8c>
 800486c:	2306      	movs	r3, #6
 800486e:	e7b1      	b.n	80047d4 <HAL_GPIO_DeInit+0x8c>
 8004870:	2307      	movs	r3, #7
 8004872:	e7af      	b.n	80047d4 <HAL_GPIO_DeInit+0x8c>
 8004874:	2308      	movs	r3, #8
 8004876:	e7ad      	b.n	80047d4 <HAL_GPIO_DeInit+0x8c>
 8004878:	40013c00 	.word	0x40013c00
 800487c:	40020000 	.word	0x40020000
 8004880:	40021400 	.word	0x40021400
 8004884:	40021800 	.word	0x40021800
 8004888:	40021c00 	.word	0x40021c00

0800488c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800488c:	6903      	ldr	r3, [r0, #16]
 800488e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004890:	bf14      	ite	ne
 8004892:	2001      	movne	r0, #1
 8004894:	2000      	moveq	r0, #0
 8004896:	4770      	bx	lr

08004898 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004898:	b10a      	cbz	r2, 800489e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800489a:	6181      	str	r1, [r0, #24]
  }
}
 800489c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800489e:	0409      	lsls	r1, r1, #16
 80048a0:	e7fb      	b.n	800489a <HAL_GPIO_WritePin+0x2>

080048a2 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80048a2:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80048a4:	ea01 0203 	and.w	r2, r1, r3
 80048a8:	ea21 0103 	bic.w	r1, r1, r3
 80048ac:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80048b0:	6181      	str	r1, [r0, #24]
}
 80048b2:	4770      	bx	lr

080048b4 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80048b4:	6801      	ldr	r1, [r0, #0]
 80048b6:	694b      	ldr	r3, [r1, #20]
 80048b8:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80048bc:	f04f 0200 	mov.w	r2, #0
 80048c0:	d010      	beq.n	80048e4 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80048c2:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80048c6:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80048c8:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80048ca:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80048cc:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80048d0:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80048d4:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80048d6:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80048da:	f043 0304 	orr.w	r3, r3, #4
 80048de:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80048e0:	2001      	movs	r0, #1
 80048e2:	4770      	bx	lr
  }
  return HAL_OK;
 80048e4:	4618      	mov	r0, r3
}
 80048e6:	4770      	bx	lr

080048e8 <I2C_WaitOnFlagUntilTimeout>:
{
 80048e8:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80048ec:	4606      	mov	r6, r0
 80048ee:	460f      	mov	r7, r1
 80048f0:	4691      	mov	r9, r2
 80048f2:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80048f4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80048f8:	6833      	ldr	r3, [r6, #0]
 80048fa:	f1ba 0f01 	cmp.w	sl, #1
 80048fe:	bf0c      	ite	eq
 8004900:	695c      	ldreq	r4, [r3, #20]
 8004902:	699c      	ldrne	r4, [r3, #24]
 8004904:	ea27 0404 	bic.w	r4, r7, r4
 8004908:	b2a4      	uxth	r4, r4
 800490a:	fab4 f484 	clz	r4, r4
 800490e:	0964      	lsrs	r4, r4, #5
 8004910:	45a1      	cmp	r9, r4
 8004912:	d001      	beq.n	8004918 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004914:	2000      	movs	r0, #0
 8004916:	e017      	b.n	8004948 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8004918:	1c6a      	adds	r2, r5, #1
 800491a:	d0ee      	beq.n	80048fa <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800491c:	f7fe ffcc 	bl	80038b8 <HAL_GetTick>
 8004920:	9b08      	ldr	r3, [sp, #32]
 8004922:	1ac0      	subs	r0, r0, r3
 8004924:	42a8      	cmp	r0, r5
 8004926:	d801      	bhi.n	800492c <I2C_WaitOnFlagUntilTimeout+0x44>
 8004928:	2d00      	cmp	r5, #0
 800492a:	d1e5      	bne.n	80048f8 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800492c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800492e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004930:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004932:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004936:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800493a:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800493c:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004940:	f042 0220 	orr.w	r2, r2, #32
 8004944:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8004946:	2001      	movs	r0, #1
}
 8004948:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800494c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800494c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004950:	4604      	mov	r4, r0
 8004952:	460f      	mov	r7, r1
 8004954:	4616      	mov	r6, r2
 8004956:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004958:	6825      	ldr	r5, [r4, #0]
 800495a:	6968      	ldr	r0, [r5, #20]
 800495c:	ea27 0000 	bic.w	r0, r7, r0
 8004960:	b280      	uxth	r0, r0
 8004962:	b1b8      	cbz	r0, 8004994 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004964:	696b      	ldr	r3, [r5, #20]
 8004966:	055a      	lsls	r2, r3, #21
 8004968:	d516      	bpl.n	8004998 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800496a:	682b      	ldr	r3, [r5, #0]
 800496c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004970:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004972:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004976:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004978:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800497a:	2300      	movs	r3, #0
 800497c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800497e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004982:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004986:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004988:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800498c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800498e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004992:	2001      	movs	r0, #1
}
 8004994:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004998:	1c73      	adds	r3, r6, #1
 800499a:	d0de      	beq.n	800495a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800499c:	f7fe ff8c 	bl	80038b8 <HAL_GetTick>
 80049a0:	eba0 0008 	sub.w	r0, r0, r8
 80049a4:	42b0      	cmp	r0, r6
 80049a6:	d801      	bhi.n	80049ac <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80049a8:	2e00      	cmp	r6, #0
 80049aa:	d1d5      	bne.n	8004958 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80049ac:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80049ae:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80049b0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80049b2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80049b6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80049ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80049bc:	f042 0220 	orr.w	r2, r2, #32
 80049c0:	e7e4      	b.n	800498c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080049c2 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80049c2:	b570      	push	{r4, r5, r6, lr}
 80049c4:	4604      	mov	r4, r0
 80049c6:	460d      	mov	r5, r1
 80049c8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80049ca:	6821      	ldr	r1, [r4, #0]
 80049cc:	694b      	ldr	r3, [r1, #20]
 80049ce:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 80049d2:	d001      	beq.n	80049d8 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80049d4:	2000      	movs	r0, #0
 80049d6:	e010      	b.n	80049fa <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80049d8:	694a      	ldr	r2, [r1, #20]
 80049da:	06d2      	lsls	r2, r2, #27
 80049dc:	d50e      	bpl.n	80049fc <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80049de:	f06f 0210 	mvn.w	r2, #16
 80049e2:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80049e4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80049e6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80049e8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80049ec:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80049f0:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80049f2:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80049f4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 80049f8:	2001      	movs	r0, #1
}
 80049fa:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80049fc:	f7fe ff5c 	bl	80038b8 <HAL_GetTick>
 8004a00:	1b80      	subs	r0, r0, r6
 8004a02:	42a8      	cmp	r0, r5
 8004a04:	d801      	bhi.n	8004a0a <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004a06:	2d00      	cmp	r5, #0
 8004a08:	d1df      	bne.n	80049ca <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004a0a:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8004a0c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004a0e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004a10:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004a14:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004a18:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004a1a:	f042 0220 	orr.w	r2, r2, #32
 8004a1e:	e7e8      	b.n	80049f2 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004a20 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004a20:	b570      	push	{r4, r5, r6, lr}
 8004a22:	4604      	mov	r4, r0
 8004a24:	460d      	mov	r5, r1
 8004a26:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004a28:	6823      	ldr	r3, [r4, #0]
 8004a2a:	695b      	ldr	r3, [r3, #20]
 8004a2c:	075b      	lsls	r3, r3, #29
 8004a2e:	d501      	bpl.n	8004a34 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004a30:	2000      	movs	r0, #0
}
 8004a32:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004a34:	4620      	mov	r0, r4
 8004a36:	f7ff ff3d 	bl	80048b4 <I2C_IsAcknowledgeFailed>
 8004a3a:	b9a8      	cbnz	r0, 8004a68 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004a3c:	1c6a      	adds	r2, r5, #1
 8004a3e:	d0f3      	beq.n	8004a28 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004a40:	f7fe ff3a 	bl	80038b8 <HAL_GetTick>
 8004a44:	1b80      	subs	r0, r0, r6
 8004a46:	42a8      	cmp	r0, r5
 8004a48:	d801      	bhi.n	8004a4e <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004a4a:	2d00      	cmp	r5, #0
 8004a4c:	d1ec      	bne.n	8004a28 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004a4e:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004a50:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004a52:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004a54:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004a58:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004a5c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004a5e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004a62:	f042 0220 	orr.w	r2, r2, #32
 8004a66:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004a68:	2001      	movs	r0, #1
 8004a6a:	e7e2      	b.n	8004a32 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004a6c <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004a6c:	b570      	push	{r4, r5, r6, lr}
 8004a6e:	4604      	mov	r4, r0
 8004a70:	460d      	mov	r5, r1
 8004a72:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004a74:	6823      	ldr	r3, [r4, #0]
 8004a76:	695b      	ldr	r3, [r3, #20]
 8004a78:	061b      	lsls	r3, r3, #24
 8004a7a:	d501      	bpl.n	8004a80 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004a7c:	2000      	movs	r0, #0
}
 8004a7e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004a80:	4620      	mov	r0, r4
 8004a82:	f7ff ff17 	bl	80048b4 <I2C_IsAcknowledgeFailed>
 8004a86:	b9a8      	cbnz	r0, 8004ab4 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004a88:	1c6a      	adds	r2, r5, #1
 8004a8a:	d0f3      	beq.n	8004a74 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004a8c:	f7fe ff14 	bl	80038b8 <HAL_GetTick>
 8004a90:	1b80      	subs	r0, r0, r6
 8004a92:	42a8      	cmp	r0, r5
 8004a94:	d801      	bhi.n	8004a9a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004a96:	2d00      	cmp	r5, #0
 8004a98:	d1ec      	bne.n	8004a74 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004a9a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004a9c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004a9e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004aa0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004aa4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004aa8:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004aaa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004aae:	f042 0220 	orr.w	r2, r2, #32
 8004ab2:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004ab4:	2001      	movs	r0, #1
 8004ab6:	e7e2      	b.n	8004a7e <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08004ab8 <I2C_RequestMemoryWrite>:
{
 8004ab8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004abc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004abe:	6802      	ldr	r2, [r0, #0]
{
 8004ac0:	b085      	sub	sp, #20
 8004ac2:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8004ac6:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004ac8:	6813      	ldr	r3, [r2, #0]
 8004aca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004ace:	6013      	str	r3, [r2, #0]
{
 8004ad0:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004ad2:	463b      	mov	r3, r7
 8004ad4:	f8cd 8000 	str.w	r8, [sp]
 8004ad8:	2200      	movs	r2, #0
 8004ada:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004ade:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004ae0:	f7ff ff02 	bl	80048e8 <I2C_WaitOnFlagUntilTimeout>
 8004ae4:	6823      	ldr	r3, [r4, #0]
 8004ae6:	b138      	cbz	r0, 8004af8 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004ae8:	681b      	ldr	r3, [r3, #0]
 8004aea:	05db      	lsls	r3, r3, #23
 8004aec:	d502      	bpl.n	8004af4 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004aee:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004af2:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004af4:	2003      	movs	r0, #3
 8004af6:	e00a      	b.n	8004b0e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004af8:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004afc:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004afe:	4919      	ldr	r1, [pc, #100]	; (8004b64 <I2C_RequestMemoryWrite+0xac>)
 8004b00:	4643      	mov	r3, r8
 8004b02:	463a      	mov	r2, r7
 8004b04:	4620      	mov	r0, r4
 8004b06:	f7ff ff21 	bl	800494c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004b0a:	b118      	cbz	r0, 8004b14 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8004b0c:	2001      	movs	r0, #1
}
 8004b0e:	b005      	add	sp, #20
 8004b10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004b14:	6823      	ldr	r3, [r4, #0]
 8004b16:	9003      	str	r0, [sp, #12]
 8004b18:	695a      	ldr	r2, [r3, #20]
 8004b1a:	9203      	str	r2, [sp, #12]
 8004b1c:	699b      	ldr	r3, [r3, #24]
 8004b1e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004b20:	4642      	mov	r2, r8
 8004b22:	4639      	mov	r1, r7
 8004b24:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004b26:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004b28:	f7ff ffa0 	bl	8004a6c <I2C_WaitOnTXEFlagUntilTimeout>
 8004b2c:	b140      	cbz	r0, 8004b40 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004b2e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004b30:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b32:	bf01      	itttt	eq
 8004b34:	6822      	ldreq	r2, [r4, #0]
 8004b36:	6813      	ldreq	r3, [r2, #0]
 8004b38:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004b3c:	6013      	streq	r3, [r2, #0]
 8004b3e:	e7e5      	b.n	8004b0c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004b40:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b44:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004b46:	d102      	bne.n	8004b4e <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004b48:	b2ed      	uxtb	r5, r5
 8004b4a:	611d      	str	r5, [r3, #16]
 8004b4c:	e7df      	b.n	8004b0e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004b4e:	0a2a      	lsrs	r2, r5, #8
 8004b50:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004b52:	4639      	mov	r1, r7
 8004b54:	4642      	mov	r2, r8
 8004b56:	4620      	mov	r0, r4
 8004b58:	f7ff ff88 	bl	8004a6c <I2C_WaitOnTXEFlagUntilTimeout>
 8004b5c:	2800      	cmp	r0, #0
 8004b5e:	d1e6      	bne.n	8004b2e <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004b60:	6823      	ldr	r3, [r4, #0]
 8004b62:	e7f1      	b.n	8004b48 <I2C_RequestMemoryWrite+0x90>
 8004b64:	00010002 	.word	0x00010002

08004b68 <I2C_RequestMemoryRead>:
{
 8004b68:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004b6c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004b6e:	6803      	ldr	r3, [r0, #0]
{
 8004b70:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004b72:	681a      	ldr	r2, [r3, #0]
 8004b74:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004b78:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b7a:	681a      	ldr	r2, [r3, #0]
{
 8004b7c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004b80:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004b84:	601a      	str	r2, [r3, #0]
{
 8004b86:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004b88:	463b      	mov	r3, r7
 8004b8a:	f8cd 8000 	str.w	r8, [sp]
 8004b8e:	2200      	movs	r2, #0
 8004b90:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004b94:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004b96:	f7ff fea7 	bl	80048e8 <I2C_WaitOnFlagUntilTimeout>
 8004b9a:	6823      	ldr	r3, [r4, #0]
 8004b9c:	b148      	cbz	r0, 8004bb2 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004b9e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004ba0:	05db      	lsls	r3, r3, #23
 8004ba2:	d502      	bpl.n	8004baa <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004ba4:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004ba8:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004baa:	2003      	movs	r0, #3
}
 8004bac:	b004      	add	sp, #16
 8004bae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004bb2:	fa5f f986 	uxtb.w	r9, r6
 8004bb6:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004bba:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004bbc:	492a      	ldr	r1, [pc, #168]	; (8004c68 <I2C_RequestMemoryRead+0x100>)
 8004bbe:	4643      	mov	r3, r8
 8004bc0:	463a      	mov	r2, r7
 8004bc2:	4620      	mov	r0, r4
 8004bc4:	f7ff fec2 	bl	800494c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004bc8:	b108      	cbz	r0, 8004bce <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8004bca:	2001      	movs	r0, #1
 8004bcc:	e7ee      	b.n	8004bac <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004bce:	6823      	ldr	r3, [r4, #0]
 8004bd0:	9003      	str	r0, [sp, #12]
 8004bd2:	695a      	ldr	r2, [r3, #20]
 8004bd4:	9203      	str	r2, [sp, #12]
 8004bd6:	699b      	ldr	r3, [r3, #24]
 8004bd8:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004bda:	4642      	mov	r2, r8
 8004bdc:	4639      	mov	r1, r7
 8004bde:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004be0:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004be2:	f7ff ff43 	bl	8004a6c <I2C_WaitOnTXEFlagUntilTimeout>
 8004be6:	b140      	cbz	r0, 8004bfa <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004be8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004bea:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004bec:	bf01      	itttt	eq
 8004bee:	6822      	ldreq	r2, [r4, #0]
 8004bf0:	6813      	ldreq	r3, [r2, #0]
 8004bf2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004bf6:	6013      	streq	r3, [r2, #0]
 8004bf8:	e7e7      	b.n	8004bca <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004bfa:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004bfe:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004c00:	d11a      	bne.n	8004c38 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004c02:	b2ed      	uxtb	r5, r5
 8004c04:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c06:	4642      	mov	r2, r8
 8004c08:	4639      	mov	r1, r7
 8004c0a:	4620      	mov	r0, r4
 8004c0c:	f7ff ff2e 	bl	8004a6c <I2C_WaitOnTXEFlagUntilTimeout>
 8004c10:	2800      	cmp	r0, #0
 8004c12:	d1e9      	bne.n	8004be8 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c14:	6822      	ldr	r2, [r4, #0]
 8004c16:	6813      	ldr	r3, [r2, #0]
 8004c18:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004c1c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004c1e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004c22:	4602      	mov	r2, r0
 8004c24:	f8cd 8000 	str.w	r8, [sp]
 8004c28:	463b      	mov	r3, r7
 8004c2a:	4620      	mov	r0, r4
 8004c2c:	f7ff fe5c 	bl	80048e8 <I2C_WaitOnFlagUntilTimeout>
 8004c30:	6822      	ldr	r2, [r4, #0]
 8004c32:	b160      	cbz	r0, 8004c4e <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004c34:	6813      	ldr	r3, [r2, #0]
 8004c36:	e7b3      	b.n	8004ba0 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004c38:	0a2a      	lsrs	r2, r5, #8
 8004c3a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004c3c:	4639      	mov	r1, r7
 8004c3e:	4642      	mov	r2, r8
 8004c40:	4620      	mov	r0, r4
 8004c42:	f7ff ff13 	bl	8004a6c <I2C_WaitOnTXEFlagUntilTimeout>
 8004c46:	2800      	cmp	r0, #0
 8004c48:	d1ce      	bne.n	8004be8 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004c4a:	6823      	ldr	r3, [r4, #0]
 8004c4c:	e7d9      	b.n	8004c02 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004c4e:	f049 0301 	orr.w	r3, r9, #1
 8004c52:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004c54:	4904      	ldr	r1, [pc, #16]	; (8004c68 <I2C_RequestMemoryRead+0x100>)
 8004c56:	4643      	mov	r3, r8
 8004c58:	463a      	mov	r2, r7
 8004c5a:	4620      	mov	r0, r4
 8004c5c:	f7ff fe76 	bl	800494c <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8004c60:	3800      	subs	r0, #0
 8004c62:	bf18      	it	ne
 8004c64:	2001      	movne	r0, #1
 8004c66:	e7a1      	b.n	8004bac <I2C_RequestMemoryRead+0x44>
 8004c68:	00010002 	.word	0x00010002

08004c6c <HAL_I2C_Init>:
{
 8004c6c:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004c6e:	4604      	mov	r4, r0
 8004c70:	b908      	cbnz	r0, 8004c76 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8004c72:	2001      	movs	r0, #1
}
 8004c74:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004c76:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004c7a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004c7e:	b91b      	cbnz	r3, 8004c88 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8004c80:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8004c84:	f7fc ff58 	bl	8001b38 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004c88:	2324      	movs	r3, #36	; 0x24
 8004c8a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004c8e:	6823      	ldr	r3, [r4, #0]
 8004c90:	681a      	ldr	r2, [r3, #0]
 8004c92:	f022 0201 	bic.w	r2, r2, #1
 8004c96:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004c98:	681a      	ldr	r2, [r3, #0]
 8004c9a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004c9e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004ca0:	681a      	ldr	r2, [r3, #0]
 8004ca2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004ca6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004ca8:	f001 f814 	bl	8005cd4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004cac:	4b3f      	ldr	r3, [pc, #252]	; (8004dac <HAL_I2C_Init+0x140>)
 8004cae:	6865      	ldr	r5, [r4, #4]
 8004cb0:	429d      	cmp	r5, r3
 8004cb2:	bf94      	ite	ls
 8004cb4:	4b3e      	ldrls	r3, [pc, #248]	; (8004db0 <HAL_I2C_Init+0x144>)
 8004cb6:	4b3f      	ldrhi	r3, [pc, #252]	; (8004db4 <HAL_I2C_Init+0x148>)
 8004cb8:	4298      	cmp	r0, r3
 8004cba:	bf8c      	ite	hi
 8004cbc:	2300      	movhi	r3, #0
 8004cbe:	2301      	movls	r3, #1
 8004cc0:	2b00      	cmp	r3, #0
 8004cc2:	d1d6      	bne.n	8004c72 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004cc4:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004cc6:	4e39      	ldr	r6, [pc, #228]	; (8004dac <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004cc8:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004cca:	493b      	ldr	r1, [pc, #236]	; (8004db8 <HAL_I2C_Init+0x14c>)
 8004ccc:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004cd0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004cd4:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004cd6:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004cd8:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004cda:	bf88      	it	hi
 8004cdc:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8004ce0:	6a13      	ldr	r3, [r2, #32]
 8004ce2:	bf88      	it	hi
 8004ce4:	4371      	mulhi	r1, r6
 8004ce6:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004cea:	bf84      	itt	hi
 8004cec:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8004cf0:	fbb1 f1f6 	udivhi	r1, r1, r6
 8004cf4:	3101      	adds	r1, #1
 8004cf6:	4319      	orrs	r1, r3
 8004cf8:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004cfa:	69d1      	ldr	r1, [r2, #28]
 8004cfc:	1e43      	subs	r3, r0, #1
 8004cfe:	482b      	ldr	r0, [pc, #172]	; (8004dac <HAL_I2C_Init+0x140>)
 8004d00:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8004d04:	4285      	cmp	r5, r0
 8004d06:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004d0a:	d832      	bhi.n	8004d72 <HAL_I2C_Init+0x106>
 8004d0c:	006d      	lsls	r5, r5, #1
 8004d0e:	f640 70fc 	movw	r0, #4092	; 0xffc
 8004d12:	fbb3 f3f5 	udiv	r3, r3, r5
 8004d16:	3301      	adds	r3, #1
 8004d18:	4203      	tst	r3, r0
 8004d1a:	d042      	beq.n	8004da2 <HAL_I2C_Init+0x136>
 8004d1c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004d20:	430b      	orrs	r3, r1
 8004d22:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004d24:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004d28:	6811      	ldr	r1, [r2, #0]
 8004d2a:	4303      	orrs	r3, r0
 8004d2c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8004d30:	430b      	orrs	r3, r1
 8004d32:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004d34:	6891      	ldr	r1, [r2, #8]
 8004d36:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004d3a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8004d3e:	4303      	orrs	r3, r0
 8004d40:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004d44:	430b      	orrs	r3, r1
 8004d46:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004d48:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004d4c:	68d1      	ldr	r1, [r2, #12]
 8004d4e:	4303      	orrs	r3, r0
 8004d50:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004d54:	430b      	orrs	r3, r1
 8004d56:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004d58:	6813      	ldr	r3, [r2, #0]
 8004d5a:	f043 0301 	orr.w	r3, r3, #1
 8004d5e:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004d60:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004d62:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004d64:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004d66:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004d6a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004d6c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8004d70:	e780      	b.n	8004c74 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004d72:	68a0      	ldr	r0, [r4, #8]
 8004d74:	b950      	cbnz	r0, 8004d8c <HAL_I2C_Init+0x120>
 8004d76:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004d7a:	fbb3 f3f5 	udiv	r3, r3, r5
 8004d7e:	3301      	adds	r3, #1
 8004d80:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004d84:	b17b      	cbz	r3, 8004da6 <HAL_I2C_Init+0x13a>
 8004d86:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004d8a:	e7c9      	b.n	8004d20 <HAL_I2C_Init+0xb4>
 8004d8c:	2019      	movs	r0, #25
 8004d8e:	4345      	muls	r5, r0
 8004d90:	fbb3 f3f5 	udiv	r3, r3, r5
 8004d94:	3301      	adds	r3, #1
 8004d96:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004d9a:	b123      	cbz	r3, 8004da6 <HAL_I2C_Init+0x13a>
 8004d9c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004da0:	e7be      	b.n	8004d20 <HAL_I2C_Init+0xb4>
 8004da2:	2304      	movs	r3, #4
 8004da4:	e7bc      	b.n	8004d20 <HAL_I2C_Init+0xb4>
 8004da6:	2301      	movs	r3, #1
 8004da8:	e7ba      	b.n	8004d20 <HAL_I2C_Init+0xb4>
 8004daa:	bf00      	nop
 8004dac:	000186a0 	.word	0x000186a0
 8004db0:	001e847f 	.word	0x001e847f
 8004db4:	003d08ff 	.word	0x003d08ff
 8004db8:	000f4240 	.word	0x000f4240

08004dbc <HAL_I2C_DeInit>:
{
 8004dbc:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004dbe:	4604      	mov	r4, r0
 8004dc0:	b198      	cbz	r0, 8004dea <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8004dc2:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004dc4:	2324      	movs	r3, #36	; 0x24
 8004dc6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004dca:	6813      	ldr	r3, [r2, #0]
 8004dcc:	f023 0301 	bic.w	r3, r3, #1
 8004dd0:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8004dd2:	f7fc fef5 	bl	8001bc0 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8004dd6:	2000      	movs	r0, #0
 8004dd8:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 8004dda:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8004dde:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004de2:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8004de4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8004de8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004dea:	2001      	movs	r0, #1
 8004dec:	e7fc      	b.n	8004de8 <HAL_I2C_DeInit+0x2c>
	...

08004df0 <HAL_I2C_Mem_Write>:
{
 8004df0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004df4:	4604      	mov	r4, r0
 8004df6:	4699      	mov	r9, r3
 8004df8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8004dfa:	460f      	mov	r7, r1
 8004dfc:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004dfe:	f7fe fd5b 	bl	80038b8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e02:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004e06:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004e08:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e0a:	d003      	beq.n	8004e14 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8004e0c:	2002      	movs	r0, #2
}
 8004e0e:	b003      	add	sp, #12
 8004e10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004e14:	9000      	str	r0, [sp, #0]
 8004e16:	493c      	ldr	r1, [pc, #240]	; (8004f08 <HAL_I2C_Mem_Write+0x118>)
 8004e18:	2319      	movs	r3, #25
 8004e1a:	2201      	movs	r2, #1
 8004e1c:	4620      	mov	r0, r4
 8004e1e:	f7ff fd63 	bl	80048e8 <I2C_WaitOnFlagUntilTimeout>
 8004e22:	2800      	cmp	r0, #0
 8004e24:	d1f2      	bne.n	8004e0c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004e26:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004e2a:	2b01      	cmp	r3, #1
 8004e2c:	d0ee      	beq.n	8004e0c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004e2e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004e30:	2301      	movs	r3, #1
 8004e32:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004e36:	6803      	ldr	r3, [r0, #0]
 8004e38:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004e3a:	bf5e      	ittt	pl
 8004e3c:	6803      	ldrpl	r3, [r0, #0]
 8004e3e:	f043 0301 	orrpl.w	r3, r3, #1
 8004e42:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004e44:	6803      	ldr	r3, [r0, #0]
 8004e46:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004e4a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004e4c:	2321      	movs	r3, #33	; 0x21
 8004e4e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004e52:	2340      	movs	r3, #64	; 0x40
 8004e54:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e58:	2300      	movs	r3, #0
 8004e5a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004e5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004e5e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004e60:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8004e64:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004e66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004e68:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004e6a:	4b28      	ldr	r3, [pc, #160]	; (8004f0c <HAL_I2C_Mem_Write+0x11c>)
 8004e6c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004e6e:	e9cd 6500 	strd	r6, r5, [sp]
 8004e72:	464b      	mov	r3, r9
 8004e74:	4642      	mov	r2, r8
 8004e76:	4639      	mov	r1, r7
 8004e78:	4620      	mov	r0, r4
 8004e7a:	f7ff fe1d 	bl	8004ab8 <I2C_RequestMemoryWrite>
 8004e7e:	2800      	cmp	r0, #0
 8004e80:	d02a      	beq.n	8004ed8 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004e82:	2001      	movs	r0, #1
 8004e84:	e7c3      	b.n	8004e0e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004e86:	f7ff fdf1 	bl	8004a6c <I2C_WaitOnTXEFlagUntilTimeout>
 8004e8a:	b140      	cbz	r0, 8004e9e <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004e8c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004e8e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004e90:	bf01      	itttt	eq
 8004e92:	6822      	ldreq	r2, [r4, #0]
 8004e94:	6813      	ldreq	r3, [r2, #0]
 8004e96:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004e9a:	6013      	streq	r3, [r2, #0]
 8004e9c:	e7f1      	b.n	8004e82 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004e9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004ea0:	6827      	ldr	r7, [r4, #0]
 8004ea2:	461a      	mov	r2, r3
 8004ea4:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004ea8:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004eaa:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8004eac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8004eae:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8004eb0:	3a01      	subs	r2, #1
 8004eb2:	b292      	uxth	r2, r2
 8004eb4:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004eb6:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004eb8:	1e48      	subs	r0, r1, #1
 8004eba:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004ebc:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004ebe:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004ec0:	d50a      	bpl.n	8004ed8 <HAL_I2C_Mem_Write+0xe8>
 8004ec2:	b148      	cbz	r0, 8004ed8 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004ec4:	785a      	ldrb	r2, [r3, #1]
 8004ec6:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004ec8:	3302      	adds	r3, #2
 8004eca:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8004ecc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004ece:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004ed0:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004ed2:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004ed4:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004ed6:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004ed8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004eda:	462a      	mov	r2, r5
 8004edc:	4631      	mov	r1, r6
 8004ede:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004ee0:	2b00      	cmp	r3, #0
 8004ee2:	d1d0      	bne.n	8004e86 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004ee4:	f7ff fd9c 	bl	8004a20 <I2C_WaitOnBTFFlagUntilTimeout>
 8004ee8:	2800      	cmp	r0, #0
 8004eea:	d1cf      	bne.n	8004e8c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004eec:	6822      	ldr	r2, [r4, #0]
 8004eee:	6813      	ldr	r3, [r2, #0]
 8004ef0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004ef4:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004ef6:	2320      	movs	r3, #32
 8004ef8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004efc:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004f00:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8004f04:	e783      	b.n	8004e0e <HAL_I2C_Mem_Write+0x1e>
 8004f06:	bf00      	nop
 8004f08:	00100002 	.word	0x00100002
 8004f0c:	ffff0000 	.word	0xffff0000

08004f10 <HAL_I2C_Mem_Read>:
{
 8004f10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004f14:	4604      	mov	r4, r0
 8004f16:	b087      	sub	sp, #28
 8004f18:	4699      	mov	r9, r3
 8004f1a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8004f1c:	460d      	mov	r5, r1
 8004f1e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004f20:	f7fe fcca 	bl	80038b8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f24:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004f28:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004f2a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f2c:	d004      	beq.n	8004f38 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8004f2e:	2502      	movs	r5, #2
}
 8004f30:	4628      	mov	r0, r5
 8004f32:	b007      	add	sp, #28
 8004f34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004f38:	9000      	str	r0, [sp, #0]
 8004f3a:	4976      	ldr	r1, [pc, #472]	; (8005114 <HAL_I2C_Mem_Read+0x204>)
 8004f3c:	2319      	movs	r3, #25
 8004f3e:	2201      	movs	r2, #1
 8004f40:	4620      	mov	r0, r4
 8004f42:	f7ff fcd1 	bl	80048e8 <I2C_WaitOnFlagUntilTimeout>
 8004f46:	2800      	cmp	r0, #0
 8004f48:	d1f1      	bne.n	8004f2e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8004f4a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004f4e:	2b01      	cmp	r3, #1
 8004f50:	d0ed      	beq.n	8004f2e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004f52:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004f54:	2301      	movs	r3, #1
 8004f56:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004f5a:	6803      	ldr	r3, [r0, #0]
 8004f5c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004f5e:	bf5e      	ittt	pl
 8004f60:	6803      	ldrpl	r3, [r0, #0]
 8004f62:	f043 0301 	orrpl.w	r3, r3, #1
 8004f66:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004f68:	6803      	ldr	r3, [r0, #0]
 8004f6a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004f6e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004f70:	2322      	movs	r3, #34	; 0x22
 8004f72:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004f76:	2340      	movs	r3, #64	; 0x40
 8004f78:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004f7c:	2300      	movs	r3, #0
 8004f7e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004f80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004f82:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004f84:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8004f88:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004f8a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004f8c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004f8e:	4b62      	ldr	r3, [pc, #392]	; (8005118 <HAL_I2C_Mem_Read+0x208>)
 8004f90:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004f92:	4629      	mov	r1, r5
 8004f94:	e9cd 7600 	strd	r7, r6, [sp]
 8004f98:	464b      	mov	r3, r9
 8004f9a:	4642      	mov	r2, r8
 8004f9c:	4620      	mov	r0, r4
 8004f9e:	f7ff fde3 	bl	8004b68 <I2C_RequestMemoryRead>
 8004fa2:	4605      	mov	r5, r0
 8004fa4:	b108      	cbz	r0, 8004faa <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004fa6:	2501      	movs	r5, #1
 8004fa8:	e7c2      	b.n	8004f30 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8004faa:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004fac:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8004fae:	b9b2      	cbnz	r2, 8004fde <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004fb0:	9002      	str	r0, [sp, #8]
 8004fb2:	695a      	ldr	r2, [r3, #20]
 8004fb4:	9202      	str	r2, [sp, #8]
 8004fb6:	699a      	ldr	r2, [r3, #24]
 8004fb8:	9202      	str	r2, [sp, #8]
 8004fba:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004fbc:	681a      	ldr	r2, [r3, #0]
 8004fbe:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004fc2:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004fc4:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800511c <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8004fc8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004fca:	2b00      	cmp	r3, #0
 8004fcc:	d12c      	bne.n	8005028 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8004fce:	2220      	movs	r2, #32
 8004fd0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004fd4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004fd8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8004fdc:	e7a8      	b.n	8004f30 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004fde:	2a01      	cmp	r2, #1
 8004fe0:	d10a      	bne.n	8004ff8 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004fe2:	681a      	ldr	r2, [r3, #0]
 8004fe4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004fe8:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004fea:	9003      	str	r0, [sp, #12]
 8004fec:	695a      	ldr	r2, [r3, #20]
 8004fee:	9203      	str	r2, [sp, #12]
 8004ff0:	699a      	ldr	r2, [r3, #24]
 8004ff2:	9203      	str	r2, [sp, #12]
 8004ff4:	9a03      	ldr	r2, [sp, #12]
 8004ff6:	e7e1      	b.n	8004fbc <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8004ff8:	2a02      	cmp	r2, #2
 8004ffa:	d10e      	bne.n	800501a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004ffc:	681a      	ldr	r2, [r3, #0]
 8004ffe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005002:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005004:	681a      	ldr	r2, [r3, #0]
 8005006:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800500a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800500c:	9004      	str	r0, [sp, #16]
 800500e:	695a      	ldr	r2, [r3, #20]
 8005010:	9204      	str	r2, [sp, #16]
 8005012:	699b      	ldr	r3, [r3, #24]
 8005014:	9304      	str	r3, [sp, #16]
 8005016:	9b04      	ldr	r3, [sp, #16]
 8005018:	e7d4      	b.n	8004fc4 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800501a:	9005      	str	r0, [sp, #20]
 800501c:	695a      	ldr	r2, [r3, #20]
 800501e:	9205      	str	r2, [sp, #20]
 8005020:	699b      	ldr	r3, [r3, #24]
 8005022:	9305      	str	r3, [sp, #20]
 8005024:	9b05      	ldr	r3, [sp, #20]
 8005026:	e7cd      	b.n	8004fc4 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005028:	2b03      	cmp	r3, #3
 800502a:	d856      	bhi.n	80050da <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800502c:	2b01      	cmp	r3, #1
 800502e:	d115      	bne.n	800505c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005030:	4632      	mov	r2, r6
 8005032:	4639      	mov	r1, r7
 8005034:	4620      	mov	r0, r4
 8005036:	f7ff fcc4 	bl	80049c2 <I2C_WaitOnRXNEFlagUntilTimeout>
 800503a:	2800      	cmp	r0, #0
 800503c:	d1b3      	bne.n	8004fa6 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800503e:	6823      	ldr	r3, [r4, #0]
 8005040:	691a      	ldr	r2, [r3, #16]
 8005042:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005044:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005046:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005048:	3301      	adds	r3, #1
 800504a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800504c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800504e:	3b01      	subs	r3, #1
 8005050:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005052:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005054:	3b01      	subs	r3, #1
 8005056:	b29b      	uxth	r3, r3
 8005058:	8563      	strh	r3, [r4, #42]	; 0x2a
 800505a:	e7b5      	b.n	8004fc8 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800505c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800505e:	9600      	str	r6, [sp, #0]
 8005060:	463b      	mov	r3, r7
 8005062:	f04f 0200 	mov.w	r2, #0
 8005066:	4641      	mov	r1, r8
 8005068:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800506a:	d119      	bne.n	80050a0 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800506c:	f7ff fc3c 	bl	80048e8 <I2C_WaitOnFlagUntilTimeout>
 8005070:	2800      	cmp	r0, #0
 8005072:	d198      	bne.n	8004fa6 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005074:	6823      	ldr	r3, [r4, #0]
 8005076:	681a      	ldr	r2, [r3, #0]
 8005078:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800507c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800507e:	691a      	ldr	r2, [r3, #16]
 8005080:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005082:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005084:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005086:	1c53      	adds	r3, r2, #1
 8005088:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800508a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800508c:	3b01      	subs	r3, #1
 800508e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005090:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005092:	3b01      	subs	r3, #1
 8005094:	b29b      	uxth	r3, r3
 8005096:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005098:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800509a:	691b      	ldr	r3, [r3, #16]
 800509c:	7053      	strb	r3, [r2, #1]
 800509e:	e7d2      	b.n	8005046 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80050a0:	f7ff fc22 	bl	80048e8 <I2C_WaitOnFlagUntilTimeout>
 80050a4:	2800      	cmp	r0, #0
 80050a6:	f47f af7e 	bne.w	8004fa6 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80050aa:	6823      	ldr	r3, [r4, #0]
 80050ac:	681a      	ldr	r2, [r3, #0]
 80050ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80050b2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80050b4:	691a      	ldr	r2, [r3, #16]
 80050b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80050b8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80050ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80050bc:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 80050be:	3301      	adds	r3, #1
 80050c0:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80050c2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80050c4:	3b01      	subs	r3, #1
 80050c6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80050c8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80050ca:	3b01      	subs	r3, #1
 80050cc:	b29b      	uxth	r3, r3
 80050ce:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80050d0:	4602      	mov	r2, r0
 80050d2:	463b      	mov	r3, r7
 80050d4:	4641      	mov	r1, r8
 80050d6:	4620      	mov	r0, r4
 80050d8:	e7c8      	b.n	800506c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80050da:	4632      	mov	r2, r6
 80050dc:	4639      	mov	r1, r7
 80050de:	4620      	mov	r0, r4
 80050e0:	f7ff fc6f 	bl	80049c2 <I2C_WaitOnRXNEFlagUntilTimeout>
 80050e4:	2800      	cmp	r0, #0
 80050e6:	f47f af5e 	bne.w	8004fa6 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80050ea:	6823      	ldr	r3, [r4, #0]
 80050ec:	691a      	ldr	r2, [r3, #16]
 80050ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80050f0:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 80050f2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80050f4:	1c53      	adds	r3, r2, #1
 80050f6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 80050f8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80050fa:	3b01      	subs	r3, #1
 80050fc:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80050fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005100:	3b01      	subs	r3, #1
 8005102:	b29b      	uxth	r3, r3
 8005104:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005106:	6823      	ldr	r3, [r4, #0]
 8005108:	6959      	ldr	r1, [r3, #20]
 800510a:	0749      	lsls	r1, r1, #29
 800510c:	f57f af5c 	bpl.w	8004fc8 <HAL_I2C_Mem_Read+0xb8>
 8005110:	e7c3      	b.n	800509a <HAL_I2C_Mem_Read+0x18a>
 8005112:	bf00      	nop
 8005114:	00100002 	.word	0x00100002
 8005118:	ffff0000 	.word	0xffff0000
 800511c:	00010004 	.word	0x00010004

08005120 <HAL_I2C_GetState>:
  return hi2c->State;
 8005120:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8005124:	4770      	bx	lr

08005126 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005126:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005128:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800512c:	01d2      	lsls	r2, r2, #7
 800512e:	3284      	adds	r2, #132	; 0x84
 8005130:	1883      	adds	r3, r0, r2
{
 8005132:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005136:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005138:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800513a:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800513c:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005140:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005144:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005146:	68c5      	ldr	r5, [r0, #12]
 8005148:	f10c 0701 	add.w	r7, ip, #1
 800514c:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005150:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005154:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005156:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005158:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800515c:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800515e:	68c5      	ldr	r5, [r0, #12]
 8005160:	68ce      	ldr	r6, [r1, #12]
 8005162:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8005166:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005168:	689d      	ldr	r5, [r3, #8]
 800516a:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800516e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005170:	68c7      	ldr	r7, [r0, #12]
 8005172:	688d      	ldr	r5, [r1, #8]
 8005174:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005178:	3501      	adds	r5, #1
 800517a:	443d      	add	r5, r7
 800517c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005180:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005182:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005184:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005186:	f025 0507 	bic.w	r5, r5, #7
 800518a:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800518c:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005190:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005192:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005194:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005198:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800519c:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80051a0:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80051a4:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80051a8:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80051ac:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80051b0:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80051b2:	695d      	ldr	r5, [r3, #20]
 80051b4:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80051b8:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80051ba:	694d      	ldr	r5, [r1, #20]
 80051bc:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80051be:	69dd      	ldr	r5, [r3, #28]
 80051c0:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 80051c4:	f025 0507 	bic.w	r5, r5, #7
 80051c8:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80051ca:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80051ce:	433d      	orrs	r5, r7
 80051d0:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80051d2:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80051d4:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80051d6:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80051da:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80051dc:	b31e      	cbz	r6, 8005226 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80051de:	2e01      	cmp	r6, #1
 80051e0:	d023      	beq.n	800522a <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80051e2:	1eb5      	subs	r5, r6, #2
 80051e4:	2d02      	cmp	r5, #2
 80051e6:	d922      	bls.n	800522e <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80051e8:	2e07      	cmp	r6, #7
 80051ea:	bf0c      	ite	eq
 80051ec:	2502      	moveq	r5, #2
 80051ee:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80051f0:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 80051f2:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 80051f6:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80051f8:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80051fc:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80051fe:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005200:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005202:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005204:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005206:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800520a:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800520c:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800520e:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8005212:	f024 0407 	bic.w	r4, r4, #7
 8005216:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005218:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800521a:	5883      	ldr	r3, [r0, r2]
 800521c:	f043 0301 	orr.w	r3, r3, #1
 8005220:	5083      	str	r3, [r0, r2]
}
 8005222:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005226:	2504      	movs	r5, #4
 8005228:	e7e2      	b.n	80051f0 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800522a:	2503      	movs	r5, #3
 800522c:	e7e0      	b.n	80051f0 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800522e:	2502      	movs	r5, #2
 8005230:	e7de      	b.n	80051f0 <LTDC_SetConfig+0xca>
	...

08005234 <HAL_LTDC_Init>:
{
 8005234:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005236:	4604      	mov	r4, r0
 8005238:	2800      	cmp	r0, #0
 800523a:	d063      	beq.n	8005304 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800523c:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005240:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005244:	b91b      	cbnz	r3, 800524e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005246:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800524a:	f7fc fcd7 	bl	8001bfc <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800524e:	2302      	movs	r3, #2
 8005250:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005254:	6823      	ldr	r3, [r4, #0]
 8005256:	699a      	ldr	r2, [r3, #24]
 8005258:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800525c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800525e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005262:	4302      	orrs	r2, r0
 8005264:	68e0      	ldr	r0, [r4, #12]
 8005266:	6999      	ldr	r1, [r3, #24]
 8005268:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800526a:	6920      	ldr	r0, [r4, #16]
 800526c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800526e:	430a      	orrs	r2, r1
 8005270:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005272:	689a      	ldr	r2, [r3, #8]
 8005274:	4924      	ldr	r1, [pc, #144]	; (8005308 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005276:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005278:	400a      	ands	r2, r1
 800527a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800527c:	689a      	ldr	r2, [r3, #8]
 800527e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005282:	69a0      	ldr	r0, [r4, #24]
 8005284:	4302      	orrs	r2, r0
 8005286:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005288:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800528a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800528c:	400a      	ands	r2, r1
 800528e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005290:	68da      	ldr	r2, [r3, #12]
 8005292:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005296:	6a20      	ldr	r0, [r4, #32]
 8005298:	4302      	orrs	r2, r0
 800529a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800529c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800529e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80052a0:	400a      	ands	r2, r1
 80052a2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80052a4:	691a      	ldr	r2, [r3, #16]
 80052a6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80052aa:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80052ac:	4302      	orrs	r2, r0
 80052ae:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80052b0:	695a      	ldr	r2, [r3, #20]
 80052b2:	4011      	ands	r1, r2
 80052b4:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80052b6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80052b8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80052ba:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80052be:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80052c0:	430a      	orrs	r2, r1
 80052c2:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80052c4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80052c6:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80052ca:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80052ce:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80052d2:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80052d4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80052d6:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80052da:	430a      	orrs	r2, r1
 80052dc:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80052e0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80052e4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80052e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80052e8:	f042 0206 	orr.w	r2, r2, #6
 80052ec:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80052ee:	699a      	ldr	r2, [r3, #24]
 80052f0:	f042 0201 	orr.w	r2, r2, #1
 80052f4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80052f6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80052f8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80052fa:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80052fe:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005302:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005304:	2001      	movs	r0, #1
 8005306:	e7fc      	b.n	8005302 <HAL_LTDC_Init+0xce>
 8005308:	f000f800 	.word	0xf000f800

0800530c <HAL_LTDC_ErrorCallback>:
 800530c:	4770      	bx	lr

0800530e <HAL_LTDC_LineEventCallback>:
 800530e:	4770      	bx	lr

08005310 <HAL_LTDC_ReloadEventCallback>:
 8005310:	4770      	bx	lr

08005312 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005312:	6803      	ldr	r3, [r0, #0]
{
 8005314:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005316:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005318:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800531a:	0772      	lsls	r2, r6, #29
{
 800531c:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800531e:	d514      	bpl.n	800534a <HAL_LTDC_IRQHandler+0x38>
 8005320:	0769      	lsls	r1, r5, #29
 8005322:	d512      	bpl.n	800534a <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005324:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005326:	f022 0204 	bic.w	r2, r2, #4
 800532a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800532c:	2204      	movs	r2, #4
 800532e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005330:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005334:	f043 0301 	orr.w	r3, r3, #1
 8005338:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800533c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800533e:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005342:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005346:	f7ff ffe1 	bl	800530c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800534a:	07b2      	lsls	r2, r6, #30
 800534c:	d516      	bpl.n	800537c <HAL_LTDC_IRQHandler+0x6a>
 800534e:	07ab      	lsls	r3, r5, #30
 8005350:	d514      	bpl.n	800537c <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005352:	6823      	ldr	r3, [r4, #0]
 8005354:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005356:	f022 0202 	bic.w	r2, r2, #2
 800535a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800535c:	2202      	movs	r2, #2
 800535e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005360:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005364:	4313      	orrs	r3, r2
 8005366:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800536a:	2304      	movs	r3, #4
 800536c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005370:	2300      	movs	r3, #0
 8005372:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005376:	4620      	mov	r0, r4
 8005378:	f7ff ffc8 	bl	800530c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800537c:	07f0      	lsls	r0, r6, #31
 800537e:	d510      	bpl.n	80053a2 <HAL_LTDC_IRQHandler+0x90>
 8005380:	07e9      	lsls	r1, r5, #31
 8005382:	d50e      	bpl.n	80053a2 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005384:	6823      	ldr	r3, [r4, #0]
 8005386:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005388:	f022 0201 	bic.w	r2, r2, #1
 800538c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800538e:	2201      	movs	r2, #1
 8005390:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005392:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005394:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005398:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800539c:	4620      	mov	r0, r4
 800539e:	f7ff ffb6 	bl	800530e <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80053a2:	0732      	lsls	r2, r6, #28
 80053a4:	d511      	bpl.n	80053ca <HAL_LTDC_IRQHandler+0xb8>
 80053a6:	072b      	lsls	r3, r5, #28
 80053a8:	d50f      	bpl.n	80053ca <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80053aa:	6823      	ldr	r3, [r4, #0]
 80053ac:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80053ae:	f022 0208 	bic.w	r2, r2, #8
 80053b2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80053b4:	2208      	movs	r2, #8
 80053b6:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80053b8:	2301      	movs	r3, #1
 80053ba:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80053be:	2300      	movs	r3, #0
 80053c0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80053c4:	4620      	mov	r0, r4
 80053c6:	f7ff ffa3 	bl	8005310 <HAL_LTDC_ReloadEventCallback>
}
 80053ca:	bd70      	pop	{r4, r5, r6, pc}

080053cc <HAL_LTDC_ConfigLayer>:
{
 80053cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80053d0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80053d4:	2b01      	cmp	r3, #1
{
 80053d6:	4606      	mov	r6, r0
 80053d8:	460f      	mov	r7, r1
 80053da:	4694      	mov	ip, r2
 80053dc:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80053e0:	d01f      	beq.n	8005422 <HAL_LTDC_ConfigLayer+0x56>
 80053e2:	f04f 0801 	mov.w	r8, #1
 80053e6:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80053ea:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80053ee:	2434      	movs	r4, #52	; 0x34
 80053f0:	460d      	mov	r5, r1
 80053f2:	fb04 6402 	mla	r4, r4, r2, r6
 80053f6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80053f8:	3438      	adds	r4, #56	; 0x38
 80053fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80053fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80053fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005400:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005402:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005404:	682b      	ldr	r3, [r5, #0]
 8005406:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005408:	4630      	mov	r0, r6
 800540a:	4662      	mov	r2, ip
 800540c:	4639      	mov	r1, r7
 800540e:	f7ff fe8a 	bl	8005126 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005412:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005414:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005416:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800541a:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800541e:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005422:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005428 <HAL_LTDC_SetPitch>:
{
 8005428:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800542a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800542e:	2b01      	cmp	r3, #1
 8005430:	f04f 0302 	mov.w	r3, #2
 8005434:	d02c      	beq.n	8005490 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005436:	2434      	movs	r4, #52	; 0x34
 8005438:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800543c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005440:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005442:	b33c      	cbz	r4, 8005494 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005444:	2c01      	cmp	r4, #1
 8005446:	d027      	beq.n	8005498 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005448:	1ea5      	subs	r5, r4, #2
 800544a:	429d      	cmp	r5, r3
 800544c:	d902      	bls.n	8005454 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800544e:	2c07      	cmp	r4, #7
 8005450:	bf18      	it	ne
 8005452:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005454:	6804      	ldr	r4, [r0, #0]
 8005456:	01d2      	lsls	r2, r2, #7
 8005458:	3284      	adds	r2, #132	; 0x84
 800545a:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 800545c:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800545e:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8005460:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8005464:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8005468:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800546a:	4c0c      	ldr	r4, [pc, #48]	; (800549c <HAL_LTDC_SetPitch+0x74>)
 800546c:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800546e:	f045 0501 	orr.w	r5, r5, #1
 8005472:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8005474:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 8005476:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800547a:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800547c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800547e:	f043 0301 	orr.w	r3, r3, #1
 8005482:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8005484:	2301      	movs	r3, #1
 8005486:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800548a:	2300      	movs	r3, #0
 800548c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8005490:	4618      	mov	r0, r3
 8005492:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8005494:	2304      	movs	r3, #4
 8005496:	e7dd      	b.n	8005454 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8005498:	2303      	movs	r3, #3
 800549a:	e7db      	b.n	8005454 <HAL_LTDC_SetPitch+0x2c>
 800549c:	40016800 	.word	0x40016800

080054a0 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80054a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 80054a2:	2300      	movs	r3, #0
 80054a4:	9301      	str	r3, [sp, #4]
 80054a6:	4b18      	ldr	r3, [pc, #96]	; (8005508 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80054a8:	4d18      	ldr	r5, [pc, #96]	; (800550c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80054aa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80054ac:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80054b0:	641a      	str	r2, [r3, #64]	; 0x40
 80054b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054b4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80054b8:	9301      	str	r3, [sp, #4]
 80054ba:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80054bc:	4b14      	ldr	r3, [pc, #80]	; (8005510 <HAL_PWREx_EnableOverDrive+0x70>)
 80054be:	2201      	movs	r2, #1
 80054c0:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 80054c2:	f7fe f9f9 	bl	80038b8 <HAL_GetTick>
 80054c6:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80054c8:	686b      	ldr	r3, [r5, #4]
 80054ca:	03da      	lsls	r2, r3, #15
 80054cc:	d50b      	bpl.n	80054e6 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80054ce:	4b10      	ldr	r3, [pc, #64]	; (8005510 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80054d0:	4d0e      	ldr	r5, [pc, #56]	; (800550c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80054d2:	2201      	movs	r2, #1
 80054d4:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 80054d6:	f7fe f9ef 	bl	80038b8 <HAL_GetTick>
 80054da:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80054dc:	686b      	ldr	r3, [r5, #4]
 80054de:	039b      	lsls	r3, r3, #14
 80054e0:	d50a      	bpl.n	80054f8 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80054e2:	2000      	movs	r0, #0
 80054e4:	e006      	b.n	80054f4 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80054e6:	f7fe f9e7 	bl	80038b8 <HAL_GetTick>
 80054ea:	1b00      	subs	r0, r0, r4
 80054ec:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80054f0:	d9ea      	bls.n	80054c8 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 80054f2:	2003      	movs	r0, #3
}
 80054f4:	b003      	add	sp, #12
 80054f6:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80054f8:	f7fe f9de 	bl	80038b8 <HAL_GetTick>
 80054fc:	1b00      	subs	r0, r0, r4
 80054fe:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005502:	d9eb      	bls.n	80054dc <HAL_PWREx_EnableOverDrive+0x3c>
 8005504:	e7f5      	b.n	80054f2 <HAL_PWREx_EnableOverDrive+0x52>
 8005506:	bf00      	nop
 8005508:	40023800 	.word	0x40023800
 800550c:	40007000 	.word	0x40007000
 8005510:	420e0000 	.word	0x420e0000

08005514 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8005514:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005518:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800551a:	b13e      	cbz	r6, 800552c <QSPI_Config+0x18>
 800551c:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005520:	bf1f      	itttt	ne
 8005522:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8005524:	6804      	ldrne	r4, [r0, #0]
 8005526:	f103 33ff 	addne.w	r3, r3, #4294967295
 800552a:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800552c:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005530:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005534:	f1b9 0f00 	cmp.w	r9, #0
 8005538:	d04f      	beq.n	80055da <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800553a:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800553c:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800553e:	f8d1 a000 	ldr.w	sl, [r1]
 8005542:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 8005546:	ea46 0909 	orr.w	r9, r6, r9
 800554a:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 800554e:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 8005552:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005556:	b335      	cbz	r5, 80055a6 <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005558:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800555a:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800555c:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800555e:	ea49 0505 	orr.w	r5, r9, r5
 8005562:	b19f      	cbz	r7, 800558c <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005564:	ea4a 0307 	orr.w	r3, sl, r7
 8005568:	4323      	orrs	r3, r4
 800556a:	ea43 0308 	orr.w	r3, r3, r8
 800556e:	68cc      	ldr	r4, [r1, #12]
 8005570:	ea43 030e 	orr.w	r3, r3, lr
 8005574:	4333      	orrs	r3, r6
 8005576:	4323      	orrs	r3, r4
 8005578:	ea43 030c 	orr.w	r3, r3, ip
 800557c:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800557e:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005582:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005584:	d00d      	beq.n	80055a2 <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005586:	684b      	ldr	r3, [r1, #4]
 8005588:	6183      	str	r3, [r0, #24]
 800558a:	e00a      	b.n	80055a2 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800558c:	ea4a 0304 	orr.w	r3, sl, r4
 8005590:	ea43 0308 	orr.w	r3, r3, r8
 8005594:	ea43 030e 	orr.w	r3, r3, lr
 8005598:	4333      	orrs	r3, r6
 800559a:	ea43 030c 	orr.w	r3, r3, ip
 800559e:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80055a0:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 80055a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80055a6:	b16f      	cbz	r7, 80055c4 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80055a8:	ea4a 0307 	orr.w	r3, sl, r7
 80055ac:	4323      	orrs	r3, r4
 80055ae:	ea43 0308 	orr.w	r3, r3, r8
 80055b2:	68cc      	ldr	r4, [r1, #12]
 80055b4:	ea43 030e 	orr.w	r3, r3, lr
 80055b8:	4323      	orrs	r3, r4
 80055ba:	ea43 030c 	orr.w	r3, r3, ip
 80055be:	ea43 0309 	orr.w	r3, r3, r9
 80055c2:	e7dc      	b.n	800557e <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80055c4:	ea4a 0304 	orr.w	r3, sl, r4
 80055c8:	ea43 0308 	orr.w	r3, r3, r8
 80055cc:	ea43 030e 	orr.w	r3, r3, lr
 80055d0:	ea43 030c 	orr.w	r3, r3, ip
 80055d4:	ea43 0309 	orr.w	r3, r3, r9
 80055d8:	e7e2      	b.n	80055a0 <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80055da:	b345      	cbz	r5, 800562e <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80055dc:	6804      	ldr	r4, [r0, #0]
 80055de:	688b      	ldr	r3, [r1, #8]
 80055e0:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80055e2:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80055e6:	694e      	ldr	r6, [r1, #20]
 80055e8:	6908      	ldr	r0, [r1, #16]
 80055ea:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 80055ee:	ea43 0502 	orr.w	r5, r3, r2
 80055f2:	04b6      	lsls	r6, r6, #18
 80055f4:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80055f8:	b187      	cbz	r7, 800561c <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80055fa:	4338      	orrs	r0, r7
 80055fc:	ea40 0008 	orr.w	r0, r0, r8
 8005600:	4303      	orrs	r3, r0
 8005602:	68c8      	ldr	r0, [r1, #12]
 8005604:	ea43 030c 	orr.w	r3, r3, ip
 8005608:	4303      	orrs	r3, r0
 800560a:	4333      	orrs	r3, r6
 800560c:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800560e:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005612:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005614:	d0c5      	beq.n	80055a2 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005616:	684b      	ldr	r3, [r1, #4]
 8005618:	61a3      	str	r3, [r4, #24]
 800561a:	e7c2      	b.n	80055a2 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800561c:	ea40 0008 	orr.w	r0, r0, r8
 8005620:	4303      	orrs	r3, r0
 8005622:	ea43 030c 	orr.w	r3, r3, ip
 8005626:	4333      	orrs	r3, r6
 8005628:	432b      	orrs	r3, r5
 800562a:	6163      	str	r3, [r4, #20]
 800562c:	e7b9      	b.n	80055a2 <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800562e:	b17f      	cbz	r7, 8005650 <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005630:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8005632:	6800      	ldr	r0, [r0, #0]
 8005634:	ea46 0307 	orr.w	r3, r6, r7
 8005638:	4313      	orrs	r3, r2
 800563a:	4323      	orrs	r3, r4
 800563c:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800563e:	4323      	orrs	r3, r4
 8005640:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8005642:	4323      	orrs	r3, r4
 8005644:	68cc      	ldr	r4, [r1, #12]
 8005646:	4323      	orrs	r3, r4
 8005648:	694c      	ldr	r4, [r1, #20]
 800564a:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800564e:	e796      	b.n	800557e <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8005650:	2e00      	cmp	r6, #0
 8005652:	d0a6      	beq.n	80055a2 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005654:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005656:	6800      	ldr	r0, [r0, #0]
 8005658:	4333      	orrs	r3, r6
 800565a:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800565c:	431a      	orrs	r2, r3
 800565e:	4332      	orrs	r2, r6
 8005660:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8005662:	694b      	ldr	r3, [r1, #20]
 8005664:	4332      	orrs	r2, r6
 8005666:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800566a:	6142      	str	r2, [r0, #20]
}
 800566c:	e799      	b.n	80055a2 <QSPI_Config+0x8e>

0800566e <QSPI_WaitFlagStateUntilTimeout>:
{
 800566e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005672:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005676:	4604      	mov	r4, r0
 8005678:	460e      	mov	r6, r1
 800567a:	4615      	mov	r5, r2
 800567c:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800567e:	6822      	ldr	r2, [r4, #0]
 8005680:	6893      	ldr	r3, [r2, #8]
 8005682:	4233      	tst	r3, r6
 8005684:	bf14      	ite	ne
 8005686:	2301      	movne	r3, #1
 8005688:	2300      	moveq	r3, #0
 800568a:	42ab      	cmp	r3, r5
 800568c:	d101      	bne.n	8005692 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800568e:	2000      	movs	r0, #0
 8005690:	e012      	b.n	80056b8 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005692:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005696:	d0f3      	beq.n	8005680 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005698:	f7fe f90e 	bl	80038b8 <HAL_GetTick>
 800569c:	1bc0      	subs	r0, r0, r7
 800569e:	4540      	cmp	r0, r8
 80056a0:	d802      	bhi.n	80056a8 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 80056a2:	f1b8 0f00 	cmp.w	r8, #0
 80056a6:	d1ea      	bne.n	800567e <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80056a8:	2304      	movs	r3, #4
 80056aa:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80056ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80056b0:	f043 0301 	orr.w	r3, r3, #1
 80056b4:	6463      	str	r3, [r4, #68]	; 0x44
 80056b6:	2001      	movs	r0, #1
}
 80056b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080056bc <HAL_QSPI_Init>:
{
 80056bc:	b530      	push	{r4, r5, lr}
 80056be:	b085      	sub	sp, #20
 80056c0:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80056c2:	f7fe f8f9 	bl	80038b8 <HAL_GetTick>
 80056c6:	4603      	mov	r3, r0
  if(hqspi == NULL)
 80056c8:	2c00      	cmp	r4, #0
 80056ca:	d047      	beq.n	800575c <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80056cc:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80056d0:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 80056d4:	b94a      	cbnz	r2, 80056ea <HAL_QSPI_Init+0x2e>
 80056d6:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 80056d8:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 80056dc:	4620      	mov	r0, r4
 80056de:	f7fc fabf 	bl	8001c60 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 80056e2:	f241 3288 	movw	r2, #5000	; 0x1388
 80056e6:	9b03      	ldr	r3, [sp, #12]
 80056e8:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80056ea:	6820      	ldr	r0, [r4, #0]
 80056ec:	68a1      	ldr	r1, [r4, #8]
 80056ee:	6802      	ldr	r2, [r0, #0]
 80056f0:	3901      	subs	r1, #1
 80056f2:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 80056f6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80056fa:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80056fc:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80056fe:	9200      	str	r2, [sp, #0]
 8005700:	2120      	movs	r1, #32
 8005702:	2200      	movs	r2, #0
 8005704:	4620      	mov	r0, r4
 8005706:	f7ff ffb2 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800570a:	bb10      	cbnz	r0, 8005752 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800570c:	69e5      	ldr	r5, [r4, #28]
 800570e:	68e3      	ldr	r3, [r4, #12]
 8005710:	6822      	ldr	r2, [r4, #0]
 8005712:	432b      	orrs	r3, r5
 8005714:	6a25      	ldr	r5, [r4, #32]
 8005716:	6811      	ldr	r1, [r2, #0]
 8005718:	432b      	orrs	r3, r5
 800571a:	6865      	ldr	r5, [r4, #4]
 800571c:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8005720:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005724:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8005728:	430b      	orrs	r3, r1
 800572a:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800572c:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005730:	430b      	orrs	r3, r1
 8005732:	6921      	ldr	r1, [r4, #16]
 8005734:	6855      	ldr	r5, [r2, #4]
 8005736:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800573a:	4909      	ldr	r1, [pc, #36]	; (8005760 <HAL_QSPI_Init+0xa4>)
 800573c:	4029      	ands	r1, r5
 800573e:	430b      	orrs	r3, r1
 8005740:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8005742:	6813      	ldr	r3, [r2, #0]
 8005744:	f043 0301 	orr.w	r3, r3, #1
 8005748:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800574a:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800574c:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800574e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005752:	2300      	movs	r3, #0
 8005754:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005758:	b005      	add	sp, #20
 800575a:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800575c:	2001      	movs	r0, #1
 800575e:	e7fb      	b.n	8005758 <HAL_QSPI_Init+0x9c>
 8005760:	ffe0f8fe 	.word	0xffe0f8fe

08005764 <HAL_QSPI_DeInit>:
{
 8005764:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8005766:	4604      	mov	r4, r0
 8005768:	b168      	cbz	r0, 8005786 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800576a:	6802      	ldr	r2, [r0, #0]
 800576c:	6813      	ldr	r3, [r2, #0]
 800576e:	f023 0301 	bic.w	r3, r3, #1
 8005772:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8005774:	f7fc face 	bl	8001d14 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005778:	2000      	movs	r0, #0
 800577a:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800577c:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005780:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8005784:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005786:	2001      	movs	r0, #1
 8005788:	e7fc      	b.n	8005784 <HAL_QSPI_DeInit+0x20>

0800578a <HAL_QSPI_Command>:
{
 800578a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800578e:	4604      	mov	r4, r0
 8005790:	b085      	sub	sp, #20
 8005792:	4617      	mov	r7, r2
 8005794:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8005796:	f7fe f88f 	bl	80038b8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800579a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800579e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80057a0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80057a2:	d034      	beq.n	800580e <HAL_QSPI_Command+0x84>
 80057a4:	2201      	movs	r2, #1
 80057a6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80057aa:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80057ae:	2a01      	cmp	r2, #1
 80057b0:	fa5f f882 	uxtb.w	r8, r2
 80057b4:	f04f 0602 	mov.w	r6, #2
 80057b8:	d127      	bne.n	800580a <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80057ba:	2200      	movs	r2, #0
 80057bc:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80057be:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 80057c0:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80057c4:	9700      	str	r7, [sp, #0]
 80057c6:	2120      	movs	r1, #32
 80057c8:	4620      	mov	r0, r4
 80057ca:	f7ff ff50 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80057ce:	4605      	mov	r5, r0
 80057d0:	b9a0      	cbnz	r0, 80057fc <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80057d2:	4602      	mov	r2, r0
 80057d4:	4649      	mov	r1, r9
 80057d6:	4620      	mov	r0, r4
 80057d8:	f7ff fe9c 	bl	8005514 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 80057dc:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 80057e0:	9b03      	ldr	r3, [sp, #12]
 80057e2:	b94a      	cbnz	r2, 80057f8 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80057e4:	9700      	str	r7, [sp, #0]
 80057e6:	4642      	mov	r2, r8
 80057e8:	4631      	mov	r1, r6
 80057ea:	4620      	mov	r0, r4
 80057ec:	f7ff ff3f 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80057f0:	4605      	mov	r5, r0
 80057f2:	b918      	cbnz	r0, 80057fc <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80057f4:	6823      	ldr	r3, [r4, #0]
 80057f6:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80057f8:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80057fc:	2300      	movs	r3, #0
 80057fe:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005802:	4628      	mov	r0, r5
 8005804:	b005      	add	sp, #20
 8005806:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800580a:	4635      	mov	r5, r6
 800580c:	e7f6      	b.n	80057fc <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800580e:	2502      	movs	r5, #2
 8005810:	e7f7      	b.n	8005802 <HAL_QSPI_Command+0x78>

08005812 <HAL_QSPI_AutoPolling>:
{
 8005812:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005816:	4604      	mov	r4, r0
 8005818:	4615      	mov	r5, r2
 800581a:	461e      	mov	r6, r3
 800581c:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800581e:	f7fe f84b 	bl	80038b8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005822:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005826:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005828:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800582a:	d040      	beq.n	80058ae <HAL_QSPI_AutoPolling+0x9c>
 800582c:	2201      	movs	r2, #1
 800582e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005832:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005836:	2a01      	cmp	r2, #1
 8005838:	b2d7      	uxtb	r7, r2
 800583a:	d136      	bne.n	80058aa <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800583c:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800583e:	2200      	movs	r2, #0
 8005840:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005842:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005844:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005848:	9600      	str	r6, [sp, #0]
 800584a:	2120      	movs	r1, #32
 800584c:	4620      	mov	r0, r4
 800584e:	f7ff ff0e 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005852:	bb20      	cbnz	r0, 800589e <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005854:	6821      	ldr	r1, [r4, #0]
 8005856:	682a      	ldr	r2, [r5, #0]
 8005858:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800585a:	686a      	ldr	r2, [r5, #4]
 800585c:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800585e:	68aa      	ldr	r2, [r5, #8]
 8005860:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005862:	680a      	ldr	r2, [r1, #0]
 8005864:	6928      	ldr	r0, [r5, #16]
 8005866:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800586a:	4302      	orrs	r2, r0
 800586c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005870:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8005872:	68ea      	ldr	r2, [r5, #12]
 8005874:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005878:	4641      	mov	r1, r8
 800587a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800587e:	4620      	mov	r0, r4
 8005880:	f7ff fe48 	bl	8005514 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8005884:	9b03      	ldr	r3, [sp, #12]
 8005886:	9600      	str	r6, [sp, #0]
 8005888:	463a      	mov	r2, r7
 800588a:	2108      	movs	r1, #8
 800588c:	4620      	mov	r0, r4
 800588e:	f7ff feee 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005892:	b920      	cbnz	r0, 800589e <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8005894:	6823      	ldr	r3, [r4, #0]
 8005896:	2208      	movs	r2, #8
 8005898:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800589a:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800589e:	2300      	movs	r3, #0
 80058a0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80058a4:	b004      	add	sp, #16
 80058a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 80058aa:	2002      	movs	r0, #2
 80058ac:	e7f7      	b.n	800589e <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 80058ae:	2002      	movs	r0, #2
 80058b0:	e7f8      	b.n	80058a4 <HAL_QSPI_AutoPolling+0x92>

080058b2 <HAL_QSPI_MemoryMapped>:
{
 80058b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80058b4:	4604      	mov	r4, r0
 80058b6:	4616      	mov	r6, r2
 80058b8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80058ba:	f7fd fffd 	bl	80038b8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80058be:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80058c2:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80058c4:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80058c6:	d032      	beq.n	800592e <HAL_QSPI_MemoryMapped+0x7c>
 80058c8:	2201      	movs	r2, #1
 80058ca:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80058ce:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80058d2:	2a01      	cmp	r2, #1
 80058d4:	d129      	bne.n	800592a <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80058d6:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80058d8:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80058da:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80058dc:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80058e0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80058e2:	9100      	str	r1, [sp, #0]
 80058e4:	4620      	mov	r0, r4
 80058e6:	2120      	movs	r1, #32
 80058e8:	f7ff fec1 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80058ec:	4605      	mov	r5, r0
 80058ee:	b9b0      	cbnz	r0, 800591e <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80058f0:	6823      	ldr	r3, [r4, #0]
 80058f2:	6872      	ldr	r2, [r6, #4]
 80058f4:	6818      	ldr	r0, [r3, #0]
 80058f6:	f020 0008 	bic.w	r0, r0, #8
 80058fa:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80058fc:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80058fe:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005900:	d107      	bne.n	8005912 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8005902:	6832      	ldr	r2, [r6, #0]
 8005904:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8005906:	2210      	movs	r2, #16
 8005908:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800590a:	681a      	ldr	r2, [r3, #0]
 800590c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8005910:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8005912:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8005916:	4639      	mov	r1, r7
 8005918:	4620      	mov	r0, r4
 800591a:	f7ff fdfb 	bl	8005514 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800591e:	2300      	movs	r3, #0
 8005920:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005924:	4628      	mov	r0, r5
 8005926:	b003      	add	sp, #12
 8005928:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800592a:	2502      	movs	r5, #2
 800592c:	e7f7      	b.n	800591e <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800592e:	2502      	movs	r5, #2
 8005930:	e7f8      	b.n	8005924 <HAL_QSPI_MemoryMapped+0x72>

08005932 <HAL_QSPI_Abort>:
{
 8005932:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005934:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005936:	f7fd ffbf 	bl	80038b8 <HAL_GetTick>
 800593a:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800593c:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 8005940:	f010 0002 	ands.w	r0, r0, #2
 8005944:	d03a      	beq.n	80059bc <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 8005946:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005948:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 800594a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800594e:	680a      	ldr	r2, [r1, #0]
 8005950:	f012 0204 	ands.w	r2, r2, #4
 8005954:	d034      	beq.n	80059c0 <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005956:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005958:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800595a:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800595c:	f022 0204 	bic.w	r2, r2, #4
 8005960:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005962:	f7fe f8f9 	bl	8003b58 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8005966:	9b03      	ldr	r3, [sp, #12]
 8005968:	b118      	cbz	r0, 8005972 <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800596a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800596c:	f042 0204 	orr.w	r2, r2, #4
 8005970:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 8005972:	6822      	ldr	r2, [r4, #0]
 8005974:	6891      	ldr	r1, [r2, #8]
 8005976:	0689      	lsls	r1, r1, #26
 8005978:	d51d      	bpl.n	80059b6 <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800597a:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800597c:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800597e:	f041 0102 	orr.w	r1, r1, #2
 8005982:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005984:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005986:	9200      	str	r2, [sp, #0]
 8005988:	2102      	movs	r1, #2
 800598a:	2201      	movs	r2, #1
 800598c:	4620      	mov	r0, r4
 800598e:	f7ff fe6e 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005992:	9b03      	ldr	r3, [sp, #12]
 8005994:	b990      	cbnz	r0, 80059bc <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005996:	6822      	ldr	r2, [r4, #0]
 8005998:	2102      	movs	r1, #2
 800599a:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800599c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800599e:	9200      	str	r2, [sp, #0]
 80059a0:	2120      	movs	r1, #32
 80059a2:	4602      	mov	r2, r0
 80059a4:	4620      	mov	r0, r4
 80059a6:	f7ff fe62 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80059aa:	b938      	cbnz	r0, 80059bc <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 80059ac:	6822      	ldr	r2, [r4, #0]
 80059ae:	6953      	ldr	r3, [r2, #20]
 80059b0:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 80059b4:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 80059b6:	2301      	movs	r3, #1
 80059b8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 80059bc:	b004      	add	sp, #16
 80059be:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 80059c0:	4610      	mov	r0, r2
 80059c2:	e7d6      	b.n	8005972 <HAL_QSPI_Abort+0x40>

080059c4 <HAL_QSPI_Transmit>:
{
 80059c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80059c6:	4604      	mov	r4, r0
 80059c8:	b085      	sub	sp, #20
 80059ca:	4616      	mov	r6, r2
 80059cc:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80059ce:	f7fd ff73 	bl	80038b8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80059d2:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 80059d6:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 80059d8:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80059da:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80059dc:	d04c      	beq.n	8005a78 <HAL_QSPI_Transmit+0xb4>
 80059de:	2201      	movs	r2, #1
 80059e0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80059e4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80059e8:	2a01      	cmp	r2, #1
 80059ea:	b2d0      	uxtb	r0, r2
 80059ec:	d142      	bne.n	8005a74 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80059ee:	2200      	movs	r2, #0
 80059f0:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 80059f2:	2f00      	cmp	r7, #0
 80059f4:	d039      	beq.n	8005a6a <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80059f6:	2212      	movs	r2, #18
 80059f8:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80059fc:	692a      	ldr	r2, [r5, #16]
 80059fe:	3201      	adds	r2, #1
 8005a00:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005a02:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8005a04:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005a06:	3201      	adds	r2, #1
 8005a08:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005a0a:	696a      	ldr	r2, [r5, #20]
 8005a0c:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8005a10:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8005a12:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005a14:	b9a2      	cbnz	r2, 8005a40 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005a16:	9600      	str	r6, [sp, #0]
 8005a18:	2201      	movs	r2, #1
 8005a1a:	2102      	movs	r1, #2
 8005a1c:	4620      	mov	r0, r4
 8005a1e:	f7ff fe26 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005a22:	b928      	cbnz	r0, 8005a30 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005a24:	6823      	ldr	r3, [r4, #0]
 8005a26:	2202      	movs	r2, #2
 8005a28:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005a2a:	4620      	mov	r0, r4
 8005a2c:	f7ff ff81 	bl	8005932 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005a30:	2301      	movs	r3, #1
 8005a32:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005a36:	2300      	movs	r3, #0
 8005a38:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005a3c:	b005      	add	sp, #20
 8005a3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005a40:	9600      	str	r6, [sp, #0]
 8005a42:	2201      	movs	r2, #1
 8005a44:	2104      	movs	r1, #4
 8005a46:	4620      	mov	r0, r4
 8005a48:	9303      	str	r3, [sp, #12]
 8005a4a:	f7ff fe10 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005a4e:	2800      	cmp	r0, #0
 8005a50:	d1ee      	bne.n	8005a30 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005a52:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005a54:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005a56:	7812      	ldrb	r2, [r2, #0]
 8005a58:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8005a5c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005a5e:	3201      	adds	r2, #1
 8005a60:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005a62:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005a64:	3a01      	subs	r2, #1
 8005a66:	62e2      	str	r2, [r4, #44]	; 0x2c
 8005a68:	e7d3      	b.n	8005a12 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005a6a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005a6c:	f043 0308 	orr.w	r3, r3, #8
 8005a70:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005a72:	e7e0      	b.n	8005a36 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8005a74:	2002      	movs	r0, #2
 8005a76:	e7de      	b.n	8005a36 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8005a78:	2002      	movs	r0, #2
 8005a7a:	e7df      	b.n	8005a3c <HAL_QSPI_Transmit+0x78>

08005a7c <HAL_QSPI_Receive>:
{
 8005a7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a7e:	4604      	mov	r4, r0
 8005a80:	b085      	sub	sp, #20
 8005a82:	4616      	mov	r6, r2
 8005a84:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005a86:	f7fd ff17 	bl	80038b8 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8005a8a:	6825      	ldr	r5, [r4, #0]
 8005a8c:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8005a90:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005a94:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005a96:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005a98:	d050      	beq.n	8005b3c <HAL_QSPI_Receive+0xc0>
 8005a9a:	2201      	movs	r2, #1
 8005a9c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005aa0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005aa4:	2a01      	cmp	r2, #1
 8005aa6:	b2d0      	uxtb	r0, r2
 8005aa8:	d146      	bne.n	8005b38 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005aaa:	2200      	movs	r2, #0
 8005aac:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005aae:	2f00      	cmp	r7, #0
 8005ab0:	d03d      	beq.n	8005b2e <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8005ab2:	2222      	movs	r2, #34	; 0x22
 8005ab4:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005ab8:	692a      	ldr	r2, [r5, #16]
 8005aba:	3201      	adds	r2, #1
 8005abc:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005abe:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8005ac0:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005ac2:	3201      	adds	r2, #1
 8005ac4:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8005ac6:	6969      	ldr	r1, [r5, #20]
 8005ac8:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8005acc:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8005ad0:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8005ad2:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8005ad6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005ad8:	b9a2      	cbnz	r2, 8005b04 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005ada:	9600      	str	r6, [sp, #0]
 8005adc:	2201      	movs	r2, #1
 8005ade:	2102      	movs	r1, #2
 8005ae0:	4620      	mov	r0, r4
 8005ae2:	f7ff fdc4 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8005ae6:	b928      	cbnz	r0, 8005af4 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005ae8:	6823      	ldr	r3, [r4, #0]
 8005aea:	2202      	movs	r2, #2
 8005aec:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005aee:	4620      	mov	r0, r4
 8005af0:	f7ff ff1f 	bl	8005932 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005af4:	2301      	movs	r3, #1
 8005af6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005afa:	2300      	movs	r3, #0
 8005afc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005b00:	b005      	add	sp, #20
 8005b02:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8005b04:	9600      	str	r6, [sp, #0]
 8005b06:	2201      	movs	r2, #1
 8005b08:	2106      	movs	r1, #6
 8005b0a:	4620      	mov	r0, r4
 8005b0c:	9303      	str	r3, [sp, #12]
 8005b0e:	f7ff fdae 	bl	800566e <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8005b12:	2800      	cmp	r0, #0
 8005b14:	d1ee      	bne.n	8005af4 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8005b16:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005b18:	f895 1020 	ldrb.w	r1, [r5, #32]
 8005b1c:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8005b1e:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005b20:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8005b22:	3201      	adds	r2, #1
 8005b24:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005b26:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005b28:	3a01      	subs	r2, #1
 8005b2a:	63a2      	str	r2, [r4, #56]	; 0x38
 8005b2c:	e7d3      	b.n	8005ad6 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005b2e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005b30:	f043 0308 	orr.w	r3, r3, #8
 8005b34:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005b36:	e7e0      	b.n	8005afa <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8005b38:	2002      	movs	r0, #2
 8005b3a:	e7de      	b.n	8005afa <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8005b3c:	2002      	movs	r0, #2
 8005b3e:	e7df      	b.n	8005b00 <HAL_QSPI_Receive+0x84>

08005b40 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005b40:	4913      	ldr	r1, [pc, #76]	; (8005b90 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005b42:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005b44:	688b      	ldr	r3, [r1, #8]
 8005b46:	f003 030c 	and.w	r3, r3, #12
 8005b4a:	2b04      	cmp	r3, #4
 8005b4c:	d01c      	beq.n	8005b88 <HAL_RCC_GetSysClockFreq+0x48>
 8005b4e:	2b08      	cmp	r3, #8
 8005b50:	d11c      	bne.n	8005b8c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005b52:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005b54:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005b56:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005b58:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005b5c:	bf14      	ite	ne
 8005b5e:	480d      	ldrne	r0, [pc, #52]	; (8005b94 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005b60:	480d      	ldreq	r0, [pc, #52]	; (8005b98 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005b62:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005b66:	bf18      	it	ne
 8005b68:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005b6a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005b6e:	fba1 0100 	umull	r0, r1, r1, r0
 8005b72:	f7fa fb95 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005b76:	4b06      	ldr	r3, [pc, #24]	; (8005b90 <HAL_RCC_GetSysClockFreq+0x50>)
 8005b78:	685b      	ldr	r3, [r3, #4]
 8005b7a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005b7e:	3301      	adds	r3, #1
 8005b80:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8005b82:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005b86:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005b88:	4802      	ldr	r0, [pc, #8]	; (8005b94 <HAL_RCC_GetSysClockFreq+0x54>)
 8005b8a:	e7fc      	b.n	8005b86 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005b8c:	4802      	ldr	r0, [pc, #8]	; (8005b98 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005b8e:	e7fa      	b.n	8005b86 <HAL_RCC_GetSysClockFreq+0x46>
 8005b90:	40023800 	.word	0x40023800
 8005b94:	007a1200 	.word	0x007a1200
 8005b98:	00f42400 	.word	0x00f42400

08005b9c <HAL_RCC_ClockConfig>:
{
 8005b9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ba0:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8005ba2:	4604      	mov	r4, r0
 8005ba4:	b910      	cbnz	r0, 8005bac <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005ba6:	2001      	movs	r0, #1
}
 8005ba8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005bac:	4b44      	ldr	r3, [pc, #272]	; (8005cc0 <HAL_RCC_ClockConfig+0x124>)
 8005bae:	681a      	ldr	r2, [r3, #0]
 8005bb0:	f002 020f 	and.w	r2, r2, #15
 8005bb4:	428a      	cmp	r2, r1
 8005bb6:	d328      	bcc.n	8005c0a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005bb8:	6822      	ldr	r2, [r4, #0]
 8005bba:	0797      	lsls	r7, r2, #30
 8005bbc:	d42d      	bmi.n	8005c1a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005bbe:	07d0      	lsls	r0, r2, #31
 8005bc0:	d441      	bmi.n	8005c46 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005bc2:	4b3f      	ldr	r3, [pc, #252]	; (8005cc0 <HAL_RCC_ClockConfig+0x124>)
 8005bc4:	681a      	ldr	r2, [r3, #0]
 8005bc6:	f002 020f 	and.w	r2, r2, #15
 8005bca:	42aa      	cmp	r2, r5
 8005bcc:	d866      	bhi.n	8005c9c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005bce:	6822      	ldr	r2, [r4, #0]
 8005bd0:	0751      	lsls	r1, r2, #29
 8005bd2:	d46c      	bmi.n	8005cae <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005bd4:	0713      	lsls	r3, r2, #28
 8005bd6:	d507      	bpl.n	8005be8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005bd8:	4a3a      	ldr	r2, [pc, #232]	; (8005cc4 <HAL_RCC_ClockConfig+0x128>)
 8005bda:	6921      	ldr	r1, [r4, #16]
 8005bdc:	6893      	ldr	r3, [r2, #8]
 8005bde:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005be2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005be6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005be8:	f7ff ffaa 	bl	8005b40 <HAL_RCC_GetSysClockFreq>
 8005bec:	4b35      	ldr	r3, [pc, #212]	; (8005cc4 <HAL_RCC_ClockConfig+0x128>)
 8005bee:	4a36      	ldr	r2, [pc, #216]	; (8005cc8 <HAL_RCC_ClockConfig+0x12c>)
 8005bf0:	689b      	ldr	r3, [r3, #8]
 8005bf2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005bf6:	5cd3      	ldrb	r3, [r2, r3]
 8005bf8:	40d8      	lsrs	r0, r3
 8005bfa:	4b34      	ldr	r3, [pc, #208]	; (8005ccc <HAL_RCC_ClockConfig+0x130>)
 8005bfc:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005bfe:	4b34      	ldr	r3, [pc, #208]	; (8005cd0 <HAL_RCC_ClockConfig+0x134>)
 8005c00:	6818      	ldr	r0, [r3, #0]
 8005c02:	f7fc f95f 	bl	8001ec4 <HAL_InitTick>
  return HAL_OK;
 8005c06:	2000      	movs	r0, #0
 8005c08:	e7ce      	b.n	8005ba8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005c0a:	b2ca      	uxtb	r2, r1
 8005c0c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005c0e:	681b      	ldr	r3, [r3, #0]
 8005c10:	f003 030f 	and.w	r3, r3, #15
 8005c14:	428b      	cmp	r3, r1
 8005c16:	d1c6      	bne.n	8005ba6 <HAL_RCC_ClockConfig+0xa>
 8005c18:	e7ce      	b.n	8005bb8 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005c1a:	4b2a      	ldr	r3, [pc, #168]	; (8005cc4 <HAL_RCC_ClockConfig+0x128>)
 8005c1c:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005c20:	bf1e      	ittt	ne
 8005c22:	6899      	ldrne	r1, [r3, #8]
 8005c24:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8005c28:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005c2a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005c2c:	bf42      	ittt	mi
 8005c2e:	6899      	ldrmi	r1, [r3, #8]
 8005c30:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8005c34:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005c36:	4923      	ldr	r1, [pc, #140]	; (8005cc4 <HAL_RCC_ClockConfig+0x128>)
 8005c38:	68a0      	ldr	r0, [r4, #8]
 8005c3a:	688b      	ldr	r3, [r1, #8]
 8005c3c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005c40:	4303      	orrs	r3, r0
 8005c42:	608b      	str	r3, [r1, #8]
 8005c44:	e7bb      	b.n	8005bbe <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005c46:	6862      	ldr	r2, [r4, #4]
 8005c48:	4b1e      	ldr	r3, [pc, #120]	; (8005cc4 <HAL_RCC_ClockConfig+0x128>)
 8005c4a:	2a01      	cmp	r2, #1
 8005c4c:	d11c      	bne.n	8005c88 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005c4e:	681b      	ldr	r3, [r3, #0]
 8005c50:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c54:	d0a7      	beq.n	8005ba6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005c56:	4e1b      	ldr	r6, [pc, #108]	; (8005cc4 <HAL_RCC_ClockConfig+0x128>)
 8005c58:	68b3      	ldr	r3, [r6, #8]
 8005c5a:	f023 0303 	bic.w	r3, r3, #3
 8005c5e:	4313      	orrs	r3, r2
 8005c60:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005c62:	f7fd fe29 	bl	80038b8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005c66:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8005c6a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005c6c:	68b3      	ldr	r3, [r6, #8]
 8005c6e:	6862      	ldr	r2, [r4, #4]
 8005c70:	f003 030c 	and.w	r3, r3, #12
 8005c74:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005c78:	d0a3      	beq.n	8005bc2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005c7a:	f7fd fe1d 	bl	80038b8 <HAL_GetTick>
 8005c7e:	1bc0      	subs	r0, r0, r7
 8005c80:	4540      	cmp	r0, r8
 8005c82:	d9f3      	bls.n	8005c6c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8005c84:	2003      	movs	r0, #3
 8005c86:	e78f      	b.n	8005ba8 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005c88:	1e91      	subs	r1, r2, #2
 8005c8a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005c8c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005c8e:	d802      	bhi.n	8005c96 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005c90:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005c94:	e7de      	b.n	8005c54 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c96:	f013 0f02 	tst.w	r3, #2
 8005c9a:	e7db      	b.n	8005c54 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005c9c:	b2ea      	uxtb	r2, r5
 8005c9e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005ca0:	681b      	ldr	r3, [r3, #0]
 8005ca2:	f003 030f 	and.w	r3, r3, #15
 8005ca6:	42ab      	cmp	r3, r5
 8005ca8:	f47f af7d 	bne.w	8005ba6 <HAL_RCC_ClockConfig+0xa>
 8005cac:	e78f      	b.n	8005bce <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005cae:	4905      	ldr	r1, [pc, #20]	; (8005cc4 <HAL_RCC_ClockConfig+0x128>)
 8005cb0:	68e0      	ldr	r0, [r4, #12]
 8005cb2:	688b      	ldr	r3, [r1, #8]
 8005cb4:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8005cb8:	4303      	orrs	r3, r0
 8005cba:	608b      	str	r3, [r1, #8]
 8005cbc:	e78a      	b.n	8005bd4 <HAL_RCC_ClockConfig+0x38>
 8005cbe:	bf00      	nop
 8005cc0:	40023c00 	.word	0x40023c00
 8005cc4:	40023800 	.word	0x40023800
 8005cc8:	0801bf1d 	.word	0x0801bf1d
 8005ccc:	20000050 	.word	0x20000050
 8005cd0:	20000058 	.word	0x20000058

08005cd4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005cd4:	4b04      	ldr	r3, [pc, #16]	; (8005ce8 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005cd6:	4a05      	ldr	r2, [pc, #20]	; (8005cec <HAL_RCC_GetPCLK1Freq+0x18>)
 8005cd8:	689b      	ldr	r3, [r3, #8]
 8005cda:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005cde:	5cd3      	ldrb	r3, [r2, r3]
 8005ce0:	4a03      	ldr	r2, [pc, #12]	; (8005cf0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005ce2:	6810      	ldr	r0, [r2, #0]
}
 8005ce4:	40d8      	lsrs	r0, r3
 8005ce6:	4770      	bx	lr
 8005ce8:	40023800 	.word	0x40023800
 8005cec:	0801bf2d 	.word	0x0801bf2d
 8005cf0:	20000050 	.word	0x20000050

08005cf4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005cf4:	230f      	movs	r3, #15
 8005cf6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005cf8:	4b0b      	ldr	r3, [pc, #44]	; (8005d28 <HAL_RCC_GetClockConfig+0x34>)
 8005cfa:	689a      	ldr	r2, [r3, #8]
 8005cfc:	f002 0203 	and.w	r2, r2, #3
 8005d00:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005d02:	689a      	ldr	r2, [r3, #8]
 8005d04:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005d08:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005d0a:	689a      	ldr	r2, [r3, #8]
 8005d0c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005d10:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005d12:	689b      	ldr	r3, [r3, #8]
 8005d14:	08db      	lsrs	r3, r3, #3
 8005d16:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005d1a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005d1c:	4b03      	ldr	r3, [pc, #12]	; (8005d2c <HAL_RCC_GetClockConfig+0x38>)
 8005d1e:	681b      	ldr	r3, [r3, #0]
 8005d20:	f003 030f 	and.w	r3, r3, #15
 8005d24:	600b      	str	r3, [r1, #0]
}
 8005d26:	4770      	bx	lr
 8005d28:	40023800 	.word	0x40023800
 8005d2c:	40023c00 	.word	0x40023c00

08005d30 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8005d30:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005d32:	6802      	ldr	r2, [r0, #0]
{
 8005d34:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005d36:	0610      	lsls	r0, r2, #24
 8005d38:	d508      	bpl.n	8005d4c <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8005d3a:	49aa      	ldr	r1, [pc, #680]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005d3c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8005d3e:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005d42:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8005d46:	4303      	orrs	r3, r0
 8005d48:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8005d4c:	05d1      	lsls	r1, r2, #23
 8005d4e:	d508      	bpl.n	8005d62 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8005d50:	49a4      	ldr	r1, [pc, #656]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005d52:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005d54:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005d58:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005d5c:	4303      	orrs	r3, r0
 8005d5e:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005d62:	f012 0f43 	tst.w	r2, #67	; 0x43
 8005d66:	d173      	bne.n	8005e50 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005d68:	6823      	ldr	r3, [r4, #0]
 8005d6a:	f013 0f0c 	tst.w	r3, #12
 8005d6e:	f000 80c1 	beq.w	8005ef4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005d72:	4b9d      	ldr	r3, [pc, #628]	; (8005fe8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005d74:	4d9b      	ldr	r5, [pc, #620]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 8005d76:	2200      	movs	r2, #0
 8005d78:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8005d7a:	f7fd fd9d 	bl	80038b8 <HAL_GetTick>
 8005d7e:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005d80:	682b      	ldr	r3, [r5, #0]
 8005d82:	009b      	lsls	r3, r3, #2
 8005d84:	f100 80fc 	bmi.w	8005f80 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005d88:	6821      	ldr	r1, [r4, #0]
 8005d8a:	074f      	lsls	r7, r1, #29
 8005d8c:	d51a      	bpl.n	8005dc4 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8005d8e:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005d92:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8005d96:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005d9a:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8005d9e:	4313      	orrs	r3, r2
 8005da0:	6922      	ldr	r2, [r4, #16]
 8005da2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005da6:	69a2      	ldr	r2, [r4, #24]
 8005da8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8005dac:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005db0:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8005db4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005db6:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8005dba:	3a01      	subs	r2, #1
 8005dbc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005dc0:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005dc4:	070e      	lsls	r6, r1, #28
 8005dc6:	d519      	bpl.n	8005dfc <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8005dc8:	4a86      	ldr	r2, [pc, #536]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005dca:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005dce:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8005dd2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005dd6:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8005dda:	4303      	orrs	r3, r0
 8005ddc:	6920      	ldr	r0, [r4, #16]
 8005dde:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005de2:	69e0      	ldr	r0, [r4, #28]
 8005de4:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8005de8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005dec:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8005df0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005df2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005df6:	4303      	orrs	r3, r0
 8005df8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8005dfc:	060d      	lsls	r5, r1, #24
 8005dfe:	d517      	bpl.n	8005e30 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8005e00:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005e02:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005e06:	d113      	bne.n	8005e30 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005e08:	4976      	ldr	r1, [pc, #472]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005e0a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005e0e:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8005e12:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8005e16:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8005e1a:	4313      	orrs	r3, r2
 8005e1c:	6922      	ldr	r2, [r4, #16]
 8005e1e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005e22:	6962      	ldr	r2, [r4, #20]
 8005e24:	0852      	lsrs	r2, r2, #1
 8005e26:	3a01      	subs	r2, #1
 8005e28:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005e2c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005e30:	4b6d      	ldr	r3, [pc, #436]	; (8005fe8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005e32:	4e6c      	ldr	r6, [pc, #432]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 8005e34:	2201      	movs	r2, #1
 8005e36:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8005e38:	f7fd fd3e 	bl	80038b8 <HAL_GetTick>
 8005e3c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005e3e:	6833      	ldr	r3, [r6, #0]
 8005e40:	0098      	lsls	r0, r3, #2
 8005e42:	d459      	bmi.n	8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005e44:	f7fd fd38 	bl	80038b8 <HAL_GetTick>
 8005e48:	1b40      	subs	r0, r0, r5
 8005e4a:	2802      	cmp	r0, #2
 8005e4c:	d9f7      	bls.n	8005e3e <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8005e4e:	e04e      	b.n	8005eee <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8005e50:	4b65      	ldr	r3, [pc, #404]	; (8005fe8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005e52:	4e64      	ldr	r6, [pc, #400]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 8005e54:	2200      	movs	r2, #0
 8005e56:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8005e58:	f7fd fd2e 	bl	80038b8 <HAL_GetTick>
 8005e5c:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005e5e:	6833      	ldr	r3, [r6, #0]
 8005e60:	011b      	lsls	r3, r3, #4
 8005e62:	d43f      	bmi.n	8005ee4 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005e64:	6821      	ldr	r1, [r4, #0]
 8005e66:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8005e68:	bf41      	itttt	mi
 8005e6a:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005e6e:	071b      	lslmi	r3, r3, #28
 8005e70:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005e74:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005e78:	078e      	lsls	r6, r1, #30
 8005e7a:	d515      	bpl.n	8005ea8 <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005e7c:	4a59      	ldr	r2, [pc, #356]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005e7e:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005e80:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005e84:	6865      	ldr	r5, [r4, #4]
 8005e86:	061b      	lsls	r3, r3, #24
 8005e88:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8005e8c:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8005e90:	4303      	orrs	r3, r0
 8005e92:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005e96:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8005e9a:	6a23      	ldr	r3, [r4, #32]
 8005e9c:	f020 001f 	bic.w	r0, r0, #31
 8005ea0:	3b01      	subs	r3, #1
 8005ea2:	4303      	orrs	r3, r0
 8005ea4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005ea8:	064d      	lsls	r5, r1, #25
 8005eaa:	d50a      	bpl.n	8005ec2 <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8005eac:	68e3      	ldr	r3, [r4, #12]
 8005eae:	6862      	ldr	r2, [r4, #4]
 8005eb0:	061b      	lsls	r3, r3, #24
 8005eb2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005eb6:	68a2      	ldr	r2, [r4, #8]
 8005eb8:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8005ebc:	4a49      	ldr	r2, [pc, #292]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005ebe:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005ec2:	4b49      	ldr	r3, [pc, #292]	; (8005fe8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005ec4:	4e47      	ldr	r6, [pc, #284]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 8005ec6:	2201      	movs	r2, #1
 8005ec8:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8005eca:	f7fd fcf5 	bl	80038b8 <HAL_GetTick>
 8005ece:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005ed0:	6833      	ldr	r3, [r6, #0]
 8005ed2:	0118      	lsls	r0, r3, #4
 8005ed4:	f53f af48 	bmi.w	8005d68 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005ed8:	f7fd fcee 	bl	80038b8 <HAL_GetTick>
 8005edc:	1b40      	subs	r0, r0, r5
 8005ede:	2802      	cmp	r0, #2
 8005ee0:	d9f6      	bls.n	8005ed0 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8005ee2:	e004      	b.n	8005eee <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005ee4:	f7fd fce8 	bl	80038b8 <HAL_GetTick>
 8005ee8:	1b40      	subs	r0, r0, r5
 8005eea:	2802      	cmp	r0, #2
 8005eec:	d9b7      	bls.n	8005e5e <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 8005eee:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8005ef0:	b003      	add	sp, #12
 8005ef2:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8005ef4:	0619      	lsls	r1, r3, #24
 8005ef6:	d43e      	bmi.n	8005f76 <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005ef8:	6823      	ldr	r3, [r4, #0]
 8005efa:	069a      	lsls	r2, r3, #26
 8005efc:	d530      	bpl.n	8005f60 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 8005efe:	2300      	movs	r3, #0
 8005f00:	9301      	str	r3, [sp, #4]
 8005f02:	4b38      	ldr	r3, [pc, #224]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 8005f04:	4d39      	ldr	r5, [pc, #228]	; (8005fec <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8005f06:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005f08:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005f0c:	641a      	str	r2, [r3, #64]	; 0x40
 8005f0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005f10:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005f14:	9301      	str	r3, [sp, #4]
 8005f16:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8005f18:	682b      	ldr	r3, [r5, #0]
 8005f1a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005f1e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005f20:	f7fd fcca 	bl	80038b8 <HAL_GetTick>
 8005f24:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005f26:	682b      	ldr	r3, [r5, #0]
 8005f28:	05d9      	lsls	r1, r3, #23
 8005f2a:	d530      	bpl.n	8005f8e <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005f2c:	4d2d      	ldr	r5, [pc, #180]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005f2e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005f30:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8005f34:	d131      	bne.n	8005f9a <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005f36:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8005f38:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8005f3c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8005f40:	4a28      	ldr	r2, [pc, #160]	; (8005fe4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005f42:	d14b      	bne.n	8005fdc <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8005f44:	6891      	ldr	r1, [r2, #8]
 8005f46:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8005f4a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005f4e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8005f52:	4301      	orrs	r1, r0
 8005f54:	6091      	str	r1, [r2, #8]
 8005f56:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8005f58:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005f5c:	430b      	orrs	r3, r1
 8005f5e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005f60:	6820      	ldr	r0, [r4, #0]
 8005f62:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005f66:	bf1f      	itttt	ne
 8005f68:	4b21      	ldrne	r3, [pc, #132]	; (8005ff0 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8005f6a:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8005f6e:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 8005f72:	2000      	movne	r0, #0
 8005f74:	e7bc      	b.n	8005ef0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 8005f76:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005f78:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005f7c:	d1bc      	bne.n	8005ef8 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 8005f7e:	e6f8      	b.n	8005d72 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005f80:	f7fd fc9a 	bl	80038b8 <HAL_GetTick>
 8005f84:	1b80      	subs	r0, r0, r6
 8005f86:	2802      	cmp	r0, #2
 8005f88:	f67f aefa 	bls.w	8005d80 <HAL_RCCEx_PeriphCLKConfig+0x50>
 8005f8c:	e7af      	b.n	8005eee <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8005f8e:	f7fd fc93 	bl	80038b8 <HAL_GetTick>
 8005f92:	1b80      	subs	r0, r0, r6
 8005f94:	2802      	cmp	r0, #2
 8005f96:	d9c6      	bls.n	8005f26 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8005f98:	e7a9      	b.n	8005eee <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005f9a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005f9c:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8005fa0:	4293      	cmp	r3, r2
 8005fa2:	d0c8      	beq.n	8005f36 <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005fa4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005fa6:	4a10      	ldr	r2, [pc, #64]	; (8005fe8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 8005fa8:	2101      	movs	r1, #1
 8005faa:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005fae:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005fb2:	2100      	movs	r1, #0
 8005fb4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8005fb8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005fba:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005fbc:	07da      	lsls	r2, r3, #31
 8005fbe:	d5ba      	bpl.n	8005f36 <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 8005fc0:	f7fd fc7a 	bl	80038b8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005fc4:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8005fc8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005fca:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005fcc:	079b      	lsls	r3, r3, #30
 8005fce:	d4b2      	bmi.n	8005f36 <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005fd0:	f7fd fc72 	bl	80038b8 <HAL_GetTick>
 8005fd4:	1b80      	subs	r0, r0, r6
 8005fd6:	42b8      	cmp	r0, r7
 8005fd8:	d9f7      	bls.n	8005fca <HAL_RCCEx_PeriphCLKConfig+0x29a>
 8005fda:	e788      	b.n	8005eee <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005fdc:	6891      	ldr	r1, [r2, #8]
 8005fde:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005fe2:	e7b7      	b.n	8005f54 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8005fe4:	40023800 	.word	0x40023800
 8005fe8:	42470000 	.word	0x42470000
 8005fec:	40007000 	.word	0x40007000
 8005ff0:	42471000 	.word	0x42471000

08005ff4 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005ff4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005ff8:	4604      	mov	r4, r0
 8005ffa:	b340      	cbz	r0, 800604e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005ffc:	6803      	ldr	r3, [r0, #0]
 8005ffe:	07dd      	lsls	r5, r3, #31
 8006000:	d410      	bmi.n	8006024 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006002:	6823      	ldr	r3, [r4, #0]
 8006004:	0798      	lsls	r0, r3, #30
 8006006:	d45e      	bmi.n	80060c6 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006008:	6823      	ldr	r3, [r4, #0]
 800600a:	071a      	lsls	r2, r3, #28
 800600c:	f100 80a0 	bmi.w	8006150 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006010:	6823      	ldr	r3, [r4, #0]
 8006012:	075b      	lsls	r3, r3, #29
 8006014:	f100 80c0 	bmi.w	8006198 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006018:	69a0      	ldr	r0, [r4, #24]
 800601a:	2800      	cmp	r0, #0
 800601c:	f040 8128 	bne.w	8006270 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006020:	2000      	movs	r0, #0
 8006022:	e02b      	b.n	800607c <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006024:	4b8f      	ldr	r3, [pc, #572]	; (8006264 <HAL_RCC_OscConfig+0x270>)
 8006026:	689a      	ldr	r2, [r3, #8]
 8006028:	f002 020c 	and.w	r2, r2, #12
 800602c:	2a04      	cmp	r2, #4
 800602e:	d007      	beq.n	8006040 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006030:	689a      	ldr	r2, [r3, #8]
 8006032:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006036:	2a08      	cmp	r2, #8
 8006038:	d10b      	bne.n	8006052 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800603a:	685a      	ldr	r2, [r3, #4]
 800603c:	0251      	lsls	r1, r2, #9
 800603e:	d508      	bpl.n	8006052 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006040:	4b88      	ldr	r3, [pc, #544]	; (8006264 <HAL_RCC_OscConfig+0x270>)
 8006042:	681b      	ldr	r3, [r3, #0]
 8006044:	039a      	lsls	r2, r3, #14
 8006046:	d5dc      	bpl.n	8006002 <HAL_RCC_OscConfig+0xe>
 8006048:	6863      	ldr	r3, [r4, #4]
 800604a:	2b00      	cmp	r3, #0
 800604c:	d1d9      	bne.n	8006002 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800604e:	2001      	movs	r0, #1
 8006050:	e014      	b.n	800607c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006052:	6862      	ldr	r2, [r4, #4]
 8006054:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006058:	d113      	bne.n	8006082 <HAL_RCC_OscConfig+0x8e>
 800605a:	681a      	ldr	r2, [r3, #0]
 800605c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006060:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006062:	f7fd fc29 	bl	80038b8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006066:	4e7f      	ldr	r6, [pc, #508]	; (8006264 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006068:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800606a:	6833      	ldr	r3, [r6, #0]
 800606c:	039b      	lsls	r3, r3, #14
 800606e:	d4c8      	bmi.n	8006002 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006070:	f7fd fc22 	bl	80038b8 <HAL_GetTick>
 8006074:	1b40      	subs	r0, r0, r5
 8006076:	2864      	cmp	r0, #100	; 0x64
 8006078:	d9f7      	bls.n	800606a <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800607a:	2003      	movs	r0, #3
}
 800607c:	b002      	add	sp, #8
 800607e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006082:	4d78      	ldr	r5, [pc, #480]	; (8006264 <HAL_RCC_OscConfig+0x270>)
 8006084:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006088:	682b      	ldr	r3, [r5, #0]
 800608a:	d107      	bne.n	800609c <HAL_RCC_OscConfig+0xa8>
 800608c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006090:	602b      	str	r3, [r5, #0]
 8006092:	682b      	ldr	r3, [r5, #0]
 8006094:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006098:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800609a:	e7e2      	b.n	8006062 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800609c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80060a0:	602b      	str	r3, [r5, #0]
 80060a2:	682b      	ldr	r3, [r5, #0]
 80060a4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80060a8:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80060aa:	2a00      	cmp	r2, #0
 80060ac:	d1d9      	bne.n	8006062 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80060ae:	f7fd fc03 	bl	80038b8 <HAL_GetTick>
 80060b2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80060b4:	682b      	ldr	r3, [r5, #0]
 80060b6:	039f      	lsls	r7, r3, #14
 80060b8:	d5a3      	bpl.n	8006002 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80060ba:	f7fd fbfd 	bl	80038b8 <HAL_GetTick>
 80060be:	1b80      	subs	r0, r0, r6
 80060c0:	2864      	cmp	r0, #100	; 0x64
 80060c2:	d9f7      	bls.n	80060b4 <HAL_RCC_OscConfig+0xc0>
 80060c4:	e7d9      	b.n	800607a <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80060c6:	4b67      	ldr	r3, [pc, #412]	; (8006264 <HAL_RCC_OscConfig+0x270>)
 80060c8:	689a      	ldr	r2, [r3, #8]
 80060ca:	f012 0f0c 	tst.w	r2, #12
 80060ce:	d007      	beq.n	80060e0 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80060d0:	689a      	ldr	r2, [r3, #8]
 80060d2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80060d6:	2a08      	cmp	r2, #8
 80060d8:	d111      	bne.n	80060fe <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80060da:	685b      	ldr	r3, [r3, #4]
 80060dc:	025e      	lsls	r6, r3, #9
 80060de:	d40e      	bmi.n	80060fe <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80060e0:	4a60      	ldr	r2, [pc, #384]	; (8006264 <HAL_RCC_OscConfig+0x270>)
 80060e2:	6813      	ldr	r3, [r2, #0]
 80060e4:	079d      	lsls	r5, r3, #30
 80060e6:	d502      	bpl.n	80060ee <HAL_RCC_OscConfig+0xfa>
 80060e8:	68e3      	ldr	r3, [r4, #12]
 80060ea:	2b01      	cmp	r3, #1
 80060ec:	d1af      	bne.n	800604e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80060ee:	6813      	ldr	r3, [r2, #0]
 80060f0:	6921      	ldr	r1, [r4, #16]
 80060f2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80060f6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80060fa:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80060fc:	e784      	b.n	8006008 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80060fe:	68e2      	ldr	r2, [r4, #12]
 8006100:	4b59      	ldr	r3, [pc, #356]	; (8006268 <HAL_RCC_OscConfig+0x274>)
 8006102:	b1b2      	cbz	r2, 8006132 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8006104:	2201      	movs	r2, #1
 8006106:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006108:	f7fd fbd6 	bl	80038b8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800610c:	4d55      	ldr	r5, [pc, #340]	; (8006264 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800610e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006110:	682b      	ldr	r3, [r5, #0]
 8006112:	0798      	lsls	r0, r3, #30
 8006114:	d507      	bpl.n	8006126 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006116:	682b      	ldr	r3, [r5, #0]
 8006118:	6922      	ldr	r2, [r4, #16]
 800611a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800611e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006122:	602b      	str	r3, [r5, #0]
 8006124:	e770      	b.n	8006008 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006126:	f7fd fbc7 	bl	80038b8 <HAL_GetTick>
 800612a:	1b80      	subs	r0, r0, r6
 800612c:	2802      	cmp	r0, #2
 800612e:	d9ef      	bls.n	8006110 <HAL_RCC_OscConfig+0x11c>
 8006130:	e7a3      	b.n	800607a <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8006132:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006134:	f7fd fbc0 	bl	80038b8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006138:	4e4a      	ldr	r6, [pc, #296]	; (8006264 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800613a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800613c:	6833      	ldr	r3, [r6, #0]
 800613e:	0799      	lsls	r1, r3, #30
 8006140:	f57f af62 	bpl.w	8006008 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006144:	f7fd fbb8 	bl	80038b8 <HAL_GetTick>
 8006148:	1b40      	subs	r0, r0, r5
 800614a:	2802      	cmp	r0, #2
 800614c:	d9f6      	bls.n	800613c <HAL_RCC_OscConfig+0x148>
 800614e:	e794      	b.n	800607a <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8006150:	6962      	ldr	r2, [r4, #20]
 8006152:	4b45      	ldr	r3, [pc, #276]	; (8006268 <HAL_RCC_OscConfig+0x274>)
 8006154:	b182      	cbz	r2, 8006178 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8006156:	2201      	movs	r2, #1
 8006158:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800615c:	f7fd fbac 	bl	80038b8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006160:	4e40      	ldr	r6, [pc, #256]	; (8006264 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8006162:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006164:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006166:	079f      	lsls	r7, r3, #30
 8006168:	f53f af52 	bmi.w	8006010 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800616c:	f7fd fba4 	bl	80038b8 <HAL_GetTick>
 8006170:	1b40      	subs	r0, r0, r5
 8006172:	2802      	cmp	r0, #2
 8006174:	d9f6      	bls.n	8006164 <HAL_RCC_OscConfig+0x170>
 8006176:	e780      	b.n	800607a <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8006178:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800617c:	f7fd fb9c 	bl	80038b8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006180:	4e38      	ldr	r6, [pc, #224]	; (8006264 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8006182:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006184:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006186:	0798      	lsls	r0, r3, #30
 8006188:	f57f af42 	bpl.w	8006010 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800618c:	f7fd fb94 	bl	80038b8 <HAL_GetTick>
 8006190:	1b40      	subs	r0, r0, r5
 8006192:	2802      	cmp	r0, #2
 8006194:	d9f6      	bls.n	8006184 <HAL_RCC_OscConfig+0x190>
 8006196:	e770      	b.n	800607a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006198:	4b32      	ldr	r3, [pc, #200]	; (8006264 <HAL_RCC_OscConfig+0x270>)
 800619a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800619c:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80061a0:	d128      	bne.n	80061f4 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80061a2:	9201      	str	r2, [sp, #4]
 80061a4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80061a6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80061aa:	641a      	str	r2, [r3, #64]	; 0x40
 80061ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80061ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80061b2:	9301      	str	r3, [sp, #4]
 80061b4:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80061b6:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80061b8:	4d2c      	ldr	r5, [pc, #176]	; (800626c <HAL_RCC_OscConfig+0x278>)
 80061ba:	682b      	ldr	r3, [r5, #0]
 80061bc:	05d9      	lsls	r1, r3, #23
 80061be:	d51b      	bpl.n	80061f8 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80061c0:	68a3      	ldr	r3, [r4, #8]
 80061c2:	4d28      	ldr	r5, [pc, #160]	; (8006264 <HAL_RCC_OscConfig+0x270>)
 80061c4:	2b01      	cmp	r3, #1
 80061c6:	d127      	bne.n	8006218 <HAL_RCC_OscConfig+0x224>
 80061c8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80061ca:	f043 0301 	orr.w	r3, r3, #1
 80061ce:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80061d0:	f7fd fb72 	bl	80038b8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80061d4:	4e23      	ldr	r6, [pc, #140]	; (8006264 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80061d6:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80061d8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80061dc:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80061de:	079b      	lsls	r3, r3, #30
 80061e0:	d539      	bpl.n	8006256 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 80061e2:	2f00      	cmp	r7, #0
 80061e4:	f43f af18 	beq.w	8006018 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80061e8:	4a1e      	ldr	r2, [pc, #120]	; (8006264 <HAL_RCC_OscConfig+0x270>)
 80061ea:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80061ec:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80061f0:	6413      	str	r3, [r2, #64]	; 0x40
 80061f2:	e711      	b.n	8006018 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80061f4:	2700      	movs	r7, #0
 80061f6:	e7df      	b.n	80061b8 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80061f8:	682b      	ldr	r3, [r5, #0]
 80061fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80061fe:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006200:	f7fd fb5a 	bl	80038b8 <HAL_GetTick>
 8006204:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006206:	682b      	ldr	r3, [r5, #0]
 8006208:	05da      	lsls	r2, r3, #23
 800620a:	d4d9      	bmi.n	80061c0 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800620c:	f7fd fb54 	bl	80038b8 <HAL_GetTick>
 8006210:	1b80      	subs	r0, r0, r6
 8006212:	2802      	cmp	r0, #2
 8006214:	d9f7      	bls.n	8006206 <HAL_RCC_OscConfig+0x212>
 8006216:	e730      	b.n	800607a <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006218:	2b05      	cmp	r3, #5
 800621a:	d104      	bne.n	8006226 <HAL_RCC_OscConfig+0x232>
 800621c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800621e:	f043 0304 	orr.w	r3, r3, #4
 8006222:	672b      	str	r3, [r5, #112]	; 0x70
 8006224:	e7d0      	b.n	80061c8 <HAL_RCC_OscConfig+0x1d4>
 8006226:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006228:	f022 0201 	bic.w	r2, r2, #1
 800622c:	672a      	str	r2, [r5, #112]	; 0x70
 800622e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006230:	f022 0204 	bic.w	r2, r2, #4
 8006234:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006236:	2b00      	cmp	r3, #0
 8006238:	d1ca      	bne.n	80061d0 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800623a:	f7fd fb3d 	bl	80038b8 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800623e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006242:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006244:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006246:	0798      	lsls	r0, r3, #30
 8006248:	d5cb      	bpl.n	80061e2 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800624a:	f7fd fb35 	bl	80038b8 <HAL_GetTick>
 800624e:	1b80      	subs	r0, r0, r6
 8006250:	4540      	cmp	r0, r8
 8006252:	d9f7      	bls.n	8006244 <HAL_RCC_OscConfig+0x250>
 8006254:	e711      	b.n	800607a <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006256:	f7fd fb2f 	bl	80038b8 <HAL_GetTick>
 800625a:	1b40      	subs	r0, r0, r5
 800625c:	4540      	cmp	r0, r8
 800625e:	d9bd      	bls.n	80061dc <HAL_RCC_OscConfig+0x1e8>
 8006260:	e70b      	b.n	800607a <HAL_RCC_OscConfig+0x86>
 8006262:	bf00      	nop
 8006264:	40023800 	.word	0x40023800
 8006268:	42470000 	.word	0x42470000
 800626c:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006270:	4d3b      	ldr	r5, [pc, #236]	; (8006360 <HAL_RCC_OscConfig+0x36c>)
 8006272:	68ab      	ldr	r3, [r5, #8]
 8006274:	f003 030c 	and.w	r3, r3, #12
 8006278:	2b08      	cmp	r3, #8
 800627a:	d040      	beq.n	80062fe <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800627c:	4b39      	ldr	r3, [pc, #228]	; (8006364 <HAL_RCC_OscConfig+0x370>)
 800627e:	2200      	movs	r2, #0
 8006280:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8006282:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006284:	d12e      	bne.n	80062e4 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 8006286:	f7fd fb17 	bl	80038b8 <HAL_GetTick>
 800628a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800628c:	682b      	ldr	r3, [r5, #0]
 800628e:	0199      	lsls	r1, r3, #6
 8006290:	d422      	bmi.n	80062d8 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006292:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006296:	4313      	orrs	r3, r2
 8006298:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800629a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800629e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80062a0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80062a4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80062a6:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80062aa:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80062ac:	0852      	lsrs	r2, r2, #1
 80062ae:	3a01      	subs	r2, #1
 80062b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80062b4:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80062b6:	4b2b      	ldr	r3, [pc, #172]	; (8006364 <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80062b8:	4d29      	ldr	r5, [pc, #164]	; (8006360 <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 80062ba:	2201      	movs	r2, #1
 80062bc:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80062be:	f7fd fafb 	bl	80038b8 <HAL_GetTick>
 80062c2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80062c4:	682b      	ldr	r3, [r5, #0]
 80062c6:	019a      	lsls	r2, r3, #6
 80062c8:	f53f aeaa 	bmi.w	8006020 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80062cc:	f7fd faf4 	bl	80038b8 <HAL_GetTick>
 80062d0:	1b00      	subs	r0, r0, r4
 80062d2:	2802      	cmp	r0, #2
 80062d4:	d9f6      	bls.n	80062c4 <HAL_RCC_OscConfig+0x2d0>
 80062d6:	e6d0      	b.n	800607a <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80062d8:	f7fd faee 	bl	80038b8 <HAL_GetTick>
 80062dc:	1b80      	subs	r0, r0, r6
 80062de:	2802      	cmp	r0, #2
 80062e0:	d9d4      	bls.n	800628c <HAL_RCC_OscConfig+0x298>
 80062e2:	e6ca      	b.n	800607a <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80062e4:	f7fd fae8 	bl	80038b8 <HAL_GetTick>
 80062e8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80062ea:	682b      	ldr	r3, [r5, #0]
 80062ec:	019b      	lsls	r3, r3, #6
 80062ee:	f57f ae97 	bpl.w	8006020 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80062f2:	f7fd fae1 	bl	80038b8 <HAL_GetTick>
 80062f6:	1b00      	subs	r0, r0, r4
 80062f8:	2802      	cmp	r0, #2
 80062fa:	d9f6      	bls.n	80062ea <HAL_RCC_OscConfig+0x2f6>
 80062fc:	e6bd      	b.n	800607a <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80062fe:	2801      	cmp	r0, #1
 8006300:	f43f aebc 	beq.w	800607c <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8006304:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006306:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006308:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800630c:	4291      	cmp	r1, r2
 800630e:	f47f ae9e 	bne.w	800604e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006312:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006314:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006318:	428a      	cmp	r2, r1
 800631a:	f47f ae98 	bne.w	800604e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800631e:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006320:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006324:	401a      	ands	r2, r3
 8006326:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800632a:	f47f ae90 	bne.w	800604e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800632e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006330:	0852      	lsrs	r2, r2, #1
 8006332:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8006336:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006338:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800633c:	f47f ae87 	bne.w	800604e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006340:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006342:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006346:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800634a:	f47f ae80 	bne.w	800604e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800634e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006350:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006354:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 8006358:	f43f ae62 	beq.w	8006020 <HAL_RCC_OscConfig+0x2c>
 800635c:	e677      	b.n	800604e <HAL_RCC_OscConfig+0x5a>
 800635e:	bf00      	nop
 8006360:	40023800 	.word	0x40023800
 8006364:	42470000 	.word	0x42470000

08006368 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006368:	b538      	push	{r3, r4, r5, lr}
 800636a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800636c:	4604      	mov	r4, r0
 800636e:	b1c8      	cbz	r0, 80063a4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006370:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006374:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006378:	b91b      	cbnz	r3, 8006382 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800637a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800637e:	f7fb fce7 	bl	8001d50 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006382:	2302      	movs	r3, #2
 8006384:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006388:	1d21      	adds	r1, r4, #4
 800638a:	6820      	ldr	r0, [r4, #0]
 800638c:	f000 f9c6 	bl	800671c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006390:	6862      	ldr	r2, [r4, #4]
 8006392:	6820      	ldr	r0, [r4, #0]
 8006394:	4629      	mov	r1, r5
 8006396:	f000 f9fc 	bl	8006792 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800639a:	2301      	movs	r3, #1
 800639c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 80063a0:	2000      	movs	r0, #0
}
 80063a2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80063a4:	2001      	movs	r0, #1
 80063a6:	e7fc      	b.n	80063a2 <HAL_SDRAM_Init+0x3a>

080063a8 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 80063a8:	b510      	push	{r4, lr}
 80063aa:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 80063ac:	f7fb fd48 	bl	8001e40 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 80063b0:	e9d4 0100 	ldrd	r0, r1, [r4]
 80063b4:	f000 fa23 	bl	80067fe <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 80063b8:	2000      	movs	r0, #0
 80063ba:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 80063be:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 80063c2:	bd10      	pop	{r4, pc}

080063c4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80063c4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80063c6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 80063ca:	2b02      	cmp	r3, #2
{
 80063cc:	4605      	mov	r5, r0
 80063ce:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80063d0:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80063d2:	d012      	beq.n	80063fa <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80063d4:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 80063d8:	2c01      	cmp	r4, #1
 80063da:	d10f      	bne.n	80063fc <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80063dc:	2302      	movs	r3, #2
 80063de:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80063e2:	6828      	ldr	r0, [r5, #0]
 80063e4:	f000 fa1a 	bl	800681c <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80063e8:	6833      	ldr	r3, [r6, #0]
 80063ea:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80063ec:	bf06      	itte	eq
 80063ee:	2305      	moveq	r3, #5
 80063f0:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 80063f4:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80063f8:	2000      	movs	r0, #0
}
 80063fa:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 80063fc:	2001      	movs	r0, #1
 80063fe:	e7fc      	b.n	80063fa <HAL_SDRAM_SendCommand+0x36>

08006400 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006400:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006402:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006406:	2b02      	cmp	r3, #2
{
 8006408:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800640a:	b2d8      	uxtb	r0, r3
 800640c:	d00d      	beq.n	800642a <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800640e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8006412:	2b01      	cmp	r3, #1
 8006414:	b2dd      	uxtb	r5, r3
 8006416:	d109      	bne.n	800642c <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006418:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800641a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800641c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006420:	f000 fa22 	bl	8006868 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006424:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006428:	2000      	movs	r0, #0
}
 800642a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800642c:	2001      	movs	r0, #1
 800642e:	e7fc      	b.n	800642a <HAL_SDRAM_ProgramRefreshRate+0x2a>

08006430 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006430:	4770      	bx	lr
	...

08006434 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006434:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006438:	2b01      	cmp	r3, #1
 800643a:	d130      	bne.n	800649e <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800643c:	2302      	movs	r3, #2
 800643e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006442:	6803      	ldr	r3, [r0, #0]
 8006444:	68da      	ldr	r2, [r3, #12]
 8006446:	f042 0201 	orr.w	r2, r2, #1
 800644a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800644c:	4a15      	ldr	r2, [pc, #84]	; (80064a4 <HAL_TIM_Base_Start_IT+0x70>)
 800644e:	4293      	cmp	r3, r2
 8006450:	d01a      	beq.n	8006488 <HAL_TIM_Base_Start_IT+0x54>
 8006452:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006456:	d017      	beq.n	8006488 <HAL_TIM_Base_Start_IT+0x54>
 8006458:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800645c:	4293      	cmp	r3, r2
 800645e:	d013      	beq.n	8006488 <HAL_TIM_Base_Start_IT+0x54>
 8006460:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006464:	4293      	cmp	r3, r2
 8006466:	d00f      	beq.n	8006488 <HAL_TIM_Base_Start_IT+0x54>
 8006468:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800646c:	4293      	cmp	r3, r2
 800646e:	d00b      	beq.n	8006488 <HAL_TIM_Base_Start_IT+0x54>
 8006470:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006474:	4293      	cmp	r3, r2
 8006476:	d007      	beq.n	8006488 <HAL_TIM_Base_Start_IT+0x54>
 8006478:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800647c:	4293      	cmp	r3, r2
 800647e:	d003      	beq.n	8006488 <HAL_TIM_Base_Start_IT+0x54>
 8006480:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8006484:	4293      	cmp	r3, r2
 8006486:	d104      	bne.n	8006492 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006488:	689a      	ldr	r2, [r3, #8]
 800648a:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800648e:	2a06      	cmp	r2, #6
 8006490:	d003      	beq.n	800649a <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006492:	681a      	ldr	r2, [r3, #0]
 8006494:	f042 0201 	orr.w	r2, r2, #1
 8006498:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800649a:	2000      	movs	r0, #0
}
 800649c:	4770      	bx	lr
    return HAL_ERROR;
 800649e:	2001      	movs	r0, #1
 80064a0:	4770      	bx	lr
 80064a2:	bf00      	nop
 80064a4:	40010000 	.word	0x40010000

080064a8 <HAL_TIM_OC_DelayElapsedCallback>:
 80064a8:	4770      	bx	lr

080064aa <HAL_TIM_IC_CaptureCallback>:
 80064aa:	4770      	bx	lr

080064ac <HAL_TIM_PWM_PulseFinishedCallback>:
 80064ac:	4770      	bx	lr

080064ae <HAL_TIM_TriggerCallback>:
 80064ae:	4770      	bx	lr

080064b0 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80064b0:	6803      	ldr	r3, [r0, #0]
 80064b2:	691a      	ldr	r2, [r3, #16]
 80064b4:	0791      	lsls	r1, r2, #30
{
 80064b6:	b510      	push	{r4, lr}
 80064b8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80064ba:	d50e      	bpl.n	80064da <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80064bc:	68da      	ldr	r2, [r3, #12]
 80064be:	0792      	lsls	r2, r2, #30
 80064c0:	d50b      	bpl.n	80064da <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80064c2:	f06f 0202 	mvn.w	r2, #2
 80064c6:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80064c8:	2201      	movs	r2, #1
 80064ca:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80064cc:	699b      	ldr	r3, [r3, #24]
 80064ce:	079b      	lsls	r3, r3, #30
 80064d0:	d077      	beq.n	80065c2 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80064d2:	f7ff ffea 	bl	80064aa <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80064d6:	2300      	movs	r3, #0
 80064d8:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80064da:	6823      	ldr	r3, [r4, #0]
 80064dc:	691a      	ldr	r2, [r3, #16]
 80064de:	0750      	lsls	r0, r2, #29
 80064e0:	d510      	bpl.n	8006504 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80064e2:	68da      	ldr	r2, [r3, #12]
 80064e4:	0751      	lsls	r1, r2, #29
 80064e6:	d50d      	bpl.n	8006504 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80064e8:	f06f 0204 	mvn.w	r2, #4
 80064ec:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80064ee:	2202      	movs	r2, #2
 80064f0:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80064f2:	699b      	ldr	r3, [r3, #24]
 80064f4:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80064f8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80064fa:	d068      	beq.n	80065ce <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80064fc:	f7ff ffd5 	bl	80064aa <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006500:	2300      	movs	r3, #0
 8006502:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006504:	6823      	ldr	r3, [r4, #0]
 8006506:	691a      	ldr	r2, [r3, #16]
 8006508:	0712      	lsls	r2, r2, #28
 800650a:	d50f      	bpl.n	800652c <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800650c:	68da      	ldr	r2, [r3, #12]
 800650e:	0710      	lsls	r0, r2, #28
 8006510:	d50c      	bpl.n	800652c <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006512:	f06f 0208 	mvn.w	r2, #8
 8006516:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006518:	2204      	movs	r2, #4
 800651a:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800651c:	69db      	ldr	r3, [r3, #28]
 800651e:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006520:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006522:	d05a      	beq.n	80065da <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006524:	f7ff ffc1 	bl	80064aa <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006528:	2300      	movs	r3, #0
 800652a:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800652c:	6823      	ldr	r3, [r4, #0]
 800652e:	691a      	ldr	r2, [r3, #16]
 8006530:	06d2      	lsls	r2, r2, #27
 8006532:	d510      	bpl.n	8006556 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006534:	68da      	ldr	r2, [r3, #12]
 8006536:	06d0      	lsls	r0, r2, #27
 8006538:	d50d      	bpl.n	8006556 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800653a:	f06f 0210 	mvn.w	r2, #16
 800653e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006540:	2208      	movs	r2, #8
 8006542:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006544:	69db      	ldr	r3, [r3, #28]
 8006546:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800654a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800654c:	d04b      	beq.n	80065e6 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800654e:	f7ff ffac 	bl	80064aa <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006552:	2300      	movs	r3, #0
 8006554:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006556:	6823      	ldr	r3, [r4, #0]
 8006558:	691a      	ldr	r2, [r3, #16]
 800655a:	07d1      	lsls	r1, r2, #31
 800655c:	d508      	bpl.n	8006570 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800655e:	68da      	ldr	r2, [r3, #12]
 8006560:	07d2      	lsls	r2, r2, #31
 8006562:	d505      	bpl.n	8006570 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006564:	f06f 0201 	mvn.w	r2, #1
 8006568:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800656a:	4620      	mov	r0, r4
 800656c:	f7fb fa42 	bl	80019f4 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006570:	6823      	ldr	r3, [r4, #0]
 8006572:	691a      	ldr	r2, [r3, #16]
 8006574:	0610      	lsls	r0, r2, #24
 8006576:	d508      	bpl.n	800658a <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006578:	68da      	ldr	r2, [r3, #12]
 800657a:	0611      	lsls	r1, r2, #24
 800657c:	d505      	bpl.n	800658a <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800657e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006582:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006584:	4620      	mov	r0, r4
 8006586:	f000 f8c8 	bl	800671a <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800658a:	6823      	ldr	r3, [r4, #0]
 800658c:	691a      	ldr	r2, [r3, #16]
 800658e:	0652      	lsls	r2, r2, #25
 8006590:	d508      	bpl.n	80065a4 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006592:	68da      	ldr	r2, [r3, #12]
 8006594:	0650      	lsls	r0, r2, #25
 8006596:	d505      	bpl.n	80065a4 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006598:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800659c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800659e:	4620      	mov	r0, r4
 80065a0:	f7ff ff85 	bl	80064ae <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80065a4:	6823      	ldr	r3, [r4, #0]
 80065a6:	691a      	ldr	r2, [r3, #16]
 80065a8:	0691      	lsls	r1, r2, #26
 80065aa:	d522      	bpl.n	80065f2 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80065ac:	68da      	ldr	r2, [r3, #12]
 80065ae:	0692      	lsls	r2, r2, #26
 80065b0:	d51f      	bpl.n	80065f2 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80065b2:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80065b6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80065b8:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80065ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80065be:	f000 b8ab 	b.w	8006718 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80065c2:	f7ff ff71 	bl	80064a8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80065c6:	4620      	mov	r0, r4
 80065c8:	f7ff ff70 	bl	80064ac <HAL_TIM_PWM_PulseFinishedCallback>
 80065cc:	e783      	b.n	80064d6 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80065ce:	f7ff ff6b 	bl	80064a8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80065d2:	4620      	mov	r0, r4
 80065d4:	f7ff ff6a 	bl	80064ac <HAL_TIM_PWM_PulseFinishedCallback>
 80065d8:	e792      	b.n	8006500 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80065da:	f7ff ff65 	bl	80064a8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80065de:	4620      	mov	r0, r4
 80065e0:	f7ff ff64 	bl	80064ac <HAL_TIM_PWM_PulseFinishedCallback>
 80065e4:	e7a0      	b.n	8006528 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80065e6:	f7ff ff5f 	bl	80064a8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80065ea:	4620      	mov	r0, r4
 80065ec:	f7ff ff5e 	bl	80064ac <HAL_TIM_PWM_PulseFinishedCallback>
 80065f0:	e7af      	b.n	8006552 <HAL_TIM_IRQHandler+0xa2>
}
 80065f2:	bd10      	pop	{r4, pc}

080065f4 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80065f4:	4a30      	ldr	r2, [pc, #192]	; (80066b8 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80065f6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80065f8:	4290      	cmp	r0, r2
 80065fa:	d012      	beq.n	8006622 <TIM_Base_SetConfig+0x2e>
 80065fc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006600:	d00f      	beq.n	8006622 <TIM_Base_SetConfig+0x2e>
 8006602:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006606:	4290      	cmp	r0, r2
 8006608:	d00b      	beq.n	8006622 <TIM_Base_SetConfig+0x2e>
 800660a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800660e:	4290      	cmp	r0, r2
 8006610:	d007      	beq.n	8006622 <TIM_Base_SetConfig+0x2e>
 8006612:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006616:	4290      	cmp	r0, r2
 8006618:	d003      	beq.n	8006622 <TIM_Base_SetConfig+0x2e>
 800661a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800661e:	4290      	cmp	r0, r2
 8006620:	d119      	bne.n	8006656 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006622:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006624:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8006628:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800662a:	4a23      	ldr	r2, [pc, #140]	; (80066b8 <TIM_Base_SetConfig+0xc4>)
 800662c:	4290      	cmp	r0, r2
 800662e:	d029      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 8006630:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006634:	d026      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 8006636:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800663a:	4290      	cmp	r0, r2
 800663c:	d022      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 800663e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006642:	4290      	cmp	r0, r2
 8006644:	d01e      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 8006646:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800664a:	4290      	cmp	r0, r2
 800664c:	d01a      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 800664e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006652:	4290      	cmp	r0, r2
 8006654:	d016      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 8006656:	4a19      	ldr	r2, [pc, #100]	; (80066bc <TIM_Base_SetConfig+0xc8>)
 8006658:	4290      	cmp	r0, r2
 800665a:	d013      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 800665c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006660:	4290      	cmp	r0, r2
 8006662:	d00f      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 8006664:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006668:	4290      	cmp	r0, r2
 800666a:	d00b      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 800666c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006670:	4290      	cmp	r0, r2
 8006672:	d007      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 8006674:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006678:	4290      	cmp	r0, r2
 800667a:	d003      	beq.n	8006684 <TIM_Base_SetConfig+0x90>
 800667c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006680:	4290      	cmp	r0, r2
 8006682:	d103      	bne.n	800668c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006684:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006686:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800668a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800668c:	694a      	ldr	r2, [r1, #20]
 800668e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006692:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006694:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006696:	688b      	ldr	r3, [r1, #8]
 8006698:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800669a:	680b      	ldr	r3, [r1, #0]
 800669c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800669e:	4b06      	ldr	r3, [pc, #24]	; (80066b8 <TIM_Base_SetConfig+0xc4>)
 80066a0:	4298      	cmp	r0, r3
 80066a2:	d003      	beq.n	80066ac <TIM_Base_SetConfig+0xb8>
 80066a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80066a8:	4298      	cmp	r0, r3
 80066aa:	d101      	bne.n	80066b0 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80066ac:	690b      	ldr	r3, [r1, #16]
 80066ae:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80066b0:	2301      	movs	r3, #1
 80066b2:	6143      	str	r3, [r0, #20]
}
 80066b4:	4770      	bx	lr
 80066b6:	bf00      	nop
 80066b8:	40010000 	.word	0x40010000
 80066bc:	40014000 	.word	0x40014000

080066c0 <HAL_TIM_Base_Init>:
{
 80066c0:	b510      	push	{r4, lr}
  if (htim == NULL)
 80066c2:	4604      	mov	r4, r0
 80066c4:	b330      	cbz	r0, 8006714 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 80066c6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80066ca:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80066ce:	b91b      	cbnz	r3, 80066d8 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80066d0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80066d4:	f7ff feac 	bl	8006430 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80066d8:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80066da:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80066dc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80066e0:	1d21      	adds	r1, r4, #4
 80066e2:	f7ff ff87 	bl	80065f4 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80066e6:	2301      	movs	r3, #1
 80066e8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 80066ec:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80066ee:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80066f2:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80066f6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80066fa:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80066fe:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006702:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006706:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800670a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800670e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8006712:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006714:	2001      	movs	r0, #1
 8006716:	e7fc      	b.n	8006712 <HAL_TIM_Base_Init+0x52>

08006718 <HAL_TIMEx_CommutCallback>:
 8006718:	4770      	bx	lr

0800671a <HAL_TIMEx_BreakCallback>:
 800671a:	4770      	bx	lr

0800671c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800671c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006720:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006724:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006726:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 800672a:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800672e:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8006732:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 8006736:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006738:	b9a2      	cbnz	r2, 8006764 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800673a:	ea43 0209 	orr.w	r2, r3, r9
 800673e:	432a      	orrs	r2, r5
 8006740:	ea42 0308 	orr.w	r3, r2, r8
 8006744:	6801      	ldr	r1, [r0, #0]
 8006746:	ea43 030e 	orr.w	r3, r3, lr
 800674a:	ea43 030c 	orr.w	r3, r3, ip
 800674e:	433b      	orrs	r3, r7
 8006750:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8006754:	4333      	orrs	r3, r6
 8006756:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 800675a:	430b      	orrs	r3, r1
 800675c:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800675e:	2000      	movs	r0, #0
 8006760:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006764:	6802      	ldr	r2, [r0, #0]
 8006766:	ea43 0309 	orr.w	r3, r3, r9
 800676a:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 800676e:	4313      	orrs	r3, r2
 8006770:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8006772:	ea45 0308 	orr.w	r3, r5, r8
 8006776:	6842      	ldr	r2, [r0, #4]
 8006778:	ea43 030e 	orr.w	r3, r3, lr
 800677c:	ea43 030c 	orr.w	r3, r3, ip
 8006780:	433b      	orrs	r3, r7
 8006782:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8006786:	4333      	orrs	r3, r6
 8006788:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800678c:	4313      	orrs	r3, r2
 800678e:	6043      	str	r3, [r0, #4]
 8006790:	e7e5      	b.n	800675e <FMC_SDRAM_Init+0x42>

08006792 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006792:	68cb      	ldr	r3, [r1, #12]
 8006794:	f103 3cff 	add.w	ip, r3, #4294967295
 8006798:	694b      	ldr	r3, [r1, #20]
{
 800679a:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800679c:	680f      	ldr	r7, [r1, #0]
 800679e:	684c      	ldr	r4, [r1, #4]
 80067a0:	688e      	ldr	r6, [r1, #8]
 80067a2:	690d      	ldr	r5, [r1, #16]
 80067a4:	6989      	ldr	r1, [r1, #24]
 80067a6:	3b01      	subs	r3, #1
 80067a8:	051b      	lsls	r3, r3, #20
 80067aa:	3c01      	subs	r4, #1
 80067ac:	3e01      	subs	r6, #1
 80067ae:	3d01      	subs	r5, #1
 80067b0:	3901      	subs	r1, #1
 80067b2:	3f01      	subs	r7, #1
 80067b4:	0124      	lsls	r4, r4, #4
 80067b6:	0236      	lsls	r6, r6, #8
 80067b8:	042d      	lsls	r5, r5, #16
 80067ba:	0609      	lsls	r1, r1, #24
 80067bc:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 80067c0:	b95a      	cbnz	r2, 80067da <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80067c2:	433b      	orrs	r3, r7
 80067c4:	4323      	orrs	r3, r4
 80067c6:	6882      	ldr	r2, [r0, #8]
 80067c8:	4333      	orrs	r3, r6
 80067ca:	432b      	orrs	r3, r5
 80067cc:	430b      	orrs	r3, r1
 80067ce:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80067d2:	4313      	orrs	r3, r2
 80067d4:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 80067d6:	2000      	movs	r0, #0
 80067d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80067da:	6882      	ldr	r2, [r0, #8]
 80067dc:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80067e0:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 80067e4:	431a      	orrs	r2, r3
 80067e6:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80067e8:	ea44 0306 	orr.w	r3, r4, r6
 80067ec:	68c2      	ldr	r2, [r0, #12]
 80067ee:	433b      	orrs	r3, r7
 80067f0:	432b      	orrs	r3, r5
 80067f2:	430b      	orrs	r3, r1
 80067f4:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80067f8:	4313      	orrs	r3, r2
 80067fa:	60c3      	str	r3, [r0, #12]
 80067fc:	e7eb      	b.n	80067d6 <FMC_SDRAM_Timing_Init+0x44>

080067fe <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 80067fe:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8006802:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8006806:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 800680a:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800680e:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8006810:	2300      	movs	r3, #0
 8006812:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8006814:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8006816:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8006818:	4618      	mov	r0, r3
 800681a:	4770      	bx	lr

0800681c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800681c:	b570      	push	{r4, r5, r6, lr}
 800681e:	4604      	mov	r4, r0
 8006820:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8006822:	6902      	ldr	r2, [r0, #16]
 8006824:	e9d1 3000 	ldrd	r3, r0, [r1]
 8006828:	4303      	orrs	r3, r0
 800682a:	68c8      	ldr	r0, [r1, #12]
 800682c:	0d92      	lsrs	r2, r2, #22
 800682e:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8006832:	0592      	lsls	r2, r2, #22
 8006834:	4313      	orrs	r3, r2
 8006836:	688a      	ldr	r2, [r1, #8]
 8006838:	3a01      	subs	r2, #1
 800683a:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800683e:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8006840:	f7fd f83a 	bl	80038b8 <HAL_GetTick>
 8006844:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006846:	69a3      	ldr	r3, [r4, #24]
 8006848:	f013 0320 	ands.w	r3, r3, #32
 800684c:	d101      	bne.n	8006852 <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800684e:	4618      	mov	r0, r3
 8006850:	e003      	b.n	800685a <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 8006852:	1c6b      	adds	r3, r5, #1
 8006854:	d0f7      	beq.n	8006846 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006856:	b90d      	cbnz	r5, 800685c <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8006858:	2003      	movs	r0, #3
}
 800685a:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800685c:	f7fd f82c 	bl	80038b8 <HAL_GetTick>
 8006860:	1b80      	subs	r0, r0, r6
 8006862:	42a8      	cmp	r0, r5
 8006864:	d9ef      	bls.n	8006846 <FMC_SDRAM_SendCommand+0x2a>
 8006866:	e7f7      	b.n	8006858 <FMC_SDRAM_SendCommand+0x3c>

08006868 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8006868:	6943      	ldr	r3, [r0, #20]
 800686a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800686e:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8006872:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006876:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8006878:	2000      	movs	r0, #0
 800687a:	4770      	bx	lr

0800687c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800687c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800687e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006882:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8006884:	f001 fe3e 	bl	8008504 <xTaskGetSchedulerState>
 8006888:	2801      	cmp	r0, #1
 800688a:	d003      	beq.n	8006894 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800688c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8006890:	f000 bbe0 	b.w	8007054 <xPortSysTickHandler>
}
 8006894:	bd08      	pop	{r3, pc}
	...

08006898 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006898:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800689c:	b92b      	cbnz	r3, 80068aa <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800689e:	4b06      	ldr	r3, [pc, #24]	; (80068b8 <osKernelInitialize+0x20>)
 80068a0:	6818      	ldr	r0, [r3, #0]
 80068a2:	b928      	cbnz	r0, 80068b0 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80068a4:	2201      	movs	r2, #1
 80068a6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80068a8:	4770      	bx	lr
    stat = osErrorISR;
 80068aa:	f06f 0005 	mvn.w	r0, #5
 80068ae:	4770      	bx	lr
    } else {
      stat = osError;
 80068b0:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80068b4:	4770      	bx	lr
 80068b6:	bf00      	nop
 80068b8:	20001998 	.word	0x20001998

080068bc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80068bc:	b510      	push	{r4, lr}
 80068be:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80068c2:	b95c      	cbnz	r4, 80068dc <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 80068c4:	4b08      	ldr	r3, [pc, #32]	; (80068e8 <osKernelStart+0x2c>)
 80068c6:	681a      	ldr	r2, [r3, #0]
 80068c8:	2a01      	cmp	r2, #1
 80068ca:	d10a      	bne.n	80068e2 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80068cc:	4a07      	ldr	r2, [pc, #28]	; (80068ec <osKernelStart+0x30>)
 80068ce:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 80068d0:	2202      	movs	r2, #2
 80068d2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80068d4:	f001 fcba 	bl	800824c <vTaskStartScheduler>
      stat = osOK;
 80068d8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 80068da:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80068dc:	f06f 0005 	mvn.w	r0, #5
 80068e0:	e7fb      	b.n	80068da <osKernelStart+0x1e>
      stat = osError;
 80068e2:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80068e6:	e7f8      	b.n	80068da <osKernelStart+0x1e>
 80068e8:	20001998 	.word	0x20001998
 80068ec:	e000ed00 	.word	0xe000ed00

080068f0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80068f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80068f2:	b087      	sub	sp, #28
 80068f4:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80068f6:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80068f8:	460b      	mov	r3, r1
  hTask = NULL;
 80068fa:	9205      	str	r2, [sp, #20]
 80068fc:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006900:	b9d2      	cbnz	r2, 8006938 <osThreadNew+0x48>
 8006902:	b1c8      	cbz	r0, 8006938 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006904:	2c00      	cmp	r4, #0
 8006906:	d02f      	beq.n	8006968 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006908:	69a5      	ldr	r5, [r4, #24]
 800690a:	2d00      	cmp	r5, #0
 800690c:	bf08      	it	eq
 800690e:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006910:	1e69      	subs	r1, r5, #1
 8006912:	2937      	cmp	r1, #55	; 0x37
 8006914:	46ac      	mov	ip, r5
 8006916:	d82b      	bhi.n	8006970 <osThreadNew+0x80>
 8006918:	6861      	ldr	r1, [r4, #4]
 800691a:	07c9      	lsls	r1, r1, #31
 800691c:	d428      	bmi.n	8006970 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800691e:	6966      	ldr	r6, [r4, #20]
 8006920:	b16e      	cbz	r6, 800693e <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006922:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006924:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8006928:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800692a:	b157      	cbz	r7, 8006942 <osThreadNew+0x52>
 800692c:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006930:	d902      	bls.n	8006938 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006932:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006934:	b104      	cbz	r4, 8006938 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006936:	b9ee      	cbnz	r6, 8006974 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006938:	9805      	ldr	r0, [sp, #20]
}
 800693a:	b007      	add	sp, #28
 800693c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800693e:	2280      	movs	r2, #128	; 0x80
 8006940:	e7f0      	b.n	8006924 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006942:	f1be 0f00 	cmp.w	lr, #0
 8006946:	d1f7      	bne.n	8006938 <osThreadNew+0x48>
      if (mem == 0) {
 8006948:	6924      	ldr	r4, [r4, #16]
 800694a:	2c00      	cmp	r4, #0
 800694c:	d1f4      	bne.n	8006938 <osThreadNew+0x48>
 800694e:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006950:	a905      	add	r1, sp, #20
 8006952:	e9cd c100 	strd	ip, r1, [sp]
 8006956:	b292      	uxth	r2, r2
 8006958:	4621      	mov	r1, r4
 800695a:	f001 faf2 	bl	8007f42 <xTaskCreate>
 800695e:	2801      	cmp	r0, #1
            hTask = NULL;
 8006960:	bf1c      	itt	ne
 8006962:	2300      	movne	r3, #0
 8006964:	9305      	strne	r3, [sp, #20]
 8006966:	e7e7      	b.n	8006938 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8006968:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800696c:	2280      	movs	r2, #128	; 0x80
 800696e:	e7ef      	b.n	8006950 <osThreadNew+0x60>
        return (NULL);
 8006970:	4610      	mov	r0, r2
 8006972:	e7e2      	b.n	800693a <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006974:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006978:	9500      	str	r5, [sp, #0]
 800697a:	f001 faaa 	bl	8007ed2 <xTaskCreateStatic>
 800697e:	9005      	str	r0, [sp, #20]
 8006980:	e7da      	b.n	8006938 <osThreadNew+0x48>

08006982 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8006982:	b510      	push	{r4, lr}
 8006984:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006988:	b924      	cbnz	r4, 8006994 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800698a:	b110      	cbz	r0, 8006992 <osDelay+0x10>
      vTaskDelay(ticks);
 800698c:	f001 fc1e 	bl	80081cc <vTaskDelay>
    stat = osOK;
 8006990:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8006992:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006994:	f06f 0005 	mvn.w	r0, #5
 8006998:	e7fb      	b.n	8006992 <osDelay+0x10>

0800699a <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800699a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800699c:	4604      	mov	r4, r0
 800699e:	460e      	mov	r6, r1
 80069a0:	4615      	mov	r5, r2
 80069a2:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80069a6:	b11a      	cbz	r2, 80069b0 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80069a8:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80069aa:	4620      	mov	r0, r4
 80069ac:	b003      	add	sp, #12
 80069ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80069b0:	2800      	cmp	r0, #0
 80069b2:	d0f9      	beq.n	80069a8 <osSemaphoreNew+0xe>
 80069b4:	4288      	cmp	r0, r1
 80069b6:	d3f7      	bcc.n	80069a8 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 80069b8:	b1e5      	cbz	r5, 80069f4 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80069ba:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 80069be:	b1bb      	cbz	r3, 80069f0 <osSemaphoreNew+0x56>
 80069c0:	2f4f      	cmp	r7, #79	; 0x4f
 80069c2:	d9f1      	bls.n	80069a8 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80069c4:	2801      	cmp	r0, #1
 80069c6:	d12a      	bne.n	8006a1e <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80069c8:	2103      	movs	r1, #3
 80069ca:	9100      	str	r1, [sp, #0]
 80069cc:	4611      	mov	r1, r2
 80069ce:	f000 fcea 	bl	80073a6 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 80069d2:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80069d4:	2800      	cmp	r0, #0
 80069d6:	d0e7      	beq.n	80069a8 <osSemaphoreNew+0xe>
 80069d8:	b1de      	cbz	r6, 8006a12 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80069da:	2300      	movs	r3, #0
 80069dc:	461a      	mov	r2, r3
 80069de:	4619      	mov	r1, r3
 80069e0:	f000 fd96 	bl	8007510 <xQueueGenericSend>
 80069e4:	2801      	cmp	r0, #1
 80069e6:	d014      	beq.n	8006a12 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 80069e8:	4620      	mov	r0, r4
 80069ea:	f001 f8d1 	bl	8007b90 <vQueueDelete>
 80069ee:	e7db      	b.n	80069a8 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80069f0:	2f00      	cmp	r7, #0
 80069f2:	d1d9      	bne.n	80069a8 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80069f4:	2c01      	cmp	r4, #1
 80069f6:	d105      	bne.n	8006a04 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 80069f8:	2203      	movs	r2, #3
 80069fa:	2100      	movs	r1, #0
 80069fc:	4620      	mov	r0, r4
 80069fe:	f000 fd20 	bl	8007442 <xQueueGenericCreate>
 8006a02:	e7e6      	b.n	80069d2 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006a04:	4620      	mov	r0, r4
 8006a06:	4631      	mov	r1, r6
 8006a08:	f000 fd64 	bl	80074d4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006a0c:	4604      	mov	r4, r0
 8006a0e:	2800      	cmp	r0, #0
 8006a10:	d0ca      	beq.n	80069a8 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8006a12:	b955      	cbnz	r5, 8006a2a <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8006a14:	4629      	mov	r1, r5
 8006a16:	4620      	mov	r0, r4
 8006a18:	f001 f894 	bl	8007b44 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006a1c:	e7c5      	b.n	80069aa <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006a1e:	461a      	mov	r2, r3
 8006a20:	f000 fd36 	bl	8007490 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006a24:	4604      	mov	r4, r0
 8006a26:	2800      	cmp	r0, #0
 8006a28:	d0be      	beq.n	80069a8 <osSemaphoreNew+0xe>
          name = attr->name;
 8006a2a:	682d      	ldr	r5, [r5, #0]
 8006a2c:	e7f2      	b.n	8006a14 <osSemaphoreNew+0x7a>

08006a2e <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006a2e:	b513      	push	{r0, r1, r4, lr}
 8006a30:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006a32:	b308      	cbz	r0, 8006a78 <osSemaphoreAcquire+0x4a>
 8006a34:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006a38:	b1b3      	cbz	r3, 8006a68 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8006a3a:	b9e9      	cbnz	r1, 8006a78 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006a3c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006a3e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006a40:	f001 f831 	bl	8007aa6 <xQueueReceiveFromISR>
 8006a44:	2801      	cmp	r0, #1
 8006a46:	d114      	bne.n	8006a72 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006a48:	9b01      	ldr	r3, [sp, #4]
 8006a4a:	b913      	cbnz	r3, 8006a52 <osSemaphoreAcquire+0x24>
  stat = osOK;
 8006a4c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006a4e:	b002      	add	sp, #8
 8006a50:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8006a52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006a56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006a5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006a5e:	f3bf 8f4f 	dsb	sy
 8006a62:	f3bf 8f6f 	isb	sy
 8006a66:	e7f1      	b.n	8006a4c <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006a68:	f000 ff5a 	bl	8007920 <xQueueSemaphoreTake>
 8006a6c:	2801      	cmp	r0, #1
 8006a6e:	d0ed      	beq.n	8006a4c <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8006a70:	b92c      	cbnz	r4, 8006a7e <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8006a72:	f06f 0002 	mvn.w	r0, #2
 8006a76:	e7ea      	b.n	8006a4e <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8006a78:	f06f 0003 	mvn.w	r0, #3
 8006a7c:	e7e7      	b.n	8006a4e <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8006a7e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006a82:	e7e4      	b.n	8006a4e <osSemaphoreAcquire+0x20>

08006a84 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006a84:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006a86:	b310      	cbz	r0, 8006ace <osSemaphoreRelease+0x4a>
 8006a88:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006a8c:	b1b3      	cbz	r3, 8006abc <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8006a8e:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006a90:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006a92:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006a94:	f000 fe51 	bl	800773a <xQueueGiveFromISR>
 8006a98:	2801      	cmp	r0, #1
 8006a9a:	d115      	bne.n	8006ac8 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8006a9c:	9b01      	ldr	r3, [sp, #4]
 8006a9e:	b913      	cbnz	r3, 8006aa6 <osSemaphoreRelease+0x22>
  stat = osOK;
 8006aa0:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8006aa2:	b002      	add	sp, #8
 8006aa4:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006aa6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006aaa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006aae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006ab2:	f3bf 8f4f 	dsb	sy
 8006ab6:	f3bf 8f6f 	isb	sy
 8006aba:	e7f1      	b.n	8006aa0 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006abc:	461a      	mov	r2, r3
 8006abe:	4619      	mov	r1, r3
 8006ac0:	f000 fd26 	bl	8007510 <xQueueGenericSend>
 8006ac4:	2801      	cmp	r0, #1
 8006ac6:	d0eb      	beq.n	8006aa0 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8006ac8:	f06f 0002 	mvn.w	r0, #2
 8006acc:	e7e9      	b.n	8006aa2 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8006ace:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006ad2:	e7e6      	b.n	8006aa2 <osSemaphoreRelease+0x1e>

08006ad4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006ad4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006ad6:	4605      	mov	r5, r0
 8006ad8:	460e      	mov	r6, r1
 8006ada:	4614      	mov	r4, r2
 8006adc:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006ae0:	b11f      	cbz	r7, 8006aea <osMessageQueueNew+0x16>
  hQueue = NULL;
 8006ae2:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006ae4:	4628      	mov	r0, r5
 8006ae6:	b003      	add	sp, #12
 8006ae8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006aea:	2800      	cmp	r0, #0
 8006aec:	d0f9      	beq.n	8006ae2 <osMessageQueueNew+0xe>
 8006aee:	2900      	cmp	r1, #0
 8006af0:	d0f7      	beq.n	8006ae2 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8006af2:	b1da      	cbz	r2, 8006b2c <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006af4:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8006af8:	b183      	cbz	r3, 8006b1c <osMessageQueueNew+0x48>
 8006afa:	2a4f      	cmp	r2, #79	; 0x4f
 8006afc:	d9f1      	bls.n	8006ae2 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006afe:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006b00:	2a00      	cmp	r2, #0
 8006b02:	d0ee      	beq.n	8006ae2 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006b04:	6966      	ldr	r6, [r4, #20]
 8006b06:	434d      	muls	r5, r1
 8006b08:	42ae      	cmp	r6, r5
 8006b0a:	d3ea      	bcc.n	8006ae2 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006b0c:	9700      	str	r7, [sp, #0]
 8006b0e:	f000 fc4a 	bl	80073a6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006b12:	4605      	mov	r5, r0
 8006b14:	2800      	cmp	r0, #0
 8006b16:	d0e4      	beq.n	8006ae2 <osMessageQueueNew+0xe>
        name = attr->name;
 8006b18:	6824      	ldr	r4, [r4, #0]
 8006b1a:	e011      	b.n	8006b40 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006b1c:	2a00      	cmp	r2, #0
 8006b1e:	d1e0      	bne.n	8006ae2 <osMessageQueueNew+0xe>
 8006b20:	6923      	ldr	r3, [r4, #16]
 8006b22:	2b00      	cmp	r3, #0
 8006b24:	d1dd      	bne.n	8006ae2 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006b26:	6963      	ldr	r3, [r4, #20]
 8006b28:	2b00      	cmp	r3, #0
 8006b2a:	d1da      	bne.n	8006ae2 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8006b2c:	4628      	mov	r0, r5
 8006b2e:	2200      	movs	r2, #0
 8006b30:	4631      	mov	r1, r6
 8006b32:	f000 fc86 	bl	8007442 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006b36:	4605      	mov	r5, r0
 8006b38:	2800      	cmp	r0, #0
 8006b3a:	d0d2      	beq.n	8006ae2 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8006b3c:	2c00      	cmp	r4, #0
 8006b3e:	d1eb      	bne.n	8006b18 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8006b40:	4621      	mov	r1, r4
 8006b42:	4628      	mov	r0, r5
 8006b44:	f000 fffe 	bl	8007b44 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006b48:	e7cc      	b.n	8006ae4 <osMessageQueueNew+0x10>

08006b4a <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006b4a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006b4c:	461c      	mov	r4, r3
 8006b4e:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006b52:	b1c6      	cbz	r6, 8006b86 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006b54:	b318      	cbz	r0, 8006b9e <osMessageQueuePut+0x54>
 8006b56:	b311      	cbz	r1, 8006b9e <osMessageQueuePut+0x54>
 8006b58:	bb0b      	cbnz	r3, 8006b9e <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006b5a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006b5c:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006b5e:	f000 fd8a 	bl	8007676 <xQueueGenericSendFromISR>
 8006b62:	2801      	cmp	r0, #1
 8006b64:	d118      	bne.n	8006b98 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006b66:	9b01      	ldr	r3, [sp, #4]
 8006b68:	b913      	cbnz	r3, 8006b70 <osMessageQueuePut+0x26>
  stat = osOK;
 8006b6a:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006b6c:	b002      	add	sp, #8
 8006b6e:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8006b70:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006b74:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006b78:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006b7c:	f3bf 8f4f 	dsb	sy
 8006b80:	f3bf 8f6f 	isb	sy
 8006b84:	e7f1      	b.n	8006b6a <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006b86:	b150      	cbz	r0, 8006b9e <osMessageQueuePut+0x54>
 8006b88:	b149      	cbz	r1, 8006b9e <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006b8a:	4633      	mov	r3, r6
 8006b8c:	4622      	mov	r2, r4
 8006b8e:	f000 fcbf 	bl	8007510 <xQueueGenericSend>
 8006b92:	2801      	cmp	r0, #1
 8006b94:	d0e9      	beq.n	8006b6a <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8006b96:	b92c      	cbnz	r4, 8006ba4 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8006b98:	f06f 0002 	mvn.w	r0, #2
 8006b9c:	e7e6      	b.n	8006b6c <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8006b9e:	f06f 0003 	mvn.w	r0, #3
 8006ba2:	e7e3      	b.n	8006b6c <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8006ba4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006ba8:	e7e0      	b.n	8006b6c <osMessageQueuePut+0x22>

08006baa <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006baa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006bac:	461c      	mov	r4, r3
 8006bae:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006bb2:	b1c3      	cbz	r3, 8006be6 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006bb4:	b310      	cbz	r0, 8006bfc <osMessageQueueGet+0x52>
 8006bb6:	b309      	cbz	r1, 8006bfc <osMessageQueueGet+0x52>
 8006bb8:	bb04      	cbnz	r4, 8006bfc <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006bba:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006bbc:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006bbe:	f000 ff72 	bl	8007aa6 <xQueueReceiveFromISR>
 8006bc2:	2801      	cmp	r0, #1
 8006bc4:	d117      	bne.n	8006bf6 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006bc6:	9b01      	ldr	r3, [sp, #4]
 8006bc8:	b913      	cbnz	r3, 8006bd0 <osMessageQueueGet+0x26>
  stat = osOK;
 8006bca:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006bcc:	b003      	add	sp, #12
 8006bce:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8006bd0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006bd4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006bd8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006bdc:	f3bf 8f4f 	dsb	sy
 8006be0:	f3bf 8f6f 	isb	sy
 8006be4:	e7f1      	b.n	8006bca <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006be6:	b148      	cbz	r0, 8006bfc <osMessageQueueGet+0x52>
 8006be8:	b141      	cbz	r1, 8006bfc <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006bea:	4622      	mov	r2, r4
 8006bec:	f000 fdf9 	bl	80077e2 <xQueueReceive>
 8006bf0:	2801      	cmp	r0, #1
 8006bf2:	d0ea      	beq.n	8006bca <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8006bf4:	b92c      	cbnz	r4, 8006c02 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8006bf6:	f06f 0002 	mvn.w	r0, #2
 8006bfa:	e7e7      	b.n	8006bcc <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8006bfc:	f06f 0003 	mvn.w	r0, #3
 8006c00:	e7e4      	b.n	8006bcc <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8006c02:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006c06:	e7e1      	b.n	8006bcc <osMessageQueueGet+0x22>

08006c08 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8006c08:	4b03      	ldr	r3, [pc, #12]	; (8006c18 <vApplicationGetIdleTaskMemory+0x10>)
 8006c0a:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8006c0c:	4b03      	ldr	r3, [pc, #12]	; (8006c1c <vApplicationGetIdleTaskMemory+0x14>)
 8006c0e:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8006c10:	2380      	movs	r3, #128	; 0x80
 8006c12:	6013      	str	r3, [r2, #0]
}
 8006c14:	4770      	bx	lr
 8006c16:	bf00      	nop
 8006c18:	20001938 	.word	0x20001938
 8006c1c:	20001738 	.word	0x20001738

08006c20 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8006c20:	4b03      	ldr	r3, [pc, #12]	; (8006c30 <vApplicationGetTimerTaskMemory+0x10>)
 8006c22:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8006c24:	4b03      	ldr	r3, [pc, #12]	; (8006c34 <vApplicationGetTimerTaskMemory+0x14>)
 8006c26:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8006c28:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006c2c:	6013      	str	r3, [r2, #0]
}
 8006c2e:	4770      	bx	lr
 8006c30:	20001d9c 	.word	0x20001d9c
 8006c34:	2000199c 	.word	0x2000199c

08006c38 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8006c38:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006c3a:	4b0f      	ldr	r3, [pc, #60]	; (8006c78 <prvInsertBlockIntoFreeList+0x40>)
 8006c3c:	461a      	mov	r2, r3
 8006c3e:	681b      	ldr	r3, [r3, #0]
 8006c40:	4283      	cmp	r3, r0
 8006c42:	d3fb      	bcc.n	8006c3c <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8006c44:	6854      	ldr	r4, [r2, #4]
 8006c46:	1911      	adds	r1, r2, r4
 8006c48:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8006c4a:	bf01      	itttt	eq
 8006c4c:	6841      	ldreq	r1, [r0, #4]
 8006c4e:	4610      	moveq	r0, r2
 8006c50:	1909      	addeq	r1, r1, r4
 8006c52:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8006c54:	6844      	ldr	r4, [r0, #4]
 8006c56:	1901      	adds	r1, r0, r4
 8006c58:	428b      	cmp	r3, r1
 8006c5a:	d107      	bne.n	8006c6c <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8006c5c:	4907      	ldr	r1, [pc, #28]	; (8006c7c <prvInsertBlockIntoFreeList+0x44>)
 8006c5e:	6809      	ldr	r1, [r1, #0]
 8006c60:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006c62:	bf1f      	itttt	ne
 8006c64:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8006c66:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006c68:	1909      	addne	r1, r1, r4
 8006c6a:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006c6c:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8006c6e:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8006c70:	bf18      	it	ne
 8006c72:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8006c74:	bd10      	pop	{r4, pc}
 8006c76:	bf00      	nop
 8006c78:	20009e14 	.word	0x20009e14
 8006c7c:	20001dfc 	.word	0x20001dfc

08006c80 <pvPortMalloc>:
{
 8006c80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006c84:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8006c86:	f001 f989 	bl	8007f9c <vTaskSuspendAll>
		if( pxEnd == NULL )
 8006c8a:	4842      	ldr	r0, [pc, #264]	; (8006d94 <pvPortMalloc+0x114>)
 8006c8c:	4d42      	ldr	r5, [pc, #264]	; (8006d98 <pvPortMalloc+0x118>)
 8006c8e:	6803      	ldr	r3, [r0, #0]
 8006c90:	bb0b      	cbnz	r3, 8006cd6 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8006c92:	4942      	ldr	r1, [pc, #264]	; (8006d9c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8006c94:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8006c96:	bf1f      	itttt	ne
 8006c98:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006c9a:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8006c9e:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 8006ca2:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006ca4:	bf14      	ite	ne
 8006ca6:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8006ca8:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8006cac:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006cae:	4e3c      	ldr	r6, [pc, #240]	; (8006da0 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8006cb0:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006cb2:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8006cb6:	2300      	movs	r3, #0
 8006cb8:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006cba:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8006cbc:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006cc0:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006cc2:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8006cc6:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006cc8:	4a36      	ldr	r2, [pc, #216]	; (8006da4 <pvPortMalloc+0x124>)
 8006cca:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006ccc:	4a36      	ldr	r2, [pc, #216]	; (8006da8 <pvPortMalloc+0x128>)
 8006cce:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006cd0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006cd4:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8006cd6:	682f      	ldr	r7, [r5, #0]
 8006cd8:	4227      	tst	r7, r4
 8006cda:	d155      	bne.n	8006d88 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8006cdc:	2c00      	cmp	r4, #0
 8006cde:	d046      	beq.n	8006d6e <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8006ce0:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8006ce4:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8006ce6:	bf1c      	itt	ne
 8006ce8:	f023 0307 	bicne.w	r3, r3, #7
 8006cec:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8006cee:	2b00      	cmp	r3, #0
 8006cf0:	d04a      	beq.n	8006d88 <pvPortMalloc+0x108>
 8006cf2:	4c2d      	ldr	r4, [pc, #180]	; (8006da8 <pvPortMalloc+0x128>)
 8006cf4:	6826      	ldr	r6, [r4, #0]
 8006cf6:	429e      	cmp	r6, r3
 8006cf8:	d346      	bcc.n	8006d88 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8006cfa:	4a29      	ldr	r2, [pc, #164]	; (8006da0 <pvPortMalloc+0x120>)
 8006cfc:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8006cfe:	6869      	ldr	r1, [r5, #4]
 8006d00:	4299      	cmp	r1, r3
 8006d02:	d204      	bcs.n	8006d0e <pvPortMalloc+0x8e>
 8006d04:	f8d5 c000 	ldr.w	ip, [r5]
 8006d08:	f1bc 0f00 	cmp.w	ip, #0
 8006d0c:	d115      	bne.n	8006d3a <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8006d0e:	6800      	ldr	r0, [r0, #0]
 8006d10:	42a8      	cmp	r0, r5
 8006d12:	d039      	beq.n	8006d88 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006d14:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006d16:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006d18:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006d1c:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006d1e:	2910      	cmp	r1, #16
 8006d20:	d912      	bls.n	8006d48 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8006d22:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8006d24:	0742      	lsls	r2, r0, #29
 8006d26:	d00b      	beq.n	8006d40 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8006d28:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d2c:	f383 8811 	msr	BASEPRI, r3
 8006d30:	f3bf 8f6f 	isb	sy
 8006d34:	f3bf 8f4f 	dsb	sy
 8006d38:	e7fe      	b.n	8006d38 <pvPortMalloc+0xb8>
 8006d3a:	462a      	mov	r2, r5
 8006d3c:	4665      	mov	r5, ip
 8006d3e:	e7de      	b.n	8006cfe <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8006d40:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8006d42:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8006d44:	f7ff ff78 	bl	8006c38 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006d48:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006d4a:	4916      	ldr	r1, [pc, #88]	; (8006da4 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 8006d4c:	4a17      	ldr	r2, [pc, #92]	; (8006dac <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006d4e:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006d50:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006d52:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8006d54:	2300      	movs	r3, #0
 8006d56:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8006d58:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006d5a:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006d5c:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8006d5e:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8006d62:	bf38      	it	cc
 8006d64:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006d66:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006d6a:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8006d6c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8006d6e:	f001 f9b9 	bl	80080e4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8006d72:	0763      	lsls	r3, r4, #29
 8006d74:	d00a      	beq.n	8006d8c <pvPortMalloc+0x10c>
 8006d76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d7a:	f383 8811 	msr	BASEPRI, r3
 8006d7e:	f3bf 8f6f 	isb	sy
 8006d82:	f3bf 8f4f 	dsb	sy
 8006d86:	e7fe      	b.n	8006d86 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8006d88:	2400      	movs	r4, #0
 8006d8a:	e7f0      	b.n	8006d6e <pvPortMalloc+0xee>
}
 8006d8c:	4620      	mov	r0, r4
 8006d8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006d92:	bf00      	nop
 8006d94:	20001dfc 	.word	0x20001dfc
 8006d98:	20009e00 	.word	0x20009e00
 8006d9c:	20001e00 	.word	0x20001e00
 8006da0:	20009e14 	.word	0x20009e14
 8006da4:	20009e08 	.word	0x20009e08
 8006da8:	20009e04 	.word	0x20009e04
 8006dac:	20009e0c 	.word	0x20009e0c

08006db0 <vPortFree>:
{
 8006db0:	b510      	push	{r4, lr}
	if( pv != NULL )
 8006db2:	4604      	mov	r4, r0
 8006db4:	b390      	cbz	r0, 8006e1c <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8006db6:	4a1a      	ldr	r2, [pc, #104]	; (8006e20 <vPortFree+0x70>)
 8006db8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8006dbc:	6812      	ldr	r2, [r2, #0]
 8006dbe:	4213      	tst	r3, r2
 8006dc0:	d108      	bne.n	8006dd4 <vPortFree+0x24>
 8006dc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006dc6:	f383 8811 	msr	BASEPRI, r3
 8006dca:	f3bf 8f6f 	isb	sy
 8006dce:	f3bf 8f4f 	dsb	sy
 8006dd2:	e7fe      	b.n	8006dd2 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8006dd4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8006dd8:	b141      	cbz	r1, 8006dec <vPortFree+0x3c>
 8006dda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006dde:	f383 8811 	msr	BASEPRI, r3
 8006de2:	f3bf 8f6f 	isb	sy
 8006de6:	f3bf 8f4f 	dsb	sy
 8006dea:	e7fe      	b.n	8006dea <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8006dec:	ea23 0302 	bic.w	r3, r3, r2
 8006df0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8006df4:	f001 f8d2 	bl	8007f9c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006df8:	4a0a      	ldr	r2, [pc, #40]	; (8006e24 <vPortFree+0x74>)
 8006dfa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8006dfe:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006e00:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006e04:	440b      	add	r3, r1
 8006e06:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006e08:	f7ff ff16 	bl	8006c38 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8006e0c:	4a06      	ldr	r2, [pc, #24]	; (8006e28 <vPortFree+0x78>)
 8006e0e:	6813      	ldr	r3, [r2, #0]
}
 8006e10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8006e14:	3301      	adds	r3, #1
 8006e16:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8006e18:	f001 b964 	b.w	80080e4 <xTaskResumeAll>
}
 8006e1c:	bd10      	pop	{r4, pc}
 8006e1e:	bf00      	nop
 8006e20:	20009e00 	.word	0x20009e00
 8006e24:	20009e04 	.word	0x20009e04
 8006e28:	20009e10 	.word	0x20009e10

08006e2c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006e2c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8006e30:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006e34:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006e38:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006e3a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8006e3c:	2300      	movs	r3, #0
 8006e3e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8006e40:	4770      	bx	lr

08006e42 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8006e42:	2300      	movs	r3, #0
 8006e44:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8006e46:	4770      	bx	lr

08006e48 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8006e48:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8006e4a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8006e4c:	689a      	ldr	r2, [r3, #8]
 8006e4e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8006e50:	689a      	ldr	r2, [r3, #8]
 8006e52:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8006e54:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006e56:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006e58:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006e5a:	3301      	adds	r3, #1
 8006e5c:	6003      	str	r3, [r0, #0]
}
 8006e5e:	4770      	bx	lr

08006e60 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8006e60:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8006e62:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8006e64:	1c63      	adds	r3, r4, #1
 8006e66:	d10a      	bne.n	8006e7e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8006e68:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8006e6a:	685a      	ldr	r2, [r3, #4]
 8006e6c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8006e6e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8006e70:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8006e72:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006e74:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006e76:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006e78:	3301      	adds	r3, #1
 8006e7a:	6003      	str	r3, [r0, #0]
}
 8006e7c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8006e7e:	f100 0208 	add.w	r2, r0, #8
 8006e82:	4613      	mov	r3, r2
 8006e84:	6852      	ldr	r2, [r2, #4]
 8006e86:	6815      	ldr	r5, [r2, #0]
 8006e88:	42a5      	cmp	r5, r4
 8006e8a:	d9fa      	bls.n	8006e82 <vListInsert+0x22>
 8006e8c:	e7ed      	b.n	8006e6a <vListInsert+0xa>

08006e8e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006e8e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8006e92:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006e94:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8006e96:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8006e98:	6859      	ldr	r1, [r3, #4]
 8006e9a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8006e9c:	bf08      	it	eq
 8006e9e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8006ea0:	2200      	movs	r2, #0
 8006ea2:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8006ea4:	681a      	ldr	r2, [r3, #0]
 8006ea6:	3a01      	subs	r2, #1
 8006ea8:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8006eaa:	6818      	ldr	r0, [r3, #0]
}
 8006eac:	4770      	bx	lr
	...

08006eb0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8006eb0:	4808      	ldr	r0, [pc, #32]	; (8006ed4 <prvPortStartFirstTask+0x24>)
 8006eb2:	6800      	ldr	r0, [r0, #0]
 8006eb4:	6800      	ldr	r0, [r0, #0]
 8006eb6:	f380 8808 	msr	MSP, r0
 8006eba:	f04f 0000 	mov.w	r0, #0
 8006ebe:	f380 8814 	msr	CONTROL, r0
 8006ec2:	b662      	cpsie	i
 8006ec4:	b661      	cpsie	f
 8006ec6:	f3bf 8f4f 	dsb	sy
 8006eca:	f3bf 8f6f 	isb	sy
 8006ece:	df00      	svc	0
 8006ed0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8006ed2:	0000      	.short	0x0000
 8006ed4:	e000ed08 	.word	0xe000ed08

08006ed8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8006ed8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8006ee8 <vPortEnableVFP+0x10>
 8006edc:	6801      	ldr	r1, [r0, #0]
 8006ede:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006ee2:	6001      	str	r1, [r0, #0]
 8006ee4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8006ee6:	0000      	.short	0x0000
 8006ee8:	e000ed88 	.word	0xe000ed88

08006eec <prvTaskExitError>:
{
 8006eec:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8006eee:	2300      	movs	r3, #0
 8006ef0:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8006ef2:	4b0d      	ldr	r3, [pc, #52]	; (8006f28 <prvTaskExitError+0x3c>)
 8006ef4:	681b      	ldr	r3, [r3, #0]
 8006ef6:	3301      	adds	r3, #1
 8006ef8:	d008      	beq.n	8006f0c <prvTaskExitError+0x20>
 8006efa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006efe:	f383 8811 	msr	BASEPRI, r3
 8006f02:	f3bf 8f6f 	isb	sy
 8006f06:	f3bf 8f4f 	dsb	sy
 8006f0a:	e7fe      	b.n	8006f0a <prvTaskExitError+0x1e>
 8006f0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f10:	f383 8811 	msr	BASEPRI, r3
 8006f14:	f3bf 8f6f 	isb	sy
 8006f18:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8006f1c:	9b01      	ldr	r3, [sp, #4]
 8006f1e:	2b00      	cmp	r3, #0
 8006f20:	d0fc      	beq.n	8006f1c <prvTaskExitError+0x30>
}
 8006f22:	b002      	add	sp, #8
 8006f24:	4770      	bx	lr
 8006f26:	bf00      	nop
 8006f28:	2000005c 	.word	0x2000005c

08006f2c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8006f2c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8006f30:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8006f34:	4b07      	ldr	r3, [pc, #28]	; (8006f54 <pxPortInitialiseStack+0x28>)
 8006f36:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006f3a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8006f3e:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006f42:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8006f46:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8006f4a:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8006f4e:	3844      	subs	r0, #68	; 0x44
 8006f50:	4770      	bx	lr
 8006f52:	bf00      	nop
 8006f54:	08006eed 	.word	0x08006eed
	...

08006f60 <SVC_Handler>:
	__asm volatile (
 8006f60:	4b07      	ldr	r3, [pc, #28]	; (8006f80 <pxCurrentTCBConst2>)
 8006f62:	6819      	ldr	r1, [r3, #0]
 8006f64:	6808      	ldr	r0, [r1, #0]
 8006f66:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f6a:	f380 8809 	msr	PSP, r0
 8006f6e:	f3bf 8f6f 	isb	sy
 8006f72:	f04f 0000 	mov.w	r0, #0
 8006f76:	f380 8811 	msr	BASEPRI, r0
 8006f7a:	4770      	bx	lr
 8006f7c:	f3af 8000 	nop.w

08006f80 <pxCurrentTCBConst2>:
 8006f80:	20009e64 	.word	0x20009e64

08006f84 <vPortEnterCritical>:
 8006f84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f88:	f383 8811 	msr	BASEPRI, r3
 8006f8c:	f3bf 8f6f 	isb	sy
 8006f90:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8006f94:	4a0a      	ldr	r2, [pc, #40]	; (8006fc0 <vPortEnterCritical+0x3c>)
 8006f96:	6813      	ldr	r3, [r2, #0]
 8006f98:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8006f9a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8006f9c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8006f9e:	d10e      	bne.n	8006fbe <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8006fa0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006fa4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8006fa8:	b2db      	uxtb	r3, r3
 8006faa:	b143      	cbz	r3, 8006fbe <vPortEnterCritical+0x3a>
 8006fac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fb0:	f383 8811 	msr	BASEPRI, r3
 8006fb4:	f3bf 8f6f 	isb	sy
 8006fb8:	f3bf 8f4f 	dsb	sy
 8006fbc:	e7fe      	b.n	8006fbc <vPortEnterCritical+0x38>
}
 8006fbe:	4770      	bx	lr
 8006fc0:	2000005c 	.word	0x2000005c

08006fc4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8006fc4:	4a08      	ldr	r2, [pc, #32]	; (8006fe8 <vPortExitCritical+0x24>)
 8006fc6:	6813      	ldr	r3, [r2, #0]
 8006fc8:	b943      	cbnz	r3, 8006fdc <vPortExitCritical+0x18>
 8006fca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fce:	f383 8811 	msr	BASEPRI, r3
 8006fd2:	f3bf 8f6f 	isb	sy
 8006fd6:	f3bf 8f4f 	dsb	sy
 8006fda:	e7fe      	b.n	8006fda <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8006fdc:	3b01      	subs	r3, #1
 8006fde:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8006fe0:	b90b      	cbnz	r3, 8006fe6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8006fe2:	f383 8811 	msr	BASEPRI, r3
}
 8006fe6:	4770      	bx	lr
 8006fe8:	2000005c 	.word	0x2000005c
 8006fec:	00000000 	.word	0x00000000

08006ff0 <PendSV_Handler>:
	__asm volatile
 8006ff0:	f3ef 8009 	mrs	r0, PSP
 8006ff4:	f3bf 8f6f 	isb	sy
 8006ff8:	4b15      	ldr	r3, [pc, #84]	; (8007050 <pxCurrentTCBConst>)
 8006ffa:	681a      	ldr	r2, [r3, #0]
 8006ffc:	f01e 0f10 	tst.w	lr, #16
 8007000:	bf08      	it	eq
 8007002:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007006:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800700a:	6010      	str	r0, [r2, #0]
 800700c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007010:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007014:	f380 8811 	msr	BASEPRI, r0
 8007018:	f3bf 8f4f 	dsb	sy
 800701c:	f3bf 8f6f 	isb	sy
 8007020:	f001 f962 	bl	80082e8 <vTaskSwitchContext>
 8007024:	f04f 0000 	mov.w	r0, #0
 8007028:	f380 8811 	msr	BASEPRI, r0
 800702c:	bc09      	pop	{r0, r3}
 800702e:	6819      	ldr	r1, [r3, #0]
 8007030:	6808      	ldr	r0, [r1, #0]
 8007032:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007036:	f01e 0f10 	tst.w	lr, #16
 800703a:	bf08      	it	eq
 800703c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007040:	f380 8809 	msr	PSP, r0
 8007044:	f3bf 8f6f 	isb	sy
 8007048:	4770      	bx	lr
 800704a:	bf00      	nop
 800704c:	f3af 8000 	nop.w

08007050 <pxCurrentTCBConst>:
 8007050:	20009e64 	.word	0x20009e64

08007054 <xPortSysTickHandler>:
{
 8007054:	b508      	push	{r3, lr}
	__asm volatile
 8007056:	f04f 0350 	mov.w	r3, #80	; 0x50
 800705a:	f383 8811 	msr	BASEPRI, r3
 800705e:	f3bf 8f6f 	isb	sy
 8007062:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007066:	f000 ffa7 	bl	8007fb8 <xTaskIncrementTick>
 800706a:	b128      	cbz	r0, 8007078 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800706c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007070:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007074:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8007078:	2300      	movs	r3, #0
 800707a:	f383 8811 	msr	BASEPRI, r3
}
 800707e:	bd08      	pop	{r3, pc}

08007080 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007080:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8007084:	2300      	movs	r3, #0
 8007086:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007088:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800708a:	4b05      	ldr	r3, [pc, #20]	; (80070a0 <vPortSetupTimerInterrupt+0x20>)
 800708c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007090:	681b      	ldr	r3, [r3, #0]
 8007092:	fbb3 f3f1 	udiv	r3, r3, r1
 8007096:	3b01      	subs	r3, #1
 8007098:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800709a:	2307      	movs	r3, #7
 800709c:	6113      	str	r3, [r2, #16]
}
 800709e:	4770      	bx	lr
 80070a0:	20000050 	.word	0x20000050

080070a4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80070a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 80070a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80070aa:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 80070ae:	4a3a      	ldr	r2, [pc, #232]	; (8007198 <xPortStartScheduler+0xf4>)
 80070b0:	4291      	cmp	r1, r2
 80070b2:	d108      	bne.n	80070c6 <xPortStartScheduler+0x22>
	__asm volatile
 80070b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070b8:	f383 8811 	msr	BASEPRI, r3
 80070bc:	f3bf 8f6f 	isb	sy
 80070c0:	f3bf 8f4f 	dsb	sy
 80070c4:	e7fe      	b.n	80070c4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80070c6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 80070ca:	4b34      	ldr	r3, [pc, #208]	; (800719c <xPortStartScheduler+0xf8>)
 80070cc:	429a      	cmp	r2, r3
 80070ce:	d108      	bne.n	80070e2 <xPortStartScheduler+0x3e>
 80070d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070d4:	f383 8811 	msr	BASEPRI, r3
 80070d8:	f3bf 8f6f 	isb	sy
 80070dc:	f3bf 8f4f 	dsb	sy
 80070e0:	e7fe      	b.n	80070e0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80070e2:	4b2f      	ldr	r3, [pc, #188]	; (80071a0 <xPortStartScheduler+0xfc>)
 80070e4:	781a      	ldrb	r2, [r3, #0]
 80070e6:	b2d2      	uxtb	r2, r2
 80070e8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80070ea:	22ff      	movs	r2, #255	; 0xff
 80070ec:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80070ee:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80070f0:	4a2c      	ldr	r2, [pc, #176]	; (80071a4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80070f2:	b2db      	uxtb	r3, r3
 80070f4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80070f8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80070fc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007100:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007102:	4a29      	ldr	r2, [pc, #164]	; (80071a8 <xPortStartScheduler+0x104>)
 8007104:	2307      	movs	r3, #7
 8007106:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007108:	2100      	movs	r1, #0
 800710a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800710e:	0600      	lsls	r0, r0, #24
 8007110:	f103 34ff 	add.w	r4, r3, #4294967295
 8007114:	d40c      	bmi.n	8007130 <xPortStartScheduler+0x8c>
 8007116:	b111      	cbz	r1, 800711e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007118:	2b03      	cmp	r3, #3
 800711a:	6013      	str	r3, [r2, #0]
 800711c:	d011      	beq.n	8007142 <xPortStartScheduler+0x9e>
 800711e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007122:	f383 8811 	msr	BASEPRI, r3
 8007126:	f3bf 8f6f 	isb	sy
 800712a:	f3bf 8f4f 	dsb	sy
 800712e:	e7fe      	b.n	800712e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007130:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007134:	005b      	lsls	r3, r3, #1
 8007136:	b2db      	uxtb	r3, r3
 8007138:	f88d 3003 	strb.w	r3, [sp, #3]
 800713c:	2101      	movs	r1, #1
 800713e:	4623      	mov	r3, r4
 8007140:	e7e3      	b.n	800710a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007142:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007146:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007148:	9b01      	ldr	r3, [sp, #4]
 800714a:	4a15      	ldr	r2, [pc, #84]	; (80071a0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800714c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007150:	b2db      	uxtb	r3, r3
 8007152:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007154:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007158:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800715c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007160:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007164:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8007168:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800716c:	f7ff ff88 	bl	8007080 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007170:	4b0e      	ldr	r3, [pc, #56]	; (80071ac <xPortStartScheduler+0x108>)
 8007172:	2500      	movs	r5, #0
 8007174:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007176:	f7ff feaf 	bl	8006ed8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800717a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800717e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007182:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8007186:	f7ff fe93 	bl	8006eb0 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800718a:	f001 f8ad 	bl	80082e8 <vTaskSwitchContext>
	prvTaskExitError();
 800718e:	f7ff fead 	bl	8006eec <prvTaskExitError>
}
 8007192:	4628      	mov	r0, r5
 8007194:	b003      	add	sp, #12
 8007196:	bd30      	pop	{r4, r5, pc}
 8007198:	410fc271 	.word	0x410fc271
 800719c:	410fc270 	.word	0x410fc270
 80071a0:	e000e400 	.word	0xe000e400
 80071a4:	20009e1c 	.word	0x20009e1c
 80071a8:	20009e20 	.word	0x20009e20
 80071ac:	2000005c 	.word	0x2000005c

080071b0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80071b0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80071b4:	2b0f      	cmp	r3, #15
 80071b6:	d90e      	bls.n	80071d6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80071b8:	4a11      	ldr	r2, [pc, #68]	; (8007200 <vPortValidateInterruptPriority+0x50>)
 80071ba:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80071bc:	4a11      	ldr	r2, [pc, #68]	; (8007204 <vPortValidateInterruptPriority+0x54>)
 80071be:	7812      	ldrb	r2, [r2, #0]
 80071c0:	429a      	cmp	r2, r3
 80071c2:	d908      	bls.n	80071d6 <vPortValidateInterruptPriority+0x26>
 80071c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071c8:	f383 8811 	msr	BASEPRI, r3
 80071cc:	f3bf 8f6f 	isb	sy
 80071d0:	f3bf 8f4f 	dsb	sy
 80071d4:	e7fe      	b.n	80071d4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80071d6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80071da:	4a0b      	ldr	r2, [pc, #44]	; (8007208 <vPortValidateInterruptPriority+0x58>)
 80071dc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80071e0:	6812      	ldr	r2, [r2, #0]
 80071e2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80071e6:	4293      	cmp	r3, r2
 80071e8:	d908      	bls.n	80071fc <vPortValidateInterruptPriority+0x4c>
 80071ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071ee:	f383 8811 	msr	BASEPRI, r3
 80071f2:	f3bf 8f6f 	isb	sy
 80071f6:	f3bf 8f4f 	dsb	sy
 80071fa:	e7fe      	b.n	80071fa <vPortValidateInterruptPriority+0x4a>
	}
 80071fc:	4770      	bx	lr
 80071fe:	bf00      	nop
 8007200:	e000e3f0 	.word	0xe000e3f0
 8007204:	20009e1c 	.word	0x20009e1c
 8007208:	20009e20 	.word	0x20009e20

0800720c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800720c:	b510      	push	{r4, lr}
 800720e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007210:	f7ff feb8 	bl	8006f84 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007214:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007216:	f7ff fed5 	bl	8006fc4 <vPortExitCritical>

	return xReturn;
}
 800721a:	fab4 f084 	clz	r0, r4
 800721e:	0940      	lsrs	r0, r0, #5
 8007220:	bd10      	pop	{r4, pc}

08007222 <prvCopyDataToQueue>:
{
 8007222:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007224:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007226:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007228:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800722a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800722c:	b952      	cbnz	r2, 8007244 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800722e:	6807      	ldr	r7, [r0, #0]
 8007230:	bb47      	cbnz	r7, 8007284 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007232:	6880      	ldr	r0, [r0, #8]
 8007234:	f001 f9b8 	bl	80085a8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007238:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800723a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800723c:	3601      	adds	r6, #1
 800723e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007240:	4628      	mov	r0, r5
 8007242:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007244:	b965      	cbnz	r5, 8007260 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007246:	6840      	ldr	r0, [r0, #4]
 8007248:	f012 fe6a 	bl	8019f20 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800724c:	6863      	ldr	r3, [r4, #4]
 800724e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007250:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007252:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007254:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007256:	4293      	cmp	r3, r2
 8007258:	d3f0      	bcc.n	800723c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800725a:	6823      	ldr	r3, [r4, #0]
 800725c:	6063      	str	r3, [r4, #4]
 800725e:	e7ed      	b.n	800723c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007260:	68c0      	ldr	r0, [r0, #12]
 8007262:	f012 fe5d 	bl	8019f20 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007266:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007268:	68e3      	ldr	r3, [r4, #12]
 800726a:	4251      	negs	r1, r2
 800726c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800726e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007270:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007272:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007274:	bf3e      	ittt	cc
 8007276:	68a3      	ldrcc	r3, [r4, #8]
 8007278:	185b      	addcc	r3, r3, r1
 800727a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800727c:	2d02      	cmp	r5, #2
 800727e:	d101      	bne.n	8007284 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007280:	b116      	cbz	r6, 8007288 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007282:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007284:	2500      	movs	r5, #0
 8007286:	e7d9      	b.n	800723c <prvCopyDataToQueue+0x1a>
 8007288:	4635      	mov	r5, r6
 800728a:	e7d7      	b.n	800723c <prvCopyDataToQueue+0x1a>

0800728c <prvCopyDataFromQueue>:
{
 800728c:	4603      	mov	r3, r0
 800728e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007290:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007292:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007294:	b16a      	cbz	r2, 80072b2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007296:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007298:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800729a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800729c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800729e:	bf28      	it	cs
 80072a0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80072a2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80072a4:	bf28      	it	cs
 80072a6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80072a8:	68d9      	ldr	r1, [r3, #12]
}
 80072aa:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80072ae:	f012 be37 	b.w	8019f20 <memcpy>
}
 80072b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80072b6:	4770      	bx	lr

080072b8 <prvUnlockQueue>:
{
 80072b8:	b570      	push	{r4, r5, r6, lr}
 80072ba:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80072bc:	f7ff fe62 	bl	8006f84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80072c0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80072c4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80072c8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80072ca:	2d00      	cmp	r5, #0
 80072cc:	dc14      	bgt.n	80072f8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80072ce:	23ff      	movs	r3, #255	; 0xff
 80072d0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80072d4:	f7ff fe76 	bl	8006fc4 <vPortExitCritical>
	taskENTER_CRITICAL();
 80072d8:	f7ff fe54 	bl	8006f84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80072dc:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80072e0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80072e4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80072e6:	2d00      	cmp	r5, #0
 80072e8:	dc12      	bgt.n	8007310 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80072ea:	23ff      	movs	r3, #255	; 0xff
 80072ec:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80072f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80072f4:	f7ff be66 	b.w	8006fc4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80072f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80072fa:	2b00      	cmp	r3, #0
 80072fc:	d0e7      	beq.n	80072ce <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80072fe:	4630      	mov	r0, r6
 8007300:	f001 f86e 	bl	80083e0 <xTaskRemoveFromEventList>
 8007304:	b108      	cbz	r0, 800730a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007306:	f001 f8f7 	bl	80084f8 <vTaskMissedYield>
			--cTxLock;
 800730a:	3d01      	subs	r5, #1
 800730c:	b26d      	sxtb	r5, r5
 800730e:	e7dc      	b.n	80072ca <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007310:	6923      	ldr	r3, [r4, #16]
 8007312:	2b00      	cmp	r3, #0
 8007314:	d0e9      	beq.n	80072ea <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007316:	4630      	mov	r0, r6
 8007318:	f001 f862 	bl	80083e0 <xTaskRemoveFromEventList>
 800731c:	b108      	cbz	r0, 8007322 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800731e:	f001 f8eb 	bl	80084f8 <vTaskMissedYield>
				--cRxLock;
 8007322:	3d01      	subs	r5, #1
 8007324:	b26d      	sxtb	r5, r5
 8007326:	e7de      	b.n	80072e6 <prvUnlockQueue+0x2e>

08007328 <xQueueGenericReset>:
{
 8007328:	b538      	push	{r3, r4, r5, lr}
 800732a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800732c:	4604      	mov	r4, r0
 800732e:	b940      	cbnz	r0, 8007342 <xQueueGenericReset+0x1a>
 8007330:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007334:	f383 8811 	msr	BASEPRI, r3
 8007338:	f3bf 8f6f 	isb	sy
 800733c:	f3bf 8f4f 	dsb	sy
 8007340:	e7fe      	b.n	8007340 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007342:	f7ff fe1f 	bl	8006f84 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007346:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800734a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800734c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800734e:	434b      	muls	r3, r1
 8007350:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007352:	1a5b      	subs	r3, r3, r1
 8007354:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007356:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007358:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800735a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800735c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800735e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007360:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007364:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007368:	b9a5      	cbnz	r5, 8007394 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800736a:	6923      	ldr	r3, [r4, #16]
 800736c:	b173      	cbz	r3, 800738c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800736e:	f104 0010 	add.w	r0, r4, #16
 8007372:	f001 f835 	bl	80083e0 <xTaskRemoveFromEventList>
 8007376:	b148      	cbz	r0, 800738c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007378:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800737c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007380:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007384:	f3bf 8f4f 	dsb	sy
 8007388:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800738c:	f7ff fe1a 	bl	8006fc4 <vPortExitCritical>
}
 8007390:	2001      	movs	r0, #1
 8007392:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007394:	f104 0010 	add.w	r0, r4, #16
 8007398:	f7ff fd48 	bl	8006e2c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800739c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80073a0:	f7ff fd44 	bl	8006e2c <vListInitialise>
 80073a4:	e7f2      	b.n	800738c <xQueueGenericReset+0x64>

080073a6 <xQueueGenericCreateStatic>:
	{
 80073a6:	b513      	push	{r0, r1, r4, lr}
 80073a8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80073aa:	b940      	cbnz	r0, 80073be <xQueueGenericCreateStatic+0x18>
 80073ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073b0:	f383 8811 	msr	BASEPRI, r3
 80073b4:	f3bf 8f6f 	isb	sy
 80073b8:	f3bf 8f4f 	dsb	sy
 80073bc:	e7fe      	b.n	80073bc <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80073be:	b943      	cbnz	r3, 80073d2 <xQueueGenericCreateStatic+0x2c>
 80073c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073c4:	f383 8811 	msr	BASEPRI, r3
 80073c8:	f3bf 8f6f 	isb	sy
 80073cc:	f3bf 8f4f 	dsb	sy
 80073d0:	e7fe      	b.n	80073d0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80073d2:	b14a      	cbz	r2, 80073e8 <xQueueGenericCreateStatic+0x42>
 80073d4:	b991      	cbnz	r1, 80073fc <xQueueGenericCreateStatic+0x56>
 80073d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073da:	f383 8811 	msr	BASEPRI, r3
 80073de:	f3bf 8f6f 	isb	sy
 80073e2:	f3bf 8f4f 	dsb	sy
 80073e6:	e7fe      	b.n	80073e6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80073e8:	b141      	cbz	r1, 80073fc <xQueueGenericCreateStatic+0x56>
 80073ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073ee:	f383 8811 	msr	BASEPRI, r3
 80073f2:	f3bf 8f6f 	isb	sy
 80073f6:	f3bf 8f4f 	dsb	sy
 80073fa:	e7fe      	b.n	80073fa <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80073fc:	2350      	movs	r3, #80	; 0x50
 80073fe:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007400:	9b01      	ldr	r3, [sp, #4]
 8007402:	2b50      	cmp	r3, #80	; 0x50
 8007404:	d008      	beq.n	8007418 <xQueueGenericCreateStatic+0x72>
 8007406:	f04f 0350 	mov.w	r3, #80	; 0x50
 800740a:	f383 8811 	msr	BASEPRI, r3
 800740e:	f3bf 8f6f 	isb	sy
 8007412:	f3bf 8f4f 	dsb	sy
 8007416:	e7fe      	b.n	8007416 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007418:	2900      	cmp	r1, #0
 800741a:	bf08      	it	eq
 800741c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800741e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007420:	6022      	str	r2, [r4, #0]
 8007422:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8007424:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007428:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800742c:	4619      	mov	r1, r3
 800742e:	4620      	mov	r0, r4
 8007430:	f7ff ff7a 	bl	8007328 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007434:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007438:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800743c:	4620      	mov	r0, r4
 800743e:	b002      	add	sp, #8
 8007440:	bd10      	pop	{r4, pc}

08007442 <xQueueGenericCreate>:
	{
 8007442:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007444:	460d      	mov	r5, r1
 8007446:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007448:	4606      	mov	r6, r0
 800744a:	b940      	cbnz	r0, 800745e <xQueueGenericCreate+0x1c>
 800744c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007450:	f383 8811 	msr	BASEPRI, r3
 8007454:	f3bf 8f6f 	isb	sy
 8007458:	f3bf 8f4f 	dsb	sy
 800745c:	e7fe      	b.n	800745c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800745e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007460:	3050      	adds	r0, #80	; 0x50
 8007462:	f7ff fc0d 	bl	8006c80 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007466:	4604      	mov	r4, r0
 8007468:	b170      	cbz	r0, 8007488 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800746a:	2300      	movs	r3, #0
 800746c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007470:	b165      	cbz	r5, 800748c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007472:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007476:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800747a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800747c:	2101      	movs	r1, #1
 800747e:	4620      	mov	r0, r4
 8007480:	f7ff ff52 	bl	8007328 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007484:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007488:	4620      	mov	r0, r4
 800748a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800748c:	4603      	mov	r3, r0
 800748e:	e7f2      	b.n	8007476 <xQueueGenericCreate+0x34>

08007490 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007490:	b513      	push	{r0, r1, r4, lr}
 8007492:	4613      	mov	r3, r2
 8007494:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007496:	b940      	cbnz	r0, 80074aa <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007498:	f04f 0350 	mov.w	r3, #80	; 0x50
 800749c:	f383 8811 	msr	BASEPRI, r3
 80074a0:	f3bf 8f6f 	isb	sy
 80074a4:	f3bf 8f4f 	dsb	sy
 80074a8:	e7fe      	b.n	80074a8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80074aa:	4288      	cmp	r0, r1
 80074ac:	d208      	bcs.n	80074c0 <xQueueCreateCountingSemaphoreStatic+0x30>
 80074ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074b2:	f383 8811 	msr	BASEPRI, r3
 80074b6:	f3bf 8f6f 	isb	sy
 80074ba:	f3bf 8f4f 	dsb	sy
 80074be:	e7fe      	b.n	80074be <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80074c0:	2202      	movs	r2, #2
 80074c2:	9200      	str	r2, [sp, #0]
 80074c4:	2200      	movs	r2, #0
 80074c6:	4611      	mov	r1, r2
 80074c8:	f7ff ff6d 	bl	80073a6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80074cc:	b100      	cbz	r0, 80074d0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80074ce:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80074d0:	b002      	add	sp, #8
 80074d2:	bd10      	pop	{r4, pc}

080074d4 <xQueueCreateCountingSemaphore>:
	{
 80074d4:	b510      	push	{r4, lr}
 80074d6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80074d8:	b940      	cbnz	r0, 80074ec <xQueueCreateCountingSemaphore+0x18>
 80074da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074de:	f383 8811 	msr	BASEPRI, r3
 80074e2:	f3bf 8f6f 	isb	sy
 80074e6:	f3bf 8f4f 	dsb	sy
 80074ea:	e7fe      	b.n	80074ea <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80074ec:	4288      	cmp	r0, r1
 80074ee:	d208      	bcs.n	8007502 <xQueueCreateCountingSemaphore+0x2e>
 80074f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074f4:	f383 8811 	msr	BASEPRI, r3
 80074f8:	f3bf 8f6f 	isb	sy
 80074fc:	f3bf 8f4f 	dsb	sy
 8007500:	e7fe      	b.n	8007500 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007502:	2202      	movs	r2, #2
 8007504:	2100      	movs	r1, #0
 8007506:	f7ff ff9c 	bl	8007442 <xQueueGenericCreate>
		if( xHandle != NULL )
 800750a:	b100      	cbz	r0, 800750e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800750c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800750e:	bd10      	pop	{r4, pc}

08007510 <xQueueGenericSend>:
{
 8007510:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007514:	b085      	sub	sp, #20
 8007516:	4688      	mov	r8, r1
 8007518:	9201      	str	r2, [sp, #4]
 800751a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800751c:	4604      	mov	r4, r0
 800751e:	b940      	cbnz	r0, 8007532 <xQueueGenericSend+0x22>
 8007520:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007524:	f383 8811 	msr	BASEPRI, r3
 8007528:	f3bf 8f6f 	isb	sy
 800752c:	f3bf 8f4f 	dsb	sy
 8007530:	e7fe      	b.n	8007530 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007532:	b951      	cbnz	r1, 800754a <xQueueGenericSend+0x3a>
 8007534:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007536:	b143      	cbz	r3, 800754a <xQueueGenericSend+0x3a>
 8007538:	f04f 0350 	mov.w	r3, #80	; 0x50
 800753c:	f383 8811 	msr	BASEPRI, r3
 8007540:	f3bf 8f6f 	isb	sy
 8007544:	f3bf 8f4f 	dsb	sy
 8007548:	e7fe      	b.n	8007548 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800754a:	2f02      	cmp	r7, #2
 800754c:	d10b      	bne.n	8007566 <xQueueGenericSend+0x56>
 800754e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007550:	2b01      	cmp	r3, #1
 8007552:	d008      	beq.n	8007566 <xQueueGenericSend+0x56>
 8007554:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007558:	f383 8811 	msr	BASEPRI, r3
 800755c:	f3bf 8f6f 	isb	sy
 8007560:	f3bf 8f4f 	dsb	sy
 8007564:	e7fe      	b.n	8007564 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007566:	f000 ffcd 	bl	8008504 <xTaskGetSchedulerState>
 800756a:	4606      	mov	r6, r0
 800756c:	b950      	cbnz	r0, 8007584 <xQueueGenericSend+0x74>
 800756e:	9b01      	ldr	r3, [sp, #4]
 8007570:	b14b      	cbz	r3, 8007586 <xQueueGenericSend+0x76>
 8007572:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007576:	f383 8811 	msr	BASEPRI, r3
 800757a:	f3bf 8f6f 	isb	sy
 800757e:	f3bf 8f4f 	dsb	sy
 8007582:	e7fe      	b.n	8007582 <xQueueGenericSend+0x72>
 8007584:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007586:	f04f 0900 	mov.w	r9, #0
 800758a:	e037      	b.n	80075fc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800758c:	9d01      	ldr	r5, [sp, #4]
 800758e:	b91d      	cbnz	r5, 8007598 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007590:	f7ff fd18 	bl	8006fc4 <vPortExitCritical>
			return errQUEUE_FULL;
 8007594:	2000      	movs	r0, #0
 8007596:	e052      	b.n	800763e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8007598:	b916      	cbnz	r6, 80075a0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800759a:	a802      	add	r0, sp, #8
 800759c:	f000 ff64 	bl	8008468 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80075a0:	f7ff fd10 	bl	8006fc4 <vPortExitCritical>
		vTaskSuspendAll();
 80075a4:	f000 fcfa 	bl	8007f9c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80075a8:	f7ff fcec 	bl	8006f84 <vPortEnterCritical>
 80075ac:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80075b0:	2bff      	cmp	r3, #255	; 0xff
 80075b2:	bf08      	it	eq
 80075b4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80075b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80075bc:	2bff      	cmp	r3, #255	; 0xff
 80075be:	bf08      	it	eq
 80075c0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80075c4:	f7ff fcfe 	bl	8006fc4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80075c8:	a901      	add	r1, sp, #4
 80075ca:	a802      	add	r0, sp, #8
 80075cc:	f000 ff58 	bl	8008480 <xTaskCheckForTimeOut>
 80075d0:	2800      	cmp	r0, #0
 80075d2:	d14a      	bne.n	800766a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80075d4:	f7ff fcd6 	bl	8006f84 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80075d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80075da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80075dc:	429a      	cmp	r2, r3
 80075de:	d131      	bne.n	8007644 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80075e0:	f7ff fcf0 	bl	8006fc4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80075e4:	9901      	ldr	r1, [sp, #4]
 80075e6:	f104 0010 	add.w	r0, r4, #16
 80075ea:	f000 fec1 	bl	8008370 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80075ee:	4620      	mov	r0, r4
 80075f0:	f7ff fe62 	bl	80072b8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80075f4:	f000 fd76 	bl	80080e4 <xTaskResumeAll>
 80075f8:	b360      	cbz	r0, 8007654 <xQueueGenericSend+0x144>
 80075fa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80075fc:	f7ff fcc2 	bl	8006f84 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007600:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007602:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007604:	429a      	cmp	r2, r3
 8007606:	d301      	bcc.n	800760c <xQueueGenericSend+0xfc>
 8007608:	2f02      	cmp	r7, #2
 800760a:	d1bf      	bne.n	800758c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800760c:	463a      	mov	r2, r7
 800760e:	4641      	mov	r1, r8
 8007610:	4620      	mov	r0, r4
 8007612:	f7ff fe06 	bl	8007222 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007616:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007618:	b11b      	cbz	r3, 8007622 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800761a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800761e:	f000 fedf 	bl	80083e0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007622:	b148      	cbz	r0, 8007638 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8007624:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007628:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800762c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007630:	f3bf 8f4f 	dsb	sy
 8007634:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007638:	f7ff fcc4 	bl	8006fc4 <vPortExitCritical>
				return pdPASS;
 800763c:	2001      	movs	r0, #1
}
 800763e:	b005      	add	sp, #20
 8007640:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8007644:	f7ff fcbe 	bl	8006fc4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007648:	4620      	mov	r0, r4
 800764a:	f7ff fe35 	bl	80072b8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800764e:	f000 fd49 	bl	80080e4 <xTaskResumeAll>
 8007652:	e7d2      	b.n	80075fa <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8007654:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007658:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800765c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007660:	f3bf 8f4f 	dsb	sy
 8007664:	f3bf 8f6f 	isb	sy
 8007668:	e7c7      	b.n	80075fa <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800766a:	4620      	mov	r0, r4
 800766c:	f7ff fe24 	bl	80072b8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007670:	f000 fd38 	bl	80080e4 <xTaskResumeAll>
 8007674:	e78e      	b.n	8007594 <xQueueGenericSend+0x84>

08007676 <xQueueGenericSendFromISR>:
{
 8007676:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800767a:	4689      	mov	r9, r1
 800767c:	4690      	mov	r8, r2
 800767e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007680:	4604      	mov	r4, r0
 8007682:	b940      	cbnz	r0, 8007696 <xQueueGenericSendFromISR+0x20>
 8007684:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007688:	f383 8811 	msr	BASEPRI, r3
 800768c:	f3bf 8f6f 	isb	sy
 8007690:	f3bf 8f4f 	dsb	sy
 8007694:	e7fe      	b.n	8007694 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007696:	b951      	cbnz	r1, 80076ae <xQueueGenericSendFromISR+0x38>
 8007698:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800769a:	b143      	cbz	r3, 80076ae <xQueueGenericSendFromISR+0x38>
 800769c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076a0:	f383 8811 	msr	BASEPRI, r3
 80076a4:	f3bf 8f6f 	isb	sy
 80076a8:	f3bf 8f4f 	dsb	sy
 80076ac:	e7fe      	b.n	80076ac <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80076ae:	2f02      	cmp	r7, #2
 80076b0:	d10b      	bne.n	80076ca <xQueueGenericSendFromISR+0x54>
 80076b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80076b4:	2b01      	cmp	r3, #1
 80076b6:	d008      	beq.n	80076ca <xQueueGenericSendFromISR+0x54>
 80076b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076bc:	f383 8811 	msr	BASEPRI, r3
 80076c0:	f3bf 8f6f 	isb	sy
 80076c4:	f3bf 8f4f 	dsb	sy
 80076c8:	e7fe      	b.n	80076c8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80076ca:	f7ff fd71 	bl	80071b0 <vPortValidateInterruptPriority>
	__asm volatile
 80076ce:	f3ef 8611 	mrs	r6, BASEPRI
 80076d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076d6:	f383 8811 	msr	BASEPRI, r3
 80076da:	f3bf 8f6f 	isb	sy
 80076de:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80076e2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80076e4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80076e6:	429a      	cmp	r2, r3
 80076e8:	d301      	bcc.n	80076ee <xQueueGenericSendFromISR+0x78>
 80076ea:	2f02      	cmp	r7, #2
 80076ec:	d123      	bne.n	8007736 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 80076ee:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80076f2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80076f4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80076f6:	463a      	mov	r2, r7
 80076f8:	4649      	mov	r1, r9
 80076fa:	4620      	mov	r0, r4
 80076fc:	f7ff fd91 	bl	8007222 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007700:	1c6b      	adds	r3, r5, #1
 8007702:	d113      	bne.n	800772c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007704:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007706:	b90b      	cbnz	r3, 800770c <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8007708:	2001      	movs	r0, #1
 800770a:	e00b      	b.n	8007724 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800770c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007710:	f000 fe66 	bl	80083e0 <xTaskRemoveFromEventList>
 8007714:	2800      	cmp	r0, #0
 8007716:	d0f7      	beq.n	8007708 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8007718:	f1b8 0f00 	cmp.w	r8, #0
 800771c:	d0f4      	beq.n	8007708 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800771e:	2001      	movs	r0, #1
 8007720:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007724:	f386 8811 	msr	BASEPRI, r6
}
 8007728:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800772c:	3501      	adds	r5, #1
 800772e:	b26d      	sxtb	r5, r5
 8007730:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007734:	e7e8      	b.n	8007708 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8007736:	2000      	movs	r0, #0
 8007738:	e7f4      	b.n	8007724 <xQueueGenericSendFromISR+0xae>

0800773a <xQueueGiveFromISR>:
{
 800773a:	b570      	push	{r4, r5, r6, lr}
 800773c:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800773e:	4604      	mov	r4, r0
 8007740:	b940      	cbnz	r0, 8007754 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007742:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007746:	f383 8811 	msr	BASEPRI, r3
 800774a:	f3bf 8f6f 	isb	sy
 800774e:	f3bf 8f4f 	dsb	sy
 8007752:	e7fe      	b.n	8007752 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007754:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007756:	b143      	cbz	r3, 800776a <xQueueGiveFromISR+0x30>
 8007758:	f04f 0350 	mov.w	r3, #80	; 0x50
 800775c:	f383 8811 	msr	BASEPRI, r3
 8007760:	f3bf 8f6f 	isb	sy
 8007764:	f3bf 8f4f 	dsb	sy
 8007768:	e7fe      	b.n	8007768 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800776a:	6803      	ldr	r3, [r0, #0]
 800776c:	b953      	cbnz	r3, 8007784 <xQueueGiveFromISR+0x4a>
 800776e:	6883      	ldr	r3, [r0, #8]
 8007770:	b143      	cbz	r3, 8007784 <xQueueGiveFromISR+0x4a>
 8007772:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007776:	f383 8811 	msr	BASEPRI, r3
 800777a:	f3bf 8f6f 	isb	sy
 800777e:	f3bf 8f4f 	dsb	sy
 8007782:	e7fe      	b.n	8007782 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007784:	f7ff fd14 	bl	80071b0 <vPortValidateInterruptPriority>
	__asm volatile
 8007788:	f3ef 8611 	mrs	r6, BASEPRI
 800778c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007790:	f383 8811 	msr	BASEPRI, r3
 8007794:	f3bf 8f6f 	isb	sy
 8007798:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800779c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800779e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80077a0:	4293      	cmp	r3, r2
 80077a2:	d91c      	bls.n	80077de <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80077a4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80077a8:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80077aa:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80077ac:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80077ae:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80077b0:	d110      	bne.n	80077d4 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80077b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80077b4:	b90b      	cbnz	r3, 80077ba <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80077b6:	2001      	movs	r0, #1
 80077b8:	e009      	b.n	80077ce <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80077ba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80077be:	f000 fe0f 	bl	80083e0 <xTaskRemoveFromEventList>
 80077c2:	2800      	cmp	r0, #0
 80077c4:	d0f7      	beq.n	80077b6 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80077c6:	2d00      	cmp	r5, #0
 80077c8:	d0f5      	beq.n	80077b6 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80077ca:	2001      	movs	r0, #1
 80077cc:	6028      	str	r0, [r5, #0]
	__asm volatile
 80077ce:	f386 8811 	msr	BASEPRI, r6
}
 80077d2:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80077d4:	3301      	adds	r3, #1
 80077d6:	b25b      	sxtb	r3, r3
 80077d8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80077dc:	e7eb      	b.n	80077b6 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80077de:	2000      	movs	r0, #0
 80077e0:	e7f5      	b.n	80077ce <xQueueGiveFromISR+0x94>

080077e2 <xQueueReceive>:
{
 80077e2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80077e6:	460f      	mov	r7, r1
 80077e8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80077ea:	4604      	mov	r4, r0
 80077ec:	b940      	cbnz	r0, 8007800 <xQueueReceive+0x1e>
	__asm volatile
 80077ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077f2:	f383 8811 	msr	BASEPRI, r3
 80077f6:	f3bf 8f6f 	isb	sy
 80077fa:	f3bf 8f4f 	dsb	sy
 80077fe:	e7fe      	b.n	80077fe <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007800:	b951      	cbnz	r1, 8007818 <xQueueReceive+0x36>
 8007802:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007804:	b143      	cbz	r3, 8007818 <xQueueReceive+0x36>
 8007806:	f04f 0350 	mov.w	r3, #80	; 0x50
 800780a:	f383 8811 	msr	BASEPRI, r3
 800780e:	f3bf 8f6f 	isb	sy
 8007812:	f3bf 8f4f 	dsb	sy
 8007816:	e7fe      	b.n	8007816 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007818:	f000 fe74 	bl	8008504 <xTaskGetSchedulerState>
 800781c:	4606      	mov	r6, r0
 800781e:	b950      	cbnz	r0, 8007836 <xQueueReceive+0x54>
 8007820:	9b01      	ldr	r3, [sp, #4]
 8007822:	b14b      	cbz	r3, 8007838 <xQueueReceive+0x56>
 8007824:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007828:	f383 8811 	msr	BASEPRI, r3
 800782c:	f3bf 8f6f 	isb	sy
 8007830:	f3bf 8f4f 	dsb	sy
 8007834:	e7fe      	b.n	8007834 <xQueueReceive+0x52>
 8007836:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007838:	f04f 0800 	mov.w	r8, #0
 800783c:	e03d      	b.n	80078ba <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800783e:	9d01      	ldr	r5, [sp, #4]
 8007840:	b91d      	cbnz	r5, 800784a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8007842:	f7ff fbbf 	bl	8006fc4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8007846:	2000      	movs	r0, #0
 8007848:	e056      	b.n	80078f8 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800784a:	b916      	cbnz	r6, 8007852 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800784c:	a802      	add	r0, sp, #8
 800784e:	f000 fe0b 	bl	8008468 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007852:	f7ff fbb7 	bl	8006fc4 <vPortExitCritical>
		vTaskSuspendAll();
 8007856:	f000 fba1 	bl	8007f9c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800785a:	f7ff fb93 	bl	8006f84 <vPortEnterCritical>
 800785e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007862:	2bff      	cmp	r3, #255	; 0xff
 8007864:	bf08      	it	eq
 8007866:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800786a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800786e:	2bff      	cmp	r3, #255	; 0xff
 8007870:	bf08      	it	eq
 8007872:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8007876:	f7ff fba5 	bl	8006fc4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800787a:	a901      	add	r1, sp, #4
 800787c:	a802      	add	r0, sp, #8
 800787e:	f000 fdff 	bl	8008480 <xTaskCheckForTimeOut>
 8007882:	2800      	cmp	r0, #0
 8007884:	d141      	bne.n	800790a <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007886:	4620      	mov	r0, r4
 8007888:	f7ff fcc0 	bl	800720c <prvIsQueueEmpty>
 800788c:	b3b8      	cbz	r0, 80078fe <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800788e:	9901      	ldr	r1, [sp, #4]
 8007890:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007894:	f000 fd6c 	bl	8008370 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007898:	4620      	mov	r0, r4
 800789a:	f7ff fd0d 	bl	80072b8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800789e:	f000 fc21 	bl	80080e4 <xTaskResumeAll>
 80078a2:	b948      	cbnz	r0, 80078b8 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80078a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80078a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80078ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80078b0:	f3bf 8f4f 	dsb	sy
 80078b4:	f3bf 8f6f 	isb	sy
 80078b8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80078ba:	f7ff fb63 	bl	8006f84 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80078be:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80078c0:	2d00      	cmp	r5, #0
 80078c2:	d0bc      	beq.n	800783e <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80078c4:	4639      	mov	r1, r7
 80078c6:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80078c8:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80078ca:	f7ff fcdf 	bl	800728c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80078ce:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80078d0:	6923      	ldr	r3, [r4, #16]
 80078d2:	b173      	cbz	r3, 80078f2 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80078d4:	f104 0010 	add.w	r0, r4, #16
 80078d8:	f000 fd82 	bl	80083e0 <xTaskRemoveFromEventList>
 80078dc:	b148      	cbz	r0, 80078f2 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80078de:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80078e2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80078e6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80078ea:	f3bf 8f4f 	dsb	sy
 80078ee:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80078f2:	f7ff fb67 	bl	8006fc4 <vPortExitCritical>
				return pdPASS;
 80078f6:	2001      	movs	r0, #1
}
 80078f8:	b004      	add	sp, #16
 80078fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80078fe:	4620      	mov	r0, r4
 8007900:	f7ff fcda 	bl	80072b8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007904:	f000 fbee 	bl	80080e4 <xTaskResumeAll>
 8007908:	e7d6      	b.n	80078b8 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800790a:	4620      	mov	r0, r4
 800790c:	f7ff fcd4 	bl	80072b8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007910:	f000 fbe8 	bl	80080e4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007914:	4620      	mov	r0, r4
 8007916:	f7ff fc79 	bl	800720c <prvIsQueueEmpty>
 800791a:	2800      	cmp	r0, #0
 800791c:	d0cc      	beq.n	80078b8 <xQueueReceive+0xd6>
 800791e:	e792      	b.n	8007846 <xQueueReceive+0x64>

08007920 <xQueueSemaphoreTake>:
{
 8007920:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007922:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8007924:	4604      	mov	r4, r0
{
 8007926:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007928:	b940      	cbnz	r0, 800793c <xQueueSemaphoreTake+0x1c>
 800792a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800792e:	f383 8811 	msr	BASEPRI, r3
 8007932:	f3bf 8f6f 	isb	sy
 8007936:	f3bf 8f4f 	dsb	sy
 800793a:	e7fe      	b.n	800793a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800793c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800793e:	b145      	cbz	r5, 8007952 <xQueueSemaphoreTake+0x32>
 8007940:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007944:	f383 8811 	msr	BASEPRI, r3
 8007948:	f3bf 8f6f 	isb	sy
 800794c:	f3bf 8f4f 	dsb	sy
 8007950:	e7fe      	b.n	8007950 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007952:	f000 fdd7 	bl	8008504 <xTaskGetSchedulerState>
 8007956:	4606      	mov	r6, r0
 8007958:	b950      	cbnz	r0, 8007970 <xQueueSemaphoreTake+0x50>
 800795a:	9b01      	ldr	r3, [sp, #4]
 800795c:	b15b      	cbz	r3, 8007976 <xQueueSemaphoreTake+0x56>
 800795e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007962:	f383 8811 	msr	BASEPRI, r3
 8007966:	f3bf 8f6f 	isb	sy
 800796a:	f3bf 8f4f 	dsb	sy
 800796e:	e7fe      	b.n	800796e <xQueueSemaphoreTake+0x4e>
 8007970:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007972:	2700      	movs	r7, #0
 8007974:	e053      	b.n	8007a1e <xQueueSemaphoreTake+0xfe>
 8007976:	4605      	mov	r5, r0
 8007978:	e7fb      	b.n	8007972 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800797a:	9b01      	ldr	r3, [sp, #4]
 800797c:	b963      	cbnz	r3, 8007998 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800797e:	b145      	cbz	r5, 8007992 <xQueueSemaphoreTake+0x72>
 8007980:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007984:	f383 8811 	msr	BASEPRI, r3
 8007988:	f3bf 8f6f 	isb	sy
 800798c:	f3bf 8f4f 	dsb	sy
 8007990:	e7fe      	b.n	8007990 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8007992:	f7ff fb17 	bl	8006fc4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007996:	e062      	b.n	8007a5e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8007998:	b916      	cbnz	r6, 80079a0 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800799a:	a802      	add	r0, sp, #8
 800799c:	f000 fd64 	bl	8008468 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80079a0:	f7ff fb10 	bl	8006fc4 <vPortExitCritical>
		vTaskSuspendAll();
 80079a4:	f000 fafa 	bl	8007f9c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80079a8:	f7ff faec 	bl	8006f84 <vPortEnterCritical>
 80079ac:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80079b0:	2bff      	cmp	r3, #255	; 0xff
 80079b2:	bf08      	it	eq
 80079b4:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 80079b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80079bc:	2bff      	cmp	r3, #255	; 0xff
 80079be:	bf08      	it	eq
 80079c0:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 80079c4:	f7ff fafe 	bl	8006fc4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80079c8:	a901      	add	r1, sp, #4
 80079ca:	a802      	add	r0, sp, #8
 80079cc:	f000 fd58 	bl	8008480 <xTaskCheckForTimeOut>
 80079d0:	2800      	cmp	r0, #0
 80079d2:	d14d      	bne.n	8007a70 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80079d4:	4620      	mov	r0, r4
 80079d6:	f7ff fc19 	bl	800720c <prvIsQueueEmpty>
 80079da:	2800      	cmp	r0, #0
 80079dc:	d042      	beq.n	8007a64 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80079de:	6823      	ldr	r3, [r4, #0]
 80079e0:	b93b      	cbnz	r3, 80079f2 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80079e2:	f7ff facf 	bl	8006f84 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80079e6:	68a0      	ldr	r0, [r4, #8]
 80079e8:	f000 fd9c 	bl	8008524 <xTaskPriorityInherit>
 80079ec:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80079ee:	f7ff fae9 	bl	8006fc4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80079f2:	9901      	ldr	r1, [sp, #4]
 80079f4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80079f8:	f000 fcba 	bl	8008370 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80079fc:	4620      	mov	r0, r4
 80079fe:	f7ff fc5b 	bl	80072b8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007a02:	f000 fb6f 	bl	80080e4 <xTaskResumeAll>
 8007a06:	b948      	cbnz	r0, 8007a1c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8007a08:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007a0c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a10:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007a14:	f3bf 8f4f 	dsb	sy
 8007a18:	f3bf 8f6f 	isb	sy
 8007a1c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007a1e:	f7ff fab1 	bl	8006f84 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007a22:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007a24:	2b00      	cmp	r3, #0
 8007a26:	d0a8      	beq.n	800797a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007a28:	3b01      	subs	r3, #1
 8007a2a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007a2c:	6823      	ldr	r3, [r4, #0]
 8007a2e:	b913      	cbnz	r3, 8007a36 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007a30:	f000 fe50 	bl	80086d4 <pvTaskIncrementMutexHeldCount>
 8007a34:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007a36:	6923      	ldr	r3, [r4, #16]
 8007a38:	b173      	cbz	r3, 8007a58 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007a3a:	f104 0010 	add.w	r0, r4, #16
 8007a3e:	f000 fccf 	bl	80083e0 <xTaskRemoveFromEventList>
 8007a42:	b148      	cbz	r0, 8007a58 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8007a44:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007a48:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a4c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007a50:	f3bf 8f4f 	dsb	sy
 8007a54:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007a58:	f7ff fab4 	bl	8006fc4 <vPortExitCritical>
				return pdPASS;
 8007a5c:	2501      	movs	r5, #1
}
 8007a5e:	4628      	mov	r0, r5
 8007a60:	b005      	add	sp, #20
 8007a62:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8007a64:	4620      	mov	r0, r4
 8007a66:	f7ff fc27 	bl	80072b8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007a6a:	f000 fb3b 	bl	80080e4 <xTaskResumeAll>
 8007a6e:	e7d5      	b.n	8007a1c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8007a70:	4620      	mov	r0, r4
 8007a72:	f7ff fc21 	bl	80072b8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007a76:	f000 fb35 	bl	80080e4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007a7a:	4620      	mov	r0, r4
 8007a7c:	f7ff fbc6 	bl	800720c <prvIsQueueEmpty>
 8007a80:	2800      	cmp	r0, #0
 8007a82:	d0cb      	beq.n	8007a1c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8007a84:	2d00      	cmp	r5, #0
 8007a86:	d0ea      	beq.n	8007a5e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8007a88:	f7ff fa7c 	bl	8006f84 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007a8c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007a8e:	b119      	cbz	r1, 8007a98 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007a90:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007a92:	6819      	ldr	r1, [r3, #0]
 8007a94:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007a98:	68a0      	ldr	r0, [r4, #8]
 8007a9a:	f000 fdc9 	bl	8008630 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007a9e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007aa0:	f7ff fa90 	bl	8006fc4 <vPortExitCritical>
 8007aa4:	e7db      	b.n	8007a5e <xQueueSemaphoreTake+0x13e>

08007aa6 <xQueueReceiveFromISR>:
{
 8007aa6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007aaa:	4689      	mov	r9, r1
 8007aac:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007aae:	4605      	mov	r5, r0
 8007ab0:	b940      	cbnz	r0, 8007ac4 <xQueueReceiveFromISR+0x1e>
 8007ab2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ab6:	f383 8811 	msr	BASEPRI, r3
 8007aba:	f3bf 8f6f 	isb	sy
 8007abe:	f3bf 8f4f 	dsb	sy
 8007ac2:	e7fe      	b.n	8007ac2 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007ac4:	b951      	cbnz	r1, 8007adc <xQueueReceiveFromISR+0x36>
 8007ac6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007ac8:	b143      	cbz	r3, 8007adc <xQueueReceiveFromISR+0x36>
 8007aca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ace:	f383 8811 	msr	BASEPRI, r3
 8007ad2:	f3bf 8f6f 	isb	sy
 8007ad6:	f3bf 8f4f 	dsb	sy
 8007ada:	e7fe      	b.n	8007ada <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007adc:	f7ff fb68 	bl	80071b0 <vPortValidateInterruptPriority>
	__asm volatile
 8007ae0:	f3ef 8711 	mrs	r7, BASEPRI
 8007ae4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ae8:	f383 8811 	msr	BASEPRI, r3
 8007aec:	f3bf 8f6f 	isb	sy
 8007af0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007af4:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007af6:	b31c      	cbz	r4, 8007b40 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007af8:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007afc:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007afe:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007b00:	4628      	mov	r0, r5
 8007b02:	f7ff fbc3 	bl	800728c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007b06:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007b08:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007b0a:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8007b0c:	d113      	bne.n	8007b36 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007b0e:	692b      	ldr	r3, [r5, #16]
 8007b10:	b90b      	cbnz	r3, 8007b16 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007b12:	2001      	movs	r0, #1
 8007b14:	e00b      	b.n	8007b2e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007b16:	f105 0010 	add.w	r0, r5, #16
 8007b1a:	f000 fc61 	bl	80083e0 <xTaskRemoveFromEventList>
 8007b1e:	2800      	cmp	r0, #0
 8007b20:	d0f7      	beq.n	8007b12 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007b22:	f1b8 0f00 	cmp.w	r8, #0
 8007b26:	d0f4      	beq.n	8007b12 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007b28:	2001      	movs	r0, #1
 8007b2a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007b2e:	f387 8811 	msr	BASEPRI, r7
}
 8007b32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007b36:	3601      	adds	r6, #1
 8007b38:	b276      	sxtb	r6, r6
 8007b3a:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8007b3e:	e7e8      	b.n	8007b12 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8007b40:	4620      	mov	r0, r4
 8007b42:	e7f4      	b.n	8007b2e <xQueueReceiveFromISR+0x88>

08007b44 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8007b44:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007b46:	4a07      	ldr	r2, [pc, #28]	; (8007b64 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007b48:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007b4a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8007b4e:	b92c      	cbnz	r4, 8007b5c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007b50:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007b54:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8007b58:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8007b5a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007b5c:	3301      	adds	r3, #1
 8007b5e:	2b08      	cmp	r3, #8
 8007b60:	d1f3      	bne.n	8007b4a <vQueueAddToRegistry+0x6>
 8007b62:	e7fa      	b.n	8007b5a <vQueueAddToRegistry+0x16>
 8007b64:	20009e24 	.word	0x20009e24

08007b68 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007b68:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007b6a:	4a08      	ldr	r2, [pc, #32]	; (8007b8c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007b6c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007b6e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8007b72:	684c      	ldr	r4, [r1, #4]
 8007b74:	4284      	cmp	r4, r0
 8007b76:	d104      	bne.n	8007b82 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007b78:	2000      	movs	r0, #0
 8007b7a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007b7e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007b80:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007b82:	3301      	adds	r3, #1
 8007b84:	2b08      	cmp	r3, #8
 8007b86:	d1f2      	bne.n	8007b6e <vQueueUnregisterQueue+0x6>
 8007b88:	e7fa      	b.n	8007b80 <vQueueUnregisterQueue+0x18>
 8007b8a:	bf00      	nop
 8007b8c:	20009e24 	.word	0x20009e24

08007b90 <vQueueDelete>:
{
 8007b90:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007b92:	4604      	mov	r4, r0
 8007b94:	b940      	cbnz	r0, 8007ba8 <vQueueDelete+0x18>
	__asm volatile
 8007b96:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b9a:	f383 8811 	msr	BASEPRI, r3
 8007b9e:	f3bf 8f6f 	isb	sy
 8007ba2:	f3bf 8f4f 	dsb	sy
 8007ba6:	e7fe      	b.n	8007ba6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8007ba8:	f7ff ffde 	bl	8007b68 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8007bac:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8007bb0:	b923      	cbnz	r3, 8007bbc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8007bb2:	4620      	mov	r0, r4
}
 8007bb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007bb8:	f7ff b8fa 	b.w	8006db0 <vPortFree>
}
 8007bbc:	bd10      	pop	{r4, pc}

08007bbe <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8007bbe:	b570      	push	{r4, r5, r6, lr}
 8007bc0:	4604      	mov	r4, r0
 8007bc2:	460d      	mov	r5, r1
 8007bc4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007bc6:	f7ff f9dd 	bl	8006f84 <vPortEnterCritical>
 8007bca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007bce:	2bff      	cmp	r3, #255	; 0xff
 8007bd0:	bf04      	itt	eq
 8007bd2:	2300      	moveq	r3, #0
 8007bd4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007bd8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007bdc:	2bff      	cmp	r3, #255	; 0xff
 8007bde:	bf04      	itt	eq
 8007be0:	2300      	moveq	r3, #0
 8007be2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8007be6:	f7ff f9ed 	bl	8006fc4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8007bea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007bec:	b92b      	cbnz	r3, 8007bfa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8007bee:	4632      	mov	r2, r6
 8007bf0:	4629      	mov	r1, r5
 8007bf2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007bf6:	f000 fbd5 	bl	80083a4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8007bfa:	4620      	mov	r0, r4
	}
 8007bfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8007c00:	f7ff bb5a 	b.w	80072b8 <prvUnlockQueue>

08007c04 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8007c04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007c08:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8007c0a:	f7ff f9bb 	bl	8006f84 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8007c0e:	4b30      	ldr	r3, [pc, #192]	; (8007cd0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8007c10:	4e30      	ldr	r6, [pc, #192]	; (8007cd4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8007c12:	681a      	ldr	r2, [r3, #0]
 8007c14:	4f30      	ldr	r7, [pc, #192]	; (8007cd8 <prvAddNewTaskToReadyList+0xd4>)
 8007c16:	3201      	adds	r2, #1
 8007c18:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8007c1a:	6835      	ldr	r5, [r6, #0]
 8007c1c:	2d00      	cmp	r5, #0
 8007c1e:	d14b      	bne.n	8007cb8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8007c20:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8007c22:	681b      	ldr	r3, [r3, #0]
 8007c24:	2b01      	cmp	r3, #1
 8007c26:	d11f      	bne.n	8007c68 <prvAddNewTaskToReadyList+0x64>
 8007c28:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007c2a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007c2c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007c2e:	f7ff f8fd 	bl	8006e2c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007c32:	2d38      	cmp	r5, #56	; 0x38
 8007c34:	f108 0814 	add.w	r8, r8, #20
 8007c38:	d1f7      	bne.n	8007c2a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8007c3a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8007d00 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8007c3e:	4d27      	ldr	r5, [pc, #156]	; (8007cdc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8007c40:	4640      	mov	r0, r8
 8007c42:	f7ff f8f3 	bl	8006e2c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8007c46:	4628      	mov	r0, r5
 8007c48:	f7ff f8f0 	bl	8006e2c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8007c4c:	4824      	ldr	r0, [pc, #144]	; (8007ce0 <prvAddNewTaskToReadyList+0xdc>)
 8007c4e:	f7ff f8ed 	bl	8006e2c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8007c52:	4824      	ldr	r0, [pc, #144]	; (8007ce4 <prvAddNewTaskToReadyList+0xe0>)
 8007c54:	f7ff f8ea 	bl	8006e2c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007c58:	4823      	ldr	r0, [pc, #140]	; (8007ce8 <prvAddNewTaskToReadyList+0xe4>)
 8007c5a:	f7ff f8e7 	bl	8006e2c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8007c5e:	4b23      	ldr	r3, [pc, #140]	; (8007cec <prvAddNewTaskToReadyList+0xe8>)
 8007c60:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007c64:	4b22      	ldr	r3, [pc, #136]	; (8007cf0 <prvAddNewTaskToReadyList+0xec>)
 8007c66:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8007c68:	4a22      	ldr	r2, [pc, #136]	; (8007cf4 <prvAddNewTaskToReadyList+0xf0>)
 8007c6a:	6813      	ldr	r3, [r2, #0]
 8007c6c:	3301      	adds	r3, #1
 8007c6e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8007c70:	4a21      	ldr	r2, [pc, #132]	; (8007cf8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8007c72:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8007c74:	6811      	ldr	r1, [r2, #0]
 8007c76:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007c78:	2014      	movs	r0, #20
 8007c7a:	428b      	cmp	r3, r1
 8007c7c:	fb00 7003 	mla	r0, r0, r3, r7
 8007c80:	f104 0104 	add.w	r1, r4, #4
 8007c84:	bf88      	it	hi
 8007c86:	6013      	strhi	r3, [r2, #0]
 8007c88:	f7ff f8de 	bl	8006e48 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8007c8c:	f7ff f99a 	bl	8006fc4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8007c90:	4b1a      	ldr	r3, [pc, #104]	; (8007cfc <prvAddNewTaskToReadyList+0xf8>)
 8007c92:	681b      	ldr	r3, [r3, #0]
 8007c94:	b173      	cbz	r3, 8007cb4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8007c96:	6833      	ldr	r3, [r6, #0]
 8007c98:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007c9a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007c9c:	429a      	cmp	r2, r3
 8007c9e:	d209      	bcs.n	8007cb4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8007ca0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007ca4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007ca8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007cac:	f3bf 8f4f 	dsb	sy
 8007cb0:	f3bf 8f6f 	isb	sy
}
 8007cb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007cb8:	4b10      	ldr	r3, [pc, #64]	; (8007cfc <prvAddNewTaskToReadyList+0xf8>)
 8007cba:	681b      	ldr	r3, [r3, #0]
 8007cbc:	2b00      	cmp	r3, #0
 8007cbe:	d1d3      	bne.n	8007c68 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8007cc0:	6833      	ldr	r3, [r6, #0]
 8007cc2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007cc4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007cc6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007cc8:	bf98      	it	ls
 8007cca:	6034      	strls	r4, [r6, #0]
 8007ccc:	e7cc      	b.n	8007c68 <prvAddNewTaskToReadyList+0x64>
 8007cce:	bf00      	nop
 8007cd0:	2000a2d0 	.word	0x2000a2d0
 8007cd4:	20009e64 	.word	0x20009e64
 8007cd8:	20009e70 	.word	0x20009e70
 8007cdc:	2000a2f8 	.word	0x2000a2f8
 8007ce0:	2000a318 	.word	0x2000a318
 8007ce4:	2000a344 	.word	0x2000a344
 8007ce8:	2000a330 	.word	0x2000a330
 8007cec:	20009e68 	.word	0x20009e68
 8007cf0:	20009e6c 	.word	0x20009e6c
 8007cf4:	2000a2dc 	.word	0x2000a2dc
 8007cf8:	2000a2e0 	.word	0x2000a2e0
 8007cfc:	2000a32c 	.word	0x2000a32c
 8007d00:	2000a2e4 	.word	0x2000a2e4

08007d04 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8007d04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8007d06:	4b15      	ldr	r3, [pc, #84]	; (8007d5c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007d08:	4e15      	ldr	r6, [pc, #84]	; (8007d60 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8007d0a:	681d      	ldr	r5, [r3, #0]
{
 8007d0c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007d0e:	6830      	ldr	r0, [r6, #0]
 8007d10:	3004      	adds	r0, #4
{
 8007d12:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007d14:	f7ff f8bb 	bl	8006e8e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8007d18:	1c63      	adds	r3, r4, #1
 8007d1a:	d107      	bne.n	8007d2c <prvAddCurrentTaskToDelayedList+0x28>
 8007d1c:	b137      	cbz	r7, 8007d2c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007d1e:	6831      	ldr	r1, [r6, #0]
 8007d20:	4810      	ldr	r0, [pc, #64]	; (8007d64 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8007d22:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007d26:	3104      	adds	r1, #4
 8007d28:	f7ff b88e 	b.w	8006e48 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8007d2c:	6833      	ldr	r3, [r6, #0]
 8007d2e:	192c      	adds	r4, r5, r4
 8007d30:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8007d32:	d307      	bcc.n	8007d44 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007d34:	4b0c      	ldr	r3, [pc, #48]	; (8007d68 <prvAddCurrentTaskToDelayedList+0x64>)
 8007d36:	6818      	ldr	r0, [r3, #0]
 8007d38:	6831      	ldr	r1, [r6, #0]
}
 8007d3a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007d3e:	3104      	adds	r1, #4
 8007d40:	f7ff b88e 	b.w	8006e60 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007d44:	4b09      	ldr	r3, [pc, #36]	; (8007d6c <prvAddCurrentTaskToDelayedList+0x68>)
 8007d46:	6818      	ldr	r0, [r3, #0]
 8007d48:	6831      	ldr	r1, [r6, #0]
 8007d4a:	3104      	adds	r1, #4
 8007d4c:	f7ff f888 	bl	8006e60 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8007d50:	4b07      	ldr	r3, [pc, #28]	; (8007d70 <prvAddCurrentTaskToDelayedList+0x6c>)
 8007d52:	681a      	ldr	r2, [r3, #0]
 8007d54:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8007d56:	bf88      	it	hi
 8007d58:	601c      	strhi	r4, [r3, #0]
}
 8007d5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007d5c:	2000a358 	.word	0x2000a358
 8007d60:	20009e64 	.word	0x20009e64
 8007d64:	2000a330 	.word	0x2000a330
 8007d68:	20009e6c 	.word	0x20009e6c
 8007d6c:	20009e68 	.word	0x20009e68
 8007d70:	2000a30c 	.word	0x2000a30c

08007d74 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007d74:	4a06      	ldr	r2, [pc, #24]	; (8007d90 <prvResetNextTaskUnblockTime+0x1c>)
 8007d76:	6813      	ldr	r3, [r2, #0]
 8007d78:	6819      	ldr	r1, [r3, #0]
 8007d7a:	4b06      	ldr	r3, [pc, #24]	; (8007d94 <prvResetNextTaskUnblockTime+0x20>)
 8007d7c:	b919      	cbnz	r1, 8007d86 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8007d7e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007d82:	601a      	str	r2, [r3, #0]
}
 8007d84:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007d86:	6812      	ldr	r2, [r2, #0]
 8007d88:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007d8a:	68d2      	ldr	r2, [r2, #12]
 8007d8c:	6852      	ldr	r2, [r2, #4]
 8007d8e:	e7f8      	b.n	8007d82 <prvResetNextTaskUnblockTime+0xe>
 8007d90:	20009e68 	.word	0x20009e68
 8007d94:	2000a30c 	.word	0x2000a30c

08007d98 <prvDeleteTCB>:
	{
 8007d98:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007d9a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8007d9e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007da0:	b93b      	cbnz	r3, 8007db2 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8007da2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8007da4:	f7ff f804 	bl	8006db0 <vPortFree>
				vPortFree( pxTCB );
 8007da8:	4620      	mov	r0, r4
	}
 8007daa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8007dae:	f7fe bfff 	b.w	8006db0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8007db2:	2b01      	cmp	r3, #1
 8007db4:	d0f9      	beq.n	8007daa <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8007db6:	2b02      	cmp	r3, #2
 8007db8:	d008      	beq.n	8007dcc <prvDeleteTCB+0x34>
 8007dba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dbe:	f383 8811 	msr	BASEPRI, r3
 8007dc2:	f3bf 8f6f 	isb	sy
 8007dc6:	f3bf 8f4f 	dsb	sy
 8007dca:	e7fe      	b.n	8007dca <prvDeleteTCB+0x32>
	}
 8007dcc:	bd10      	pop	{r4, pc}
	...

08007dd0 <prvIdleTask>:
{
 8007dd0:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007dd2:	4c14      	ldr	r4, [pc, #80]	; (8007e24 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007dd4:	4f14      	ldr	r7, [pc, #80]	; (8007e28 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8007dd6:	4d15      	ldr	r5, [pc, #84]	; (8007e2c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007dd8:	6823      	ldr	r3, [r4, #0]
 8007dda:	b983      	cbnz	r3, 8007dfe <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8007ddc:	4b14      	ldr	r3, [pc, #80]	; (8007e30 <prvIdleTask+0x60>)
 8007dde:	681b      	ldr	r3, [r3, #0]
 8007de0:	2b01      	cmp	r3, #1
 8007de2:	d909      	bls.n	8007df8 <prvIdleTask+0x28>
				taskYIELD();
 8007de4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007de8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007dec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007df0:	f3bf 8f4f 	dsb	sy
 8007df4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8007df8:	f7f9 fb0c 	bl	8001414 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8007dfc:	e7eb      	b.n	8007dd6 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8007dfe:	f7ff f8c1 	bl	8006f84 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007e02:	68fb      	ldr	r3, [r7, #12]
 8007e04:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007e06:	1d30      	adds	r0, r6, #4
 8007e08:	f7ff f841 	bl	8006e8e <uxListRemove>
				--uxCurrentNumberOfTasks;
 8007e0c:	682b      	ldr	r3, [r5, #0]
 8007e0e:	3b01      	subs	r3, #1
 8007e10:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8007e12:	6823      	ldr	r3, [r4, #0]
 8007e14:	3b01      	subs	r3, #1
 8007e16:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8007e18:	f7ff f8d4 	bl	8006fc4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8007e1c:	4630      	mov	r0, r6
 8007e1e:	f7ff ffbb 	bl	8007d98 <prvDeleteTCB>
 8007e22:	e7d9      	b.n	8007dd8 <prvIdleTask+0x8>
 8007e24:	2000a2d4 	.word	0x2000a2d4
 8007e28:	2000a344 	.word	0x2000a344
 8007e2c:	2000a2d0 	.word	0x2000a2d0
 8007e30:	20009e70 	.word	0x20009e70

08007e34 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007e34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007e38:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007e3c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8007e40:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007e42:	4606      	mov	r6, r0
 8007e44:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007e46:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007e48:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007e4a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007e4c:	f012 f876 	bl	8019f3c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8007e50:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e52:	f1a9 0904 	sub.w	r9, r9, #4
 8007e56:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8007e58:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8007e5c:	b3b5      	cbz	r5, 8007ecc <prvInitialiseNewTask.constprop.0+0x98>
 8007e5e:	1e6b      	subs	r3, r5, #1
 8007e60:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8007e64:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8007e66:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8007e6a:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8007e6e:	b108      	cbz	r0, 8007e74 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8007e70:	42ab      	cmp	r3, r5
 8007e72:	d1f8      	bne.n	8007e66 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8007e74:	2300      	movs	r3, #0
 8007e76:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8007e7a:	9d08      	ldr	r5, [sp, #32]
 8007e7c:	2d37      	cmp	r5, #55	; 0x37
 8007e7e:	bf28      	it	cs
 8007e80:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8007e82:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8007e86:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8007e88:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007e8a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8007e8c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007e90:	f7fe ffd7 	bl	8006e42 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007e94:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8007e98:	f104 0018 	add.w	r0, r4, #24
 8007e9c:	f7fe ffd1 	bl	8006e42 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8007ea0:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8007ea4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007ea6:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8007ea8:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8007eaa:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8007eae:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8007eb2:	463a      	mov	r2, r7
 8007eb4:	4631      	mov	r1, r6
 8007eb6:	4648      	mov	r0, r9
 8007eb8:	f7ff f838 	bl	8006f2c <pxPortInitialiseStack>
 8007ebc:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8007ebe:	f1b8 0f00 	cmp.w	r8, #0
 8007ec2:	d001      	beq.n	8007ec8 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8007ec4:	f8c8 4000 	str.w	r4, [r8]
}
 8007ec8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8007ecc:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8007ed0:	e7d3      	b.n	8007e7a <prvInitialiseNewTask.constprop.0+0x46>

08007ed2 <xTaskCreateStatic>:
	{
 8007ed2:	b570      	push	{r4, r5, r6, lr}
 8007ed4:	b086      	sub	sp, #24
 8007ed6:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8007eda:	b945      	cbnz	r5, 8007eee <xTaskCreateStatic+0x1c>
 8007edc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ee0:	f383 8811 	msr	BASEPRI, r3
 8007ee4:	f3bf 8f6f 	isb	sy
 8007ee8:	f3bf 8f4f 	dsb	sy
 8007eec:	e7fe      	b.n	8007eec <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8007eee:	b944      	cbnz	r4, 8007f02 <xTaskCreateStatic+0x30>
 8007ef0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ef4:	f383 8811 	msr	BASEPRI, r3
 8007ef8:	f3bf 8f6f 	isb	sy
 8007efc:	f3bf 8f4f 	dsb	sy
 8007f00:	e7fe      	b.n	8007f00 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8007f02:	2660      	movs	r6, #96	; 0x60
 8007f04:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8007f06:	9e05      	ldr	r6, [sp, #20]
 8007f08:	2e60      	cmp	r6, #96	; 0x60
 8007f0a:	d008      	beq.n	8007f1e <xTaskCreateStatic+0x4c>
 8007f0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f10:	f383 8811 	msr	BASEPRI, r3
 8007f14:	f3bf 8f6f 	isb	sy
 8007f18:	f3bf 8f4f 	dsb	sy
 8007f1c:	e7fe      	b.n	8007f1c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8007f1e:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8007f20:	2502      	movs	r5, #2
 8007f22:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007f26:	ad04      	add	r5, sp, #16
 8007f28:	9501      	str	r5, [sp, #4]
 8007f2a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007f2c:	9402      	str	r4, [sp, #8]
 8007f2e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8007f30:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007f32:	f7ff ff7f 	bl	8007e34 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8007f36:	4620      	mov	r0, r4
 8007f38:	f7ff fe64 	bl	8007c04 <prvAddNewTaskToReadyList>
	}
 8007f3c:	9804      	ldr	r0, [sp, #16]
 8007f3e:	b006      	add	sp, #24
 8007f40:	bd70      	pop	{r4, r5, r6, pc}

08007f42 <xTaskCreate>:
	{
 8007f42:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007f46:	4607      	mov	r7, r0
 8007f48:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8007f4a:	0090      	lsls	r0, r2, #2
	{
 8007f4c:	4688      	mov	r8, r1
 8007f4e:	4616      	mov	r6, r2
 8007f50:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8007f52:	f7fe fe95 	bl	8006c80 <pvPortMalloc>
			if( pxStack != NULL )
 8007f56:	4605      	mov	r5, r0
 8007f58:	b1e8      	cbz	r0, 8007f96 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8007f5a:	2060      	movs	r0, #96	; 0x60
 8007f5c:	f7fe fe90 	bl	8006c80 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8007f60:	4604      	mov	r4, r0
 8007f62:	b1a8      	cbz	r0, 8007f90 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8007f64:	2300      	movs	r3, #0
 8007f66:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8007f6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8007f6c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8007f6e:	9301      	str	r3, [sp, #4]
 8007f70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007f72:	9002      	str	r0, [sp, #8]
 8007f74:	9300      	str	r3, [sp, #0]
 8007f76:	4632      	mov	r2, r6
 8007f78:	464b      	mov	r3, r9
 8007f7a:	4641      	mov	r1, r8
 8007f7c:	4638      	mov	r0, r7
 8007f7e:	f7ff ff59 	bl	8007e34 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8007f82:	4620      	mov	r0, r4
 8007f84:	f7ff fe3e 	bl	8007c04 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8007f88:	2001      	movs	r0, #1
	}
 8007f8a:	b005      	add	sp, #20
 8007f8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8007f90:	4628      	mov	r0, r5
 8007f92:	f7fe ff0d 	bl	8006db0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8007f96:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8007f9a:	e7f6      	b.n	8007f8a <xTaskCreate+0x48>

08007f9c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8007f9c:	4a02      	ldr	r2, [pc, #8]	; (8007fa8 <vTaskSuspendAll+0xc>)
 8007f9e:	6813      	ldr	r3, [r2, #0]
 8007fa0:	3301      	adds	r3, #1
 8007fa2:	6013      	str	r3, [r2, #0]
}
 8007fa4:	4770      	bx	lr
 8007fa6:	bf00      	nop
 8007fa8:	2000a2d8 	.word	0x2000a2d8

08007fac <xTaskGetTickCount>:
		xTicks = xTickCount;
 8007fac:	4b01      	ldr	r3, [pc, #4]	; (8007fb4 <xTaskGetTickCount+0x8>)
 8007fae:	6818      	ldr	r0, [r3, #0]
}
 8007fb0:	4770      	bx	lr
 8007fb2:	bf00      	nop
 8007fb4:	2000a358 	.word	0x2000a358

08007fb8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007fb8:	4b3f      	ldr	r3, [pc, #252]	; (80080b8 <xTaskIncrementTick+0x100>)
 8007fba:	681b      	ldr	r3, [r3, #0]
{
 8007fbc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007fc0:	2b00      	cmp	r3, #0
 8007fc2:	d173      	bne.n	80080ac <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8007fc4:	4b3d      	ldr	r3, [pc, #244]	; (80080bc <xTaskIncrementTick+0x104>)
 8007fc6:	681d      	ldr	r5, [r3, #0]
 8007fc8:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8007fca:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8007fcc:	b9bd      	cbnz	r5, 8007ffe <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8007fce:	4b3c      	ldr	r3, [pc, #240]	; (80080c0 <xTaskIncrementTick+0x108>)
 8007fd0:	681a      	ldr	r2, [r3, #0]
 8007fd2:	6812      	ldr	r2, [r2, #0]
 8007fd4:	b142      	cbz	r2, 8007fe8 <xTaskIncrementTick+0x30>
 8007fd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fda:	f383 8811 	msr	BASEPRI, r3
 8007fde:	f3bf 8f6f 	isb	sy
 8007fe2:	f3bf 8f4f 	dsb	sy
 8007fe6:	e7fe      	b.n	8007fe6 <xTaskIncrementTick+0x2e>
 8007fe8:	4a36      	ldr	r2, [pc, #216]	; (80080c4 <xTaskIncrementTick+0x10c>)
 8007fea:	6819      	ldr	r1, [r3, #0]
 8007fec:	6810      	ldr	r0, [r2, #0]
 8007fee:	6018      	str	r0, [r3, #0]
 8007ff0:	6011      	str	r1, [r2, #0]
 8007ff2:	4a35      	ldr	r2, [pc, #212]	; (80080c8 <xTaskIncrementTick+0x110>)
 8007ff4:	6813      	ldr	r3, [r2, #0]
 8007ff6:	3301      	adds	r3, #1
 8007ff8:	6013      	str	r3, [r2, #0]
 8007ffa:	f7ff febb 	bl	8007d74 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8007ffe:	4e33      	ldr	r6, [pc, #204]	; (80080cc <xTaskIncrementTick+0x114>)
 8008000:	4f33      	ldr	r7, [pc, #204]	; (80080d0 <xTaskIncrementTick+0x118>)
 8008002:	6833      	ldr	r3, [r6, #0]
 8008004:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 80080dc <xTaskIncrementTick+0x124>
 8008008:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800800a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800800e:	d211      	bcs.n	8008034 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008010:	f8d8 3000 	ldr.w	r3, [r8]
 8008014:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008016:	2214      	movs	r2, #20
 8008018:	4353      	muls	r3, r2
 800801a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800801c:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800801e:	4b2d      	ldr	r3, [pc, #180]	; (80080d4 <xTaskIncrementTick+0x11c>)
 8008020:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8008022:	bf28      	it	cs
 8008024:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8008026:	2b00      	cmp	r3, #0
 8008028:	bf18      	it	ne
 800802a:	2401      	movne	r4, #1
}
 800802c:	4620      	mov	r0, r4
 800802e:	b003      	add	sp, #12
 8008030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008034:	f8df 9088 	ldr.w	r9, [pc, #136]	; 80080c0 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008038:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 80080e0 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800803c:	f8d9 3000 	ldr.w	r3, [r9]
 8008040:	681b      	ldr	r3, [r3, #0]
 8008042:	b91b      	cbnz	r3, 800804c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008044:	f04f 33ff 	mov.w	r3, #4294967295
 8008048:	6033      	str	r3, [r6, #0]
					break;
 800804a:	e7e1      	b.n	8008010 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800804c:	f8d9 3000 	ldr.w	r3, [r9]
 8008050:	68db      	ldr	r3, [r3, #12]
 8008052:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008056:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800805a:	4295      	cmp	r5, r2
 800805c:	d201      	bcs.n	8008062 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800805e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008060:	e7d6      	b.n	8008010 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008062:	f10b 0104 	add.w	r1, fp, #4
 8008066:	4608      	mov	r0, r1
 8008068:	9101      	str	r1, [sp, #4]
 800806a:	f7fe ff10 	bl	8006e8e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800806e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008072:	9901      	ldr	r1, [sp, #4]
 8008074:	b122      	cbz	r2, 8008080 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008076:	f10b 0018 	add.w	r0, fp, #24
 800807a:	f7fe ff08 	bl	8006e8e <uxListRemove>
 800807e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008080:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008084:	f8da 2000 	ldr.w	r2, [sl]
 8008088:	2314      	movs	r3, #20
 800808a:	4290      	cmp	r0, r2
 800808c:	bf88      	it	hi
 800808e:	f8ca 0000 	strhi.w	r0, [sl]
 8008092:	fb03 7000 	mla	r0, r3, r0, r7
 8008096:	f7fe fed7 	bl	8006e48 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800809a:	f8d8 1000 	ldr.w	r1, [r8]
 800809e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 80080a2:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80080a4:	429a      	cmp	r2, r3
 80080a6:	bf28      	it	cs
 80080a8:	2401      	movcs	r4, #1
 80080aa:	e7c7      	b.n	800803c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 80080ac:	4a0a      	ldr	r2, [pc, #40]	; (80080d8 <xTaskIncrementTick+0x120>)
 80080ae:	6813      	ldr	r3, [r2, #0]
 80080b0:	3301      	adds	r3, #1
 80080b2:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 80080b4:	2400      	movs	r4, #0
	return xSwitchRequired;
 80080b6:	e7b9      	b.n	800802c <xTaskIncrementTick+0x74>
 80080b8:	2000a2d8 	.word	0x2000a2d8
 80080bc:	2000a358 	.word	0x2000a358
 80080c0:	20009e68 	.word	0x20009e68
 80080c4:	20009e6c 	.word	0x20009e6c
 80080c8:	2000a310 	.word	0x2000a310
 80080cc:	2000a30c 	.word	0x2000a30c
 80080d0:	20009e70 	.word	0x20009e70
 80080d4:	2000a35c 	.word	0x2000a35c
 80080d8:	2000a314 	.word	0x2000a314
 80080dc:	20009e64 	.word	0x20009e64
 80080e0:	2000a2e0 	.word	0x2000a2e0

080080e4 <xTaskResumeAll>:
{
 80080e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 80080e6:	4c31      	ldr	r4, [pc, #196]	; (80081ac <xTaskResumeAll+0xc8>)
 80080e8:	6823      	ldr	r3, [r4, #0]
 80080ea:	b943      	cbnz	r3, 80080fe <xTaskResumeAll+0x1a>
 80080ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080f0:	f383 8811 	msr	BASEPRI, r3
 80080f4:	f3bf 8f6f 	isb	sy
 80080f8:	f3bf 8f4f 	dsb	sy
 80080fc:	e7fe      	b.n	80080fc <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 80080fe:	f7fe ff41 	bl	8006f84 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008102:	6823      	ldr	r3, [r4, #0]
 8008104:	3b01      	subs	r3, #1
 8008106:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008108:	6824      	ldr	r4, [r4, #0]
 800810a:	b12c      	cbz	r4, 8008118 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800810c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800810e:	f7fe ff59 	bl	8006fc4 <vPortExitCritical>
}
 8008112:	4620      	mov	r0, r4
 8008114:	b003      	add	sp, #12
 8008116:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008118:	4b25      	ldr	r3, [pc, #148]	; (80081b0 <xTaskResumeAll+0xcc>)
 800811a:	681b      	ldr	r3, [r3, #0]
 800811c:	2b00      	cmp	r3, #0
 800811e:	d0f5      	beq.n	800810c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008120:	4d24      	ldr	r5, [pc, #144]	; (80081b4 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008122:	4e25      	ldr	r6, [pc, #148]	; (80081b8 <xTaskResumeAll+0xd4>)
 8008124:	4f25      	ldr	r7, [pc, #148]	; (80081bc <xTaskResumeAll+0xd8>)
 8008126:	e01e      	b.n	8008166 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008128:	68eb      	ldr	r3, [r5, #12]
 800812a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800812c:	f104 0018 	add.w	r0, r4, #24
 8008130:	f7fe fead 	bl	8006e8e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008134:	1d21      	adds	r1, r4, #4
 8008136:	4608      	mov	r0, r1
 8008138:	9101      	str	r1, [sp, #4]
 800813a:	f7fe fea8 	bl	8006e8e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800813e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008140:	6832      	ldr	r2, [r6, #0]
 8008142:	9901      	ldr	r1, [sp, #4]
 8008144:	2014      	movs	r0, #20
 8008146:	4293      	cmp	r3, r2
 8008148:	fb00 7003 	mla	r0, r0, r3, r7
 800814c:	bf88      	it	hi
 800814e:	6033      	strhi	r3, [r6, #0]
 8008150:	f7fe fe7a 	bl	8006e48 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008154:	4b1a      	ldr	r3, [pc, #104]	; (80081c0 <xTaskResumeAll+0xdc>)
 8008156:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008158:	681b      	ldr	r3, [r3, #0]
 800815a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800815c:	429a      	cmp	r2, r3
 800815e:	d302      	bcc.n	8008166 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008160:	4b18      	ldr	r3, [pc, #96]	; (80081c4 <xTaskResumeAll+0xe0>)
 8008162:	2201      	movs	r2, #1
 8008164:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008166:	682b      	ldr	r3, [r5, #0]
 8008168:	2b00      	cmp	r3, #0
 800816a:	d1dd      	bne.n	8008128 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800816c:	b10c      	cbz	r4, 8008172 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800816e:	f7ff fe01 	bl	8007d74 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008172:	4d15      	ldr	r5, [pc, #84]	; (80081c8 <xTaskResumeAll+0xe4>)
 8008174:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008176:	b144      	cbz	r4, 800818a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008178:	4e12      	ldr	r6, [pc, #72]	; (80081c4 <xTaskResumeAll+0xe0>)
 800817a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800817c:	f7ff ff1c 	bl	8007fb8 <xTaskIncrementTick>
 8008180:	b100      	cbz	r0, 8008184 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008182:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008184:	3c01      	subs	r4, #1
 8008186:	d1f9      	bne.n	800817c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8008188:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800818a:	4b0e      	ldr	r3, [pc, #56]	; (80081c4 <xTaskResumeAll+0xe0>)
 800818c:	681b      	ldr	r3, [r3, #0]
 800818e:	2b00      	cmp	r3, #0
 8008190:	d0bc      	beq.n	800810c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008192:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008196:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800819a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800819e:	f3bf 8f4f 	dsb	sy
 80081a2:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80081a6:	2401      	movs	r4, #1
 80081a8:	e7b1      	b.n	800810e <xTaskResumeAll+0x2a>
 80081aa:	bf00      	nop
 80081ac:	2000a2d8 	.word	0x2000a2d8
 80081b0:	2000a2d0 	.word	0x2000a2d0
 80081b4:	2000a318 	.word	0x2000a318
 80081b8:	2000a2e0 	.word	0x2000a2e0
 80081bc:	20009e70 	.word	0x20009e70
 80081c0:	20009e64 	.word	0x20009e64
 80081c4:	2000a35c 	.word	0x2000a35c
 80081c8:	2000a314 	.word	0x2000a314

080081cc <vTaskDelay>:
	{
 80081cc:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80081ce:	b950      	cbnz	r0, 80081e6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80081d0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80081d4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80081d8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80081dc:	f3bf 8f4f 	dsb	sy
 80081e0:	f3bf 8f6f 	isb	sy
	}
 80081e4:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80081e6:	4b0a      	ldr	r3, [pc, #40]	; (8008210 <vTaskDelay+0x44>)
 80081e8:	6819      	ldr	r1, [r3, #0]
 80081ea:	b141      	cbz	r1, 80081fe <vTaskDelay+0x32>
 80081ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081f0:	f383 8811 	msr	BASEPRI, r3
 80081f4:	f3bf 8f6f 	isb	sy
 80081f8:	f3bf 8f4f 	dsb	sy
 80081fc:	e7fe      	b.n	80081fc <vTaskDelay+0x30>
			vTaskSuspendAll();
 80081fe:	f7ff fecd 	bl	8007f9c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008202:	f7ff fd7f 	bl	8007d04 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008206:	f7ff ff6d 	bl	80080e4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800820a:	2800      	cmp	r0, #0
 800820c:	d0e0      	beq.n	80081d0 <vTaskDelay+0x4>
 800820e:	e7e9      	b.n	80081e4 <vTaskDelay+0x18>
 8008210:	2000a2d8 	.word	0x2000a2d8

08008214 <vTaskSetApplicationTaskTag>:
	{
 8008214:	b538      	push	{r3, r4, r5, lr}
 8008216:	460d      	mov	r5, r1
		if( xTask == NULL )
 8008218:	4604      	mov	r4, r0
 800821a:	b908      	cbnz	r0, 8008220 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800821c:	4b04      	ldr	r3, [pc, #16]	; (8008230 <vTaskSetApplicationTaskTag+0x1c>)
 800821e:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8008220:	f7fe feb0 	bl	8006f84 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8008224:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8008226:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800822a:	f7fe becb 	b.w	8006fc4 <vPortExitCritical>
 800822e:	bf00      	nop
 8008230:	20009e64 	.word	0x20009e64

08008234 <xTaskCallApplicationTaskHook>:
	{
 8008234:	4603      	mov	r3, r0
 8008236:	4608      	mov	r0, r1
		if( xTask == NULL )
 8008238:	b90b      	cbnz	r3, 800823e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800823a:	4b03      	ldr	r3, [pc, #12]	; (8008248 <xTaskCallApplicationTaskHook+0x14>)
 800823c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800823e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008240:	b103      	cbz	r3, 8008244 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8008242:	4718      	bx	r3
	}
 8008244:	4618      	mov	r0, r3
 8008246:	4770      	bx	lr
 8008248:	20009e64 	.word	0x20009e64

0800824c <vTaskStartScheduler>:
{
 800824c:	b510      	push	{r4, lr}
 800824e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008250:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008252:	aa07      	add	r2, sp, #28
 8008254:	a906      	add	r1, sp, #24
 8008256:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008258:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800825c:	f7fe fcd4 	bl	8006c08 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008260:	9b05      	ldr	r3, [sp, #20]
 8008262:	9302      	str	r3, [sp, #8]
 8008264:	9b06      	ldr	r3, [sp, #24]
 8008266:	9a07      	ldr	r2, [sp, #28]
 8008268:	4919      	ldr	r1, [pc, #100]	; (80082d0 <vTaskStartScheduler+0x84>)
 800826a:	481a      	ldr	r0, [pc, #104]	; (80082d4 <vTaskStartScheduler+0x88>)
 800826c:	e9cd 4300 	strd	r4, r3, [sp]
 8008270:	4623      	mov	r3, r4
 8008272:	f7ff fe2e 	bl	8007ed2 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008276:	b340      	cbz	r0, 80082ca <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8008278:	f000 fa8a 	bl	8008790 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800827c:	2801      	cmp	r0, #1
 800827e:	d119      	bne.n	80082b4 <vTaskStartScheduler+0x68>
 8008280:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008284:	f383 8811 	msr	BASEPRI, r3
 8008288:	f3bf 8f6f 	isb	sy
 800828c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008290:	4b11      	ldr	r3, [pc, #68]	; (80082d8 <vTaskStartScheduler+0x8c>)
 8008292:	f04f 32ff 	mov.w	r2, #4294967295
 8008296:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008298:	4b10      	ldr	r3, [pc, #64]	; (80082dc <vTaskStartScheduler+0x90>)
 800829a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800829c:	4b10      	ldr	r3, [pc, #64]	; (80082e0 <vTaskStartScheduler+0x94>)
 800829e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 80082a0:	4b10      	ldr	r3, [pc, #64]	; (80082e4 <vTaskStartScheduler+0x98>)
 80082a2:	4621      	mov	r1, r4
 80082a4:	6818      	ldr	r0, [r3, #0]
 80082a6:	f7ff ffc5 	bl	8008234 <xTaskCallApplicationTaskHook>
}
 80082aa:	b008      	add	sp, #32
 80082ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 80082b0:	f7fe bef8 	b.w	80070a4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80082b4:	3001      	adds	r0, #1
 80082b6:	d108      	bne.n	80082ca <vTaskStartScheduler+0x7e>
 80082b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082bc:	f383 8811 	msr	BASEPRI, r3
 80082c0:	f3bf 8f6f 	isb	sy
 80082c4:	f3bf 8f4f 	dsb	sy
 80082c8:	e7fe      	b.n	80082c8 <vTaskStartScheduler+0x7c>
}
 80082ca:	b008      	add	sp, #32
 80082cc:	bd10      	pop	{r4, pc}
 80082ce:	bf00      	nop
 80082d0:	0801bf3d 	.word	0x0801bf3d
 80082d4:	08007dd1 	.word	0x08007dd1
 80082d8:	2000a30c 	.word	0x2000a30c
 80082dc:	2000a32c 	.word	0x2000a32c
 80082e0:	2000a358 	.word	0x2000a358
 80082e4:	20009e64 	.word	0x20009e64

080082e8 <vTaskSwitchContext>:
{
 80082e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80082ea:	4b1c      	ldr	r3, [pc, #112]	; (800835c <vTaskSwitchContext+0x74>)
 80082ec:	681a      	ldr	r2, [r3, #0]
 80082ee:	4b1c      	ldr	r3, [pc, #112]	; (8008360 <vTaskSwitchContext+0x78>)
 80082f0:	b112      	cbz	r2, 80082f8 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80082f2:	2201      	movs	r2, #1
 80082f4:	601a      	str	r2, [r3, #0]
}
 80082f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 80082f8:	4c1a      	ldr	r4, [pc, #104]	; (8008364 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 80082fa:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80082fc:	4e1a      	ldr	r6, [pc, #104]	; (8008368 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 80082fe:	6820      	ldr	r0, [r4, #0]
 8008300:	2101      	movs	r1, #1
 8008302:	f7ff ff97 	bl	8008234 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008306:	6832      	ldr	r2, [r6, #0]
 8008308:	4918      	ldr	r1, [pc, #96]	; (800836c <vTaskSwitchContext+0x84>)
 800830a:	2714      	movs	r7, #20
 800830c:	fb07 f302 	mul.w	r3, r7, r2
 8008310:	18c8      	adds	r0, r1, r3
 8008312:	58cd      	ldr	r5, [r1, r3]
 8008314:	b1ad      	cbz	r5, 8008342 <vTaskSwitchContext+0x5a>
 8008316:	6845      	ldr	r5, [r0, #4]
 8008318:	3308      	adds	r3, #8
 800831a:	686d      	ldr	r5, [r5, #4]
 800831c:	6045      	str	r5, [r0, #4]
 800831e:	440b      	add	r3, r1
 8008320:	429d      	cmp	r5, r3
 8008322:	bf04      	itt	eq
 8008324:	686b      	ldreq	r3, [r5, #4]
 8008326:	6043      	streq	r3, [r0, #4]
 8008328:	2314      	movs	r3, #20
 800832a:	fb03 1102 	mla	r1, r3, r2, r1
 800832e:	684b      	ldr	r3, [r1, #4]
 8008330:	68db      	ldr	r3, [r3, #12]
 8008332:	6023      	str	r3, [r4, #0]
 8008334:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8008336:	6820      	ldr	r0, [r4, #0]
 8008338:	2100      	movs	r1, #0
}
 800833a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800833e:	f7ff bf79 	b.w	8008234 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008342:	b942      	cbnz	r2, 8008356 <vTaskSwitchContext+0x6e>
 8008344:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008348:	f383 8811 	msr	BASEPRI, r3
 800834c:	f3bf 8f6f 	isb	sy
 8008350:	f3bf 8f4f 	dsb	sy
 8008354:	e7fe      	b.n	8008354 <vTaskSwitchContext+0x6c>
 8008356:	3a01      	subs	r2, #1
 8008358:	e7d8      	b.n	800830c <vTaskSwitchContext+0x24>
 800835a:	bf00      	nop
 800835c:	2000a2d8 	.word	0x2000a2d8
 8008360:	2000a35c 	.word	0x2000a35c
 8008364:	20009e64 	.word	0x20009e64
 8008368:	2000a2e0 	.word	0x2000a2e0
 800836c:	20009e70 	.word	0x20009e70

08008370 <vTaskPlaceOnEventList>:
{
 8008370:	b510      	push	{r4, lr}
 8008372:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008374:	b940      	cbnz	r0, 8008388 <vTaskPlaceOnEventList+0x18>
 8008376:	f04f 0350 	mov.w	r3, #80	; 0x50
 800837a:	f383 8811 	msr	BASEPRI, r3
 800837e:	f3bf 8f6f 	isb	sy
 8008382:	f3bf 8f4f 	dsb	sy
 8008386:	e7fe      	b.n	8008386 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008388:	4b05      	ldr	r3, [pc, #20]	; (80083a0 <vTaskPlaceOnEventList+0x30>)
 800838a:	6819      	ldr	r1, [r3, #0]
 800838c:	3118      	adds	r1, #24
 800838e:	f7fe fd67 	bl	8006e60 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008392:	4620      	mov	r0, r4
 8008394:	2101      	movs	r1, #1
}
 8008396:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800839a:	f7ff bcb3 	b.w	8007d04 <prvAddCurrentTaskToDelayedList>
 800839e:	bf00      	nop
 80083a0:	20009e64 	.word	0x20009e64

080083a4 <vTaskPlaceOnEventListRestricted>:
	{
 80083a4:	b538      	push	{r3, r4, r5, lr}
 80083a6:	460d      	mov	r5, r1
 80083a8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 80083aa:	b940      	cbnz	r0, 80083be <vTaskPlaceOnEventListRestricted+0x1a>
 80083ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083b0:	f383 8811 	msr	BASEPRI, r3
 80083b4:	f3bf 8f6f 	isb	sy
 80083b8:	f3bf 8f4f 	dsb	sy
 80083bc:	e7fe      	b.n	80083bc <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80083be:	4b07      	ldr	r3, [pc, #28]	; (80083dc <vTaskPlaceOnEventListRestricted+0x38>)
 80083c0:	6819      	ldr	r1, [r3, #0]
 80083c2:	3118      	adds	r1, #24
 80083c4:	f7fe fd40 	bl	8006e48 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80083c8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80083ca:	4621      	mov	r1, r4
 80083cc:	bf0c      	ite	eq
 80083ce:	4628      	moveq	r0, r5
 80083d0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80083d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80083d8:	f7ff bc94 	b.w	8007d04 <prvAddCurrentTaskToDelayedList>
 80083dc:	20009e64 	.word	0x20009e64

080083e0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083e0:	68c3      	ldr	r3, [r0, #12]
{
 80083e2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083e4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80083e6:	b944      	cbnz	r4, 80083fa <xTaskRemoveFromEventList+0x1a>
 80083e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083ec:	f383 8811 	msr	BASEPRI, r3
 80083f0:	f3bf 8f6f 	isb	sy
 80083f4:	f3bf 8f4f 	dsb	sy
 80083f8:	e7fe      	b.n	80083f8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80083fa:	f104 0118 	add.w	r1, r4, #24
 80083fe:	4608      	mov	r0, r1
 8008400:	9101      	str	r1, [sp, #4]
 8008402:	f7fe fd44 	bl	8006e8e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008406:	4b12      	ldr	r3, [pc, #72]	; (8008450 <xTaskRemoveFromEventList+0x70>)
 8008408:	9901      	ldr	r1, [sp, #4]
 800840a:	681b      	ldr	r3, [r3, #0]
 800840c:	b9eb      	cbnz	r3, 800844a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800840e:	1d21      	adds	r1, r4, #4
 8008410:	4608      	mov	r0, r1
 8008412:	9101      	str	r1, [sp, #4]
 8008414:	f7fe fd3b 	bl	8006e8e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008418:	4a0e      	ldr	r2, [pc, #56]	; (8008454 <xTaskRemoveFromEventList+0x74>)
 800841a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800841c:	6810      	ldr	r0, [r2, #0]
 800841e:	9901      	ldr	r1, [sp, #4]
 8008420:	4283      	cmp	r3, r0
 8008422:	bf88      	it	hi
 8008424:	6013      	strhi	r3, [r2, #0]
 8008426:	4a0c      	ldr	r2, [pc, #48]	; (8008458 <xTaskRemoveFromEventList+0x78>)
 8008428:	2014      	movs	r0, #20
 800842a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800842e:	f7fe fd0b 	bl	8006e48 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008432:	4b0a      	ldr	r3, [pc, #40]	; (800845c <xTaskRemoveFromEventList+0x7c>)
 8008434:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008436:	681b      	ldr	r3, [r3, #0]
 8008438:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800843a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800843c:	bf85      	ittet	hi
 800843e:	4b08      	ldrhi	r3, [pc, #32]	; (8008460 <xTaskRemoveFromEventList+0x80>)
 8008440:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008442:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008444:	6018      	strhi	r0, [r3, #0]
}
 8008446:	b002      	add	sp, #8
 8008448:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800844a:	4806      	ldr	r0, [pc, #24]	; (8008464 <xTaskRemoveFromEventList+0x84>)
 800844c:	e7ef      	b.n	800842e <xTaskRemoveFromEventList+0x4e>
 800844e:	bf00      	nop
 8008450:	2000a2d8 	.word	0x2000a2d8
 8008454:	2000a2e0 	.word	0x2000a2e0
 8008458:	20009e70 	.word	0x20009e70
 800845c:	20009e64 	.word	0x20009e64
 8008460:	2000a35c 	.word	0x2000a35c
 8008464:	2000a318 	.word	0x2000a318

08008468 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008468:	4b03      	ldr	r3, [pc, #12]	; (8008478 <vTaskInternalSetTimeOutState+0x10>)
 800846a:	681b      	ldr	r3, [r3, #0]
 800846c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800846e:	4b03      	ldr	r3, [pc, #12]	; (800847c <vTaskInternalSetTimeOutState+0x14>)
 8008470:	681b      	ldr	r3, [r3, #0]
 8008472:	6043      	str	r3, [r0, #4]
}
 8008474:	4770      	bx	lr
 8008476:	bf00      	nop
 8008478:	2000a310 	.word	0x2000a310
 800847c:	2000a358 	.word	0x2000a358

08008480 <xTaskCheckForTimeOut>:
{
 8008480:	b570      	push	{r4, r5, r6, lr}
 8008482:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008484:	4605      	mov	r5, r0
 8008486:	b940      	cbnz	r0, 800849a <xTaskCheckForTimeOut+0x1a>
 8008488:	f04f 0350 	mov.w	r3, #80	; 0x50
 800848c:	f383 8811 	msr	BASEPRI, r3
 8008490:	f3bf 8f6f 	isb	sy
 8008494:	f3bf 8f4f 	dsb	sy
 8008498:	e7fe      	b.n	8008498 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800849a:	b941      	cbnz	r1, 80084ae <xTaskCheckForTimeOut+0x2e>
 800849c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084a0:	f383 8811 	msr	BASEPRI, r3
 80084a4:	f3bf 8f6f 	isb	sy
 80084a8:	f3bf 8f4f 	dsb	sy
 80084ac:	e7fe      	b.n	80084ac <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80084ae:	f7fe fd69 	bl	8006f84 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80084b2:	4b0f      	ldr	r3, [pc, #60]	; (80084f0 <xTaskCheckForTimeOut+0x70>)
 80084b4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80084b6:	6823      	ldr	r3, [r4, #0]
 80084b8:	1c5a      	adds	r2, r3, #1
 80084ba:	d010      	beq.n	80084de <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80084bc:	480d      	ldr	r0, [pc, #52]	; (80084f4 <xTaskCheckForTimeOut+0x74>)
 80084be:	682e      	ldr	r6, [r5, #0]
 80084c0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80084c2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80084c4:	4286      	cmp	r6, r0
 80084c6:	d001      	beq.n	80084cc <xTaskCheckForTimeOut+0x4c>
 80084c8:	428a      	cmp	r2, r1
 80084ca:	d90f      	bls.n	80084ec <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80084cc:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80084ce:	4283      	cmp	r3, r0
 80084d0:	d90a      	bls.n	80084e8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80084d2:	1a5b      	subs	r3, r3, r1
 80084d4:	4413      	add	r3, r2
 80084d6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80084d8:	4628      	mov	r0, r5
 80084da:	f7ff ffc5 	bl	8008468 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80084de:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80084e0:	f7fe fd70 	bl	8006fc4 <vPortExitCritical>
}
 80084e4:	4620      	mov	r0, r4
 80084e6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80084e8:	2300      	movs	r3, #0
 80084ea:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80084ec:	2401      	movs	r4, #1
 80084ee:	e7f7      	b.n	80084e0 <xTaskCheckForTimeOut+0x60>
 80084f0:	2000a358 	.word	0x2000a358
 80084f4:	2000a310 	.word	0x2000a310

080084f8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80084f8:	4b01      	ldr	r3, [pc, #4]	; (8008500 <vTaskMissedYield+0x8>)
 80084fa:	2201      	movs	r2, #1
 80084fc:	601a      	str	r2, [r3, #0]
}
 80084fe:	4770      	bx	lr
 8008500:	2000a35c 	.word	0x2000a35c

08008504 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008504:	4b05      	ldr	r3, [pc, #20]	; (800851c <xTaskGetSchedulerState+0x18>)
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	b133      	cbz	r3, 8008518 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800850a:	4b05      	ldr	r3, [pc, #20]	; (8008520 <xTaskGetSchedulerState+0x1c>)
 800850c:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800850e:	2b00      	cmp	r3, #0
 8008510:	bf0c      	ite	eq
 8008512:	2002      	moveq	r0, #2
 8008514:	2000      	movne	r0, #0
 8008516:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008518:	2001      	movs	r0, #1
	}
 800851a:	4770      	bx	lr
 800851c:	2000a32c 	.word	0x2000a32c
 8008520:	2000a2d8 	.word	0x2000a2d8

08008524 <xTaskPriorityInherit>:
	{
 8008524:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008526:	4604      	mov	r4, r0
 8008528:	b348      	cbz	r0, 800857e <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800852a:	4d1c      	ldr	r5, [pc, #112]	; (800859c <xTaskPriorityInherit+0x78>)
 800852c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800852e:	682a      	ldr	r2, [r5, #0]
 8008530:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8008532:	4293      	cmp	r3, r2
 8008534:	d229      	bcs.n	800858a <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008536:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008538:	4e19      	ldr	r6, [pc, #100]	; (80085a0 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800853a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800853c:	bfa1      	itttt	ge
 800853e:	682a      	ldrge	r2, [r5, #0]
 8008540:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008542:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008546:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008548:	2214      	movs	r2, #20
 800854a:	fb02 6303 	mla	r3, r2, r3, r6
 800854e:	6942      	ldr	r2, [r0, #20]
 8008550:	429a      	cmp	r2, r3
 8008552:	d116      	bne.n	8008582 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008554:	1d01      	adds	r1, r0, #4
 8008556:	4608      	mov	r0, r1
 8008558:	9101      	str	r1, [sp, #4]
 800855a:	f7fe fc98 	bl	8006e8e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800855e:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008560:	4a10      	ldr	r2, [pc, #64]	; (80085a4 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008562:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008564:	6810      	ldr	r0, [r2, #0]
 8008566:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008568:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800856a:	4283      	cmp	r3, r0
 800856c:	f04f 0014 	mov.w	r0, #20
 8008570:	fb00 6003 	mla	r0, r0, r3, r6
 8008574:	bf88      	it	hi
 8008576:	6013      	strhi	r3, [r2, #0]
 8008578:	f7fe fc66 	bl	8006e48 <vListInsertEnd>
				xReturn = pdTRUE;
 800857c:	2001      	movs	r0, #1
	}
 800857e:	b002      	add	sp, #8
 8008580:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008582:	682b      	ldr	r3, [r5, #0]
 8008584:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008586:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008588:	e7f8      	b.n	800857c <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800858a:	682b      	ldr	r3, [r5, #0]
 800858c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800858e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008590:	42a0      	cmp	r0, r4
 8008592:	bf2c      	ite	cs
 8008594:	2000      	movcs	r0, #0
 8008596:	2001      	movcc	r0, #1
 8008598:	e7f1      	b.n	800857e <xTaskPriorityInherit+0x5a>
 800859a:	bf00      	nop
 800859c:	20009e64 	.word	0x20009e64
 80085a0:	20009e70 	.word	0x20009e70
 80085a4:	2000a2e0 	.word	0x2000a2e0

080085a8 <xTaskPriorityDisinherit>:
	{
 80085a8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 80085aa:	b910      	cbnz	r0, 80085b2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 80085ac:	2000      	movs	r0, #0
	}
 80085ae:	b002      	add	sp, #8
 80085b0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80085b2:	4b1c      	ldr	r3, [pc, #112]	; (8008624 <xTaskPriorityDisinherit+0x7c>)
 80085b4:	681c      	ldr	r4, [r3, #0]
 80085b6:	4284      	cmp	r4, r0
 80085b8:	d008      	beq.n	80085cc <xTaskPriorityDisinherit+0x24>
 80085ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085be:	f383 8811 	msr	BASEPRI, r3
 80085c2:	f3bf 8f6f 	isb	sy
 80085c6:	f3bf 8f4f 	dsb	sy
 80085ca:	e7fe      	b.n	80085ca <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 80085cc:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80085ce:	b943      	cbnz	r3, 80085e2 <xTaskPriorityDisinherit+0x3a>
 80085d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085d4:	f383 8811 	msr	BASEPRI, r3
 80085d8:	f3bf 8f6f 	isb	sy
 80085dc:	f3bf 8f4f 	dsb	sy
 80085e0:	e7fe      	b.n	80085e0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80085e2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80085e4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 80085e6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80085e8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80085ea:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80085ec:	d0de      	beq.n	80085ac <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80085ee:	2b00      	cmp	r3, #0
 80085f0:	d1dc      	bne.n	80085ac <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80085f2:	1d21      	adds	r1, r4, #4
 80085f4:	4608      	mov	r0, r1
 80085f6:	9101      	str	r1, [sp, #4]
 80085f8:	f7fe fc49 	bl	8006e8e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80085fc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 80085fe:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008600:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008602:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008606:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008608:	4a07      	ldr	r2, [pc, #28]	; (8008628 <xTaskPriorityDisinherit+0x80>)
 800860a:	6810      	ldr	r0, [r2, #0]
 800860c:	4283      	cmp	r3, r0
 800860e:	bf88      	it	hi
 8008610:	6013      	strhi	r3, [r2, #0]
 8008612:	4a06      	ldr	r2, [pc, #24]	; (800862c <xTaskPriorityDisinherit+0x84>)
 8008614:	2014      	movs	r0, #20
 8008616:	fb00 2003 	mla	r0, r0, r3, r2
 800861a:	f7fe fc15 	bl	8006e48 <vListInsertEnd>
					xReturn = pdTRUE;
 800861e:	2001      	movs	r0, #1
		return xReturn;
 8008620:	e7c5      	b.n	80085ae <xTaskPriorityDisinherit+0x6>
 8008622:	bf00      	nop
 8008624:	20009e64 	.word	0x20009e64
 8008628:	2000a2e0 	.word	0x2000a2e0
 800862c:	20009e70 	.word	0x20009e70

08008630 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008630:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008632:	4604      	mov	r4, r0
 8008634:	2800      	cmp	r0, #0
 8008636:	d044      	beq.n	80086c2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008638:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800863a:	b942      	cbnz	r2, 800864e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800863c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008640:	f383 8811 	msr	BASEPRI, r3
 8008644:	f3bf 8f6f 	isb	sy
 8008648:	f3bf 8f4f 	dsb	sy
 800864c:	e7fe      	b.n	800864c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800864e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008650:	4299      	cmp	r1, r3
 8008652:	bf38      	it	cc
 8008654:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008656:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008658:	428b      	cmp	r3, r1
 800865a:	d032      	beq.n	80086c2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800865c:	2a01      	cmp	r2, #1
 800865e:	d130      	bne.n	80086c2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008660:	4a19      	ldr	r2, [pc, #100]	; (80086c8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008662:	6812      	ldr	r2, [r2, #0]
 8008664:	4282      	cmp	r2, r0
 8008666:	d108      	bne.n	800867a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008668:	f04f 0350 	mov.w	r3, #80	; 0x50
 800866c:	f383 8811 	msr	BASEPRI, r3
 8008670:	f3bf 8f6f 	isb	sy
 8008674:	f3bf 8f4f 	dsb	sy
 8008678:	e7fe      	b.n	8008678 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800867a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800867c:	4d13      	ldr	r5, [pc, #76]	; (80086cc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800867e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008680:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008682:	f04f 0214 	mov.w	r2, #20
 8008686:	fb02 5303 	mla	r3, r2, r3, r5
 800868a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800868c:	bfa4      	itt	ge
 800868e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008692:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008694:	429a      	cmp	r2, r3
 8008696:	d114      	bne.n	80086c2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008698:	1d01      	adds	r1, r0, #4
 800869a:	4608      	mov	r0, r1
 800869c:	9101      	str	r1, [sp, #4]
 800869e:	f7fe fbf6 	bl	8006e8e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80086a2:	4a0b      	ldr	r2, [pc, #44]	; (80086d0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 80086a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80086a6:	6810      	ldr	r0, [r2, #0]
 80086a8:	9901      	ldr	r1, [sp, #4]
 80086aa:	4283      	cmp	r3, r0
 80086ac:	f04f 0014 	mov.w	r0, #20
 80086b0:	fb00 5003 	mla	r0, r0, r3, r5
 80086b4:	bf88      	it	hi
 80086b6:	6013      	strhi	r3, [r2, #0]
	}
 80086b8:	b003      	add	sp, #12
 80086ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 80086be:	f7fe bbc3 	b.w	8006e48 <vListInsertEnd>
	}
 80086c2:	b003      	add	sp, #12
 80086c4:	bd30      	pop	{r4, r5, pc}
 80086c6:	bf00      	nop
 80086c8:	20009e64 	.word	0x20009e64
 80086cc:	20009e70 	.word	0x20009e70
 80086d0:	2000a2e0 	.word	0x2000a2e0

080086d4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80086d4:	4b04      	ldr	r3, [pc, #16]	; (80086e8 <pvTaskIncrementMutexHeldCount+0x14>)
 80086d6:	681a      	ldr	r2, [r3, #0]
 80086d8:	b11a      	cbz	r2, 80086e2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80086da:	6819      	ldr	r1, [r3, #0]
 80086dc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80086de:	3201      	adds	r2, #1
 80086e0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80086e2:	6818      	ldr	r0, [r3, #0]
	}
 80086e4:	4770      	bx	lr
 80086e6:	bf00      	nop
 80086e8:	20009e64 	.word	0x20009e64

080086ec <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80086ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80086ee:	4c11      	ldr	r4, [pc, #68]	; (8008734 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80086f0:	f7fe fc48 	bl	8006f84 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80086f4:	6825      	ldr	r5, [r4, #0]
 80086f6:	b9bd      	cbnz	r5, 8008728 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80086f8:	4f0f      	ldr	r7, [pc, #60]	; (8008738 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80086fa:	4e10      	ldr	r6, [pc, #64]	; (800873c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80086fc:	4638      	mov	r0, r7
 80086fe:	f7fe fb95 	bl	8006e2c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008702:	4630      	mov	r0, r6
 8008704:	f7fe fb92 	bl	8006e2c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008708:	4b0d      	ldr	r3, [pc, #52]	; (8008740 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800870a:	4a0e      	ldr	r2, [pc, #56]	; (8008744 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800870c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800870e:	4b0e      	ldr	r3, [pc, #56]	; (8008748 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008710:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008712:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008714:	200a      	movs	r0, #10
 8008716:	4b0d      	ldr	r3, [pc, #52]	; (800874c <prvCheckForValidListAndQueue+0x60>)
 8008718:	9500      	str	r5, [sp, #0]
 800871a:	f7fe fe44 	bl	80073a6 <xQueueGenericCreateStatic>
 800871e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008720:	b110      	cbz	r0, 8008728 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008722:	490b      	ldr	r1, [pc, #44]	; (8008750 <prvCheckForValidListAndQueue+0x64>)
 8008724:	f7ff fa0e 	bl	8007b44 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008728:	b003      	add	sp, #12
 800872a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800872e:	f7fe bc49 	b.w	8006fc4 <vPortExitCritical>
 8008732:	bf00      	nop
 8008734:	2000a484 	.word	0x2000a484
 8008738:	2000a408 	.word	0x2000a408
 800873c:	2000a41c 	.word	0x2000a41c
 8008740:	2000a360 	.word	0x2000a360
 8008744:	2000a368 	.word	0x2000a368
 8008748:	2000a364 	.word	0x2000a364
 800874c:	2000a434 	.word	0x2000a434
 8008750:	0801bf42 	.word	0x0801bf42

08008754 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008754:	4291      	cmp	r1, r2
{
 8008756:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008758:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800875a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800875c:	d80a      	bhi.n	8008774 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800875e:	1ad2      	subs	r2, r2, r3
 8008760:	6983      	ldr	r3, [r0, #24]
 8008762:	429a      	cmp	r2, r3
 8008764:	d20d      	bcs.n	8008782 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008766:	4b08      	ldr	r3, [pc, #32]	; (8008788 <prvInsertTimerInActiveList+0x34>)
 8008768:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800876a:	6818      	ldr	r0, [r3, #0]
 800876c:	f7fe fb78 	bl	8006e60 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008770:	2000      	movs	r0, #0
}
 8008772:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008774:	429a      	cmp	r2, r3
 8008776:	d201      	bcs.n	800877c <prvInsertTimerInActiveList+0x28>
 8008778:	4299      	cmp	r1, r3
 800877a:	d202      	bcs.n	8008782 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800877c:	4b03      	ldr	r3, [pc, #12]	; (800878c <prvInsertTimerInActiveList+0x38>)
 800877e:	1d01      	adds	r1, r0, #4
 8008780:	e7f3      	b.n	800876a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008782:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008784:	e7f5      	b.n	8008772 <prvInsertTimerInActiveList+0x1e>
 8008786:	bf00      	nop
 8008788:	2000a364 	.word	0x2000a364
 800878c:	2000a360 	.word	0x2000a360

08008790 <xTimerCreateTimerTask>:
{
 8008790:	b510      	push	{r4, lr}
 8008792:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008794:	f7ff ffaa 	bl	80086ec <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008798:	4b12      	ldr	r3, [pc, #72]	; (80087e4 <xTimerCreateTimerTask+0x54>)
 800879a:	681b      	ldr	r3, [r3, #0]
 800879c:	b1b3      	cbz	r3, 80087cc <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800879e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80087a0:	aa07      	add	r2, sp, #28
 80087a2:	a906      	add	r1, sp, #24
 80087a4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80087a6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80087aa:	f7fe fa39 	bl	8006c20 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80087ae:	9b05      	ldr	r3, [sp, #20]
 80087b0:	9302      	str	r3, [sp, #8]
 80087b2:	9b06      	ldr	r3, [sp, #24]
 80087b4:	9301      	str	r3, [sp, #4]
 80087b6:	2302      	movs	r3, #2
 80087b8:	9300      	str	r3, [sp, #0]
 80087ba:	9a07      	ldr	r2, [sp, #28]
 80087bc:	490a      	ldr	r1, [pc, #40]	; (80087e8 <xTimerCreateTimerTask+0x58>)
 80087be:	480b      	ldr	r0, [pc, #44]	; (80087ec <xTimerCreateTimerTask+0x5c>)
 80087c0:	4623      	mov	r3, r4
 80087c2:	f7ff fb86 	bl	8007ed2 <xTaskCreateStatic>
 80087c6:	4b0a      	ldr	r3, [pc, #40]	; (80087f0 <xTimerCreateTimerTask+0x60>)
 80087c8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80087ca:	b940      	cbnz	r0, 80087de <xTimerCreateTimerTask+0x4e>
 80087cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087d0:	f383 8811 	msr	BASEPRI, r3
 80087d4:	f3bf 8f6f 	isb	sy
 80087d8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80087dc:	e7fe      	b.n	80087dc <xTimerCreateTimerTask+0x4c>
}
 80087de:	2001      	movs	r0, #1
 80087e0:	b008      	add	sp, #32
 80087e2:	bd10      	pop	{r4, pc}
 80087e4:	2000a484 	.word	0x2000a484
 80087e8:	0801bf47 	.word	0x0801bf47
 80087ec:	080088f9 	.word	0x080088f9
 80087f0:	2000a488 	.word	0x2000a488

080087f4 <xTimerGenericCommand>:
{
 80087f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80087f6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 80087f8:	4604      	mov	r4, r0
{
 80087fa:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80087fc:	b940      	cbnz	r0, 8008810 <xTimerGenericCommand+0x1c>
 80087fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008802:	f383 8811 	msr	BASEPRI, r3
 8008806:	f3bf 8f6f 	isb	sy
 800880a:	f3bf 8f4f 	dsb	sy
 800880e:	e7fe      	b.n	800880e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8008810:	4d0d      	ldr	r5, [pc, #52]	; (8008848 <xTimerGenericCommand+0x54>)
 8008812:	6828      	ldr	r0, [r5, #0]
 8008814:	b180      	cbz	r0, 8008838 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008816:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008818:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800881c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800881e:	dc0d      	bgt.n	800883c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008820:	f7ff fe70 	bl	8008504 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008824:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008826:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008828:	bf08      	it	eq
 800882a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800882c:	6828      	ldr	r0, [r5, #0]
 800882e:	bf18      	it	ne
 8008830:	461a      	movne	r2, r3
 8008832:	4669      	mov	r1, sp
 8008834:	f7fe fe6c 	bl	8007510 <xQueueGenericSend>
}
 8008838:	b004      	add	sp, #16
 800883a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800883c:	2300      	movs	r3, #0
 800883e:	4669      	mov	r1, sp
 8008840:	f7fe ff19 	bl	8007676 <xQueueGenericSendFromISR>
 8008844:	e7f8      	b.n	8008838 <xTimerGenericCommand+0x44>
 8008846:	bf00      	nop
 8008848:	2000a484 	.word	0x2000a484

0800884c <prvSampleTimeNow>:
{
 800884c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8008850:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 80088f4 <prvSampleTimeNow+0xa8>
{
 8008854:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8008856:	f7ff fba9 	bl	8007fac <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800885a:	f8d8 3000 	ldr.w	r3, [r8]
 800885e:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8008860:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008862:	d940      	bls.n	80088e6 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008864:	4f21      	ldr	r7, [pc, #132]	; (80088ec <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008866:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800886a:	683b      	ldr	r3, [r7, #0]
 800886c:	681a      	ldr	r2, [r3, #0]
 800886e:	b95a      	cbnz	r2, 8008888 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8008870:	4a1f      	ldr	r2, [pc, #124]	; (80088f0 <prvSampleTimeNow+0xa4>)
 8008872:	6811      	ldr	r1, [r2, #0]
 8008874:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8008876:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8008878:	2301      	movs	r3, #1
}
 800887a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800887c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800887e:	f8c8 5000 	str.w	r5, [r8]
}
 8008882:	b004      	add	sp, #16
 8008884:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008888:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800888a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800888c:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008890:	1d21      	adds	r1, r4, #4
 8008892:	4608      	mov	r0, r1
 8008894:	9103      	str	r1, [sp, #12]
 8008896:	f7fe fafa 	bl	8006e8e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800889a:	6a23      	ldr	r3, [r4, #32]
 800889c:	4620      	mov	r0, r4
 800889e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80088a0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80088a4:	9903      	ldr	r1, [sp, #12]
 80088a6:	f013 0f04 	tst.w	r3, #4
 80088aa:	d0de      	beq.n	800886a <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80088ac:	69a3      	ldr	r3, [r4, #24]
 80088ae:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 80088b0:	459a      	cmp	sl, r3
 80088b2:	d205      	bcs.n	80088c0 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80088b4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80088b6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80088b8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80088ba:	f7fe fad1 	bl	8006e60 <vListInsert>
 80088be:	e7d4      	b.n	800886a <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80088c0:	2300      	movs	r3, #0
 80088c2:	f8cd 9000 	str.w	r9, [sp]
 80088c6:	4652      	mov	r2, sl
 80088c8:	4619      	mov	r1, r3
 80088ca:	4620      	mov	r0, r4
 80088cc:	f7ff ff92 	bl	80087f4 <xTimerGenericCommand>
				configASSERT( xResult );
 80088d0:	2800      	cmp	r0, #0
 80088d2:	d1ca      	bne.n	800886a <prvSampleTimeNow+0x1e>
 80088d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088d8:	f383 8811 	msr	BASEPRI, r3
 80088dc:	f3bf 8f6f 	isb	sy
 80088e0:	f3bf 8f4f 	dsb	sy
 80088e4:	e7fe      	b.n	80088e4 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 80088e6:	2300      	movs	r3, #0
 80088e8:	e7c7      	b.n	800887a <prvSampleTimeNow+0x2e>
 80088ea:	bf00      	nop
 80088ec:	2000a360 	.word	0x2000a360
 80088f0:	2000a364 	.word	0x2000a364
 80088f4:	2000a430 	.word	0x2000a430

080088f8 <prvTimerTask>:
{
 80088f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80088fc:	4d6e      	ldr	r5, [pc, #440]	; (8008ab8 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80088fe:	4e6f      	ldr	r6, [pc, #444]	; (8008abc <prvTimerTask+0x1c4>)
{
 8008900:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008902:	682b      	ldr	r3, [r5, #0]
 8008904:	f8d3 8000 	ldr.w	r8, [r3]
 8008908:	f1b8 0f00 	cmp.w	r8, #0
 800890c:	d035      	beq.n	800897a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800890e:	68db      	ldr	r3, [r3, #12]
 8008910:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008914:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8008916:	f7ff fb41 	bl	8007f9c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800891a:	a804      	add	r0, sp, #16
 800891c:	f7ff ff96 	bl	800884c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8008920:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008922:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8008924:	2b00      	cmp	r3, #0
 8008926:	d169      	bne.n	80089fc <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008928:	2c00      	cmp	r4, #0
 800892a:	d14c      	bne.n	80089c6 <prvTimerTask+0xce>
 800892c:	4540      	cmp	r0, r8
 800892e:	d350      	bcc.n	80089d2 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8008930:	f7ff fbd8 	bl	80080e4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008934:	682b      	ldr	r3, [r5, #0]
 8008936:	68db      	ldr	r3, [r3, #12]
 8008938:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800893a:	1d38      	adds	r0, r7, #4
 800893c:	f7fe faa7 	bl	8006e8e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008940:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8008944:	0758      	lsls	r0, r3, #29
 8008946:	d51a      	bpl.n	800897e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008948:	69b9      	ldr	r1, [r7, #24]
 800894a:	4643      	mov	r3, r8
 800894c:	464a      	mov	r2, r9
 800894e:	4441      	add	r1, r8
 8008950:	4638      	mov	r0, r7
 8008952:	f7ff feff 	bl	8008754 <prvInsertTimerInActiveList>
 8008956:	b1b0      	cbz	r0, 8008986 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008958:	9400      	str	r4, [sp, #0]
 800895a:	4623      	mov	r3, r4
 800895c:	4642      	mov	r2, r8
 800895e:	4621      	mov	r1, r4
 8008960:	4638      	mov	r0, r7
 8008962:	f7ff ff47 	bl	80087f4 <xTimerGenericCommand>
			configASSERT( xResult );
 8008966:	b970      	cbnz	r0, 8008986 <prvTimerTask+0x8e>
 8008968:	f04f 0350 	mov.w	r3, #80	; 0x50
 800896c:	f383 8811 	msr	BASEPRI, r3
 8008970:	f3bf 8f6f 	isb	sy
 8008974:	f3bf 8f4f 	dsb	sy
 8008978:	e7fe      	b.n	8008978 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800897a:	2401      	movs	r4, #1
 800897c:	e7cb      	b.n	8008916 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800897e:	f023 0301 	bic.w	r3, r3, #1
 8008982:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008986:	6a3b      	ldr	r3, [r7, #32]
 8008988:	4638      	mov	r0, r7
 800898a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800898c:	6830      	ldr	r0, [r6, #0]
 800898e:	2200      	movs	r2, #0
 8008990:	a904      	add	r1, sp, #16
 8008992:	f7fe ff26 	bl	80077e2 <xQueueReceive>
 8008996:	2800      	cmp	r0, #0
 8008998:	d0b3      	beq.n	8008902 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800899a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800899c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800899e:	2b00      	cmp	r3, #0
 80089a0:	db2f      	blt.n	8008a02 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80089a2:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80089a4:	6963      	ldr	r3, [r4, #20]
 80089a6:	2b00      	cmp	r3, #0
 80089a8:	d132      	bne.n	8008a10 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80089aa:	a803      	add	r0, sp, #12
 80089ac:	f7ff ff4e 	bl	800884c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 80089b0:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 80089b2:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 80089b4:	2b09      	cmp	r3, #9
 80089b6:	d8e9      	bhi.n	800898c <prvTimerTask+0x94>
 80089b8:	e8df f003 	tbb	[pc, r3]
 80089bc:	572e2e2e 	.word	0x572e2e2e
 80089c0:	2e2e765e 	.word	0x2e2e765e
 80089c4:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80089c6:	4b3e      	ldr	r3, [pc, #248]	; (8008ac0 <prvTimerTask+0x1c8>)
 80089c8:	681b      	ldr	r3, [r3, #0]
 80089ca:	681c      	ldr	r4, [r3, #0]
 80089cc:	fab4 f484 	clz	r4, r4
 80089d0:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80089d2:	6830      	ldr	r0, [r6, #0]
 80089d4:	4622      	mov	r2, r4
 80089d6:	eba8 0109 	sub.w	r1, r8, r9
 80089da:	f7ff f8f0 	bl	8007bbe <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80089de:	f7ff fb81 	bl	80080e4 <xTaskResumeAll>
 80089e2:	2800      	cmp	r0, #0
 80089e4:	d1d2      	bne.n	800898c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 80089e6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80089ea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80089ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80089f2:	f3bf 8f4f 	dsb	sy
 80089f6:	f3bf 8f6f 	isb	sy
 80089fa:	e7c7      	b.n	800898c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 80089fc:	f7ff fb72 	bl	80080e4 <xTaskResumeAll>
}
 8008a00:	e7c4      	b.n	800898c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008a02:	9b05      	ldr	r3, [sp, #20]
 8008a04:	9907      	ldr	r1, [sp, #28]
 8008a06:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008a08:	9b04      	ldr	r3, [sp, #16]
 8008a0a:	2b00      	cmp	r3, #0
 8008a0c:	dbbe      	blt.n	800898c <prvTimerTask+0x94>
 8008a0e:	e7c8      	b.n	80089a2 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008a10:	1d20      	adds	r0, r4, #4
 8008a12:	f7fe fa3c 	bl	8006e8e <uxListRemove>
 8008a16:	e7c8      	b.n	80089aa <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008a18:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008a1c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008a1e:	f043 0301 	orr.w	r3, r3, #1
 8008a22:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008a26:	9b05      	ldr	r3, [sp, #20]
 8008a28:	4620      	mov	r0, r4
 8008a2a:	4419      	add	r1, r3
 8008a2c:	f7ff fe92 	bl	8008754 <prvInsertTimerInActiveList>
 8008a30:	2800      	cmp	r0, #0
 8008a32:	d0ab      	beq.n	800898c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008a34:	6a23      	ldr	r3, [r4, #32]
 8008a36:	4620      	mov	r0, r4
 8008a38:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008a3a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008a3e:	0759      	lsls	r1, r3, #29
 8008a40:	d5a4      	bpl.n	800898c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008a42:	69a2      	ldr	r2, [r4, #24]
 8008a44:	9905      	ldr	r1, [sp, #20]
 8008a46:	2300      	movs	r3, #0
 8008a48:	440a      	add	r2, r1
 8008a4a:	9300      	str	r3, [sp, #0]
 8008a4c:	4619      	mov	r1, r3
 8008a4e:	4620      	mov	r0, r4
 8008a50:	f7ff fed0 	bl	80087f4 <xTimerGenericCommand>
							configASSERT( xResult );
 8008a54:	2800      	cmp	r0, #0
 8008a56:	d199      	bne.n	800898c <prvTimerTask+0x94>
 8008a58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a5c:	f383 8811 	msr	BASEPRI, r3
 8008a60:	f3bf 8f6f 	isb	sy
 8008a64:	f3bf 8f4f 	dsb	sy
 8008a68:	e7fe      	b.n	8008a68 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008a6a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008a6e:	f023 0301 	bic.w	r3, r3, #1
 8008a72:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008a76:	e789      	b.n	800898c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008a78:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008a7c:	f043 0301 	orr.w	r3, r3, #1
 8008a80:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008a84:	9905      	ldr	r1, [sp, #20]
 8008a86:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008a88:	b941      	cbnz	r1, 8008a9c <prvTimerTask+0x1a4>
 8008a8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a8e:	f383 8811 	msr	BASEPRI, r3
 8008a92:	f3bf 8f6f 	isb	sy
 8008a96:	f3bf 8f4f 	dsb	sy
 8008a9a:	e7fe      	b.n	8008a9a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008a9c:	4603      	mov	r3, r0
 8008a9e:	4401      	add	r1, r0
 8008aa0:	4620      	mov	r0, r4
 8008aa2:	f7ff fe57 	bl	8008754 <prvInsertTimerInActiveList>
					break;
 8008aa6:	e771      	b.n	800898c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008aa8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008aac:	079a      	lsls	r2, r3, #30
 8008aae:	d4de      	bmi.n	8008a6e <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8008ab0:	4620      	mov	r0, r4
 8008ab2:	f7fe f97d 	bl	8006db0 <vPortFree>
 8008ab6:	e769      	b.n	800898c <prvTimerTask+0x94>
 8008ab8:	2000a360 	.word	0x2000a360
 8008abc:	2000a484 	.word	0x2000a484
 8008ac0:	2000a364 	.word	0x2000a364

08008ac4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008ac4:	8880      	ldrh	r0, [r0, #4]
 8008ac6:	4770      	bx	lr

08008ac8 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008ac8:	2300      	movs	r3, #0
 8008aca:	8083      	strh	r3, [r0, #4]
 8008acc:	4770      	bx	lr
	...

08008ad0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008ad0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ad2:	6803      	ldr	r3, [r0, #0]
 8008ad4:	4605      	mov	r5, r0
 8008ad6:	460e      	mov	r6, r1
 8008ad8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008ada:	2100      	movs	r1, #0
 8008adc:	4798      	blx	r3
 8008ade:	682b      	ldr	r3, [r5, #0]
 8008ae0:	4604      	mov	r4, r0
 8008ae2:	6a1b      	ldr	r3, [r3, #32]
 8008ae4:	4628      	mov	r0, r5
 8008ae6:	4798      	blx	r3
 8008ae8:	88ab      	ldrh	r3, [r5, #4]
 8008aea:	1b34      	subs	r4, r6, r4
 8008aec:	b2a4      	uxth	r4, r4
 8008aee:	fbb4 f4f0 	udiv	r4, r4, r0
 8008af2:	42a3      	cmp	r3, r4
 8008af4:	d805      	bhi.n	8008b02 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8008af6:	4b0e      	ldr	r3, [pc, #56]	; (8008b30 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8008af8:	4a0e      	ldr	r2, [pc, #56]	; (8008b34 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008afa:	211d      	movs	r1, #29
 8008afc:	480e      	ldr	r0, [pc, #56]	; (8008b38 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8008afe:	f011 f991 	bl	8019e24 <__assert_func>
 8008b02:	682b      	ldr	r3, [r5, #0]
 8008b04:	2100      	movs	r1, #0
 8008b06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008b08:	4628      	mov	r0, r5
 8008b0a:	4798      	blx	r3
 8008b0c:	682b      	ldr	r3, [r5, #0]
 8008b0e:	4607      	mov	r7, r0
 8008b10:	6a1b      	ldr	r3, [r3, #32]
 8008b12:	4628      	mov	r0, r5
 8008b14:	4798      	blx	r3
 8008b16:	1bf3      	subs	r3, r6, r7
 8008b18:	b29b      	uxth	r3, r3
 8008b1a:	fbb3 f2f0 	udiv	r2, r3, r0
 8008b1e:	fb02 3010 	mls	r0, r2, r0, r3
 8008b22:	b118      	cbz	r0, 8008b2c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008b24:	4b05      	ldr	r3, [pc, #20]	; (8008b3c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008b26:	4a03      	ldr	r2, [pc, #12]	; (8008b34 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008b28:	211e      	movs	r1, #30
 8008b2a:	e7e7      	b.n	8008afc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008b2c:	4620      	mov	r0, r4
 8008b2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008b30:	0801bf4f 	.word	0x0801bf4f
 8008b34:	0801c0ba 	.word	0x0801c0ba
 8008b38:	0801bf64 	.word	0x0801bf64
 8008b3c:	0801bf92 	.word	0x0801bf92

08008b40 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008b40:	b538      	push	{r3, r4, r5, lr}
 8008b42:	6803      	ldr	r3, [r0, #0]
 8008b44:	6a1b      	ldr	r3, [r3, #32]
 8008b46:	460d      	mov	r5, r1
 8008b48:	4604      	mov	r4, r0
 8008b4a:	4798      	blx	r3
 8008b4c:	4285      	cmp	r5, r0
 8008b4e:	d905      	bls.n	8008b5c <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8008b50:	4b0c      	ldr	r3, [pc, #48]	; (8008b84 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8008b52:	4a0d      	ldr	r2, [pc, #52]	; (8008b88 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008b54:	212f      	movs	r1, #47	; 0x2f
 8008b56:	480d      	ldr	r0, [pc, #52]	; (8008b8c <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8008b58:	f011 f964 	bl	8019e24 <__assert_func>
 8008b5c:	6823      	ldr	r3, [r4, #0]
 8008b5e:	88a5      	ldrh	r5, [r4, #4]
 8008b60:	69db      	ldr	r3, [r3, #28]
 8008b62:	4620      	mov	r0, r4
 8008b64:	4798      	blx	r3
 8008b66:	4285      	cmp	r5, r0
 8008b68:	d303      	bcc.n	8008b72 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8008b6a:	4b09      	ldr	r3, [pc, #36]	; (8008b90 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008b6c:	4a06      	ldr	r2, [pc, #24]	; (8008b88 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008b6e:	2130      	movs	r1, #48	; 0x30
 8008b70:	e7f1      	b.n	8008b56 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8008b72:	6823      	ldr	r3, [r4, #0]
 8008b74:	88a1      	ldrh	r1, [r4, #4]
 8008b76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008b78:	4620      	mov	r0, r4
 8008b7a:	4798      	blx	r3
 8008b7c:	88a3      	ldrh	r3, [r4, #4]
 8008b7e:	3301      	adds	r3, #1
 8008b80:	80a3      	strh	r3, [r4, #4]
 8008b82:	bd38      	pop	{r3, r4, r5, pc}
 8008b84:	0801c00c 	.word	0x0801c00c
 8008b88:	0801c0fd 	.word	0x0801c0fd
 8008b8c:	0801bf64 	.word	0x0801bf64
 8008b90:	0801c023 	.word	0x0801c023

08008b94 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008b94:	b570      	push	{r4, r5, r6, lr}
 8008b96:	6803      	ldr	r3, [r0, #0]
 8008b98:	6a1b      	ldr	r3, [r3, #32]
 8008b9a:	4616      	mov	r6, r2
 8008b9c:	4604      	mov	r4, r0
 8008b9e:	460d      	mov	r5, r1
 8008ba0:	4798      	blx	r3
 8008ba2:	4286      	cmp	r6, r0
 8008ba4:	d905      	bls.n	8008bb2 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8008ba6:	4b06      	ldr	r3, [pc, #24]	; (8008bc0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8008ba8:	4a06      	ldr	r2, [pc, #24]	; (8008bc4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8008baa:	4807      	ldr	r0, [pc, #28]	; (8008bc8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008bac:	2139      	movs	r1, #57	; 0x39
 8008bae:	f011 f939 	bl	8019e24 <__assert_func>
 8008bb2:	6823      	ldr	r3, [r4, #0]
 8008bb4:	4629      	mov	r1, r5
 8008bb6:	4620      	mov	r0, r4
 8008bb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008bba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008bbe:	4718      	bx	r3
 8008bc0:	0801c00c 	.word	0x0801c00c
 8008bc4:	0801c070 	.word	0x0801c070
 8008bc8:	0801bf64 	.word	0x0801bf64

08008bcc <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8008bcc:	4770      	bx	lr
	...

08008bd0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8008bd0:	4a02      	ldr	r2, [pc, #8]	; (8008bdc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8008bd2:	6002      	str	r2, [r0, #0]
 8008bd4:	2200      	movs	r2, #0
 8008bd6:	8082      	strh	r2, [r0, #4]
 8008bd8:	4770      	bx	lr
 8008bda:	bf00      	nop
 8008bdc:	0801c044 	.word	0x0801c044

08008be0 <_ZN8touchgfx9Container13getFirstChildEv>:
 8008be0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8008be2:	4770      	bx	lr

08008be4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8008be4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008be6:	2000      	movs	r0, #0
 8008be8:	b12b      	cbz	r3, 8008bf6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008bea:	b920      	cbnz	r0, 8008bf6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008bec:	1a5a      	subs	r2, r3, r1
 8008bee:	4250      	negs	r0, r2
 8008bf0:	4150      	adcs	r0, r2
 8008bf2:	699b      	ldr	r3, [r3, #24]
 8008bf4:	e7f8      	b.n	8008be8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8008bf6:	4770      	bx	lr

08008bf8 <_ZN8touchgfx9Container9removeAllEv>:
 8008bf8:	2200      	movs	r2, #0
 8008bfa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008bfc:	b123      	cbz	r3, 8008c08 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8008bfe:	6999      	ldr	r1, [r3, #24]
 8008c00:	6281      	str	r1, [r0, #40]	; 0x28
 8008c02:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008c06:	e7f8      	b.n	8008bfa <_ZN8touchgfx9Container9removeAllEv+0x2>
 8008c08:	4770      	bx	lr

08008c0a <_ZN8touchgfx9Container6unlinkEv>:
 8008c0a:	2300      	movs	r3, #0
 8008c0c:	6283      	str	r3, [r0, #40]	; 0x28
 8008c0e:	4770      	bx	lr

08008c10 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8008c10:	2200      	movs	r2, #0
 8008c12:	8002      	strh	r2, [r0, #0]
 8008c14:	8042      	strh	r2, [r0, #2]
 8008c16:	8082      	strh	r2, [r0, #4]
 8008c18:	80c2      	strh	r2, [r0, #6]
 8008c1a:	4770      	bx	lr

08008c1c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8008c1c:	b570      	push	{r4, r5, r6, lr}
 8008c1e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008c20:	460d      	mov	r5, r1
 8008c22:	4616      	mov	r6, r2
 8008c24:	b13c      	cbz	r4, 8008c36 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8008c26:	6823      	ldr	r3, [r4, #0]
 8008c28:	4620      	mov	r0, r4
 8008c2a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008c2c:	4632      	mov	r2, r6
 8008c2e:	4629      	mov	r1, r5
 8008c30:	4798      	blx	r3
 8008c32:	69a4      	ldr	r4, [r4, #24]
 8008c34:	e7f6      	b.n	8008c24 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8008c36:	bd70      	pop	{r4, r5, r6, pc}

08008c38 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8008c38:	b538      	push	{r3, r4, r5, lr}
 8008c3a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008c3c:	460d      	mov	r5, r1
 8008c3e:	b134      	cbz	r4, 8008c4e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8008c40:	682b      	ldr	r3, [r5, #0]
 8008c42:	4621      	mov	r1, r4
 8008c44:	689b      	ldr	r3, [r3, #8]
 8008c46:	4628      	mov	r0, r5
 8008c48:	4798      	blx	r3
 8008c4a:	69a4      	ldr	r4, [r4, #24]
 8008c4c:	e7f7      	b.n	8008c3e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8008c4e:	bd38      	pop	{r3, r4, r5, pc}

08008c50 <_ZNK8touchgfx9Container17invalidateContentEv>:
 8008c50:	b510      	push	{r4, lr}
 8008c52:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008c54:	b12c      	cbz	r4, 8008c62 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 8008c56:	6823      	ldr	r3, [r4, #0]
 8008c58:	4620      	mov	r0, r4
 8008c5a:	699b      	ldr	r3, [r3, #24]
 8008c5c:	4798      	blx	r3
 8008c5e:	69a4      	ldr	r4, [r4, #24]
 8008c60:	e7f8      	b.n	8008c54 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 8008c62:	bd10      	pop	{r4, pc}

08008c64 <_ZN8touchgfx9ContainerD1Ev>:
 8008c64:	4770      	bx	lr

08008c66 <_ZN8touchgfx9ContainerD0Ev>:
 8008c66:	b510      	push	{r4, lr}
 8008c68:	212c      	movs	r1, #44	; 0x2c
 8008c6a:	4604      	mov	r4, r0
 8008c6c:	f011 f8ab 	bl	8019dc6 <_ZdlPvj>
 8008c70:	4620      	mov	r0, r4
 8008c72:	bd10      	pop	{r4, pc}

08008c74 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8008c74:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008c76:	b19b      	cbz	r3, 8008ca0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008c78:	428b      	cmp	r3, r1
 8008c7a:	d109      	bne.n	8008c90 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8008c7c:	699a      	ldr	r2, [r3, #24]
 8008c7e:	2100      	movs	r1, #0
 8008c80:	6159      	str	r1, [r3, #20]
 8008c82:	6282      	str	r2, [r0, #40]	; 0x28
 8008c84:	b902      	cbnz	r2, 8008c88 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8008c86:	4770      	bx	lr
 8008c88:	6199      	str	r1, [r3, #24]
 8008c8a:	4770      	bx	lr
 8008c8c:	4613      	mov	r3, r2
 8008c8e:	b13a      	cbz	r2, 8008ca0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008c90:	699a      	ldr	r2, [r3, #24]
 8008c92:	428a      	cmp	r2, r1
 8008c94:	d1fa      	bne.n	8008c8c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8008c96:	698a      	ldr	r2, [r1, #24]
 8008c98:	619a      	str	r2, [r3, #24]
 8008c9a:	2300      	movs	r3, #0
 8008c9c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8008ca0:	4770      	bx	lr

08008ca2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8008ca2:	b410      	push	{r4}
 8008ca4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008ca6:	4604      	mov	r4, r0
 8008ca8:	b92b      	cbnz	r3, 8008cb6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8008caa:	6803      	ldr	r3, [r0, #0]
 8008cac:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008cb0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008cb2:	4611      	mov	r1, r2
 8008cb4:	4718      	bx	r3
 8008cb6:	b941      	cbnz	r1, 8008cca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8008cb8:	6193      	str	r3, [r2, #24]
 8008cba:	6282      	str	r2, [r0, #40]	; 0x28
 8008cbc:	6154      	str	r4, [r2, #20]
 8008cbe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008cc2:	4770      	bx	lr
 8008cc4:	4603      	mov	r3, r0
 8008cc6:	2800      	cmp	r0, #0
 8008cc8:	d0f9      	beq.n	8008cbe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8008cca:	4299      	cmp	r1, r3
 8008ccc:	6998      	ldr	r0, [r3, #24]
 8008cce:	d1f9      	bne.n	8008cc4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8008cd0:	6190      	str	r0, [r2, #24]
 8008cd2:	618a      	str	r2, [r1, #24]
 8008cd4:	e7f2      	b.n	8008cbc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08008cd8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8008cd8:	4288      	cmp	r0, r1
 8008cda:	b508      	push	{r3, lr}
 8008cdc:	d105      	bne.n	8008cea <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8008cde:	4b11      	ldr	r3, [pc, #68]	; (8008d24 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8008ce0:	4a11      	ldr	r2, [pc, #68]	; (8008d28 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008ce2:	2120      	movs	r1, #32
 8008ce4:	4811      	ldr	r0, [pc, #68]	; (8008d2c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8008ce6:	f011 f89d 	bl	8019e24 <__assert_func>
 8008cea:	694b      	ldr	r3, [r1, #20]
 8008cec:	b11b      	cbz	r3, 8008cf6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8008cee:	4b10      	ldr	r3, [pc, #64]	; (8008d30 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8008cf0:	4a0d      	ldr	r2, [pc, #52]	; (8008d28 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008cf2:	2121      	movs	r1, #33	; 0x21
 8008cf4:	e7f6      	b.n	8008ce4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008cf6:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8008cfa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008cfc:	b913      	cbnz	r3, 8008d04 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8008cfe:	6281      	str	r1, [r0, #40]	; 0x28
 8008d00:	bd08      	pop	{r3, pc}
 8008d02:	4613      	mov	r3, r2
 8008d04:	699a      	ldr	r2, [r3, #24]
 8008d06:	b12a      	cbz	r2, 8008d14 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8008d08:	428b      	cmp	r3, r1
 8008d0a:	d1fa      	bne.n	8008d02 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8008d0c:	4b09      	ldr	r3, [pc, #36]	; (8008d34 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008d0e:	4a06      	ldr	r2, [pc, #24]	; (8008d28 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008d10:	2132      	movs	r1, #50	; 0x32
 8008d12:	e7e7      	b.n	8008ce4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008d14:	428b      	cmp	r3, r1
 8008d16:	d103      	bne.n	8008d20 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8008d18:	4b06      	ldr	r3, [pc, #24]	; (8008d34 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008d1a:	4a03      	ldr	r2, [pc, #12]	; (8008d28 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008d1c:	2135      	movs	r1, #53	; 0x35
 8008d1e:	e7e1      	b.n	8008ce4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008d20:	6199      	str	r1, [r3, #24]
 8008d22:	e7ed      	b.n	8008d00 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8008d24:	0801c13b 	.word	0x0801c13b
 8008d28:	0801c294 	.word	0x0801c294
 8008d2c:	0801c167 	.word	0x0801c167
 8008d30:	0801c19a 	.word	0x0801c19a
 8008d34:	0801c1d0 	.word	0x0801c1d0

08008d38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8008d38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008d3c:	461f      	mov	r7, r3
 8008d3e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8008d42:	460d      	mov	r5, r1
 8008d44:	4616      	mov	r6, r2
 8008d46:	b103      	cbz	r3, 8008d4a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8008d48:	6038      	str	r0, [r7, #0]
 8008d4a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008d4c:	b314      	cbz	r4, 8008d94 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8008d4e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008d52:	b1eb      	cbz	r3, 8008d90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008d54:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8008d58:	428d      	cmp	r5, r1
 8008d5a:	db19      	blt.n	8008d90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008d5c:	8923      	ldrh	r3, [r4, #8]
 8008d5e:	b289      	uxth	r1, r1
 8008d60:	440b      	add	r3, r1
 8008d62:	b21b      	sxth	r3, r3
 8008d64:	429d      	cmp	r5, r3
 8008d66:	da13      	bge.n	8008d90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008d68:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8008d6c:	4296      	cmp	r6, r2
 8008d6e:	db0f      	blt.n	8008d90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008d70:	8963      	ldrh	r3, [r4, #10]
 8008d72:	b292      	uxth	r2, r2
 8008d74:	4413      	add	r3, r2
 8008d76:	b21b      	sxth	r3, r3
 8008d78:	429e      	cmp	r6, r3
 8008d7a:	da09      	bge.n	8008d90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008d7c:	6823      	ldr	r3, [r4, #0]
 8008d7e:	1ab2      	subs	r2, r6, r2
 8008d80:	1a69      	subs	r1, r5, r1
 8008d82:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8008d86:	b212      	sxth	r2, r2
 8008d88:	463b      	mov	r3, r7
 8008d8a:	b209      	sxth	r1, r1
 8008d8c:	4620      	mov	r0, r4
 8008d8e:	47c0      	blx	r8
 8008d90:	69a4      	ldr	r4, [r4, #24]
 8008d92:	e7db      	b.n	8008d4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8008d94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008d98 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8008d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d9c:	4c6e      	ldr	r4, [pc, #440]	; (8008f58 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8008d9e:	b0a1      	sub	sp, #132	; 0x84
 8008da0:	6824      	ldr	r4, [r4, #0]
 8008da2:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8008da4:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8008da8:	9303      	str	r3, [sp, #12]
 8008daa:	2400      	movs	r4, #0
 8008dac:	802c      	strh	r4, [r5, #0]
 8008dae:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8008db0:	802c      	strh	r4, [r5, #0]
 8008db2:	601c      	str	r4, [r3, #0]
 8008db4:	4606      	mov	r6, r0
 8008db6:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8008dba:	f7ff ffbd 	bl	8008d38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8008dbe:	f1b9 0f03 	cmp.w	r9, #3
 8008dc2:	f340 80c2 	ble.w	8008f4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8008dc6:	4631      	mov	r1, r6
 8008dc8:	a80c      	add	r0, sp, #48	; 0x30
 8008dca:	f003 fb05 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8008dce:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8008dd2:	9306      	str	r3, [sp, #24]
 8008dd4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8008dd8:	9307      	str	r3, [sp, #28]
 8008dda:	9b03      	ldr	r3, [sp, #12]
 8008ddc:	f8d3 a000 	ldr.w	sl, [r3]
 8008de0:	f1ba 0f00 	cmp.w	sl, #0
 8008de4:	f000 80b4 	beq.w	8008f50 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8008de8:	4651      	mov	r1, sl
 8008dea:	a810      	add	r0, sp, #64	; 0x40
 8008dec:	f003 faf4 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8008df0:	9b01      	ldr	r3, [sp, #4]
 8008df2:	9a06      	ldr	r2, [sp, #24]
 8008df4:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8008df8:	189d      	adds	r5, r3, r2
 8008dfa:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8008dfe:	9a07      	ldr	r2, [sp, #28]
 8008e00:	2002      	movs	r0, #2
 8008e02:	fb91 f1f0 	sdiv	r1, r1, r0
 8008e06:	4419      	add	r1, r3
 8008e08:	1a6d      	subs	r5, r5, r1
 8008e0a:	9b02      	ldr	r3, [sp, #8]
 8008e0c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8008e10:	4413      	add	r3, r2
 8008e12:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8008e16:	fb92 f2f0 	sdiv	r2, r2, r0
 8008e1a:	440a      	add	r2, r1
 8008e1c:	1a9b      	subs	r3, r3, r2
 8008e1e:	435b      	muls	r3, r3
 8008e20:	fb05 3505 	mla	r5, r5, r5, r3
 8008e24:	4f4d      	ldr	r7, [pc, #308]	; (8008f5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8008e26:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008e28:	ac10      	add	r4, sp, #64	; 0x40
 8008e2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008e2c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008e2e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008e30:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008e32:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008e34:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8008e38:	f1b9 0f0c 	cmp.w	r9, #12
 8008e3c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008e40:	f04f 0303 	mov.w	r3, #3
 8008e44:	bfc8      	it	gt
 8008e46:	4698      	movgt	r8, r3
 8008e48:	f8cd 9000 	str.w	r9, [sp]
 8008e4c:	f04f 0400 	mov.w	r4, #0
 8008e50:	bfdc      	itt	le
 8008e52:	f109 32ff 	addle.w	r2, r9, #4294967295
 8008e56:	fb92 f8f3 	sdivle	r8, r2, r3
 8008e5a:	1c63      	adds	r3, r4, #1
 8008e5c:	aa10      	add	r2, sp, #64	; 0x40
 8008e5e:	f004 0401 	and.w	r4, r4, #1
 8008e62:	9308      	str	r3, [sp, #32]
 8008e64:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8008e68:	9b00      	ldr	r3, [sp, #0]
 8008e6a:	fb93 f3f8 	sdiv	r3, r3, r8
 8008e6e:	b29b      	uxth	r3, r3
 8008e70:	3404      	adds	r4, #4
 8008e72:	f04f 0b00 	mov.w	fp, #0
 8008e76:	9304      	str	r3, [sp, #16]
 8008e78:	9a04      	ldr	r2, [sp, #16]
 8008e7a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008e7e:	fb13 f302 	smulbb	r3, r3, r2
 8008e82:	9a01      	ldr	r2, [sp, #4]
 8008e84:	b29b      	uxth	r3, r3
 8008e86:	1899      	adds	r1, r3, r2
 8008e88:	9305      	str	r3, [sp, #20]
 8008e8a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8008e8e:	b209      	sxth	r1, r1
 8008e90:	4299      	cmp	r1, r3
 8008e92:	db4d      	blt.n	8008f30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8008e94:	8932      	ldrh	r2, [r6, #8]
 8008e96:	4413      	add	r3, r2
 8008e98:	b21b      	sxth	r3, r3
 8008e9a:	4299      	cmp	r1, r3
 8008e9c:	da48      	bge.n	8008f30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8008e9e:	9b04      	ldr	r3, [sp, #16]
 8008ea0:	6827      	ldr	r7, [r4, #0]
 8008ea2:	fb17 f703 	smulbb	r7, r7, r3
 8008ea6:	9b02      	ldr	r3, [sp, #8]
 8008ea8:	b2bf      	uxth	r7, r7
 8008eaa:	18fa      	adds	r2, r7, r3
 8008eac:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8008eb0:	b212      	sxth	r2, r2
 8008eb2:	429a      	cmp	r2, r3
 8008eb4:	db3c      	blt.n	8008f30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8008eb6:	8970      	ldrh	r0, [r6, #10]
 8008eb8:	4403      	add	r3, r0
 8008eba:	b21b      	sxth	r3, r3
 8008ebc:	429a      	cmp	r2, r3
 8008ebe:	da37      	bge.n	8008f30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8008ec0:	2300      	movs	r3, #0
 8008ec2:	930b      	str	r3, [sp, #44]	; 0x2c
 8008ec4:	4630      	mov	r0, r6
 8008ec6:	ab0b      	add	r3, sp, #44	; 0x2c
 8008ec8:	f7ff ff36 	bl	8008d38 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8008ecc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8008ece:	b37a      	cbz	r2, 8008f30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8008ed0:	4552      	cmp	r2, sl
 8008ed2:	d02d      	beq.n	8008f30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8008ed4:	4611      	mov	r1, r2
 8008ed6:	a80e      	add	r0, sp, #56	; 0x38
 8008ed8:	9209      	str	r2, [sp, #36]	; 0x24
 8008eda:	f003 fa7d 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8008ede:	9a06      	ldr	r2, [sp, #24]
 8008ee0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8008ee4:	9b01      	ldr	r3, [sp, #4]
 8008ee6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8008eea:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8008eee:	4413      	add	r3, r2
 8008ef0:	f04f 0e02 	mov.w	lr, #2
 8008ef4:	fb91 f1fe 	sdiv	r1, r1, lr
 8008ef8:	4401      	add	r1, r0
 8008efa:	1a58      	subs	r0, r3, r1
 8008efc:	9a07      	ldr	r2, [sp, #28]
 8008efe:	9b02      	ldr	r3, [sp, #8]
 8008f00:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8008f04:	fb9c fcfe 	sdiv	ip, ip, lr
 8008f08:	4413      	add	r3, r2
 8008f0a:	448c      	add	ip, r1
 8008f0c:	eba3 030c 	sub.w	r3, r3, ip
 8008f10:	435b      	muls	r3, r3
 8008f12:	fb00 3300 	mla	r3, r0, r0, r3
 8008f16:	42ab      	cmp	r3, r5
 8008f18:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008f1a:	d208      	bcs.n	8008f2e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8008f1c:	9803      	ldr	r0, [sp, #12]
 8008f1e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008f20:	6001      	str	r1, [r0, #0]
 8008f22:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8008f24:	9805      	ldr	r0, [sp, #20]
 8008f26:	8008      	strh	r0, [r1, #0]
 8008f28:	992b      	ldr	r1, [sp, #172]	; 0xac
 8008f2a:	461d      	mov	r5, r3
 8008f2c:	800f      	strh	r7, [r1, #0]
 8008f2e:	4692      	mov	sl, r2
 8008f30:	f10b 0b01 	add.w	fp, fp, #1
 8008f34:	f1bb 0f04 	cmp.w	fp, #4
 8008f38:	f104 0408 	add.w	r4, r4, #8
 8008f3c:	d19c      	bne.n	8008e78 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8008f3e:	9b00      	ldr	r3, [sp, #0]
 8008f40:	9c08      	ldr	r4, [sp, #32]
 8008f42:	444b      	add	r3, r9
 8008f44:	4544      	cmp	r4, r8
 8008f46:	9300      	str	r3, [sp, #0]
 8008f48:	d187      	bne.n	8008e5a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8008f4a:	b021      	add	sp, #132	; 0x84
 8008f4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008f50:	f04f 35ff 	mov.w	r5, #4294967295
 8008f54:	e766      	b.n	8008e24 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8008f56:	bf00      	nop
 8008f58:	2000a498 	.word	0x2000a498
 8008f5c:	0801af9c 	.word	0x0801af9c

08008f60 <_ZN8touchgfx4RectaNERKS0_>:
 8008f60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008f64:	f9b1 7000 	ldrsh.w	r7, [r1]
 8008f68:	888c      	ldrh	r4, [r1, #4]
 8008f6a:	f9b0 9000 	ldrsh.w	r9, [r0]
 8008f6e:	443c      	add	r4, r7
 8008f70:	b2a4      	uxth	r4, r4
 8008f72:	fa0f f884 	sxth.w	r8, r4
 8008f76:	45c1      	cmp	r9, r8
 8008f78:	da2f      	bge.n	8008fda <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008f7a:	8882      	ldrh	r2, [r0, #4]
 8008f7c:	444a      	add	r2, r9
 8008f7e:	b292      	uxth	r2, r2
 8008f80:	fa0f fe82 	sxth.w	lr, r2
 8008f84:	4577      	cmp	r7, lr
 8008f86:	da28      	bge.n	8008fda <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008f88:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8008f8c:	88cb      	ldrh	r3, [r1, #6]
 8008f8e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8008f92:	442b      	add	r3, r5
 8008f94:	b21b      	sxth	r3, r3
 8008f96:	429e      	cmp	r6, r3
 8008f98:	da1f      	bge.n	8008fda <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008f9a:	88c3      	ldrh	r3, [r0, #6]
 8008f9c:	4433      	add	r3, r6
 8008f9e:	b29b      	uxth	r3, r3
 8008fa0:	fa0f fc83 	sxth.w	ip, r3
 8008fa4:	4565      	cmp	r5, ip
 8008fa6:	da18      	bge.n	8008fda <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008fa8:	454f      	cmp	r7, r9
 8008faa:	bfb8      	it	lt
 8008fac:	464f      	movlt	r7, r9
 8008fae:	42b5      	cmp	r5, r6
 8008fb0:	bfb8      	it	lt
 8008fb2:	4635      	movlt	r5, r6
 8008fb4:	45f0      	cmp	r8, lr
 8008fb6:	bfd8      	it	le
 8008fb8:	4622      	movle	r2, r4
 8008fba:	1bd2      	subs	r2, r2, r7
 8008fbc:	8082      	strh	r2, [r0, #4]
 8008fbe:	884a      	ldrh	r2, [r1, #2]
 8008fc0:	88c9      	ldrh	r1, [r1, #6]
 8008fc2:	8007      	strh	r7, [r0, #0]
 8008fc4:	440a      	add	r2, r1
 8008fc6:	b292      	uxth	r2, r2
 8008fc8:	b211      	sxth	r1, r2
 8008fca:	458c      	cmp	ip, r1
 8008fcc:	bfa8      	it	ge
 8008fce:	4613      	movge	r3, r2
 8008fd0:	1b5b      	subs	r3, r3, r5
 8008fd2:	80c3      	strh	r3, [r0, #6]
 8008fd4:	8045      	strh	r5, [r0, #2]
 8008fd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008fda:	2300      	movs	r3, #0
 8008fdc:	8003      	strh	r3, [r0, #0]
 8008fde:	8043      	strh	r3, [r0, #2]
 8008fe0:	8083      	strh	r3, [r0, #4]
 8008fe2:	80c3      	strh	r3, [r0, #6]
 8008fe4:	e7f7      	b.n	8008fd6 <_ZN8touchgfx4RectaNERKS0_+0x76>

08008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8008fe6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8008fea:	2b00      	cmp	r3, #0
 8008fec:	dd06      	ble.n	8008ffc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8008fee:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8008ff2:	2800      	cmp	r0, #0
 8008ff4:	bfcc      	ite	gt
 8008ff6:	2000      	movgt	r0, #0
 8008ff8:	2001      	movle	r0, #1
 8008ffa:	4770      	bx	lr
 8008ffc:	2001      	movs	r0, #1
 8008ffe:	4770      	bx	lr

08009000 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009000:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009004:	2300      	movs	r3, #0
 8009006:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009008:	8003      	strh	r3, [r0, #0]
 800900a:	4604      	mov	r4, r0
 800900c:	8043      	strh	r3, [r0, #2]
 800900e:	8083      	strh	r3, [r0, #4]
 8009010:	80c3      	strh	r3, [r0, #6]
 8009012:	2d00      	cmp	r5, #0
 8009014:	d040      	beq.n	8009098 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009016:	1d28      	adds	r0, r5, #4
 8009018:	f7ff ffe5 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800901c:	b988      	cbnz	r0, 8009042 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800901e:	4620      	mov	r0, r4
 8009020:	f7ff ffe1 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009024:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009028:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800902c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009030:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009034:	b138      	cbz	r0, 8009046 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009036:	8022      	strh	r2, [r4, #0]
 8009038:	8063      	strh	r3, [r4, #2]
 800903a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800903e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009042:	69ad      	ldr	r5, [r5, #24]
 8009044:	e7e5      	b.n	8009012 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009046:	f9b4 0000 	ldrsh.w	r0, [r4]
 800904a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800904e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009052:	4290      	cmp	r0, r2
 8009054:	4607      	mov	r7, r0
 8009056:	bfa8      	it	ge
 8009058:	4617      	movge	r7, r2
 800905a:	4472      	add	r2, lr
 800905c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009060:	8027      	strh	r7, [r4, #0]
 8009062:	4299      	cmp	r1, r3
 8009064:	460e      	mov	r6, r1
 8009066:	4440      	add	r0, r8
 8009068:	bfa8      	it	ge
 800906a:	461e      	movge	r6, r3
 800906c:	4471      	add	r1, lr
 800906e:	4463      	add	r3, ip
 8009070:	b200      	sxth	r0, r0
 8009072:	b212      	sxth	r2, r2
 8009074:	b209      	sxth	r1, r1
 8009076:	b21b      	sxth	r3, r3
 8009078:	4290      	cmp	r0, r2
 800907a:	bfac      	ite	ge
 800907c:	ebc7 0200 	rsbge	r2, r7, r0
 8009080:	ebc7 0202 	rsblt	r2, r7, r2
 8009084:	4299      	cmp	r1, r3
 8009086:	bfac      	ite	ge
 8009088:	ebc6 0301 	rsbge	r3, r6, r1
 800908c:	ebc6 0303 	rsblt	r3, r6, r3
 8009090:	8066      	strh	r6, [r4, #2]
 8009092:	80a2      	strh	r2, [r4, #4]
 8009094:	80e3      	strh	r3, [r4, #6]
 8009096:	e7d4      	b.n	8009042 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009098:	4620      	mov	r0, r4
 800909a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800909e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800909e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80090a2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80090a6:	b383      	cbz	r3, 800910a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80090a8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80090aa:	b374      	cbz	r4, 800910a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80090ac:	f9b1 5000 	ldrsh.w	r5, [r1]
 80090b0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80090b4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80090b8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80090bc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80090c0:	b303      	cbz	r3, 8009104 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80090c2:	4668      	mov	r0, sp
 80090c4:	1d21      	adds	r1, r4, #4
 80090c6:	f8ad 5000 	strh.w	r5, [sp]
 80090ca:	f8ad 6002 	strh.w	r6, [sp, #2]
 80090ce:	f8ad 7004 	strh.w	r7, [sp, #4]
 80090d2:	f8ad 8006 	strh.w	r8, [sp, #6]
 80090d6:	f7ff ff43 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 80090da:	4668      	mov	r0, sp
 80090dc:	f7ff ff83 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80090e0:	b980      	cbnz	r0, 8009104 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80090e2:	f8bd 3000 	ldrh.w	r3, [sp]
 80090e6:	88a2      	ldrh	r2, [r4, #4]
 80090e8:	1a9b      	subs	r3, r3, r2
 80090ea:	f8ad 3000 	strh.w	r3, [sp]
 80090ee:	88e2      	ldrh	r2, [r4, #6]
 80090f0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80090f4:	1a9b      	subs	r3, r3, r2
 80090f6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80090fa:	6823      	ldr	r3, [r4, #0]
 80090fc:	4669      	mov	r1, sp
 80090fe:	689b      	ldr	r3, [r3, #8]
 8009100:	4620      	mov	r0, r4
 8009102:	4798      	blx	r3
 8009104:	69a4      	ldr	r4, [r4, #24]
 8009106:	2c00      	cmp	r4, #0
 8009108:	d1d8      	bne.n	80090bc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800910a:	b002      	add	sp, #8
 800910c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009110 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009110:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009112:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009116:	460d      	mov	r5, r1
 8009118:	4616      	mov	r6, r2
 800911a:	b323      	cbz	r3, 8009166 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800911c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800911e:	b314      	cbz	r4, 8009166 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009120:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009124:	b1eb      	cbz	r3, 8009162 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009126:	6828      	ldr	r0, [r5, #0]
 8009128:	6869      	ldr	r1, [r5, #4]
 800912a:	466b      	mov	r3, sp
 800912c:	c303      	stmia	r3!, {r0, r1}
 800912e:	4668      	mov	r0, sp
 8009130:	1d21      	adds	r1, r4, #4
 8009132:	f7ff ff15 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 8009136:	4668      	mov	r0, sp
 8009138:	f7ff ff55 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800913c:	b988      	cbnz	r0, 8009162 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800913e:	f8bd 3000 	ldrh.w	r3, [sp]
 8009142:	88a2      	ldrh	r2, [r4, #4]
 8009144:	1a9b      	subs	r3, r3, r2
 8009146:	f8ad 3000 	strh.w	r3, [sp]
 800914a:	88e2      	ldrh	r2, [r4, #6]
 800914c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009150:	1a9b      	subs	r3, r3, r2
 8009152:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009156:	6823      	ldr	r3, [r4, #0]
 8009158:	4632      	mov	r2, r6
 800915a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800915c:	4669      	mov	r1, sp
 800915e:	4620      	mov	r0, r4
 8009160:	4798      	blx	r3
 8009162:	69a4      	ldr	r4, [r4, #24]
 8009164:	e7db      	b.n	800911e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009166:	b002      	add	sp, #8
 8009168:	bd70      	pop	{r4, r5, r6, pc}

0800916a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800916a:	b513      	push	{r0, r1, r4, lr}
 800916c:	6803      	ldr	r3, [r0, #0]
 800916e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8009172:	2300      	movs	r3, #0
 8009174:	e9cd 3300 	strd	r3, r3, [sp]
 8009178:	466b      	mov	r3, sp
 800917a:	47a0      	blx	r4
 800917c:	b002      	add	sp, #8
 800917e:	bd10      	pop	{r4, pc}

08009180 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009180:	2301      	movs	r3, #1
 8009182:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009186:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800918a:	4770      	bx	lr

0800918c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800918c:	2301      	movs	r3, #1
 800918e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009192:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009196:	4770      	bx	lr

08009198 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009198:	6843      	ldr	r3, [r0, #4]
 800919a:	2201      	movs	r2, #1
 800919c:	725a      	strb	r2, [r3, #9]
 800919e:	6840      	ldr	r0, [r0, #4]
 80091a0:	6803      	ldr	r3, [r0, #0]
 80091a2:	691b      	ldr	r3, [r3, #16]
 80091a4:	4718      	bx	r3

080091a6 <_ZN8touchgfx3HAL8flushDMAEv>:
 80091a6:	6840      	ldr	r0, [r0, #4]
 80091a8:	6803      	ldr	r3, [r0, #0]
 80091aa:	689b      	ldr	r3, [r3, #8]
 80091ac:	4718      	bx	r3

080091ae <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80091ae:	b530      	push	{r4, r5, lr}
 80091b0:	b08b      	sub	sp, #44	; 0x2c
 80091b2:	6804      	ldr	r4, [r0, #0]
 80091b4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80091b8:	9509      	str	r5, [sp, #36]	; 0x24
 80091ba:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80091be:	9508      	str	r5, [sp, #32]
 80091c0:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80091c4:	9507      	str	r5, [sp, #28]
 80091c6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80091ca:	9506      	str	r5, [sp, #24]
 80091cc:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80091d0:	9505      	str	r5, [sp, #20]
 80091d2:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80091d6:	9504      	str	r5, [sp, #16]
 80091d8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 80091dc:	9503      	str	r5, [sp, #12]
 80091de:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80091e2:	9502      	str	r5, [sp, #8]
 80091e4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80091e8:	e9cd 3500 	strd	r3, r5, [sp]
 80091ec:	4613      	mov	r3, r2
 80091ee:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80091f0:	2200      	movs	r2, #0
 80091f2:	47a0      	blx	r4
 80091f4:	b00b      	add	sp, #44	; 0x2c
 80091f6:	bd30      	pop	{r4, r5, pc}

080091f8 <_ZN8touchgfx3HAL10beginFrameEv>:
 80091f8:	4b04      	ldr	r3, [pc, #16]	; (800920c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80091fa:	781b      	ldrb	r3, [r3, #0]
 80091fc:	b123      	cbz	r3, 8009208 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80091fe:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009202:	f080 0001 	eor.w	r0, r0, #1
 8009206:	4770      	bx	lr
 8009208:	2001      	movs	r0, #1
 800920a:	4770      	bx	lr
 800920c:	2000a496 	.word	0x2000a496

08009210 <_ZN8touchgfx3HAL8endFrameEv>:
 8009210:	b510      	push	{r4, lr}
 8009212:	4604      	mov	r4, r0
 8009214:	6840      	ldr	r0, [r0, #4]
 8009216:	6803      	ldr	r3, [r0, #0]
 8009218:	689b      	ldr	r3, [r3, #8]
 800921a:	4798      	blx	r3
 800921c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009220:	b113      	cbz	r3, 8009228 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009222:	2301      	movs	r3, #1
 8009224:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009228:	bd10      	pop	{r4, pc}

0800922a <_ZN8touchgfx3HAL10initializeEv>:
 800922a:	b510      	push	{r4, lr}
 800922c:	4604      	mov	r4, r0
 800922e:	f7f7 fd57 	bl	8000ce0 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009232:	6860      	ldr	r0, [r4, #4]
 8009234:	6803      	ldr	r3, [r0, #0]
 8009236:	68db      	ldr	r3, [r3, #12]
 8009238:	4798      	blx	r3
 800923a:	68e0      	ldr	r0, [r4, #12]
 800923c:	6803      	ldr	r3, [r0, #0]
 800923e:	689b      	ldr	r3, [r3, #8]
 8009240:	4798      	blx	r3
 8009242:	6823      	ldr	r3, [r4, #0]
 8009244:	4620      	mov	r0, r4
 8009246:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009248:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800924c:	4718      	bx	r3
	...

08009250 <_ZN8touchgfx3HAL4tickEv>:
 8009250:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009252:	6803      	ldr	r3, [r0, #0]
 8009254:	4d5b      	ldr	r5, [pc, #364]	; (80093c4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8009256:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800925a:	4604      	mov	r4, r0
 800925c:	4798      	blx	r3
 800925e:	2800      	cmp	r0, #0
 8009260:	f000 8095 	beq.w	800938e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8009264:	2001      	movs	r0, #1
 8009266:	f7f7 fa7b 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800926a:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800926e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009272:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8009276:	2600      	movs	r6, #0
 8009278:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800927c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009280:	b133      	cbz	r3, 8009290 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009282:	6823      	ldr	r3, [r4, #0]
 8009284:	4620      	mov	r0, r4
 8009286:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800928a:	4798      	blx	r3
 800928c:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009290:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009294:	6862      	ldr	r2, [r4, #4]
 8009296:	f083 0301 	eor.w	r3, r3, #1
 800929a:	7253      	strb	r3, [r2, #9]
 800929c:	2601      	movs	r6, #1
 800929e:	702e      	strb	r6, [r5, #0]
 80092a0:	f002 f872 	bl	800b388 <_ZN8touchgfx11Application11getInstanceEv>
 80092a4:	6803      	ldr	r3, [r0, #0]
 80092a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80092a8:	4798      	blx	r3
 80092aa:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80092ae:	b90b      	cbnz	r3, 80092b4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80092b0:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 80092b4:	f002 f868 	bl	800b388 <_ZN8touchgfx11Application11getInstanceEv>
 80092b8:	6803      	ldr	r3, [r0, #0]
 80092ba:	695b      	ldr	r3, [r3, #20]
 80092bc:	4798      	blx	r3
 80092be:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80092c0:	6803      	ldr	r3, [r0, #0]
 80092c2:	691b      	ldr	r3, [r3, #16]
 80092c4:	4798      	blx	r3
 80092c6:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80092ca:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 80092ce:	3b01      	subs	r3, #1
 80092d0:	b2db      	uxtb	r3, r3
 80092d2:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80092d6:	b10a      	cbz	r2, 80092dc <_ZN8touchgfx3HAL4tickEv+0x8c>
 80092d8:	2b00      	cmp	r3, #0
 80092da:	d1eb      	bne.n	80092b4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80092dc:	4a3a      	ldr	r2, [pc, #232]	; (80093c8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80092de:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 80092e2:	7813      	ldrb	r3, [r2, #0]
 80092e4:	3301      	adds	r3, #1
 80092e6:	b25b      	sxtb	r3, r3
 80092e8:	4299      	cmp	r1, r3
 80092ea:	7013      	strb	r3, [r2, #0]
 80092ec:	dc10      	bgt.n	8009310 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80092ee:	68e0      	ldr	r0, [r4, #12]
 80092f0:	2300      	movs	r3, #0
 80092f2:	7013      	strb	r3, [r2, #0]
 80092f4:	6803      	ldr	r3, [r0, #0]
 80092f6:	aa03      	add	r2, sp, #12
 80092f8:	68db      	ldr	r3, [r3, #12]
 80092fa:	a902      	add	r1, sp, #8
 80092fc:	4798      	blx	r3
 80092fe:	6823      	ldr	r3, [r4, #0]
 8009300:	2800      	cmp	r0, #0
 8009302:	d050      	beq.n	80093a6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8009304:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009308:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800930c:	4620      	mov	r0, r4
 800930e:	4798      	blx	r3
 8009310:	6960      	ldr	r0, [r4, #20]
 8009312:	2300      	movs	r3, #0
 8009314:	f88d 3007 	strb.w	r3, [sp, #7]
 8009318:	b158      	cbz	r0, 8009332 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800931a:	6803      	ldr	r3, [r0, #0]
 800931c:	f10d 0107 	add.w	r1, sp, #7
 8009320:	68db      	ldr	r3, [r3, #12]
 8009322:	4798      	blx	r3
 8009324:	b128      	cbz	r0, 8009332 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009326:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009328:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800932c:	6803      	ldr	r3, [r0, #0]
 800932e:	68db      	ldr	r3, [r3, #12]
 8009330:	4798      	blx	r3
 8009332:	f104 001c 	add.w	r0, r4, #28
 8009336:	f010 fc91 	bl	8019c5c <_ZN8touchgfx8Gestures4tickEv>
 800933a:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800933e:	b30b      	cbz	r3, 8009384 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009340:	6920      	ldr	r0, [r4, #16]
 8009342:	6803      	ldr	r3, [r0, #0]
 8009344:	691b      	ldr	r3, [r3, #16]
 8009346:	4798      	blx	r3
 8009348:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800934a:	4606      	mov	r6, r0
 800934c:	b903      	cbnz	r3, 8009350 <_ZN8touchgfx3HAL4tickEv+0x100>
 800934e:	6720      	str	r0, [r4, #112]	; 0x70
 8009350:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009352:	4a1e      	ldr	r2, [pc, #120]	; (80093cc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009354:	1af3      	subs	r3, r6, r3
 8009356:	4293      	cmp	r3, r2
 8009358:	d914      	bls.n	8009384 <_ZN8touchgfx3HAL4tickEv+0x134>
 800935a:	6920      	ldr	r0, [r4, #16]
 800935c:	6803      	ldr	r3, [r0, #0]
 800935e:	699b      	ldr	r3, [r3, #24]
 8009360:	4798      	blx	r3
 8009362:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009364:	2264      	movs	r2, #100	; 0x64
 8009366:	1af3      	subs	r3, r6, r3
 8009368:	fbb3 f3f2 	udiv	r3, r3, r2
 800936c:	fbb0 f0f3 	udiv	r0, r0, r3
 8009370:	2800      	cmp	r0, #0
 8009372:	dc1d      	bgt.n	80093b0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8009374:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8009378:	6920      	ldr	r0, [r4, #16]
 800937a:	6803      	ldr	r3, [r0, #0]
 800937c:	2100      	movs	r1, #0
 800937e:	69db      	ldr	r3, [r3, #28]
 8009380:	4798      	blx	r3
 8009382:	6726      	str	r6, [r4, #112]	; 0x70
 8009384:	f002 f800 	bl	800b388 <_ZN8touchgfx11Application11getInstanceEv>
 8009388:	6803      	ldr	r3, [r0, #0]
 800938a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800938c:	4798      	blx	r3
 800938e:	6823      	ldr	r3, [r4, #0]
 8009390:	4620      	mov	r0, r4
 8009392:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009396:	4798      	blx	r3
 8009398:	2001      	movs	r0, #1
 800939a:	f7f7 fa07 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800939e:	2300      	movs	r3, #0
 80093a0:	702b      	strb	r3, [r5, #0]
 80093a2:	b004      	add	sp, #16
 80093a4:	bd70      	pop	{r4, r5, r6, pc}
 80093a6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80093aa:	4620      	mov	r0, r4
 80093ac:	4798      	blx	r3
 80093ae:	e7af      	b.n	8009310 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80093b0:	2863      	cmp	r0, #99	; 0x63
 80093b2:	bfcb      	itete	gt
 80093b4:	2300      	movgt	r3, #0
 80093b6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80093ba:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 80093be:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 80093c2:	e7d9      	b.n	8009378 <_ZN8touchgfx3HAL4tickEv+0x128>
 80093c4:	2000a49c 	.word	0x2000a49c
 80093c8:	2000a49d 	.word	0x2000a49d
 80093cc:	05f5e100 	.word	0x05f5e100

080093d0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80093d0:	f7f7 bcb6 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080093d4 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80093d4:	6581      	str	r1, [r0, #88]	; 0x58
 80093d6:	301c      	adds	r0, #28
 80093d8:	f010 bc3e 	b.w	8019c58 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080093dc <_ZN8touchgfx3HAL5touchEll>:
 80093dc:	b530      	push	{r4, r5, lr}
 80093de:	b087      	sub	sp, #28
 80093e0:	4604      	mov	r4, r0
 80093e2:	a804      	add	r0, sp, #16
 80093e4:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80093e8:	f001 fd2c 	bl	800ae44 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80093ec:	9b04      	ldr	r3, [sp, #16]
 80093ee:	f8ad 300c 	strh.w	r3, [sp, #12]
 80093f2:	a906      	add	r1, sp, #24
 80093f4:	9b05      	ldr	r3, [sp, #20]
 80093f6:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80093fa:	a803      	add	r0, sp, #12
 80093fc:	f001 fd74 	bl	800aee8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009400:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009404:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009408:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800940c:	f104 001c 	add.w	r0, r4, #28
 8009410:	b189      	cbz	r1, 8009436 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009412:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009416:	9300      	str	r3, [sp, #0]
 8009418:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800941c:	4613      	mov	r3, r2
 800941e:	462a      	mov	r2, r5
 8009420:	f010 fc2a 	bl	8019c78 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009424:	b128      	cbz	r0, 8009432 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009426:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800942a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800942c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009430:	6623      	str	r3, [r4, #96]	; 0x60
 8009432:	b007      	add	sp, #28
 8009434:	bd30      	pop	{r4, r5, pc}
 8009436:	f010 fc5f 	bl	8019cf8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800943a:	2301      	movs	r3, #1
 800943c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009440:	e7f1      	b.n	8009426 <_ZN8touchgfx3HAL5touchEll+0x4a>

08009442 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009442:	b510      	push	{r4, lr}
 8009444:	2b00      	cmp	r3, #0
 8009446:	d046      	beq.n	80094d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009448:	ea81 0002 	eor.w	r0, r1, r2
 800944c:	07c4      	lsls	r4, r0, #31
 800944e:	d508      	bpl.n	8009462 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009450:	440b      	add	r3, r1
 8009452:	3a01      	subs	r2, #1
 8009454:	428b      	cmp	r3, r1
 8009456:	d93e      	bls.n	80094d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009458:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800945c:	f801 0b01 	strb.w	r0, [r1], #1
 8009460:	e7f8      	b.n	8009454 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009462:	07d0      	lsls	r0, r2, #31
 8009464:	bf42      	ittt	mi
 8009466:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800946a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800946e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009472:	2b01      	cmp	r3, #1
 8009474:	d911      	bls.n	800949a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009476:	ea81 0402 	eor.w	r4, r1, r2
 800947a:	07a4      	lsls	r4, r4, #30
 800947c:	4610      	mov	r0, r2
 800947e:	d022      	beq.n	80094c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009480:	f023 0401 	bic.w	r4, r3, #1
 8009484:	440c      	add	r4, r1
 8009486:	428c      	cmp	r4, r1
 8009488:	4602      	mov	r2, r0
 800948a:	d904      	bls.n	8009496 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800948c:	8812      	ldrh	r2, [r2, #0]
 800948e:	f821 2b02 	strh.w	r2, [r1], #2
 8009492:	3002      	adds	r0, #2
 8009494:	e7f7      	b.n	8009486 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009496:	f003 0301 	and.w	r3, r3, #1
 800949a:	f023 0003 	bic.w	r0, r3, #3
 800949e:	4408      	add	r0, r1
 80094a0:	4288      	cmp	r0, r1
 80094a2:	4614      	mov	r4, r2
 80094a4:	d904      	bls.n	80094b0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80094a6:	6824      	ldr	r4, [r4, #0]
 80094a8:	f841 4b04 	str.w	r4, [r1], #4
 80094ac:	3204      	adds	r2, #4
 80094ae:	e7f7      	b.n	80094a0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80094b0:	f003 0303 	and.w	r3, r3, #3
 80094b4:	440b      	add	r3, r1
 80094b6:	3a01      	subs	r2, #1
 80094b8:	428b      	cmp	r3, r1
 80094ba:	d90c      	bls.n	80094d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80094bc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80094c0:	f801 0b01 	strb.w	r0, [r1], #1
 80094c4:	e7f8      	b.n	80094b8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80094c6:	0790      	lsls	r0, r2, #30
 80094c8:	d0e7      	beq.n	800949a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80094ca:	f832 0b02 	ldrh.w	r0, [r2], #2
 80094ce:	f821 0b02 	strh.w	r0, [r1], #2
 80094d2:	3b02      	subs	r3, #2
 80094d4:	e7e1      	b.n	800949a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80094d6:	2001      	movs	r0, #1
 80094d8:	bd10      	pop	{r4, pc}

080094da <_ZN8touchgfx3HAL7noTouchEv>:
 80094da:	b510      	push	{r4, lr}
 80094dc:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 80094e0:	4604      	mov	r4, r0
 80094e2:	b153      	cbz	r3, 80094fa <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80094e4:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 80094e8:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 80094ec:	2101      	movs	r1, #1
 80094ee:	301c      	adds	r0, #28
 80094f0:	f010 fc02 	bl	8019cf8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80094f4:	2300      	movs	r3, #0
 80094f6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80094fa:	bd10      	pop	{r4, pc}

080094fc <_ZN8touchgfx8Drawable5setXYEss>:
 80094fc:	b570      	push	{r4, r5, r6, lr}
 80094fe:	6803      	ldr	r3, [r0, #0]
 8009500:	4604      	mov	r4, r0
 8009502:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009504:	4615      	mov	r5, r2
 8009506:	4798      	blx	r3
 8009508:	6823      	ldr	r3, [r4, #0]
 800950a:	4629      	mov	r1, r5
 800950c:	4620      	mov	r0, r4
 800950e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009510:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009514:	4718      	bx	r3
	...

08009518 <_ZN8touchgfx3HAL3lcdEv>:
 8009518:	4b04      	ldr	r3, [pc, #16]	; (800952c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800951a:	681b      	ldr	r3, [r3, #0]
 800951c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009520:	b10a      	cbz	r2, 8009526 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009522:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009524:	b900      	cbnz	r0, 8009528 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8009526:	6898      	ldr	r0, [r3, #8]
 8009528:	4770      	bx	lr
 800952a:	bf00      	nop
 800952c:	2000a498 	.word	0x2000a498

08009530 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009530:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009534:	4604      	mov	r4, r0
 8009536:	6980      	ldr	r0, [r0, #24]
 8009538:	b085      	sub	sp, #20
 800953a:	460f      	mov	r7, r1
 800953c:	4690      	mov	r8, r2
 800953e:	4699      	mov	r9, r3
 8009540:	b930      	cbnz	r0, 8009550 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009542:	4b1c      	ldr	r3, [pc, #112]	; (80095b4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8009544:	4a1c      	ldr	r2, [pc, #112]	; (80095b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009546:	f44f 719f 	mov.w	r1, #318	; 0x13e
 800954a:	481c      	ldr	r0, [pc, #112]	; (80095bc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800954c:	f010 fc6a 	bl	8019e24 <__assert_func>
 8009550:	ad04      	add	r5, sp, #16
 8009552:	2600      	movs	r6, #0
 8009554:	f845 6d04 	str.w	r6, [r5, #-4]!
 8009558:	6806      	ldr	r6, [r0, #0]
 800955a:	9501      	str	r5, [sp, #4]
 800955c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009560:	9500      	str	r5, [sp, #0]
 8009562:	6835      	ldr	r5, [r6, #0]
 8009564:	47a8      	blx	r5
 8009566:	4d16      	ldr	r5, [pc, #88]	; (80095c0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8009568:	4606      	mov	r6, r0
 800956a:	f8a5 9000 	strh.w	r9, [r5]
 800956e:	f7ff ffd3 	bl	8009518 <_ZN8touchgfx3HAL3lcdEv>
 8009572:	6803      	ldr	r3, [r0, #0]
 8009574:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009576:	4798      	blx	r3
 8009578:	2801      	cmp	r0, #1
 800957a:	d012      	beq.n	80095a2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800957c:	d306      	bcc.n	800958c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800957e:	280d      	cmp	r0, #13
 8009580:	d80b      	bhi.n	800959a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009582:	4b10      	ldr	r3, [pc, #64]	; (80095c4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009584:	4a0c      	ldr	r2, [pc, #48]	; (80095b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009586:	f240 115b 	movw	r1, #347	; 0x15b
 800958a:	e7de      	b.n	800954a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800958c:	882b      	ldrh	r3, [r5, #0]
 800958e:	fb08 7203 	mla	r2, r8, r3, r7
 8009592:	9b03      	ldr	r3, [sp, #12]
 8009594:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009598:	63e3      	str	r3, [r4, #60]	; 0x3c
 800959a:	4630      	mov	r0, r6
 800959c:	b005      	add	sp, #20
 800959e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80095a2:	882a      	ldrh	r2, [r5, #0]
 80095a4:	9b03      	ldr	r3, [sp, #12]
 80095a6:	fb08 7202 	mla	r2, r8, r2, r7
 80095aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80095ae:	1a9a      	subs	r2, r3, r2
 80095b0:	63e2      	str	r2, [r4, #60]	; 0x3c
 80095b2:	e7f2      	b.n	800959a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80095b4:	0801c435 	.word	0x0801c435
 80095b8:	0801c6f3 	.word	0x0801c6f3
 80095bc:	0801c47a 	.word	0x0801c47a
 80095c0:	2000a492 	.word	0x2000a492
 80095c4:	0801c4a0 	.word	0x0801c4a0

080095c8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80095c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80095ca:	b08b      	sub	sp, #44	; 0x2c
 80095cc:	4617      	mov	r7, r2
 80095ce:	4604      	mov	r4, r0
 80095d0:	460e      	mov	r6, r1
 80095d2:	461d      	mov	r5, r3
 80095d4:	f7ff ffa0 	bl	8009518 <_ZN8touchgfx3HAL3lcdEv>
 80095d8:	6803      	ldr	r3, [r0, #0]
 80095da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80095dc:	4798      	blx	r3
 80095de:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80095e2:	9007      	str	r0, [sp, #28]
 80095e4:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80095e8:	4b0d      	ldr	r3, [pc, #52]	; (8009620 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80095ea:	6822      	ldr	r2, [r4, #0]
 80095ec:	881b      	ldrh	r3, [r3, #0]
 80095ee:	9306      	str	r3, [sp, #24]
 80095f0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80095f4:	9305      	str	r3, [sp, #20]
 80095f6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80095fa:	9304      	str	r3, [sp, #16]
 80095fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009600:	9303      	str	r3, [sp, #12]
 8009602:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009606:	9302      	str	r3, [sp, #8]
 8009608:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800960c:	e9cd 5300 	strd	r5, r3, [sp]
 8009610:	4631      	mov	r1, r6
 8009612:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8009614:	463b      	mov	r3, r7
 8009616:	2200      	movs	r2, #0
 8009618:	4620      	mov	r0, r4
 800961a:	47a8      	blx	r5
 800961c:	b00b      	add	sp, #44	; 0x2c
 800961e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009620:	2000a492 	.word	0x2000a492

08009624 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009624:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009628:	4698      	mov	r8, r3
 800962a:	6803      	ldr	r3, [r0, #0]
 800962c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800962e:	4b15      	ldr	r3, [pc, #84]	; (8009684 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8009630:	b08b      	sub	sp, #44	; 0x2c
 8009632:	4617      	mov	r7, r2
 8009634:	f8b3 9000 	ldrh.w	r9, [r3]
 8009638:	460e      	mov	r6, r1
 800963a:	4604      	mov	r4, r0
 800963c:	f7ff ff6c 	bl	8009518 <_ZN8touchgfx3HAL3lcdEv>
 8009640:	6803      	ldr	r3, [r0, #0]
 8009642:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009644:	4798      	blx	r3
 8009646:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800964a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800964e:	2302      	movs	r3, #2
 8009650:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009654:	2301      	movs	r3, #1
 8009656:	9305      	str	r3, [sp, #20]
 8009658:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800965c:	9304      	str	r3, [sp, #16]
 800965e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009662:	9303      	str	r3, [sp, #12]
 8009664:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009668:	9302      	str	r3, [sp, #8]
 800966a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800966e:	2200      	movs	r2, #0
 8009670:	e9cd 8300 	strd	r8, r3, [sp]
 8009674:	4631      	mov	r1, r6
 8009676:	463b      	mov	r3, r7
 8009678:	4620      	mov	r0, r4
 800967a:	47a8      	blx	r5
 800967c:	b00b      	add	sp, #44	; 0x2c
 800967e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009682:	bf00      	nop
 8009684:	2000a492 	.word	0x2000a492

08009688 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8009688:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800968c:	4698      	mov	r8, r3
 800968e:	6803      	ldr	r3, [r0, #0]
 8009690:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8009692:	4b11      	ldr	r3, [pc, #68]	; (80096d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009694:	b087      	sub	sp, #28
 8009696:	f8b3 9000 	ldrh.w	r9, [r3]
 800969a:	460e      	mov	r6, r1
 800969c:	4617      	mov	r7, r2
 800969e:	4604      	mov	r4, r0
 80096a0:	f7ff ff3a 	bl	8009518 <_ZN8touchgfx3HAL3lcdEv>
 80096a4:	6803      	ldr	r3, [r0, #0]
 80096a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80096a8:	4798      	blx	r3
 80096aa:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80096ae:	f8cd 900c 	str.w	r9, [sp, #12]
 80096b2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80096b6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80096ba:	9302      	str	r3, [sp, #8]
 80096bc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80096c0:	9301      	str	r3, [sp, #4]
 80096c2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80096c6:	9300      	str	r3, [sp, #0]
 80096c8:	463a      	mov	r2, r7
 80096ca:	4643      	mov	r3, r8
 80096cc:	4631      	mov	r1, r6
 80096ce:	4620      	mov	r0, r4
 80096d0:	47a8      	blx	r5
 80096d2:	b007      	add	sp, #28
 80096d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80096d8:	2000a492 	.word	0x2000a492

080096dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80096dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096e0:	4604      	mov	r4, r0
 80096e2:	b08f      	sub	sp, #60	; 0x3c
 80096e4:	4610      	mov	r0, r2
 80096e6:	460d      	mov	r5, r1
 80096e8:	4691      	mov	r9, r2
 80096ea:	461e      	mov	r6, r3
 80096ec:	f004 f9a6 	bl	800da3c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80096f0:	2800      	cmp	r0, #0
 80096f2:	f000 809c 	beq.w	800982e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 80096f6:	6823      	ldr	r3, [r4, #0]
 80096f8:	f8df b194 	ldr.w	fp, [pc, #404]	; 8009890 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 80096fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80096fe:	f8df a194 	ldr.w	sl, [pc, #404]	; 8009894 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009702:	4f60      	ldr	r7, [pc, #384]	; (8009884 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009704:	4620      	mov	r0, r4
 8009706:	4798      	blx	r3
 8009708:	6823      	ldr	r3, [r4, #0]
 800970a:	4620      	mov	r0, r4
 800970c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800970e:	4798      	blx	r3
 8009710:	f8bb 3000 	ldrh.w	r3, [fp]
 8009714:	9301      	str	r3, [sp, #4]
 8009716:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800971a:	f8ba 3000 	ldrh.w	r3, [sl]
 800971e:	9302      	str	r3, [sp, #8]
 8009720:	883b      	ldrh	r3, [r7, #0]
 8009722:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009726:	9303      	str	r3, [sp, #12]
 8009728:	4b57      	ldr	r3, [pc, #348]	; (8009888 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800972a:	9305      	str	r3, [sp, #20]
 800972c:	881a      	ldrh	r2, [r3, #0]
 800972e:	9204      	str	r2, [sp, #16]
 8009730:	4640      	mov	r0, r8
 8009732:	f004 fa33 	bl	800db9c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009736:	8038      	strh	r0, [r7, #0]
 8009738:	4640      	mov	r0, r8
 800973a:	f004 fa73 	bl	800dc24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800973e:	9b05      	ldr	r3, [sp, #20]
 8009740:	8018      	strh	r0, [r3, #0]
 8009742:	4b52      	ldr	r3, [pc, #328]	; (800988c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009744:	781b      	ldrb	r3, [r3, #0]
 8009746:	2b00      	cmp	r3, #0
 8009748:	d174      	bne.n	8009834 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800974a:	883b      	ldrh	r3, [r7, #0]
 800974c:	f8ab 3000 	strh.w	r3, [fp]
 8009750:	f8aa 0000 	strh.w	r0, [sl]
 8009754:	4648      	mov	r0, r9
 8009756:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800975a:	f004 f96f 	bl	800da3c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800975e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009762:	2200      	movs	r2, #0
 8009764:	4611      	mov	r1, r2
 8009766:	4628      	mov	r0, r5
 8009768:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800976c:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009770:	f7ff fec4 	bl	80094fc <_ZN8touchgfx8Drawable5setXYEss>
 8009774:	2301      	movs	r3, #1
 8009776:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800977a:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800977e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009782:	2b00      	cmp	r3, #0
 8009784:	dd5c      	ble.n	8009840 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8009786:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800978a:	2b00      	cmp	r3, #0
 800978c:	dd58      	ble.n	8009840 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800978e:	462a      	mov	r2, r5
 8009790:	ab0a      	add	r3, sp, #40	; 0x28
 8009792:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009796:	6851      	ldr	r1, [r2, #4]
 8009798:	c303      	stmia	r3!, {r0, r1}
 800979a:	4631      	mov	r1, r6
 800979c:	a80a      	add	r0, sp, #40	; 0x28
 800979e:	f7ff fbdf 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 80097a2:	4b38      	ldr	r3, [pc, #224]	; (8009884 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 80097a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80097a8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80097ac:	2100      	movs	r1, #0
 80097ae:	aa0a      	add	r2, sp, #40	; 0x28
 80097b0:	4b35      	ldr	r3, [pc, #212]	; (8009888 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80097b2:	910c      	str	r1, [sp, #48]	; 0x30
 80097b4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80097b8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80097bc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80097c0:	ab08      	add	r3, sp, #32
 80097c2:	e883 0003 	stmia.w	r3, {r0, r1}
 80097c6:	4618      	mov	r0, r3
 80097c8:	a90c      	add	r1, sp, #48	; 0x30
 80097ca:	f7ff fbc9 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 80097ce:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80097d0:	2b00      	cmp	r3, #0
 80097d2:	d13c      	bne.n	800984e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 80097d4:	2000      	movs	r0, #0
 80097d6:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 80097da:	2600      	movs	r6, #0
 80097dc:	682a      	ldr	r2, [r5, #0]
 80097de:	696b      	ldr	r3, [r5, #20]
 80097e0:	616e      	str	r6, [r5, #20]
 80097e2:	9305      	str	r3, [sp, #20]
 80097e4:	6892      	ldr	r2, [r2, #8]
 80097e6:	a908      	add	r1, sp, #32
 80097e8:	4628      	mov	r0, r5
 80097ea:	4790      	blx	r2
 80097ec:	9b05      	ldr	r3, [sp, #20]
 80097ee:	616b      	str	r3, [r5, #20]
 80097f0:	4652      	mov	r2, sl
 80097f2:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 80097f6:	4649      	mov	r1, r9
 80097f8:	4628      	mov	r0, r5
 80097fa:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80097fe:	f7ff fe7d 	bl	80094fc <_ZN8touchgfx8Drawable5setXYEss>
 8009802:	4b23      	ldr	r3, [pc, #140]	; (8009890 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009804:	9a01      	ldr	r2, [sp, #4]
 8009806:	801a      	strh	r2, [r3, #0]
 8009808:	4b22      	ldr	r3, [pc, #136]	; (8009894 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800980a:	9a02      	ldr	r2, [sp, #8]
 800980c:	801a      	strh	r2, [r3, #0]
 800980e:	4b1d      	ldr	r3, [pc, #116]	; (8009884 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009810:	9a03      	ldr	r2, [sp, #12]
 8009812:	801a      	strh	r2, [r3, #0]
 8009814:	4b1c      	ldr	r3, [pc, #112]	; (8009888 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009816:	9a04      	ldr	r2, [sp, #16]
 8009818:	801a      	strh	r2, [r3, #0]
 800981a:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800981e:	6823      	ldr	r3, [r4, #0]
 8009820:	4620      	mov	r0, r4
 8009822:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009824:	4798      	blx	r3
 8009826:	6823      	ldr	r3, [r4, #0]
 8009828:	4620      	mov	r0, r4
 800982a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800982c:	4798      	blx	r3
 800982e:	b00f      	add	sp, #60	; 0x3c
 8009830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009834:	883b      	ldrh	r3, [r7, #0]
 8009836:	f8ab 0000 	strh.w	r0, [fp]
 800983a:	f8aa 3000 	strh.w	r3, [sl]
 800983e:	e789      	b.n	8009754 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 8009840:	462a      	mov	r2, r5
 8009842:	ab0a      	add	r3, sp, #40	; 0x28
 8009844:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009848:	6851      	ldr	r1, [r2, #4]
 800984a:	c303      	stmia	r3!, {r0, r1}
 800984c:	e7a9      	b.n	80097a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 800984e:	a807      	add	r0, sp, #28
 8009850:	f004 fb4a 	bl	800dee8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009854:	4606      	mov	r6, r0
 8009856:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009858:	6803      	ldr	r3, [r0, #0]
 800985a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800985c:	4798      	blx	r3
 800985e:	4286      	cmp	r6, r0
 8009860:	d1b8      	bne.n	80097d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 8009862:	f7ff fe59 	bl	8009518 <_ZN8touchgfx3HAL3lcdEv>
 8009866:	6803      	ldr	r3, [r0, #0]
 8009868:	4606      	mov	r6, r0
 800986a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800986c:	9305      	str	r3, [sp, #20]
 800986e:	a807      	add	r0, sp, #28
 8009870:	f004 fb3a 	bl	800dee8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009874:	9b05      	ldr	r3, [sp, #20]
 8009876:	4601      	mov	r1, r0
 8009878:	4630      	mov	r0, r6
 800987a:	4798      	blx	r3
 800987c:	f080 0001 	eor.w	r0, r0, #1
 8009880:	b2c0      	uxtb	r0, r0
 8009882:	e7a8      	b.n	80097d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8009884:	2000a48c 	.word	0x2000a48c
 8009888:	2000a48e 	.word	0x2000a48e
 800988c:	2000a490 	.word	0x2000a490
 8009890:	2000a492 	.word	0x2000a492
 8009894:	2000a494 	.word	0x2000a494

08009898 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009898:	b510      	push	{r4, lr}
 800989a:	4b07      	ldr	r3, [pc, #28]	; (80098b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800989c:	781b      	ldrb	r3, [r3, #0]
 800989e:	4604      	mov	r4, r0
 80098a0:	b13b      	cbz	r3, 80098b2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80098a2:	6803      	ldr	r3, [r0, #0]
 80098a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80098a6:	4798      	blx	r3
 80098a8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80098aa:	4283      	cmp	r3, r0
 80098ac:	d101      	bne.n	80098b2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80098ae:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80098b0:	bd10      	pop	{r4, pc}
 80098b2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80098b4:	e7fc      	b.n	80098b0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80098b6:	bf00      	nop
 80098b8:	2000a496 	.word	0x2000a496

080098bc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80098bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80098c0:	b08a      	sub	sp, #40	; 0x28
 80098c2:	461d      	mov	r5, r3
 80098c4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80098c8:	2400      	movs	r4, #0
 80098ca:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 80098ce:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 80098d2:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 80098d6:	9404      	str	r4, [sp, #16]
 80098d8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80098dc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80098e0:	f8ad 8018 	strh.w	r8, [sp, #24]
 80098e4:	4692      	mov	sl, r2
 80098e6:	4606      	mov	r6, r0
 80098e8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80098ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 80098f0:	f88d 4020 	strb.w	r4, [sp, #32]
 80098f4:	f7ff ffd0 	bl	8009898 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80098f8:	fb09 a505 	mla	r5, r9, r5, sl
 80098fc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009900:	9505      	str	r5, [sp, #20]
 8009902:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009906:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800990a:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800990e:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8009912:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8009916:	f1b8 0f00 	cmp.w	r8, #0
 800991a:	d000      	beq.n	800991e <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 800991c:	b937      	cbnz	r7, 800992c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 800991e:	4b0d      	ldr	r3, [pc, #52]	; (8009954 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8009920:	4a0d      	ldr	r2, [pc, #52]	; (8009958 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009922:	f240 2102 	movw	r1, #514	; 0x202
 8009926:	480d      	ldr	r0, [pc, #52]	; (800995c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 8009928:	f010 fa7c 	bl	8019e24 <__assert_func>
 800992c:	6833      	ldr	r3, [r6, #0]
 800992e:	9c01      	ldr	r4, [sp, #4]
 8009930:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009932:	4630      	mov	r0, r6
 8009934:	4798      	blx	r3
 8009936:	4220      	tst	r0, r4
 8009938:	d104      	bne.n	8009944 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 800993a:	4b09      	ldr	r3, [pc, #36]	; (8009960 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 800993c:	4a06      	ldr	r2, [pc, #24]	; (8009958 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 800993e:	f240 2103 	movw	r1, #515	; 0x203
 8009942:	e7f0      	b.n	8009926 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 8009944:	6870      	ldr	r0, [r6, #4]
 8009946:	6803      	ldr	r3, [r0, #0]
 8009948:	a901      	add	r1, sp, #4
 800994a:	685b      	ldr	r3, [r3, #4]
 800994c:	4798      	blx	r3
 800994e:	b00a      	add	sp, #40	; 0x28
 8009950:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009954:	0801c2cf 	.word	0x0801c2cf
 8009958:	0801c528 	.word	0x0801c528
 800995c:	0801c47a 	.word	0x0801c47a
 8009960:	0801c307 	.word	0x0801c307

08009964 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8009964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009968:	b08b      	sub	sp, #44	; 0x2c
 800996a:	2400      	movs	r4, #0
 800996c:	461d      	mov	r5, r3
 800996e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8009972:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 8009976:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 800997a:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 800997e:	9404      	str	r4, [sp, #16]
 8009980:	468a      	mov	sl, r1
 8009982:	4693      	mov	fp, r2
 8009984:	4606      	mov	r6, r0
 8009986:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800998a:	f7ff ff85 	bl	8009898 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800998e:	fb09 b505 	mla	r5, r9, r5, fp
 8009992:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009996:	9505      	str	r5, [sp, #20]
 8009998:	f8ad 8018 	strh.w	r8, [sp, #24]
 800999c:	f8ad 701a 	strh.w	r7, [sp, #26]
 80099a0:	f8ad 401c 	strh.w	r4, [sp, #28]
 80099a4:	f8ad 901e 	strh.w	r9, [sp, #30]
 80099a8:	f8cd a010 	str.w	sl, [sp, #16]
 80099ac:	f8ad 4020 	strh.w	r4, [sp, #32]
 80099b0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80099b4:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80099b8:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80099bc:	f1b8 0f00 	cmp.w	r8, #0
 80099c0:	d000      	beq.n	80099c4 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 80099c2:	b937      	cbnz	r7, 80099d2 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 80099c4:	4b0d      	ldr	r3, [pc, #52]	; (80099fc <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 80099c6:	4a0e      	ldr	r2, [pc, #56]	; (8009a00 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 80099c8:	f240 2119 	movw	r1, #537	; 0x219
 80099cc:	480d      	ldr	r0, [pc, #52]	; (8009a04 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 80099ce:	f010 fa29 	bl	8019e24 <__assert_func>
 80099d2:	6833      	ldr	r3, [r6, #0]
 80099d4:	9c01      	ldr	r4, [sp, #4]
 80099d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80099d8:	4630      	mov	r0, r6
 80099da:	4798      	blx	r3
 80099dc:	4220      	tst	r0, r4
 80099de:	d104      	bne.n	80099ea <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 80099e0:	4b09      	ldr	r3, [pc, #36]	; (8009a08 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 80099e2:	4a07      	ldr	r2, [pc, #28]	; (8009a00 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 80099e4:	f240 211a 	movw	r1, #538	; 0x21a
 80099e8:	e7f0      	b.n	80099cc <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 80099ea:	6870      	ldr	r0, [r6, #4]
 80099ec:	6803      	ldr	r3, [r0, #0]
 80099ee:	a901      	add	r1, sp, #4
 80099f0:	685b      	ldr	r3, [r3, #4]
 80099f2:	4798      	blx	r3
 80099f4:	b00b      	add	sp, #44	; 0x2c
 80099f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80099fa:	bf00      	nop
 80099fc:	0801c34c 	.word	0x0801c34c
 8009a00:	0801c59e 	.word	0x0801c59e
 8009a04:	0801c47a 	.word	0x0801c47a
 8009a08:	0801c384 	.word	0x0801c384

08009a0c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009a0c:	b508      	push	{r3, lr}
 8009a0e:	290d      	cmp	r1, #13
 8009a10:	d817      	bhi.n	8009a42 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009a12:	e8df f001 	tbb	[pc, r1]
 8009a16:	090b      	.short	0x090b
 8009a18:	0d0d0d07 	.word	0x0d0d0d07
 8009a1c:	1414140d 	.word	0x1414140d
 8009a20:	0d0d1414 	.word	0x0d0d1414
 8009a24:	2020      	movs	r0, #32
 8009a26:	bd08      	pop	{r3, pc}
 8009a28:	2018      	movs	r0, #24
 8009a2a:	e7fc      	b.n	8009a26 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a2c:	2010      	movs	r0, #16
 8009a2e:	e7fa      	b.n	8009a26 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a30:	4b05      	ldr	r3, [pc, #20]	; (8009a48 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009a32:	4a06      	ldr	r2, [pc, #24]	; (8009a4c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009a34:	4806      	ldr	r0, [pc, #24]	; (8009a50 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009a36:	f240 2183 	movw	r1, #643	; 0x283
 8009a3a:	f010 f9f3 	bl	8019e24 <__assert_func>
 8009a3e:	2008      	movs	r0, #8
 8009a40:	e7f1      	b.n	8009a26 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a42:	2000      	movs	r0, #0
 8009a44:	e7ef      	b.n	8009a26 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a46:	bf00      	nop
 8009a48:	0801c4f6 	.word	0x0801c4f6
 8009a4c:	0801c8c9 	.word	0x0801c8c9
 8009a50:	0801c47a 	.word	0x0801c47a

08009a54 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009a54:	b570      	push	{r4, r5, r6, lr}
 8009a56:	460d      	mov	r5, r1
 8009a58:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8009a5c:	4616      	mov	r6, r2
 8009a5e:	461c      	mov	r4, r3
 8009a60:	f7ff ffd4 	bl	8009a0c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009a64:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8009a68:	10c0      	asrs	r0, r0, #3
 8009a6a:	fb06 5101 	mla	r1, r6, r1, r5
 8009a6e:	fb00 4001 	mla	r0, r0, r1, r4
 8009a72:	bd70      	pop	{r4, r5, r6, pc}

08009a74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8009a74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a78:	b08c      	sub	sp, #48	; 0x30
 8009a7a:	f04f 0c00 	mov.w	ip, #0
 8009a7e:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 8009a82:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8009a86:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 8009a8a:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 8009a8e:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 8009a92:	f8cd c018 	str.w	ip, [sp, #24]
 8009a96:	2d0b      	cmp	r5, #11
 8009a98:	4604      	mov	r4, r0
 8009a9a:	469a      	mov	sl, r3
 8009a9c:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 8009aa0:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8009aa4:	d130      	bne.n	8009b08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 8009aa6:	2080      	movs	r0, #128	; 0x80
 8009aa8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8009aac:	9205      	str	r2, [sp, #20]
 8009aae:	4620      	mov	r0, r4
 8009ab0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8009ab4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8009ab8:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8009abc:	f8ad 7020 	strh.w	r7, [sp, #32]
 8009ac0:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 8009ac4:	f7ff fee8 	bl	8009898 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009ac8:	e9cd 9800 	strd	r9, r8, [sp]
 8009acc:	4603      	mov	r3, r0
 8009ace:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8009ad2:	4651      	mov	r1, sl
 8009ad4:	4620      	mov	r0, r4
 8009ad6:	f7ff ffbd 	bl	8009a54 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009ada:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 8009ade:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8009ae2:	2300      	movs	r3, #0
 8009ae4:	9007      	str	r0, [sp, #28]
 8009ae6:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 8009aea:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 8009aee:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 8009af2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8009af6:	b107      	cbz	r7, 8009afa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 8009af8:	b9d6      	cbnz	r6, 8009b30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 8009afa:	4b17      	ldr	r3, [pc, #92]	; (8009b58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 8009afc:	4a17      	ldr	r2, [pc, #92]	; (8009b5c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8009afe:	f240 11c9 	movw	r1, #457	; 0x1c9
 8009b02:	4817      	ldr	r0, [pc, #92]	; (8009b60 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 8009b04:	f010 f98e 	bl	8019e24 <__assert_func>
 8009b08:	2d02      	cmp	r5, #2
 8009b0a:	d108      	bne.n	8009b1e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8009b0c:	2bff      	cmp	r3, #255	; 0xff
 8009b0e:	d104      	bne.n	8009b1a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 8009b10:	2800      	cmp	r0, #0
 8009b12:	bf14      	ite	ne
 8009b14:	2040      	movne	r0, #64	; 0x40
 8009b16:	2020      	moveq	r0, #32
 8009b18:	e7c6      	b.n	8009aa8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009b1a:	2040      	movs	r0, #64	; 0x40
 8009b1c:	e7c4      	b.n	8009aa8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009b1e:	2bff      	cmp	r3, #255	; 0xff
 8009b20:	d104      	bne.n	8009b2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 8009b22:	2800      	cmp	r0, #0
 8009b24:	bf14      	ite	ne
 8009b26:	2004      	movne	r0, #4
 8009b28:	2001      	moveq	r0, #1
 8009b2a:	e7bd      	b.n	8009aa8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009b2c:	2004      	movs	r0, #4
 8009b2e:	e7bb      	b.n	8009aa8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009b30:	6823      	ldr	r3, [r4, #0]
 8009b32:	9d03      	ldr	r5, [sp, #12]
 8009b34:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b36:	4620      	mov	r0, r4
 8009b38:	4798      	blx	r3
 8009b3a:	4228      	tst	r0, r5
 8009b3c:	d104      	bne.n	8009b48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 8009b3e:	4b09      	ldr	r3, [pc, #36]	; (8009b64 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 8009b40:	4a06      	ldr	r2, [pc, #24]	; (8009b5c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8009b42:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 8009b46:	e7dc      	b.n	8009b02 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 8009b48:	6860      	ldr	r0, [r4, #4]
 8009b4a:	6803      	ldr	r3, [r0, #0]
 8009b4c:	a903      	add	r1, sp, #12
 8009b4e:	685b      	ldr	r3, [r3, #4]
 8009b50:	4798      	blx	r3
 8009b52:	b00c      	add	sp, #48	; 0x30
 8009b54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b58:	0801c2cf 	.word	0x0801c2cf
 8009b5c:	0801c757 	.word	0x0801c757
 8009b60:	0801c47a 	.word	0x0801c47a
 8009b64:	0801c307 	.word	0x0801c307

08009b68 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8009b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b6c:	b08d      	sub	sp, #52	; 0x34
 8009b6e:	469b      	mov	fp, r3
 8009b70:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 8009b74:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8009b78:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 8009b7c:	2fff      	cmp	r7, #255	; 0xff
 8009b7e:	bf14      	ite	ne
 8009b80:	2308      	movne	r3, #8
 8009b82:	2302      	moveq	r3, #2
 8009b84:	2500      	movs	r5, #0
 8009b86:	4604      	mov	r4, r0
 8009b88:	4689      	mov	r9, r1
 8009b8a:	4692      	mov	sl, r2
 8009b8c:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8009b90:	9506      	str	r5, [sp, #24]
 8009b92:	f7ff fe81 	bl	8009898 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009b96:	465a      	mov	r2, fp
 8009b98:	4603      	mov	r3, r0
 8009b9a:	4651      	mov	r1, sl
 8009b9c:	e9cd 8600 	strd	r8, r6, [sp]
 8009ba0:	4620      	mov	r0, r4
 8009ba2:	f7ff ff57 	bl	8009a54 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009ba6:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 8009baa:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009bae:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8009bb2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009bb6:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 8009bba:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8009bbe:	6823      	ldr	r3, [r4, #0]
 8009bc0:	9007      	str	r0, [sp, #28]
 8009bc2:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8009bc6:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8009bca:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 8009bce:	f8cd 9018 	str.w	r9, [sp, #24]
 8009bd2:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 8009bd6:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 8009bda:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 8009bde:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009be0:	9d03      	ldr	r5, [sp, #12]
 8009be2:	4620      	mov	r0, r4
 8009be4:	4798      	blx	r3
 8009be6:	4228      	tst	r0, r5
 8009be8:	d106      	bne.n	8009bf8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 8009bea:	4b07      	ldr	r3, [pc, #28]	; (8009c08 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 8009bec:	4a07      	ldr	r2, [pc, #28]	; (8009c0c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 8009bee:	4808      	ldr	r0, [pc, #32]	; (8009c10 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 8009bf0:	f44f 710c 	mov.w	r1, #560	; 0x230
 8009bf4:	f010 f916 	bl	8019e24 <__assert_func>
 8009bf8:	6860      	ldr	r0, [r4, #4]
 8009bfa:	6803      	ldr	r3, [r0, #0]
 8009bfc:	a903      	add	r1, sp, #12
 8009bfe:	685b      	ldr	r3, [r3, #4]
 8009c00:	4798      	blx	r3
 8009c02:	b00d      	add	sp, #52	; 0x34
 8009c04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c08:	0801c307 	.word	0x0801c307
 8009c0c:	0801c82e 	.word	0x0801c82e
 8009c10:	0801c47a 	.word	0x0801c47a

08009c14 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8009c14:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009c18:	461f      	mov	r7, r3
 8009c1a:	4b0b      	ldr	r3, [pc, #44]	; (8009c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8009c1c:	460d      	mov	r5, r1
 8009c1e:	f8b3 8000 	ldrh.w	r8, [r3]
 8009c22:	4616      	mov	r6, r2
 8009c24:	4604      	mov	r4, r0
 8009c26:	f7ff fc77 	bl	8009518 <_ZN8touchgfx3HAL3lcdEv>
 8009c2a:	6803      	ldr	r3, [r0, #0]
 8009c2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c2e:	4798      	blx	r3
 8009c30:	463b      	mov	r3, r7
 8009c32:	e9cd 8000 	strd	r8, r0, [sp]
 8009c36:	4632      	mov	r2, r6
 8009c38:	4629      	mov	r1, r5
 8009c3a:	4620      	mov	r0, r4
 8009c3c:	f7ff ff0a 	bl	8009a54 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009c40:	b002      	add	sp, #8
 8009c42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c46:	bf00      	nop
 8009c48:	2000a492 	.word	0x2000a492

08009c4c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8009c4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c50:	b08b      	sub	sp, #44	; 0x2c
 8009c52:	4699      	mov	r9, r3
 8009c54:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8009c58:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 8009c5c:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8009c60:	f8ad 7018 	strh.w	r7, [sp, #24]
 8009c64:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009c68:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009c6c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009c70:	2500      	movs	r5, #0
 8009c72:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009c76:	f88d 3020 	strb.w	r3, [sp, #32]
 8009c7a:	4690      	mov	r8, r2
 8009c7c:	4604      	mov	r4, r0
 8009c7e:	9504      	str	r5, [sp, #16]
 8009c80:	f8ad 601a 	strh.w	r6, [sp, #26]
 8009c84:	f7ff fe08 	bl	8009898 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009c88:	464a      	mov	r2, r9
 8009c8a:	4603      	mov	r3, r0
 8009c8c:	4641      	mov	r1, r8
 8009c8e:	4620      	mov	r0, r4
 8009c90:	f7ff ffc0 	bl	8009c14 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009c94:	4b19      	ldr	r3, [pc, #100]	; (8009cfc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 8009c96:	9005      	str	r0, [sp, #20]
 8009c98:	881b      	ldrh	r3, [r3, #0]
 8009c9a:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009c9e:	f7ff fc3b 	bl	8009518 <_ZN8touchgfx3HAL3lcdEv>
 8009ca2:	6803      	ldr	r3, [r0, #0]
 8009ca4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ca6:	4798      	blx	r3
 8009ca8:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8009cac:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8009cb0:	b107      	cbz	r7, 8009cb4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 8009cb2:	b936      	cbnz	r6, 8009cc2 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 8009cb4:	4b12      	ldr	r3, [pc, #72]	; (8009d00 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 8009cb6:	4a13      	ldr	r2, [pc, #76]	; (8009d04 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8009cb8:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 8009cbc:	4812      	ldr	r0, [pc, #72]	; (8009d08 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 8009cbe:	f010 f8b1 	bl	8019e24 <__assert_func>
 8009cc2:	6823      	ldr	r3, [r4, #0]
 8009cc4:	9e01      	ldr	r6, [sp, #4]
 8009cc6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009cc8:	4620      	mov	r0, r4
 8009cca:	4798      	blx	r3
 8009ccc:	4230      	tst	r0, r6
 8009cce:	d104      	bne.n	8009cda <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 8009cd0:	4b0e      	ldr	r3, [pc, #56]	; (8009d0c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 8009cd2:	4a0c      	ldr	r2, [pc, #48]	; (8009d04 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8009cd4:	f240 11e7 	movw	r1, #487	; 0x1e7
 8009cd8:	e7f0      	b.n	8009cbc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 8009cda:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8009cdc:	9304      	str	r3, [sp, #16]
 8009cde:	6860      	ldr	r0, [r4, #4]
 8009ce0:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8009ce4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8009ce8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8009cec:	6803      	ldr	r3, [r0, #0]
 8009cee:	a901      	add	r1, sp, #4
 8009cf0:	685b      	ldr	r3, [r3, #4]
 8009cf2:	4798      	blx	r3
 8009cf4:	b00b      	add	sp, #44	; 0x2c
 8009cf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009cfa:	bf00      	nop
 8009cfc:	2000a492 	.word	0x2000a492
 8009d00:	0801c2cf 	.word	0x0801c2cf
 8009d04:	0801c603 	.word	0x0801c603
 8009d08:	0801c47a 	.word	0x0801c47a
 8009d0c:	0801c307 	.word	0x0801c307

08009d10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8009d10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009d12:	b08d      	sub	sp, #52	; 0x34
 8009d14:	466b      	mov	r3, sp
 8009d16:	e883 0006 	stmia.w	r3, {r1, r2}
 8009d1a:	4b22      	ldr	r3, [pc, #136]	; (8009da4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8009d1c:	781b      	ldrb	r3, [r3, #0]
 8009d1e:	4604      	mov	r4, r0
 8009d20:	b933      	cbnz	r3, 8009d30 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 8009d22:	4b21      	ldr	r3, [pc, #132]	; (8009da8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8009d24:	4a21      	ldr	r2, [pc, #132]	; (8009dac <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8009d26:	4822      	ldr	r0, [pc, #136]	; (8009db0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 8009d28:	f240 2141 	movw	r1, #577	; 0x241
 8009d2c:	f010 f87a 	bl	8019e24 <__assert_func>
 8009d30:	2300      	movs	r3, #0
 8009d32:	9306      	str	r3, [sp, #24]
 8009d34:	6803      	ldr	r3, [r0, #0]
 8009d36:	f8bd 6000 	ldrh.w	r6, [sp]
 8009d3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009d3c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8009d40:	2501      	movs	r5, #1
 8009d42:	9503      	str	r5, [sp, #12]
 8009d44:	4798      	blx	r3
 8009d46:	463a      	mov	r2, r7
 8009d48:	4631      	mov	r1, r6
 8009d4a:	4603      	mov	r3, r0
 8009d4c:	4620      	mov	r0, r4
 8009d4e:	f7ff ff61 	bl	8009c14 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009d52:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8009d54:	9307      	str	r3, [sp, #28]
 8009d56:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009d5a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009d5e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009d62:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009d66:	4b13      	ldr	r3, [pc, #76]	; (8009db4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 8009d68:	9004      	str	r0, [sp, #16]
 8009d6a:	881b      	ldrh	r3, [r3, #0]
 8009d6c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009d70:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8009d74:	f7ff fbd0 	bl	8009518 <_ZN8touchgfx3HAL3lcdEv>
 8009d78:	6803      	ldr	r3, [r0, #0]
 8009d7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d7c:	4798      	blx	r3
 8009d7e:	23ff      	movs	r3, #255	; 0xff
 8009d80:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8009d84:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8009d88:	6860      	ldr	r0, [r4, #4]
 8009d8a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8009d8e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8009d92:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8009d96:	6803      	ldr	r3, [r0, #0]
 8009d98:	a903      	add	r1, sp, #12
 8009d9a:	685b      	ldr	r3, [r3, #4]
 8009d9c:	4798      	blx	r3
 8009d9e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8009da0:	b00d      	add	sp, #52	; 0x34
 8009da2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009da4:	2000a497 	.word	0x2000a497
 8009da8:	0801c3ce 	.word	0x0801c3ce
 8009dac:	0801c6ad 	.word	0x0801c6ad
 8009db0:	0801c47a 	.word	0x0801c47a
 8009db4:	2000a492 	.word	0x2000a492

08009db8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8009db8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009dbc:	b08c      	sub	sp, #48	; 0x30
 8009dbe:	461e      	mov	r6, r3
 8009dc0:	466d      	mov	r5, sp
 8009dc2:	2300      	movs	r3, #0
 8009dc4:	e885 0006 	stmia.w	r5, {r1, r2}
 8009dc8:	9306      	str	r3, [sp, #24]
 8009dca:	6803      	ldr	r3, [r0, #0]
 8009dcc:	f8bd 7000 	ldrh.w	r7, [sp]
 8009dd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009dd2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8009dd6:	2501      	movs	r5, #1
 8009dd8:	9503      	str	r5, [sp, #12]
 8009dda:	4604      	mov	r4, r0
 8009ddc:	4798      	blx	r3
 8009dde:	4642      	mov	r2, r8
 8009de0:	4639      	mov	r1, r7
 8009de2:	4603      	mov	r3, r0
 8009de4:	4620      	mov	r0, r4
 8009de6:	f7ff ff15 	bl	8009c14 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009dea:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009dee:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009df2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009df6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009dfa:	4b11      	ldr	r3, [pc, #68]	; (8009e40 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8009dfc:	9004      	str	r0, [sp, #16]
 8009dfe:	881b      	ldrh	r3, [r3, #0]
 8009e00:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009e04:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009e06:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8009e0a:	9607      	str	r6, [sp, #28]
 8009e0c:	f7ff fb84 	bl	8009518 <_ZN8touchgfx3HAL3lcdEv>
 8009e10:	6803      	ldr	r3, [r0, #0]
 8009e12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e14:	4798      	blx	r3
 8009e16:	23ff      	movs	r3, #255	; 0xff
 8009e18:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8009e1c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8009e20:	6860      	ldr	r0, [r4, #4]
 8009e22:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8009e26:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8009e2a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8009e2e:	6803      	ldr	r3, [r0, #0]
 8009e30:	a903      	add	r1, sp, #12
 8009e32:	685b      	ldr	r3, [r3, #4]
 8009e34:	4798      	blx	r3
 8009e36:	4630      	mov	r0, r6
 8009e38:	b00c      	add	sp, #48	; 0x30
 8009e3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009e3e:	bf00      	nop
 8009e40:	2000a492 	.word	0x2000a492

08009e44 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8009e44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e46:	b085      	sub	sp, #20
 8009e48:	ac02      	add	r4, sp, #8
 8009e4a:	e884 0006 	stmia.w	r4, {r1, r2}
 8009e4e:	4605      	mov	r5, r0
 8009e50:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8009e54:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8009e58:	f7ff fd1e 	bl	8009898 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009e5c:	463a      	mov	r2, r7
 8009e5e:	4603      	mov	r3, r0
 8009e60:	4631      	mov	r1, r6
 8009e62:	4628      	mov	r0, r5
 8009e64:	f7ff fed6 	bl	8009c14 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009e68:	4a05      	ldr	r2, [pc, #20]	; (8009e80 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8009e6a:	682b      	ldr	r3, [r5, #0]
 8009e6c:	8812      	ldrh	r2, [r2, #0]
 8009e6e:	9200      	str	r2, [sp, #0]
 8009e70:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8009e72:	e894 0006 	ldmia.w	r4, {r1, r2}
 8009e76:	4603      	mov	r3, r0
 8009e78:	4628      	mov	r0, r5
 8009e7a:	47b0      	blx	r6
 8009e7c:	b005      	add	sp, #20
 8009e7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009e80:	2000a492 	.word	0x2000a492

08009e84 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8009e84:	b570      	push	{r4, r5, r6, lr}
 8009e86:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8009e8a:	4604      	mov	r4, r0
 8009e8c:	b19b      	cbz	r3, 8009eb6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8009e8e:	2002      	movs	r0, #2
 8009e90:	f7f6 fcb2 	bl	80007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8009e94:	2300      	movs	r3, #0
 8009e96:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009e9a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8009e9e:	6823      	ldr	r3, [r4, #0]
 8009ea0:	4620      	mov	r0, r4
 8009ea2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8009ea6:	f7ff fcf7 	bl	8009898 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009eaa:	462b      	mov	r3, r5
 8009eac:	4601      	mov	r1, r0
 8009eae:	4620      	mov	r0, r4
 8009eb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009eb4:	4718      	bx	r3
 8009eb6:	bd70      	pop	{r4, r5, r6, pc}

08009eb8 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 8009eb8:	b570      	push	{r4, r5, r6, lr}
 8009eba:	4605      	mov	r5, r0
 8009ebc:	460c      	mov	r4, r1
 8009ebe:	2003      	movs	r0, #3
 8009ec0:	b149      	cbz	r1, 8009ed6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 8009ec2:	f7f6 fc4d 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009ec6:	6928      	ldr	r0, [r5, #16]
 8009ec8:	b168      	cbz	r0, 8009ee6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8009eca:	6803      	ldr	r3, [r0, #0]
 8009ecc:	695b      	ldr	r3, [r3, #20]
 8009ece:	2101      	movs	r1, #1
 8009ed0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009ed4:	4718      	bx	r3
 8009ed6:	f7f6 fc69 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009eda:	6928      	ldr	r0, [r5, #16]
 8009edc:	b118      	cbz	r0, 8009ee6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8009ede:	6803      	ldr	r3, [r0, #0]
 8009ee0:	4621      	mov	r1, r4
 8009ee2:	695b      	ldr	r3, [r3, #20]
 8009ee4:	e7f4      	b.n	8009ed0 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8009ee6:	bd70      	pop	{r4, r5, r6, pc}

08009ee8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8009ee8:	b538      	push	{r3, r4, r5, lr}
 8009eea:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 8009eee:	428b      	cmp	r3, r1
 8009ef0:	4604      	mov	r4, r0
 8009ef2:	460d      	mov	r5, r1
 8009ef4:	d006      	beq.n	8009f04 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8009ef6:	6803      	ldr	r3, [r0, #0]
 8009ef8:	b929      	cbnz	r1, 8009f06 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8009efa:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8009efe:	4798      	blx	r3
 8009f00:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 8009f04:	bd38      	pop	{r3, r4, r5, pc}
 8009f06:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8009f0a:	e7f8      	b.n	8009efe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08009f0c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8009f0c:	b510      	push	{r4, lr}
 8009f0e:	4b0d      	ldr	r3, [pc, #52]	; (8009f44 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8009f10:	781b      	ldrb	r3, [r3, #0]
 8009f12:	4604      	mov	r4, r0
 8009f14:	b95b      	cbnz	r3, 8009f2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009f16:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8009f1a:	2b02      	cmp	r3, #2
 8009f1c:	d007      	beq.n	8009f2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009f1e:	6840      	ldr	r0, [r0, #4]
 8009f20:	f000 f93c 	bl	800a19c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009f24:	b118      	cbz	r0, 8009f2e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009f26:	6862      	ldr	r2, [r4, #4]
 8009f28:	7a53      	ldrb	r3, [r2, #9]
 8009f2a:	2b00      	cmp	r3, #0
 8009f2c:	d0fc      	beq.n	8009f28 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8009f2e:	f7f6 feff 	bl	8000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009f32:	4620      	mov	r0, r4
 8009f34:	2100      	movs	r1, #0
 8009f36:	f7ff ffd7 	bl	8009ee8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8009f3a:	4620      	mov	r0, r4
 8009f3c:	f7ff fcac 	bl	8009898 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009f40:	bd10      	pop	{r4, pc}
 8009f42:	bf00      	nop
 8009f44:	2000a496 	.word	0x2000a496

08009f48 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8009f48:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8009f4c:	1a13      	subs	r3, r2, r0
 8009f4e:	4258      	negs	r0, r3
 8009f50:	4158      	adcs	r0, r3
 8009f52:	4770      	bx	lr

08009f54 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8009f54:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8009f58:	1a9b      	subs	r3, r3, r2
 8009f5a:	2b00      	cmp	r3, #0
 8009f5c:	bfdc      	itt	le
 8009f5e:	6882      	ldrle	r2, [r0, #8]
 8009f60:	189b      	addle	r3, r3, r2
 8009f62:	2b01      	cmp	r3, #1
 8009f64:	bfcc      	ite	gt
 8009f66:	2000      	movgt	r0, #0
 8009f68:	2001      	movle	r0, #1
 8009f6a:	4770      	bx	lr

08009f6c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8009f6c:	6902      	ldr	r2, [r0, #16]
 8009f6e:	6843      	ldr	r3, [r0, #4]
 8009f70:	2024      	movs	r0, #36	; 0x24
 8009f72:	fb00 3002 	mla	r0, r0, r2, r3
 8009f76:	4770      	bx	lr

08009f78 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8009f78:	6803      	ldr	r3, [r0, #0]
 8009f7a:	691b      	ldr	r3, [r3, #16]
 8009f7c:	4718      	bx	r3

08009f7e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8009f7e:	4770      	bx	lr

08009f80 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8009f80:	4770      	bx	lr

08009f82 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8009f82:	4770      	bx	lr

08009f84 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8009f84:	b570      	push	{r4, r5, r6, lr}
 8009f86:	2301      	movs	r3, #1
 8009f88:	7203      	strb	r3, [r0, #8]
 8009f8a:	4604      	mov	r4, r0
 8009f8c:	6840      	ldr	r0, [r0, #4]
 8009f8e:	6803      	ldr	r3, [r0, #0]
 8009f90:	699b      	ldr	r3, [r3, #24]
 8009f92:	4798      	blx	r3
 8009f94:	6803      	ldr	r3, [r0, #0]
 8009f96:	2b40      	cmp	r3, #64	; 0x40
 8009f98:	4605      	mov	r5, r0
 8009f9a:	d039      	beq.n	800a010 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009f9c:	d815      	bhi.n	8009fca <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8009f9e:	2b04      	cmp	r3, #4
 8009fa0:	d022      	beq.n	8009fe8 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8009fa2:	d808      	bhi.n	8009fb6 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009fa4:	2b01      	cmp	r3, #1
 8009fa6:	d033      	beq.n	800a010 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009fa8:	2b02      	cmp	r3, #2
 8009faa:	d108      	bne.n	8009fbe <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 8009fac:	6823      	ldr	r3, [r4, #0]
 8009fae:	4620      	mov	r0, r4
 8009fb0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009fb2:	4798      	blx	r3
 8009fb4:	e025      	b.n	800a002 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 8009fb6:	2b08      	cmp	r3, #8
 8009fb8:	d01e      	beq.n	8009ff8 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 8009fba:	2b20      	cmp	r3, #32
 8009fbc:	d028      	beq.n	800a010 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009fbe:	4b17      	ldr	r3, [pc, #92]	; (800a01c <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 8009fc0:	4a17      	ldr	r2, [pc, #92]	; (800a020 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 8009fc2:	4818      	ldr	r0, [pc, #96]	; (800a024 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 8009fc4:	2188      	movs	r1, #136	; 0x88
 8009fc6:	f00f ff2d 	bl	8019e24 <__assert_func>
 8009fca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009fce:	d01f      	beq.n	800a010 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009fd0:	d804      	bhi.n	8009fdc <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 8009fd2:	2b80      	cmp	r3, #128	; 0x80
 8009fd4:	d01c      	beq.n	800a010 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009fd6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009fda:	e7ef      	b.n	8009fbc <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 8009fdc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009fe0:	d016      	beq.n	800a010 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009fe2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009fe6:	e7e0      	b.n	8009faa <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8009fe8:	6823      	ldr	r3, [r4, #0]
 8009fea:	7f01      	ldrb	r1, [r0, #28]
 8009fec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009fee:	4620      	mov	r0, r4
 8009ff0:	4798      	blx	r3
 8009ff2:	6823      	ldr	r3, [r4, #0]
 8009ff4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ff6:	e006      	b.n	800a006 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8009ff8:	6823      	ldr	r3, [r4, #0]
 8009ffa:	7f01      	ldrb	r1, [r0, #28]
 8009ffc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ffe:	4620      	mov	r0, r4
 800a000:	4798      	blx	r3
 800a002:	6823      	ldr	r3, [r4, #0]
 800a004:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a006:	4629      	mov	r1, r5
 800a008:	4620      	mov	r0, r4
 800a00a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a00e:	4718      	bx	r3
 800a010:	6823      	ldr	r3, [r4, #0]
 800a012:	4620      	mov	r0, r4
 800a014:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a016:	4798      	blx	r3
 800a018:	e7eb      	b.n	8009ff2 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a01a:	bf00      	nop
 800a01c:	0801c912 	.word	0x0801c912
 800a020:	0801c9d4 	.word	0x0801c9d4
 800a024:	0801c937 	.word	0x0801c937

0800a028 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a028:	b570      	push	{r4, r5, r6, lr}
 800a02a:	4604      	mov	r4, r0
 800a02c:	460e      	mov	r6, r1
 800a02e:	6860      	ldr	r0, [r4, #4]
 800a030:	6803      	ldr	r3, [r0, #0]
 800a032:	685b      	ldr	r3, [r3, #4]
 800a034:	4798      	blx	r3
 800a036:	2800      	cmp	r0, #0
 800a038:	d1f9      	bne.n	800a02e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a03a:	4d0d      	ldr	r5, [pc, #52]	; (800a070 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a03c:	6828      	ldr	r0, [r5, #0]
 800a03e:	6803      	ldr	r3, [r0, #0]
 800a040:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a042:	4798      	blx	r3
 800a044:	f7f6 fe82 	bl	8000d4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a048:	6828      	ldr	r0, [r5, #0]
 800a04a:	2101      	movs	r1, #1
 800a04c:	f7ff ff4c 	bl	8009ee8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a050:	6860      	ldr	r0, [r4, #4]
 800a052:	6803      	ldr	r3, [r0, #0]
 800a054:	4631      	mov	r1, r6
 800a056:	689b      	ldr	r3, [r3, #8]
 800a058:	4798      	blx	r3
 800a05a:	6823      	ldr	r3, [r4, #0]
 800a05c:	4620      	mov	r0, r4
 800a05e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a060:	4798      	blx	r3
 800a062:	6828      	ldr	r0, [r5, #0]
 800a064:	6803      	ldr	r3, [r0, #0]
 800a066:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a06a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a06c:	4718      	bx	r3
 800a06e:	bf00      	nop
 800a070:	2000a498 	.word	0x2000a498

0800a074 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a074:	b508      	push	{r3, lr}
 800a076:	f7f6 fe5b 	bl	8000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a07a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a07e:	f7f6 be5f 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a082 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a082:	b510      	push	{r4, lr}
 800a084:	2114      	movs	r1, #20
 800a086:	4604      	mov	r4, r0
 800a088:	f00f fe9d 	bl	8019dc6 <_ZdlPvj>
 800a08c:	4620      	mov	r0, r4
 800a08e:	bd10      	pop	{r4, pc}

0800a090 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a090:	b510      	push	{r4, lr}
 800a092:	4604      	mov	r4, r0
 800a094:	6840      	ldr	r0, [r0, #4]
 800a096:	6803      	ldr	r3, [r0, #0]
 800a098:	681b      	ldr	r3, [r3, #0]
 800a09a:	4798      	blx	r3
 800a09c:	b948      	cbnz	r0, 800a0b2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a09e:	7a63      	ldrb	r3, [r4, #9]
 800a0a0:	b13b      	cbz	r3, 800a0b2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a0a2:	7a23      	ldrb	r3, [r4, #8]
 800a0a4:	b92b      	cbnz	r3, 800a0b2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a0a6:	6823      	ldr	r3, [r4, #0]
 800a0a8:	4620      	mov	r0, r4
 800a0aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a0ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a0b0:	4718      	bx	r3
 800a0b2:	bd10      	pop	{r4, pc}

0800a0b4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a0b4:	b510      	push	{r4, lr}
 800a0b6:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a0ba:	1ad2      	subs	r2, r2, r3
 800a0bc:	2a00      	cmp	r2, #0
 800a0be:	bfdc      	itt	le
 800a0c0:	6884      	ldrle	r4, [r0, #8]
 800a0c2:	1912      	addle	r2, r2, r4
 800a0c4:	2a01      	cmp	r2, #1
 800a0c6:	dd17      	ble.n	800a0f8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 800a0c8:	6842      	ldr	r2, [r0, #4]
 800a0ca:	2424      	movs	r4, #36	; 0x24
 800a0cc:	fb04 2303 	mla	r3, r4, r3, r2
 800a0d0:	f101 0220 	add.w	r2, r1, #32
 800a0d4:	f851 4b04 	ldr.w	r4, [r1], #4
 800a0d8:	f843 4b04 	str.w	r4, [r3], #4
 800a0dc:	4291      	cmp	r1, r2
 800a0de:	d1f9      	bne.n	800a0d4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a0e0:	780a      	ldrb	r2, [r1, #0]
 800a0e2:	701a      	strb	r2, [r3, #0]
 800a0e4:	68c3      	ldr	r3, [r0, #12]
 800a0e6:	6882      	ldr	r2, [r0, #8]
 800a0e8:	f3bf 8f5b 	dmb	ish
 800a0ec:	3301      	adds	r3, #1
 800a0ee:	429a      	cmp	r2, r3
 800a0f0:	bfd8      	it	le
 800a0f2:	1a9b      	suble	r3, r3, r2
 800a0f4:	60c3      	str	r3, [r0, #12]
 800a0f6:	bd10      	pop	{r4, pc}
 800a0f8:	4b02      	ldr	r3, [pc, #8]	; (800a104 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800a0fa:	4a03      	ldr	r2, [pc, #12]	; (800a108 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a0fc:	4803      	ldr	r0, [pc, #12]	; (800a10c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a0fe:	2136      	movs	r1, #54	; 0x36
 800a100:	f00f fe90 	bl	8019e24 <__assert_func>
 800a104:	0801c95d 	.word	0x0801c95d
 800a108:	0801ca04 	.word	0x0801ca04
 800a10c:	0801c937 	.word	0x0801c937

0800a110 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a110:	b510      	push	{r4, lr}
 800a112:	6803      	ldr	r3, [r0, #0]
 800a114:	681b      	ldr	r3, [r3, #0]
 800a116:	4604      	mov	r4, r0
 800a118:	4798      	blx	r3
 800a11a:	b128      	cbz	r0, 800a128 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a11c:	4b07      	ldr	r3, [pc, #28]	; (800a13c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a11e:	4a08      	ldr	r2, [pc, #32]	; (800a140 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a120:	4808      	ldr	r0, [pc, #32]	; (800a144 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a122:	213c      	movs	r1, #60	; 0x3c
 800a124:	f00f fe7e 	bl	8019e24 <__assert_func>
 800a128:	6923      	ldr	r3, [r4, #16]
 800a12a:	68a2      	ldr	r2, [r4, #8]
 800a12c:	f3bf 8f5b 	dmb	ish
 800a130:	3301      	adds	r3, #1
 800a132:	429a      	cmp	r2, r3
 800a134:	bfd8      	it	le
 800a136:	1a9b      	suble	r3, r3, r2
 800a138:	6123      	str	r3, [r4, #16]
 800a13a:	bd10      	pop	{r4, pc}
 800a13c:	0801c980 	.word	0x0801c980
 800a140:	0801ca52 	.word	0x0801ca52
 800a144:	0801c937 	.word	0x0801c937

0800a148 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a148:	b570      	push	{r4, r5, r6, lr}
 800a14a:	4604      	mov	r4, r0
 800a14c:	6840      	ldr	r0, [r0, #4]
 800a14e:	6803      	ldr	r3, [r0, #0]
 800a150:	681b      	ldr	r3, [r3, #0]
 800a152:	4798      	blx	r3
 800a154:	4605      	mov	r5, r0
 800a156:	b930      	cbnz	r0, 800a166 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a158:	7a23      	ldrb	r3, [r4, #8]
 800a15a:	b123      	cbz	r3, 800a166 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a15c:	6860      	ldr	r0, [r4, #4]
 800a15e:	6803      	ldr	r3, [r0, #0]
 800a160:	695b      	ldr	r3, [r3, #20]
 800a162:	4798      	blx	r3
 800a164:	7225      	strb	r5, [r4, #8]
 800a166:	6860      	ldr	r0, [r4, #4]
 800a168:	6803      	ldr	r3, [r0, #0]
 800a16a:	681b      	ldr	r3, [r3, #0]
 800a16c:	4798      	blx	r3
 800a16e:	b928      	cbnz	r0, 800a17c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a170:	6823      	ldr	r3, [r4, #0]
 800a172:	4620      	mov	r0, r4
 800a174:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a176:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a17a:	4718      	bx	r3
 800a17c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a180:	f7f6 bdec 	b.w	8000d5c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a184 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a184:	b510      	push	{r4, lr}
 800a186:	4c04      	ldr	r4, [pc, #16]	; (800a198 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a188:	6082      	str	r2, [r0, #8]
 800a18a:	2200      	movs	r2, #0
 800a18c:	e9c0 4100 	strd	r4, r1, [r0]
 800a190:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a194:	bd10      	pop	{r4, pc}
 800a196:	bf00      	nop
 800a198:	0801c9b8 	.word	0x0801c9b8

0800a19c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a19c:	6840      	ldr	r0, [r0, #4]
 800a19e:	6803      	ldr	r3, [r0, #0]
 800a1a0:	681b      	ldr	r3, [r3, #0]
 800a1a2:	4718      	bx	r3

0800a1a4 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a1a4:	2300      	movs	r3, #0
 800a1a6:	8083      	strh	r3, [r0, #4]
 800a1a8:	80c3      	strh	r3, [r0, #6]
 800a1aa:	8003      	strh	r3, [r0, #0]
 800a1ac:	8043      	strh	r3, [r0, #2]
 800a1ae:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a1b2:	2bff      	cmp	r3, #255	; 0xff
 800a1b4:	bf01      	itttt	eq
 800a1b6:	890b      	ldrheq	r3, [r1, #8]
 800a1b8:	8083      	strheq	r3, [r0, #4]
 800a1ba:	894b      	ldrheq	r3, [r1, #10]
 800a1bc:	80c3      	strheq	r3, [r0, #6]
 800a1be:	4770      	bx	lr

0800a1c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a1c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a1c2:	4604      	mov	r4, r0
 800a1c4:	6808      	ldr	r0, [r1, #0]
 800a1c6:	6849      	ldr	r1, [r1, #4]
 800a1c8:	466b      	mov	r3, sp
 800a1ca:	c303      	stmia	r3!, {r0, r1}
 800a1cc:	6823      	ldr	r3, [r4, #0]
 800a1ce:	4669      	mov	r1, sp
 800a1d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1d2:	4620      	mov	r0, r4
 800a1d4:	4798      	blx	r3
 800a1d6:	4b08      	ldr	r3, [pc, #32]	; (800a1f8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a1d8:	681b      	ldr	r3, [r3, #0]
 800a1da:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a1de:	b10a      	cbz	r2, 800a1e4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a1e0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a1e2:	b900      	cbnz	r0, 800a1e6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a1e4:	6898      	ldr	r0, [r3, #8]
 800a1e6:	6803      	ldr	r3, [r0, #0]
 800a1e8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a1ea:	6a1d      	ldr	r5, [r3, #32]
 800a1ec:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a1f0:	4669      	mov	r1, sp
 800a1f2:	47a8      	blx	r5
 800a1f4:	b003      	add	sp, #12
 800a1f6:	bd30      	pop	{r4, r5, pc}
 800a1f8:	2000a498 	.word	0x2000a498

0800a1fc <_ZN8touchgfx3BoxD1Ev>:
 800a1fc:	4770      	bx	lr

0800a1fe <_ZN8touchgfx3BoxD0Ev>:
 800a1fe:	b510      	push	{r4, lr}
 800a200:	212c      	movs	r1, #44	; 0x2c
 800a202:	4604      	mov	r4, r0
 800a204:	f00f fddf 	bl	8019dc6 <_ZdlPvj>
 800a208:	4620      	mov	r0, r4
 800a20a:	bd10      	pop	{r4, pc}

0800a20c <_ZNK8touchgfx3Box17invalidateContentEv>:
 800a20c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800a210:	b12a      	cbz	r2, 800a21e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800a212:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800a216:	b112      	cbz	r2, 800a21e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800a218:	6803      	ldr	r3, [r0, #0]
 800a21a:	695b      	ldr	r3, [r3, #20]
 800a21c:	4718      	bx	r3
 800a21e:	4770      	bx	lr

0800a220 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800a220:	b510      	push	{r4, lr}
 800a222:	6803      	ldr	r3, [r0, #0]
 800a224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a226:	460c      	mov	r4, r1
 800a228:	4798      	blx	r3
 800a22a:	1b03      	subs	r3, r0, r4
 800a22c:	4258      	negs	r0, r3
 800a22e:	4158      	adcs	r0, r3
 800a230:	bd10      	pop	{r4, pc}
	...

0800a234 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800a234:	4b01      	ldr	r3, [pc, #4]	; (800a23c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800a236:	6019      	str	r1, [r3, #0]
 800a238:	4770      	bx	lr
 800a23a:	bf00      	nop
 800a23c:	2000a4a0 	.word	0x2000a4a0

0800a240 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800a240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a244:	4696      	mov	lr, r2
 800a246:	4605      	mov	r5, r0
 800a248:	4614      	mov	r4, r2
 800a24a:	460e      	mov	r6, r1
 800a24c:	461f      	mov	r7, r3
 800a24e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a252:	b097      	sub	sp, #92	; 0x5c
 800a254:	f10d 0c1c 	add.w	ip, sp, #28
 800a258:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a25c:	f8de 3000 	ldr.w	r3, [lr]
 800a260:	f8cc 3000 	str.w	r3, [ip]
 800a264:	f104 0e14 	add.w	lr, r4, #20
 800a268:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a26c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800a270:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a274:	f8de 3000 	ldr.w	r3, [lr]
 800a278:	f8cc 3000 	str.w	r3, [ip]
 800a27c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800a280:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a284:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800a288:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a28c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800a290:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800a294:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800a298:	f8de 3000 	ldr.w	r3, [lr]
 800a29c:	f8cc 3000 	str.w	r3, [ip]
 800a2a0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a2a2:	682b      	ldr	r3, [r5, #0]
 800a2a4:	9201      	str	r2, [sp, #4]
 800a2a6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800a2aa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800a2ac:	9200      	str	r2, [sp, #0]
 800a2ae:	f8cd 8008 	str.w	r8, [sp, #8]
 800a2b2:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800a2b6:	aa07      	add	r2, sp, #28
 800a2b8:	463b      	mov	r3, r7
 800a2ba:	4631      	mov	r1, r6
 800a2bc:	4628      	mov	r0, r5
 800a2be:	47d8      	blx	fp
 800a2c0:	46a6      	mov	lr, r4
 800a2c2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a2c6:	f10d 0c1c 	add.w	ip, sp, #28
 800a2ca:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a2ce:	f8de 3000 	ldr.w	r3, [lr]
 800a2d2:	f8cc 3000 	str.w	r3, [ip]
 800a2d6:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800a2da:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a2de:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800a2e2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a2e6:	343c      	adds	r4, #60	; 0x3c
 800a2e8:	f8de 3000 	ldr.w	r3, [lr]
 800a2ec:	f8cc 3000 	str.w	r3, [ip]
 800a2f0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a2f2:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800a2f6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a2fa:	6823      	ldr	r3, [r4, #0]
 800a2fc:	f8cc 3000 	str.w	r3, [ip]
 800a300:	682b      	ldr	r3, [r5, #0]
 800a302:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800a306:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a308:	9201      	str	r2, [sp, #4]
 800a30a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800a30c:	9200      	str	r2, [sp, #0]
 800a30e:	f8cd 8008 	str.w	r8, [sp, #8]
 800a312:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800a314:	aa07      	add	r2, sp, #28
 800a316:	463b      	mov	r3, r7
 800a318:	4631      	mov	r1, r6
 800a31a:	4628      	mov	r0, r5
 800a31c:	47a0      	blx	r4
 800a31e:	b017      	add	sp, #92	; 0x5c
 800a320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a324 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800a324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a328:	b08d      	sub	sp, #52	; 0x34
 800a32a:	4688      	mov	r8, r1
 800a32c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800a32e:	f8d3 c000 	ldr.w	ip, [r3]
 800a332:	680f      	ldr	r7, [r1, #0]
 800a334:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800a338:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800a33c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800a340:	edd3 6a07 	vldr	s13, [r3, #28]
 800a344:	9918      	ldr	r1, [sp, #96]	; 0x60
 800a346:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800a34a:	f9b1 9000 	ldrsh.w	r9, [r1]
 800a34e:	f9ba 1000 	ldrsh.w	r1, [sl]
 800a352:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800a356:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800a35a:	eba7 070c 	sub.w	r7, r7, ip
 800a35e:	42bc      	cmp	r4, r7
 800a360:	bfa8      	it	ge
 800a362:	463c      	movge	r4, r7
 800a364:	ee07 4a90 	vmov	s15, r4
 800a368:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800a36c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800a370:	ee25 4a04 	vmul.f32	s8, s10, s8
 800a374:	ee65 4a24 	vmul.f32	s9, s10, s9
 800a378:	ee25 5a27 	vmul.f32	s10, s10, s15
 800a37c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800a380:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800a384:	eb09 0e0c 	add.w	lr, r9, ip
 800a388:	4571      	cmp	r1, lr
 800a38a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800a38e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800a392:	ee36 0a84 	vadd.f32	s0, s13, s8
 800a396:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a39a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a39e:	f340 808d 	ble.w	800a4bc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800a3a2:	eba1 060e 	sub.w	r6, r1, lr
 800a3a6:	fb96 f5f4 	sdiv	r5, r6, r4
 800a3aa:	ee07 5a10 	vmov	s14, r5
 800a3ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a3b2:	2d00      	cmp	r5, #0
 800a3b4:	fb04 6615 	mls	r6, r4, r5, r6
 800a3b8:	eea7 0a04 	vfma.f32	s0, s14, s8
 800a3bc:	eee7 0a24 	vfma.f32	s1, s14, s9
 800a3c0:	eea7 1a05 	vfma.f32	s2, s14, s10
 800a3c4:	dd13      	ble.n	800a3ee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800a3c6:	ee70 6a44 	vsub.f32	s13, s0, s8
 800a3ca:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800a3ce:	eef5 6a40 	vcmp.f32	s13, #0.0
 800a3d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a3d6:	bf18      	it	ne
 800a3d8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800a3dc:	ee31 2a45 	vsub.f32	s4, s2, s10
 800a3e0:	bf08      	it	eq
 800a3e2:	eeb0 7a67 	vmoveq.f32	s14, s15
 800a3e6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a3ea:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a3ee:	fb05 f204 	mul.w	r2, r5, r4
 800a3f2:	1abf      	subs	r7, r7, r2
 800a3f4:	4494      	add	ip, r2
 800a3f6:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800a3fa:	4411      	add	r1, r2
 800a3fc:	eb09 020c 	add.w	r2, r9, ip
 800a400:	443a      	add	r2, r7
 800a402:	b209      	sxth	r1, r1
 800a404:	428a      	cmp	r2, r1
 800a406:	bfc4      	itt	gt
 800a408:	eba1 0209 	subgt.w	r2, r1, r9
 800a40c:	eba2 070c 	subgt.w	r7, r2, ip
 800a410:	2f00      	cmp	r7, #0
 800a412:	dd50      	ble.n	800a4b6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800a414:	fb97 f1f4 	sdiv	r1, r7, r4
 800a418:	fb04 7211 	mls	r2, r4, r1, r7
 800a41c:	b90a      	cbnz	r2, 800a422 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800a41e:	3901      	subs	r1, #1
 800a420:	4622      	mov	r2, r4
 800a422:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800a426:	6840      	ldr	r0, [r0, #4]
 800a428:	900b      	str	r0, [sp, #44]	; 0x2c
 800a42a:	f8d0 a000 	ldr.w	sl, [r0]
 800a42e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800a430:	9008      	str	r0, [sp, #32]
 800a432:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800a436:	9818      	ldr	r0, [sp, #96]	; 0x60
 800a438:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800a43c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800a440:	695b      	ldr	r3, [r3, #20]
 800a442:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800a444:	445b      	add	r3, fp
 800a446:	eef0 6a42 	vmov.f32	s13, s4
 800a44a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800a44e:	ee21 3a23 	vmul.f32	s6, s2, s7
 800a452:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800a456:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800a45a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a45e:	9307      	str	r3, [sp, #28]
 800a460:	ee17 7a90 	vmov	r7, s15
 800a464:	ee73 7a42 	vsub.f32	s15, s6, s4
 800a468:	eeb0 7a61 	vmov.f32	s14, s3
 800a46c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a470:	ee16 3a90 	vmov	r3, s13
 800a474:	fb97 f7f4 	sdiv	r7, r7, r4
 800a478:	ee17 ca90 	vmov	ip, s15
 800a47c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800a480:	fb9c fcf4 	sdiv	ip, ip, r4
 800a484:	fb0c 3306 	mla	r3, ip, r6, r3
 800a488:	9302      	str	r3, [sp, #8]
 800a48a:	ee17 3a10 	vmov	r3, s14
 800a48e:	44b6      	add	lr, r6
 800a490:	fb04 e505 	mla	r5, r4, r5, lr
 800a494:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800a498:	fb07 3706 	mla	r7, r7, r6, r3
 800a49c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800a4a0:	e9cd 4700 	strd	r4, r7, [sp]
 800a4a4:	2900      	cmp	r1, #0
 800a4a6:	bfcc      	ite	gt
 800a4a8:	46a1      	movgt	r9, r4
 800a4aa:	4691      	movle	r9, r2
 800a4ac:	eba9 0306 	sub.w	r3, r9, r6
 800a4b0:	f8da 4008 	ldr.w	r4, [sl, #8]
 800a4b4:	47a0      	blx	r4
 800a4b6:	b00d      	add	sp, #52	; 0x34
 800a4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4bc:	2500      	movs	r5, #0
 800a4be:	462e      	mov	r6, r5
 800a4c0:	e799      	b.n	800a3f6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800a4c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800a4c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a4c8:	b0db      	sub	sp, #364	; 0x16c
 800a4ca:	461d      	mov	r5, r3
 800a4cc:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800a4d0:	930a      	str	r3, [sp, #40]	; 0x28
 800a4d2:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800a4d6:	930b      	str	r3, [sp, #44]	; 0x2c
 800a4d8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800a4dc:	9310      	str	r3, [sp, #64]	; 0x40
 800a4de:	6803      	ldr	r3, [r0, #0]
 800a4e0:	910f      	str	r1, [sp, #60]	; 0x3c
 800a4e2:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800a4e4:	9009      	str	r0, [sp, #36]	; 0x24
 800a4e6:	4614      	mov	r4, r2
 800a4e8:	4629      	mov	r1, r5
 800a4ea:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800a4ee:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800a4f2:	47b8      	blx	r7
 800a4f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a4f6:	6058      	str	r0, [r3, #4]
 800a4f8:	2800      	cmp	r0, #0
 800a4fa:	f000 83a1 	beq.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a4fe:	682b      	ldr	r3, [r5, #0]
 800a500:	9314      	str	r3, [sp, #80]	; 0x50
 800a502:	686b      	ldr	r3, [r5, #4]
 800a504:	9315      	str	r3, [sp, #84]	; 0x54
 800a506:	4bc4      	ldr	r3, [pc, #784]	; (800a818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800a508:	ed94 7a02 	vldr	s14, [r4, #8]
 800a50c:	7819      	ldrb	r1, [r3, #0]
 800a50e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800a512:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800a516:	2900      	cmp	r1, #0
 800a518:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800a51c:	bf16      	itet	ne
 800a51e:	4619      	movne	r1, r3
 800a520:	4611      	moveq	r1, r2
 800a522:	4613      	movne	r3, r2
 800a524:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a528:	9116      	str	r1, [sp, #88]	; 0x58
 800a52a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800a52e:	f240 8387 	bls.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a532:	ed94 7a07 	vldr	s14, [r4, #28]
 800a536:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800a53a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a53e:	f240 837f 	bls.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a542:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800a546:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800a54a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a54e:	f240 8377 	bls.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a552:	6822      	ldr	r2, [r4, #0]
 800a554:	4bb1      	ldr	r3, [pc, #708]	; (800a81c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800a556:	429a      	cmp	r2, r3
 800a558:	f2c0 8372 	blt.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a55c:	49b0      	ldr	r1, [pc, #704]	; (800a820 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800a55e:	6963      	ldr	r3, [r4, #20]
 800a560:	428a      	cmp	r2, r1
 800a562:	f300 836d 	bgt.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a566:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800a56a:	48ae      	ldr	r0, [pc, #696]	; (800a824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800a56c:	33ff      	adds	r3, #255	; 0xff
 800a56e:	4283      	cmp	r3, r0
 800a570:	f200 8366 	bhi.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a574:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800a576:	4dac      	ldr	r5, [pc, #688]	; (800a828 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800a578:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800a57c:	33ff      	adds	r3, #255	; 0xff
 800a57e:	42ab      	cmp	r3, r5
 800a580:	f200 835e 	bhi.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a584:	6862      	ldr	r2, [r4, #4]
 800a586:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800a58a:	33ff      	adds	r3, #255	; 0xff
 800a58c:	4283      	cmp	r3, r0
 800a58e:	f200 8357 	bhi.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a592:	69a1      	ldr	r1, [r4, #24]
 800a594:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800a598:	33ff      	adds	r3, #255	; 0xff
 800a59a:	4283      	cmp	r3, r0
 800a59c:	f200 8350 	bhi.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a5a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a5a2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800a5a6:	30ff      	adds	r0, #255	; 0xff
 800a5a8:	42a8      	cmp	r0, r5
 800a5aa:	f200 8349 	bhi.w	800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a5ae:	428a      	cmp	r2, r1
 800a5b0:	f280 8110 	bge.w	800a7d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800a5b4:	429a      	cmp	r2, r3
 800a5b6:	f300 8119 	bgt.w	800a7ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800a5ba:	4299      	cmp	r1, r3
 800a5bc:	f280 811d 	bge.w	800a7fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800a5c0:	2502      	movs	r5, #2
 800a5c2:	2701      	movs	r7, #1
 800a5c4:	46a9      	mov	r9, r5
 800a5c6:	46b8      	mov	r8, r7
 800a5c8:	f04f 0a00 	mov.w	sl, #0
 800a5cc:	4621      	mov	r1, r4
 800a5ce:	a849      	add	r0, sp, #292	; 0x124
 800a5d0:	f002 fff6 	bl	800d5c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800a5d4:	4622      	mov	r2, r4
 800a5d6:	4653      	mov	r3, sl
 800a5d8:	a949      	add	r1, sp, #292	; 0x124
 800a5da:	f8cd 9000 	str.w	r9, [sp]
 800a5de:	a819      	add	r0, sp, #100	; 0x64
 800a5e0:	f003 f91e 	bl	800d820 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800a5e4:	4622      	mov	r2, r4
 800a5e6:	4653      	mov	r3, sl
 800a5e8:	a949      	add	r1, sp, #292	; 0x124
 800a5ea:	f8cd 8000 	str.w	r8, [sp]
 800a5ee:	a829      	add	r0, sp, #164	; 0xa4
 800a5f0:	f003 f916 	bl	800d820 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800a5f4:	4643      	mov	r3, r8
 800a5f6:	4622      	mov	r2, r4
 800a5f8:	a949      	add	r1, sp, #292	; 0x124
 800a5fa:	f8cd 9000 	str.w	r9, [sp]
 800a5fe:	a839      	add	r0, sp, #228	; 0xe4
 800a600:	f003 f90e 	bl	800d820 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800a604:	42af      	cmp	r7, r5
 800a606:	bfb5      	itete	lt
 800a608:	2300      	movlt	r3, #0
 800a60a:	2301      	movge	r3, #1
 800a60c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800a60e:	930e      	strge	r3, [sp, #56]	; 0x38
 800a610:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a612:	e893 0003 	ldmia.w	r3, {r0, r1}
 800a616:	af12      	add	r7, sp, #72	; 0x48
 800a618:	bfb9      	ittee	lt
 800a61a:	ad29      	addlt	r5, sp, #164	; 0xa4
 800a61c:	ac19      	addlt	r4, sp, #100	; 0x64
 800a61e:	ad19      	addge	r5, sp, #100	; 0x64
 800a620:	ac29      	addge	r4, sp, #164	; 0xa4
 800a622:	e887 0003 	stmia.w	r7, {r0, r1}
 800a626:	b928      	cbnz	r0, 800a634 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800a628:	4b80      	ldr	r3, [pc, #512]	; (800a82c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800a62a:	6818      	ldr	r0, [r3, #0]
 800a62c:	6803      	ldr	r3, [r0, #0]
 800a62e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a630:	4798      	blx	r3
 800a632:	6038      	str	r0, [r7, #0]
 800a634:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a636:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800a63a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800a63e:	930c      	str	r3, [sp, #48]	; 0x30
 800a640:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a642:	6963      	ldr	r3, [r4, #20]
 800a644:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800a646:	440b      	add	r3, r1
 800a648:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800a64c:	4408      	add	r0, r1
 800a64e:	b200      	sxth	r0, r0
 800a650:	4283      	cmp	r3, r0
 800a652:	900d      	str	r0, [sp, #52]	; 0x34
 800a654:	f280 80dd 	bge.w	800a812 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800a658:	428b      	cmp	r3, r1
 800a65a:	da08      	bge.n	800a66e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800a65c:	2a00      	cmp	r2, #0
 800a65e:	dd06      	ble.n	800a66e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800a660:	1acb      	subs	r3, r1, r3
 800a662:	429a      	cmp	r2, r3
 800a664:	f2c0 80e4 	blt.w	800a830 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800a668:	2b00      	cmp	r3, #0
 800a66a:	f300 80e2 	bgt.w	800a832 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800a66e:	6967      	ldr	r7, [r4, #20]
 800a670:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a672:	443b      	add	r3, r7
 800a674:	461f      	mov	r7, r3
 800a676:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a678:	1bdf      	subs	r7, r3, r7
 800a67a:	4297      	cmp	r7, r2
 800a67c:	bfa8      	it	ge
 800a67e:	4617      	movge	r7, r2
 800a680:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800a684:	2f00      	cmp	r7, #0
 800a686:	f340 8166 	ble.w	800a956 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800a68a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a68c:	6829      	ldr	r1, [r5, #0]
 800a68e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a692:	f9bb 3000 	ldrsh.w	r3, [fp]
 800a696:	6820      	ldr	r0, [r4, #0]
 800a698:	4411      	add	r1, r2
 800a69a:	4299      	cmp	r1, r3
 800a69c:	dd1a      	ble.n	800a6d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800a69e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800a6a2:	440b      	add	r3, r1
 800a6a4:	4402      	add	r2, r0
 800a6a6:	b21b      	sxth	r3, r3
 800a6a8:	429a      	cmp	r2, r3
 800a6aa:	dc13      	bgt.n	800a6d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800a6ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a6ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a6b0:	681b      	ldr	r3, [r3, #0]
 800a6b2:	9206      	str	r2, [sp, #24]
 800a6b4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a6b6:	9205      	str	r2, [sp, #20]
 800a6b8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a6ba:	9500      	str	r5, [sp, #0]
 800a6bc:	e9cd b203 	strd	fp, r2, [sp, #12]
 800a6c0:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800a6c2:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a6c4:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800a6c8:	a912      	add	r1, sp, #72	; 0x48
 800a6ca:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800a6ce:	aa49      	add	r2, sp, #292	; 0x124
 800a6d0:	4623      	mov	r3, r4
 800a6d2:	47c8      	blx	r9
 800a6d4:	e9d4 2300 	ldrd	r2, r3, [r4]
 800a6d8:	441a      	add	r2, r3
 800a6da:	6963      	ldr	r3, [r4, #20]
 800a6dc:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800a6e0:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800a6e4:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800a6e8:	68a1      	ldr	r1, [r4, #8]
 800a6ea:	ed94 6a08 	vldr	s12, [r4, #32]
 800a6ee:	6022      	str	r2, [r4, #0]
 800a6f0:	3301      	adds	r3, #1
 800a6f2:	6163      	str	r3, [r4, #20]
 800a6f4:	69a3      	ldr	r3, [r4, #24]
 800a6f6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800a6fa:	3b01      	subs	r3, #1
 800a6fc:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800a700:	61a3      	str	r3, [r4, #24]
 800a702:	6923      	ldr	r3, [r4, #16]
 800a704:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800a708:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a70c:	edd4 6a07 	vldr	s13, [r4, #28]
 800a710:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800a714:	440b      	add	r3, r1
 800a716:	68e1      	ldr	r1, [r4, #12]
 800a718:	6123      	str	r3, [r4, #16]
 800a71a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800a71e:	428b      	cmp	r3, r1
 800a720:	edc4 6a07 	vstr	s13, [r4, #28]
 800a724:	db15      	blt.n	800a752 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800a726:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800a72a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800a72e:	3201      	adds	r2, #1
 800a730:	edc4 6a07 	vstr	s13, [r4, #28]
 800a734:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800a738:	6022      	str	r2, [r4, #0]
 800a73a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800a73e:	1a5b      	subs	r3, r3, r1
 800a740:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800a744:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800a748:	6123      	str	r3, [r4, #16]
 800a74a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a74e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800a752:	e9d5 2300 	ldrd	r2, r3, [r5]
 800a756:	441a      	add	r2, r3
 800a758:	696b      	ldr	r3, [r5, #20]
 800a75a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800a75e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800a762:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800a766:	68a9      	ldr	r1, [r5, #8]
 800a768:	ed95 6a08 	vldr	s12, [r5, #32]
 800a76c:	602a      	str	r2, [r5, #0]
 800a76e:	3301      	adds	r3, #1
 800a770:	616b      	str	r3, [r5, #20]
 800a772:	69ab      	ldr	r3, [r5, #24]
 800a774:	ee37 7a27 	vadd.f32	s14, s14, s15
 800a778:	3b01      	subs	r3, #1
 800a77a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800a77e:	61ab      	str	r3, [r5, #24]
 800a780:	692b      	ldr	r3, [r5, #16]
 800a782:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800a786:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a78a:	edd5 6a07 	vldr	s13, [r5, #28]
 800a78e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800a792:	440b      	add	r3, r1
 800a794:	68e9      	ldr	r1, [r5, #12]
 800a796:	612b      	str	r3, [r5, #16]
 800a798:	ee76 6a86 	vadd.f32	s13, s13, s12
 800a79c:	428b      	cmp	r3, r1
 800a79e:	edc5 6a07 	vstr	s13, [r5, #28]
 800a7a2:	db15      	blt.n	800a7d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800a7a4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800a7a8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800a7ac:	3201      	adds	r2, #1
 800a7ae:	edc5 6a07 	vstr	s13, [r5, #28]
 800a7b2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800a7b6:	602a      	str	r2, [r5, #0]
 800a7b8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800a7bc:	1a5b      	subs	r3, r3, r1
 800a7be:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800a7c2:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800a7c6:	612b      	str	r3, [r5, #16]
 800a7c8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a7cc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800a7d0:	3f01      	subs	r7, #1
 800a7d2:	e757      	b.n	800a684 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800a7d4:	4299      	cmp	r1, r3
 800a7d6:	dc13      	bgt.n	800a800 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800a7d8:	429a      	cmp	r2, r3
 800a7da:	da14      	bge.n	800a806 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800a7dc:	2502      	movs	r5, #2
 800a7de:	2703      	movs	r7, #3
 800a7e0:	46a9      	mov	r9, r5
 800a7e2:	f04f 0800 	mov.w	r8, #0
 800a7e6:	f04f 0a01 	mov.w	sl, #1
 800a7ea:	e6ef      	b.n	800a5cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800a7ec:	2501      	movs	r5, #1
 800a7ee:	2700      	movs	r7, #0
 800a7f0:	46a9      	mov	r9, r5
 800a7f2:	46b8      	mov	r8, r7
 800a7f4:	f04f 0a02 	mov.w	sl, #2
 800a7f8:	e6e8      	b.n	800a5cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800a7fa:	2501      	movs	r5, #1
 800a7fc:	2702      	movs	r7, #2
 800a7fe:	e6e1      	b.n	800a5c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800a800:	2500      	movs	r5, #0
 800a802:	2701      	movs	r7, #1
 800a804:	e7f4      	b.n	800a7f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800a806:	2702      	movs	r7, #2
 800a808:	2503      	movs	r5, #3
 800a80a:	f04f 0900 	mov.w	r9, #0
 800a80e:	46b8      	mov	r8, r7
 800a810:	e7e9      	b.n	800a7e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800a812:	4613      	mov	r3, r2
 800a814:	e728      	b.n	800a668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800a816:	bf00      	nop
 800a818:	2000a490 	.word	0x2000a490
 800a81c:	fffd8f01 	.word	0xfffd8f01
 800a820:	00027100 	.word	0x00027100
 800a824:	0004e1ff 	.word	0x0004e1ff
 800a828:	0004e1fe 	.word	0x0004e1fe
 800a82c:	2000a498 	.word	0x2000a498
 800a830:	4613      	mov	r3, r2
 800a832:	992b      	ldr	r1, [sp, #172]	; 0xac
 800a834:	9111      	str	r1, [sp, #68]	; 0x44
 800a836:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800a83a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800a83e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800a840:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800a844:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800a848:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800a84c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800a850:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800a854:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800a858:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800a85c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800a860:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800a864:	469e      	mov	lr, r3
 800a866:	469c      	mov	ip, r3
 800a868:	f04f 0900 	mov.w	r9, #0
 800a86c:	f1bc 0f00 	cmp.w	ip, #0
 800a870:	d147      	bne.n	800a902 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800a872:	eb03 0c07 	add.w	ip, r3, r7
 800a876:	1ad7      	subs	r7, r2, r3
 800a878:	f1b9 0f00 	cmp.w	r9, #0
 800a87c:	d009      	beq.n	800a892 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800a87e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800a882:	9029      	str	r0, [sp, #164]	; 0xa4
 800a884:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800a888:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800a88c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800a890:	912d      	str	r1, [sp, #180]	; 0xb4
 800a892:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800a894:	9111      	str	r1, [sp, #68]	; 0x44
 800a896:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800a89a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800a89e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800a8a2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800a8a6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800a8aa:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800a8ae:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800a8b2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800a8b6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800a8ba:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800a8be:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800a8c2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800a8c6:	f04f 0800 	mov.w	r8, #0
 800a8ca:	f1be 0f00 	cmp.w	lr, #0
 800a8ce:	d031      	beq.n	800a934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800a8d0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800a8d2:	4431      	add	r1, r6
 800a8d4:	4549      	cmp	r1, r9
 800a8d6:	4450      	add	r0, sl
 800a8d8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800a8dc:	ee37 7a04 	vadd.f32	s14, s14, s8
 800a8e0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800a8e4:	db08      	blt.n	800a8f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800a8e6:	ee77 7a85 	vadd.f32	s15, s15, s10
 800a8ea:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800a8ee:	ee37 7a06 	vadd.f32	s14, s14, s12
 800a8f2:	3001      	adds	r0, #1
 800a8f4:	eba1 0109 	sub.w	r1, r1, r9
 800a8f8:	f10e 3eff 	add.w	lr, lr, #4294967295
 800a8fc:	f04f 0801 	mov.w	r8, #1
 800a900:	e7e3      	b.n	800a8ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800a902:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800a904:	4431      	add	r1, r6
 800a906:	4541      	cmp	r1, r8
 800a908:	4450      	add	r0, sl
 800a90a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800a90e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800a912:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800a916:	db08      	blt.n	800a92a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800a918:	ee76 6a85 	vadd.f32	s13, s13, s10
 800a91c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800a920:	ee77 7a86 	vadd.f32	s15, s15, s12
 800a924:	3001      	adds	r0, #1
 800a926:	eba1 0108 	sub.w	r1, r1, r8
 800a92a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800a92e:	f04f 0901 	mov.w	r9, #1
 800a932:	e79b      	b.n	800a86c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800a934:	449c      	add	ip, r3
 800a936:	1aff      	subs	r7, r7, r3
 800a938:	f1b8 0f00 	cmp.w	r8, #0
 800a93c:	d009      	beq.n	800a952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800a93e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800a942:	9019      	str	r0, [sp, #100]	; 0x64
 800a944:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800a948:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800a94c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800a950:	911d      	str	r1, [sp, #116]	; 0x74
 800a952:	1ad2      	subs	r2, r2, r3
 800a954:	e68b      	b.n	800a66e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800a956:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a958:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800a95a:	2b00      	cmp	r3, #0
 800a95c:	f000 80d1 	beq.w	800ab02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800a960:	ad19      	add	r5, sp, #100	; 0x64
 800a962:	ac39      	add	r4, sp, #228	; 0xe4
 800a964:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a966:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800a96a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800a96e:	930c      	str	r3, [sp, #48]	; 0x30
 800a970:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a972:	6963      	ldr	r3, [r4, #20]
 800a974:	440b      	add	r3, r1
 800a976:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800a97a:	4408      	add	r0, r1
 800a97c:	b200      	sxth	r0, r0
 800a97e:	4283      	cmp	r3, r0
 800a980:	900d      	str	r0, [sp, #52]	; 0x34
 800a982:	f280 80c1 	bge.w	800ab08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800a986:	428b      	cmp	r3, r1
 800a988:	da08      	bge.n	800a99c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800a98a:	2a00      	cmp	r2, #0
 800a98c:	dd06      	ble.n	800a99c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800a98e:	1acb      	subs	r3, r1, r3
 800a990:	429a      	cmp	r2, r3
 800a992:	f2c0 80bb 	blt.w	800ab0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800a996:	2b00      	cmp	r3, #0
 800a998:	f300 80b9 	bgt.w	800ab0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800a99c:	6967      	ldr	r7, [r4, #20]
 800a99e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a9a0:	443b      	add	r3, r7
 800a9a2:	461f      	mov	r7, r3
 800a9a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a9a6:	1bdf      	subs	r7, r3, r7
 800a9a8:	4297      	cmp	r7, r2
 800a9aa:	bfa8      	it	ge
 800a9ac:	4617      	movge	r7, r2
 800a9ae:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800a9b2:	2f00      	cmp	r7, #0
 800a9b4:	f340 813c 	ble.w	800ac30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800a9b8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a9ba:	6829      	ldr	r1, [r5, #0]
 800a9bc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a9c0:	f9bb 3000 	ldrsh.w	r3, [fp]
 800a9c4:	6820      	ldr	r0, [r4, #0]
 800a9c6:	4411      	add	r1, r2
 800a9c8:	4299      	cmp	r1, r3
 800a9ca:	dd1a      	ble.n	800aa02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800a9cc:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800a9d0:	440b      	add	r3, r1
 800a9d2:	4402      	add	r2, r0
 800a9d4:	b21b      	sxth	r3, r3
 800a9d6:	429a      	cmp	r2, r3
 800a9d8:	dc13      	bgt.n	800aa02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800a9da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a9dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a9de:	681b      	ldr	r3, [r3, #0]
 800a9e0:	9206      	str	r2, [sp, #24]
 800a9e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a9e4:	9205      	str	r2, [sp, #20]
 800a9e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a9e8:	9500      	str	r5, [sp, #0]
 800a9ea:	e9cd b203 	strd	fp, r2, [sp, #12]
 800a9ee:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800a9f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a9f2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800a9f6:	a912      	add	r1, sp, #72	; 0x48
 800a9f8:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800a9fc:	aa49      	add	r2, sp, #292	; 0x124
 800a9fe:	4623      	mov	r3, r4
 800aa00:	47c8      	blx	r9
 800aa02:	e9d4 2300 	ldrd	r2, r3, [r4]
 800aa06:	441a      	add	r2, r3
 800aa08:	6963      	ldr	r3, [r4, #20]
 800aa0a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800aa0e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800aa12:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800aa16:	68a1      	ldr	r1, [r4, #8]
 800aa18:	ed94 6a08 	vldr	s12, [r4, #32]
 800aa1c:	6022      	str	r2, [r4, #0]
 800aa1e:	3301      	adds	r3, #1
 800aa20:	6163      	str	r3, [r4, #20]
 800aa22:	69a3      	ldr	r3, [r4, #24]
 800aa24:	ee37 7a27 	vadd.f32	s14, s14, s15
 800aa28:	3b01      	subs	r3, #1
 800aa2a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800aa2e:	61a3      	str	r3, [r4, #24]
 800aa30:	6923      	ldr	r3, [r4, #16]
 800aa32:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800aa36:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800aa3a:	edd4 6a07 	vldr	s13, [r4, #28]
 800aa3e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800aa42:	440b      	add	r3, r1
 800aa44:	68e1      	ldr	r1, [r4, #12]
 800aa46:	6123      	str	r3, [r4, #16]
 800aa48:	ee76 6a86 	vadd.f32	s13, s13, s12
 800aa4c:	428b      	cmp	r3, r1
 800aa4e:	edc4 6a07 	vstr	s13, [r4, #28]
 800aa52:	db15      	blt.n	800aa80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800aa54:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800aa58:	ee76 6a26 	vadd.f32	s13, s12, s13
 800aa5c:	3201      	adds	r2, #1
 800aa5e:	edc4 6a07 	vstr	s13, [r4, #28]
 800aa62:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800aa66:	6022      	str	r2, [r4, #0]
 800aa68:	ee36 7a87 	vadd.f32	s14, s13, s14
 800aa6c:	1a5b      	subs	r3, r3, r1
 800aa6e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800aa72:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800aa76:	6123      	str	r3, [r4, #16]
 800aa78:	ee77 7a27 	vadd.f32	s15, s14, s15
 800aa7c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800aa80:	e9d5 2300 	ldrd	r2, r3, [r5]
 800aa84:	441a      	add	r2, r3
 800aa86:	696b      	ldr	r3, [r5, #20]
 800aa88:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800aa8c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800aa90:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800aa94:	68a9      	ldr	r1, [r5, #8]
 800aa96:	ed95 6a08 	vldr	s12, [r5, #32]
 800aa9a:	602a      	str	r2, [r5, #0]
 800aa9c:	3301      	adds	r3, #1
 800aa9e:	616b      	str	r3, [r5, #20]
 800aaa0:	69ab      	ldr	r3, [r5, #24]
 800aaa2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800aaa6:	3b01      	subs	r3, #1
 800aaa8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800aaac:	61ab      	str	r3, [r5, #24]
 800aaae:	692b      	ldr	r3, [r5, #16]
 800aab0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800aab4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800aab8:	edd5 6a07 	vldr	s13, [r5, #28]
 800aabc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800aac0:	440b      	add	r3, r1
 800aac2:	68e9      	ldr	r1, [r5, #12]
 800aac4:	612b      	str	r3, [r5, #16]
 800aac6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800aaca:	428b      	cmp	r3, r1
 800aacc:	edc5 6a07 	vstr	s13, [r5, #28]
 800aad0:	db15      	blt.n	800aafe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800aad2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800aad6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800aada:	3201      	adds	r2, #1
 800aadc:	edc5 6a07 	vstr	s13, [r5, #28]
 800aae0:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800aae4:	602a      	str	r2, [r5, #0]
 800aae6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800aaea:	1a5b      	subs	r3, r3, r1
 800aaec:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800aaf0:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800aaf4:	612b      	str	r3, [r5, #16]
 800aaf6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800aafa:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800aafe:	3f01      	subs	r7, #1
 800ab00:	e757      	b.n	800a9b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ab02:	ad39      	add	r5, sp, #228	; 0xe4
 800ab04:	ac19      	add	r4, sp, #100	; 0x64
 800ab06:	e72d      	b.n	800a964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800ab08:	4613      	mov	r3, r2
 800ab0a:	e744      	b.n	800a996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800ab0c:	4613      	mov	r3, r2
 800ab0e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800ab12:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800ab14:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800ab18:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800ab1c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800ab20:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800ab24:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800ab28:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800ab2c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800ab30:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800ab32:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800ab36:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800ab3a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800ab3e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800ab42:	960e      	str	r6, [sp, #56]	; 0x38
 800ab44:	469e      	mov	lr, r3
 800ab46:	461f      	mov	r7, r3
 800ab48:	f04f 0900 	mov.w	r9, #0
 800ab4c:	2f00      	cmp	r7, #0
 800ab4e:	d146      	bne.n	800abde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800ab50:	449c      	add	ip, r3
 800ab52:	1ad7      	subs	r7, r2, r3
 800ab54:	f1b9 0f00 	cmp.w	r9, #0
 800ab58:	d009      	beq.n	800ab6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800ab5a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800ab5e:	9039      	str	r0, [sp, #228]	; 0xe4
 800ab60:	913d      	str	r1, [sp, #244]	; 0xf4
 800ab62:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800ab66:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800ab6a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800ab6e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ab70:	910e      	str	r1, [sp, #56]	; 0x38
 800ab72:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ab76:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ab7a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ab7e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ab82:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ab86:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ab8a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ab8e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ab92:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ab96:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ab9a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ab9e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800aba2:	f04f 0800 	mov.w	r8, #0
 800aba6:	f1be 0f00 	cmp.w	lr, #0
 800abaa:	d030      	beq.n	800ac0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800abac:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800abae:	4431      	add	r1, r6
 800abb0:	4549      	cmp	r1, r9
 800abb2:	4450      	add	r0, sl
 800abb4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800abb8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800abbc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800abc0:	db08      	blt.n	800abd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800abc2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800abc6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800abca:	ee37 7a06 	vadd.f32	s14, s14, s12
 800abce:	3001      	adds	r0, #1
 800abd0:	eba1 0109 	sub.w	r1, r1, r9
 800abd4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800abd8:	f04f 0801 	mov.w	r8, #1
 800abdc:	e7e3      	b.n	800aba6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800abde:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800abe0:	4431      	add	r1, r6
 800abe2:	4541      	cmp	r1, r8
 800abe4:	4450      	add	r0, sl
 800abe6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800abea:	ee77 7a84 	vadd.f32	s15, s15, s8
 800abee:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800abf2:	db08      	blt.n	800ac06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800abf4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800abf8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800abfc:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ac00:	3001      	adds	r0, #1
 800ac02:	eba1 0108 	sub.w	r1, r1, r8
 800ac06:	3f01      	subs	r7, #1
 800ac08:	f04f 0901 	mov.w	r9, #1
 800ac0c:	e79e      	b.n	800ab4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800ac0e:	449c      	add	ip, r3
 800ac10:	1aff      	subs	r7, r7, r3
 800ac12:	f1b8 0f00 	cmp.w	r8, #0
 800ac16:	d009      	beq.n	800ac2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800ac18:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ac1c:	9019      	str	r0, [sp, #100]	; 0x64
 800ac1e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ac22:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ac26:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ac2a:	911d      	str	r1, [sp, #116]	; 0x74
 800ac2c:	1ad2      	subs	r2, r2, r3
 800ac2e:	e6b5      	b.n	800a99c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ac30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ac32:	681b      	ldr	r3, [r3, #0]
 800ac34:	b923      	cbnz	r3, 800ac40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ac36:	4b04      	ldr	r3, [pc, #16]	; (800ac48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ac38:	6818      	ldr	r0, [r3, #0]
 800ac3a:	6803      	ldr	r3, [r0, #0]
 800ac3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac3e:	4798      	blx	r3
 800ac40:	b05b      	add	sp, #364	; 0x16c
 800ac42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac46:	bf00      	nop
 800ac48:	2000a498 	.word	0x2000a498

0800ac4c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800ac4c:	b510      	push	{r4, lr}
 800ac4e:	2b02      	cmp	r3, #2
 800ac50:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ac54:	d00b      	beq.n	800ac6e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800ac56:	2b03      	cmp	r3, #3
 800ac58:	d00e      	beq.n	800ac78 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800ac5a:	2b01      	cmp	r3, #1
 800ac5c:	d001      	beq.n	800ac62 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800ac5e:	1860      	adds	r0, r4, r1
 800ac60:	bd10      	pop	{r4, pc}
 800ac62:	8880      	ldrh	r0, [r0, #4]
 800ac64:	4420      	add	r0, r4
 800ac66:	b200      	sxth	r0, r0
 800ac68:	1a80      	subs	r0, r0, r2
 800ac6a:	3801      	subs	r0, #1
 800ac6c:	e7f8      	b.n	800ac60 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800ac6e:	8880      	ldrh	r0, [r0, #4]
 800ac70:	4420      	add	r0, r4
 800ac72:	b200      	sxth	r0, r0
 800ac74:	1a40      	subs	r0, r0, r1
 800ac76:	e7f8      	b.n	800ac6a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ac78:	18a0      	adds	r0, r4, r2
 800ac7a:	e7f1      	b.n	800ac60 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800ac7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ac7c:	b510      	push	{r4, lr}
 800ac7e:	2b02      	cmp	r3, #2
 800ac80:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800ac84:	d006      	beq.n	800ac94 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800ac86:	2b03      	cmp	r3, #3
 800ac88:	d00a      	beq.n	800aca0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ac8a:	2b01      	cmp	r3, #1
 800ac8c:	bf14      	ite	ne
 800ac8e:	18a0      	addne	r0, r4, r2
 800ac90:	1860      	addeq	r0, r4, r1
 800ac92:	bd10      	pop	{r4, pc}
 800ac94:	88c0      	ldrh	r0, [r0, #6]
 800ac96:	4420      	add	r0, r4
 800ac98:	b200      	sxth	r0, r0
 800ac9a:	1a80      	subs	r0, r0, r2
 800ac9c:	3801      	subs	r0, #1
 800ac9e:	e7f8      	b.n	800ac92 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800aca0:	88c0      	ldrh	r0, [r0, #6]
 800aca2:	4420      	add	r0, r4
 800aca4:	b200      	sxth	r0, r0
 800aca6:	1a40      	subs	r0, r0, r1
 800aca8:	e7f8      	b.n	800ac9c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800acac <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800acac:	4b01      	ldr	r3, [pc, #4]	; (800acb4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800acae:	2200      	movs	r2, #0
 800acb0:	601a      	str	r2, [r3, #0]
 800acb2:	4770      	bx	lr
 800acb4:	2000a4a0 	.word	0x2000a4a0

0800acb8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800acb8:	4603      	mov	r3, r0
 800acba:	b1c8      	cbz	r0, 800acf0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800acbc:	0c02      	lsrs	r2, r0, #16
 800acbe:	0412      	lsls	r2, r2, #16
 800acc0:	b9a2      	cbnz	r2, 800acec <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800acc2:	0403      	lsls	r3, r0, #16
 800acc4:	2010      	movs	r0, #16
 800acc6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800acca:	bf04      	itt	eq
 800accc:	021b      	lsleq	r3, r3, #8
 800acce:	3008      	addeq	r0, #8
 800acd0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800acd4:	bf04      	itt	eq
 800acd6:	011b      	lsleq	r3, r3, #4
 800acd8:	3004      	addeq	r0, #4
 800acda:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800acde:	bf04      	itt	eq
 800ace0:	009b      	lsleq	r3, r3, #2
 800ace2:	3002      	addeq	r0, #2
 800ace4:	2b00      	cmp	r3, #0
 800ace6:	db04      	blt.n	800acf2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800ace8:	3001      	adds	r0, #1
 800acea:	4770      	bx	lr
 800acec:	2000      	movs	r0, #0
 800acee:	e7ea      	b.n	800acc6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800acf0:	2020      	movs	r0, #32
 800acf2:	4770      	bx	lr

0800acf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800acf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800acf8:	b087      	sub	sp, #28
 800acfa:	4681      	mov	r9, r0
 800acfc:	4698      	mov	r8, r3
 800acfe:	4610      	mov	r0, r2
 800ad00:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800ad04:	460d      	mov	r5, r1
 800ad06:	b981      	cbnz	r1, 800ad2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800ad08:	b14b      	cbz	r3, 800ad1e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800ad0a:	460b      	mov	r3, r1
 800ad0c:	e9cd 4700 	strd	r4, r7, [sp]
 800ad10:	464a      	mov	r2, r9
 800ad12:	4641      	mov	r1, r8
 800ad14:	f7ff ffee 	bl	800acf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ad18:	b007      	add	sp, #28
 800ad1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad1e:	f04f 33ff 	mov.w	r3, #4294967295
 800ad22:	603b      	str	r3, [r7, #0]
 800ad24:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800ad28:	e7f6      	b.n	800ad18 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800ad2a:	fa32 fa01 	lsrs.w	sl, r2, r1
 800ad2e:	d107      	bne.n	800ad40 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800ad30:	fb09 f602 	mul.w	r6, r9, r2
 800ad34:	fbb6 f0f4 	udiv	r0, r6, r4
 800ad38:	fb04 6610 	mls	r6, r4, r0, r6
 800ad3c:	603e      	str	r6, [r7, #0]
 800ad3e:	e7eb      	b.n	800ad18 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800ad40:	2601      	movs	r6, #1
 800ad42:	408e      	lsls	r6, r1
 800ad44:	3e01      	subs	r6, #1
 800ad46:	4016      	ands	r6, r2
 800ad48:	fa09 fb01 	lsl.w	fp, r9, r1
 800ad4c:	4630      	mov	r0, r6
 800ad4e:	fbbb f3f4 	udiv	r3, fp, r4
 800ad52:	9302      	str	r3, [sp, #8]
 800ad54:	fb0a f303 	mul.w	r3, sl, r3
 800ad58:	9303      	str	r3, [sp, #12]
 800ad5a:	f7ff ffad 	bl	800acb8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ad5e:	464a      	mov	r2, r9
 800ad60:	460b      	mov	r3, r1
 800ad62:	e9cd 4700 	strd	r4, r7, [sp]
 800ad66:	4601      	mov	r1, r0
 800ad68:	4630      	mov	r0, r6
 800ad6a:	f7ff ffc3 	bl	800acf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ad6e:	9b02      	ldr	r3, [sp, #8]
 800ad70:	fb04 bb13 	mls	fp, r4, r3, fp
 800ad74:	4606      	mov	r6, r0
 800ad76:	4658      	mov	r0, fp
 800ad78:	eb05 0108 	add.w	r1, r5, r8
 800ad7c:	f7ff ff9c 	bl	800acb8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ad80:	ab05      	add	r3, sp, #20
 800ad82:	e9cd 4300 	strd	r4, r3, [sp]
 800ad86:	465a      	mov	r2, fp
 800ad88:	4603      	mov	r3, r0
 800ad8a:	4650      	mov	r0, sl
 800ad8c:	f7ff ffb2 	bl	800acf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ad90:	6839      	ldr	r1, [r7, #0]
 800ad92:	9a05      	ldr	r2, [sp, #20]
 800ad94:	9b03      	ldr	r3, [sp, #12]
 800ad96:	4411      	add	r1, r2
 800ad98:	fbb1 f2f4 	udiv	r2, r1, r4
 800ad9c:	18d3      	adds	r3, r2, r3
 800ad9e:	441e      	add	r6, r3
 800ada0:	fb04 1412 	mls	r4, r4, r2, r1
 800ada4:	4430      	add	r0, r6
 800ada6:	603c      	str	r4, [r7, #0]
 800ada8:	e7b6      	b.n	800ad18 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800adaa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800adaa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800adae:	b085      	sub	sp, #20
 800adb0:	f1b0 0900 	subs.w	r9, r0, #0
 800adb4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800adb6:	461d      	mov	r5, r3
 800adb8:	bfbf      	itttt	lt
 800adba:	6823      	ldrlt	r3, [r4, #0]
 800adbc:	425b      	neglt	r3, r3
 800adbe:	f1c9 0900 	rsblt	r9, r9, #0
 800adc2:	6023      	strlt	r3, [r4, #0]
 800adc4:	bfb4      	ite	lt
 800adc6:	f04f 36ff 	movlt.w	r6, #4294967295
 800adca:	2601      	movge	r6, #1
 800adcc:	2a00      	cmp	r2, #0
 800adce:	4617      	mov	r7, r2
 800add0:	da04      	bge.n	800addc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800add2:	6823      	ldr	r3, [r4, #0]
 800add4:	425b      	negs	r3, r3
 800add6:	4257      	negs	r7, r2
 800add8:	4276      	negs	r6, r6
 800adda:	6023      	str	r3, [r4, #0]
 800addc:	2d00      	cmp	r5, #0
 800adde:	4638      	mov	r0, r7
 800ade0:	bfba      	itte	lt
 800ade2:	426d      	neglt	r5, r5
 800ade4:	f04f 38ff 	movlt.w	r8, #4294967295
 800ade8:	f04f 0801 	movge.w	r8, #1
 800adec:	f7ff ff64 	bl	800acb8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800adf0:	ab03      	add	r3, sp, #12
 800adf2:	e9cd 5300 	strd	r5, r3, [sp]
 800adf6:	463a      	mov	r2, r7
 800adf8:	4603      	mov	r3, r0
 800adfa:	4648      	mov	r0, r9
 800adfc:	f7ff ff7a 	bl	800acf4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ae00:	6823      	ldr	r3, [r4, #0]
 800ae02:	9a03      	ldr	r2, [sp, #12]
 800ae04:	4546      	cmp	r6, r8
 800ae06:	441a      	add	r2, r3
 800ae08:	fb92 f3f5 	sdiv	r3, r2, r5
 800ae0c:	4418      	add	r0, r3
 800ae0e:	bf18      	it	ne
 800ae10:	4240      	negne	r0, r0
 800ae12:	fb05 2313 	mls	r3, r5, r3, r2
 800ae16:	1c72      	adds	r2, r6, #1
 800ae18:	6023      	str	r3, [r4, #0]
 800ae1a:	d105      	bne.n	800ae28 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800ae1c:	2b00      	cmp	r3, #0
 800ae1e:	f1c3 0200 	rsb	r2, r3, #0
 800ae22:	db0b      	blt.n	800ae3c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800ae24:	6022      	str	r2, [r4, #0]
 800ae26:	e006      	b.n	800ae36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ae28:	2e01      	cmp	r6, #1
 800ae2a:	d104      	bne.n	800ae36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ae2c:	2b00      	cmp	r3, #0
 800ae2e:	da02      	bge.n	800ae36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ae30:	442b      	add	r3, r5
 800ae32:	3801      	subs	r0, #1
 800ae34:	6023      	str	r3, [r4, #0]
 800ae36:	b005      	add	sp, #20
 800ae38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ae3c:	3801      	subs	r0, #1
 800ae3e:	1b52      	subs	r2, r2, r5
 800ae40:	e7f0      	b.n	800ae24 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800ae44 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800ae44:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ae48:	4c1c      	ldr	r4, [pc, #112]	; (800aebc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800ae4a:	6807      	ldr	r7, [r0, #0]
 800ae4c:	69a3      	ldr	r3, [r4, #24]
 800ae4e:	4605      	mov	r5, r0
 800ae50:	b92b      	cbnz	r3, 800ae5e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800ae52:	6840      	ldr	r0, [r0, #4]
 800ae54:	e9c5 7000 	strd	r7, r0, [r5]
 800ae58:	b004      	add	sp, #16
 800ae5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ae5e:	68a2      	ldr	r2, [r4, #8]
 800ae60:	6820      	ldr	r0, [r4, #0]
 800ae62:	ae04      	add	r6, sp, #16
 800ae64:	f04f 0802 	mov.w	r8, #2
 800ae68:	fb93 f1f8 	sdiv	r1, r3, r8
 800ae6c:	440a      	add	r2, r1
 800ae6e:	f846 2d04 	str.w	r2, [r6, #-4]!
 800ae72:	69e1      	ldr	r1, [r4, #28]
 800ae74:	9600      	str	r6, [sp, #0]
 800ae76:	463a      	mov	r2, r7
 800ae78:	f7ff ff97 	bl	800adaa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ae7c:	69a3      	ldr	r3, [r4, #24]
 800ae7e:	686a      	ldr	r2, [r5, #4]
 800ae80:	6a21      	ldr	r1, [r4, #32]
 800ae82:	9600      	str	r6, [sp, #0]
 800ae84:	4607      	mov	r7, r0
 800ae86:	6860      	ldr	r0, [r4, #4]
 800ae88:	f7ff ff8f 	bl	800adaa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800ae8c:	6962      	ldr	r2, [r4, #20]
 800ae8e:	69a3      	ldr	r3, [r4, #24]
 800ae90:	fb93 f8f8 	sdiv	r8, r3, r8
 800ae94:	4442      	add	r2, r8
 800ae96:	9203      	str	r2, [sp, #12]
 800ae98:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ae9a:	682a      	ldr	r2, [r5, #0]
 800ae9c:	9600      	str	r6, [sp, #0]
 800ae9e:	4407      	add	r7, r0
 800aea0:	68e0      	ldr	r0, [r4, #12]
 800aea2:	f7ff ff82 	bl	800adaa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800aea6:	9600      	str	r6, [sp, #0]
 800aea8:	4680      	mov	r8, r0
 800aeaa:	69a3      	ldr	r3, [r4, #24]
 800aeac:	686a      	ldr	r2, [r5, #4]
 800aeae:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800aeb0:	6920      	ldr	r0, [r4, #16]
 800aeb2:	f7ff ff7a 	bl	800adaa <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800aeb6:	4440      	add	r0, r8
 800aeb8:	e7cc      	b.n	800ae54 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800aeba:	bf00      	nop
 800aebc:	2000a4a4 	.word	0x2000a4a4

0800aec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800aec0:	4b07      	ldr	r3, [pc, #28]	; (800aee0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800aec2:	781b      	ldrb	r3, [r3, #0]
 800aec4:	2b01      	cmp	r3, #1
 800aec6:	d109      	bne.n	800aedc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800aec8:	f9b1 3000 	ldrsh.w	r3, [r1]
 800aecc:	f9b0 2000 	ldrsh.w	r2, [r0]
 800aed0:	8003      	strh	r3, [r0, #0]
 800aed2:	4b04      	ldr	r3, [pc, #16]	; (800aee4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800aed4:	881b      	ldrh	r3, [r3, #0]
 800aed6:	3b01      	subs	r3, #1
 800aed8:	1a9b      	subs	r3, r3, r2
 800aeda:	800b      	strh	r3, [r1, #0]
 800aedc:	4770      	bx	lr
 800aede:	bf00      	nop
 800aee0:	2000a490 	.word	0x2000a490
 800aee4:	2000a48c 	.word	0x2000a48c

0800aee8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800aee8:	b510      	push	{r4, lr}
 800aeea:	4b07      	ldr	r3, [pc, #28]	; (800af08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800aeec:	781b      	ldrb	r3, [r3, #0]
 800aeee:	2b01      	cmp	r3, #1
 800aef0:	d108      	bne.n	800af04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800aef2:	4b06      	ldr	r3, [pc, #24]	; (800af0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800aef4:	880c      	ldrh	r4, [r1, #0]
 800aef6:	881b      	ldrh	r3, [r3, #0]
 800aef8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800aefc:	3b01      	subs	r3, #1
 800aefe:	1b1b      	subs	r3, r3, r4
 800af00:	8003      	strh	r3, [r0, #0]
 800af02:	800a      	strh	r2, [r1, #0]
 800af04:	bd10      	pop	{r4, pc}
 800af06:	bf00      	nop
 800af08:	2000a490 	.word	0x2000a490
 800af0c:	2000a48c 	.word	0x2000a48c

0800af10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800af10:	b510      	push	{r4, lr}
 800af12:	4b0a      	ldr	r3, [pc, #40]	; (800af3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800af14:	781b      	ldrb	r3, [r3, #0]
 800af16:	2b01      	cmp	r3, #1
 800af18:	d10e      	bne.n	800af38 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800af1a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800af1e:	8843      	ldrh	r3, [r0, #2]
 800af20:	f9b0 4000 	ldrsh.w	r4, [r0]
 800af24:	8044      	strh	r4, [r0, #2]
 800af26:	18ca      	adds	r2, r1, r3
 800af28:	4b05      	ldr	r3, [pc, #20]	; (800af40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800af2a:	881b      	ldrh	r3, [r3, #0]
 800af2c:	1a9b      	subs	r3, r3, r2
 800af2e:	8003      	strh	r3, [r0, #0]
 800af30:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800af34:	80c3      	strh	r3, [r0, #6]
 800af36:	8081      	strh	r1, [r0, #4]
 800af38:	bd10      	pop	{r4, pc}
 800af3a:	bf00      	nop
 800af3c:	2000a490 	.word	0x2000a490
 800af40:	2000a48c 	.word	0x2000a48c

0800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800af44:	4b08      	ldr	r3, [pc, #32]	; (800af68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800af46:	781b      	ldrb	r3, [r3, #0]
 800af48:	2b01      	cmp	r3, #1
 800af4a:	d10c      	bne.n	800af66 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800af4c:	8803      	ldrh	r3, [r0, #0]
 800af4e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800af52:	8842      	ldrh	r2, [r0, #2]
 800af54:	8002      	strh	r2, [r0, #0]
 800af56:	185a      	adds	r2, r3, r1
 800af58:	4b04      	ldr	r3, [pc, #16]	; (800af6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800af5a:	881b      	ldrh	r3, [r3, #0]
 800af5c:	1a9b      	subs	r3, r3, r2
 800af5e:	8043      	strh	r3, [r0, #2]
 800af60:	88c3      	ldrh	r3, [r0, #6]
 800af62:	8083      	strh	r3, [r0, #4]
 800af64:	80c1      	strh	r1, [r0, #6]
 800af66:	4770      	bx	lr
 800af68:	2000a490 	.word	0x2000a490
 800af6c:	2000a48c 	.word	0x2000a48c

0800af70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800af70:	b510      	push	{r4, lr}
 800af72:	4b07      	ldr	r3, [pc, #28]	; (800af90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800af74:	781b      	ldrb	r3, [r3, #0]
 800af76:	2b01      	cmp	r3, #1
 800af78:	d108      	bne.n	800af8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800af7a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800af7e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800af82:	8003      	strh	r3, [r0, #0]
 800af84:	8893      	ldrh	r3, [r2, #4]
 800af86:	3b01      	subs	r3, #1
 800af88:	1b1b      	subs	r3, r3, r4
 800af8a:	800b      	strh	r3, [r1, #0]
 800af8c:	bd10      	pop	{r4, pc}
 800af8e:	bf00      	nop
 800af90:	2000a490 	.word	0x2000a490

0800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800af94:	b510      	push	{r4, lr}
 800af96:	4b0a      	ldr	r3, [pc, #40]	; (800afc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800af98:	781b      	ldrb	r3, [r3, #0]
 800af9a:	2b01      	cmp	r3, #1
 800af9c:	460a      	mov	r2, r1
 800af9e:	d10d      	bne.n	800afbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800afa0:	8881      	ldrh	r1, [r0, #4]
 800afa2:	8803      	ldrh	r3, [r0, #0]
 800afa4:	440b      	add	r3, r1
 800afa6:	4601      	mov	r1, r0
 800afa8:	3b01      	subs	r3, #1
 800afaa:	f821 3b02 	strh.w	r3, [r1], #2
 800afae:	f7ff ffdf 	bl	800af70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800afb2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800afb6:	88c2      	ldrh	r2, [r0, #6]
 800afb8:	8082      	strh	r2, [r0, #4]
 800afba:	80c3      	strh	r3, [r0, #6]
 800afbc:	bd10      	pop	{r4, pc}
 800afbe:	bf00      	nop
 800afc0:	2000a490 	.word	0x2000a490

0800afc4 <_ZN8touchgfx11Application13requestRedrawEv>:
 800afc4:	4b06      	ldr	r3, [pc, #24]	; (800afe0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800afc6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800afca:	4b06      	ldr	r3, [pc, #24]	; (800afe4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800afcc:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800afd0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800afd4:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800afd8:	2100      	movs	r1, #0
 800afda:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800afde:	4770      	bx	lr
 800afe0:	2000a48c 	.word	0x2000a48c
 800afe4:	2000a48e 	.word	0x2000a48e

0800afe8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800afe8:	4b03      	ldr	r3, [pc, #12]	; (800aff8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800afea:	6818      	ldr	r0, [r3, #0]
 800afec:	b110      	cbz	r0, 800aff4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800afee:	6803      	ldr	r3, [r0, #0]
 800aff0:	699b      	ldr	r3, [r3, #24]
 800aff2:	4718      	bx	r3
 800aff4:	4770      	bx	lr
 800aff6:	bf00      	nop
 800aff8:	2000a4d4 	.word	0x2000a4d4

0800affc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800affc:	4770      	bx	lr
	...

0800b000 <_ZN8touchgfx11Application4drawEv>:
 800b000:	b507      	push	{r0, r1, r2, lr}
 800b002:	4b09      	ldr	r3, [pc, #36]	; (800b028 <_ZN8touchgfx11Application4drawEv+0x28>)
 800b004:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b008:	4b08      	ldr	r3, [pc, #32]	; (800b02c <_ZN8touchgfx11Application4drawEv+0x2c>)
 800b00a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b00e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b012:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b016:	6803      	ldr	r3, [r0, #0]
 800b018:	2100      	movs	r1, #0
 800b01a:	9100      	str	r1, [sp, #0]
 800b01c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b01e:	4669      	mov	r1, sp
 800b020:	4798      	blx	r3
 800b022:	b003      	add	sp, #12
 800b024:	f85d fb04 	ldr.w	pc, [sp], #4
 800b028:	2000a48c 	.word	0x2000a48c
 800b02c:	2000a48e 	.word	0x2000a48e

0800b030 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800b030:	4b03      	ldr	r3, [pc, #12]	; (800b040 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800b032:	6818      	ldr	r0, [r3, #0]
 800b034:	b110      	cbz	r0, 800b03c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800b036:	6803      	ldr	r3, [r0, #0]
 800b038:	69db      	ldr	r3, [r3, #28]
 800b03a:	4718      	bx	r3
 800b03c:	4770      	bx	lr
 800b03e:	bf00      	nop
 800b040:	2000a4d4 	.word	0x2000a4d4

0800b044 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800b044:	4b03      	ldr	r3, [pc, #12]	; (800b054 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800b046:	6818      	ldr	r0, [r3, #0]
 800b048:	b110      	cbz	r0, 800b050 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800b04a:	6803      	ldr	r3, [r0, #0]
 800b04c:	6a1b      	ldr	r3, [r3, #32]
 800b04e:	4718      	bx	r3
 800b050:	4770      	bx	lr
 800b052:	bf00      	nop
 800b054:	2000a4d4 	.word	0x2000a4d4

0800b058 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800b058:	2300      	movs	r3, #0
 800b05a:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800b05e:	4770      	bx	lr

0800b060 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800b060:	4b03      	ldr	r3, [pc, #12]	; (800b070 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800b062:	6818      	ldr	r0, [r3, #0]
 800b064:	b110      	cbz	r0, 800b06c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800b066:	6803      	ldr	r3, [r0, #0]
 800b068:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b06a:	4718      	bx	r3
 800b06c:	4770      	bx	lr
 800b06e:	bf00      	nop
 800b070:	2000a4d4 	.word	0x2000a4d4

0800b074 <_ZN8touchgfx11ApplicationD1Ev>:
 800b074:	4770      	bx	lr

0800b076 <_ZN8touchgfx11ApplicationD0Ev>:
 800b076:	b510      	push	{r4, lr}
 800b078:	f44f 719c 	mov.w	r1, #312	; 0x138
 800b07c:	4604      	mov	r4, r0
 800b07e:	f00e fea2 	bl	8019dc6 <_ZdlPvj>
 800b082:	4620      	mov	r0, r4
 800b084:	bd10      	pop	{r4, pc}
	...

0800b088 <_ZN8touchgfx11Application15handleTickEventEv>:
 800b088:	b570      	push	{r4, r5, r6, lr}
 800b08a:	4d38      	ldr	r5, [pc, #224]	; (800b16c <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 800b08c:	4604      	mov	r4, r0
 800b08e:	6828      	ldr	r0, [r5, #0]
 800b090:	b140      	cbz	r0, 800b0a4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b092:	7a03      	ldrb	r3, [r0, #8]
 800b094:	b933      	cbnz	r3, 800b0a4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b096:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800b09a:	6803      	ldr	r3, [r0, #0]
 800b09c:	689b      	ldr	r3, [r3, #8]
 800b09e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b0a2:	4718      	bx	r3
 800b0a4:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800b0a8:	b97b      	cbnz	r3, 800b0ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b0aa:	b170      	cbz	r0, 800b0ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b0ac:	7a03      	ldrb	r3, [r0, #8]
 800b0ae:	b163      	cbz	r3, 800b0ca <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b0b0:	4b2f      	ldr	r3, [pc, #188]	; (800b170 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800b0b2:	6818      	ldr	r0, [r3, #0]
 800b0b4:	b110      	cbz	r0, 800b0bc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800b0b6:	6803      	ldr	r3, [r0, #0]
 800b0b8:	691b      	ldr	r3, [r3, #16]
 800b0ba:	4798      	blx	r3
 800b0bc:	6828      	ldr	r0, [r5, #0]
 800b0be:	6803      	ldr	r3, [r0, #0]
 800b0c0:	68db      	ldr	r3, [r3, #12]
 800b0c2:	4798      	blx	r3
 800b0c4:	2301      	movs	r3, #1
 800b0c6:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800b0ca:	2500      	movs	r5, #0
 800b0cc:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800b0d0:	42a8      	cmp	r0, r5
 800b0d2:	dd0c      	ble.n	800b0ee <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800b0d4:	1963      	adds	r3, r4, r5
 800b0d6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800b0da:	b132      	cbz	r2, 800b0ea <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800b0dc:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800b0e0:	4413      	add	r3, r2
 800b0e2:	6858      	ldr	r0, [r3, #4]
 800b0e4:	6803      	ldr	r3, [r0, #0]
 800b0e6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b0e8:	4798      	blx	r3
 800b0ea:	3501      	adds	r5, #1
 800b0ec:	e7ee      	b.n	800b0cc <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800b0ee:	2300      	movs	r3, #0
 800b0f0:	461a      	mov	r2, r3
 800b0f2:	4298      	cmp	r0, r3
 800b0f4:	d10f      	bne.n	800b116 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 800b0f6:	1d25      	adds	r5, r4, #4
 800b0f8:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800b0fc:	4291      	cmp	r1, r2
 800b0fe:	dd2d      	ble.n	800b15c <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 800b100:	1e48      	subs	r0, r1, #1
 800b102:	b280      	uxth	r0, r0
 800b104:	4288      	cmp	r0, r1
 800b106:	d31a      	bcc.n	800b13e <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800b108:	4b1a      	ldr	r3, [pc, #104]	; (800b174 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 800b10a:	4a1b      	ldr	r2, [pc, #108]	; (800b178 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800b10c:	481b      	ldr	r0, [pc, #108]	; (800b17c <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800b10e:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800b112:	f00e fe87 	bl	8019e24 <__assert_func>
 800b116:	18e1      	adds	r1, r4, r3
 800b118:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800b11c:	b16d      	cbz	r5, 800b13a <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 800b11e:	429a      	cmp	r2, r3
 800b120:	d00a      	beq.n	800b138 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 800b122:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800b126:	4431      	add	r1, r6
 800b128:	684e      	ldr	r6, [r1, #4]
 800b12a:	b291      	uxth	r1, r2
 800b12c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800b130:	604e      	str	r6, [r1, #4]
 800b132:	18a1      	adds	r1, r4, r2
 800b134:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800b138:	3201      	adds	r2, #1
 800b13a:	3301      	adds	r3, #1
 800b13c:	e7d9      	b.n	800b0f2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800b13e:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800b142:	3304      	adds	r3, #4
 800b144:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800b148:	428b      	cmp	r3, r1
 800b14a:	d004      	beq.n	800b156 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 800b14c:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800b150:	f843 6c04 	str.w	r6, [r3, #-4]
 800b154:	e7f8      	b.n	800b148 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800b156:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800b15a:	e7cd      	b.n	800b0f8 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800b15c:	4b04      	ldr	r3, [pc, #16]	; (800b170 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800b15e:	6818      	ldr	r0, [r3, #0]
 800b160:	b110      	cbz	r0, 800b168 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800b162:	6803      	ldr	r3, [r0, #0]
 800b164:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b166:	e79a      	b.n	800b09e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800b168:	bd70      	pop	{r4, r5, r6, pc}
 800b16a:	bf00      	nop
 800b16c:	2000a4d8 	.word	0x2000a4d8
 800b170:	2000a4d4 	.word	0x2000a4d4
 800b174:	0801cb20 	.word	0x0801cb20
 800b178:	0801cd14 	.word	0x0801cd14
 800b17c:	0801cb2e 	.word	0x0801cb2e

0800b180 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800b180:	b570      	push	{r4, r5, r6, lr}
 800b182:	4606      	mov	r6, r0
 800b184:	460c      	mov	r4, r1
 800b186:	b929      	cbnz	r1, 800b194 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800b188:	4b0c      	ldr	r3, [pc, #48]	; (800b1bc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800b18a:	4a0d      	ldr	r2, [pc, #52]	; (800b1c0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800b18c:	480d      	ldr	r0, [pc, #52]	; (800b1c4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800b18e:	215e      	movs	r1, #94	; 0x5e
 800b190:	f00e fe48 	bl	8019e24 <__assert_func>
 800b194:	4d0c      	ldr	r5, [pc, #48]	; (800b1c8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800b196:	2300      	movs	r3, #0
 800b198:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800b19c:	6828      	ldr	r0, [r5, #0]
 800b19e:	b110      	cbz	r0, 800b1a6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800b1a0:	6803      	ldr	r3, [r0, #0]
 800b1a2:	695b      	ldr	r3, [r3, #20]
 800b1a4:	4798      	blx	r3
 800b1a6:	602c      	str	r4, [r5, #0]
 800b1a8:	6823      	ldr	r3, [r4, #0]
 800b1aa:	4620      	mov	r0, r4
 800b1ac:	68db      	ldr	r3, [r3, #12]
 800b1ae:	4798      	blx	r3
 800b1b0:	6833      	ldr	r3, [r6, #0]
 800b1b2:	4630      	mov	r0, r6
 800b1b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b1b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1ba:	4718      	bx	r3
 800b1bc:	0801caec 	.word	0x0801caec
 800b1c0:	0801cbd4 	.word	0x0801cbd4
 800b1c4:	0801caf6 	.word	0x0801caf6
 800b1c8:	2000a4d4 	.word	0x2000a4d4

0800b1cc <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800b1cc:	b510      	push	{r4, lr}
 800b1ce:	f9b1 4000 	ldrsh.w	r4, [r1]
 800b1d2:	888a      	ldrh	r2, [r1, #4]
 800b1d4:	f9b0 3000 	ldrsh.w	r3, [r0]
 800b1d8:	4422      	add	r2, r4
 800b1da:	b212      	sxth	r2, r2
 800b1dc:	4293      	cmp	r3, r2
 800b1de:	da15      	bge.n	800b20c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b1e0:	8882      	ldrh	r2, [r0, #4]
 800b1e2:	4413      	add	r3, r2
 800b1e4:	b21b      	sxth	r3, r3
 800b1e6:	429c      	cmp	r4, r3
 800b1e8:	da10      	bge.n	800b20c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b1ea:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800b1ee:	88c9      	ldrh	r1, [r1, #6]
 800b1f0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b1f4:	4419      	add	r1, r3
 800b1f6:	b209      	sxth	r1, r1
 800b1f8:	428a      	cmp	r2, r1
 800b1fa:	da07      	bge.n	800b20c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b1fc:	88c0      	ldrh	r0, [r0, #6]
 800b1fe:	4410      	add	r0, r2
 800b200:	b200      	sxth	r0, r0
 800b202:	4283      	cmp	r3, r0
 800b204:	bfac      	ite	ge
 800b206:	2000      	movge	r0, #0
 800b208:	2001      	movlt	r0, #1
 800b20a:	bd10      	pop	{r4, pc}
 800b20c:	2000      	movs	r0, #0
 800b20e:	e7fc      	b.n	800b20a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800b210 <_ZN8touchgfx4Rect10restrictToEss>:
 800b210:	f9b0 3000 	ldrsh.w	r3, [r0]
 800b214:	2b00      	cmp	r3, #0
 800b216:	b510      	push	{r4, lr}
 800b218:	da04      	bge.n	800b224 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800b21a:	8884      	ldrh	r4, [r0, #4]
 800b21c:	4423      	add	r3, r4
 800b21e:	8083      	strh	r3, [r0, #4]
 800b220:	2300      	movs	r3, #0
 800b222:	8003      	strh	r3, [r0, #0]
 800b224:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b228:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b22c:	1b09      	subs	r1, r1, r4
 800b22e:	428b      	cmp	r3, r1
 800b230:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800b234:	bfc8      	it	gt
 800b236:	8081      	strhgt	r1, [r0, #4]
 800b238:	2b00      	cmp	r3, #0
 800b23a:	da04      	bge.n	800b246 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800b23c:	88c1      	ldrh	r1, [r0, #6]
 800b23e:	440b      	add	r3, r1
 800b240:	80c3      	strh	r3, [r0, #6]
 800b242:	2300      	movs	r3, #0
 800b244:	8043      	strh	r3, [r0, #2]
 800b246:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800b24a:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800b24e:	1a52      	subs	r2, r2, r1
 800b250:	4293      	cmp	r3, r2
 800b252:	bfc8      	it	gt
 800b254:	80c2      	strhgt	r2, [r0, #6]
 800b256:	bd10      	pop	{r4, pc}

0800b258 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800b258:	b510      	push	{r4, lr}
 800b25a:	4b10      	ldr	r3, [pc, #64]	; (800b29c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800b25c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b260:	4b0f      	ldr	r3, [pc, #60]	; (800b2a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800b262:	460c      	mov	r4, r1
 800b264:	4620      	mov	r0, r4
 800b266:	f9b3 1000 	ldrsh.w	r1, [r3]
 800b26a:	f7ff ffd1 	bl	800b210 <_ZN8touchgfx4Rect10restrictToEss>
 800b26e:	4b0d      	ldr	r3, [pc, #52]	; (800b2a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800b270:	6818      	ldr	r0, [r3, #0]
 800b272:	b190      	cbz	r0, 800b29a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800b274:	6803      	ldr	r3, [r0, #0]
 800b276:	4621      	mov	r1, r4
 800b278:	689b      	ldr	r3, [r3, #8]
 800b27a:	4798      	blx	r3
 800b27c:	4b0a      	ldr	r3, [pc, #40]	; (800b2a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800b27e:	6818      	ldr	r0, [r3, #0]
 800b280:	b118      	cbz	r0, 800b28a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800b282:	6803      	ldr	r3, [r0, #0]
 800b284:	4621      	mov	r1, r4
 800b286:	689b      	ldr	r3, [r3, #8]
 800b288:	4798      	blx	r3
 800b28a:	4b08      	ldr	r3, [pc, #32]	; (800b2ac <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800b28c:	6818      	ldr	r0, [r3, #0]
 800b28e:	6803      	ldr	r3, [r0, #0]
 800b290:	4621      	mov	r1, r4
 800b292:	69db      	ldr	r3, [r3, #28]
 800b294:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b298:	4718      	bx	r3
 800b29a:	bd10      	pop	{r4, pc}
 800b29c:	2000a48e 	.word	0x2000a48e
 800b2a0:	2000a48c 	.word	0x2000a48c
 800b2a4:	2000a4d4 	.word	0x2000a4d4
 800b2a8:	2000a4d0 	.word	0x2000a4d0
 800b2ac:	2000a498 	.word	0x2000a498

0800b2b0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800b2b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b2b2:	4606      	mov	r6, r0
 800b2b4:	4608      	mov	r0, r1
 800b2b6:	460f      	mov	r7, r1
 800b2b8:	f7fd fe95 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b2bc:	b9e8      	cbnz	r0, 800b2fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800b2be:	f9b7 5000 	ldrsh.w	r5, [r7]
 800b2c2:	f9b6 4000 	ldrsh.w	r4, [r6]
 800b2c6:	42a5      	cmp	r5, r4
 800b2c8:	db17      	blt.n	800b2fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800b2ca:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800b2ce:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800b2d2:	429a      	cmp	r2, r3
 800b2d4:	db11      	blt.n	800b2fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800b2d6:	88b9      	ldrh	r1, [r7, #4]
 800b2d8:	440d      	add	r5, r1
 800b2da:	88b1      	ldrh	r1, [r6, #4]
 800b2dc:	440c      	add	r4, r1
 800b2de:	b22d      	sxth	r5, r5
 800b2e0:	b224      	sxth	r4, r4
 800b2e2:	42a5      	cmp	r5, r4
 800b2e4:	dc09      	bgt.n	800b2fa <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800b2e6:	88f8      	ldrh	r0, [r7, #6]
 800b2e8:	4410      	add	r0, r2
 800b2ea:	88f2      	ldrh	r2, [r6, #6]
 800b2ec:	4413      	add	r3, r2
 800b2ee:	b200      	sxth	r0, r0
 800b2f0:	b21b      	sxth	r3, r3
 800b2f2:	4298      	cmp	r0, r3
 800b2f4:	bfcc      	ite	gt
 800b2f6:	2000      	movgt	r0, #0
 800b2f8:	2001      	movle	r0, #1
 800b2fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800b2fc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800b2fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b2fe:	4604      	mov	r4, r0
 800b300:	4608      	mov	r0, r1
 800b302:	460d      	mov	r5, r1
 800b304:	f7fd fe6f 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b308:	b978      	cbnz	r0, 800b32a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800b30a:	4620      	mov	r0, r4
 800b30c:	f7fd fe6b 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b310:	f9b5 6000 	ldrsh.w	r6, [r5]
 800b314:	b150      	cbz	r0, 800b32c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800b316:	8026      	strh	r6, [r4, #0]
 800b318:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800b31c:	8063      	strh	r3, [r4, #2]
 800b31e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800b322:	80a3      	strh	r3, [r4, #4]
 800b324:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b328:	80e3      	strh	r3, [r4, #6]
 800b32a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b32c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800b330:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800b334:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800b338:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800b33c:	88ed      	ldrh	r5, [r5, #6]
 800b33e:	42b1      	cmp	r1, r6
 800b340:	460f      	mov	r7, r1
 800b342:	bfa8      	it	ge
 800b344:	4637      	movge	r7, r6
 800b346:	4293      	cmp	r3, r2
 800b348:	4618      	mov	r0, r3
 800b34a:	4466      	add	r6, ip
 800b34c:	bfa8      	it	ge
 800b34e:	4610      	movge	r0, r2
 800b350:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800b354:	8027      	strh	r7, [r4, #0]
 800b356:	442a      	add	r2, r5
 800b358:	88e5      	ldrh	r5, [r4, #6]
 800b35a:	8060      	strh	r0, [r4, #2]
 800b35c:	4461      	add	r1, ip
 800b35e:	442b      	add	r3, r5
 800b360:	b236      	sxth	r6, r6
 800b362:	b209      	sxth	r1, r1
 800b364:	b212      	sxth	r2, r2
 800b366:	b21b      	sxth	r3, r3
 800b368:	428e      	cmp	r6, r1
 800b36a:	bfac      	ite	ge
 800b36c:	ebc7 0106 	rsbge	r1, r7, r6
 800b370:	ebc7 0101 	rsblt	r1, r7, r1
 800b374:	429a      	cmp	r2, r3
 800b376:	bfac      	ite	ge
 800b378:	ebc0 0202 	rsbge	r2, r0, r2
 800b37c:	ebc0 0203 	rsblt	r2, r0, r3
 800b380:	80a1      	strh	r1, [r4, #4]
 800b382:	80e2      	strh	r2, [r4, #6]
 800b384:	e7d1      	b.n	800b32a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800b388 <_ZN8touchgfx11Application11getInstanceEv>:
 800b388:	4b01      	ldr	r3, [pc, #4]	; (800b390 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800b38a:	6818      	ldr	r0, [r3, #0]
 800b38c:	4770      	bx	lr
 800b38e:	bf00      	nop
 800b390:	2000a4e4 	.word	0x2000a4e4

0800b394 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800b394:	2300      	movs	r3, #0
 800b396:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800b39a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800b39e:	30a8      	adds	r0, #168	; 0xa8
 800b3a0:	f802 3b01 	strb.w	r3, [r2], #1
 800b3a4:	4282      	cmp	r2, r0
 800b3a6:	d1fb      	bne.n	800b3a0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800b3a8:	4770      	bx	lr

0800b3aa <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800b3aa:	4603      	mov	r3, r0
 800b3ac:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800b3b0:	2200      	movs	r2, #0
 800b3b2:	801a      	strh	r2, [r3, #0]
 800b3b4:	805a      	strh	r2, [r3, #2]
 800b3b6:	809a      	strh	r2, [r3, #4]
 800b3b8:	80da      	strh	r2, [r3, #6]
 800b3ba:	3308      	adds	r3, #8
 800b3bc:	428b      	cmp	r3, r1
 800b3be:	d1f8      	bne.n	800b3b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800b3c0:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800b3c4:	4770      	bx	lr
	...

0800b3c8 <_ZN8touchgfx11ApplicationC1Ev>:
 800b3c8:	b570      	push	{r4, r5, r6, lr}
 800b3ca:	4b19      	ldr	r3, [pc, #100]	; (800b430 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800b3cc:	6003      	str	r3, [r0, #0]
 800b3ce:	2500      	movs	r5, #0
 800b3d0:	4604      	mov	r4, r0
 800b3d2:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800b3d6:	30a8      	adds	r0, #168	; 0xa8
 800b3d8:	f7ff ffe7 	bl	800b3aa <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800b3dc:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800b3e0:	f7ff ffe3 	bl	800b3aa <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800b3e4:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800b3e8:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800b3ec:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800b3f0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800b3f4:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800b3f8:	490e      	ldr	r1, [pc, #56]	; (800b434 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800b3fa:	480f      	ldr	r0, [pc, #60]	; (800b438 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800b3fc:	4e0f      	ldr	r6, [pc, #60]	; (800b43c <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800b3fe:	f00e fbd9 	bl	8019bb4 <CRC_Lock>
 800b402:	4b0f      	ldr	r3, [pc, #60]	; (800b440 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800b404:	b158      	cbz	r0, 800b41e <_ZN8touchgfx11ApplicationC1Ev+0x56>
 800b406:	801d      	strh	r5, [r3, #0]
 800b408:	4a0e      	ldr	r2, [pc, #56]	; (800b444 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800b40a:	2300      	movs	r3, #0
 800b40c:	6013      	str	r3, [r2, #0]
 800b40e:	4a0e      	ldr	r2, [pc, #56]	; (800b448 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800b410:	6033      	str	r3, [r6, #0]
 800b412:	4620      	mov	r0, r4
 800b414:	6013      	str	r3, [r2, #0]
 800b416:	f7ff ffbd 	bl	800b394 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800b41a:	4620      	mov	r0, r4
 800b41c:	bd70      	pop	{r4, r5, r6, pc}
 800b41e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b422:	2002      	movs	r0, #2
 800b424:	801a      	strh	r2, [r3, #0]
 800b426:	6030      	str	r0, [r6, #0]
 800b428:	f001 fa14 	bl	800c854 <_ZN8touchgfx6Screen4drawEv>
 800b42c:	e7ec      	b.n	800b408 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 800b42e:	bf00      	nop
 800b430:	0801cb90 	.word	0x0801cb90
 800b434:	b5e8b5cd 	.word	0xb5e8b5cd
 800b438:	f407a5c2 	.word	0xf407a5c2
 800b43c:	2000a4d4 	.word	0x2000a4d4
 800b440:	20000060 	.word	0x20000060
 800b444:	2000a4e4 	.word	0x2000a4e4
 800b448:	2000a4d8 	.word	0x2000a4d8

0800b44c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800b44c:	b510      	push	{r4, lr}
 800b44e:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800b452:	428b      	cmp	r3, r1
 800b454:	d806      	bhi.n	800b464 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 800b456:	4b0b      	ldr	r3, [pc, #44]	; (800b484 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 800b458:	4a0b      	ldr	r2, [pc, #44]	; (800b488 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 800b45a:	480c      	ldr	r0, [pc, #48]	; (800b48c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 800b45c:	f240 11dd 	movw	r1, #477	; 0x1dd
 800b460:	f00e fce0 	bl	8019e24 <__assert_func>
 800b464:	3b01      	subs	r3, #1
 800b466:	b29b      	uxth	r3, r3
 800b468:	428b      	cmp	r3, r1
 800b46a:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800b46e:	d908      	bls.n	800b482 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 800b470:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800b474:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800b478:	681a      	ldr	r2, [r3, #0]
 800b47a:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800b47e:	685a      	ldr	r2, [r3, #4]
 800b480:	6062      	str	r2, [r4, #4]
 800b482:	bd10      	pop	{r4, pc}
 800b484:	0801cb20 	.word	0x0801cb20
 800b488:	0801cc18 	.word	0x0801cc18
 800b48c:	0801cb2e 	.word	0x0801cb2e

0800b490 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800b490:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b492:	466b      	mov	r3, sp
 800b494:	e883 0006 	stmia.w	r3, {r1, r2}
 800b498:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800b49c:	2a07      	cmp	r2, #7
 800b49e:	4604      	mov	r4, r0
 800b4a0:	d906      	bls.n	800b4b0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800b4a2:	4b09      	ldr	r3, [pc, #36]	; (800b4c8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800b4a4:	4a09      	ldr	r2, [pc, #36]	; (800b4cc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800b4a6:	480a      	ldr	r0, [pc, #40]	; (800b4d0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800b4a8:	f240 11a3 	movw	r1, #419	; 0x1a3
 800b4ac:	f00e fcba 	bl	8019e24 <__assert_func>
 800b4b0:	1c51      	adds	r1, r2, #1
 800b4b2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800b4b6:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800b4ba:	cb03      	ldmia	r3!, {r0, r1}
 800b4bc:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800b4c0:	6069      	str	r1, [r5, #4]
 800b4c2:	b003      	add	sp, #12
 800b4c4:	bd30      	pop	{r4, r5, pc}
 800b4c6:	bf00      	nop
 800b4c8:	0801cb57 	.word	0x0801cb57
 800b4cc:	0801ccae 	.word	0x0801ccae
 800b4d0:	0801cb2e 	.word	0x0801cb2e

0800b4d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800b4d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b4d8:	4b94      	ldr	r3, [pc, #592]	; (800b72c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800b4da:	b08d      	sub	sp, #52	; 0x34
 800b4dc:	ac08      	add	r4, sp, #32
 800b4de:	e884 0006 	stmia.w	r4, {r1, r2}
 800b4e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b4e6:	4b92      	ldr	r3, [pc, #584]	; (800b730 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800b4e8:	4683      	mov	fp, r0
 800b4ea:	f9b3 1000 	ldrsh.w	r1, [r3]
 800b4ee:	4620      	mov	r0, r4
 800b4f0:	f7ff fe8e 	bl	800b210 <_ZN8touchgfx4Rect10restrictToEss>
 800b4f4:	4620      	mov	r0, r4
 800b4f6:	f7fd fd76 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b4fa:	2800      	cmp	r0, #0
 800b4fc:	d16a      	bne.n	800b5d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800b4fe:	9402      	str	r4, [sp, #8]
 800b500:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800b504:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800b508:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800b50c:	2400      	movs	r4, #0
 800b50e:	9301      	str	r3, [sp, #4]
 800b510:	36a0      	adds	r6, #160	; 0xa0
 800b512:	42a5      	cmp	r5, r4
 800b514:	d00d      	beq.n	800b532 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800b516:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800b51a:	9802      	ldr	r0, [sp, #8]
 800b51c:	f7ff fec8 	bl	800b2b0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800b520:	b128      	cbz	r0, 800b52e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800b522:	1e69      	subs	r1, r5, #1
 800b524:	1b09      	subs	r1, r1, r4
 800b526:	b289      	uxth	r1, r1
 800b528:	9801      	ldr	r0, [sp, #4]
 800b52a:	f7ff ff8f 	bl	800b44c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b52e:	3401      	adds	r4, #1
 800b530:	e7ef      	b.n	800b512 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 800b532:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800b536:	9703      	str	r7, [sp, #12]
 800b538:	1e7b      	subs	r3, r7, #1
 800b53a:	9300      	str	r3, [sp, #0]
 800b53c:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800b540:	2400      	movs	r4, #0
 800b542:	4655      	mov	r5, sl
 800b544:	9704      	str	r7, [sp, #16]
 800b546:	4626      	mov	r6, r4
 800b548:	9b04      	ldr	r3, [sp, #16]
 800b54a:	2b00      	cmp	r3, #0
 800b54c:	d078      	beq.n	800b640 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 800b54e:	9902      	ldr	r1, [sp, #8]
 800b550:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800b554:	f7ff fe3a 	bl	800b1cc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800b558:	b360      	cbz	r0, 800b5b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800b55a:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800b55e:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800b562:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800b566:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800b56a:	45e6      	cmp	lr, ip
 800b56c:	db35      	blt.n	800b5da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800b56e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800b572:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800b576:	4472      	add	r2, lr
 800b578:	4463      	add	r3, ip
 800b57a:	b212      	sxth	r2, r2
 800b57c:	b21b      	sxth	r3, r3
 800b57e:	429a      	cmp	r2, r3
 800b580:	dc2b      	bgt.n	800b5da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800b582:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800b586:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800b58a:	fa1f f288 	uxth.w	r2, r8
 800b58e:	4413      	add	r3, r2
 800b590:	b29b      	uxth	r3, r3
 800b592:	45c1      	cmp	r9, r8
 800b594:	fa0f fe83 	sxth.w	lr, r3
 800b598:	fa1f fc89 	uxth.w	ip, r9
 800b59c:	db0f      	blt.n	800b5be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800b59e:	eba3 030c 	sub.w	r3, r3, ip
 800b5a2:	1ac9      	subs	r1, r1, r3
 800b5a4:	b209      	sxth	r1, r1
 800b5a6:	2900      	cmp	r1, #0
 800b5a8:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800b5ac:	dd12      	ble.n	800b5d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800b5ae:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800b5b2:	4604      	mov	r4, r0
 800b5b4:	9b04      	ldr	r3, [sp, #16]
 800b5b6:	3b01      	subs	r3, #1
 800b5b8:	9304      	str	r3, [sp, #16]
 800b5ba:	3d08      	subs	r5, #8
 800b5bc:	e7c4      	b.n	800b548 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 800b5be:	4461      	add	r1, ip
 800b5c0:	b209      	sxth	r1, r1
 800b5c2:	4571      	cmp	r1, lr
 800b5c4:	dc3a      	bgt.n	800b63c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800b5c6:	eba2 020c 	sub.w	r2, r2, ip
 800b5ca:	b212      	sxth	r2, r2
 800b5cc:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800b5d0:	2a00      	cmp	r2, #0
 800b5d2:	dcee      	bgt.n	800b5b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800b5d4:	b00d      	add	sp, #52	; 0x34
 800b5d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b5da:	45c1      	cmp	r9, r8
 800b5dc:	db2e      	blt.n	800b63c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800b5de:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800b5e2:	4499      	add	r9, r3
 800b5e4:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800b5e8:	4498      	add	r8, r3
 800b5ea:	fa0f f989 	sxth.w	r9, r9
 800b5ee:	fa0f f888 	sxth.w	r8, r8
 800b5f2:	45c1      	cmp	r9, r8
 800b5f4:	dc22      	bgt.n	800b63c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800b5f6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800b5fa:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800b5fe:	fa1f f28c 	uxth.w	r2, ip
 800b602:	4413      	add	r3, r2
 800b604:	b29b      	uxth	r3, r3
 800b606:	45e6      	cmp	lr, ip
 800b608:	fa1f f88e 	uxth.w	r8, lr
 800b60c:	fa0f f983 	sxth.w	r9, r3
 800b610:	db0a      	blt.n	800b628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 800b612:	eba3 0308 	sub.w	r3, r3, r8
 800b616:	1ac9      	subs	r1, r1, r3
 800b618:	b209      	sxth	r1, r1
 800b61a:	2900      	cmp	r1, #0
 800b61c:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800b620:	ddd8      	ble.n	800b5d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800b622:	f8ad 9020 	strh.w	r9, [sp, #32]
 800b626:	e7c4      	b.n	800b5b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800b628:	4441      	add	r1, r8
 800b62a:	b209      	sxth	r1, r1
 800b62c:	4549      	cmp	r1, r9
 800b62e:	dc05      	bgt.n	800b63c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800b630:	eba2 0208 	sub.w	r2, r2, r8
 800b634:	b212      	sxth	r2, r2
 800b636:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800b63a:	e7c9      	b.n	800b5d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800b63c:	4606      	mov	r6, r0
 800b63e:	e7b9      	b.n	800b5b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800b640:	2c00      	cmp	r4, #0
 800b642:	f47f af7d 	bne.w	800b540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 800b646:	2e00      	cmp	r6, #0
 800b648:	f000 81e1 	beq.w	800ba0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800b64c:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800b650:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800b654:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800b658:	b2b9      	uxth	r1, r7
 800b65a:	9104      	str	r1, [sp, #16]
 800b65c:	9804      	ldr	r0, [sp, #16]
 800b65e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800b662:	4401      	add	r1, r0
 800b664:	b2b3      	uxth	r3, r6
 800b666:	b289      	uxth	r1, r1
 800b668:	441a      	add	r2, r3
 800b66a:	9105      	str	r1, [sp, #20]
 800b66c:	b292      	uxth	r2, r2
 800b66e:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800b672:	fa0f f882 	sxth.w	r8, r2
 800b676:	4655      	mov	r5, sl
 800b678:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800b67c:	9b03      	ldr	r3, [sp, #12]
 800b67e:	2b00      	cmp	r3, #0
 800b680:	d058      	beq.n	800b734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 800b682:	9902      	ldr	r1, [sp, #8]
 800b684:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800b688:	f7ff fda0 	bl	800b1cc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800b68c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b690:	b1d8      	cbz	r0, 800b6ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800b692:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800b696:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800b69a:	4576      	cmp	r6, lr
 800b69c:	dc26      	bgt.n	800b6ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800b69e:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800b6a2:	44f4      	add	ip, lr
 800b6a4:	fa0f fc8c 	sxth.w	ip, ip
 800b6a8:	45e0      	cmp	r8, ip
 800b6aa:	db1f      	blt.n	800b6ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800b6ac:	428f      	cmp	r7, r1
 800b6ae:	fa1f fc81 	uxth.w	ip, r1
 800b6b2:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800b6b6:	dc0f      	bgt.n	800b6d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 800b6b8:	9805      	ldr	r0, [sp, #20]
 800b6ba:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800b6be:	eba0 0c0c 	sub.w	ip, r0, ip
 800b6c2:	eba1 010c 	sub.w	r1, r1, ip
 800b6c6:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800b6ca:	4620      	mov	r0, r4
 800b6cc:	9903      	ldr	r1, [sp, #12]
 800b6ce:	3901      	subs	r1, #1
 800b6d0:	9103      	str	r1, [sp, #12]
 800b6d2:	3d08      	subs	r5, #8
 800b6d4:	4604      	mov	r4, r0
 800b6d6:	e7cf      	b.n	800b678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 800b6d8:	4461      	add	r1, ip
 800b6da:	b209      	sxth	r1, r1
 800b6dc:	4549      	cmp	r1, r9
 800b6de:	dcf5      	bgt.n	800b6cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800b6e0:	9904      	ldr	r1, [sp, #16]
 800b6e2:	eba1 0c0c 	sub.w	ip, r1, ip
 800b6e6:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800b6ea:	e7ee      	b.n	800b6ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800b6ec:	428f      	cmp	r7, r1
 800b6ee:	dced      	bgt.n	800b6cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800b6f0:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800b6f4:	4461      	add	r1, ip
 800b6f6:	b209      	sxth	r1, r1
 800b6f8:	4589      	cmp	r9, r1
 800b6fa:	dbe7      	blt.n	800b6cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800b6fc:	4576      	cmp	r6, lr
 800b6fe:	fa1f fc8e 	uxth.w	ip, lr
 800b702:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800b706:	dc08      	bgt.n	800b71a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800b708:	eba2 0c0c 	sub.w	ip, r2, ip
 800b70c:	eba1 010c 	sub.w	r1, r1, ip
 800b710:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800b714:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800b718:	e7d7      	b.n	800b6ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800b71a:	4461      	add	r1, ip
 800b71c:	b209      	sxth	r1, r1
 800b71e:	4588      	cmp	r8, r1
 800b720:	dbd4      	blt.n	800b6cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800b722:	eba3 0c0c 	sub.w	ip, r3, ip
 800b726:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800b72a:	e7ce      	b.n	800b6ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800b72c:	2000a48e 	.word	0x2000a48e
 800b730:	2000a48c 	.word	0x2000a48c
 800b734:	2c00      	cmp	r4, #0
 800b736:	f000 816a 	beq.w	800ba0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800b73a:	9b00      	ldr	r3, [sp, #0]
 800b73c:	3301      	adds	r3, #1
 800b73e:	f000 8166 	beq.w	800ba0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800b742:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800b746:	4621      	mov	r1, r4
 800b748:	9802      	ldr	r0, [sp, #8]
 800b74a:	f7ff fdb1 	bl	800b2b0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800b74e:	b120      	cbz	r0, 800b75a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 800b750:	f8bd 1000 	ldrh.w	r1, [sp]
 800b754:	9801      	ldr	r0, [sp, #4]
 800b756:	f7ff fe79 	bl	800b44c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b75a:	9902      	ldr	r1, [sp, #8]
 800b75c:	4620      	mov	r0, r4
 800b75e:	f7ff fd35 	bl	800b1cc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800b762:	2800      	cmp	r0, #0
 800b764:	f000 809b 	beq.w	800b89e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800b768:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800b76c:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800b770:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800b774:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800b778:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800b77c:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800b780:	fa1f f288 	uxth.w	r2, r8
 800b784:	19d5      	adds	r5, r2, r7
 800b786:	fa1f f985 	uxth.w	r9, r5
 800b78a:	fa0f f589 	sxth.w	r5, r9
 800b78e:	b2a1      	uxth	r1, r4
 800b790:	440b      	add	r3, r1
 800b792:	9503      	str	r5, [sp, #12]
 800b794:	45a0      	cmp	r8, r4
 800b796:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800b79a:	9507      	str	r5, [sp, #28]
 800b79c:	b29b      	uxth	r3, r3
 800b79e:	f340 809d 	ble.w	800b8dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800b7a2:	1a52      	subs	r2, r2, r1
 800b7a4:	b292      	uxth	r2, r2
 800b7a6:	4584      	cmp	ip, r0
 800b7a8:	fa0f fe83 	sxth.w	lr, r3
 800b7ac:	b215      	sxth	r5, r2
 800b7ae:	dd2f      	ble.n	800b810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 800b7b0:	9e00      	ldr	r6, [sp, #0]
 800b7b2:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800b7b6:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800b7ba:	9e03      	ldr	r6, [sp, #12]
 800b7bc:	eba6 060e 	sub.w	r6, r6, lr
 800b7c0:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800b7c4:	fa1f fc8c 	uxth.w	ip, ip
 800b7c8:	b280      	uxth	r0, r0
 800b7ca:	ebac 0300 	sub.w	r3, ip, r0
 800b7ce:	448c      	add	ip, r1
 800b7d0:	4470      	add	r0, lr
 800b7d2:	b29b      	uxth	r3, r3
 800b7d4:	fa0f fc8c 	sxth.w	ip, ip
 800b7d8:	b200      	sxth	r0, r0
 800b7da:	b21c      	sxth	r4, r3
 800b7dc:	ebac 0000 	sub.w	r0, ip, r0
 800b7e0:	4366      	muls	r6, r4
 800b7e2:	4368      	muls	r0, r5
 800b7e4:	4286      	cmp	r6, r0
 800b7e6:	db09      	blt.n	800b7fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800b7e8:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800b7ec:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800b7f0:	4417      	add	r7, r2
 800b7f2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b7f6:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800b7fa:	e681      	b.n	800b500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800b7fc:	440b      	add	r3, r1
 800b7fe:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b802:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800b806:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800b80a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b80e:	e677      	b.n	800b500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800b810:	9e03      	ldr	r6, [sp, #12]
 800b812:	45b6      	cmp	lr, r6
 800b814:	da28      	bge.n	800b868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 800b816:	9b00      	ldr	r3, [sp, #0]
 800b818:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800b81c:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800b820:	eb04 030c 	add.w	r3, r4, ip
 800b824:	fa1f f883 	uxth.w	r8, r3
 800b828:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800b82c:	4403      	add	r3, r0
 800b82e:	eba3 0308 	sub.w	r3, r3, r8
 800b832:	b29b      	uxth	r3, r3
 800b834:	fa0f f988 	sxth.w	r9, r8
 800b838:	eba0 000c 	sub.w	r0, r0, ip
 800b83c:	fa0f f883 	sxth.w	r8, r3
 800b840:	eba6 060e 	sub.w	r6, r6, lr
 800b844:	4368      	muls	r0, r5
 800b846:	fb08 f606 	mul.w	r6, r8, r6
 800b84a:	42b0      	cmp	r0, r6
 800b84c:	dc06      	bgt.n	800b85c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800b84e:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800b852:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800b856:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800b85a:	e7c9      	b.n	800b7f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 800b85c:	4423      	add	r3, r4
 800b85e:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800b862:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b866:	e64b      	b.n	800b500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800b868:	9807      	ldr	r0, [sp, #28]
 800b86a:	eba3 0309 	sub.w	r3, r3, r9
 800b86e:	b29b      	uxth	r3, r3
 800b870:	2806      	cmp	r0, #6
 800b872:	fa0f fc83 	sxth.w	ip, r3
 800b876:	d818      	bhi.n	800b8aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 800b878:	4652      	mov	r2, sl
 800b87a:	ab0a      	add	r3, sp, #40	; 0x28
 800b87c:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800b880:	6851      	ldr	r1, [r2, #4]
 800b882:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800b886:	c303      	stmia	r3!, {r0, r1}
 800b888:	9b03      	ldr	r3, [sp, #12]
 800b88a:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800b88e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800b892:	ab0a      	add	r3, sp, #40	; 0x28
 800b894:	e893 0006 	ldmia.w	r3, {r1, r2}
 800b898:	9801      	ldr	r0, [sp, #4]
 800b89a:	f7ff fdf9 	bl	800b490 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800b89e:	9b00      	ldr	r3, [sp, #0]
 800b8a0:	3b01      	subs	r3, #1
 800b8a2:	9300      	str	r3, [sp, #0]
 800b8a4:	f1aa 0a08 	sub.w	sl, sl, #8
 800b8a8:	e747      	b.n	800b73a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 800b8aa:	9800      	ldr	r0, [sp, #0]
 800b8ac:	45ac      	cmp	ip, r5
 800b8ae:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800b8b2:	db0c      	blt.n	800b8ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 800b8b4:	4417      	add	r7, r2
 800b8b6:	b2bf      	uxth	r7, r7
 800b8b8:	4458      	add	r0, fp
 800b8ba:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800b8be:	440f      	add	r7, r1
 800b8c0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b8c4:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800b8c8:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800b8cc:	e618      	b.n	800b500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800b8ce:	4458      	add	r0, fp
 800b8d0:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800b8d4:	443b      	add	r3, r7
 800b8d6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b8da:	e611      	b.n	800b500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800b8dc:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800b8e0:	fa1f f18c 	uxth.w	r1, ip
 800b8e4:	eb01 0e05 	add.w	lr, r1, r5
 800b8e8:	b282      	uxth	r2, r0
 800b8ea:	fa1f fe8e 	uxth.w	lr, lr
 800b8ee:	9204      	str	r2, [sp, #16]
 800b8f0:	fa0f f28e 	sxth.w	r2, lr
 800b8f4:	9205      	str	r2, [sp, #20]
 800b8f6:	9e04      	ldr	r6, [sp, #16]
 800b8f8:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800b8fc:	4432      	add	r2, r6
 800b8fe:	b292      	uxth	r2, r2
 800b900:	4584      	cmp	ip, r0
 800b902:	9206      	str	r2, [sp, #24]
 800b904:	da26      	bge.n	800b954 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 800b906:	eba3 0309 	sub.w	r3, r3, r9
 800b90a:	eba2 020e 	sub.w	r2, r2, lr
 800b90e:	b29b      	uxth	r3, r3
 800b910:	b292      	uxth	r2, r2
 800b912:	fa0f fa83 	sxth.w	sl, r3
 800b916:	b211      	sxth	r1, r2
 800b918:	eba0 000c 	sub.w	r0, r0, ip
 800b91c:	eba4 0408 	sub.w	r4, r4, r8
 800b920:	fb0a f000 	mul.w	r0, sl, r0
 800b924:	434c      	muls	r4, r1
 800b926:	42a0      	cmp	r0, r4
 800b928:	9800      	ldr	r0, [sp, #0]
 800b92a:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800b92e:	dc06      	bgt.n	800b93e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800b930:	4458      	add	r0, fp
 800b932:	9a05      	ldr	r2, [sp, #20]
 800b934:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800b938:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800b93c:	e7ca      	b.n	800b8d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800b93e:	eb0b 0300 	add.w	r3, fp, r0
 800b942:	9903      	ldr	r1, [sp, #12]
 800b944:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800b948:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800b94c:	442a      	add	r2, r5
 800b94e:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800b952:	e5d5      	b.n	800b500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800b954:	9e04      	ldr	r6, [sp, #16]
 800b956:	9a03      	ldr	r2, [sp, #12]
 800b958:	1b89      	subs	r1, r1, r6
 800b95a:	b21e      	sxth	r6, r3
 800b95c:	b289      	uxth	r1, r1
 800b95e:	4296      	cmp	r6, r2
 800b960:	fa0f fc81 	sxth.w	ip, r1
 800b964:	dd26      	ble.n	800b9b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4e0>
 800b966:	eba3 0309 	sub.w	r3, r3, r9
 800b96a:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800b96e:	9e05      	ldr	r6, [sp, #20]
 800b970:	b29b      	uxth	r3, r3
 800b972:	eba6 0902 	sub.w	r9, r6, r2
 800b976:	b218      	sxth	r0, r3
 800b978:	eba4 0408 	sub.w	r4, r4, r8
 800b97c:	fb0c f404 	mul.w	r4, ip, r4
 800b980:	fb00 f909 	mul.w	r9, r0, r9
 800b984:	9a00      	ldr	r2, [sp, #0]
 800b986:	454c      	cmp	r4, r9
 800b988:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800b98c:	db03      	blt.n	800b996 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800b98e:	445a      	add	r2, fp
 800b990:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800b994:	e79e      	b.n	800b8d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800b996:	eb0b 0302 	add.w	r3, fp, r2
 800b99a:	9a03      	ldr	r2, [sp, #12]
 800b99c:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800b9a0:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800b9a4:	4429      	add	r1, r5
 800b9a6:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800b9aa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b9ae:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800b9b2:	e5a5      	b.n	800b500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800b9b4:	9b06      	ldr	r3, [sp, #24]
 800b9b6:	9c07      	ldr	r4, [sp, #28]
 800b9b8:	eba3 020e 	sub.w	r2, r3, lr
 800b9bc:	b292      	uxth	r2, r2
 800b9be:	2c06      	cmp	r4, #6
 800b9c0:	b213      	sxth	r3, r2
 800b9c2:	d80d      	bhi.n	800b9e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 800b9c4:	4651      	mov	r1, sl
 800b9c6:	aa0a      	add	r2, sp, #40	; 0x28
 800b9c8:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800b9cc:	6849      	ldr	r1, [r1, #4]
 800b9ce:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800b9d2:	9b05      	ldr	r3, [sp, #20]
 800b9d4:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800b9d8:	c203      	stmia	r2!, {r0, r1}
 800b9da:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800b9de:	e758      	b.n	800b892 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800b9e0:	9c00      	ldr	r4, [sp, #0]
 800b9e2:	4563      	cmp	r3, ip
 800b9e4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800b9e8:	db0d      	blt.n	800ba06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 800b9ea:	4429      	add	r1, r5
 800b9ec:	9a04      	ldr	r2, [sp, #16]
 800b9ee:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800b9f2:	b289      	uxth	r1, r1
 800b9f4:	445c      	add	r4, fp
 800b9f6:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800b9fa:	4411      	add	r1, r2
 800b9fc:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800ba00:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800ba04:	e57c      	b.n	800b500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ba06:	445c      	add	r4, fp
 800ba08:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800ba0c:	e79e      	b.n	800b94c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 800ba0e:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800ba12:	2f07      	cmp	r7, #7
 800ba14:	d806      	bhi.n	800ba24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x550>
 800ba16:	ab08      	add	r3, sp, #32
 800ba18:	e893 0006 	ldmia.w	r3, {r1, r2}
 800ba1c:	9801      	ldr	r0, [sp, #4]
 800ba1e:	f7ff fd37 	bl	800b490 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800ba22:	e5d7      	b.n	800b5d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800ba24:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800ba28:	f107 39ff 	add.w	r9, r7, #4294967295
 800ba2c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800ba30:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800ba34:	f04f 35ff 	mov.w	r5, #4294967295
 800ba38:	2400      	movs	r4, #0
 800ba3a:	9304      	str	r3, [sp, #16]
 800ba3c:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800ba40:	9300      	str	r3, [sp, #0]
 800ba42:	f109 32ff 	add.w	r2, r9, #4294967295
 800ba46:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800ba4a:	9303      	str	r3, [sp, #12]
 800ba4c:	4690      	mov	r8, r2
 800ba4e:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800ba52:	f1b8 3fff 	cmp.w	r8, #4294967295
 800ba56:	bf14      	ite	ne
 800ba58:	9904      	ldrne	r1, [sp, #16]
 800ba5a:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800ba5e:	6818      	ldr	r0, [r3, #0]
 800ba60:	9206      	str	r2, [sp, #24]
 800ba62:	bf18      	it	ne
 800ba64:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800ba68:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800ba6c:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800ba70:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800ba74:	9305      	str	r3, [sp, #20]
 800ba76:	fb16 f601 	smulbb	r6, r6, r1
 800ba7a:	6859      	ldr	r1, [r3, #4]
 800ba7c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ba80:	4671      	mov	r1, lr
 800ba82:	a80a      	add	r0, sp, #40	; 0x28
 800ba84:	f7ff fc3a 	bl	800b2fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ba88:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800ba8c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800ba90:	9b03      	ldr	r3, [sp, #12]
 800ba92:	9a00      	ldr	r2, [sp, #0]
 800ba94:	fb11 f100 	smulbb	r1, r1, r0
 800ba98:	fb02 6603 	mla	r6, r2, r3, r6
 800ba9c:	1b8e      	subs	r6, r1, r6
 800ba9e:	2008      	movs	r0, #8
 800baa0:	fb91 f1f0 	sdiv	r1, r1, r0
 800baa4:	42b1      	cmp	r1, r6
 800baa6:	dc21      	bgt.n	800baec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800baa8:	4556      	cmp	r6, sl
 800baaa:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800baae:	da03      	bge.n	800bab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e4>
 800bab0:	b1e6      	cbz	r6, 800baec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800bab2:	46b2      	mov	sl, r6
 800bab4:	4645      	mov	r5, r8
 800bab6:	464c      	mov	r4, r9
 800bab8:	f108 38ff 	add.w	r8, r8, #4294967295
 800babc:	f118 0f02 	cmn.w	r8, #2
 800bac0:	d1c7      	bne.n	800ba52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57e>
 800bac2:	f1b2 3fff 	cmp.w	r2, #4294967295
 800bac6:	f1a7 0708 	sub.w	r7, r7, #8
 800baca:	4691      	mov	r9, r2
 800bacc:	d1b6      	bne.n	800ba3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x568>
 800bace:	9b01      	ldr	r3, [sp, #4]
 800bad0:	b2a6      	uxth	r6, r4
 800bad2:	00e4      	lsls	r4, r4, #3
 800bad4:	1918      	adds	r0, r3, r4
 800bad6:	1c6b      	adds	r3, r5, #1
 800bad8:	d10b      	bne.n	800baf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61e>
 800bada:	4601      	mov	r1, r0
 800badc:	9802      	ldr	r0, [sp, #8]
 800bade:	f7ff fc0d 	bl	800b2fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bae2:	4631      	mov	r1, r6
 800bae4:	9801      	ldr	r0, [sp, #4]
 800bae6:	f7ff fcb1 	bl	800b44c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800baea:	e509      	b.n	800b500 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800baec:	4645      	mov	r5, r8
 800baee:	464c      	mov	r4, r9
 800baf0:	e7ed      	b.n	800bace <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 800baf2:	9b01      	ldr	r3, [sp, #4]
 800baf4:	00ed      	lsls	r5, r5, #3
 800baf6:	1959      	adds	r1, r3, r5
 800baf8:	f7ff fc00 	bl	800b2fc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bafc:	9b02      	ldr	r3, [sp, #8]
 800bafe:	cb03      	ldmia	r3!, {r0, r1}
 800bb00:	445d      	add	r5, fp
 800bb02:	445c      	add	r4, fp
 800bb04:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800bb08:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800bb0c:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800bb10:	9b02      	ldr	r3, [sp, #8]
 800bb12:	6861      	ldr	r1, [r4, #4]
 800bb14:	c303      	stmia	r3!, {r0, r1}
 800bb16:	e7e4      	b.n	800bae2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>

0800bb18 <_ZN8touchgfx11Application10invalidateEv>:
 800bb18:	4b09      	ldr	r3, [pc, #36]	; (800bb40 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800bb1a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bb1e:	4b09      	ldr	r3, [pc, #36]	; (800bb44 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800bb20:	b082      	sub	sp, #8
 800bb22:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bb26:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bb2a:	2100      	movs	r1, #0
 800bb2c:	9100      	str	r1, [sp, #0]
 800bb2e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800bb32:	ab02      	add	r3, sp, #8
 800bb34:	e913 0006 	ldmdb	r3, {r1, r2}
 800bb38:	b002      	add	sp, #8
 800bb3a:	f7ff bccb 	b.w	800b4d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bb3e:	bf00      	nop
 800bb40:	2000a48c 	.word	0x2000a48c
 800bb44:	2000a48e 	.word	0x2000a48e

0800bb48 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800bb48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb4c:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800bb50:	b09b      	sub	sp, #108	; 0x6c
 800bb52:	4604      	mov	r4, r0
 800bb54:	4630      	mov	r0, r6
 800bb56:	f7fd fa46 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bb5a:	4605      	mov	r5, r0
 800bb5c:	b940      	cbnz	r0, 800bb70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800bb5e:	e896 0006 	ldmia.w	r6, {r1, r2}
 800bb62:	4620      	mov	r0, r4
 800bb64:	f7ff fcb6 	bl	800b4d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bb68:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800bb6c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800bb70:	4bc6      	ldr	r3, [pc, #792]	; (800be8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800bb72:	681b      	ldr	r3, [r3, #0]
 800bb74:	b33b      	cbz	r3, 800bbc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800bb76:	4dc6      	ldr	r5, [pc, #792]	; (800be90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800bb78:	4628      	mov	r0, r5
 800bb7a:	f7fd fa34 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bb7e:	4606      	mov	r6, r0
 800bb80:	bb08      	cbnz	r0, 800bbc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800bb82:	4628      	mov	r0, r5
 800bb84:	f7ff f9c4 	bl	800af10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800bb88:	6829      	ldr	r1, [r5, #0]
 800bb8a:	686a      	ldr	r2, [r5, #4]
 800bb8c:	4620      	mov	r0, r4
 800bb8e:	f7ff fca1 	bl	800b4d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bb92:	802e      	strh	r6, [r5, #0]
 800bb94:	806e      	strh	r6, [r5, #2]
 800bb96:	80ae      	strh	r6, [r5, #4]
 800bb98:	80ee      	strh	r6, [r5, #6]
 800bb9a:	4dbe      	ldr	r5, [pc, #760]	; (800be94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800bb9c:	a809      	add	r0, sp, #36	; 0x24
 800bb9e:	f7ff fc04 	bl	800b3aa <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bba2:	882f      	ldrh	r7, [r5, #0]
 800bba4:	463e      	mov	r6, r7
 800bba6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800bbaa:	42b3      	cmp	r3, r6
 800bbac:	d912      	bls.n	800bbd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 800bbae:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800bbb2:	a809      	add	r0, sp, #36	; 0x24
 800bbb4:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800bbb8:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800bbbc:	3601      	adds	r6, #1
 800bbbe:	f7ff fc67 	bl	800b490 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800bbc2:	b2b6      	uxth	r6, r6
 800bbc4:	e7ef      	b.n	800bba6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 800bbc6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800bbca:	2b00      	cmp	r3, #0
 800bbcc:	d1e5      	bne.n	800bb9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 800bbce:	b01b      	add	sp, #108	; 0x6c
 800bbd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bbd4:	463e      	mov	r6, r7
 800bbd6:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800bbda:	42b3      	cmp	r3, r6
 800bbdc:	d90b      	bls.n	800bbf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800bbde:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800bbe2:	4620      	mov	r0, r4
 800bbe4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800bbe8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800bbec:	3601      	adds	r6, #1
 800bbee:	f7ff fc71 	bl	800b4d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bbf2:	b2b6      	uxth	r6, r6
 800bbf4:	e7ef      	b.n	800bbd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 800bbf6:	4ea8      	ldr	r6, [pc, #672]	; (800be98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800bbf8:	6833      	ldr	r3, [r6, #0]
 800bbfa:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800bbfe:	2b01      	cmp	r3, #1
 800bc00:	f040 80d2 	bne.w	800bda8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 800bc04:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800bc08:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 800bc0c:	4639      	mov	r1, r7
 800bc0e:	33aa      	adds	r3, #170	; 0xaa
 800bc10:	2700      	movs	r7, #0
 800bc12:	458c      	cmp	ip, r1
 800bc14:	f103 0308 	add.w	r3, r3, #8
 800bc18:	dd0a      	ble.n	800bc30 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 800bc1a:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800bc1e:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800bc22:	4402      	add	r2, r0
 800bc24:	b212      	sxth	r2, r2
 800bc26:	4297      	cmp	r7, r2
 800bc28:	bfb8      	it	lt
 800bc2a:	4617      	movlt	r7, r2
 800bc2c:	3101      	adds	r1, #1
 800bc2e:	e7f0      	b.n	800bc12 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800bc30:	4b9a      	ldr	r3, [pc, #616]	; (800be9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800bc32:	f8b3 9000 	ldrh.w	r9, [r3]
 800bc36:	2300      	movs	r3, #0
 800bc38:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800bc3c:	f1b9 0f0f 	cmp.w	r9, #15
 800bc40:	bf8c      	ite	hi
 800bc42:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 800bc46:	f04f 0901 	movls.w	r9, #1
 800bc4a:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 800bc4e:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800bc52:	4440      	add	r0, r8
 800bc54:	fa0f f880 	sxth.w	r8, r0
 800bc58:	6830      	ldr	r0, [r6, #0]
 800bc5a:	4547      	cmp	r7, r8
 800bc5c:	6803      	ldr	r3, [r0, #0]
 800bc5e:	f340 8086 	ble.w	800bd6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 800bc62:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800bc66:	4798      	blx	r3
 800bc68:	eb08 0309 	add.w	r3, r8, r9
 800bc6c:	4298      	cmp	r0, r3
 800bc6e:	da08      	bge.n	800bc82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800bc70:	4287      	cmp	r7, r0
 800bc72:	dd06      	ble.n	800bc82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800bc74:	4580      	cmp	r8, r0
 800bc76:	dd70      	ble.n	800bd5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800bc78:	f1b8 0f00 	cmp.w	r8, #0
 800bc7c:	dd6d      	ble.n	800bd5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800bc7e:	4638      	mov	r0, r7
 800bc80:	e004      	b.n	800bc8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 800bc82:	4580      	cmp	r8, r0
 800bc84:	dcfb      	bgt.n	800bc7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 800bc86:	42b8      	cmp	r0, r7
 800bc88:	bfa8      	it	ge
 800bc8a:	4638      	movge	r0, r7
 800bc8c:	4b84      	ldr	r3, [pc, #528]	; (800bea0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800bc8e:	f8ad 8016 	strh.w	r8, [sp, #22]
 800bc92:	eba0 0008 	sub.w	r0, r0, r8
 800bc96:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bc9a:	f8b5 8000 	ldrh.w	r8, [r5]
 800bc9e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bca2:	2200      	movs	r2, #0
 800bca4:	f8ad 2014 	strh.w	r2, [sp, #20]
 800bca8:	f8ad 001a 	strh.w	r0, [sp, #26]
 800bcac:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800bcb0:	4543      	cmp	r3, r8
 800bcb2:	d9ca      	bls.n	800bc4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800bcb4:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 800bcb8:	ab07      	add	r3, sp, #28
 800bcba:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800bcbe:	6851      	ldr	r1, [r2, #4]
 800bcc0:	c303      	stmia	r3!, {r0, r1}
 800bcc2:	a905      	add	r1, sp, #20
 800bcc4:	a807      	add	r0, sp, #28
 800bcc6:	f7ff fa81 	bl	800b1cc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800bcca:	2800      	cmp	r0, #0
 800bccc:	d04c      	beq.n	800bd68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 800bcce:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800bcd2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800bcd6:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800bcda:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800bcde:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800bce2:	4686      	mov	lr, r0
 800bce4:	4290      	cmp	r0, r2
 800bce6:	4450      	add	r0, sl
 800bce8:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800bcec:	bfb8      	it	lt
 800bcee:	4696      	movlt	lr, r2
 800bcf0:	4452      	add	r2, sl
 800bcf2:	b280      	uxth	r0, r0
 800bcf4:	b292      	uxth	r2, r2
 800bcf6:	4299      	cmp	r1, r3
 800bcf8:	fa0f fb80 	sxth.w	fp, r0
 800bcfc:	fa0f fa82 	sxth.w	sl, r2
 800bd00:	468c      	mov	ip, r1
 800bd02:	bfb8      	it	lt
 800bd04:	469c      	movlt	ip, r3
 800bd06:	45d3      	cmp	fp, sl
 800bd08:	bfb8      	it	lt
 800bd0a:	4602      	movlt	r2, r0
 800bd0c:	eba2 020e 	sub.w	r2, r2, lr
 800bd10:	f8ad 2020 	strh.w	r2, [sp, #32]
 800bd14:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800bd18:	f8ad e01c 	strh.w	lr, [sp, #28]
 800bd1c:	4411      	add	r1, r2
 800bd1e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800bd22:	f8ad c01e 	strh.w	ip, [sp, #30]
 800bd26:	4413      	add	r3, r2
 800bd28:	b289      	uxth	r1, r1
 800bd2a:	b29b      	uxth	r3, r3
 800bd2c:	b208      	sxth	r0, r1
 800bd2e:	b21a      	sxth	r2, r3
 800bd30:	4290      	cmp	r0, r2
 800bd32:	bfb8      	it	lt
 800bd34:	460b      	movlt	r3, r1
 800bd36:	eba3 030c 	sub.w	r3, r3, ip
 800bd3a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800bd3e:	a807      	add	r0, sp, #28
 800bd40:	f7fd f951 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bd44:	b920      	cbnz	r0, 800bd50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 800bd46:	6823      	ldr	r3, [r4, #0]
 800bd48:	a907      	add	r1, sp, #28
 800bd4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bd4c:	4620      	mov	r0, r4
 800bd4e:	4798      	blx	r3
 800bd50:	f108 0801 	add.w	r8, r8, #1
 800bd54:	fa1f f888 	uxth.w	r8, r8
 800bd58:	e7a8      	b.n	800bcac <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 800bd5a:	6830      	ldr	r0, [r6, #0]
 800bd5c:	6803      	ldr	r3, [r0, #0]
 800bd5e:	2101      	movs	r1, #1
 800bd60:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800bd64:	4798      	blx	r3
 800bd66:	e770      	b.n	800bc4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800bd68:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800bd6c:	e7e7      	b.n	800bd3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 800bd6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd70:	4798      	blx	r3
 800bd72:	4b4c      	ldr	r3, [pc, #304]	; (800bea4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800bd74:	781b      	ldrb	r3, [r3, #0]
 800bd76:	2b00      	cmp	r3, #0
 800bd78:	f43f af29 	beq.w	800bbce <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800bd7c:	2300      	movs	r3, #0
 800bd7e:	882d      	ldrh	r5, [r5, #0]
 800bd80:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800bd84:	34ea      	adds	r4, #234	; 0xea
 800bd86:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800bd8a:	42ab      	cmp	r3, r5
 800bd8c:	f67f af1f 	bls.w	800bbce <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800bd90:	ab1a      	add	r3, sp, #104	; 0x68
 800bd92:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800bd96:	3b44      	subs	r3, #68	; 0x44
 800bd98:	e893 0006 	ldmia.w	r3, {r1, r2}
 800bd9c:	4620      	mov	r0, r4
 800bd9e:	3501      	adds	r5, #1
 800bda0:	f7ff fb76 	bl	800b490 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800bda4:	b2ad      	uxth	r5, r5
 800bda6:	e7ee      	b.n	800bd86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800bda8:	2b02      	cmp	r3, #2
 800bdaa:	f040 8136 	bne.w	800c01a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800bdae:	4b3e      	ldr	r3, [pc, #248]	; (800bea8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800bdb0:	781b      	ldrb	r3, [r3, #0]
 800bdb2:	2b01      	cmp	r3, #1
 800bdb4:	d02c      	beq.n	800be10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 800bdb6:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 800bdba:	882a      	ldrh	r2, [r5, #0]
 800bdbc:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800bdc0:	3201      	adds	r2, #1
 800bdc2:	b292      	uxth	r2, r2
 800bdc4:	2900      	cmp	r1, #0
 800bdc6:	d0d4      	beq.n	800bd72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800bdc8:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 800bdcc:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800bdd0:	441f      	add	r7, r3
 800bdd2:	b23f      	sxth	r7, r7
 800bdd4:	4610      	mov	r0, r2
 800bdd6:	f04f 0900 	mov.w	r9, #0
 800bdda:	b283      	uxth	r3, r0
 800bddc:	4299      	cmp	r1, r3
 800bdde:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 800bde2:	f240 80c5 	bls.w	800bf70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 800bde6:	44a0      	add	r8, r4
 800bde8:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 800bdec:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 800bdf0:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 800bdf4:	4573      	cmp	r3, lr
 800bdf6:	4684      	mov	ip, r0
 800bdf8:	f340 80a7 	ble.w	800bf4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 800bdfc:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 800be00:	4477      	add	r7, lr
 800be02:	b23f      	sxth	r7, r7
 800be04:	429f      	cmp	r7, r3
 800be06:	bfa8      	it	ge
 800be08:	461f      	movge	r7, r3
 800be0a:	3001      	adds	r0, #1
 800be0c:	46e1      	mov	r9, ip
 800be0e:	e7e4      	b.n	800bdda <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 800be10:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800be14:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800be18:	f1bb 0f00 	cmp.w	fp, #0
 800be1c:	d0a9      	beq.n	800bd72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800be1e:	882b      	ldrh	r3, [r5, #0]
 800be20:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800be24:	3301      	adds	r3, #1
 800be26:	b29b      	uxth	r3, r3
 800be28:	f04f 0800 	mov.w	r8, #0
 800be2c:	b299      	uxth	r1, r3
 800be2e:	458b      	cmp	fp, r1
 800be30:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800be34:	d93a      	bls.n	800beac <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800be36:	4427      	add	r7, r4
 800be38:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800be3c:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 800be40:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 800be44:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800be48:	4408      	add	r0, r1
 800be4a:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800be4e:	4471      	add	r1, lr
 800be50:	b200      	sxth	r0, r0
 800be52:	b209      	sxth	r1, r1
 800be54:	4288      	cmp	r0, r1
 800be56:	469c      	mov	ip, r3
 800be58:	da06      	bge.n	800be68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 800be5a:	4586      	cmp	lr, r0
 800be5c:	4672      	mov	r2, lr
 800be5e:	bfb8      	it	lt
 800be60:	4602      	movlt	r2, r0
 800be62:	3301      	adds	r3, #1
 800be64:	46e0      	mov	r8, ip
 800be66:	e7e1      	b.n	800be2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 800be68:	d10b      	bne.n	800be82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800be6a:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 800be6e:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800be72:	458c      	cmp	ip, r1
 800be74:	bfb4      	ite	lt
 800be76:	469c      	movlt	ip, r3
 800be78:	46c4      	movge	ip, r8
 800be7a:	4572      	cmp	r2, lr
 800be7c:	bfb8      	it	lt
 800be7e:	4672      	movlt	r2, lr
 800be80:	e7ef      	b.n	800be62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800be82:	428a      	cmp	r2, r1
 800be84:	bfb8      	it	lt
 800be86:	460a      	movlt	r2, r1
 800be88:	46c4      	mov	ip, r8
 800be8a:	e7ea      	b.n	800be62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800be8c:	2000a4d0 	.word	0x2000a4d0
 800be90:	2000a4dc 	.word	0x2000a4dc
 800be94:	20000060 	.word	0x20000060
 800be98:	2000a498 	.word	0x2000a498
 800be9c:	2000a48e 	.word	0x2000a48e
 800bea0:	2000a48c 	.word	0x2000a48c
 800bea4:	2000a496 	.word	0x2000a496
 800bea8:	2000a490 	.word	0x2000a490
 800beac:	19e1      	adds	r1, r4, r7
 800beae:	ab07      	add	r3, sp, #28
 800beb0:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800beb4:	6849      	ldr	r1, [r1, #4]
 800beb6:	c303      	stmia	r3!, {r0, r1}
 800beb8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800bebc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800bec0:	2b13      	cmp	r3, #19
 800bec2:	bfd8      	it	le
 800bec4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800bec8:	f8ad 201c 	strh.w	r2, [sp, #28]
 800becc:	440b      	add	r3, r1
 800bece:	1a9b      	subs	r3, r3, r2
 800bed0:	a807      	add	r0, sp, #28
 800bed2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bed6:	f7ff f835 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800beda:	a807      	add	r0, sp, #28
 800bedc:	f7fd f883 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bee0:	2800      	cmp	r0, #0
 800bee2:	d197      	bne.n	800be14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800bee4:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800bee8:	6830      	ldr	r0, [r6, #0]
 800beea:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800beee:	f8d0 e000 	ldr.w	lr, [r0]
 800bef2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800bef6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800befa:	f1bc 0f14 	cmp.w	ip, #20
 800befe:	bfa8      	it	ge
 800bf00:	f04f 0c14 	movge.w	ip, #20
 800bf04:	fa1f fc8c 	uxth.w	ip, ip
 800bf08:	f8cd c000 	str.w	ip, [sp]
 800bf0c:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800bf10:	47d0      	blx	sl
 800bf12:	4682      	mov	sl, r0
 800bf14:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800bf18:	a807      	add	r0, sp, #28
 800bf1a:	f7fe fff9 	bl	800af10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800bf1e:	6823      	ldr	r3, [r4, #0]
 800bf20:	4427      	add	r7, r4
 800bf22:	4620      	mov	r0, r4
 800bf24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bf26:	a907      	add	r1, sp, #28
 800bf28:	4798      	blx	r3
 800bf2a:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 800bf2e:	eba0 000a 	sub.w	r0, r0, sl
 800bf32:	b200      	sxth	r0, r0
 800bf34:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 800bf38:	2800      	cmp	r0, #0
 800bf3a:	f47f af6b 	bne.w	800be14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800bf3e:	fa1f f188 	uxth.w	r1, r8
 800bf42:	4648      	mov	r0, r9
 800bf44:	f7ff fa82 	bl	800b44c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bf48:	e764      	b.n	800be14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800bf4a:	d10c      	bne.n	800bf66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 800bf4c:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 800bf50:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 800bf54:	45e6      	cmp	lr, ip
 800bf56:	bfb4      	ite	lt
 800bf58:	4684      	movlt	ip, r0
 800bf5a:	46cc      	movge	ip, r9
 800bf5c:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 800bf60:	4473      	add	r3, lr
 800bf62:	b21b      	sxth	r3, r3
 800bf64:	e74e      	b.n	800be04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 800bf66:	4577      	cmp	r7, lr
 800bf68:	bfa8      	it	ge
 800bf6a:	4677      	movge	r7, lr
 800bf6c:	46cc      	mov	ip, r9
 800bf6e:	e74c      	b.n	800be0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 800bf70:	eb0a 0008 	add.w	r0, sl, r8
 800bf74:	44a0      	add	r8, r4
 800bf76:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800bf7a:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 800bf7e:	f1bb 0f13 	cmp.w	fp, #19
 800bf82:	bfde      	ittt	le
 800bf84:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 800bf88:	445f      	addle	r7, fp
 800bf8a:	b23f      	sxthle	r7, r7
 800bf8c:	f7fd f82b 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bf90:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800bf94:	2800      	cmp	r0, #0
 800bf96:	f47f af15 	bne.w	800bdc4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 800bf9a:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 800bf9e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800bfa2:	1abf      	subs	r7, r7, r2
 800bfa4:	2f14      	cmp	r7, #20
 800bfa6:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 800bfaa:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 800bfae:	6830      	ldr	r0, [r6, #0]
 800bfb0:	f8ad 101c 	strh.w	r1, [sp, #28]
 800bfb4:	f8ad 201e 	strh.w	r2, [sp, #30]
 800bfb8:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bfbc:	bfa8      	it	ge
 800bfbe:	2714      	movge	r7, #20
 800bfc0:	f8d0 c000 	ldr.w	ip, [r0]
 800bfc4:	b2bf      	uxth	r7, r7
 800bfc6:	fa1f fb8b 	uxth.w	fp, fp
 800bfca:	455f      	cmp	r7, fp
 800bfcc:	bf94      	ite	ls
 800bfce:	9700      	strls	r7, [sp, #0]
 800bfd0:	f8cd b000 	strhi.w	fp, [sp]
 800bfd4:	b292      	uxth	r2, r2
 800bfd6:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 800bfda:	b29b      	uxth	r3, r3
 800bfdc:	b289      	uxth	r1, r1
 800bfde:	47b8      	blx	r7
 800bfe0:	6823      	ldr	r3, [r4, #0]
 800bfe2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800bfe6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bfe8:	a907      	add	r1, sp, #28
 800bfea:	4620      	mov	r0, r4
 800bfec:	4798      	blx	r3
 800bfee:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800bff2:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800bff6:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 800bffa:	1a5b      	subs	r3, r3, r1
 800bffc:	440a      	add	r2, r1
 800bffe:	b21b      	sxth	r3, r3
 800c000:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 800c004:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 800c008:	2b00      	cmp	r3, #0
 800c00a:	f47f aed6 	bne.w	800bdba <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800c00e:	fa1f f189 	uxth.w	r1, r9
 800c012:	4650      	mov	r0, sl
 800c014:	f7ff fa1a 	bl	800b44c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c018:	e6cf      	b.n	800bdba <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800c01a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c01e:	42bb      	cmp	r3, r7
 800c020:	f67f aea7 	bls.w	800bd72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800c024:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800c028:	ab07      	add	r3, sp, #28
 800c02a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c02e:	6851      	ldr	r1, [r2, #4]
 800c030:	c303      	stmia	r3!, {r0, r1}
 800c032:	a807      	add	r0, sp, #28
 800c034:	f7fc ffd7 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c038:	b920      	cbnz	r0, 800c044 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fc>
 800c03a:	6823      	ldr	r3, [r4, #0]
 800c03c:	a907      	add	r1, sp, #28
 800c03e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c040:	4620      	mov	r0, r4
 800c042:	4798      	blx	r3
 800c044:	3701      	adds	r7, #1
 800c046:	b2bf      	uxth	r7, r7
 800c048:	e7e7      	b.n	800c01a <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800c04a:	bf00      	nop

0800c04c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800c04c:	4b03      	ldr	r3, [pc, #12]	; (800c05c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800c04e:	2200      	movs	r2, #0
 800c050:	801a      	strh	r2, [r3, #0]
 800c052:	805a      	strh	r2, [r3, #2]
 800c054:	809a      	strh	r2, [r3, #4]
 800c056:	80da      	strh	r2, [r3, #6]
 800c058:	4770      	bx	lr
 800c05a:	bf00      	nop
 800c05c:	2000a4dc 	.word	0x2000a4dc

0800c060 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800c060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c064:	4606      	mov	r6, r0
 800c066:	b09d      	sub	sp, #116	; 0x74
 800c068:	a803      	add	r0, sp, #12
 800c06a:	4614      	mov	r4, r2
 800c06c:	468a      	mov	sl, r1
 800c06e:	461d      	mov	r5, r3
 800c070:	f000 fd6a 	bl	800cb48 <_ZN8touchgfx12TextProviderC1Ev>
 800c074:	6833      	ldr	r3, [r6, #0]
 800c076:	4630      	mov	r0, r6
 800c078:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c07a:	4798      	blx	r3
 800c07c:	6833      	ldr	r3, [r6, #0]
 800c07e:	4607      	mov	r7, r0
 800c080:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c082:	4630      	mov	r0, r6
 800c084:	4798      	blx	r3
 800c086:	462a      	mov	r2, r5
 800c088:	9000      	str	r0, [sp, #0]
 800c08a:	4621      	mov	r1, r4
 800c08c:	463b      	mov	r3, r7
 800c08e:	a803      	add	r0, sp, #12
 800c090:	f000 fdad 	bl	800cbee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c094:	2500      	movs	r5, #0
 800c096:	462c      	mov	r4, r5
 800c098:	46a9      	mov	r9, r5
 800c09a:	46a8      	mov	r8, r5
 800c09c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800c0a0:	2300      	movs	r3, #0
 800c0a2:	9302      	str	r3, [sp, #8]
 800c0a4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c0a8:	429c      	cmp	r4, r3
 800c0aa:	d002      	beq.n	800c0b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800c0ac:	455c      	cmp	r4, fp
 800c0ae:	bf18      	it	ne
 800c0b0:	4625      	movne	r5, r4
 800c0b2:	ab02      	add	r3, sp, #8
 800c0b4:	4632      	mov	r2, r6
 800c0b6:	4651      	mov	r1, sl
 800c0b8:	a803      	add	r0, sp, #12
 800c0ba:	f001 f897 	bl	800d1ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c0be:	4604      	mov	r4, r0
 800c0c0:	b108      	cbz	r0, 800c0c6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800c0c2:	280a      	cmp	r0, #10
 800c0c4:	d10a      	bne.n	800c0dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800c0c6:	45c1      	cmp	r9, r8
 800c0c8:	bf38      	it	cc
 800c0ca:	46c1      	movcc	r9, r8
 800c0cc:	f04f 0800 	mov.w	r8, #0
 800c0d0:	2c00      	cmp	r4, #0
 800c0d2:	d1e5      	bne.n	800c0a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800c0d4:	4648      	mov	r0, r9
 800c0d6:	b01d      	add	sp, #116	; 0x74
 800c0d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c0dc:	9a02      	ldr	r2, [sp, #8]
 800c0de:	2a00      	cmp	r2, #0
 800c0e0:	d0de      	beq.n	800c0a0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800c0e2:	7b57      	ldrb	r7, [r2, #13]
 800c0e4:	6833      	ldr	r3, [r6, #0]
 800c0e6:	8894      	ldrh	r4, [r2, #4]
 800c0e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c0ea:	007f      	lsls	r7, r7, #1
 800c0ec:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800c0f0:	7a97      	ldrb	r7, [r2, #10]
 800c0f2:	4629      	mov	r1, r5
 800c0f4:	4307      	orrs	r7, r0
 800c0f6:	4630      	mov	r0, r6
 800c0f8:	4798      	blx	r3
 800c0fa:	4438      	add	r0, r7
 800c0fc:	4480      	add	r8, r0
 800c0fe:	fa1f f888 	uxth.w	r8, r8
 800c102:	e7e5      	b.n	800c0d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800c104 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800c104:	b508      	push	{r3, lr}
 800c106:	6803      	ldr	r3, [r0, #0]
 800c108:	68db      	ldr	r3, [r3, #12]
 800c10a:	4798      	blx	r3
 800c10c:	b128      	cbz	r0, 800c11a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800c10e:	7b43      	ldrb	r3, [r0, #13]
 800c110:	7a80      	ldrb	r0, [r0, #10]
 800c112:	005b      	lsls	r3, r3, #1
 800c114:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c118:	4318      	orrs	r0, r3
 800c11a:	bd08      	pop	{r3, pc}

0800c11c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800c11c:	b40e      	push	{r1, r2, r3}
 800c11e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c120:	b09e      	sub	sp, #120	; 0x78
 800c122:	ab23      	add	r3, sp, #140	; 0x8c
 800c124:	4605      	mov	r5, r0
 800c126:	f853 4b04 	ldr.w	r4, [r3], #4
 800c12a:	9303      	str	r3, [sp, #12]
 800c12c:	a805      	add	r0, sp, #20
 800c12e:	f000 fd0b 	bl	800cb48 <_ZN8touchgfx12TextProviderC1Ev>
 800c132:	682b      	ldr	r3, [r5, #0]
 800c134:	4628      	mov	r0, r5
 800c136:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c138:	4798      	blx	r3
 800c13a:	682b      	ldr	r3, [r5, #0]
 800c13c:	4606      	mov	r6, r0
 800c13e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c140:	4628      	mov	r0, r5
 800c142:	4798      	blx	r3
 800c144:	4633      	mov	r3, r6
 800c146:	ae1e      	add	r6, sp, #120	; 0x78
 800c148:	4621      	mov	r1, r4
 800c14a:	9000      	str	r0, [sp, #0]
 800c14c:	9a03      	ldr	r2, [sp, #12]
 800c14e:	2400      	movs	r4, #0
 800c150:	a805      	add	r0, sp, #20
 800c152:	f000 fd4c 	bl	800cbee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c156:	f846 4d68 	str.w	r4, [r6, #-104]!
 800c15a:	462a      	mov	r2, r5
 800c15c:	4633      	mov	r3, r6
 800c15e:	4621      	mov	r1, r4
 800c160:	a805      	add	r0, sp, #20
 800c162:	f001 f843 	bl	800d1ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c166:	b1f0      	cbz	r0, 800c1a6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800c168:	280a      	cmp	r0, #10
 800c16a:	d018      	beq.n	800c19e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800c16c:	9f04      	ldr	r7, [sp, #16]
 800c16e:	b1b7      	cbz	r7, 800c19e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800c170:	7b78      	ldrb	r0, [r7, #13]
 800c172:	7a3b      	ldrb	r3, [r7, #8]
 800c174:	88aa      	ldrh	r2, [r5, #4]
 800c176:	00c1      	lsls	r1, r0, #3
 800c178:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800c17c:	4319      	orrs	r1, r3
 800c17e:	0643      	lsls	r3, r0, #25
 800c180:	bf44      	itt	mi
 800c182:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800c186:	b219      	sxthmi	r1, r3
 800c188:	0100      	lsls	r0, r0, #4
 800c18a:	79fb      	ldrb	r3, [r7, #7]
 800c18c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c190:	4303      	orrs	r3, r0
 800c192:	4413      	add	r3, r2
 800c194:	1a5b      	subs	r3, r3, r1
 800c196:	b29b      	uxth	r3, r3
 800c198:	42a3      	cmp	r3, r4
 800c19a:	bfc8      	it	gt
 800c19c:	b21c      	sxthgt	r4, r3
 800c19e:	4633      	mov	r3, r6
 800c1a0:	462a      	mov	r2, r5
 800c1a2:	2100      	movs	r1, #0
 800c1a4:	e7dc      	b.n	800c160 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800c1a6:	b2a0      	uxth	r0, r4
 800c1a8:	b01e      	add	sp, #120	; 0x78
 800c1aa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c1ae:	b003      	add	sp, #12
 800c1b0:	4770      	bx	lr

0800c1b2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800c1b2:	b40e      	push	{r1, r2, r3}
 800c1b4:	b570      	push	{r4, r5, r6, lr}
 800c1b6:	b09d      	sub	sp, #116	; 0x74
 800c1b8:	ab21      	add	r3, sp, #132	; 0x84
 800c1ba:	4604      	mov	r4, r0
 800c1bc:	f853 5b04 	ldr.w	r5, [r3], #4
 800c1c0:	9302      	str	r3, [sp, #8]
 800c1c2:	a803      	add	r0, sp, #12
 800c1c4:	f000 fcc0 	bl	800cb48 <_ZN8touchgfx12TextProviderC1Ev>
 800c1c8:	6823      	ldr	r3, [r4, #0]
 800c1ca:	4620      	mov	r0, r4
 800c1cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c1ce:	4798      	blx	r3
 800c1d0:	6823      	ldr	r3, [r4, #0]
 800c1d2:	4606      	mov	r6, r0
 800c1d4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c1d6:	4620      	mov	r0, r4
 800c1d8:	4798      	blx	r3
 800c1da:	4633      	mov	r3, r6
 800c1dc:	9000      	str	r0, [sp, #0]
 800c1de:	9a02      	ldr	r2, [sp, #8]
 800c1e0:	4629      	mov	r1, r5
 800c1e2:	a803      	add	r0, sp, #12
 800c1e4:	f000 fd03 	bl	800cbee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c1e8:	a803      	add	r0, sp, #12
 800c1ea:	f001 f89f 	bl	800d32c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c1ee:	2401      	movs	r4, #1
 800c1f0:	b2a3      	uxth	r3, r4
 800c1f2:	b140      	cbz	r0, 800c206 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800c1f4:	280a      	cmp	r0, #10
 800c1f6:	bf08      	it	eq
 800c1f8:	3301      	addeq	r3, #1
 800c1fa:	a803      	add	r0, sp, #12
 800c1fc:	bf08      	it	eq
 800c1fe:	b21c      	sxtheq	r4, r3
 800c200:	f001 f894 	bl	800d32c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c204:	e7f4      	b.n	800c1f0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800c206:	4618      	mov	r0, r3
 800c208:	b01d      	add	sp, #116	; 0x74
 800c20a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c20e:	b003      	add	sp, #12
 800c210:	4770      	bx	lr

0800c212 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800c212:	b40e      	push	{r1, r2, r3}
 800c214:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c216:	b09e      	sub	sp, #120	; 0x78
 800c218:	ab23      	add	r3, sp, #140	; 0x8c
 800c21a:	4604      	mov	r4, r0
 800c21c:	f853 5b04 	ldr.w	r5, [r3], #4
 800c220:	9303      	str	r3, [sp, #12]
 800c222:	a805      	add	r0, sp, #20
 800c224:	f000 fc90 	bl	800cb48 <_ZN8touchgfx12TextProviderC1Ev>
 800c228:	6823      	ldr	r3, [r4, #0]
 800c22a:	4620      	mov	r0, r4
 800c22c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c22e:	4798      	blx	r3
 800c230:	6823      	ldr	r3, [r4, #0]
 800c232:	4606      	mov	r6, r0
 800c234:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c236:	4620      	mov	r0, r4
 800c238:	4798      	blx	r3
 800c23a:	4633      	mov	r3, r6
 800c23c:	4629      	mov	r1, r5
 800c23e:	9000      	str	r0, [sp, #0]
 800c240:	9a03      	ldr	r2, [sp, #12]
 800c242:	a805      	add	r0, sp, #20
 800c244:	ad1e      	add	r5, sp, #120	; 0x78
 800c246:	f000 fcd2 	bl	800cbee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c24a:	2100      	movs	r1, #0
 800c24c:	f845 1d68 	str.w	r1, [r5, #-104]!
 800c250:	4622      	mov	r2, r4
 800c252:	462b      	mov	r3, r5
 800c254:	a805      	add	r0, sp, #20
 800c256:	f000 ffc9 	bl	800d1ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c25a:	26ff      	movs	r6, #255	; 0xff
 800c25c:	b1d8      	cbz	r0, 800c296 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800c25e:	280a      	cmp	r0, #10
 800c260:	d012      	beq.n	800c288 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800c262:	9804      	ldr	r0, [sp, #16]
 800c264:	b180      	cbz	r0, 800c288 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800c266:	7b47      	ldrb	r7, [r0, #13]
 800c268:	7922      	ldrb	r2, [r4, #4]
 800c26a:	00fb      	lsls	r3, r7, #3
 800c26c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800c270:	7a03      	ldrb	r3, [r0, #8]
 800c272:	430b      	orrs	r3, r1
 800c274:	0679      	lsls	r1, r7, #25
 800c276:	bf44      	itt	mi
 800c278:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c27c:	b21b      	sxthmi	r3, r3
 800c27e:	1ad3      	subs	r3, r2, r3
 800c280:	b2db      	uxtb	r3, r3
 800c282:	429e      	cmp	r6, r3
 800c284:	bf28      	it	cs
 800c286:	461e      	movcs	r6, r3
 800c288:	462b      	mov	r3, r5
 800c28a:	4622      	mov	r2, r4
 800c28c:	2100      	movs	r1, #0
 800c28e:	a805      	add	r0, sp, #20
 800c290:	f000 ffac 	bl	800d1ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c294:	e7e2      	b.n	800c25c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800c296:	4630      	mov	r0, r6
 800c298:	b01e      	add	sp, #120	; 0x78
 800c29a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c29e:	b003      	add	sp, #12
 800c2a0:	4770      	bx	lr

0800c2a2 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800c2a2:	b513      	push	{r0, r1, r4, lr}
 800c2a4:	6803      	ldr	r3, [r0, #0]
 800c2a6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800c2aa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c2ae:	f8ad 1004 	strh.w	r1, [sp, #4]
 800c2b2:	2400      	movs	r4, #0
 800c2b4:	9400      	str	r4, [sp, #0]
 800c2b6:	f8ad 2006 	strh.w	r2, [sp, #6]
 800c2ba:	691b      	ldr	r3, [r3, #16]
 800c2bc:	4669      	mov	r1, sp
 800c2be:	4798      	blx	r3
 800c2c0:	b002      	add	sp, #8
 800c2c2:	bd10      	pop	{r4, pc}

0800c2c4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800c2c4:	b538      	push	{r3, r4, r5, lr}
 800c2c6:	680b      	ldr	r3, [r1, #0]
 800c2c8:	460c      	mov	r4, r1
 800c2ca:	68db      	ldr	r3, [r3, #12]
 800c2cc:	4605      	mov	r5, r0
 800c2ce:	4798      	blx	r3
 800c2d0:	6823      	ldr	r3, [r4, #0]
 800c2d2:	4620      	mov	r0, r4
 800c2d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c2d6:	4629      	mov	r1, r5
 800c2d8:	4798      	blx	r3
 800c2da:	4628      	mov	r0, r5
 800c2dc:	bd38      	pop	{r3, r4, r5, pc}

0800c2de <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800c2de:	b410      	push	{r4}
 800c2e0:	880a      	ldrh	r2, [r1, #0]
 800c2e2:	8884      	ldrh	r4, [r0, #4]
 800c2e4:	4422      	add	r2, r4
 800c2e6:	800a      	strh	r2, [r1, #0]
 800c2e8:	88c4      	ldrh	r4, [r0, #6]
 800c2ea:	884a      	ldrh	r2, [r1, #2]
 800c2ec:	4422      	add	r2, r4
 800c2ee:	804a      	strh	r2, [r1, #2]
 800c2f0:	6940      	ldr	r0, [r0, #20]
 800c2f2:	b120      	cbz	r0, 800c2fe <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800c2f4:	6803      	ldr	r3, [r0, #0]
 800c2f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c2fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c2fc:	4718      	bx	r3
 800c2fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c302:	4770      	bx	lr

0800c304 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800c304:	b570      	push	{r4, r5, r6, lr}
 800c306:	8882      	ldrh	r2, [r0, #4]
 800c308:	880b      	ldrh	r3, [r1, #0]
 800c30a:	4413      	add	r3, r2
 800c30c:	800b      	strh	r3, [r1, #0]
 800c30e:	88c2      	ldrh	r2, [r0, #6]
 800c310:	884b      	ldrh	r3, [r1, #2]
 800c312:	460c      	mov	r4, r1
 800c314:	4413      	add	r3, r2
 800c316:	804b      	strh	r3, [r1, #2]
 800c318:	4605      	mov	r5, r0
 800c31a:	1d01      	adds	r1, r0, #4
 800c31c:	4620      	mov	r0, r4
 800c31e:	f7fc fe1f 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 800c322:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800c326:	2b00      	cmp	r3, #0
 800c328:	dd0b      	ble.n	800c342 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c32a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c32e:	2b00      	cmp	r3, #0
 800c330:	dd07      	ble.n	800c342 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c332:	6968      	ldr	r0, [r5, #20]
 800c334:	b128      	cbz	r0, 800c342 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c336:	6803      	ldr	r3, [r0, #0]
 800c338:	4621      	mov	r1, r4
 800c33a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c33c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c340:	4718      	bx	r3
 800c342:	bd70      	pop	{r4, r5, r6, pc}

0800c344 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800c344:	b570      	push	{r4, r5, r6, lr}
 800c346:	8882      	ldrh	r2, [r0, #4]
 800c348:	880b      	ldrh	r3, [r1, #0]
 800c34a:	4413      	add	r3, r2
 800c34c:	800b      	strh	r3, [r1, #0]
 800c34e:	88c2      	ldrh	r2, [r0, #6]
 800c350:	884b      	ldrh	r3, [r1, #2]
 800c352:	460c      	mov	r4, r1
 800c354:	4413      	add	r3, r2
 800c356:	804b      	strh	r3, [r1, #2]
 800c358:	4605      	mov	r5, r0
 800c35a:	1d01      	adds	r1, r0, #4
 800c35c:	4620      	mov	r0, r4
 800c35e:	f7fc fdff 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 800c362:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800c366:	2b00      	cmp	r3, #0
 800c368:	dd18      	ble.n	800c39c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800c36a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c36e:	2b00      	cmp	r3, #0
 800c370:	dd14      	ble.n	800c39c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800c372:	6968      	ldr	r0, [r5, #20]
 800c374:	b128      	cbz	r0, 800c382 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800c376:	6803      	ldr	r3, [r0, #0]
 800c378:	4621      	mov	r1, r4
 800c37a:	691b      	ldr	r3, [r3, #16]
 800c37c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c380:	4718      	bx	r3
 800c382:	4b07      	ldr	r3, [pc, #28]	; (800c3a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800c384:	681b      	ldr	r3, [r3, #0]
 800c386:	3304      	adds	r3, #4
 800c388:	429d      	cmp	r5, r3
 800c38a:	d107      	bne.n	800c39c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800c38c:	f7fe fffc 	bl	800b388 <_ZN8touchgfx11Application11getInstanceEv>
 800c390:	6821      	ldr	r1, [r4, #0]
 800c392:	6862      	ldr	r2, [r4, #4]
 800c394:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c398:	f7ff b89c 	b.w	800b4d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c39c:	bd70      	pop	{r4, r5, r6, pc}
 800c39e:	bf00      	nop
 800c3a0:	2000a4d4 	.word	0x2000a4d4

0800c3a4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800c3a4:	b570      	push	{r4, r5, r6, lr}
 800c3a6:	4604      	mov	r4, r0
 800c3a8:	4616      	mov	r6, r2
 800c3aa:	460d      	mov	r5, r1
 800c3ac:	b901      	cbnz	r1, 800c3b0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800c3ae:	b192      	cbz	r2, 800c3d6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800c3b0:	6823      	ldr	r3, [r4, #0]
 800c3b2:	4620      	mov	r0, r4
 800c3b4:	699b      	ldr	r3, [r3, #24]
 800c3b6:	4798      	blx	r3
 800c3b8:	88e2      	ldrh	r2, [r4, #6]
 800c3ba:	88a1      	ldrh	r1, [r4, #4]
 800c3bc:	4432      	add	r2, r6
 800c3be:	4429      	add	r1, r5
 800c3c0:	4620      	mov	r0, r4
 800c3c2:	b212      	sxth	r2, r2
 800c3c4:	b209      	sxth	r1, r1
 800c3c6:	f7fd f899 	bl	80094fc <_ZN8touchgfx8Drawable5setXYEss>
 800c3ca:	6823      	ldr	r3, [r4, #0]
 800c3cc:	4620      	mov	r0, r4
 800c3ce:	699b      	ldr	r3, [r3, #24]
 800c3d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c3d4:	4718      	bx	r3
 800c3d6:	bd70      	pop	{r4, r5, r6, pc}

0800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800c3d8:	b510      	push	{r4, lr}
 800c3da:	4604      	mov	r4, r0
 800c3dc:	4608      	mov	r0, r1
 800c3de:	2300      	movs	r3, #0
 800c3e0:	8023      	strh	r3, [r4, #0]
 800c3e2:	8063      	strh	r3, [r4, #2]
 800c3e4:	6803      	ldr	r3, [r0, #0]
 800c3e6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c3ea:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800c3ee:	80a1      	strh	r1, [r4, #4]
 800c3f0:	80e2      	strh	r2, [r4, #6]
 800c3f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c3f4:	4621      	mov	r1, r4
 800c3f6:	4798      	blx	r3
 800c3f8:	4620      	mov	r0, r4
 800c3fa:	bd10      	pop	{r4, pc}

0800c3fc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800c3fc:	b530      	push	{r4, r5, lr}
 800c3fe:	8083      	strh	r3, [r0, #4]
 800c400:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800c404:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800c408:	7183      	strb	r3, [r0, #6]
 800c40a:	79c3      	ldrb	r3, [r0, #7]
 800c40c:	6101      	str	r1, [r0, #16]
 800c40e:	f365 0306 	bfi	r3, r5, #0, #7
 800c412:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800c416:	8282      	strh	r2, [r0, #20]
 800c418:	f365 13c7 	bfi	r3, r5, #7, #1
 800c41c:	71c3      	strb	r3, [r0, #7]
 800c41e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800c422:	7203      	strb	r3, [r0, #8]
 800c424:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800c428:	7243      	strb	r3, [r0, #9]
 800c42a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c42e:	8143      	strh	r3, [r0, #10]
 800c430:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800c434:	8183      	strh	r3, [r0, #12]
 800c436:	4b01      	ldr	r3, [pc, #4]	; (800c43c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800c438:	6003      	str	r3, [r0, #0]
 800c43a:	bd30      	pop	{r4, r5, pc}
 800c43c:	0801cdb0 	.word	0x0801cdb0

0800c440 <_ZNK8touchgfx9ConstFont4findEt>:
 800c440:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c442:	6904      	ldr	r4, [r0, #16]
 800c444:	b3bc      	cbz	r4, 800c4b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c446:	88a3      	ldrh	r3, [r4, #4]
 800c448:	8a82      	ldrh	r2, [r0, #20]
 800c44a:	1acb      	subs	r3, r1, r3
 800c44c:	f102 32ff 	add.w	r2, r2, #4294967295
 800c450:	d431      	bmi.n	800c4b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c452:	4293      	cmp	r3, r2
 800c454:	dd0c      	ble.n	800c470 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800c456:	230e      	movs	r3, #14
 800c458:	fb03 4302 	mla	r3, r3, r2, r4
 800c45c:	889b      	ldrh	r3, [r3, #4]
 800c45e:	1a5b      	subs	r3, r3, r1
 800c460:	1ad3      	subs	r3, r2, r3
 800c462:	429a      	cmp	r2, r3
 800c464:	db27      	blt.n	800c4b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c466:	2b00      	cmp	r3, #0
 800c468:	bfbc      	itt	lt
 800c46a:	2302      	movlt	r3, #2
 800c46c:	fb92 f3f3 	sdivlt	r3, r2, r3
 800c470:	2500      	movs	r5, #0
 800c472:	260e      	movs	r6, #14
 800c474:	4295      	cmp	r5, r2
 800c476:	dc1e      	bgt.n	800c4b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c478:	fb06 4003 	mla	r0, r6, r3, r4
 800c47c:	8887      	ldrh	r7, [r0, #4]
 800c47e:	42b9      	cmp	r1, r7
 800c480:	d01a      	beq.n	800c4b8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800c482:	d20d      	bcs.n	800c4a0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800c484:	1e5a      	subs	r2, r3, #1
 800c486:	4295      	cmp	r5, r2
 800c488:	dc15      	bgt.n	800c4b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c48a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800c48e:	1a5b      	subs	r3, r3, r1
 800c490:	1ad3      	subs	r3, r2, r3
 800c492:	429a      	cmp	r2, r3
 800c494:	db0f      	blt.n	800c4b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c496:	429d      	cmp	r5, r3
 800c498:	ddec      	ble.n	800c474 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800c49a:	1953      	adds	r3, r2, r5
 800c49c:	105b      	asrs	r3, r3, #1
 800c49e:	e7e9      	b.n	800c474 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800c4a0:	1c5d      	adds	r5, r3, #1
 800c4a2:	42aa      	cmp	r2, r5
 800c4a4:	db07      	blt.n	800c4b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c4a6:	8a43      	ldrh	r3, [r0, #18]
 800c4a8:	1acb      	subs	r3, r1, r3
 800c4aa:	442b      	add	r3, r5
 800c4ac:	429d      	cmp	r5, r3
 800c4ae:	dc02      	bgt.n	800c4b6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c4b0:	429a      	cmp	r2, r3
 800c4b2:	dadf      	bge.n	800c474 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800c4b4:	e7f1      	b.n	800c49a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800c4b6:	2000      	movs	r0, #0
 800c4b8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c4ba <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800c4ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c4bc:	4604      	mov	r4, r0
 800c4be:	4617      	mov	r7, r2
 800c4c0:	461e      	mov	r6, r3
 800c4c2:	b911      	cbnz	r1, 800c4ca <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800c4c4:	2500      	movs	r5, #0
 800c4c6:	4628      	mov	r0, r5
 800c4c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c4ca:	290a      	cmp	r1, #10
 800c4cc:	d0fa      	beq.n	800c4c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c4ce:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c4d2:	4291      	cmp	r1, r2
 800c4d4:	d0f6      	beq.n	800c4c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c4d6:	f242 020b 	movw	r2, #8203	; 0x200b
 800c4da:	4291      	cmp	r1, r2
 800c4dc:	d0f2      	beq.n	800c4c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c4de:	f7ff ffaf 	bl	800c440 <_ZNK8touchgfx9ConstFont4findEt>
 800c4e2:	4605      	mov	r5, r0
 800c4e4:	b950      	cbnz	r0, 800c4fc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800c4e6:	6823      	ldr	r3, [r4, #0]
 800c4e8:	4620      	mov	r0, r4
 800c4ea:	691b      	ldr	r3, [r3, #16]
 800c4ec:	4798      	blx	r3
 800c4ee:	4601      	mov	r1, r0
 800c4f0:	4620      	mov	r0, r4
 800c4f2:	f7ff ffa5 	bl	800c440 <_ZNK8touchgfx9ConstFont4findEt>
 800c4f6:	4605      	mov	r5, r0
 800c4f8:	2800      	cmp	r0, #0
 800c4fa:	d0e3      	beq.n	800c4c4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c4fc:	6823      	ldr	r3, [r4, #0]
 800c4fe:	4629      	mov	r1, r5
 800c500:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c502:	4620      	mov	r0, r4
 800c504:	4798      	blx	r3
 800c506:	6038      	str	r0, [r7, #0]
 800c508:	6823      	ldr	r3, [r4, #0]
 800c50a:	4620      	mov	r0, r4
 800c50c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c50e:	4798      	blx	r3
 800c510:	7030      	strb	r0, [r6, #0]
 800c512:	e7d8      	b.n	800c4c6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800c514 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800c514:	2000      	movs	r0, #0
 800c516:	4770      	bx	lr

0800c518 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800c518:	2001      	movs	r0, #1
 800c51a:	4770      	bx	lr

0800c51c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800c51c:	2002      	movs	r0, #2
 800c51e:	4770      	bx	lr

0800c520 <_ZN8touchgfx6ScreenD1Ev>:
 800c520:	4770      	bx	lr

0800c522 <_ZN8touchgfx12GestureEventD1Ev>:
 800c522:	4770      	bx	lr

0800c524 <_ZN8touchgfx9DragEventD1Ev>:
 800c524:	4770      	bx	lr

0800c526 <_ZN8touchgfx10ClickEventD1Ev>:
 800c526:	4770      	bx	lr

0800c528 <_ZN8touchgfx10ClickEventD0Ev>:
 800c528:	b510      	push	{r4, lr}
 800c52a:	210c      	movs	r1, #12
 800c52c:	4604      	mov	r4, r0
 800c52e:	f00d fc4a 	bl	8019dc6 <_ZdlPvj>
 800c532:	4620      	mov	r0, r4
 800c534:	bd10      	pop	{r4, pc}

0800c536 <_ZN8touchgfx9DragEventD0Ev>:
 800c536:	b510      	push	{r4, lr}
 800c538:	2110      	movs	r1, #16
 800c53a:	4604      	mov	r4, r0
 800c53c:	f00d fc43 	bl	8019dc6 <_ZdlPvj>
 800c540:	4620      	mov	r0, r4
 800c542:	bd10      	pop	{r4, pc}

0800c544 <_ZN8touchgfx12GestureEventD0Ev>:
 800c544:	b510      	push	{r4, lr}
 800c546:	210c      	movs	r1, #12
 800c548:	4604      	mov	r4, r0
 800c54a:	f00d fc3c 	bl	8019dc6 <_ZdlPvj>
 800c54e:	4620      	mov	r0, r4
 800c550:	bd10      	pop	{r4, pc}

0800c552 <_ZN8touchgfx6ScreenD0Ev>:
 800c552:	b510      	push	{r4, lr}
 800c554:	213c      	movs	r1, #60	; 0x3c
 800c556:	4604      	mov	r4, r0
 800c558:	f00d fc35 	bl	8019dc6 <_ZdlPvj>
 800c55c:	4620      	mov	r0, r4
 800c55e:	bd10      	pop	{r4, pc}

0800c560 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800c560:	b530      	push	{r4, r5, lr}
 800c562:	460d      	mov	r5, r1
 800c564:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800c566:	b087      	sub	sp, #28
 800c568:	4604      	mov	r4, r0
 800c56a:	b301      	cbz	r1, 800c5ae <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800c56c:	a801      	add	r0, sp, #4
 800c56e:	f7ff ff33 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c572:	892a      	ldrh	r2, [r5, #8]
 800c574:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c578:	7928      	ldrb	r0, [r5, #4]
 800c57a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800c57e:	f88d 0010 	strb.w	r0, [sp, #16]
 800c582:	1ad2      	subs	r2, r2, r3
 800c584:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c586:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800c588:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c58c:	441a      	add	r2, r3
 800c58e:	896b      	ldrh	r3, [r5, #10]
 800c590:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800c594:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c598:	1b5b      	subs	r3, r3, r5
 800c59a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800c59c:	442b      	add	r3, r5
 800c59e:	4d05      	ldr	r5, [pc, #20]	; (800c5b4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800c5a0:	9503      	str	r5, [sp, #12]
 800c5a2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c5a6:	6803      	ldr	r3, [r0, #0]
 800c5a8:	a903      	add	r1, sp, #12
 800c5aa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c5ac:	4798      	blx	r3
 800c5ae:	b007      	add	sp, #28
 800c5b0:	bd30      	pop	{r4, r5, pc}
 800c5b2:	bf00      	nop
 800c5b4:	0801ce30 	.word	0x0801ce30

0800c5b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800c5b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5bc:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800c5be:	b08a      	sub	sp, #40	; 0x28
 800c5c0:	4604      	mov	r4, r0
 800c5c2:	460d      	mov	r5, r1
 800c5c4:	b113      	cbz	r3, 800c5cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800c5c6:	790b      	ldrb	r3, [r1, #4]
 800c5c8:	2b00      	cmp	r3, #0
 800c5ca:	d044      	beq.n	800c656 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800c5cc:	f104 0804 	add.w	r8, r4, #4
 800c5d0:	4641      	mov	r1, r8
 800c5d2:	a803      	add	r0, sp, #12
 800c5d4:	f7ff ff00 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c5d8:	792b      	ldrb	r3, [r5, #4]
 800c5da:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800c5de:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800c5e2:	b983      	cbnz	r3, 800c606 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800c5e4:	892a      	ldrh	r2, [r5, #8]
 800c5e6:	88e9      	ldrh	r1, [r5, #6]
 800c5e8:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800c5ec:	1b92      	subs	r2, r2, r6
 800c5ee:	1bc9      	subs	r1, r1, r7
 800c5f0:	9301      	str	r3, [sp, #4]
 800c5f2:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800c5f6:	9300      	str	r3, [sp, #0]
 800c5f8:	b212      	sxth	r2, r2
 800c5fa:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800c5fe:	b209      	sxth	r1, r1
 800c600:	4640      	mov	r0, r8
 800c602:	f7fc fbc9 	bl	8008d98 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800c606:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c608:	b329      	cbz	r1, 800c656 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800c60a:	a805      	add	r0, sp, #20
 800c60c:	f7ff fee4 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c610:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c614:	792b      	ldrb	r3, [r5, #4]
 800c616:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800c618:	f88d 3020 	strb.w	r3, [sp, #32]
 800c61c:	1abf      	subs	r7, r7, r2
 800c61e:	88ea      	ldrh	r2, [r5, #6]
 800c620:	4417      	add	r7, r2
 800c622:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800c624:	4417      	add	r7, r2
 800c626:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800c62a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800c62e:	1ab6      	subs	r6, r6, r2
 800c630:	892a      	ldrh	r2, [r5, #8]
 800c632:	4416      	add	r6, r2
 800c634:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c636:	4416      	add	r6, r2
 800c638:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800c63c:	4a07      	ldr	r2, [pc, #28]	; (800c65c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800c63e:	9207      	str	r2, [sp, #28]
 800c640:	2600      	movs	r6, #0
 800c642:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800c646:	6803      	ldr	r3, [r0, #0]
 800c648:	a907      	add	r1, sp, #28
 800c64a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c64c:	4798      	blx	r3
 800c64e:	792b      	ldrb	r3, [r5, #4]
 800c650:	b10b      	cbz	r3, 800c656 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800c652:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c656:	b00a      	add	sp, #40	; 0x28
 800c658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c65c:	0801ce08 	.word	0x0801ce08

0800c660 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800c660:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c664:	460c      	mov	r4, r1
 800c666:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800c668:	b088      	sub	sp, #32
 800c66a:	4605      	mov	r5, r0
 800c66c:	2900      	cmp	r1, #0
 800c66e:	d06d      	beq.n	800c74c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800c670:	4668      	mov	r0, sp
 800c672:	f7ff feb1 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c676:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800c678:	88e3      	ldrh	r3, [r4, #6]
 800c67a:	f9bd 8000 	ldrsh.w	r8, [sp]
 800c67e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800c682:	440b      	add	r3, r1
 800c684:	b21b      	sxth	r3, r3
 800c686:	4543      	cmp	r3, r8
 800c688:	db31      	blt.n	800c6ee <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800c68a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800c68e:	44c4      	add	ip, r8
 800c690:	fa0f fc8c 	sxth.w	ip, ip
 800c694:	4563      	cmp	r3, ip
 800c696:	da2a      	bge.n	800c6ee <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800c698:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800c69a:	8926      	ldrh	r6, [r4, #8]
 800c69c:	4416      	add	r6, r2
 800c69e:	b236      	sxth	r6, r6
 800c6a0:	42be      	cmp	r6, r7
 800c6a2:	db24      	blt.n	800c6ee <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800c6a4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800c6a8:	4438      	add	r0, r7
 800c6aa:	b200      	sxth	r0, r0
 800c6ac:	4286      	cmp	r6, r0
 800c6ae:	da1e      	bge.n	800c6ee <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800c6b0:	8963      	ldrh	r3, [r4, #10]
 800c6b2:	4419      	add	r1, r3
 800c6b4:	b209      	sxth	r1, r1
 800c6b6:	4541      	cmp	r1, r8
 800c6b8:	db08      	blt.n	800c6cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800c6ba:	4561      	cmp	r1, ip
 800c6bc:	da06      	bge.n	800c6cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800c6be:	89a3      	ldrh	r3, [r4, #12]
 800c6c0:	441a      	add	r2, r3
 800c6c2:	b212      	sxth	r2, r2
 800c6c4:	42ba      	cmp	r2, r7
 800c6c6:	db01      	blt.n	800c6cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800c6c8:	4282      	cmp	r2, r0
 800c6ca:	db10      	blt.n	800c6ee <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800c6cc:	4b21      	ldr	r3, [pc, #132]	; (800c754 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800c6ce:	9304      	str	r3, [sp, #16]
 800c6d0:	2302      	movs	r3, #2
 800c6d2:	f88d 3014 	strb.w	r3, [sp, #20]
 800c6d6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c6d8:	2300      	movs	r3, #0
 800c6da:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c6de:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c6e2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c6e6:	6803      	ldr	r3, [r0, #0]
 800c6e8:	a904      	add	r1, sp, #16
 800c6ea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c6ec:	4798      	blx	r3
 800c6ee:	1d29      	adds	r1, r5, #4
 800c6f0:	a802      	add	r0, sp, #8
 800c6f2:	f7ff fe71 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c6f6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800c6fa:	88e0      	ldrh	r0, [r4, #6]
 800c6fc:	7921      	ldrb	r1, [r4, #4]
 800c6fe:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800c702:	8922      	ldrh	r2, [r4, #8]
 800c704:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800c706:	f88d 1014 	strb.w	r1, [sp, #20]
 800c70a:	eba3 0808 	sub.w	r8, r3, r8
 800c70e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800c712:	1bdf      	subs	r7, r3, r7
 800c714:	b2bb      	uxth	r3, r7
 800c716:	fa1f f888 	uxth.w	r8, r8
 800c71a:	8967      	ldrh	r7, [r4, #10]
 800c71c:	89a4      	ldrh	r4, [r4, #12]
 800c71e:	4440      	add	r0, r8
 800c720:	4460      	add	r0, ip
 800c722:	441a      	add	r2, r3
 800c724:	44b8      	add	r8, r7
 800c726:	4423      	add	r3, r4
 800c728:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c72c:	4433      	add	r3, r6
 800c72e:	4432      	add	r2, r6
 800c730:	44e0      	add	r8, ip
 800c732:	4c09      	ldr	r4, [pc, #36]	; (800c758 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800c734:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c736:	9404      	str	r4, [sp, #16]
 800c738:	f8ad 2018 	strh.w	r2, [sp, #24]
 800c73c:	f8ad 801a 	strh.w	r8, [sp, #26]
 800c740:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c744:	6803      	ldr	r3, [r0, #0]
 800c746:	a904      	add	r1, sp, #16
 800c748:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c74a:	4798      	blx	r3
 800c74c:	b008      	add	sp, #32
 800c74e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c752:	bf00      	nop
 800c754:	0801ce08 	.word	0x0801ce08
 800c758:	0801ce1c 	.word	0x0801ce1c

0800c75c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800c75c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c75e:	4604      	mov	r4, r0
 800c760:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800c764:	3201      	adds	r2, #1
 800c766:	d112      	bne.n	800c78e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800c768:	6803      	ldr	r3, [r0, #0]
 800c76a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800c76e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c772:	f8ad 1004 	strh.w	r1, [sp, #4]
 800c776:	2500      	movs	r5, #0
 800c778:	9500      	str	r5, [sp, #0]
 800c77a:	466d      	mov	r5, sp
 800c77c:	4629      	mov	r1, r5
 800c77e:	f8ad 2006 	strh.w	r2, [sp, #6]
 800c782:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c784:	4798      	blx	r3
 800c786:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c78a:	e884 0003 	stmia.w	r4, {r0, r1}
 800c78e:	4620      	mov	r0, r4
 800c790:	b003      	add	sp, #12
 800c792:	bd30      	pop	{r4, r5, pc}

0800c794 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800c794:	b513      	push	{r0, r1, r4, lr}
 800c796:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800c79a:	3301      	adds	r3, #1
 800c79c:	4604      	mov	r4, r0
 800c79e:	d109      	bne.n	800c7b4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800c7a0:	4601      	mov	r1, r0
 800c7a2:	4668      	mov	r0, sp
 800c7a4:	f7ff fe18 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c7a8:	f8bd 3000 	ldrh.w	r3, [sp]
 800c7ac:	8423      	strh	r3, [r4, #32]
 800c7ae:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c7b2:	8463      	strh	r3, [r4, #34]	; 0x22
 800c7b4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800c7b8:	b002      	add	sp, #8
 800c7ba:	bd10      	pop	{r4, pc}

0800c7bc <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800c7bc:	b513      	push	{r0, r1, r4, lr}
 800c7be:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800c7c2:	3301      	adds	r3, #1
 800c7c4:	4604      	mov	r4, r0
 800c7c6:	d109      	bne.n	800c7dc <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800c7c8:	4601      	mov	r1, r0
 800c7ca:	4668      	mov	r0, sp
 800c7cc:	f7ff fe04 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c7d0:	f8bd 3000 	ldrh.w	r3, [sp]
 800c7d4:	8423      	strh	r3, [r4, #32]
 800c7d6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c7da:	8463      	strh	r3, [r4, #34]	; 0x22
 800c7dc:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800c7e0:	b002      	add	sp, #8
 800c7e2:	bd10      	pop	{r4, pc}

0800c7e4 <_ZN8touchgfx6ScreenC1Ev>:
 800c7e4:	b570      	push	{r4, r5, r6, lr}
 800c7e6:	4605      	mov	r5, r0
 800c7e8:	4b16      	ldr	r3, [pc, #88]	; (800c844 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800c7ea:	f845 3b04 	str.w	r3, [r5], #4
 800c7ee:	2300      	movs	r3, #0
 800c7f0:	8103      	strh	r3, [r0, #8]
 800c7f2:	8143      	strh	r3, [r0, #10]
 800c7f4:	8183      	strh	r3, [r0, #12]
 800c7f6:	81c3      	strh	r3, [r0, #14]
 800c7f8:	8203      	strh	r3, [r0, #16]
 800c7fa:	8243      	strh	r3, [r0, #18]
 800c7fc:	8283      	strh	r3, [r0, #20]
 800c7fe:	82c3      	strh	r3, [r0, #22]
 800c800:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800c804:	6203      	str	r3, [r0, #32]
 800c806:	8483      	strh	r3, [r0, #36]	; 0x24
 800c808:	84c3      	strh	r3, [r0, #38]	; 0x26
 800c80a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800c80e:	4a0e      	ldr	r2, [pc, #56]	; (800c848 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800c810:	6343      	str	r3, [r0, #52]	; 0x34
 800c812:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800c816:	4b0d      	ldr	r3, [pc, #52]	; (800c84c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800c818:	6042      	str	r2, [r0, #4]
 800c81a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800c81e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800c820:	4a0b      	ldr	r2, [pc, #44]	; (800c850 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800c822:	4604      	mov	r4, r0
 800c824:	2101      	movs	r1, #1
 800c826:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800c82a:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800c82e:	f9b2 1000 	ldrsh.w	r1, [r2]
 800c832:	4628      	mov	r0, r5
 800c834:	4798      	blx	r3
 800c836:	6863      	ldr	r3, [r4, #4]
 800c838:	4628      	mov	r0, r5
 800c83a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c83c:	4631      	mov	r1, r6
 800c83e:	4798      	blx	r3
 800c840:	4620      	mov	r0, r4
 800c842:	bd70      	pop	{r4, r5, r6, pc}
 800c844:	0801ce44 	.word	0x0801ce44
 800c848:	0801c20c 	.word	0x0801c20c
 800c84c:	2000a48e 	.word	0x2000a48e
 800c850:	2000a48c 	.word	0x2000a48c

0800c854 <_ZN8touchgfx6Screen4drawEv>:
 800c854:	b507      	push	{r0, r1, r2, lr}
 800c856:	4b09      	ldr	r3, [pc, #36]	; (800c87c <_ZN8touchgfx6Screen4drawEv+0x28>)
 800c858:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c85c:	4b08      	ldr	r3, [pc, #32]	; (800c880 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800c85e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c862:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c866:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c86a:	6803      	ldr	r3, [r0, #0]
 800c86c:	2100      	movs	r1, #0
 800c86e:	9100      	str	r1, [sp, #0]
 800c870:	689b      	ldr	r3, [r3, #8]
 800c872:	4669      	mov	r1, sp
 800c874:	4798      	blx	r3
 800c876:	b003      	add	sp, #12
 800c878:	f85d fb04 	ldr.w	pc, [sp], #4
 800c87c:	2000a48c 	.word	0x2000a48c
 800c880:	2000a48e 	.word	0x2000a48e

0800c884 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800c884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c888:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800c88c:	2b00      	cmp	r3, #0
 800c88e:	b089      	sub	sp, #36	; 0x24
 800c890:	4680      	mov	r8, r0
 800c892:	460c      	mov	r4, r1
 800c894:	4615      	mov	r5, r2
 800c896:	dd0e      	ble.n	800c8b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c898:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c89c:	2b00      	cmp	r3, #0
 800c89e:	dd0a      	ble.n	800c8b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c8a0:	4628      	mov	r0, r5
 800c8a2:	f7ff ff5b 	bl	800c75c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c8a6:	4621      	mov	r1, r4
 800c8a8:	f7fe fc90 	bl	800b1cc <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c8ac:	69eb      	ldr	r3, [r5, #28]
 800c8ae:	b928      	cbnz	r0, 800c8bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800c8b0:	461d      	mov	r5, r3
 800c8b2:	2b00      	cmp	r3, #0
 800c8b4:	d1f4      	bne.n	800c8a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800c8b6:	b009      	add	sp, #36	; 0x24
 800c8b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8bc:	ae04      	add	r6, sp, #16
 800c8be:	2b00      	cmp	r3, #0
 800c8c0:	f000 80b5 	beq.w	800ca2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800c8c4:	682b      	ldr	r3, [r5, #0]
 800c8c6:	4629      	mov	r1, r5
 800c8c8:	68db      	ldr	r3, [r3, #12]
 800c8ca:	a802      	add	r0, sp, #8
 800c8cc:	4798      	blx	r3
 800c8ce:	4628      	mov	r0, r5
 800c8d0:	f7ff ff60 	bl	800c794 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800c8d4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800c8d8:	4407      	add	r7, r0
 800c8da:	4628      	mov	r0, r5
 800c8dc:	f7ff ff6e 	bl	800c7bc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800c8e0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800c8e4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800c8e8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c8ec:	4418      	add	r0, r3
 800c8ee:	4621      	mov	r1, r4
 800c8f0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c8f4:	f8ad 0012 	strh.w	r0, [sp, #18]
 800c8f8:	b23f      	sxth	r7, r7
 800c8fa:	4630      	mov	r0, r6
 800c8fc:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c900:	f8ad 7010 	strh.w	r7, [sp, #16]
 800c904:	f7fc fb2c 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 800c908:	4628      	mov	r0, r5
 800c90a:	f7ff ff27 	bl	800c75c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c90e:	4602      	mov	r2, r0
 800c910:	e896 0003 	ldmia.w	r6, {r0, r1}
 800c914:	ab06      	add	r3, sp, #24
 800c916:	e883 0003 	stmia.w	r3, {r0, r1}
 800c91a:	4611      	mov	r1, r2
 800c91c:	4618      	mov	r0, r3
 800c91e:	f7fc fb1f 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 800c922:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c926:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c92a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800c92e:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800c932:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800c936:	4299      	cmp	r1, r3
 800c938:	d10b      	bne.n	800c952 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800c93a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800c93e:	4552      	cmp	r2, sl
 800c940:	d107      	bne.n	800c952 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800c942:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800c946:	455a      	cmp	r2, fp
 800c948:	d103      	bne.n	800c952 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800c94a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c94e:	454a      	cmp	r2, r9
 800c950:	d06d      	beq.n	800ca2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800c952:	f1bb 0f00 	cmp.w	fp, #0
 800c956:	dd65      	ble.n	800ca24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800c958:	f1b9 0f00 	cmp.w	r9, #0
 800c95c:	dd62      	ble.n	800ca24 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800c95e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800c962:	fa1f f08a 	uxth.w	r0, sl
 800c966:	4552      	cmp	r2, sl
 800c968:	9000      	str	r0, [sp, #0]
 800c96a:	da12      	bge.n	800c992 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800c96c:	9301      	str	r3, [sp, #4]
 800c96e:	9b00      	ldr	r3, [sp, #0]
 800c970:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800c974:	f8ad 2012 	strh.w	r2, [sp, #18]
 800c978:	1a9a      	subs	r2, r3, r2
 800c97a:	f8ad 1010 	strh.w	r1, [sp, #16]
 800c97e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c982:	f8ad 2016 	strh.w	r2, [sp, #22]
 800c986:	69ea      	ldr	r2, [r5, #28]
 800c988:	4631      	mov	r1, r6
 800c98a:	4640      	mov	r0, r8
 800c98c:	f7ff ff7a 	bl	800c884 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c990:	9b01      	ldr	r3, [sp, #4]
 800c992:	f9b4 2000 	ldrsh.w	r2, [r4]
 800c996:	429a      	cmp	r2, r3
 800c998:	b29f      	uxth	r7, r3
 800c99a:	da0d      	bge.n	800c9b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800c99c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c9a0:	1aba      	subs	r2, r7, r2
 800c9a2:	f8ad a012 	strh.w	sl, [sp, #18]
 800c9a6:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c9aa:	f8ad 9016 	strh.w	r9, [sp, #22]
 800c9ae:	69ea      	ldr	r2, [r5, #28]
 800c9b0:	4631      	mov	r1, r6
 800c9b2:	4640      	mov	r0, r8
 800c9b4:	f7ff ff66 	bl	800c884 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c9b8:	8822      	ldrh	r2, [r4, #0]
 800c9ba:	88a3      	ldrh	r3, [r4, #4]
 800c9bc:	445f      	add	r7, fp
 800c9be:	4413      	add	r3, r2
 800c9c0:	b29b      	uxth	r3, r3
 800c9c2:	b2bf      	uxth	r7, r7
 800c9c4:	b23a      	sxth	r2, r7
 800c9c6:	b219      	sxth	r1, r3
 800c9c8:	4291      	cmp	r1, r2
 800c9ca:	dd0d      	ble.n	800c9e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800c9cc:	1bdb      	subs	r3, r3, r7
 800c9ce:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c9d2:	f8ad a012 	strh.w	sl, [sp, #18]
 800c9d6:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c9da:	f8ad 9016 	strh.w	r9, [sp, #22]
 800c9de:	69ea      	ldr	r2, [r5, #28]
 800c9e0:	4631      	mov	r1, r6
 800c9e2:	4640      	mov	r0, r8
 800c9e4:	f7ff ff4e 	bl	800c884 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c9e8:	88e2      	ldrh	r2, [r4, #6]
 800c9ea:	8863      	ldrh	r3, [r4, #2]
 800c9ec:	4413      	add	r3, r2
 800c9ee:	9a00      	ldr	r2, [sp, #0]
 800c9f0:	444a      	add	r2, r9
 800c9f2:	b29b      	uxth	r3, r3
 800c9f4:	fa1f f982 	uxth.w	r9, r2
 800c9f8:	fa0f f289 	sxth.w	r2, r9
 800c9fc:	b219      	sxth	r1, r3
 800c9fe:	428a      	cmp	r2, r1
 800ca00:	da15      	bge.n	800ca2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800ca02:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ca06:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ca0a:	f8ad 1014 	strh.w	r1, [sp, #20]
 800ca0e:	eba3 0309 	sub.w	r3, r3, r9
 800ca12:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ca16:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ca1a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ca1e:	69ea      	ldr	r2, [r5, #28]
 800ca20:	4631      	mov	r1, r6
 800ca22:	e001      	b.n	800ca28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800ca24:	69ea      	ldr	r2, [r5, #28]
 800ca26:	4621      	mov	r1, r4
 800ca28:	4640      	mov	r0, r8
 800ca2a:	f7ff ff2b 	bl	800c884 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800ca2e:	4628      	mov	r0, r5
 800ca30:	f7ff fe94 	bl	800c75c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800ca34:	6861      	ldr	r1, [r4, #4]
 800ca36:	4602      	mov	r2, r0
 800ca38:	6820      	ldr	r0, [r4, #0]
 800ca3a:	4633      	mov	r3, r6
 800ca3c:	c303      	stmia	r3!, {r0, r1}
 800ca3e:	4611      	mov	r1, r2
 800ca40:	4630      	mov	r0, r6
 800ca42:	f7fc fa8d 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 800ca46:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800ca4a:	2b00      	cmp	r3, #0
 800ca4c:	f77f af33 	ble.w	800c8b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ca50:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ca54:	2b00      	cmp	r3, #0
 800ca56:	f77f af2e 	ble.w	800c8b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800ca5a:	4628      	mov	r0, r5
 800ca5c:	f7ff fe9a 	bl	800c794 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800ca60:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800ca64:	1a18      	subs	r0, r3, r0
 800ca66:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ca6a:	4628      	mov	r0, r5
 800ca6c:	f7ff fea6 	bl	800c7bc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800ca70:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ca74:	1a18      	subs	r0, r3, r0
 800ca76:	f8ad 0012 	strh.w	r0, [sp, #18]
 800ca7a:	682b      	ldr	r3, [r5, #0]
 800ca7c:	4631      	mov	r1, r6
 800ca7e:	689b      	ldr	r3, [r3, #8]
 800ca80:	4628      	mov	r0, r5
 800ca82:	4798      	blx	r3
 800ca84:	e717      	b.n	800c8b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800ca86 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800ca86:	b570      	push	{r4, r5, r6, lr}
 800ca88:	460c      	mov	r4, r1
 800ca8a:	b086      	sub	sp, #24
 800ca8c:	1d06      	adds	r6, r0, #4
 800ca8e:	2300      	movs	r3, #0
 800ca90:	4631      	mov	r1, r6
 800ca92:	4605      	mov	r5, r0
 800ca94:	a802      	add	r0, sp, #8
 800ca96:	9301      	str	r3, [sp, #4]
 800ca98:	f7ff fc9e 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ca9c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800caa0:	8822      	ldrh	r2, [r4, #0]
 800caa2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800caa6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800caaa:	f8ad 0014 	strh.w	r0, [sp, #20]
 800caae:	1ad2      	subs	r2, r2, r3
 800cab0:	8863      	ldrh	r3, [r4, #2]
 800cab2:	f8ad 2010 	strh.w	r2, [sp, #16]
 800cab6:	1a5b      	subs	r3, r3, r1
 800cab8:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800cabc:	f8ad 1016 	strh.w	r1, [sp, #22]
 800cac0:	aa01      	add	r2, sp, #4
 800cac2:	a904      	add	r1, sp, #16
 800cac4:	4630      	mov	r0, r6
 800cac6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800caca:	f7fc fb21 	bl	8009110 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800cace:	9a01      	ldr	r2, [sp, #4]
 800cad0:	b11a      	cbz	r2, 800cada <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800cad2:	4621      	mov	r1, r4
 800cad4:	4628      	mov	r0, r5
 800cad6:	f7ff fed5 	bl	800c884 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cada:	b006      	add	sp, #24
 800cadc:	bd70      	pop	{r4, r5, r6, pc}

0800cade <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800cade:	b530      	push	{r4, r5, lr}
 800cae0:	4602      	mov	r2, r0
 800cae2:	4604      	mov	r4, r0
 800cae4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800cae8:	b085      	sub	sp, #20
 800caea:	460d      	mov	r5, r1
 800caec:	6851      	ldr	r1, [r2, #4]
 800caee:	466b      	mov	r3, sp
 800caf0:	c303      	stmia	r3!, {r0, r1}
 800caf2:	4629      	mov	r1, r5
 800caf4:	4668      	mov	r0, sp
 800caf6:	f7fc fa33 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 800cafa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cafe:	b12b      	cbz	r3, 800cb0c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800cb00:	4669      	mov	r1, sp
 800cb02:	4620      	mov	r0, r4
 800cb04:	f7ff ffbf 	bl	800ca86 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800cb08:	b005      	add	sp, #20
 800cb0a:	bd30      	pop	{r4, r5, pc}
 800cb0c:	3404      	adds	r4, #4
 800cb0e:	4621      	mov	r1, r4
 800cb10:	a802      	add	r0, sp, #8
 800cb12:	f7ff fc61 	bl	800c3d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cb16:	f8bd 3000 	ldrh.w	r3, [sp]
 800cb1a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800cb1e:	1a9b      	subs	r3, r3, r2
 800cb20:	f8ad 3000 	strh.w	r3, [sp]
 800cb24:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800cb28:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800cb2c:	4669      	mov	r1, sp
 800cb2e:	1a9b      	subs	r3, r3, r2
 800cb30:	4620      	mov	r0, r4
 800cb32:	f8ad 3002 	strh.w	r3, [sp, #2]
 800cb36:	f7fc fab2 	bl	800909e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800cb3a:	e7e5      	b.n	800cb08 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800cb3c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800cb3c:	680a      	ldr	r2, [r1, #0]
 800cb3e:	460b      	mov	r3, r1
 800cb40:	6992      	ldr	r2, [r2, #24]
 800cb42:	1d01      	adds	r1, r0, #4
 800cb44:	4618      	mov	r0, r3
 800cb46:	4710      	bx	r2

0800cb48 <_ZN8touchgfx12TextProviderC1Ev>:
 800cb48:	b538      	push	{r3, r4, r5, lr}
 800cb4a:	2500      	movs	r5, #0
 800cb4c:	2302      	movs	r3, #2
 800cb4e:	4604      	mov	r4, r0
 800cb50:	e9c0 5500 	strd	r5, r5, [r0]
 800cb54:	7403      	strb	r3, [r0, #16]
 800cb56:	6145      	str	r5, [r0, #20]
 800cb58:	7605      	strb	r5, [r0, #24]
 800cb5a:	83c5      	strh	r5, [r0, #30]
 800cb5c:	8405      	strh	r5, [r0, #32]
 800cb5e:	86c5      	strh	r5, [r0, #54]	; 0x36
 800cb60:	8705      	strh	r5, [r0, #56]	; 0x38
 800cb62:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800cb64:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800cb68:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800cb6c:	220e      	movs	r2, #14
 800cb6e:	4629      	mov	r1, r5
 800cb70:	304c      	adds	r0, #76	; 0x4c
 800cb72:	f00d f9e3 	bl	8019f3c <memset>
 800cb76:	2301      	movs	r3, #1
 800cb78:	4620      	mov	r0, r4
 800cb7a:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800cb7e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800cb82:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800cb86:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800cb8a:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800cb8e:	f7f5 fded 	bl	800276c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800cb92:	4620      	mov	r0, r4
 800cb94:	bd38      	pop	{r3, r4, r5, pc}

0800cb96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800cb96:	b530      	push	{r4, r5, lr}
 800cb98:	2500      	movs	r5, #0
 800cb9a:	2401      	movs	r4, #1
 800cb9c:	6843      	ldr	r3, [r0, #4]
 800cb9e:	b913      	cbnz	r3, 800cba6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800cba0:	6803      	ldr	r3, [r0, #0]
 800cba2:	b313      	cbz	r3, 800cbea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800cba4:	6043      	str	r3, [r0, #4]
 800cba6:	7e03      	ldrb	r3, [r0, #24]
 800cba8:	b143      	cbz	r3, 800cbbc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800cbaa:	6943      	ldr	r3, [r0, #20]
 800cbac:	b12b      	cbz	r3, 800cbba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800cbae:	881a      	ldrh	r2, [r3, #0]
 800cbb0:	b11a      	cbz	r2, 800cbba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800cbb2:	1c9a      	adds	r2, r3, #2
 800cbb4:	6142      	str	r2, [r0, #20]
 800cbb6:	8818      	ldrh	r0, [r3, #0]
 800cbb8:	bd30      	pop	{r4, r5, pc}
 800cbba:	7605      	strb	r5, [r0, #24]
 800cbbc:	6843      	ldr	r3, [r0, #4]
 800cbbe:	8819      	ldrh	r1, [r3, #0]
 800cbc0:	b199      	cbz	r1, 800cbea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800cbc2:	1c9a      	adds	r2, r3, #2
 800cbc4:	2902      	cmp	r1, #2
 800cbc6:	6042      	str	r2, [r0, #4]
 800cbc8:	d1f5      	bne.n	800cbb6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800cbca:	7c03      	ldrb	r3, [r0, #16]
 800cbcc:	2b01      	cmp	r3, #1
 800cbce:	d8e5      	bhi.n	800cb9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800cbd0:	1c5a      	adds	r2, r3, #1
 800cbd2:	3302      	adds	r3, #2
 800cbd4:	7402      	strb	r2, [r0, #16]
 800cbd6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800cbda:	6143      	str	r3, [r0, #20]
 800cbdc:	2b00      	cmp	r3, #0
 800cbde:	d0dd      	beq.n	800cb9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800cbe0:	881b      	ldrh	r3, [r3, #0]
 800cbe2:	2b00      	cmp	r3, #0
 800cbe4:	d0da      	beq.n	800cb9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800cbe6:	7604      	strb	r4, [r0, #24]
 800cbe8:	e7d8      	b.n	800cb9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800cbea:	2000      	movs	r0, #0
 800cbec:	e7e4      	b.n	800cbb8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800cbee <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800cbee:	b430      	push	{r4, r5}
 800cbf0:	6001      	str	r1, [r0, #0]
 800cbf2:	2100      	movs	r1, #0
 800cbf4:	6041      	str	r1, [r0, #4]
 800cbf6:	6815      	ldr	r5, [r2, #0]
 800cbf8:	6085      	str	r5, [r0, #8]
 800cbfa:	6852      	ldr	r2, [r2, #4]
 800cbfc:	6443      	str	r3, [r0, #68]	; 0x44
 800cbfe:	9b02      	ldr	r3, [sp, #8]
 800cc00:	60c2      	str	r2, [r0, #12]
 800cc02:	7401      	strb	r1, [r0, #16]
 800cc04:	6141      	str	r1, [r0, #20]
 800cc06:	7601      	strb	r1, [r0, #24]
 800cc08:	8701      	strh	r1, [r0, #56]	; 0x38
 800cc0a:	8401      	strh	r1, [r0, #32]
 800cc0c:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800cc10:	6483      	str	r3, [r0, #72]	; 0x48
 800cc12:	bc30      	pop	{r4, r5}
 800cc14:	f7f5 bdaa 	b.w	800276c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800cc18 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800cc18:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cc1a:	4605      	mov	r5, r0
 800cc1c:	4608      	mov	r0, r1
 800cc1e:	b1e9      	cbz	r1, 800cc5c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800cc20:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800cc24:	460b      	mov	r3, r1
 800cc26:	f101 0708 	add.w	r7, r1, #8
 800cc2a:	4622      	mov	r2, r4
 800cc2c:	6818      	ldr	r0, [r3, #0]
 800cc2e:	6859      	ldr	r1, [r3, #4]
 800cc30:	4626      	mov	r6, r4
 800cc32:	c603      	stmia	r6!, {r0, r1}
 800cc34:	3308      	adds	r3, #8
 800cc36:	42bb      	cmp	r3, r7
 800cc38:	4634      	mov	r4, r6
 800cc3a:	d1f7      	bne.n	800cc2c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800cc3c:	6818      	ldr	r0, [r3, #0]
 800cc3e:	6030      	str	r0, [r6, #0]
 800cc40:	889b      	ldrh	r3, [r3, #4]
 800cc42:	80b3      	strh	r3, [r6, #4]
 800cc44:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800cc48:	015b      	lsls	r3, r3, #5
 800cc4a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800cc4e:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800cc52:	430b      	orrs	r3, r1
 800cc54:	425b      	negs	r3, r3
 800cc56:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800cc5a:	4610      	mov	r0, r2
 800cc5c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cc5e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800cc5e:	b538      	push	{r3, r4, r5, lr}
 800cc60:	460c      	mov	r4, r1
 800cc62:	6811      	ldr	r1, [r2, #0]
 800cc64:	4610      	mov	r0, r2
 800cc66:	68cd      	ldr	r5, [r1, #12]
 800cc68:	4619      	mov	r1, r3
 800cc6a:	47a8      	blx	r5
 800cc6c:	2800      	cmp	r0, #0
 800cc6e:	bf08      	it	eq
 800cc70:	4620      	moveq	r0, r4
 800cc72:	bd38      	pop	{r3, r4, r5, pc}

0800cc74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800cc74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc76:	4604      	mov	r4, r0
 800cc78:	4615      	mov	r5, r2
 800cc7a:	4608      	mov	r0, r1
 800cc7c:	b93a      	cbnz	r2, 800cc8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800cc7e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800cc82:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800cc86:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800cc8a:	4628      	mov	r0, r5
 800cc8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cc8e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800cc92:	8893      	ldrh	r3, [r2, #4]
 800cc94:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800cc98:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800cc9c:	79ee      	ldrb	r6, [r5, #7]
 800cc9e:	4316      	orrs	r6, r2
 800cca0:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800cca4:	189a      	adds	r2, r3, r2
 800cca6:	b291      	uxth	r1, r2
 800cca8:	291d      	cmp	r1, #29
 800ccaa:	b2b7      	uxth	r7, r6
 800ccac:	f200 8083 	bhi.w	800cdb6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800ccb0:	2201      	movs	r2, #1
 800ccb2:	408a      	lsls	r2, r1
 800ccb4:	4978      	ldr	r1, [pc, #480]	; (800ce98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800ccb6:	420a      	tst	r2, r1
 800ccb8:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800ccbc:	d12d      	bne.n	800cd1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800ccbe:	f412 7f60 	tst.w	r2, #896	; 0x380
 800ccc2:	d078      	beq.n	800cdb6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800ccc4:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800ccc8:	462b      	mov	r3, r5
 800ccca:	f105 0e08 	add.w	lr, r5, #8
 800ccce:	4615      	mov	r5, r2
 800ccd0:	6818      	ldr	r0, [r3, #0]
 800ccd2:	6859      	ldr	r1, [r3, #4]
 800ccd4:	4694      	mov	ip, r2
 800ccd6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ccda:	3308      	adds	r3, #8
 800ccdc:	4573      	cmp	r3, lr
 800ccde:	4662      	mov	r2, ip
 800cce0:	d1f6      	bne.n	800ccd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800cce2:	6818      	ldr	r0, [r3, #0]
 800cce4:	f8cc 0000 	str.w	r0, [ip]
 800cce8:	889b      	ldrh	r3, [r3, #4]
 800ccea:	f8ac 3004 	strh.w	r3, [ip, #4]
 800ccee:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800ccf2:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800ccf6:	b2b3      	uxth	r3, r6
 800ccf8:	1aca      	subs	r2, r1, r3
 800ccfa:	b292      	uxth	r2, r2
 800ccfc:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800cd00:	10d2      	asrs	r2, r2, #3
 800cd02:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800cd06:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800cd0a:	4302      	orrs	r2, r0
 800cd0c:	1bcf      	subs	r7, r1, r7
 800cd0e:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800cd12:	1afb      	subs	r3, r7, r3
 800cd14:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800cd18:	e7b7      	b.n	800cc8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800cd1a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800cd1c:	b92b      	cbnz	r3, 800cd2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800cd1e:	4b5f      	ldr	r3, [pc, #380]	; (800ce9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800cd20:	4a5f      	ldr	r2, [pc, #380]	; (800cea0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800cd22:	4860      	ldr	r0, [pc, #384]	; (800cea4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800cd24:	21c0      	movs	r1, #192	; 0xc0
 800cd26:	f00d f87d 	bl	8019e24 <__assert_func>
 800cd2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd2c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800cd30:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800cd32:	f640 6333 	movw	r3, #3635	; 0xe33
 800cd36:	4299      	cmp	r1, r3
 800cd38:	d110      	bne.n	800cd5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800cd3a:	6803      	ldr	r3, [r0, #0]
 800cd3c:	68db      	ldr	r3, [r3, #12]
 800cd3e:	4798      	blx	r3
 800cd40:	7b41      	ldrb	r1, [r0, #13]
 800cd42:	00cb      	lsls	r3, r1, #3
 800cd44:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cd48:	7a03      	ldrb	r3, [r0, #8]
 800cd4a:	0648      	lsls	r0, r1, #25
 800cd4c:	ea43 0302 	orr.w	r3, r3, r2
 800cd50:	bf44      	itt	mi
 800cd52:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cd56:	b21b      	sxthmi	r3, r3
 800cd58:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800cd5c:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800cd60:	443b      	add	r3, r7
 800cd62:	4433      	add	r3, r6
 800cd64:	b29b      	uxth	r3, r3
 800cd66:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800cd6a:	462a      	mov	r2, r5
 800cd6c:	f105 0c08 	add.w	ip, r5, #8
 800cd70:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800cd74:	4635      	mov	r5, r6
 800cd76:	6810      	ldr	r0, [r2, #0]
 800cd78:	6851      	ldr	r1, [r2, #4]
 800cd7a:	4637      	mov	r7, r6
 800cd7c:	c703      	stmia	r7!, {r0, r1}
 800cd7e:	3208      	adds	r2, #8
 800cd80:	4562      	cmp	r2, ip
 800cd82:	463e      	mov	r6, r7
 800cd84:	d1f7      	bne.n	800cd76 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800cd86:	6810      	ldr	r0, [r2, #0]
 800cd88:	6038      	str	r0, [r7, #0]
 800cd8a:	8892      	ldrh	r2, [r2, #4]
 800cd8c:	80ba      	strh	r2, [r7, #4]
 800cd8e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800cd92:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800cd96:	10db      	asrs	r3, r3, #3
 800cd98:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800cd9c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800cda0:	4313      	orrs	r3, r2
 800cda2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800cda6:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800cdaa:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800cdae:	1a9b      	subs	r3, r3, r2
 800cdb0:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800cdb4:	e769      	b.n	800cc8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800cdb6:	f023 0204 	bic.w	r2, r3, #4
 800cdba:	f640 611b 	movw	r1, #3611	; 0xe1b
 800cdbe:	428a      	cmp	r2, r1
 800cdc0:	d003      	beq.n	800cdca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800cdc2:	f640 621d 	movw	r2, #3613	; 0xe1d
 800cdc6:	4293      	cmp	r3, r2
 800cdc8:	d120      	bne.n	800ce0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800cdca:	3b01      	subs	r3, #1
 800cdcc:	4602      	mov	r2, r0
 800cdce:	b29b      	uxth	r3, r3
 800cdd0:	4629      	mov	r1, r5
 800cdd2:	4620      	mov	r0, r4
 800cdd4:	f7ff ff43 	bl	800cc5e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800cdd8:	7b41      	ldrb	r1, [r0, #13]
 800cdda:	00cb      	lsls	r3, r1, #3
 800cddc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cde0:	7a03      	ldrb	r3, [r0, #8]
 800cde2:	0649      	lsls	r1, r1, #25
 800cde4:	ea43 0302 	orr.w	r3, r3, r2
 800cde8:	bf44      	itt	mi
 800cdea:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cdee:	b21b      	sxthmi	r3, r3
 800cdf0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800cdf4:	7b6b      	ldrb	r3, [r5, #13]
 800cdf6:	7aaa      	ldrb	r2, [r5, #10]
 800cdf8:	005b      	lsls	r3, r3, #1
 800cdfa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cdfe:	4313      	orrs	r3, r2
 800ce00:	115a      	asrs	r2, r3, #5
 800ce02:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800ce06:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800ce0a:	e036      	b.n	800ce7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800ce0c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800ce10:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800ce14:	7a2a      	ldrb	r2, [r5, #8]
 800ce16:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800ce1a:	ea42 0201 	orr.w	r2, r2, r1
 800ce1e:	bf1c      	itt	ne
 800ce20:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800ce24:	b212      	sxthne	r2, r2
 800ce26:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800ce2a:	f640 6109 	movw	r1, #3593	; 0xe09
 800ce2e:	f023 0210 	bic.w	r2, r3, #16
 800ce32:	428a      	cmp	r2, r1
 800ce34:	d003      	beq.n	800ce3e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800ce36:	f640 6213 	movw	r2, #3603	; 0xe13
 800ce3a:	4293      	cmp	r3, r2
 800ce3c:	d12a      	bne.n	800ce94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800ce3e:	7b6e      	ldrb	r6, [r5, #13]
 800ce40:	0076      	lsls	r6, r6, #1
 800ce42:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800ce46:	7aae      	ldrb	r6, [r5, #10]
 800ce48:	4316      	orrs	r6, r2
 800ce4a:	f640 6213 	movw	r2, #3603	; 0xe13
 800ce4e:	4293      	cmp	r3, r2
 800ce50:	bf18      	it	ne
 800ce52:	f103 33ff 	addne.w	r3, r3, #4294967295
 800ce56:	4602      	mov	r2, r0
 800ce58:	bf14      	ite	ne
 800ce5a:	b29b      	uxthne	r3, r3
 800ce5c:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800ce60:	4629      	mov	r1, r5
 800ce62:	4620      	mov	r0, r4
 800ce64:	f7ff fefb 	bl	800cc5e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800ce68:	7b43      	ldrb	r3, [r0, #13]
 800ce6a:	7a82      	ldrb	r2, [r0, #10]
 800ce6c:	005b      	lsls	r3, r3, #1
 800ce6e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ce72:	4313      	orrs	r3, r2
 800ce74:	1af6      	subs	r6, r6, r3
 800ce76:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800ce7a:	7b69      	ldrb	r1, [r5, #13]
 800ce7c:	00cb      	lsls	r3, r1, #3
 800ce7e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ce82:	7a2b      	ldrb	r3, [r5, #8]
 800ce84:	4313      	orrs	r3, r2
 800ce86:	064a      	lsls	r2, r1, #25
 800ce88:	bf44      	itt	mi
 800ce8a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ce8e:	b21b      	sxthmi	r3, r3
 800ce90:	1bdb      	subs	r3, r3, r7
 800ce92:	e73f      	b.n	800cd14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800ce94:	2300      	movs	r3, #0
 800ce96:	e7b6      	b.n	800ce06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800ce98:	3fc00079 	.word	0x3fc00079
 800ce9c:	0801bb00 	.word	0x0801bb00
 800cea0:	0801d09f 	.word	0x0801d09f
 800cea4:	0801bbd2 	.word	0x0801bbd2

0800cea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800cea8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ceac:	4604      	mov	r4, r0
 800ceae:	b942      	cbnz	r2, 800cec2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800ceb0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ceb4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800ceb8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800cebc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800cec0:	e046      	b.n	800cf50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800cec2:	7b51      	ldrb	r1, [r2, #13]
 800cec4:	8893      	ldrh	r3, [r2, #4]
 800cec6:	010f      	lsls	r7, r1, #4
 800cec8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800cecc:	79d7      	ldrb	r7, [r2, #7]
 800cece:	4307      	orrs	r7, r0
 800ced0:	2f04      	cmp	r7, #4
 800ced2:	b2bd      	uxth	r5, r7
 800ced4:	bfcc      	ite	gt
 800ced6:	08bf      	lsrgt	r7, r7, #2
 800ced8:	2701      	movle	r7, #1
 800ceda:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800cede:	f200 80ab 	bhi.w	800d038 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800cee2:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800cee6:	4283      	cmp	r3, r0
 800cee8:	d216      	bcs.n	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ceea:	f240 605b 	movw	r0, #1627	; 0x65b
 800ceee:	4283      	cmp	r3, r0
 800cef0:	d859      	bhi.n	800cfa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800cef2:	f240 6057 	movw	r0, #1623	; 0x657
 800cef6:	4283      	cmp	r3, r0
 800cef8:	d20e      	bcs.n	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cefa:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800cefe:	d24a      	bcs.n	800cf96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800cf00:	f240 604e 	movw	r0, #1614	; 0x64e
 800cf04:	4283      	cmp	r3, r0
 800cf06:	d207      	bcs.n	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cf08:	f240 601a 	movw	r0, #1562	; 0x61a
 800cf0c:	4283      	cmp	r3, r0
 800cf0e:	d02a      	beq.n	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cf10:	d821      	bhi.n	800cf56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800cf12:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800cf16:	d35b      	bcc.n	800cfd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800cf18:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800cf1c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800cf20:	f040 80d0 	bne.w	800d0c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800cf24:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800cf28:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800cf2c:	f040 80ca 	bne.w	800d0c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800cf30:	00cb      	lsls	r3, r1, #3
 800cf32:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800cf36:	7a13      	ldrb	r3, [r2, #8]
 800cf38:	0649      	lsls	r1, r1, #25
 800cf3a:	ea43 0300 	orr.w	r3, r3, r0
 800cf3e:	bf44      	itt	mi
 800cf40:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cf44:	b21b      	sxthmi	r3, r3
 800cf46:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800cf4a:	1b5d      	subs	r5, r3, r5
 800cf4c:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800cf50:	4610      	mov	r0, r2
 800cf52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cf56:	f240 604b 	movw	r0, #1611	; 0x64b
 800cf5a:	4283      	cmp	r3, r0
 800cf5c:	d338      	bcc.n	800cfd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800cf5e:	f240 604c 	movw	r0, #1612	; 0x64c
 800cf62:	4283      	cmp	r3, r0
 800cf64:	d9d8      	bls.n	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cf66:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800cf6a:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800cf6e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800cf72:	f040 80f1 	bne.w	800d158 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800cf76:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800cf7a:	f040 80ed 	bne.w	800d158 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800cf7e:	00cb      	lsls	r3, r1, #3
 800cf80:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800cf84:	7a13      	ldrb	r3, [r2, #8]
 800cf86:	064e      	lsls	r6, r1, #25
 800cf88:	ea43 0300 	orr.w	r3, r3, r0
 800cf8c:	bf44      	itt	mi
 800cf8e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cf92:	b21b      	sxthmi	r3, r3
 800cf94:	e7d9      	b.n	800cf4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800cf96:	f240 6054 	movw	r0, #1620	; 0x654
 800cf9a:	4283      	cmp	r3, r0
 800cf9c:	d8e3      	bhi.n	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cf9e:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800cfa2:	d9e0      	bls.n	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cfa4:	e7b8      	b.n	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cfa6:	f240 6074 	movw	r0, #1652	; 0x674
 800cfaa:	4283      	cmp	r3, r0
 800cfac:	d0b4      	beq.n	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cfae:	d82d      	bhi.n	800d00c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800cfb0:	f240 605e 	movw	r0, #1630	; 0x65e
 800cfb4:	4283      	cmp	r3, r0
 800cfb6:	d804      	bhi.n	800cfc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800cfb8:	f240 605d 	movw	r0, #1629	; 0x65d
 800cfbc:	4283      	cmp	r3, r0
 800cfbe:	d3d2      	bcc.n	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cfc0:	e7aa      	b.n	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cfc2:	f240 605f 	movw	r0, #1631	; 0x65f
 800cfc6:	4283      	cmp	r3, r0
 800cfc8:	d0cd      	beq.n	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cfca:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800cfce:	d0a3      	beq.n	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cfd0:	00cb      	lsls	r3, r1, #3
 800cfd2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800cfd6:	7a13      	ldrb	r3, [r2, #8]
 800cfd8:	0649      	lsls	r1, r1, #25
 800cfda:	ea43 0300 	orr.w	r3, r3, r0
 800cfde:	bf44      	itt	mi
 800cfe0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cfe4:	b21b      	sxthmi	r3, r3
 800cfe6:	1b5d      	subs	r5, r3, r5
 800cfe8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800cfec:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800cff0:	7b53      	ldrb	r3, [r2, #13]
 800cff2:	015b      	lsls	r3, r3, #5
 800cff4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800cff8:	7993      	ldrb	r3, [r2, #6]
 800cffa:	430b      	orrs	r3, r1
 800cffc:	005b      	lsls	r3, r3, #1
 800cffe:	2105      	movs	r1, #5
 800d000:	fb93 f3f1 	sdiv	r3, r3, r1
 800d004:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800d008:	440b      	add	r3, r1
 800d00a:	e757      	b.n	800cebc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800d00c:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800d010:	4283      	cmp	r3, r0
 800d012:	d809      	bhi.n	800d028 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800d014:	f240 60df 	movw	r0, #1759	; 0x6df
 800d018:	4283      	cmp	r3, r0
 800d01a:	f4bf af7d 	bcs.w	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d01e:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800d022:	2b05      	cmp	r3, #5
 800d024:	d8d4      	bhi.n	800cfd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d026:	e777      	b.n	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d028:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800d02c:	4283      	cmp	r3, r0
 800d02e:	d09a      	beq.n	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d030:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800d034:	4283      	cmp	r3, r0
 800d036:	e7ca      	b.n	800cfce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800d038:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800d03c:	d22b      	bcs.n	800d096 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800d03e:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800d042:	4283      	cmp	r3, r0
 800d044:	d28f      	bcs.n	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d046:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800d04a:	4283      	cmp	r3, r0
 800d04c:	d816      	bhi.n	800d07c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800d04e:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800d052:	4283      	cmp	r3, r0
 800d054:	f4bf af60 	bcs.w	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d058:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800d05c:	4283      	cmp	r3, r0
 800d05e:	d80a      	bhi.n	800d076 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800d060:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800d064:	4283      	cmp	r3, r0
 800d066:	f4bf af57 	bcs.w	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d06a:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800d06e:	4283      	cmp	r3, r0
 800d070:	f43f af79 	beq.w	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d074:	e7ac      	b.n	800cfd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d076:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800d07a:	e7f8      	b.n	800d06e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800d07c:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800d080:	4283      	cmp	r3, r0
 800d082:	d802      	bhi.n	800d08a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800d084:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800d088:	e798      	b.n	800cfbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800d08a:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800d08e:	4283      	cmp	r3, r0
 800d090:	f47f af42 	bne.w	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d094:	e767      	b.n	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d096:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800d09a:	4283      	cmp	r3, r0
 800d09c:	f43f af63 	beq.w	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d0a0:	d802      	bhi.n	800d0a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800d0a2:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800d0a6:	e7f2      	b.n	800d08e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800d0a8:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800d0ac:	4283      	cmp	r3, r0
 800d0ae:	d805      	bhi.n	800d0bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800d0b0:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800d0b4:	4283      	cmp	r3, r0
 800d0b6:	f4ff af2f 	bcc.w	800cf18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d0ba:	e754      	b.n	800cf66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d0bc:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800d0c0:	4283      	cmp	r3, r0
 800d0c2:	e7af      	b.n	800d024 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800d0c4:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800d0c8:	4617      	mov	r7, r2
 800d0ca:	f102 0808 	add.w	r8, r2, #8
 800d0ce:	4666      	mov	r6, ip
 800d0d0:	6838      	ldr	r0, [r7, #0]
 800d0d2:	6879      	ldr	r1, [r7, #4]
 800d0d4:	46e6      	mov	lr, ip
 800d0d6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800d0da:	3708      	adds	r7, #8
 800d0dc:	4547      	cmp	r7, r8
 800d0de:	46f4      	mov	ip, lr
 800d0e0:	d1f6      	bne.n	800d0d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800d0e2:	6838      	ldr	r0, [r7, #0]
 800d0e4:	f8ce 0000 	str.w	r0, [lr]
 800d0e8:	88b9      	ldrh	r1, [r7, #4]
 800d0ea:	f8ae 1004 	strh.w	r1, [lr, #4]
 800d0ee:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800d0f2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d0f6:	d009      	beq.n	800d10c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800d0f8:	7b51      	ldrb	r1, [r2, #13]
 800d0fa:	7992      	ldrb	r2, [r2, #6]
 800d0fc:	0149      	lsls	r1, r1, #5
 800d0fe:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d102:	4311      	orrs	r1, r2
 800d104:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d108:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800d10c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d110:	d00d      	beq.n	800d12e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800d112:	442b      	add	r3, r5
 800d114:	b29b      	uxth	r3, r3
 800d116:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800d11a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800d11e:	10db      	asrs	r3, r3, #3
 800d120:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d124:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d128:	4313      	orrs	r3, r2
 800d12a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800d12e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800d132:	00cb      	lsls	r3, r1, #3
 800d134:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d138:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800d13c:	064f      	lsls	r7, r1, #25
 800d13e:	ea43 0302 	orr.w	r3, r3, r2
 800d142:	bf44      	itt	mi
 800d144:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d148:	b21b      	sxthmi	r3, r3
 800d14a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800d14e:	1b5d      	subs	r5, r3, r5
 800d150:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800d154:	4632      	mov	r2, r6
 800d156:	e6fb      	b.n	800cf50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d158:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 800d15c:	4694      	mov	ip, r2
 800d15e:	f102 0908 	add.w	r9, r2, #8
 800d162:	4676      	mov	r6, lr
 800d164:	f8dc 0000 	ldr.w	r0, [ip]
 800d168:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800d16c:	46f0      	mov	r8, lr
 800d16e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800d172:	f10c 0c08 	add.w	ip, ip, #8
 800d176:	45cc      	cmp	ip, r9
 800d178:	46c6      	mov	lr, r8
 800d17a:	d1f3      	bne.n	800d164 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800d17c:	f8dc 0000 	ldr.w	r0, [ip]
 800d180:	f8c8 0000 	str.w	r0, [r8]
 800d184:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800d188:	f8a8 1004 	strh.w	r1, [r8, #4]
 800d18c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800d190:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d194:	d009      	beq.n	800d1aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800d196:	7b51      	ldrb	r1, [r2, #13]
 800d198:	7992      	ldrb	r2, [r2, #6]
 800d19a:	0149      	lsls	r1, r1, #5
 800d19c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d1a0:	4311      	orrs	r1, r2
 800d1a2:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d1a6:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800d1aa:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d1ae:	d00d      	beq.n	800d1cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800d1b0:	1bdb      	subs	r3, r3, r7
 800d1b2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800d1b6:	b29b      	uxth	r3, r3
 800d1b8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800d1bc:	10db      	asrs	r3, r3, #3
 800d1be:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d1c2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d1c6:	4313      	orrs	r3, r2
 800d1c8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800d1cc:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800d1d0:	00cb      	lsls	r3, r1, #3
 800d1d2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d1d6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800d1da:	0648      	lsls	r0, r1, #25
 800d1dc:	ea43 0302 	orr.w	r3, r3, r2
 800d1e0:	bf44      	itt	mi
 800d1e2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d1e6:	b21b      	sxthmi	r3, r3
 800d1e8:	e7b1      	b.n	800d14e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800d1ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800d1ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d1f0:	461e      	mov	r6, r3
 800d1f2:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800d1f4:	4604      	mov	r4, r0
 800d1f6:	4617      	mov	r7, r2
 800d1f8:	b92b      	cbnz	r3, 800d206 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800d1fa:	4b25      	ldr	r3, [pc, #148]	; (800d290 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800d1fc:	4a25      	ldr	r2, [pc, #148]	; (800d294 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800d1fe:	4826      	ldr	r0, [pc, #152]	; (800d298 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800d200:	21c0      	movs	r1, #192	; 0xc0
 800d202:	f00c fe0f 	bl	8019e24 <__assert_func>
 800d206:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800d208:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d20c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800d210:	f7f5 fa6a 	bl	80026e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d214:	4605      	mov	r5, r0
 800d216:	b918      	cbnz	r0, 800d220 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800d218:	6030      	str	r0, [r6, #0]
 800d21a:	4628      	mov	r0, r5
 800d21c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d220:	683b      	ldr	r3, [r7, #0]
 800d222:	4601      	mov	r1, r0
 800d224:	68db      	ldr	r3, [r3, #12]
 800d226:	4638      	mov	r0, r7
 800d228:	4798      	blx	r3
 800d22a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d22e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d232:	4602      	mov	r2, r0
 800d234:	6030      	str	r0, [r6, #0]
 800d236:	d213      	bcs.n	800d260 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800d238:	4643      	mov	r3, r8
 800d23a:	4639      	mov	r1, r7
 800d23c:	4620      	mov	r0, r4
 800d23e:	f7ff fe33 	bl	800cea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d242:	6030      	str	r0, [r6, #0]
 800d244:	6833      	ldr	r3, [r6, #0]
 800d246:	b143      	cbz	r3, 800d25a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800d248:	7b5a      	ldrb	r2, [r3, #13]
 800d24a:	7a9b      	ldrb	r3, [r3, #10]
 800d24c:	0052      	lsls	r2, r2, #1
 800d24e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d252:	4313      	orrs	r3, r2
 800d254:	bf0c      	ite	eq
 800d256:	2301      	moveq	r3, #1
 800d258:	2300      	movne	r3, #0
 800d25a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800d25e:	e7dc      	b.n	800d21a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800d260:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d264:	b29b      	uxth	r3, r3
 800d266:	2b7f      	cmp	r3, #127	; 0x7f
 800d268:	d804      	bhi.n	800d274 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800d26a:	4639      	mov	r1, r7
 800d26c:	4620      	mov	r0, r4
 800d26e:	f7ff fd01 	bl	800cc74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d272:	e7e6      	b.n	800d242 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d274:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800d278:	2b00      	cmp	r3, #0
 800d27a:	d0e3      	beq.n	800d244 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d27c:	f640 1302 	movw	r3, #2306	; 0x902
 800d280:	429d      	cmp	r5, r3
 800d282:	d1df      	bne.n	800d244 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d284:	4601      	mov	r1, r0
 800d286:	4620      	mov	r0, r4
 800d288:	f7ff fcc6 	bl	800cc18 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d28c:	e7d9      	b.n	800d242 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d28e:	bf00      	nop
 800d290:	0801bb00 	.word	0x0801bb00
 800d294:	0801d09f 	.word	0x0801d09f
 800d298:	0801bbd2 	.word	0x0801bbd2

0800d29c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800d29c:	b510      	push	{r4, lr}
 800d29e:	4604      	mov	r4, r0
 800d2a0:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800d2a4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800d2a6:	b9d9      	cbnz	r1, 800d2e0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 800d2a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800d2aa:	2b0a      	cmp	r3, #10
 800d2ac:	d037      	beq.n	800d31e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800d2ae:	4620      	mov	r0, r4
 800d2b0:	f7ff fc71 	bl	800cb96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800d2b4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800d2b6:	2b09      	cmp	r3, #9
 800d2b8:	d906      	bls.n	800d2c8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800d2ba:	4b19      	ldr	r3, [pc, #100]	; (800d320 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800d2bc:	4a19      	ldr	r2, [pc, #100]	; (800d324 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800d2be:	481a      	ldr	r0, [pc, #104]	; (800d328 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 800d2c0:	f44f 7182 	mov.w	r1, #260	; 0x104
 800d2c4:	f00c fdae 	bl	8019e24 <__assert_func>
 800d2c8:	1c5a      	adds	r2, r3, #1
 800d2ca:	8722      	strh	r2, [r4, #56]	; 0x38
 800d2cc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d2ce:	4413      	add	r3, r2
 800d2d0:	b29b      	uxth	r3, r3
 800d2d2:	2b09      	cmp	r3, #9
 800d2d4:	bf88      	it	hi
 800d2d6:	3b0a      	subhi	r3, #10
 800d2d8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d2dc:	8458      	strh	r0, [r3, #34]	; 0x22
 800d2de:	e7e3      	b.n	800d2a8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 800d2e0:	2b0a      	cmp	r3, #10
 800d2e2:	d01c      	beq.n	800d31e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800d2e4:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800d2e6:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800d2ea:	3901      	subs	r1, #1
 800d2ec:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800d2ee:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800d2f2:	1c51      	adds	r1, r2, #1
 800d2f4:	b289      	uxth	r1, r1
 800d2f6:	2901      	cmp	r1, #1
 800d2f8:	bf8a      	itet	hi
 800d2fa:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800d2fe:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800d300:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800d302:	2b09      	cmp	r3, #9
 800d304:	d8d9      	bhi.n	800d2ba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 800d306:	1c5a      	adds	r2, r3, #1
 800d308:	8722      	strh	r2, [r4, #56]	; 0x38
 800d30a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d30c:	4413      	add	r3, r2
 800d30e:	b29b      	uxth	r3, r3
 800d310:	2b09      	cmp	r3, #9
 800d312:	bf88      	it	hi
 800d314:	3b0a      	subhi	r3, #10
 800d316:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d31a:	8458      	strh	r0, [r3, #34]	; 0x22
 800d31c:	e7c0      	b.n	800d2a0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800d31e:	bd10      	pop	{r4, pc}
 800d320:	0801ce70 	.word	0x0801ce70
 800d324:	0801d1f5 	.word	0x0801d1f5
 800d328:	0801bbd2 	.word	0x0801bbd2

0800d32c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800d32c:	b538      	push	{r3, r4, r5, lr}
 800d32e:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800d330:	4604      	mov	r4, r0
 800d332:	b92a      	cbnz	r2, 800d340 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800d334:	4b13      	ldr	r3, [pc, #76]	; (800d384 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800d336:	4a14      	ldr	r2, [pc, #80]	; (800d388 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800d338:	4814      	ldr	r0, [pc, #80]	; (800d38c <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800d33a:	21d5      	movs	r1, #213	; 0xd5
 800d33c:	f00c fd72 	bl	8019e24 <__assert_func>
 800d340:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800d342:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800d346:	3a01      	subs	r2, #1
 800d348:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 800d34a:	8702      	strh	r2, [r0, #56]	; 0x38
 800d34c:	1c5a      	adds	r2, r3, #1
 800d34e:	b292      	uxth	r2, r2
 800d350:	2a09      	cmp	r2, #9
 800d352:	bf86      	itte	hi
 800d354:	3b09      	subhi	r3, #9
 800d356:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800d358:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800d35a:	f7ff ff9f 	bl	800d29c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d35e:	8c23      	ldrh	r3, [r4, #32]
 800d360:	2b01      	cmp	r3, #1
 800d362:	bf9c      	itt	ls
 800d364:	3301      	addls	r3, #1
 800d366:	8423      	strhls	r3, [r4, #32]
 800d368:	8be3      	ldrh	r3, [r4, #30]
 800d36a:	b90b      	cbnz	r3, 800d370 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800d36c:	2302      	movs	r3, #2
 800d36e:	83e3      	strh	r3, [r4, #30]
 800d370:	8be3      	ldrh	r3, [r4, #30]
 800d372:	3b01      	subs	r3, #1
 800d374:	b29b      	uxth	r3, r3
 800d376:	83e3      	strh	r3, [r4, #30]
 800d378:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800d37c:	4628      	mov	r0, r5
 800d37e:	8365      	strh	r5, [r4, #26]
 800d380:	bd38      	pop	{r3, r4, r5, pc}
 800d382:	bf00      	nop
 800d384:	0801bb00 	.word	0x0801bb00
 800d388:	0801d14a 	.word	0x0801d14a
 800d38c:	0801bbd2 	.word	0x0801bbd2

0800d390 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800d390:	b538      	push	{r3, r4, r5, lr}
 800d392:	428a      	cmp	r2, r1
 800d394:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800d396:	d90c      	bls.n	800d3b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800d398:	b92c      	cbnz	r4, 800d3a6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800d39a:	4b1c      	ldr	r3, [pc, #112]	; (800d40c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800d39c:	4a1c      	ldr	r2, [pc, #112]	; (800d410 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800d39e:	21e1      	movs	r1, #225	; 0xe1
 800d3a0:	481c      	ldr	r0, [pc, #112]	; (800d414 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800d3a2:	f00c fd3f 	bl	8019e24 <__assert_func>
 800d3a6:	3c01      	subs	r4, #1
 800d3a8:	8704      	strh	r4, [r0, #56]	; 0x38
 800d3aa:	4b1b      	ldr	r3, [pc, #108]	; (800d418 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800d3ac:	4a1b      	ldr	r2, [pc, #108]	; (800d41c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800d3ae:	21c5      	movs	r1, #197	; 0xc5
 800d3b0:	e7f6      	b.n	800d3a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d3b2:	428c      	cmp	r4, r1
 800d3b4:	d203      	bcs.n	800d3be <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800d3b6:	4b1a      	ldr	r3, [pc, #104]	; (800d420 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800d3b8:	4a1a      	ldr	r2, [pc, #104]	; (800d424 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800d3ba:	21cb      	movs	r1, #203	; 0xcb
 800d3bc:	e7f0      	b.n	800d3a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d3be:	1a64      	subs	r4, r4, r1
 800d3c0:	8704      	strh	r4, [r0, #56]	; 0x38
 800d3c2:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 800d3c4:	4421      	add	r1, r4
 800d3c6:	b289      	uxth	r1, r1
 800d3c8:	2909      	cmp	r1, #9
 800d3ca:	bf88      	it	hi
 800d3cc:	390a      	subhi	r1, #10
 800d3ce:	86c1      	strh	r1, [r0, #54]	; 0x36
 800d3d0:	250a      	movs	r5, #10
 800d3d2:	b1ba      	cbz	r2, 800d404 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800d3d4:	3a01      	subs	r2, #1
 800d3d6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800d3d8:	b292      	uxth	r2, r2
 800d3da:	2909      	cmp	r1, #9
 800d3dc:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800d3e0:	d903      	bls.n	800d3ea <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800d3e2:	4b11      	ldr	r3, [pc, #68]	; (800d428 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800d3e4:	4a11      	ldr	r2, [pc, #68]	; (800d42c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800d3e6:	21e6      	movs	r1, #230	; 0xe6
 800d3e8:	e7da      	b.n	800d3a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d3ea:	3101      	adds	r1, #1
 800d3ec:	8701      	strh	r1, [r0, #56]	; 0x38
 800d3ee:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800d3f0:	b901      	cbnz	r1, 800d3f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800d3f2:	86c5      	strh	r5, [r0, #54]	; 0x36
 800d3f4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800d3f6:	3901      	subs	r1, #1
 800d3f8:	b289      	uxth	r1, r1
 800d3fa:	86c1      	strh	r1, [r0, #54]	; 0x36
 800d3fc:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800d400:	844c      	strh	r4, [r1, #34]	; 0x22
 800d402:	e7e6      	b.n	800d3d2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800d404:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d408:	f7ff bf48 	b.w	800d29c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d40c:	0801bb00 	.word	0x0801bb00
 800d410:	0801cf23 	.word	0x0801cf23
 800d414:	0801bbd2 	.word	0x0801bbd2
 800d418:	0801bbfe 	.word	0x0801bbfe
 800d41c:	0801cfcd 	.word	0x0801cfcd
 800d420:	0801ce7c 	.word	0x0801ce7c
 800d424:	0801d2a4 	.word	0x0801d2a4
 800d428:	0801ce88 	.word	0x0801ce88
 800d42c:	0801ce9b 	.word	0x0801ce9b

0800d430 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800d430:	3a01      	subs	r2, #1
 800d432:	b570      	push	{r4, r5, r6, lr}
 800d434:	b292      	uxth	r2, r2
 800d436:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800d43a:	42b2      	cmp	r2, r6
 800d43c:	d019      	beq.n	800d472 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800d43e:	8c04      	ldrh	r4, [r0, #32]
 800d440:	f831 5b02 	ldrh.w	r5, [r1], #2
 800d444:	4294      	cmp	r4, r2
 800d446:	d805      	bhi.n	800d454 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800d448:	4b19      	ldr	r3, [pc, #100]	; (800d4b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800d44a:	4a1a      	ldr	r2, [pc, #104]	; (800d4b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800d44c:	481a      	ldr	r0, [pc, #104]	; (800d4b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800d44e:	21c5      	movs	r1, #197	; 0xc5
 800d450:	f00c fce8 	bl	8019e24 <__assert_func>
 800d454:	8bc4      	ldrh	r4, [r0, #30]
 800d456:	4414      	add	r4, r2
 800d458:	b2a4      	uxth	r4, r4
 800d45a:	2c01      	cmp	r4, #1
 800d45c:	bf88      	it	hi
 800d45e:	3c02      	subhi	r4, #2
 800d460:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800d464:	3a01      	subs	r2, #1
 800d466:	8b64      	ldrh	r4, [r4, #26]
 800d468:	42ac      	cmp	r4, r5
 800d46a:	b292      	uxth	r2, r2
 800d46c:	d0e5      	beq.n	800d43a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800d46e:	2000      	movs	r0, #0
 800d470:	bd70      	pop	{r4, r5, r6, pc}
 800d472:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800d476:	2400      	movs	r4, #0
 800d478:	4413      	add	r3, r2
 800d47a:	b2a2      	uxth	r2, r4
 800d47c:	429a      	cmp	r2, r3
 800d47e:	da14      	bge.n	800d4aa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800d480:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 800d482:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800d486:	4296      	cmp	r6, r2
 800d488:	d802      	bhi.n	800d490 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800d48a:	4b09      	ldr	r3, [pc, #36]	; (800d4b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800d48c:	4a0b      	ldr	r2, [pc, #44]	; (800d4bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800d48e:	e7dd      	b.n	800d44c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800d490:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800d492:	4432      	add	r2, r6
 800d494:	b292      	uxth	r2, r2
 800d496:	2a09      	cmp	r2, #9
 800d498:	bf88      	it	hi
 800d49a:	3a0a      	subhi	r2, #10
 800d49c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800d4a0:	3401      	adds	r4, #1
 800d4a2:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800d4a4:	42aa      	cmp	r2, r5
 800d4a6:	d0e8      	beq.n	800d47a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800d4a8:	e7e1      	b.n	800d46e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800d4aa:	2001      	movs	r0, #1
 800d4ac:	e7e0      	b.n	800d470 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800d4ae:	bf00      	nop
 800d4b0:	0801bbfe 	.word	0x0801bbfe
 800d4b4:	0801d328 	.word	0x0801d328
 800d4b8:	0801bbd2 	.word	0x0801bbd2
 800d4bc:	0801cfcd 	.word	0x0801cfcd

0800d4c0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800d4c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4c4:	4605      	mov	r5, r0
 800d4c6:	4616      	mov	r6, r2
 800d4c8:	1c8c      	adds	r4, r1, #2
 800d4ca:	8809      	ldrh	r1, [r1, #0]
 800d4cc:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800d4d0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800d4d4:	42b3      	cmp	r3, r6
 800d4d6:	d124      	bne.n	800d522 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800d4d8:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800d4dc:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800d4e0:	f001 070f 	and.w	r7, r1, #15
 800d4e4:	f8cd 8000 	str.w	r8, [sp]
 800d4e8:	464b      	mov	r3, r9
 800d4ea:	4652      	mov	r2, sl
 800d4ec:	4621      	mov	r1, r4
 800d4ee:	4628      	mov	r0, r5
 800d4f0:	f7ff ff9e 	bl	800d430 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800d4f4:	4683      	mov	fp, r0
 800d4f6:	b168      	cbz	r0, 800d514 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800d4f8:	eb0a 0109 	add.w	r1, sl, r9
 800d4fc:	4441      	add	r1, r8
 800d4fe:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800d502:	463a      	mov	r2, r7
 800d504:	4649      	mov	r1, r9
 800d506:	4628      	mov	r0, r5
 800d508:	f7ff ff42 	bl	800d390 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800d50c:	4658      	mov	r0, fp
 800d50e:	b003      	add	sp, #12
 800d510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d514:	eb07 010a 	add.w	r1, r7, sl
 800d518:	4449      	add	r1, r9
 800d51a:	4441      	add	r1, r8
 800d51c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800d520:	e7d2      	b.n	800d4c8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800d522:	f04f 0b00 	mov.w	fp, #0
 800d526:	e7f1      	b.n	800d50c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800d528 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800d528:	b570      	push	{r4, r5, r6, lr}
 800d52a:	8810      	ldrh	r0, [r2, #0]
 800d52c:	4298      	cmp	r0, r3
 800d52e:	d817      	bhi.n	800d560 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d530:	1e48      	subs	r0, r1, #1
 800d532:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800d536:	4298      	cmp	r0, r3
 800d538:	d312      	bcc.n	800d560 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d53a:	2400      	movs	r4, #0
 800d53c:	428c      	cmp	r4, r1
 800d53e:	d20f      	bcs.n	800d560 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d540:	1860      	adds	r0, r4, r1
 800d542:	1040      	asrs	r0, r0, #1
 800d544:	0085      	lsls	r5, r0, #2
 800d546:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800d54a:	42b3      	cmp	r3, r6
 800d54c:	d902      	bls.n	800d554 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800d54e:	3001      	adds	r0, #1
 800d550:	b284      	uxth	r4, r0
 800d552:	e7f3      	b.n	800d53c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d554:	d201      	bcs.n	800d55a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800d556:	b281      	uxth	r1, r0
 800d558:	e7f0      	b.n	800d53c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d55a:	442a      	add	r2, r5
 800d55c:	8850      	ldrh	r0, [r2, #2]
 800d55e:	bd70      	pop	{r4, r5, r6, pc}
 800d560:	2000      	movs	r0, #0
 800d562:	e7fc      	b.n	800d55e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800d564 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800d564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d568:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800d56a:	886f      	ldrh	r7, [r5, #2]
 800d56c:	4604      	mov	r4, r0
 800d56e:	087f      	lsrs	r7, r7, #1
 800d570:	260b      	movs	r6, #11
 800d572:	3e01      	subs	r6, #1
 800d574:	d01b      	beq.n	800d5ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800d576:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800d578:	b92b      	cbnz	r3, 800d586 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800d57a:	4b0e      	ldr	r3, [pc, #56]	; (800d5b4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800d57c:	4a0e      	ldr	r2, [pc, #56]	; (800d5b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800d57e:	480f      	ldr	r0, [pc, #60]	; (800d5bc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800d580:	21c0      	movs	r1, #192	; 0xc0
 800d582:	f00c fc4f 	bl	8019e24 <__assert_func>
 800d586:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800d588:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d58c:	462a      	mov	r2, r5
 800d58e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800d592:	4639      	mov	r1, r7
 800d594:	4643      	mov	r3, r8
 800d596:	4620      	mov	r0, r4
 800d598:	f7ff ffc6 	bl	800d528 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800d59c:	b138      	cbz	r0, 800d5ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800d59e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800d5a2:	4642      	mov	r2, r8
 800d5a4:	4620      	mov	r0, r4
 800d5a6:	f7ff ff8b 	bl	800d4c0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800d5aa:	2800      	cmp	r0, #0
 800d5ac:	d1e1      	bne.n	800d572 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800d5ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d5b2:	bf00      	nop
 800d5b4:	0801bb00 	.word	0x0801bb00
 800d5b8:	0801d09f 	.word	0x0801d09f
 800d5bc:	0801bbd2 	.word	0x0801bbd2

0800d5c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800d5c0:	b570      	push	{r4, r5, r6, lr}
 800d5c2:	694a      	ldr	r2, [r1, #20]
 800d5c4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800d5c6:	684b      	ldr	r3, [r1, #4]
 800d5c8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800d5ca:	1b54      	subs	r4, r2, r5
 800d5cc:	f000 8106 	beq.w	800d7dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800d5d0:	1b9b      	subs	r3, r3, r6
 800d5d2:	d003      	beq.n	800d5dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800d5d4:	4363      	muls	r3, r4
 800d5d6:	2210      	movs	r2, #16
 800d5d8:	fb93 f3f2 	sdiv	r3, r3, r2
 800d5dc:	680c      	ldr	r4, [r1, #0]
 800d5de:	698a      	ldr	r2, [r1, #24]
 800d5e0:	1b65      	subs	r5, r4, r5
 800d5e2:	f000 80fd 	beq.w	800d7e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800d5e6:	1b92      	subs	r2, r2, r6
 800d5e8:	d003      	beq.n	800d5f2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800d5ea:	436a      	muls	r2, r5
 800d5ec:	2410      	movs	r4, #16
 800d5ee:	fb92 f2f4 	sdiv	r2, r2, r4
 800d5f2:	1a9b      	subs	r3, r3, r2
 800d5f4:	ee07 3a90 	vmov	s15, r3
 800d5f8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800d81c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800d5fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d600:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800d604:	ee67 7a84 	vmul.f32	s15, s15, s8
 800d608:	460a      	mov	r2, r1
 800d60a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800d60e:	4603      	mov	r3, r0
 800d610:	f100 040c 	add.w	r4, r0, #12
 800d614:	eeb1 6a43 	vneg.f32	s12, s6
 800d618:	edd2 7a02 	vldr	s15, [r2, #8]
 800d61c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800d620:	3214      	adds	r2, #20
 800d622:	ece3 6a01 	vstmia	r3!, {s13}
 800d626:	ed52 7a02 	vldr	s15, [r2, #-8]
 800d62a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800d62e:	429c      	cmp	r4, r3
 800d630:	edc3 7a02 	vstr	s15, [r3, #8]
 800d634:	ed52 7a01 	vldr	s15, [r2, #-4]
 800d638:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800d63c:	edc3 7a05 	vstr	s15, [r3, #20]
 800d640:	d1ea      	bne.n	800d618 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800d642:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800d644:	698b      	ldr	r3, [r1, #24]
 800d646:	edd0 4a02 	vldr	s9, [r0, #8]
 800d64a:	edd0 3a00 	vldr	s7, [r0]
 800d64e:	edd0 6a01 	vldr	s13, [r0, #4]
 800d652:	ed90 5a05 	vldr	s10, [r0, #20]
 800d656:	ed90 2a03 	vldr	s4, [r0, #12]
 800d65a:	edd0 5a04 	vldr	s11, [r0, #16]
 800d65e:	ed90 1a07 	vldr	s2, [r0, #28]
 800d662:	edd0 2a06 	vldr	s5, [r0, #24]
 800d666:	1a9b      	subs	r3, r3, r2
 800d668:	ee07 3a90 	vmov	s15, r3
 800d66c:	684b      	ldr	r3, [r1, #4]
 800d66e:	1a9b      	subs	r3, r3, r2
 800d670:	ee07 3a10 	vmov	s14, r3
 800d674:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d678:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800d67c:	ee67 7a84 	vmul.f32	s15, s15, s8
 800d680:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800d684:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d688:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800d68c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d690:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800d694:	eee6 7a87 	vfma.f32	s15, s13, s14
 800d698:	ee32 5a45 	vsub.f32	s10, s4, s10
 800d69c:	ee67 7a83 	vmul.f32	s15, s15, s6
 800d6a0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800d6a4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800d6a6:	694a      	ldr	r2, [r1, #20]
 800d6a8:	1b13      	subs	r3, r2, r4
 800d6aa:	ee07 3a10 	vmov	s14, r3
 800d6ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d6b2:	680b      	ldr	r3, [r1, #0]
 800d6b4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d6b8:	1b1b      	subs	r3, r3, r4
 800d6ba:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800d6be:	ee07 3a10 	vmov	s14, r3
 800d6c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d6c6:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d6ca:	eee6 4a87 	vfma.f32	s9, s13, s14
 800d6ce:	ee64 4a86 	vmul.f32	s9, s9, s12
 800d6d2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800d6d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800d6d8:	698b      	ldr	r3, [r1, #24]
 800d6da:	1a9b      	subs	r3, r3, r2
 800d6dc:	ee06 3a90 	vmov	s13, r3
 800d6e0:	684b      	ldr	r3, [r1, #4]
 800d6e2:	1a9b      	subs	r3, r3, r2
 800d6e4:	ee07 3a10 	vmov	s14, r3
 800d6e8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800d6ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d6f0:	ee66 6a84 	vmul.f32	s13, s13, s8
 800d6f4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d6f8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800d6fc:	eee5 6a87 	vfma.f32	s13, s11, s14
 800d700:	ee66 6a83 	vmul.f32	s13, s13, s6
 800d704:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800d708:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800d70a:	694a      	ldr	r2, [r1, #20]
 800d70c:	1b13      	subs	r3, r2, r4
 800d70e:	ee07 3a10 	vmov	s14, r3
 800d712:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d716:	680b      	ldr	r3, [r1, #0]
 800d718:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d71c:	1b1b      	subs	r3, r3, r4
 800d71e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800d722:	ee07 3a10 	vmov	s14, r3
 800d726:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d72a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d72e:	eea5 5a87 	vfma.f32	s10, s11, s14
 800d732:	edd0 5a08 	vldr	s11, [r0, #32]
 800d736:	ee25 5a06 	vmul.f32	s10, s10, s12
 800d73a:	ee31 1a65 	vsub.f32	s2, s2, s11
 800d73e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800d742:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800d744:	698b      	ldr	r3, [r1, #24]
 800d746:	1a9b      	subs	r3, r3, r2
 800d748:	ee07 3a10 	vmov	s14, r3
 800d74c:	684b      	ldr	r3, [r1, #4]
 800d74e:	1a9b      	subs	r3, r3, r2
 800d750:	ee01 3a90 	vmov	s3, r3
 800d754:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d758:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800d75c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d760:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800d764:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800d768:	ee61 1a84 	vmul.f32	s3, s3, s8
 800d76c:	eea1 7a21 	vfma.f32	s14, s2, s3
 800d770:	ee27 7a03 	vmul.f32	s14, s14, s6
 800d774:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800d778:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800d77a:	694a      	ldr	r2, [r1, #20]
 800d77c:	1b13      	subs	r3, r2, r4
 800d77e:	ee03 3a10 	vmov	s6, r3
 800d782:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800d786:	680b      	ldr	r3, [r1, #0]
 800d788:	ee23 3a04 	vmul.f32	s6, s6, s8
 800d78c:	1b1b      	subs	r3, r3, r4
 800d78e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800d792:	ee03 3a10 	vmov	s6, r3
 800d796:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800d79a:	ee23 4a04 	vmul.f32	s8, s6, s8
 800d79e:	eee1 5a04 	vfma.f32	s11, s2, s8
 800d7a2:	ee25 6a86 	vmul.f32	s12, s11, s12
 800d7a6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800d7aa:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800d7ae:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800d7b2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800d7b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d7ba:	dd13      	ble.n	800d7e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800d7bc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d7c0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800d7c4:	63c3      	str	r3, [r0, #60]	; 0x3c
 800d7c6:	eee3 7a87 	vfma.f32	s15, s7, s14
 800d7ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d7ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d7d2:	dd15      	ble.n	800d800 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800d7d4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d7d8:	6403      	str	r3, [r0, #64]	; 0x40
 800d7da:	bd70      	pop	{r4, r5, r6, pc}
 800d7dc:	4623      	mov	r3, r4
 800d7de:	e6fd      	b.n	800d5dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800d7e0:	462a      	mov	r2, r5
 800d7e2:	e706      	b.n	800d5f2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800d7e4:	d502      	bpl.n	800d7ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800d7e6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800d7ea:	e7e9      	b.n	800d7c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800d7ec:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800d7f0:	eea3 2a85 	vfma.f32	s4, s7, s10
 800d7f4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800d7f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d7fc:	dade      	bge.n	800d7bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800d7fe:	e7f2      	b.n	800d7e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800d800:	d502      	bpl.n	800d808 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800d802:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800d806:	e7e7      	b.n	800d7d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800d808:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800d80c:	eee3 4a86 	vfma.f32	s9, s7, s12
 800d810:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800d814:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d818:	dadc      	bge.n	800d7d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800d81a:	e7f2      	b.n	800d802 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800d81c:	3d800000 	.word	0x3d800000

0800d820 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800d820:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d824:	2714      	movs	r7, #20
 800d826:	435f      	muls	r7, r3
 800d828:	eb02 0c07 	add.w	ip, r2, r7
 800d82c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800d830:	f115 0e0f 	adds.w	lr, r5, #15
 800d834:	d432      	bmi.n	800d89c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7c>
 800d836:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800d83a:	9c08      	ldr	r4, [sp, #32]
 800d83c:	f8c0 e014 	str.w	lr, [r0, #20]
 800d840:	2614      	movs	r6, #20
 800d842:	4366      	muls	r6, r4
 800d844:	eb02 0806 	add.w	r8, r2, r6
 800d848:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800d84c:	f115 040f 	adds.w	r4, r5, #15
 800d850:	d430      	bmi.n	800d8b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800d852:	1124      	asrs	r4, r4, #4
 800d854:	eba4 040e 	sub.w	r4, r4, lr
 800d858:	6184      	str	r4, [r0, #24]
 800d85a:	2c00      	cmp	r4, #0
 800d85c:	f000 80a9 	beq.w	800d9b2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x192>
 800d860:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800d864:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800d868:	5995      	ldr	r5, [r2, r6]
 800d86a:	eba4 0809 	sub.w	r8, r4, r9
 800d86e:	59d4      	ldr	r4, [r2, r7]
 800d870:	eba5 0a04 	sub.w	sl, r5, r4
 800d874:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800d878:	fb0e fe05 	mul.w	lr, lr, r5
 800d87c:	fb0a ee19 	mls	lr, sl, r9, lr
 800d880:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800d884:	fb08 e404 	mla	r4, r8, r4, lr
 800d888:	3c01      	subs	r4, #1
 800d88a:	2e00      	cmp	r6, #0
 800d88c:	4434      	add	r4, r6
 800d88e:	dc1d      	bgt.n	800d8cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xac>
 800d890:	4b5a      	ldr	r3, [pc, #360]	; (800d9fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1dc>)
 800d892:	4a5b      	ldr	r2, [pc, #364]	; (800da00 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 800d894:	485b      	ldr	r0, [pc, #364]	; (800da04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 800d896:	21f7      	movs	r1, #247	; 0xf7
 800d898:	f00c fac4 	bl	8019e24 <__assert_func>
 800d89c:	f1c5 0501 	rsb	r5, r5, #1
 800d8a0:	f015 050f 	ands.w	r5, r5, #15
 800d8a4:	bf18      	it	ne
 800d8a6:	2501      	movne	r5, #1
 800d8a8:	2410      	movs	r4, #16
 800d8aa:	fb9e fef4 	sdiv	lr, lr, r4
 800d8ae:	ebae 0e05 	sub.w	lr, lr, r5
 800d8b2:	e7c2      	b.n	800d83a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 800d8b4:	f1c5 0501 	rsb	r5, r5, #1
 800d8b8:	f015 050f 	ands.w	r5, r5, #15
 800d8bc:	bf18      	it	ne
 800d8be:	2501      	movne	r5, #1
 800d8c0:	f04f 0910 	mov.w	r9, #16
 800d8c4:	fb94 f4f9 	sdiv	r4, r4, r9
 800d8c8:	1b64      	subs	r4, r4, r5
 800d8ca:	e7c3      	b.n	800d854 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 800d8cc:	2c00      	cmp	r4, #0
 800d8ce:	db72      	blt.n	800d9b6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x196>
 800d8d0:	fb94 fef6 	sdiv	lr, r4, r6
 800d8d4:	f8c0 e000 	str.w	lr, [r0]
 800d8d8:	fb06 441e 	mls	r4, r6, lr, r4
 800d8dc:	6104      	str	r4, [r0, #16]
 800d8de:	2d00      	cmp	r5, #0
 800d8e0:	db7b      	blt.n	800d9da <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 800d8e2:	fb95 f4f6 	sdiv	r4, r5, r6
 800d8e6:	6044      	str	r4, [r0, #4]
 800d8e8:	fb06 5514 	mls	r5, r6, r4, r5
 800d8ec:	6085      	str	r5, [r0, #8]
 800d8ee:	60c6      	str	r6, [r0, #12]
 800d8f0:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800d8f4:	6945      	ldr	r5, [r0, #20]
 800d8f6:	59d2      	ldr	r2, [r2, r7]
 800d8f8:	eddf 6a43 	vldr	s13, [pc, #268]	; 800da08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>
 800d8fc:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800d900:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800d904:	ee07 4a10 	vmov	s14, r4
 800d908:	6804      	ldr	r4, [r0, #0]
 800d90a:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800d90e:	ee07 2a90 	vmov	s15, r2
 800d912:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d916:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d91a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800d91e:	ee27 7a26 	vmul.f32	s14, s14, s13
 800d922:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800d926:	edd3 6a00 	vldr	s13, [r3]
 800d92a:	eee6 6a07 	vfma.f32	s13, s12, s14
 800d92e:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 800d932:	eee6 6a27 	vfma.f32	s13, s12, s15
 800d936:	edc0 6a07 	vstr	s13, [r0, #28]
 800d93a:	edd0 6a01 	vldr	s13, [r0, #4]
 800d93e:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 800d942:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800d946:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800d94a:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800d94e:	ed80 6a08 	vstr	s12, [r0, #32]
 800d952:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d954:	6242      	str	r2, [r0, #36]	; 0x24
 800d956:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 800d95a:	ed93 6a03 	vldr	s12, [r3, #12]
 800d95e:	eea5 6a87 	vfma.f32	s12, s11, s14
 800d962:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800d966:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800d96a:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 800d96e:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800d972:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 800d976:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800d97a:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 800d97e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800d980:	6302      	str	r2, [r0, #48]	; 0x30
 800d982:	ed93 6a06 	vldr	s12, [r3, #24]
 800d986:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 800d98a:	eea5 6a87 	vfma.f32	s12, s11, s14
 800d98e:	eeb0 7a46 	vmov.f32	s14, s12
 800d992:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 800d996:	eea6 7a27 	vfma.f32	s14, s12, s15
 800d99a:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800d99e:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 800d9a2:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 800d9a6:	eee6 7a87 	vfma.f32	s15, s13, s14
 800d9aa:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 800d9ae:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 800d9b0:	63c3      	str	r3, [r0, #60]	; 0x3c
 800d9b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d9b6:	4264      	negs	r4, r4
 800d9b8:	fb94 fef6 	sdiv	lr, r4, r6
 800d9bc:	f1ce 0800 	rsb	r8, lr, #0
 800d9c0:	fb06 441e 	mls	r4, r6, lr, r4
 800d9c4:	f8c0 8000 	str.w	r8, [r0]
 800d9c8:	6104      	str	r4, [r0, #16]
 800d9ca:	2c00      	cmp	r4, #0
 800d9cc:	d087      	beq.n	800d8de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 800d9ce:	ea6f 0e0e 	mvn.w	lr, lr
 800d9d2:	f8c0 e000 	str.w	lr, [r0]
 800d9d6:	1b34      	subs	r4, r6, r4
 800d9d8:	e780      	b.n	800d8dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbc>
 800d9da:	426d      	negs	r5, r5
 800d9dc:	fb95 f4f6 	sdiv	r4, r5, r6
 800d9e0:	f1c4 0e00 	rsb	lr, r4, #0
 800d9e4:	fb06 5514 	mls	r5, r6, r4, r5
 800d9e8:	f8c0 e004 	str.w	lr, [r0, #4]
 800d9ec:	6085      	str	r5, [r0, #8]
 800d9ee:	2d00      	cmp	r5, #0
 800d9f0:	f43f af7d 	beq.w	800d8ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 800d9f4:	43e4      	mvns	r4, r4
 800d9f6:	6044      	str	r4, [r0, #4]
 800d9f8:	1b75      	subs	r5, r6, r5
 800d9fa:	e777      	b.n	800d8ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xcc>
 800d9fc:	0801d3f9 	.word	0x0801d3f9
 800da00:	0801d438 	.word	0x0801d438
 800da04:	0801d409 	.word	0x0801d409
 800da08:	3d800000 	.word	0x3d800000

0800da0c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800da0c:	4b01      	ldr	r3, [pc, #4]	; (800da14 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800da0e:	6018      	str	r0, [r3, #0]
 800da10:	4770      	bx	lr
 800da12:	bf00      	nop
 800da14:	2000a4f8 	.word	0x2000a4f8

0800da18 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800da18:	4b06      	ldr	r3, [pc, #24]	; (800da34 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800da1a:	881a      	ldrh	r2, [r3, #0]
 800da1c:	4282      	cmp	r2, r0
 800da1e:	d807      	bhi.n	800da30 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800da20:	4b05      	ldr	r3, [pc, #20]	; (800da38 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800da22:	881b      	ldrh	r3, [r3, #0]
 800da24:	4413      	add	r3, r2
 800da26:	4298      	cmp	r0, r3
 800da28:	bfac      	ite	ge
 800da2a:	2000      	movge	r0, #0
 800da2c:	2001      	movlt	r0, #1
 800da2e:	4770      	bx	lr
 800da30:	2000      	movs	r0, #0
 800da32:	4770      	bx	lr
 800da34:	2000a518 	.word	0x2000a518
 800da38:	2000a51c 	.word	0x2000a51c

0800da3c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800da3c:	b508      	push	{r3, lr}
 800da3e:	4601      	mov	r1, r0
 800da40:	f7ff ffea 	bl	800da18 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800da44:	b118      	cbz	r0, 800da4e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800da46:	4b02      	ldr	r3, [pc, #8]	; (800da50 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800da48:	681b      	ldr	r3, [r3, #0]
 800da4a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800da4e:	bd08      	pop	{r3, pc}
 800da50:	2000a4fc 	.word	0x2000a4fc

0800da54 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800da54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da56:	4c24      	ldr	r4, [pc, #144]	; (800dae8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800da58:	6823      	ldr	r3, [r4, #0]
 800da5a:	2b00      	cmp	r3, #0
 800da5c:	d042      	beq.n	800dae4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800da5e:	4a23      	ldr	r2, [pc, #140]	; (800daec <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800da60:	4d23      	ldr	r5, [pc, #140]	; (800daf0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800da62:	8811      	ldrh	r1, [r2, #0]
 800da64:	f8b5 c000 	ldrh.w	ip, [r5]
 800da68:	4822      	ldr	r0, [pc, #136]	; (800daf4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800da6a:	4461      	add	r1, ip
 800da6c:	1c4a      	adds	r2, r1, #1
 800da6e:	f022 0201 	bic.w	r2, r2, #1
 800da72:	008f      	lsls	r7, r1, #2
 800da74:	0412      	lsls	r2, r2, #16
 800da76:	19de      	adds	r6, r3, r7
 800da78:	0c12      	lsrs	r2, r2, #16
 800da7a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800da7e:	6006      	str	r6, [r0, #0]
 800da80:	4e1d      	ldr	r6, [pc, #116]	; (800daf8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800da82:	19da      	adds	r2, r3, r7
 800da84:	6032      	str	r2, [r6, #0]
 800da86:	220e      	movs	r2, #14
 800da88:	fb02 f20c 	mul.w	r2, r2, ip
 800da8c:	3203      	adds	r2, #3
 800da8e:	f022 0203 	bic.w	r2, r2, #3
 800da92:	443a      	add	r2, r7
 800da94:	4f19      	ldr	r7, [pc, #100]	; (800dafc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800da96:	4413      	add	r3, r2
 800da98:	603b      	str	r3, [r7, #0]
 800da9a:	4f19      	ldr	r7, [pc, #100]	; (800db00 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800da9c:	2300      	movs	r3, #0
 800da9e:	803b      	strh	r3, [r7, #0]
 800daa0:	4f18      	ldr	r7, [pc, #96]	; (800db04 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800daa2:	683f      	ldr	r7, [r7, #0]
 800daa4:	1aba      	subs	r2, r7, r2
 800daa6:	4f18      	ldr	r7, [pc, #96]	; (800db08 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800daa8:	603a      	str	r2, [r7, #0]
 800daaa:	4a18      	ldr	r2, [pc, #96]	; (800db0c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800daac:	469c      	mov	ip, r3
 800daae:	8013      	strh	r3, [r2, #0]
 800dab0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800dab4:	428b      	cmp	r3, r1
 800dab6:	d10d      	bne.n	800dad4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800dab8:	882d      	ldrh	r5, [r5, #0]
 800daba:	6830      	ldr	r0, [r6, #0]
 800dabc:	2300      	movs	r3, #0
 800dabe:	240e      	movs	r4, #14
 800dac0:	429d      	cmp	r5, r3
 800dac2:	d90f      	bls.n	800dae4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800dac4:	fb04 0203 	mla	r2, r4, r3, r0
 800dac8:	3301      	adds	r3, #1
 800daca:	7b11      	ldrb	r1, [r2, #12]
 800dacc:	f36f 1145 	bfc	r1, #5, #1
 800dad0:	7311      	strb	r1, [r2, #12]
 800dad2:	e7f5      	b.n	800dac0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800dad4:	6822      	ldr	r2, [r4, #0]
 800dad6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800dada:	6802      	ldr	r2, [r0, #0]
 800dadc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800dae0:	3301      	adds	r3, #1
 800dae2:	e7e7      	b.n	800dab4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800dae4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dae6:	bf00      	nop
 800dae8:	2000a4fc 	.word	0x2000a4fc
 800daec:	2000a518 	.word	0x2000a518
 800daf0:	2000a51c 	.word	0x2000a51c
 800daf4:	2000a510 	.word	0x2000a510
 800daf8:	2000a500 	.word	0x2000a500
 800dafc:	2000a508 	.word	0x2000a508
 800db00:	2000a51a 	.word	0x2000a51a
 800db04:	2000a504 	.word	0x2000a504
 800db08:	2000a514 	.word	0x2000a514
 800db0c:	2000a50c 	.word	0x2000a50c

0800db10 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800db10:	b510      	push	{r4, lr}
 800db12:	4b10      	ldr	r3, [pc, #64]	; (800db54 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800db14:	681b      	ldr	r3, [r3, #0]
 800db16:	b9db      	cbnz	r3, 800db50 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800db18:	b1d1      	cbz	r1, 800db50 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800db1a:	4b0f      	ldr	r3, [pc, #60]	; (800db58 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800db1c:	801a      	strh	r2, [r3, #0]
 800db1e:	4b0f      	ldr	r3, [pc, #60]	; (800db5c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800db20:	881b      	ldrh	r3, [r3, #0]
 800db22:	b292      	uxth	r2, r2
 800db24:	240e      	movs	r4, #14
 800db26:	4413      	add	r3, r2
 800db28:	4362      	muls	r2, r4
 800db2a:	2406      	movs	r4, #6
 800db2c:	fb04 2203 	mla	r2, r4, r3, r2
 800db30:	428a      	cmp	r2, r1
 800db32:	d305      	bcc.n	800db40 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800db34:	4b0a      	ldr	r3, [pc, #40]	; (800db60 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800db36:	4a0b      	ldr	r2, [pc, #44]	; (800db64 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800db38:	480b      	ldr	r0, [pc, #44]	; (800db68 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800db3a:	2134      	movs	r1, #52	; 0x34
 800db3c:	f00c f972 	bl	8019e24 <__assert_func>
 800db40:	4b0a      	ldr	r3, [pc, #40]	; (800db6c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800db42:	6019      	str	r1, [r3, #0]
 800db44:	4b0a      	ldr	r3, [pc, #40]	; (800db70 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800db46:	6018      	str	r0, [r3, #0]
 800db48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800db4c:	f7ff bf82 	b.w	800da54 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800db50:	bd10      	pop	{r4, pc}
 800db52:	bf00      	nop
 800db54:	2000a508 	.word	0x2000a508
 800db58:	2000a51c 	.word	0x2000a51c
 800db5c:	2000a518 	.word	0x2000a518
 800db60:	0801d4d6 	.word	0x0801d4d6
 800db64:	0801d56b 	.word	0x0801d56b
 800db68:	0801d4b1 	.word	0x0801d4b1
 800db6c:	2000a504 	.word	0x2000a504
 800db70:	2000a4fc 	.word	0x2000a4fc

0800db74 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800db74:	b470      	push	{r4, r5, r6}
 800db76:	4c07      	ldr	r4, [pc, #28]	; (800db94 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800db78:	6826      	ldr	r6, [r4, #0]
 800db7a:	4605      	mov	r5, r0
 800db7c:	4610      	mov	r0, r2
 800db7e:	9a03      	ldr	r2, [sp, #12]
 800db80:	b936      	cbnz	r6, 800db90 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800db82:	6025      	str	r5, [r4, #0]
 800db84:	4c04      	ldr	r4, [pc, #16]	; (800db98 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800db86:	8021      	strh	r1, [r4, #0]
 800db88:	bc70      	pop	{r4, r5, r6}
 800db8a:	4619      	mov	r1, r3
 800db8c:	f7ff bfc0 	b.w	800db10 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800db90:	bc70      	pop	{r4, r5, r6}
 800db92:	4770      	bx	lr
 800db94:	2000a520 	.word	0x2000a520
 800db98:	2000a518 	.word	0x2000a518

0800db9c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800db9c:	b508      	push	{r3, lr}
 800db9e:	4b17      	ldr	r3, [pc, #92]	; (800dbfc <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800dba0:	6819      	ldr	r1, [r3, #0]
 800dba2:	b931      	cbnz	r1, 800dbb2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800dba4:	4b16      	ldr	r3, [pc, #88]	; (800dc00 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800dba6:	4a17      	ldr	r2, [pc, #92]	; (800dc04 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800dba8:	4817      	ldr	r0, [pc, #92]	; (800dc08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800dbaa:	f240 4184 	movw	r1, #1156	; 0x484
 800dbae:	f00c f939 	bl	8019e24 <__assert_func>
 800dbb2:	4a16      	ldr	r2, [pc, #88]	; (800dc0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800dbb4:	8803      	ldrh	r3, [r0, #0]
 800dbb6:	8812      	ldrh	r2, [r2, #0]
 800dbb8:	4293      	cmp	r3, r2
 800dbba:	d204      	bcs.n	800dbc6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800dbbc:	2214      	movs	r2, #20
 800dbbe:	fb02 1303 	mla	r3, r2, r3, r1
 800dbc2:	8918      	ldrh	r0, [r3, #8]
 800dbc4:	bd08      	pop	{r3, pc}
 800dbc6:	4912      	ldr	r1, [pc, #72]	; (800dc10 <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 800dbc8:	8809      	ldrh	r1, [r1, #0]
 800dbca:	4411      	add	r1, r2
 800dbcc:	428b      	cmp	r3, r1
 800dbce:	da06      	bge.n	800dbde <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800dbd0:	1a9b      	subs	r3, r3, r2
 800dbd2:	4a10      	ldr	r2, [pc, #64]	; (800dc14 <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 800dbd4:	6812      	ldr	r2, [r2, #0]
 800dbd6:	210e      	movs	r1, #14
 800dbd8:	fb01 2303 	mla	r3, r1, r3, r2
 800dbdc:	e7f1      	b.n	800dbc2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800dbde:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800dbe2:	4293      	cmp	r3, r2
 800dbe4:	d107      	bne.n	800dbf6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 800dbe6:	4b0c      	ldr	r3, [pc, #48]	; (800dc18 <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 800dbe8:	781b      	ldrb	r3, [r3, #0]
 800dbea:	b913      	cbnz	r3, 800dbf2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 800dbec:	4b0b      	ldr	r3, [pc, #44]	; (800dc1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 800dbee:	8818      	ldrh	r0, [r3, #0]
 800dbf0:	e7e8      	b.n	800dbc4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800dbf2:	4b0b      	ldr	r3, [pc, #44]	; (800dc20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 800dbf4:	e7fb      	b.n	800dbee <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 800dbf6:	2000      	movs	r0, #0
 800dbf8:	e7e4      	b.n	800dbc4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800dbfa:	bf00      	nop
 800dbfc:	2000a520 	.word	0x2000a520
 800dc00:	0801d52f 	.word	0x0801d52f
 800dc04:	0801d618 	.word	0x0801d618
 800dc08:	0801d4b1 	.word	0x0801d4b1
 800dc0c:	2000a518 	.word	0x2000a518
 800dc10:	2000a51c 	.word	0x2000a51c
 800dc14:	2000a500 	.word	0x2000a500
 800dc18:	2000a490 	.word	0x2000a490
 800dc1c:	2000a492 	.word	0x2000a492
 800dc20:	2000a494 	.word	0x2000a494

0800dc24 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800dc24:	b508      	push	{r3, lr}
 800dc26:	4b17      	ldr	r3, [pc, #92]	; (800dc84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800dc28:	6819      	ldr	r1, [r3, #0]
 800dc2a:	b931      	cbnz	r1, 800dc3a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800dc2c:	4b16      	ldr	r3, [pc, #88]	; (800dc88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800dc2e:	4a17      	ldr	r2, [pc, #92]	; (800dc8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800dc30:	4817      	ldr	r0, [pc, #92]	; (800dc90 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800dc32:	f44f 6193 	mov.w	r1, #1176	; 0x498
 800dc36:	f00c f8f5 	bl	8019e24 <__assert_func>
 800dc3a:	4a16      	ldr	r2, [pc, #88]	; (800dc94 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800dc3c:	8803      	ldrh	r3, [r0, #0]
 800dc3e:	8812      	ldrh	r2, [r2, #0]
 800dc40:	4293      	cmp	r3, r2
 800dc42:	d204      	bcs.n	800dc4e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800dc44:	2214      	movs	r2, #20
 800dc46:	fb02 1303 	mla	r3, r2, r3, r1
 800dc4a:	8958      	ldrh	r0, [r3, #10]
 800dc4c:	bd08      	pop	{r3, pc}
 800dc4e:	4912      	ldr	r1, [pc, #72]	; (800dc98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 800dc50:	8809      	ldrh	r1, [r1, #0]
 800dc52:	4411      	add	r1, r2
 800dc54:	428b      	cmp	r3, r1
 800dc56:	da06      	bge.n	800dc66 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800dc58:	1a9b      	subs	r3, r3, r2
 800dc5a:	4a10      	ldr	r2, [pc, #64]	; (800dc9c <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 800dc5c:	6812      	ldr	r2, [r2, #0]
 800dc5e:	210e      	movs	r1, #14
 800dc60:	fb01 2303 	mla	r3, r1, r3, r2
 800dc64:	e7f1      	b.n	800dc4a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800dc66:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800dc6a:	4293      	cmp	r3, r2
 800dc6c:	d107      	bne.n	800dc7e <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 800dc6e:	4b0c      	ldr	r3, [pc, #48]	; (800dca0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 800dc70:	781b      	ldrb	r3, [r3, #0]
 800dc72:	b913      	cbnz	r3, 800dc7a <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 800dc74:	4b0b      	ldr	r3, [pc, #44]	; (800dca4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 800dc76:	8818      	ldrh	r0, [r3, #0]
 800dc78:	e7e8      	b.n	800dc4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800dc7a:	4b0b      	ldr	r3, [pc, #44]	; (800dca8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 800dc7c:	e7fb      	b.n	800dc76 <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 800dc7e:	2000      	movs	r0, #0
 800dc80:	e7e4      	b.n	800dc4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800dc82:	bf00      	nop
 800dc84:	2000a520 	.word	0x2000a520
 800dc88:	0801d52f 	.word	0x0801d52f
 800dc8c:	0801d644 	.word	0x0801d644
 800dc90:	0801d4b1 	.word	0x0801d4b1
 800dc94:	2000a518 	.word	0x2000a518
 800dc98:	2000a51c 	.word	0x2000a51c
 800dc9c:	2000a500 	.word	0x2000a500
 800dca0:	2000a490 	.word	0x2000a490
 800dca4:	2000a494 	.word	0x2000a494
 800dca8:	2000a492 	.word	0x2000a492

0800dcac <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800dcac:	b510      	push	{r4, lr}
 800dcae:	4b23      	ldr	r3, [pc, #140]	; (800dd3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800dcb0:	681c      	ldr	r4, [r3, #0]
 800dcb2:	b934      	cbnz	r4, 800dcc2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800dcb4:	4b22      	ldr	r3, [pc, #136]	; (800dd40 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800dcb6:	4a23      	ldr	r2, [pc, #140]	; (800dd44 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800dcb8:	4823      	ldr	r0, [pc, #140]	; (800dd48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800dcba:	f240 41ac 	movw	r1, #1196	; 0x4ac
 800dcbe:	f00c f8b1 	bl	8019e24 <__assert_func>
 800dcc2:	4a22      	ldr	r2, [pc, #136]	; (800dd4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800dcc4:	880b      	ldrh	r3, [r1, #0]
 800dcc6:	8812      	ldrh	r2, [r2, #0]
 800dcc8:	4293      	cmp	r3, r2
 800dcca:	d211      	bcs.n	800dcf0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800dccc:	2214      	movs	r2, #20
 800dcce:	fb02 4303 	mla	r3, r2, r3, r4
 800dcd2:	8a1a      	ldrh	r2, [r3, #16]
 800dcd4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800dcd8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800dcdc:	8a5b      	ldrh	r3, [r3, #18]
 800dcde:	8004      	strh	r4, [r0, #0]
 800dce0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800dce4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800dce8:	8041      	strh	r1, [r0, #2]
 800dcea:	8082      	strh	r2, [r0, #4]
 800dcec:	80c3      	strh	r3, [r0, #6]
 800dcee:	e00e      	b.n	800dd0e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800dcf0:	4917      	ldr	r1, [pc, #92]	; (800dd50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800dcf2:	8809      	ldrh	r1, [r1, #0]
 800dcf4:	4411      	add	r1, r2
 800dcf6:	428b      	cmp	r3, r1
 800dcf8:	da0a      	bge.n	800dd10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800dcfa:	1a9b      	subs	r3, r3, r2
 800dcfc:	4a15      	ldr	r2, [pc, #84]	; (800dd54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800dcfe:	6812      	ldr	r2, [r2, #0]
 800dd00:	210e      	movs	r1, #14
 800dd02:	fb01 2303 	mla	r3, r1, r3, r2
 800dd06:	681a      	ldr	r2, [r3, #0]
 800dd08:	6002      	str	r2, [r0, #0]
 800dd0a:	685a      	ldr	r2, [r3, #4]
 800dd0c:	6042      	str	r2, [r0, #4]
 800dd0e:	bd10      	pop	{r4, pc}
 800dd10:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800dd14:	4293      	cmp	r3, r2
 800dd16:	d10b      	bne.n	800dd30 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800dd18:	4b0f      	ldr	r3, [pc, #60]	; (800dd58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800dd1a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800dd1e:	4b0f      	ldr	r3, [pc, #60]	; (800dd5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800dd20:	8081      	strh	r1, [r0, #4]
 800dd22:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dd26:	80c2      	strh	r2, [r0, #6]
 800dd28:	2300      	movs	r3, #0
 800dd2a:	8003      	strh	r3, [r0, #0]
 800dd2c:	8043      	strh	r3, [r0, #2]
 800dd2e:	e7ee      	b.n	800dd0e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800dd30:	2300      	movs	r3, #0
 800dd32:	8003      	strh	r3, [r0, #0]
 800dd34:	8043      	strh	r3, [r0, #2]
 800dd36:	8083      	strh	r3, [r0, #4]
 800dd38:	e7d8      	b.n	800dcec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800dd3a:	bf00      	nop
 800dd3c:	2000a520 	.word	0x2000a520
 800dd40:	0801d52f 	.word	0x0801d52f
 800dd44:	0801d5b1 	.word	0x0801d5b1
 800dd48:	0801d4b1 	.word	0x0801d4b1
 800dd4c:	2000a518 	.word	0x2000a518
 800dd50:	2000a51c 	.word	0x2000a51c
 800dd54:	2000a500 	.word	0x2000a500
 800dd58:	2000a48c 	.word	0x2000a48c
 800dd5c:	2000a48e 	.word	0x2000a48e

0800dd60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800dd60:	4b18      	ldr	r3, [pc, #96]	; (800ddc4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800dd62:	681b      	ldr	r3, [r3, #0]
 800dd64:	b34b      	cbz	r3, 800ddba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800dd66:	4a18      	ldr	r2, [pc, #96]	; (800ddc8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800dd68:	8800      	ldrh	r0, [r0, #0]
 800dd6a:	8812      	ldrh	r2, [r2, #0]
 800dd6c:	4290      	cmp	r0, r2
 800dd6e:	d211      	bcs.n	800dd94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800dd70:	2214      	movs	r2, #20
 800dd72:	fb02 3300 	mla	r3, r2, r0, r3
 800dd76:	8a1a      	ldrh	r2, [r3, #16]
 800dd78:	8919      	ldrh	r1, [r3, #8]
 800dd7a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800dd7e:	428a      	cmp	r2, r1
 800dd80:	db1d      	blt.n	800ddbe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800dd82:	8a58      	ldrh	r0, [r3, #18]
 800dd84:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800dd88:	895b      	ldrh	r3, [r3, #10]
 800dd8a:	4298      	cmp	r0, r3
 800dd8c:	bfac      	ite	ge
 800dd8e:	2000      	movge	r0, #0
 800dd90:	2001      	movlt	r0, #1
 800dd92:	4770      	bx	lr
 800dd94:	4b0d      	ldr	r3, [pc, #52]	; (800ddcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800dd96:	881b      	ldrh	r3, [r3, #0]
 800dd98:	4413      	add	r3, r2
 800dd9a:	4298      	cmp	r0, r3
 800dd9c:	da0d      	bge.n	800ddba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800dd9e:	4b0c      	ldr	r3, [pc, #48]	; (800ddd0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800dda0:	681b      	ldr	r3, [r3, #0]
 800dda2:	1a80      	subs	r0, r0, r2
 800dda4:	220e      	movs	r2, #14
 800dda6:	fb02 3300 	mla	r3, r2, r0, r3
 800ddaa:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800ddae:	891a      	ldrh	r2, [r3, #8]
 800ddb0:	4291      	cmp	r1, r2
 800ddb2:	db04      	blt.n	800ddbe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800ddb4:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800ddb8:	e7e6      	b.n	800dd88 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800ddba:	2000      	movs	r0, #0
 800ddbc:	4770      	bx	lr
 800ddbe:	2001      	movs	r0, #1
 800ddc0:	4770      	bx	lr
 800ddc2:	bf00      	nop
 800ddc4:	2000a520 	.word	0x2000a520
 800ddc8:	2000a518 	.word	0x2000a518
 800ddcc:	2000a51c 	.word	0x2000a51c
 800ddd0:	2000a500 	.word	0x2000a500

0800ddd4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800ddd4:	b508      	push	{r3, lr}
 800ddd6:	4b12      	ldr	r3, [pc, #72]	; (800de20 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800ddd8:	6819      	ldr	r1, [r3, #0]
 800ddda:	b931      	cbnz	r1, 800ddea <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800dddc:	4b11      	ldr	r3, [pc, #68]	; (800de24 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800ddde:	4a12      	ldr	r2, [pc, #72]	; (800de28 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800dde0:	4812      	ldr	r0, [pc, #72]	; (800de2c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800dde2:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 800dde6:	f00c f81d 	bl	8019e24 <__assert_func>
 800ddea:	8803      	ldrh	r3, [r0, #0]
 800ddec:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ddf0:	4293      	cmp	r3, r2
 800ddf2:	d012      	beq.n	800de1a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800ddf4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ddf8:	4293      	cmp	r3, r2
 800ddfa:	d103      	bne.n	800de04 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800ddfc:	4b0c      	ldr	r3, [pc, #48]	; (800de30 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800ddfe:	681b      	ldr	r3, [r3, #0]
 800de00:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800de02:	bd08      	pop	{r3, pc}
 800de04:	4a0b      	ldr	r2, [pc, #44]	; (800de34 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800de06:	6812      	ldr	r2, [r2, #0]
 800de08:	b11a      	cbz	r2, 800de12 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800de0a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800de0e:	2800      	cmp	r0, #0
 800de10:	d1f7      	bne.n	800de02 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800de12:	2214      	movs	r2, #20
 800de14:	4353      	muls	r3, r2
 800de16:	58c8      	ldr	r0, [r1, r3]
 800de18:	e7f3      	b.n	800de02 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800de1a:	2000      	movs	r0, #0
 800de1c:	e7f1      	b.n	800de02 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800de1e:	bf00      	nop
 800de20:	2000a520 	.word	0x2000a520
 800de24:	0801d52f 	.word	0x0801d52f
 800de28:	0801d5e7 	.word	0x0801d5e7
 800de2c:	0801d4b1 	.word	0x0801d4b1
 800de30:	2000a498 	.word	0x2000a498
 800de34:	2000a4fc 	.word	0x2000a4fc

0800de38 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800de38:	8802      	ldrh	r2, [r0, #0]
 800de3a:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800de3e:	429a      	cmp	r2, r3
 800de40:	d845      	bhi.n	800dece <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800de42:	4b24      	ldr	r3, [pc, #144]	; (800ded4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800de44:	8818      	ldrh	r0, [r3, #0]
 800de46:	4282      	cmp	r2, r0
 800de48:	d221      	bcs.n	800de8e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800de4a:	4b23      	ldr	r3, [pc, #140]	; (800ded8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800de4c:	6819      	ldr	r1, [r3, #0]
 800de4e:	2314      	movs	r3, #20
 800de50:	fb03 1302 	mla	r3, r3, r2, r1
 800de54:	6858      	ldr	r0, [r3, #4]
 800de56:	2800      	cmp	r0, #0
 800de58:	d03a      	beq.n	800ded0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800de5a:	4920      	ldr	r1, [pc, #128]	; (800dedc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800de5c:	6809      	ldr	r1, [r1, #0]
 800de5e:	2900      	cmp	r1, #0
 800de60:	d036      	beq.n	800ded0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800de62:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800de66:	2900      	cmp	r1, #0
 800de68:	d032      	beq.n	800ded0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800de6a:	891a      	ldrh	r2, [r3, #8]
 800de6c:	8958      	ldrh	r0, [r3, #10]
 800de6e:	4350      	muls	r0, r2
 800de70:	7c5a      	ldrb	r2, [r3, #17]
 800de72:	7cdb      	ldrb	r3, [r3, #19]
 800de74:	0952      	lsrs	r2, r2, #5
 800de76:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800de7a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800de7e:	2b0b      	cmp	r3, #11
 800de80:	bf18      	it	ne
 800de82:	0040      	lslne	r0, r0, #1
 800de84:	3003      	adds	r0, #3
 800de86:	f020 0003 	bic.w	r0, r0, #3
 800de8a:	4408      	add	r0, r1
 800de8c:	4770      	bx	lr
 800de8e:	4b14      	ldr	r3, [pc, #80]	; (800dee0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800de90:	881b      	ldrh	r3, [r3, #0]
 800de92:	4403      	add	r3, r0
 800de94:	429a      	cmp	r2, r3
 800de96:	da1a      	bge.n	800dece <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800de98:	4b12      	ldr	r3, [pc, #72]	; (800dee4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800de9a:	681b      	ldr	r3, [r3, #0]
 800de9c:	1a10      	subs	r0, r2, r0
 800de9e:	210e      	movs	r1, #14
 800dea0:	fb01 3000 	mla	r0, r1, r0, r3
 800dea4:	7b03      	ldrb	r3, [r0, #12]
 800dea6:	f003 031f 	and.w	r3, r3, #31
 800deaa:	2b0b      	cmp	r3, #11
 800deac:	d10b      	bne.n	800dec6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800deae:	8903      	ldrh	r3, [r0, #8]
 800deb0:	8940      	ldrh	r0, [r0, #10]
 800deb2:	4358      	muls	r0, r3
 800deb4:	4b09      	ldr	r3, [pc, #36]	; (800dedc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800deb6:	6819      	ldr	r1, [r3, #0]
 800deb8:	3003      	adds	r0, #3
 800deba:	f020 0303 	bic.w	r3, r0, #3
 800debe:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800dec2:	4418      	add	r0, r3
 800dec4:	4770      	bx	lr
 800dec6:	2b0d      	cmp	r3, #13
 800dec8:	d101      	bne.n	800dece <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800deca:	300d      	adds	r0, #13
 800decc:	4770      	bx	lr
 800dece:	2000      	movs	r0, #0
 800ded0:	4770      	bx	lr
 800ded2:	bf00      	nop
 800ded4:	2000a518 	.word	0x2000a518
 800ded8:	2000a520 	.word	0x2000a520
 800dedc:	2000a4fc 	.word	0x2000a4fc
 800dee0:	2000a51c 	.word	0x2000a51c
 800dee4:	2000a500 	.word	0x2000a500

0800dee8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800dee8:	b510      	push	{r4, lr}
 800deea:	4b17      	ldr	r3, [pc, #92]	; (800df48 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800deec:	6819      	ldr	r1, [r3, #0]
 800deee:	8803      	ldrh	r3, [r0, #0]
 800def0:	b1e9      	cbz	r1, 800df2e <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800def2:	4a16      	ldr	r2, [pc, #88]	; (800df4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800def4:	8812      	ldrh	r2, [r2, #0]
 800def6:	429a      	cmp	r2, r3
 800def8:	d90a      	bls.n	800df10 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800defa:	2214      	movs	r2, #20
 800defc:	fb02 1303 	mla	r3, r2, r3, r1
 800df00:	7c58      	ldrb	r0, [r3, #17]
 800df02:	0942      	lsrs	r2, r0, #5
 800df04:	7cd8      	ldrb	r0, [r3, #19]
 800df06:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800df0a:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800df0e:	bd10      	pop	{r4, pc}
 800df10:	490f      	ldr	r1, [pc, #60]	; (800df50 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800df12:	8809      	ldrh	r1, [r1, #0]
 800df14:	4411      	add	r1, r2
 800df16:	428b      	cmp	r3, r1
 800df18:	da09      	bge.n	800df2e <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800df1a:	1a9b      	subs	r3, r3, r2
 800df1c:	4a0d      	ldr	r2, [pc, #52]	; (800df54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800df1e:	6812      	ldr	r2, [r2, #0]
 800df20:	210e      	movs	r1, #14
 800df22:	fb01 2303 	mla	r3, r1, r3, r2
 800df26:	7b18      	ldrb	r0, [r3, #12]
 800df28:	f000 001f 	and.w	r0, r0, #31
 800df2c:	e7ef      	b.n	800df0e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800df2e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800df32:	4293      	cmp	r3, r2
 800df34:	d106      	bne.n	800df44 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800df36:	f7fb faef 	bl	8009518 <_ZN8touchgfx3HAL3lcdEv>
 800df3a:	6803      	ldr	r3, [r0, #0]
 800df3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800df42:	4718      	bx	r3
 800df44:	2000      	movs	r0, #0
 800df46:	e7e2      	b.n	800df0e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800df48:	2000a520 	.word	0x2000a520
 800df4c:	2000a518 	.word	0x2000a518
 800df50:	2000a51c 	.word	0x2000a51c
 800df54:	2000a500 	.word	0x2000a500

0800df58 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800df58:	2010      	movs	r0, #16
 800df5a:	4770      	bx	lr

0800df5c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800df5c:	2000      	movs	r0, #0
 800df5e:	4770      	bx	lr

0800df60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800df60:	2bff      	cmp	r3, #255	; 0xff
 800df62:	d050      	beq.n	800e006 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800df64:	2a0b      	cmp	r2, #11
 800df66:	d04a      	beq.n	800dffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800df68:	d80e      	bhi.n	800df88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800df6a:	2a03      	cmp	r2, #3
 800df6c:	d03f      	beq.n	800dfee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800df6e:	d804      	bhi.n	800df7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800df70:	2a01      	cmp	r2, #1
 800df72:	d03e      	beq.n	800dff2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800df74:	d93f      	bls.n	800dff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800df76:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800df78:	4770      	bx	lr
 800df7a:	2a09      	cmp	r2, #9
 800df7c:	d03f      	beq.n	800dffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800df7e:	d83c      	bhi.n	800dffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800df80:	2a08      	cmp	r2, #8
 800df82:	d03a      	beq.n	800dffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800df84:	2000      	movs	r0, #0
 800df86:	4770      	bx	lr
 800df88:	2a2f      	cmp	r2, #47	; 0x2f
 800df8a:	d024      	beq.n	800dfd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800df8c:	d80d      	bhi.n	800dfaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800df8e:	2a2d      	cmp	r2, #45	; 0x2d
 800df90:	d014      	beq.n	800dfbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800df92:	d826      	bhi.n	800dfe2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800df94:	2a2c      	cmp	r2, #44	; 0x2c
 800df96:	d1f5      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800df98:	684b      	ldr	r3, [r1, #4]
 800df9a:	781b      	ldrb	r3, [r3, #0]
 800df9c:	2b01      	cmp	r3, #1
 800df9e:	d018      	beq.n	800dfd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800dfa0:	d323      	bcc.n	800dfea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800dfa2:	2b02      	cmp	r3, #2
 800dfa4:	d1ee      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800dfa6:	6880      	ldr	r0, [r0, #8]
 800dfa8:	4770      	bx	lr
 800dfaa:	2a31      	cmp	r2, #49	; 0x31
 800dfac:	d004      	beq.n	800dfb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800dfae:	d328      	bcc.n	800e002 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800dfb0:	2a32      	cmp	r2, #50	; 0x32
 800dfb2:	d026      	beq.n	800e002 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800dfb4:	2a33      	cmp	r2, #51	; 0x33
 800dfb6:	d1e5      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800dfb8:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800dfba:	4770      	bx	lr
 800dfbc:	684b      	ldr	r3, [r1, #4]
 800dfbe:	781b      	ldrb	r3, [r3, #0]
 800dfc0:	2b01      	cmp	r3, #1
 800dfc2:	d004      	beq.n	800dfce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800dfc4:	d30b      	bcc.n	800dfde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800dfc6:	2b02      	cmp	r3, #2
 800dfc8:	d1dc      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800dfca:	6900      	ldr	r0, [r0, #16]
 800dfcc:	4770      	bx	lr
 800dfce:	6a00      	ldr	r0, [r0, #32]
 800dfd0:	4770      	bx	lr
 800dfd2:	6980      	ldr	r0, [r0, #24]
 800dfd4:	4770      	bx	lr
 800dfd6:	684b      	ldr	r3, [r1, #4]
 800dfd8:	781b      	ldrb	r3, [r3, #0]
 800dfda:	2b00      	cmp	r3, #0
 800dfdc:	d1d2      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800dfde:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800dfe0:	4770      	bx	lr
 800dfe2:	684b      	ldr	r3, [r1, #4]
 800dfe4:	781b      	ldrb	r3, [r3, #0]
 800dfe6:	2b00      	cmp	r3, #0
 800dfe8:	d1cc      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800dfea:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800dfec:	4770      	bx	lr
 800dfee:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800dff0:	4770      	bx	lr
 800dff2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800dff4:	4770      	bx	lr
 800dff6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800dff8:	4770      	bx	lr
 800dffa:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800dffc:	4770      	bx	lr
 800dffe:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800e000:	4770      	bx	lr
 800e002:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800e004:	4770      	bx	lr
 800e006:	2a0b      	cmp	r2, #11
 800e008:	d049      	beq.n	800e09e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800e00a:	d80e      	bhi.n	800e02a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800e00c:	2a03      	cmp	r2, #3
 800e00e:	d040      	beq.n	800e092 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800e010:	d804      	bhi.n	800e01c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800e012:	2a01      	cmp	r2, #1
 800e014:	d03f      	beq.n	800e096 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800e016:	d940      	bls.n	800e09a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800e018:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800e01a:	4770      	bx	lr
 800e01c:	2a09      	cmp	r2, #9
 800e01e:	d03e      	beq.n	800e09e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800e020:	d801      	bhi.n	800e026 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800e022:	2a08      	cmp	r2, #8
 800e024:	d1ae      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e026:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800e028:	4770      	bx	lr
 800e02a:	2a2f      	cmp	r2, #47	; 0x2f
 800e02c:	d024      	beq.n	800e078 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800e02e:	d80d      	bhi.n	800e04c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800e030:	2a2d      	cmp	r2, #45	; 0x2d
 800e032:	d014      	beq.n	800e05e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800e034:	d826      	bhi.n	800e084 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800e036:	2a2c      	cmp	r2, #44	; 0x2c
 800e038:	d1a4      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e03a:	684b      	ldr	r3, [r1, #4]
 800e03c:	781b      	ldrb	r3, [r3, #0]
 800e03e:	2b01      	cmp	r3, #1
 800e040:	d018      	beq.n	800e074 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800e042:	d324      	bcc.n	800e08e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800e044:	2b02      	cmp	r3, #2
 800e046:	d19d      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e048:	68c0      	ldr	r0, [r0, #12]
 800e04a:	4770      	bx	lr
 800e04c:	2a31      	cmp	r2, #49	; 0x31
 800e04e:	d004      	beq.n	800e05a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800e050:	d327      	bcc.n	800e0a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800e052:	2a32      	cmp	r2, #50	; 0x32
 800e054:	d025      	beq.n	800e0a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800e056:	2a33      	cmp	r2, #51	; 0x33
 800e058:	d194      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e05a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800e05c:	4770      	bx	lr
 800e05e:	684b      	ldr	r3, [r1, #4]
 800e060:	781b      	ldrb	r3, [r3, #0]
 800e062:	2b01      	cmp	r3, #1
 800e064:	d004      	beq.n	800e070 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800e066:	d30b      	bcc.n	800e080 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800e068:	2b02      	cmp	r3, #2
 800e06a:	d18b      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e06c:	6940      	ldr	r0, [r0, #20]
 800e06e:	4770      	bx	lr
 800e070:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e072:	4770      	bx	lr
 800e074:	69c0      	ldr	r0, [r0, #28]
 800e076:	4770      	bx	lr
 800e078:	684b      	ldr	r3, [r1, #4]
 800e07a:	781b      	ldrb	r3, [r3, #0]
 800e07c:	2b00      	cmp	r3, #0
 800e07e:	d181      	bne.n	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e080:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800e082:	4770      	bx	lr
 800e084:	684b      	ldr	r3, [r1, #4]
 800e086:	781b      	ldrb	r3, [r3, #0]
 800e088:	2b00      	cmp	r3, #0
 800e08a:	f47f af7b 	bne.w	800df84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e08e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800e090:	4770      	bx	lr
 800e092:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e094:	4770      	bx	lr
 800e096:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800e098:	4770      	bx	lr
 800e09a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800e09c:	4770      	bx	lr
 800e09e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800e0a0:	4770      	bx	lr
 800e0a2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800e0a4:	4770      	bx	lr

0800e0a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e0a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0aa:	b087      	sub	sp, #28
 800e0ac:	9815      	ldr	r0, [sp, #84]	; 0x54
 800e0ae:	9205      	str	r2, [sp, #20]
 800e0b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800e0b4:	9202      	str	r2, [sp, #8]
 800e0b6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e0ba:	9101      	str	r1, [sp, #4]
 800e0bc:	6841      	ldr	r1, [r0, #4]
 800e0be:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800e0c2:	fb01 2404 	mla	r4, r1, r4, r2
 800e0c6:	6802      	ldr	r2, [r0, #0]
 800e0c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e0cc:	f8de 2000 	ldr.w	r2, [lr]
 800e0d0:	9203      	str	r2, [sp, #12]
 800e0d2:	f8de 2004 	ldr.w	r2, [lr, #4]
 800e0d6:	3204      	adds	r2, #4
 800e0d8:	9204      	str	r2, [sp, #16]
 800e0da:	9a02      	ldr	r2, [sp, #8]
 800e0dc:	43d6      	mvns	r6, r2
 800e0de:	b2f6      	uxtb	r6, r6
 800e0e0:	9a01      	ldr	r2, [sp, #4]
 800e0e2:	2a00      	cmp	r2, #0
 800e0e4:	dc03      	bgt.n	800e0ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800e0e6:	9a05      	ldr	r2, [sp, #20]
 800e0e8:	2a00      	cmp	r2, #0
 800e0ea:	f340 8129 	ble.w	800e340 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800e0ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e0f0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800e0f4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800e0f8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e0fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e0fe:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e102:	2b00      	cmp	r3, #0
 800e104:	dd0e      	ble.n	800e124 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e106:	1408      	asrs	r0, r1, #16
 800e108:	d405      	bmi.n	800e116 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e10a:	4560      	cmp	r0, ip
 800e10c:	da03      	bge.n	800e116 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e10e:	1410      	asrs	r0, r2, #16
 800e110:	d401      	bmi.n	800e116 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e112:	42b8      	cmp	r0, r7
 800e114:	db07      	blt.n	800e126 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800e116:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e118:	4401      	add	r1, r0
 800e11a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e11c:	3b01      	subs	r3, #1
 800e11e:	4402      	add	r2, r0
 800e120:	3402      	adds	r4, #2
 800e122:	e7ee      	b.n	800e102 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800e124:	d071      	beq.n	800e20a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800e126:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e128:	1e58      	subs	r0, r3, #1
 800e12a:	fb05 1500 	mla	r5, r5, r0, r1
 800e12e:	142d      	asrs	r5, r5, #16
 800e130:	d45f      	bmi.n	800e1f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e132:	4565      	cmp	r5, ip
 800e134:	da5d      	bge.n	800e1f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e136:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e138:	fb05 2000 	mla	r0, r5, r0, r2
 800e13c:	1400      	asrs	r0, r0, #16
 800e13e:	d458      	bmi.n	800e1f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e140:	42b8      	cmp	r0, r7
 800e142:	da56      	bge.n	800e1f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e144:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800e148:	4699      	mov	r9, r3
 800e14a:	46a2      	mov	sl, r4
 800e14c:	f1b9 0f00 	cmp.w	r9, #0
 800e150:	dd57      	ble.n	800e202 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800e152:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800e156:	9803      	ldr	r0, [sp, #12]
 800e158:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800e15c:	140d      	asrs	r5, r1, #16
 800e15e:	fb07 000c 	mla	r0, r7, ip, r0
 800e162:	f109 39ff 	add.w	r9, r9, #4294967295
 800e166:	5d40      	ldrb	r0, [r0, r5]
 800e168:	9d04      	ldr	r5, [sp, #16]
 800e16a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800e16e:	f8ba 5000 	ldrh.w	r5, [sl]
 800e172:	122f      	asrs	r7, r5, #8
 800e174:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e178:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e17c:	fb17 f706 	smulbb	r7, r7, r6
 800e180:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800e184:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e188:	00ed      	lsls	r5, r5, #3
 800e18a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800e18e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800e192:	10c7      	asrs	r7, r0, #3
 800e194:	b2ed      	uxtb	r5, r5
 800e196:	00c0      	lsls	r0, r0, #3
 800e198:	fb18 f806 	smulbb	r8, r8, r6
 800e19c:	fb15 f506 	smulbb	r5, r5, r6
 800e1a0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e1a4:	b2c0      	uxtb	r0, r0
 800e1a6:	fa1f fc8c 	uxth.w	ip, ip
 800e1aa:	fb07 870b 	mla	r7, r7, fp, r8
 800e1ae:	fb00 500b 	mla	r0, r0, fp, r5
 800e1b2:	b280      	uxth	r0, r0
 800e1b4:	b2bf      	uxth	r7, r7
 800e1b6:	f10c 0501 	add.w	r5, ip, #1
 800e1ba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800e1be:	f107 0801 	add.w	r8, r7, #1
 800e1c2:	1c45      	adds	r5, r0, #1
 800e1c4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800e1c8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800e1cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e1ce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e1d2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800e1d6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800e1da:	ea45 0c0c 	orr.w	ip, r5, ip
 800e1de:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800e1e2:	4401      	add	r1, r0
 800e1e4:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e1e6:	ea4c 0c08 	orr.w	ip, ip, r8
 800e1ea:	f82a cb02 	strh.w	ip, [sl], #2
 800e1ee:	4402      	add	r2, r0
 800e1f0:	e7ac      	b.n	800e14c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800e1f2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800e1f6:	f04f 0800 	mov.w	r8, #0
 800e1fa:	eb03 0008 	add.w	r0, r3, r8
 800e1fe:	2800      	cmp	r0, #0
 800e200:	dc41      	bgt.n	800e286 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800e202:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e206:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e20a:	9b01      	ldr	r3, [sp, #4]
 800e20c:	2b00      	cmp	r3, #0
 800e20e:	f340 8097 	ble.w	800e340 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800e212:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e216:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e21a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e21e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e220:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e224:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e228:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e22c:	eef0 6a62 	vmov.f32	s13, s5
 800e230:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e234:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e238:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e23c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800e240:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e244:	eef0 6a43 	vmov.f32	s13, s6
 800e248:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e24c:	ee12 2a90 	vmov	r2, s5
 800e250:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e254:	fb92 f3f3 	sdiv	r3, r2, r3
 800e258:	ee13 2a10 	vmov	r2, s6
 800e25c:	9313      	str	r3, [sp, #76]	; 0x4c
 800e25e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e260:	fb92 f3f3 	sdiv	r3, r2, r3
 800e264:	9314      	str	r3, [sp, #80]	; 0x50
 800e266:	9b01      	ldr	r3, [sp, #4]
 800e268:	9a05      	ldr	r2, [sp, #20]
 800e26a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e26e:	3b01      	subs	r3, #1
 800e270:	9301      	str	r3, [sp, #4]
 800e272:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800e276:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e278:	eeb0 3a67 	vmov.f32	s6, s15
 800e27c:	bf08      	it	eq
 800e27e:	4613      	moveq	r3, r2
 800e280:	eef0 2a47 	vmov.f32	s5, s14
 800e284:	e72c      	b.n	800e0e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 800e286:	140f      	asrs	r7, r1, #16
 800e288:	d453      	bmi.n	800e332 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e28a:	f8de 5008 	ldr.w	r5, [lr, #8]
 800e28e:	42bd      	cmp	r5, r7
 800e290:	dd4f      	ble.n	800e332 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e292:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800e296:	d44c      	bmi.n	800e332 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e298:	f8de 000c 	ldr.w	r0, [lr, #12]
 800e29c:	4560      	cmp	r0, ip
 800e29e:	dd48      	ble.n	800e332 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e2a0:	9803      	ldr	r0, [sp, #12]
 800e2a2:	b22d      	sxth	r5, r5
 800e2a4:	fb0c 0505 	mla	r5, ip, r5, r0
 800e2a8:	5de8      	ldrb	r0, [r5, r7]
 800e2aa:	9d04      	ldr	r5, [sp, #16]
 800e2ac:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800e2b0:	f06f 0501 	mvn.w	r5, #1
 800e2b4:	fb05 fb08 	mul.w	fp, r5, r8
 800e2b8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e2bc:	f834 500b 	ldrh.w	r5, [r4, fp]
 800e2c0:	122f      	asrs	r7, r5, #8
 800e2c2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e2c6:	fb17 f706 	smulbb	r7, r7, r6
 800e2ca:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800e2ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e2d2:	00ed      	lsls	r5, r5, #3
 800e2d4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800e2d8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800e2dc:	10c7      	asrs	r7, r0, #3
 800e2de:	b2ed      	uxtb	r5, r5
 800e2e0:	00c0      	lsls	r0, r0, #3
 800e2e2:	fb19 f906 	smulbb	r9, r9, r6
 800e2e6:	fb15 f506 	smulbb	r5, r5, r6
 800e2ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e2ee:	b2c0      	uxtb	r0, r0
 800e2f0:	fa1f fc8c 	uxth.w	ip, ip
 800e2f4:	fb07 970a 	mla	r7, r7, sl, r9
 800e2f8:	fb00 500a 	mla	r0, r0, sl, r5
 800e2fc:	b2bf      	uxth	r7, r7
 800e2fe:	b280      	uxth	r0, r0
 800e300:	f10c 0501 	add.w	r5, ip, #1
 800e304:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800e308:	f107 0901 	add.w	r9, r7, #1
 800e30c:	1c45      	adds	r5, r0, #1
 800e30e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800e312:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800e316:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e31a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800e31e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800e322:	ea45 0c0c 	orr.w	ip, r5, ip
 800e326:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800e32a:	ea4c 0c09 	orr.w	ip, ip, r9
 800e32e:	f824 c00b 	strh.w	ip, [r4, fp]
 800e332:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e334:	4401      	add	r1, r0
 800e336:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e338:	f108 38ff 	add.w	r8, r8, #4294967295
 800e33c:	4402      	add	r2, r0
 800e33e:	e75c      	b.n	800e1fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 800e340:	b007      	add	sp, #28
 800e342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e346 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e346:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e34a:	b085      	sub	sp, #20
 800e34c:	4693      	mov	fp, r2
 800e34e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e350:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800e352:	6870      	ldr	r0, [r6, #4]
 800e354:	9100      	str	r1, [sp, #0]
 800e356:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800e35a:	fb00 2404 	mla	r4, r0, r4, r2
 800e35e:	6832      	ldr	r2, [r6, #0]
 800e360:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e364:	682a      	ldr	r2, [r5, #0]
 800e366:	9201      	str	r2, [sp, #4]
 800e368:	686a      	ldr	r2, [r5, #4]
 800e36a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800e36e:	3204      	adds	r2, #4
 800e370:	9202      	str	r2, [sp, #8]
 800e372:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e376:	9a00      	ldr	r2, [sp, #0]
 800e378:	2a00      	cmp	r2, #0
 800e37a:	dc03      	bgt.n	800e384 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800e37c:	f1bb 0f00 	cmp.w	fp, #0
 800e380:	f340 80a0 	ble.w	800e4c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800e384:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e386:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800e38a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800e38e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e392:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e394:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e398:	2b00      	cmp	r3, #0
 800e39a:	dd0c      	ble.n	800e3b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e39c:	1406      	asrs	r6, r0, #16
 800e39e:	d405      	bmi.n	800e3ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800e3a0:	454e      	cmp	r6, r9
 800e3a2:	da03      	bge.n	800e3ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800e3a4:	1416      	asrs	r6, r2, #16
 800e3a6:	d401      	bmi.n	800e3ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800e3a8:	4546      	cmp	r6, r8
 800e3aa:	db05      	blt.n	800e3b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e3ac:	4470      	add	r0, lr
 800e3ae:	4462      	add	r2, ip
 800e3b0:	3b01      	subs	r3, #1
 800e3b2:	3402      	adds	r4, #2
 800e3b4:	e7f0      	b.n	800e398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800e3b6:	d00f      	beq.n	800e3d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800e3b8:	1e5e      	subs	r6, r3, #1
 800e3ba:	fb0e 0706 	mla	r7, lr, r6, r0
 800e3be:	143f      	asrs	r7, r7, #16
 800e3c0:	d541      	bpl.n	800e446 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 800e3c2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800e3c6:	4698      	mov	r8, r3
 800e3c8:	9603      	str	r6, [sp, #12]
 800e3ca:	f1b8 0f00 	cmp.w	r8, #0
 800e3ce:	dc59      	bgt.n	800e484 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800e3d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e3d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e3d8:	9b00      	ldr	r3, [sp, #0]
 800e3da:	2b00      	cmp	r3, #0
 800e3dc:	dd72      	ble.n	800e4c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800e3de:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e3e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e3e6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e3ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e3ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e3f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e3f4:	eeb0 6a62 	vmov.f32	s12, s5
 800e3f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e3fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e400:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e404:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800e408:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e40c:	eeb0 6a43 	vmov.f32	s12, s6
 800e410:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e414:	ee12 2a90 	vmov	r2, s5
 800e418:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e41c:	fb92 fef3 	sdiv	lr, r2, r3
 800e420:	ee13 2a10 	vmov	r2, s6
 800e424:	fb92 fcf3 	sdiv	ip, r2, r3
 800e428:	9b00      	ldr	r3, [sp, #0]
 800e42a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e42e:	3b01      	subs	r3, #1
 800e430:	9300      	str	r3, [sp, #0]
 800e432:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800e436:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e438:	eeb0 3a67 	vmov.f32	s6, s15
 800e43c:	bf08      	it	eq
 800e43e:	465b      	moveq	r3, fp
 800e440:	eef0 2a47 	vmov.f32	s5, s14
 800e444:	e797      	b.n	800e376 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800e446:	454f      	cmp	r7, r9
 800e448:	dabb      	bge.n	800e3c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800e44a:	fb0c 2606 	mla	r6, ip, r6, r2
 800e44e:	1436      	asrs	r6, r6, #16
 800e450:	d4b7      	bmi.n	800e3c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800e452:	4546      	cmp	r6, r8
 800e454:	dab5      	bge.n	800e3c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800e456:	461e      	mov	r6, r3
 800e458:	46a0      	mov	r8, r4
 800e45a:	2e00      	cmp	r6, #0
 800e45c:	ddb8      	ble.n	800e3d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800e45e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800e462:	9901      	ldr	r1, [sp, #4]
 800e464:	1417      	asrs	r7, r2, #16
 800e466:	ea4f 4920 	mov.w	r9, r0, asr #16
 800e46a:	fb0a 1707 	mla	r7, sl, r7, r1
 800e46e:	9902      	ldr	r1, [sp, #8]
 800e470:	f817 7009 	ldrb.w	r7, [r7, r9]
 800e474:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800e478:	f828 7b02 	strh.w	r7, [r8], #2
 800e47c:	4470      	add	r0, lr
 800e47e:	4462      	add	r2, ip
 800e480:	3e01      	subs	r6, #1
 800e482:	e7ea      	b.n	800e45a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 800e484:	ea5f 4920 	movs.w	r9, r0, asr #16
 800e488:	d417      	bmi.n	800e4ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800e48a:	68ae      	ldr	r6, [r5, #8]
 800e48c:	454e      	cmp	r6, r9
 800e48e:	dd14      	ble.n	800e4ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800e490:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800e494:	d411      	bmi.n	800e4ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800e496:	68ef      	ldr	r7, [r5, #12]
 800e498:	4557      	cmp	r7, sl
 800e49a:	dd0e      	ble.n	800e4ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800e49c:	9f01      	ldr	r7, [sp, #4]
 800e49e:	b236      	sxth	r6, r6
 800e4a0:	fb0a 7606 	mla	r6, sl, r6, r7
 800e4a4:	9f02      	ldr	r7, [sp, #8]
 800e4a6:	f816 6009 	ldrb.w	r6, [r6, r9]
 800e4aa:	f06f 0101 	mvn.w	r1, #1
 800e4ae:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800e4b2:	fb01 f608 	mul.w	r6, r1, r8
 800e4b6:	9903      	ldr	r1, [sp, #12]
 800e4b8:	538f      	strh	r7, [r1, r6]
 800e4ba:	4470      	add	r0, lr
 800e4bc:	4462      	add	r2, ip
 800e4be:	f108 38ff 	add.w	r8, r8, #4294967295
 800e4c2:	e782      	b.n	800e3ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800e4c4:	b005      	add	sp, #20
 800e4c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e4ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e4ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4ce:	b087      	sub	sp, #28
 800e4d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800e4d2:	9205      	str	r2, [sp, #20]
 800e4d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800e4d8:	9203      	str	r2, [sp, #12]
 800e4da:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800e4de:	9102      	str	r1, [sp, #8]
 800e4e0:	6861      	ldr	r1, [r4, #4]
 800e4e2:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 800e4e6:	fb01 2000 	mla	r0, r1, r0, r2
 800e4ea:	6822      	ldr	r2, [r4, #0]
 800e4ec:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 800e4f0:	9200      	str	r2, [sp, #0]
 800e4f2:	f8dc 2000 	ldr.w	r2, [ip]
 800e4f6:	9204      	str	r2, [sp, #16]
 800e4f8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800e4fc:	3204      	adds	r2, #4
 800e4fe:	9201      	str	r2, [sp, #4]
 800e500:	9a03      	ldr	r2, [sp, #12]
 800e502:	43d5      	mvns	r5, r2
 800e504:	b2ed      	uxtb	r5, r5
 800e506:	9a02      	ldr	r2, [sp, #8]
 800e508:	2a00      	cmp	r2, #0
 800e50a:	dc03      	bgt.n	800e514 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 800e50c:	9a05      	ldr	r2, [sp, #20]
 800e50e:	2a00      	cmp	r2, #0
 800e510:	f340 812c 	ble.w	800e76c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800e514:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e516:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 800e51a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 800e51e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e522:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e524:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e528:	2b00      	cmp	r3, #0
 800e52a:	dd10      	ble.n	800e54e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800e52c:	140c      	asrs	r4, r1, #16
 800e52e:	d405      	bmi.n	800e53c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e530:	4574      	cmp	r4, lr
 800e532:	da03      	bge.n	800e53c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e534:	1414      	asrs	r4, r2, #16
 800e536:	d401      	bmi.n	800e53c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e538:	42bc      	cmp	r4, r7
 800e53a:	db09      	blt.n	800e550 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 800e53c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800e53e:	9800      	ldr	r0, [sp, #0]
 800e540:	4421      	add	r1, r4
 800e542:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800e544:	3002      	adds	r0, #2
 800e546:	4422      	add	r2, r4
 800e548:	3b01      	subs	r3, #1
 800e54a:	9000      	str	r0, [sp, #0]
 800e54c:	e7ec      	b.n	800e528 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 800e54e:	d071      	beq.n	800e634 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 800e550:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e552:	1e5c      	subs	r4, r3, #1
 800e554:	fb06 1604 	mla	r6, r6, r4, r1
 800e558:	1436      	asrs	r6, r6, #16
 800e55a:	d45d      	bmi.n	800e618 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e55c:	4576      	cmp	r6, lr
 800e55e:	da5b      	bge.n	800e618 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e560:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800e562:	fb06 2404 	mla	r4, r6, r4, r2
 800e566:	1424      	asrs	r4, r4, #16
 800e568:	d456      	bmi.n	800e618 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e56a:	42bc      	cmp	r4, r7
 800e56c:	da54      	bge.n	800e618 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e56e:	f8dd 9000 	ldr.w	r9, [sp]
 800e572:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 800e576:	4698      	mov	r8, r3
 800e578:	f1b8 0f00 	cmp.w	r8, #0
 800e57c:	dd54      	ble.n	800e628 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 800e57e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800e582:	9804      	ldr	r0, [sp, #16]
 800e584:	1414      	asrs	r4, r2, #16
 800e586:	fb07 0404 	mla	r4, r7, r4, r0
 800e58a:	140e      	asrs	r6, r1, #16
 800e58c:	9801      	ldr	r0, [sp, #4]
 800e58e:	f814 e006 	ldrb.w	lr, [r4, r6]
 800e592:	f8b9 4000 	ldrh.w	r4, [r9]
 800e596:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800e59a:	eb00 0b0e 	add.w	fp, r0, lr
 800e59e:	1227      	asrs	r7, r4, #8
 800e5a0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800e5a4:	f89b b001 	ldrb.w	fp, [fp, #1]
 800e5a8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 800e5ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e5ae:	fb16 f60a 	smulbb	r6, r6, sl
 800e5b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e5b6:	fb07 6705 	mla	r7, r7, r5, r6
 800e5ba:	10e6      	asrs	r6, r4, #3
 800e5bc:	00e4      	lsls	r4, r4, #3
 800e5be:	b2e4      	uxtb	r4, r4
 800e5c0:	fb1b fb0a 	smulbb	fp, fp, sl
 800e5c4:	fb14 f405 	smulbb	r4, r4, r5
 800e5c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e5cc:	b2bf      	uxth	r7, r7
 800e5ce:	fb06 b605 	mla	r6, r6, r5, fp
 800e5d2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 800e5d6:	b2b6      	uxth	r6, r6
 800e5d8:	fa1f fe8e 	uxth.w	lr, lr
 800e5dc:	1c7c      	adds	r4, r7, #1
 800e5de:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800e5e2:	f106 0b01 	add.w	fp, r6, #1
 800e5e6:	f10e 0401 	add.w	r4, lr, #1
 800e5ea:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 800e5ee:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800e5f2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e5f6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800e5fa:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800e5fe:	4327      	orrs	r7, r4
 800e600:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800e604:	4401      	add	r1, r0
 800e606:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e608:	ea47 070b 	orr.w	r7, r7, fp
 800e60c:	f829 7b02 	strh.w	r7, [r9], #2
 800e610:	4402      	add	r2, r0
 800e612:	f108 38ff 	add.w	r8, r8, #4294967295
 800e616:	e7af      	b.n	800e578 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 800e618:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 800e61c:	f04f 0e00 	mov.w	lr, #0
 800e620:	eb03 040e 	add.w	r4, r3, lr
 800e624:	2c00      	cmp	r4, #0
 800e626:	dc43      	bgt.n	800e6b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 800e628:	9a00      	ldr	r2, [sp, #0]
 800e62a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e62e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800e632:	9300      	str	r3, [sp, #0]
 800e634:	9b02      	ldr	r3, [sp, #8]
 800e636:	2b00      	cmp	r3, #0
 800e638:	f340 8098 	ble.w	800e76c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800e63c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e640:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e644:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e648:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e64a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e64e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e652:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e656:	eef0 6a62 	vmov.f32	s13, s5
 800e65a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e65e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e662:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e666:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800e66a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e66e:	eef0 6a43 	vmov.f32	s13, s6
 800e672:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e676:	ee12 2a90 	vmov	r2, s5
 800e67a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e67e:	fb92 f3f3 	sdiv	r3, r2, r3
 800e682:	ee13 2a10 	vmov	r2, s6
 800e686:	9313      	str	r3, [sp, #76]	; 0x4c
 800e688:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e68a:	fb92 f3f3 	sdiv	r3, r2, r3
 800e68e:	9314      	str	r3, [sp, #80]	; 0x50
 800e690:	9b02      	ldr	r3, [sp, #8]
 800e692:	9a05      	ldr	r2, [sp, #20]
 800e694:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e698:	3b01      	subs	r3, #1
 800e69a:	9302      	str	r3, [sp, #8]
 800e69c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800e6a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e6a2:	eeb0 3a67 	vmov.f32	s6, s15
 800e6a6:	bf08      	it	eq
 800e6a8:	4613      	moveq	r3, r2
 800e6aa:	eef0 2a47 	vmov.f32	s5, s14
 800e6ae:	e72a      	b.n	800e506 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800e6b0:	140f      	asrs	r7, r1, #16
 800e6b2:	d454      	bmi.n	800e75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e6b4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 800e6b8:	42be      	cmp	r6, r7
 800e6ba:	dd50      	ble.n	800e75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e6bc:	ea5f 4822 	movs.w	r8, r2, asr #16
 800e6c0:	d44d      	bmi.n	800e75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e6c2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 800e6c6:	4544      	cmp	r4, r8
 800e6c8:	dd49      	ble.n	800e75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e6ca:	9c04      	ldr	r4, [sp, #16]
 800e6cc:	b236      	sxth	r6, r6
 800e6ce:	fb08 4606 	mla	r6, r8, r6, r4
 800e6d2:	f06f 0001 	mvn.w	r0, #1
 800e6d6:	f816 8007 	ldrb.w	r8, [r6, r7]
 800e6da:	9c01      	ldr	r4, [sp, #4]
 800e6dc:	fb00 fa0e 	mul.w	sl, r0, lr
 800e6e0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800e6e4:	9800      	ldr	r0, [sp, #0]
 800e6e6:	eb04 0b08 	add.w	fp, r4, r8
 800e6ea:	f830 400a 	ldrh.w	r4, [r0, sl]
 800e6ee:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800e6f2:	9801      	ldr	r0, [sp, #4]
 800e6f4:	f89b b001 	ldrb.w	fp, [fp, #1]
 800e6f8:	f810 8008 	ldrb.w	r8, [r0, r8]
 800e6fc:	9800      	ldr	r0, [sp, #0]
 800e6fe:	1227      	asrs	r7, r4, #8
 800e700:	fb16 f609 	smulbb	r6, r6, r9
 800e704:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e708:	fb07 6705 	mla	r7, r7, r5, r6
 800e70c:	10e6      	asrs	r6, r4, #3
 800e70e:	00e4      	lsls	r4, r4, #3
 800e710:	b2e4      	uxtb	r4, r4
 800e712:	fb1b fb09 	smulbb	fp, fp, r9
 800e716:	fb14 f405 	smulbb	r4, r4, r5
 800e71a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e71e:	b2bf      	uxth	r7, r7
 800e720:	fb06 b605 	mla	r6, r6, r5, fp
 800e724:	fb08 4809 	mla	r8, r8, r9, r4
 800e728:	b2b6      	uxth	r6, r6
 800e72a:	fa1f f888 	uxth.w	r8, r8
 800e72e:	1c7c      	adds	r4, r7, #1
 800e730:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800e734:	f106 0b01 	add.w	fp, r6, #1
 800e738:	f108 0401 	add.w	r4, r8, #1
 800e73c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 800e740:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800e744:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e748:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800e74c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800e750:	4327      	orrs	r7, r4
 800e752:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800e756:	ea47 070b 	orr.w	r7, r7, fp
 800e75a:	f820 700a 	strh.w	r7, [r0, sl]
 800e75e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e760:	4401      	add	r1, r0
 800e762:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e764:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e768:	4402      	add	r2, r0
 800e76a:	e759      	b.n	800e620 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800e76c:	b007      	add	sp, #28
 800e76e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800e774 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e778:	b085      	sub	sp, #20
 800e77a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e77e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e780:	9203      	str	r2, [sp, #12]
 800e782:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800e786:	6870      	ldr	r0, [r6, #4]
 800e788:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800e78a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 800e78e:	686f      	ldr	r7, [r5, #4]
 800e790:	9101      	str	r1, [sp, #4]
 800e792:	fb00 2404 	mla	r4, r0, r4, r2
 800e796:	6832      	ldr	r2, [r6, #0]
 800e798:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e79c:	682a      	ldr	r2, [r5, #0]
 800e79e:	9202      	str	r2, [sp, #8]
 800e7a0:	3704      	adds	r7, #4
 800e7a2:	9a01      	ldr	r2, [sp, #4]
 800e7a4:	2a00      	cmp	r2, #0
 800e7a6:	dc03      	bgt.n	800e7b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800e7a8:	9a03      	ldr	r2, [sp, #12]
 800e7aa:	2a00      	cmp	r2, #0
 800e7ac:	f340 80cc 	ble.w	800e948 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800e7b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e7b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800e7b6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800e7ba:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e7be:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e7c0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e7c4:	2b00      	cmp	r3, #0
 800e7c6:	dd0d      	ble.n	800e7e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e7c8:	1406      	asrs	r6, r0, #16
 800e7ca:	d405      	bmi.n	800e7d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800e7cc:	454e      	cmp	r6, r9
 800e7ce:	da03      	bge.n	800e7d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800e7d0:	1416      	asrs	r6, r2, #16
 800e7d2:	d401      	bmi.n	800e7d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800e7d4:	4546      	cmp	r6, r8
 800e7d6:	db06      	blt.n	800e7e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e7d8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800e7da:	4460      	add	r0, ip
 800e7dc:	4432      	add	r2, r6
 800e7de:	3b01      	subs	r3, #1
 800e7e0:	3402      	adds	r4, #2
 800e7e2:	e7ef      	b.n	800e7c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 800e7e4:	d00f      	beq.n	800e806 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800e7e6:	1e5e      	subs	r6, r3, #1
 800e7e8:	fb0c 0e06 	mla	lr, ip, r6, r0
 800e7ec:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800e7f0:	d543      	bpl.n	800e87a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 800e7f2:	4698      	mov	r8, r3
 800e7f4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 800e7f8:	f1b8 0f00 	cmp.w	r8, #0
 800e7fc:	dc71      	bgt.n	800e8e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 800e7fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e802:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e806:	9b01      	ldr	r3, [sp, #4]
 800e808:	2b00      	cmp	r3, #0
 800e80a:	f340 809d 	ble.w	800e948 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800e80e:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e812:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e816:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e81a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e81c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e820:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e824:	eeb0 6a62 	vmov.f32	s12, s5
 800e828:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e82c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e830:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e834:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800e838:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e83c:	eeb0 6a43 	vmov.f32	s12, s6
 800e840:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e844:	ee12 2a90 	vmov	r2, s5
 800e848:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e84c:	fb92 fcf3 	sdiv	ip, r2, r3
 800e850:	ee13 2a10 	vmov	r2, s6
 800e854:	fb92 f3f3 	sdiv	r3, r2, r3
 800e858:	9312      	str	r3, [sp, #72]	; 0x48
 800e85a:	9b01      	ldr	r3, [sp, #4]
 800e85c:	9a03      	ldr	r2, [sp, #12]
 800e85e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e862:	3b01      	subs	r3, #1
 800e864:	9301      	str	r3, [sp, #4]
 800e866:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800e86a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e86c:	eeb0 3a67 	vmov.f32	s6, s15
 800e870:	bf08      	it	eq
 800e872:	4613      	moveq	r3, r2
 800e874:	eef0 2a47 	vmov.f32	s5, s14
 800e878:	e793      	b.n	800e7a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 800e87a:	45ce      	cmp	lr, r9
 800e87c:	dab9      	bge.n	800e7f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e87e:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e880:	fb01 2606 	mla	r6, r1, r6, r2
 800e884:	1436      	asrs	r6, r6, #16
 800e886:	d4b4      	bmi.n	800e7f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e888:	4546      	cmp	r6, r8
 800e88a:	dab2      	bge.n	800e7f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e88c:	4698      	mov	r8, r3
 800e88e:	46a2      	mov	sl, r4
 800e890:	f1b8 0f00 	cmp.w	r8, #0
 800e894:	ddb3      	ble.n	800e7fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800e896:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800e89a:	9902      	ldr	r1, [sp, #8]
 800e89c:	1416      	asrs	r6, r2, #16
 800e89e:	fb09 1606 	mla	r6, r9, r6, r1
 800e8a2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 800e8a6:	492a      	ldr	r1, [pc, #168]	; (800e950 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 800e8a8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 800e8ac:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800e8b0:	eb07 0b0e 	add.w	fp, r7, lr
 800e8b4:	4460      	add	r0, ip
 800e8b6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800e8ba:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800e8be:	00f6      	lsls	r6, r6, #3
 800e8c0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800e8c4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800e8c8:	ea49 0606 	orr.w	r6, r9, r6
 800e8cc:	f817 900e 	ldrb.w	r9, [r7, lr]
 800e8d0:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e8d2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 800e8d6:	f82a 6b02 	strh.w	r6, [sl], #2
 800e8da:	440a      	add	r2, r1
 800e8dc:	f108 38ff 	add.w	r8, r8, #4294967295
 800e8e0:	e7d6      	b.n	800e890 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800e8e2:	ea5f 4920 	movs.w	r9, r0, asr #16
 800e8e6:	d429      	bmi.n	800e93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800e8e8:	68ae      	ldr	r6, [r5, #8]
 800e8ea:	454e      	cmp	r6, r9
 800e8ec:	dd26      	ble.n	800e93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800e8ee:	ea5f 4b22 	movs.w	fp, r2, asr #16
 800e8f2:	d423      	bmi.n	800e93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800e8f4:	68e9      	ldr	r1, [r5, #12]
 800e8f6:	4559      	cmp	r1, fp
 800e8f8:	dd20      	ble.n	800e93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800e8fa:	9902      	ldr	r1, [sp, #8]
 800e8fc:	fa0f fe86 	sxth.w	lr, r6
 800e900:	fb0b 1e0e 	mla	lr, fp, lr, r1
 800e904:	f06f 0101 	mvn.w	r1, #1
 800e908:	f81e e009 	ldrb.w	lr, [lr, r9]
 800e90c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800e910:	eb07 060e 	add.w	r6, r7, lr
 800e914:	fb01 f908 	mul.w	r9, r1, r8
 800e918:	f896 b002 	ldrb.w	fp, [r6, #2]
 800e91c:	7876      	ldrb	r6, [r6, #1]
 800e91e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800e922:	00f6      	lsls	r6, r6, #3
 800e924:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 800e928:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800e92c:	ea4b 0606 	orr.w	r6, fp, r6
 800e930:	f817 b00e 	ldrb.w	fp, [r7, lr]
 800e934:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 800e938:	f82a 6009 	strh.w	r6, [sl, r9]
 800e93c:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e93e:	4460      	add	r0, ip
 800e940:	440a      	add	r2, r1
 800e942:	f108 38ff 	add.w	r8, r8, #4294967295
 800e946:	e757      	b.n	800e7f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800e948:	b005      	add	sp, #20
 800e94a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e94e:	bf00      	nop
 800e950:	fffff800 	.word	0xfffff800

0800e954 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e958:	b087      	sub	sp, #28
 800e95a:	468b      	mov	fp, r1
 800e95c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800e95e:	9204      	str	r2, [sp, #16]
 800e960:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800e964:	9205      	str	r2, [sp, #20]
 800e966:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e96a:	6841      	ldr	r1, [r0, #4]
 800e96c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 800e970:	fb01 2404 	mla	r4, r1, r4, r2
 800e974:	6802      	ldr	r2, [r0, #0]
 800e976:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e97a:	f8dc 2000 	ldr.w	r2, [ip]
 800e97e:	9201      	str	r2, [sp, #4]
 800e980:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800e984:	3204      	adds	r2, #4
 800e986:	9202      	str	r2, [sp, #8]
 800e988:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e98c:	f1bb 0f00 	cmp.w	fp, #0
 800e990:	dc03      	bgt.n	800e99a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 800e992:	9a04      	ldr	r2, [sp, #16]
 800e994:	2a00      	cmp	r2, #0
 800e996:	f340 8138 	ble.w	800ec0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800e99a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e99c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800e9a0:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 800e9a4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e9a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e9aa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e9ae:	2b00      	cmp	r3, #0
 800e9b0:	dd0e      	ble.n	800e9d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800e9b2:	1402      	asrs	r2, r0, #16
 800e9b4:	d405      	bmi.n	800e9c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800e9b6:	42ba      	cmp	r2, r7
 800e9b8:	da03      	bge.n	800e9c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800e9ba:	140a      	asrs	r2, r1, #16
 800e9bc:	d401      	bmi.n	800e9c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800e9be:	42b2      	cmp	r2, r6
 800e9c0:	db07      	blt.n	800e9d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e9c2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e9c4:	4410      	add	r0, r2
 800e9c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e9c8:	3b01      	subs	r3, #1
 800e9ca:	4411      	add	r1, r2
 800e9cc:	3402      	adds	r4, #2
 800e9ce:	e7ee      	b.n	800e9ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 800e9d0:	d019      	beq.n	800ea06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 800e9d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e9d4:	1e5a      	subs	r2, r3, #1
 800e9d6:	fb05 0502 	mla	r5, r5, r2, r0
 800e9da:	142d      	asrs	r5, r5, #16
 800e9dc:	d409      	bmi.n	800e9f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800e9de:	42bd      	cmp	r5, r7
 800e9e0:	da07      	bge.n	800e9f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800e9e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e9e4:	fb05 1202 	mla	r2, r5, r2, r1
 800e9e8:	1412      	asrs	r2, r2, #16
 800e9ea:	d402      	bmi.n	800e9f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800e9ec:	42b2      	cmp	r2, r6
 800e9ee:	f2c0 80ac 	blt.w	800eb4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 800e9f2:	f04f 0e00 	mov.w	lr, #0
 800e9f6:	eb03 020e 	add.w	r2, r3, lr
 800e9fa:	2a00      	cmp	r2, #0
 800e9fc:	dc3e      	bgt.n	800ea7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 800e9fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ea02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ea06:	f1bb 0f00 	cmp.w	fp, #0
 800ea0a:	f340 80fe 	ble.w	800ec0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800ea0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ea12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ea16:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ea1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ea1c:	f1bb 0b01 	subs.w	fp, fp, #1
 800ea20:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ea24:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ea28:	eeb0 6a62 	vmov.f32	s12, s5
 800ea2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ea30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ea34:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ea38:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800ea3c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ea40:	eeb0 6a43 	vmov.f32	s12, s6
 800ea44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ea48:	ee12 2a90 	vmov	r2, s5
 800ea4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ea50:	fb92 f3f3 	sdiv	r3, r2, r3
 800ea54:	ee13 2a10 	vmov	r2, s6
 800ea58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ea5c:	9313      	str	r3, [sp, #76]	; 0x4c
 800ea5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ea60:	fb92 f3f3 	sdiv	r3, r2, r3
 800ea64:	9a04      	ldr	r2, [sp, #16]
 800ea66:	9314      	str	r3, [sp, #80]	; 0x50
 800ea68:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800ea6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ea6e:	eeb0 3a67 	vmov.f32	s6, s15
 800ea72:	bf08      	it	eq
 800ea74:	4613      	moveq	r3, r2
 800ea76:	eef0 2a47 	vmov.f32	s5, s14
 800ea7a:	e787      	b.n	800e98c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800ea7c:	1406      	asrs	r6, r0, #16
 800ea7e:	d45d      	bmi.n	800eb3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800ea80:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800ea84:	42b5      	cmp	r5, r6
 800ea86:	dd59      	ble.n	800eb3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800ea88:	140f      	asrs	r7, r1, #16
 800ea8a:	d457      	bmi.n	800eb3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800ea8c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 800ea90:	42ba      	cmp	r2, r7
 800ea92:	dd53      	ble.n	800eb3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800ea94:	9a01      	ldr	r2, [sp, #4]
 800ea96:	b22d      	sxth	r5, r5
 800ea98:	fb07 2505 	mla	r5, r7, r5, r2
 800ea9c:	5daa      	ldrb	r2, [r5, r6]
 800ea9e:	9d02      	ldr	r5, [sp, #8]
 800eaa0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800eaa4:	0e2e      	lsrs	r6, r5, #24
 800eaa6:	d049      	beq.n	800eb3c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800eaa8:	f06f 0201 	mvn.w	r2, #1
 800eaac:	fb02 f20e 	mul.w	r2, r2, lr
 800eab0:	9203      	str	r2, [sp, #12]
 800eab2:	f834 8002 	ldrh.w	r8, [r4, r2]
 800eab6:	9a05      	ldr	r2, [sp, #20]
 800eab8:	4356      	muls	r6, r2
 800eaba:	1c72      	adds	r2, r6, #1
 800eabc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800eac0:	1212      	asrs	r2, r2, #8
 800eac2:	fa1f f982 	uxth.w	r9, r2
 800eac6:	ea4f 2728 	mov.w	r7, r8, asr #8
 800eaca:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800eace:	43d2      	mvns	r2, r2
 800ead0:	b2d2      	uxtb	r2, r2
 800ead2:	fb16 f609 	smulbb	r6, r6, r9
 800ead6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800eada:	fb07 6702 	mla	r7, r7, r2, r6
 800eade:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800eae2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800eae6:	b2ed      	uxtb	r5, r5
 800eae8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800eaec:	fa5f f888 	uxtb.w	r8, r8
 800eaf0:	fb15 f509 	smulbb	r5, r5, r9
 800eaf4:	fb08 5502 	mla	r5, r8, r2, r5
 800eaf8:	b2bf      	uxth	r7, r7
 800eafa:	fb1a fa09 	smulbb	sl, sl, r9
 800eafe:	b2ad      	uxth	r5, r5
 800eb00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800eb04:	fb06 a602 	mla	r6, r6, r2, sl
 800eb08:	1c7a      	adds	r2, r7, #1
 800eb0a:	f105 0a01 	add.w	sl, r5, #1
 800eb0e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800eb12:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800eb16:	b2b6      	uxth	r6, r6
 800eb18:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800eb1c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800eb20:	ea4a 0707 	orr.w	r7, sl, r7
 800eb24:	f106 0a01 	add.w	sl, r6, #1
 800eb28:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800eb2c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800eb30:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800eb34:	9a03      	ldr	r2, [sp, #12]
 800eb36:	ea47 070a 	orr.w	r7, r7, sl
 800eb3a:	52a7      	strh	r7, [r4, r2]
 800eb3c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800eb3e:	4410      	add	r0, r2
 800eb40:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800eb42:	f10e 3eff 	add.w	lr, lr, #4294967295
 800eb46:	4411      	add	r1, r2
 800eb48:	e755      	b.n	800e9f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800eb4a:	f04f 0800 	mov.w	r8, #0
 800eb4e:	eba3 0208 	sub.w	r2, r3, r8
 800eb52:	2a00      	cmp	r2, #0
 800eb54:	f77f af53 	ble.w	800e9fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 800eb58:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 800eb5c:	9f01      	ldr	r7, [sp, #4]
 800eb5e:	140a      	asrs	r2, r1, #16
 800eb60:	1405      	asrs	r5, r0, #16
 800eb62:	fb06 7202 	mla	r2, r6, r2, r7
 800eb66:	5d52      	ldrb	r2, [r2, r5]
 800eb68:	9d02      	ldr	r5, [sp, #8]
 800eb6a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800eb6e:	0e2e      	lsrs	r6, r5, #24
 800eb70:	d044      	beq.n	800ebfc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 800eb72:	9a05      	ldr	r2, [sp, #20]
 800eb74:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 800eb78:	4356      	muls	r6, r2
 800eb7a:	1c72      	adds	r2, r6, #1
 800eb7c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800eb80:	1212      	asrs	r2, r2, #8
 800eb82:	fa1f f982 	uxth.w	r9, r2
 800eb86:	ea4f 272e 	mov.w	r7, lr, asr #8
 800eb8a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800eb8e:	43d2      	mvns	r2, r2
 800eb90:	b2d2      	uxtb	r2, r2
 800eb92:	fb16 f609 	smulbb	r6, r6, r9
 800eb96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800eb9a:	fb07 6702 	mla	r7, r7, r2, r6
 800eb9e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800eba2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800eba6:	b2ed      	uxtb	r5, r5
 800eba8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ebac:	fa5f fe8e 	uxtb.w	lr, lr
 800ebb0:	fb15 f509 	smulbb	r5, r5, r9
 800ebb4:	fb0e 5502 	mla	r5, lr, r2, r5
 800ebb8:	b2bf      	uxth	r7, r7
 800ebba:	fb1a fa09 	smulbb	sl, sl, r9
 800ebbe:	b2ad      	uxth	r5, r5
 800ebc0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ebc4:	fb06 a602 	mla	r6, r6, r2, sl
 800ebc8:	1c7a      	adds	r2, r7, #1
 800ebca:	f105 0a01 	add.w	sl, r5, #1
 800ebce:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800ebd2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ebd6:	b2b6      	uxth	r6, r6
 800ebd8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ebdc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ebe0:	ea4a 0707 	orr.w	r7, sl, r7
 800ebe4:	f106 0a01 	add.w	sl, r6, #1
 800ebe8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ebec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ebf0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ebf4:	ea47 070a 	orr.w	r7, r7, sl
 800ebf8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800ebfc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ebfe:	4410      	add	r0, r2
 800ec00:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ec02:	f108 0801 	add.w	r8, r8, #1
 800ec06:	4411      	add	r1, r2
 800ec08:	e7a1      	b.n	800eb4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 800ec0a:	b007      	add	sp, #28
 800ec0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ec10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ec10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec14:	b085      	sub	sp, #20
 800ec16:	468b      	mov	fp, r1
 800ec18:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ec1a:	9203      	str	r2, [sp, #12]
 800ec1c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800ec20:	6841      	ldr	r1, [r0, #4]
 800ec22:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 800ec26:	fb01 2404 	mla	r4, r1, r4, r2
 800ec2a:	6802      	ldr	r2, [r0, #0]
 800ec2c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ec30:	f8de 2000 	ldr.w	r2, [lr]
 800ec34:	9200      	str	r2, [sp, #0]
 800ec36:	f8de 2004 	ldr.w	r2, [lr, #4]
 800ec3a:	3204      	adds	r2, #4
 800ec3c:	9201      	str	r2, [sp, #4]
 800ec3e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ec42:	f1bb 0f00 	cmp.w	fp, #0
 800ec46:	dc03      	bgt.n	800ec50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800ec48:	9a03      	ldr	r2, [sp, #12]
 800ec4a:	2a00      	cmp	r2, #0
 800ec4c:	f340 8153 	ble.w	800eef6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800ec50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ec52:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ec56:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800ec5a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ec5e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ec60:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ec64:	2b00      	cmp	r3, #0
 800ec66:	dd0e      	ble.n	800ec86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800ec68:	1408      	asrs	r0, r1, #16
 800ec6a:	d405      	bmi.n	800ec78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800ec6c:	42b8      	cmp	r0, r7
 800ec6e:	da03      	bge.n	800ec78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800ec70:	1410      	asrs	r0, r2, #16
 800ec72:	d401      	bmi.n	800ec78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800ec74:	42b0      	cmp	r0, r6
 800ec76:	db07      	blt.n	800ec88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800ec78:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ec7a:	4401      	add	r1, r0
 800ec7c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800ec7e:	3b01      	subs	r3, #1
 800ec80:	4402      	add	r2, r0
 800ec82:	3402      	adds	r4, #2
 800ec84:	e7ee      	b.n	800ec64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800ec86:	d017      	beq.n	800ecb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800ec88:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800ec8a:	1e58      	subs	r0, r3, #1
 800ec8c:	fb05 1500 	mla	r5, r5, r0, r1
 800ec90:	142d      	asrs	r5, r5, #16
 800ec92:	d409      	bmi.n	800eca8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800ec94:	42bd      	cmp	r5, r7
 800ec96:	da07      	bge.n	800eca8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800ec98:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800ec9a:	fb05 2000 	mla	r0, r5, r0, r2
 800ec9e:	1400      	asrs	r0, r0, #16
 800eca0:	d402      	bmi.n	800eca8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800eca2:	42b0      	cmp	r0, r6
 800eca4:	f2c0 80bc 	blt.w	800ee20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 800eca8:	2600      	movs	r6, #0
 800ecaa:	1998      	adds	r0, r3, r6
 800ecac:	2800      	cmp	r0, #0
 800ecae:	dc3e      	bgt.n	800ed2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 800ecb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ecb4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ecb8:	f1bb 0f00 	cmp.w	fp, #0
 800ecbc:	f340 811b 	ble.w	800eef6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800ecc0:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ecc4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ecc8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800eccc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ecce:	f1bb 0b01 	subs.w	fp, fp, #1
 800ecd2:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ecd6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ecda:	eeb0 6a62 	vmov.f32	s12, s5
 800ecde:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ece2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ece6:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ecea:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800ecee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ecf2:	eeb0 6a43 	vmov.f32	s12, s6
 800ecf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ecfa:	ee12 2a90 	vmov	r2, s5
 800ecfe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ed02:	fb92 f3f3 	sdiv	r3, r2, r3
 800ed06:	ee13 2a10 	vmov	r2, s6
 800ed0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ed0e:	9311      	str	r3, [sp, #68]	; 0x44
 800ed10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ed12:	fb92 f3f3 	sdiv	r3, r2, r3
 800ed16:	9a03      	ldr	r2, [sp, #12]
 800ed18:	9312      	str	r3, [sp, #72]	; 0x48
 800ed1a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800ed1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ed20:	eeb0 3a67 	vmov.f32	s6, s15
 800ed24:	bf08      	it	eq
 800ed26:	4613      	moveq	r3, r2
 800ed28:	eef0 2a47 	vmov.f32	s5, s14
 800ed2c:	e789      	b.n	800ec42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 800ed2e:	140f      	asrs	r7, r1, #16
 800ed30:	d426      	bmi.n	800ed80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800ed32:	f8de 5008 	ldr.w	r5, [lr, #8]
 800ed36:	42bd      	cmp	r5, r7
 800ed38:	dd22      	ble.n	800ed80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800ed3a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800ed3e:	d41f      	bmi.n	800ed80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800ed40:	f8de 000c 	ldr.w	r0, [lr, #12]
 800ed44:	4560      	cmp	r0, ip
 800ed46:	dd1b      	ble.n	800ed80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800ed48:	9800      	ldr	r0, [sp, #0]
 800ed4a:	b22d      	sxth	r5, r5
 800ed4c:	fb0c 0505 	mla	r5, ip, r5, r0
 800ed50:	5de8      	ldrb	r0, [r5, r7]
 800ed52:	9d01      	ldr	r5, [sp, #4]
 800ed54:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800ed58:	0e07      	lsrs	r7, r0, #24
 800ed5a:	2fff      	cmp	r7, #255	; 0xff
 800ed5c:	d116      	bne.n	800ed8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800ed5e:	f06f 0501 	mvn.w	r5, #1
 800ed62:	fb05 f706 	mul.w	r7, r5, r6
 800ed66:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800ed6a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800ed6e:	0945      	lsrs	r5, r0, #5
 800ed70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800ed74:	ea4c 0505 	orr.w	r5, ip, r5
 800ed78:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800ed7c:	4305      	orrs	r5, r0
 800ed7e:	53e5      	strh	r5, [r4, r7]
 800ed80:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ed82:	4401      	add	r1, r0
 800ed84:	9812      	ldr	r0, [sp, #72]	; 0x48
 800ed86:	3e01      	subs	r6, #1
 800ed88:	4402      	add	r2, r0
 800ed8a:	e78e      	b.n	800ecaa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 800ed8c:	b2fd      	uxtb	r5, r7
 800ed8e:	2f00      	cmp	r7, #0
 800ed90:	d0f6      	beq.n	800ed80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800ed92:	f06f 0701 	mvn.w	r7, #1
 800ed96:	4377      	muls	r7, r6
 800ed98:	fa1f f985 	uxth.w	r9, r5
 800ed9c:	f834 8007 	ldrh.w	r8, [r4, r7]
 800eda0:	9702      	str	r7, [sp, #8]
 800eda2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800eda6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800edaa:	43ed      	mvns	r5, r5
 800edac:	b2ed      	uxtb	r5, r5
 800edae:	fb17 f709 	smulbb	r7, r7, r9
 800edb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800edb6:	fb0c 7c05 	mla	ip, ip, r5, r7
 800edba:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800edbe:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800edc2:	b2c0      	uxtb	r0, r0
 800edc4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800edc8:	fa5f f888 	uxtb.w	r8, r8
 800edcc:	fb10 f009 	smulbb	r0, r0, r9
 800edd0:	fb08 0005 	mla	r0, r8, r5, r0
 800edd4:	b280      	uxth	r0, r0
 800edd6:	fa1f fc8c 	uxth.w	ip, ip
 800edda:	fb1a fa09 	smulbb	sl, sl, r9
 800edde:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ede2:	fb07 a705 	mla	r7, r7, r5, sl
 800ede6:	f100 0a01 	add.w	sl, r0, #1
 800edea:	f10c 0501 	add.w	r5, ip, #1
 800edee:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800edf2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800edf6:	b2bf      	uxth	r7, r7
 800edf8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800edfc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ee00:	ea4a 0c0c 	orr.w	ip, sl, ip
 800ee04:	f107 0a01 	add.w	sl, r7, #1
 800ee08:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800ee0c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ee10:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ee14:	9802      	ldr	r0, [sp, #8]
 800ee16:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ee1a:	f824 c000 	strh.w	ip, [r4, r0]
 800ee1e:	e7af      	b.n	800ed80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800ee20:	f04f 0800 	mov.w	r8, #0
 800ee24:	eba3 0008 	sub.w	r0, r3, r8
 800ee28:	2800      	cmp	r0, #0
 800ee2a:	f77f af41 	ble.w	800ecb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800ee2e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800ee32:	9f00      	ldr	r7, [sp, #0]
 800ee34:	1410      	asrs	r0, r2, #16
 800ee36:	140d      	asrs	r5, r1, #16
 800ee38:	fb06 7000 	mla	r0, r6, r0, r7
 800ee3c:	5d40      	ldrb	r0, [r0, r5]
 800ee3e:	9d01      	ldr	r5, [sp, #4]
 800ee40:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 800ee44:	0e2e      	lsrs	r6, r5, #24
 800ee46:	2eff      	cmp	r6, #255	; 0xff
 800ee48:	d112      	bne.n	800ee70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 800ee4a:	482c      	ldr	r0, [pc, #176]	; (800eefc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 800ee4c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 800ee50:	0968      	lsrs	r0, r5, #5
 800ee52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 800ee56:	4330      	orrs	r0, r6
 800ee58:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 800ee5c:	4328      	orrs	r0, r5
 800ee5e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 800ee62:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ee64:	4401      	add	r1, r0
 800ee66:	9812      	ldr	r0, [sp, #72]	; 0x48
 800ee68:	f108 0801 	add.w	r8, r8, #1
 800ee6c:	4402      	add	r2, r0
 800ee6e:	e7d9      	b.n	800ee24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 800ee70:	b2f0      	uxtb	r0, r6
 800ee72:	2e00      	cmp	r6, #0
 800ee74:	d0f5      	beq.n	800ee62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 800ee76:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800ee7a:	fa1f f980 	uxth.w	r9, r0
 800ee7e:	ea4f 272c 	mov.w	r7, ip, asr #8
 800ee82:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800ee86:	43c0      	mvns	r0, r0
 800ee88:	b2c0      	uxtb	r0, r0
 800ee8a:	fb16 f609 	smulbb	r6, r6, r9
 800ee8e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ee92:	fb07 6700 	mla	r7, r7, r0, r6
 800ee96:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800ee9a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800ee9e:	b2ed      	uxtb	r5, r5
 800eea0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800eea4:	fa5f fc8c 	uxtb.w	ip, ip
 800eea8:	fb15 f509 	smulbb	r5, r5, r9
 800eeac:	fb0c 5500 	mla	r5, ip, r0, r5
 800eeb0:	b2bf      	uxth	r7, r7
 800eeb2:	fb1a fa09 	smulbb	sl, sl, r9
 800eeb6:	b2ad      	uxth	r5, r5
 800eeb8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800eebc:	fb06 a600 	mla	r6, r6, r0, sl
 800eec0:	1c78      	adds	r0, r7, #1
 800eec2:	f105 0a01 	add.w	sl, r5, #1
 800eec6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 800eeca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800eece:	b2b6      	uxth	r6, r6
 800eed0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800eed4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800eed8:	ea4a 0707 	orr.w	r7, sl, r7
 800eedc:	f106 0a01 	add.w	sl, r6, #1
 800eee0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800eee4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800eee8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800eeec:	ea47 070a 	orr.w	r7, r7, sl
 800eef0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800eef4:	e7b5      	b.n	800ee62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 800eef6:	b005      	add	sp, #20
 800eef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eefc:	fffff800 	.word	0xfffff800

0800ef00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ef00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef04:	b087      	sub	sp, #28
 800ef06:	468b      	mov	fp, r1
 800ef08:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800ef0a:	9204      	str	r2, [sp, #16]
 800ef0c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800ef10:	9205      	str	r2, [sp, #20]
 800ef12:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800ef16:	6861      	ldr	r1, [r4, #4]
 800ef18:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800ef1c:	fb01 2000 	mla	r0, r1, r0, r2
 800ef20:	6822      	ldr	r2, [r4, #0]
 800ef22:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800ef26:	f8de 2000 	ldr.w	r2, [lr]
 800ef2a:	9201      	str	r2, [sp, #4]
 800ef2c:	f8de 2004 	ldr.w	r2, [lr, #4]
 800ef30:	9202      	str	r2, [sp, #8]
 800ef32:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ef36:	f1bb 0f00 	cmp.w	fp, #0
 800ef3a:	dc03      	bgt.n	800ef44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 800ef3c:	9a04      	ldr	r2, [sp, #16]
 800ef3e:	2a00      	cmp	r2, #0
 800ef40:	f340 8142 	ble.w	800f1c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800ef44:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ef46:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ef4a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800ef4e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ef52:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ef54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ef58:	2b00      	cmp	r3, #0
 800ef5a:	dd0e      	ble.n	800ef7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 800ef5c:	140c      	asrs	r4, r1, #16
 800ef5e:	d405      	bmi.n	800ef6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800ef60:	42bc      	cmp	r4, r7
 800ef62:	da03      	bge.n	800ef6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800ef64:	1414      	asrs	r4, r2, #16
 800ef66:	d401      	bmi.n	800ef6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800ef68:	42b4      	cmp	r4, r6
 800ef6a:	db07      	blt.n	800ef7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800ef6c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800ef6e:	4421      	add	r1, r4
 800ef70:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800ef72:	3b01      	subs	r3, #1
 800ef74:	4422      	add	r2, r4
 800ef76:	3002      	adds	r0, #2
 800ef78:	e7ee      	b.n	800ef58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 800ef7a:	d019      	beq.n	800efb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 800ef7c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ef7e:	1e5c      	subs	r4, r3, #1
 800ef80:	fb05 1504 	mla	r5, r5, r4, r1
 800ef84:	142d      	asrs	r5, r5, #16
 800ef86:	d409      	bmi.n	800ef9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800ef88:	42bd      	cmp	r5, r7
 800ef8a:	da07      	bge.n	800ef9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800ef8c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ef8e:	fb05 2404 	mla	r4, r5, r4, r2
 800ef92:	1424      	asrs	r4, r4, #16
 800ef94:	d402      	bmi.n	800ef9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800ef96:	42b4      	cmp	r4, r6
 800ef98:	f2c0 80b1 	blt.w	800f0fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 800ef9c:	f04f 0800 	mov.w	r8, #0
 800efa0:	eb03 0408 	add.w	r4, r3, r8
 800efa4:	2c00      	cmp	r4, #0
 800efa6:	dc3e      	bgt.n	800f026 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 800efa8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800efac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800efb0:	f1bb 0f00 	cmp.w	fp, #0
 800efb4:	f340 8108 	ble.w	800f1c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800efb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800efbc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800efc0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800efc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800efc6:	f1bb 0b01 	subs.w	fp, fp, #1
 800efca:	ee31 1a05 	vadd.f32	s2, s2, s10
 800efce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800efd2:	eeb0 6a62 	vmov.f32	s12, s5
 800efd6:	ee61 7a27 	vmul.f32	s15, s2, s15
 800efda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800efde:	ee77 2a62 	vsub.f32	s5, s14, s5
 800efe2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800efe6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800efea:	eeb0 6a43 	vmov.f32	s12, s6
 800efee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800eff2:	ee12 2a90 	vmov	r2, s5
 800eff6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800effa:	fb92 f3f3 	sdiv	r3, r2, r3
 800effe:	ee13 2a10 	vmov	r2, s6
 800f002:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f006:	9313      	str	r3, [sp, #76]	; 0x4c
 800f008:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f00a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f00e:	9a04      	ldr	r2, [sp, #16]
 800f010:	9314      	str	r3, [sp, #80]	; 0x50
 800f012:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f016:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f018:	eeb0 3a67 	vmov.f32	s6, s15
 800f01c:	bf08      	it	eq
 800f01e:	4613      	moveq	r3, r2
 800f020:	eef0 2a47 	vmov.f32	s5, s14
 800f024:	e787      	b.n	800ef36 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 800f026:	140e      	asrs	r6, r1, #16
 800f028:	d462      	bmi.n	800f0f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f02a:	f8de 5008 	ldr.w	r5, [lr, #8]
 800f02e:	42b5      	cmp	r5, r6
 800f030:	dd5e      	ble.n	800f0f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f032:	1417      	asrs	r7, r2, #16
 800f034:	d45c      	bmi.n	800f0f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f036:	f8de 400c 	ldr.w	r4, [lr, #12]
 800f03a:	42bc      	cmp	r4, r7
 800f03c:	dd58      	ble.n	800f0f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f03e:	b22d      	sxth	r5, r5
 800f040:	fb07 6505 	mla	r5, r7, r5, r6
 800f044:	9c02      	ldr	r4, [sp, #8]
 800f046:	5d66      	ldrb	r6, [r4, r5]
 800f048:	2e00      	cmp	r6, #0
 800f04a:	d051      	beq.n	800f0f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f04c:	9c01      	ldr	r4, [sp, #4]
 800f04e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 800f052:	f06f 0401 	mvn.w	r4, #1
 800f056:	fb04 f408 	mul.w	r4, r4, r8
 800f05a:	9403      	str	r4, [sp, #12]
 800f05c:	5b05      	ldrh	r5, [r0, r4]
 800f05e:	9c05      	ldr	r4, [sp, #20]
 800f060:	4366      	muls	r6, r4
 800f062:	1c74      	adds	r4, r6, #1
 800f064:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800f068:	1224      	asrs	r4, r4, #8
 800f06a:	b2a7      	uxth	r7, r4
 800f06c:	122e      	asrs	r6, r5, #8
 800f06e:	43e4      	mvns	r4, r4
 800f070:	b2e4      	uxtb	r4, r4
 800f072:	ea4f 2c29 	mov.w	ip, r9, asr #8
 800f076:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f07a:	fb16 f604 	smulbb	r6, r6, r4
 800f07e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f082:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f086:	00ed      	lsls	r5, r5, #3
 800f088:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f08c:	b2ed      	uxtb	r5, r5
 800f08e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 800f092:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800f096:	fb15 f504 	smulbb	r5, r5, r4
 800f09a:	fa5f f989 	uxtb.w	r9, r9
 800f09e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f0a2:	fb09 5507 	mla	r5, r9, r7, r5
 800f0a6:	fb1a fa04 	smulbb	sl, sl, r4
 800f0aa:	fa1f fc8c 	uxth.w	ip, ip
 800f0ae:	b2ad      	uxth	r5, r5
 800f0b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f0b4:	fb06 a607 	mla	r6, r6, r7, sl
 800f0b8:	f10c 0401 	add.w	r4, ip, #1
 800f0bc:	f105 0a01 	add.w	sl, r5, #1
 800f0c0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f0c4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f0c8:	b2b6      	uxth	r6, r6
 800f0ca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f0ce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f0d2:	ea4a 0c0c 	orr.w	ip, sl, ip
 800f0d6:	f106 0a01 	add.w	sl, r6, #1
 800f0da:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f0de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f0e2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f0e6:	9c03      	ldr	r4, [sp, #12]
 800f0e8:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f0ec:	f820 c004 	strh.w	ip, [r0, r4]
 800f0f0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f0f2:	4421      	add	r1, r4
 800f0f4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f0f6:	f108 38ff 	add.w	r8, r8, #4294967295
 800f0fa:	4422      	add	r2, r4
 800f0fc:	e750      	b.n	800efa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800f0fe:	f04f 0900 	mov.w	r9, #0
 800f102:	eba3 0409 	sub.w	r4, r3, r9
 800f106:	2c00      	cmp	r4, #0
 800f108:	f77f af4e 	ble.w	800efa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800f10c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800f110:	140d      	asrs	r5, r1, #16
 800f112:	1414      	asrs	r4, r2, #16
 800f114:	fb06 5404 	mla	r4, r6, r4, r5
 800f118:	9d02      	ldr	r5, [sp, #8]
 800f11a:	5d2e      	ldrb	r6, [r5, r4]
 800f11c:	2e00      	cmp	r6, #0
 800f11e:	d04c      	beq.n	800f1ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 800f120:	9d01      	ldr	r5, [sp, #4]
 800f122:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 800f126:	9c05      	ldr	r4, [sp, #20]
 800f128:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800f12c:	4366      	muls	r6, r4
 800f12e:	1c74      	adds	r4, r6, #1
 800f130:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800f134:	1224      	asrs	r4, r4, #8
 800f136:	b2a7      	uxth	r7, r4
 800f138:	122e      	asrs	r6, r5, #8
 800f13a:	43e4      	mvns	r4, r4
 800f13c:	b2e4      	uxtb	r4, r4
 800f13e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800f142:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f146:	fb16 f604 	smulbb	r6, r6, r4
 800f14a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f14e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f152:	00ed      	lsls	r5, r5, #3
 800f154:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f158:	b2ed      	uxtb	r5, r5
 800f15a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800f15e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f162:	fb15 f504 	smulbb	r5, r5, r4
 800f166:	fa5f f888 	uxtb.w	r8, r8
 800f16a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f16e:	fb08 5507 	mla	r5, r8, r7, r5
 800f172:	fb1a fa04 	smulbb	sl, sl, r4
 800f176:	fa1f fc8c 	uxth.w	ip, ip
 800f17a:	b2ad      	uxth	r5, r5
 800f17c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f180:	fb06 a607 	mla	r6, r6, r7, sl
 800f184:	f10c 0401 	add.w	r4, ip, #1
 800f188:	f105 0a01 	add.w	sl, r5, #1
 800f18c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f190:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f194:	b2b6      	uxth	r6, r6
 800f196:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f19a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f19e:	ea4a 0c0c 	orr.w	ip, sl, ip
 800f1a2:	f106 0a01 	add.w	sl, r6, #1
 800f1a6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f1aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f1ae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f1b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f1b6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800f1ba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f1bc:	4421      	add	r1, r4
 800f1be:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f1c0:	f109 0901 	add.w	r9, r9, #1
 800f1c4:	4422      	add	r2, r4
 800f1c6:	e79c      	b.n	800f102 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 800f1c8:	b007      	add	sp, #28
 800f1ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f1ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f1ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f1d2:	b085      	sub	sp, #20
 800f1d4:	468b      	mov	fp, r1
 800f1d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f1d8:	9203      	str	r2, [sp, #12]
 800f1da:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 800f1de:	6861      	ldr	r1, [r4, #4]
 800f1e0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 800f1e4:	fb01 2000 	mla	r0, r1, r0, r2
 800f1e8:	6822      	ldr	r2, [r4, #0]
 800f1ea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f1ee:	f8d8 2000 	ldr.w	r2, [r8]
 800f1f2:	9200      	str	r2, [sp, #0]
 800f1f4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800f1f8:	9201      	str	r2, [sp, #4]
 800f1fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f1fe:	f1bb 0f00 	cmp.w	fp, #0
 800f202:	dc03      	bgt.n	800f20c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800f204:	9a03      	ldr	r2, [sp, #12]
 800f206:	2a00      	cmp	r2, #0
 800f208:	f340 8146 	ble.w	800f498 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 800f20c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f20e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800f212:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800f216:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f21a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f21c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f220:	2b00      	cmp	r3, #0
 800f222:	dd0e      	ble.n	800f242 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 800f224:	140c      	asrs	r4, r1, #16
 800f226:	d405      	bmi.n	800f234 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f228:	42bc      	cmp	r4, r7
 800f22a:	da03      	bge.n	800f234 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f22c:	1414      	asrs	r4, r2, #16
 800f22e:	d401      	bmi.n	800f234 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f230:	42b4      	cmp	r4, r6
 800f232:	db07      	blt.n	800f244 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f234:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800f236:	4421      	add	r1, r4
 800f238:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800f23a:	3b01      	subs	r3, #1
 800f23c:	4422      	add	r2, r4
 800f23e:	3002      	adds	r0, #2
 800f240:	e7ee      	b.n	800f220 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800f242:	d017      	beq.n	800f274 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800f244:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800f246:	1e5c      	subs	r4, r3, #1
 800f248:	fb05 1504 	mla	r5, r5, r4, r1
 800f24c:	142d      	asrs	r5, r5, #16
 800f24e:	d409      	bmi.n	800f264 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f250:	42bd      	cmp	r5, r7
 800f252:	da07      	bge.n	800f264 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f254:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800f256:	fb05 2404 	mla	r4, r5, r4, r2
 800f25a:	1424      	asrs	r4, r4, #16
 800f25c:	d402      	bmi.n	800f264 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f25e:	42b4      	cmp	r4, r6
 800f260:	f2c0 80b3 	blt.w	800f3ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 800f264:	2600      	movs	r6, #0
 800f266:	199c      	adds	r4, r3, r6
 800f268:	2c00      	cmp	r4, #0
 800f26a:	dc3e      	bgt.n	800f2ea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800f26c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f270:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f274:	f1bb 0f00 	cmp.w	fp, #0
 800f278:	f340 810e 	ble.w	800f498 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 800f27c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f280:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f284:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f288:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f28a:	f1bb 0b01 	subs.w	fp, fp, #1
 800f28e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f292:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f296:	eeb0 6a62 	vmov.f32	s12, s5
 800f29a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f29e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f2a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f2a6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f2aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f2ae:	eeb0 6a43 	vmov.f32	s12, s6
 800f2b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f2b6:	ee12 2a90 	vmov	r2, s5
 800f2ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f2be:	fb92 f3f3 	sdiv	r3, r2, r3
 800f2c2:	ee13 2a10 	vmov	r2, s6
 800f2c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f2ca:	9311      	str	r3, [sp, #68]	; 0x44
 800f2cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f2ce:	fb92 f3f3 	sdiv	r3, r2, r3
 800f2d2:	9a03      	ldr	r2, [sp, #12]
 800f2d4:	9312      	str	r3, [sp, #72]	; 0x48
 800f2d6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f2da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f2dc:	eeb0 3a67 	vmov.f32	s6, s15
 800f2e0:	bf08      	it	eq
 800f2e2:	4613      	moveq	r3, r2
 800f2e4:	eef0 2a47 	vmov.f32	s5, s14
 800f2e8:	e789      	b.n	800f1fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800f2ea:	140f      	asrs	r7, r1, #16
 800f2ec:	d418      	bmi.n	800f320 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f2ee:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800f2f2:	42bd      	cmp	r5, r7
 800f2f4:	dd14      	ble.n	800f320 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f2f6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f2fa:	d411      	bmi.n	800f320 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f2fc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 800f300:	4564      	cmp	r4, ip
 800f302:	dd0d      	ble.n	800f320 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f304:	b22d      	sxth	r5, r5
 800f306:	fb0c 7505 	mla	r5, ip, r5, r7
 800f30a:	9c01      	ldr	r4, [sp, #4]
 800f30c:	5d64      	ldrb	r4, [r4, r5]
 800f30e:	2cff      	cmp	r4, #255	; 0xff
 800f310:	d10c      	bne.n	800f32c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 800f312:	9c00      	ldr	r4, [sp, #0]
 800f314:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 800f318:	f06f 0401 	mvn.w	r4, #1
 800f31c:	4374      	muls	r4, r6
 800f31e:	5305      	strh	r5, [r0, r4]
 800f320:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800f322:	4421      	add	r1, r4
 800f324:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800f326:	3e01      	subs	r6, #1
 800f328:	4422      	add	r2, r4
 800f32a:	e79c      	b.n	800f266 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800f32c:	2c00      	cmp	r4, #0
 800f32e:	d0f7      	beq.n	800f320 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f330:	9f00      	ldr	r7, [sp, #0]
 800f332:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 800f336:	f06f 0501 	mvn.w	r5, #1
 800f33a:	4375      	muls	r5, r6
 800f33c:	9502      	str	r5, [sp, #8]
 800f33e:	5b45      	ldrh	r5, [r0, r5]
 800f340:	fa1f fc84 	uxth.w	ip, r4
 800f344:	122f      	asrs	r7, r5, #8
 800f346:	43e4      	mvns	r4, r4
 800f348:	b2e4      	uxtb	r4, r4
 800f34a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 800f34e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f352:	fb17 f704 	smulbb	r7, r7, r4
 800f356:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f35a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800f35e:	00ed      	lsls	r5, r5, #3
 800f360:	fb0e 7e0c 	mla	lr, lr, ip, r7
 800f364:	b2ed      	uxtb	r5, r5
 800f366:	ea4f 07e9 	mov.w	r7, r9, asr #3
 800f36a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800f36e:	fb15 f504 	smulbb	r5, r5, r4
 800f372:	fa5f f989 	uxtb.w	r9, r9
 800f376:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f37a:	fb09 550c 	mla	r5, r9, ip, r5
 800f37e:	fb1a fa04 	smulbb	sl, sl, r4
 800f382:	fa1f fe8e 	uxth.w	lr, lr
 800f386:	b2ad      	uxth	r5, r5
 800f388:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f38c:	fb07 a70c 	mla	r7, r7, ip, sl
 800f390:	f10e 0401 	add.w	r4, lr, #1
 800f394:	f105 0a01 	add.w	sl, r5, #1
 800f398:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 800f39c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f3a0:	b2bf      	uxth	r7, r7
 800f3a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f3a6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800f3aa:	ea4a 0e0e 	orr.w	lr, sl, lr
 800f3ae:	f107 0a01 	add.w	sl, r7, #1
 800f3b2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f3b6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f3ba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f3be:	9c02      	ldr	r4, [sp, #8]
 800f3c0:	ea4e 0e0a 	orr.w	lr, lr, sl
 800f3c4:	f820 e004 	strh.w	lr, [r0, r4]
 800f3c8:	e7aa      	b.n	800f320 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 800f3ca:	f04f 0900 	mov.w	r9, #0
 800f3ce:	eba3 0409 	sub.w	r4, r3, r9
 800f3d2:	2c00      	cmp	r4, #0
 800f3d4:	f77f af4a 	ble.w	800f26c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f3d8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 800f3dc:	1414      	asrs	r4, r2, #16
 800f3de:	140d      	asrs	r5, r1, #16
 800f3e0:	fb06 5504 	mla	r5, r6, r4, r5
 800f3e4:	9c01      	ldr	r4, [sp, #4]
 800f3e6:	5d64      	ldrb	r4, [r4, r5]
 800f3e8:	2cff      	cmp	r4, #255	; 0xff
 800f3ea:	d10b      	bne.n	800f404 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 800f3ec:	9c00      	ldr	r4, [sp, #0]
 800f3ee:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 800f3f2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 800f3f6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800f3f8:	4421      	add	r1, r4
 800f3fa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800f3fc:	f109 0901 	add.w	r9, r9, #1
 800f400:	4422      	add	r2, r4
 800f402:	e7e4      	b.n	800f3ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 800f404:	2c00      	cmp	r4, #0
 800f406:	d0f6      	beq.n	800f3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 800f408:	9e00      	ldr	r6, [sp, #0]
 800f40a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 800f40e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800f412:	b2a7      	uxth	r7, r4
 800f414:	122e      	asrs	r6, r5, #8
 800f416:	43e4      	mvns	r4, r4
 800f418:	b2e4      	uxtb	r4, r4
 800f41a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f41e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f422:	fb16 f604 	smulbb	r6, r6, r4
 800f426:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f42a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f42e:	00ed      	lsls	r5, r5, #3
 800f430:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f434:	b2ed      	uxtb	r5, r5
 800f436:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f43a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f43e:	fb15 f504 	smulbb	r5, r5, r4
 800f442:	fa5f fe8e 	uxtb.w	lr, lr
 800f446:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f44a:	fb0e 5507 	mla	r5, lr, r7, r5
 800f44e:	fb1a fa04 	smulbb	sl, sl, r4
 800f452:	fa1f fc8c 	uxth.w	ip, ip
 800f456:	b2ad      	uxth	r5, r5
 800f458:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f45c:	fb06 a607 	mla	r6, r6, r7, sl
 800f460:	f10c 0401 	add.w	r4, ip, #1
 800f464:	f105 0a01 	add.w	sl, r5, #1
 800f468:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f46c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f470:	b2b6      	uxth	r6, r6
 800f472:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f476:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f47a:	ea4a 0c0c 	orr.w	ip, sl, ip
 800f47e:	f106 0a01 	add.w	sl, r6, #1
 800f482:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f486:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f48a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f48e:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f492:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800f496:	e7ae      	b.n	800f3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 800f498:	b005      	add	sp, #20
 800f49a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f49e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f49e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4a2:	b085      	sub	sp, #20
 800f4a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f4a6:	9203      	str	r2, [sp, #12]
 800f4a8:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 800f4ac:	9201      	str	r2, [sp, #4]
 800f4ae:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f4b2:	9100      	str	r1, [sp, #0]
 800f4b4:	6841      	ldr	r1, [r0, #4]
 800f4b6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 800f4ba:	fb01 2404 	mla	r4, r1, r4, r2
 800f4be:	6802      	ldr	r2, [r0, #0]
 800f4c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f4c4:	f8de 2000 	ldr.w	r2, [lr]
 800f4c8:	9202      	str	r2, [sp, #8]
 800f4ca:	9a01      	ldr	r2, [sp, #4]
 800f4cc:	43d6      	mvns	r6, r2
 800f4ce:	b2f6      	uxtb	r6, r6
 800f4d0:	9a00      	ldr	r2, [sp, #0]
 800f4d2:	2a00      	cmp	r2, #0
 800f4d4:	dc03      	bgt.n	800f4de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800f4d6:	9a03      	ldr	r2, [sp, #12]
 800f4d8:	2a00      	cmp	r2, #0
 800f4da:	f340 8124 	ble.w	800f726 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 800f4de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f4e0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800f4e4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800f4e8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f4ec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f4ee:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f4f2:	2b00      	cmp	r3, #0
 800f4f4:	dd0e      	ble.n	800f514 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f4f6:	1408      	asrs	r0, r1, #16
 800f4f8:	d405      	bmi.n	800f506 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f4fa:	4560      	cmp	r0, ip
 800f4fc:	da03      	bge.n	800f506 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f4fe:	1410      	asrs	r0, r2, #16
 800f500:	d401      	bmi.n	800f506 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f502:	42b8      	cmp	r0, r7
 800f504:	db07      	blt.n	800f516 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800f506:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f508:	4401      	add	r1, r0
 800f50a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f50c:	3b01      	subs	r3, #1
 800f50e:	4402      	add	r2, r0
 800f510:	3402      	adds	r4, #2
 800f512:	e7ee      	b.n	800f4f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800f514:	d06e      	beq.n	800f5f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800f516:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800f518:	1e58      	subs	r0, r3, #1
 800f51a:	fb05 1500 	mla	r5, r5, r0, r1
 800f51e:	142d      	asrs	r5, r5, #16
 800f520:	d45c      	bmi.n	800f5dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f522:	4565      	cmp	r5, ip
 800f524:	da5a      	bge.n	800f5dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f526:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800f528:	fb05 2000 	mla	r0, r5, r0, r2
 800f52c:	1400      	asrs	r0, r0, #16
 800f52e:	d455      	bmi.n	800f5dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f530:	42b8      	cmp	r0, r7
 800f532:	da53      	bge.n	800f5dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f534:	f8bd b004 	ldrh.w	fp, [sp, #4]
 800f538:	4699      	mov	r9, r3
 800f53a:	46a2      	mov	sl, r4
 800f53c:	f1b9 0f00 	cmp.w	r9, #0
 800f540:	dd54      	ble.n	800f5ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800f542:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800f546:	140d      	asrs	r5, r1, #16
 800f548:	1410      	asrs	r0, r2, #16
 800f54a:	fb07 5000 	mla	r0, r7, r0, r5
 800f54e:	9d02      	ldr	r5, [sp, #8]
 800f550:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800f554:	f8ba 5000 	ldrh.w	r5, [sl]
 800f558:	122f      	asrs	r7, r5, #8
 800f55a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f55e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f562:	fb17 f706 	smulbb	r7, r7, r6
 800f566:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800f56a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f56e:	00ed      	lsls	r5, r5, #3
 800f570:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800f574:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800f578:	10c7      	asrs	r7, r0, #3
 800f57a:	b2ed      	uxtb	r5, r5
 800f57c:	00c0      	lsls	r0, r0, #3
 800f57e:	fb18 f806 	smulbb	r8, r8, r6
 800f582:	fb15 f506 	smulbb	r5, r5, r6
 800f586:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f58a:	b2c0      	uxtb	r0, r0
 800f58c:	fa1f fc8c 	uxth.w	ip, ip
 800f590:	fb07 870b 	mla	r7, r7, fp, r8
 800f594:	fb00 500b 	mla	r0, r0, fp, r5
 800f598:	b280      	uxth	r0, r0
 800f59a:	b2bf      	uxth	r7, r7
 800f59c:	f10c 0501 	add.w	r5, ip, #1
 800f5a0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f5a4:	f107 0801 	add.w	r8, r7, #1
 800f5a8:	1c45      	adds	r5, r0, #1
 800f5aa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800f5ae:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800f5b2:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f5b4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f5b8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f5bc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800f5c0:	ea45 0c0c 	orr.w	ip, r5, ip
 800f5c4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800f5c8:	4401      	add	r1, r0
 800f5ca:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f5cc:	ea4c 0c08 	orr.w	ip, ip, r8
 800f5d0:	f82a cb02 	strh.w	ip, [sl], #2
 800f5d4:	4402      	add	r2, r0
 800f5d6:	f109 39ff 	add.w	r9, r9, #4294967295
 800f5da:	e7af      	b.n	800f53c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f5dc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 800f5e0:	f04f 0800 	mov.w	r8, #0
 800f5e4:	eb03 0008 	add.w	r0, r3, r8
 800f5e8:	2800      	cmp	r0, #0
 800f5ea:	dc41      	bgt.n	800f670 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 800f5ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f5f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f5f4:	9b00      	ldr	r3, [sp, #0]
 800f5f6:	2b00      	cmp	r3, #0
 800f5f8:	f340 8095 	ble.w	800f726 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 800f5fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f600:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f604:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f608:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f60a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f60e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f612:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f616:	eef0 6a62 	vmov.f32	s13, s5
 800f61a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f61e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f622:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f626:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 800f62a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f62e:	eef0 6a43 	vmov.f32	s13, s6
 800f632:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f636:	ee12 2a90 	vmov	r2, s5
 800f63a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f63e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f642:	ee13 2a10 	vmov	r2, s6
 800f646:	9311      	str	r3, [sp, #68]	; 0x44
 800f648:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f64a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f64e:	9312      	str	r3, [sp, #72]	; 0x48
 800f650:	9b00      	ldr	r3, [sp, #0]
 800f652:	9a03      	ldr	r2, [sp, #12]
 800f654:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f658:	3b01      	subs	r3, #1
 800f65a:	9300      	str	r3, [sp, #0]
 800f65c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 800f660:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f662:	eeb0 3a67 	vmov.f32	s6, s15
 800f666:	bf08      	it	eq
 800f668:	4613      	moveq	r3, r2
 800f66a:	eef0 2a47 	vmov.f32	s5, s14
 800f66e:	e72f      	b.n	800f4d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 800f670:	140f      	asrs	r7, r1, #16
 800f672:	d451      	bmi.n	800f718 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f674:	f8de 5008 	ldr.w	r5, [lr, #8]
 800f678:	42bd      	cmp	r5, r7
 800f67a:	dd4d      	ble.n	800f718 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f67c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f680:	d44a      	bmi.n	800f718 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f682:	f8de 000c 	ldr.w	r0, [lr, #12]
 800f686:	4560      	cmp	r0, ip
 800f688:	dd46      	ble.n	800f718 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f68a:	b22d      	sxth	r5, r5
 800f68c:	fb0c 7505 	mla	r5, ip, r5, r7
 800f690:	9802      	ldr	r0, [sp, #8]
 800f692:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 800f696:	f06f 0501 	mvn.w	r5, #1
 800f69a:	fb05 fb08 	mul.w	fp, r5, r8
 800f69e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f6a2:	f834 500b 	ldrh.w	r5, [r4, fp]
 800f6a6:	122f      	asrs	r7, r5, #8
 800f6a8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f6ac:	fb17 f706 	smulbb	r7, r7, r6
 800f6b0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800f6b4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f6b8:	00ed      	lsls	r5, r5, #3
 800f6ba:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800f6be:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f6c2:	10c7      	asrs	r7, r0, #3
 800f6c4:	b2ed      	uxtb	r5, r5
 800f6c6:	00c0      	lsls	r0, r0, #3
 800f6c8:	fb19 f906 	smulbb	r9, r9, r6
 800f6cc:	fb15 f506 	smulbb	r5, r5, r6
 800f6d0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f6d4:	b2c0      	uxtb	r0, r0
 800f6d6:	fa1f fc8c 	uxth.w	ip, ip
 800f6da:	fb07 970a 	mla	r7, r7, sl, r9
 800f6de:	fb00 500a 	mla	r0, r0, sl, r5
 800f6e2:	b2bf      	uxth	r7, r7
 800f6e4:	b280      	uxth	r0, r0
 800f6e6:	f10c 0501 	add.w	r5, ip, #1
 800f6ea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f6ee:	f107 0901 	add.w	r9, r7, #1
 800f6f2:	1c45      	adds	r5, r0, #1
 800f6f4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800f6f8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f6fc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f700:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f704:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f708:	ea45 0c0c 	orr.w	ip, r5, ip
 800f70c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f710:	ea4c 0c09 	orr.w	ip, ip, r9
 800f714:	f824 c00b 	strh.w	ip, [r4, fp]
 800f718:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f71a:	4401      	add	r1, r0
 800f71c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f71e:	f108 38ff 	add.w	r8, r8, #4294967295
 800f722:	4402      	add	r2, r0
 800f724:	e75e      	b.n	800f5e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 800f726:	b005      	add	sp, #20
 800f728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f72c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f72c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f730:	b085      	sub	sp, #20
 800f732:	4693      	mov	fp, r2
 800f734:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f736:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800f738:	6870      	ldr	r0, [r6, #4]
 800f73a:	9101      	str	r1, [sp, #4]
 800f73c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f740:	fb00 2404 	mla	r4, r0, r4, r2
 800f744:	6832      	ldr	r2, [r6, #0]
 800f746:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800f74a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f74e:	682a      	ldr	r2, [r5, #0]
 800f750:	9202      	str	r2, [sp, #8]
 800f752:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f756:	9a01      	ldr	r2, [sp, #4]
 800f758:	2a00      	cmp	r2, #0
 800f75a:	dc03      	bgt.n	800f764 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800f75c:	f1bb 0f00 	cmp.w	fp, #0
 800f760:	f340 809a 	ble.w	800f898 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 800f764:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f766:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800f76a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800f76e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f772:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f774:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f778:	2b00      	cmp	r3, #0
 800f77a:	dd0c      	ble.n	800f796 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 800f77c:	1406      	asrs	r6, r0, #16
 800f77e:	d405      	bmi.n	800f78c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800f780:	454e      	cmp	r6, r9
 800f782:	da03      	bge.n	800f78c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800f784:	1416      	asrs	r6, r2, #16
 800f786:	d401      	bmi.n	800f78c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800f788:	4546      	cmp	r6, r8
 800f78a:	db05      	blt.n	800f798 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f78c:	4470      	add	r0, lr
 800f78e:	4462      	add	r2, ip
 800f790:	3b01      	subs	r3, #1
 800f792:	3402      	adds	r4, #2
 800f794:	e7f0      	b.n	800f778 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 800f796:	d00f      	beq.n	800f7b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 800f798:	1e5e      	subs	r6, r3, #1
 800f79a:	fb0e 0706 	mla	r7, lr, r6, r0
 800f79e:	143f      	asrs	r7, r7, #16
 800f7a0:	d541      	bpl.n	800f826 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 800f7a2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800f7a6:	4698      	mov	r8, r3
 800f7a8:	9603      	str	r6, [sp, #12]
 800f7aa:	f1b8 0f00 	cmp.w	r8, #0
 800f7ae:	dc56      	bgt.n	800f85e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 800f7b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f7b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f7b8:	9b01      	ldr	r3, [sp, #4]
 800f7ba:	2b00      	cmp	r3, #0
 800f7bc:	dd6c      	ble.n	800f898 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 800f7be:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f7c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f7c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f7ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f7cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f7d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f7d4:	eeb0 6a62 	vmov.f32	s12, s5
 800f7d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f7dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f7e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f7e4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f7e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f7ec:	eeb0 6a43 	vmov.f32	s12, s6
 800f7f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f7f4:	ee12 2a90 	vmov	r2, s5
 800f7f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f7fc:	fb92 fef3 	sdiv	lr, r2, r3
 800f800:	ee13 2a10 	vmov	r2, s6
 800f804:	fb92 fcf3 	sdiv	ip, r2, r3
 800f808:	9b01      	ldr	r3, [sp, #4]
 800f80a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f80e:	3b01      	subs	r3, #1
 800f810:	9301      	str	r3, [sp, #4]
 800f812:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f816:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f818:	eeb0 3a67 	vmov.f32	s6, s15
 800f81c:	bf08      	it	eq
 800f81e:	465b      	moveq	r3, fp
 800f820:	eef0 2a47 	vmov.f32	s5, s14
 800f824:	e797      	b.n	800f756 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 800f826:	454f      	cmp	r7, r9
 800f828:	dabb      	bge.n	800f7a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f82a:	fb0c 2606 	mla	r6, ip, r6, r2
 800f82e:	1436      	asrs	r6, r6, #16
 800f830:	d4b7      	bmi.n	800f7a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f832:	4546      	cmp	r6, r8
 800f834:	dab5      	bge.n	800f7a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f836:	461e      	mov	r6, r3
 800f838:	46a0      	mov	r8, r4
 800f83a:	2e00      	cmp	r6, #0
 800f83c:	ddb8      	ble.n	800f7b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800f83e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800f842:	9902      	ldr	r1, [sp, #8]
 800f844:	1417      	asrs	r7, r2, #16
 800f846:	ea4f 4920 	mov.w	r9, r0, asr #16
 800f84a:	fb0a 9707 	mla	r7, sl, r7, r9
 800f84e:	4470      	add	r0, lr
 800f850:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800f854:	f828 7b02 	strh.w	r7, [r8], #2
 800f858:	4462      	add	r2, ip
 800f85a:	3e01      	subs	r6, #1
 800f85c:	e7ed      	b.n	800f83a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 800f85e:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f862:	d414      	bmi.n	800f88e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800f864:	68ae      	ldr	r6, [r5, #8]
 800f866:	454e      	cmp	r6, r9
 800f868:	dd11      	ble.n	800f88e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800f86a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800f86e:	d40e      	bmi.n	800f88e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800f870:	68ef      	ldr	r7, [r5, #12]
 800f872:	4557      	cmp	r7, sl
 800f874:	dd0b      	ble.n	800f88e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800f876:	b236      	sxth	r6, r6
 800f878:	fb0a 9606 	mla	r6, sl, r6, r9
 800f87c:	9f02      	ldr	r7, [sp, #8]
 800f87e:	f06f 0101 	mvn.w	r1, #1
 800f882:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800f886:	fb01 f608 	mul.w	r6, r1, r8
 800f88a:	9903      	ldr	r1, [sp, #12]
 800f88c:	538f      	strh	r7, [r1, r6]
 800f88e:	4470      	add	r0, lr
 800f890:	4462      	add	r2, ip
 800f892:	f108 38ff 	add.w	r8, r8, #4294967295
 800f896:	e788      	b.n	800f7aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f898:	b005      	add	sp, #20
 800f89a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f89e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f89e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f8a2:	b087      	sub	sp, #28
 800f8a4:	468b      	mov	fp, r1
 800f8a6:	9815      	ldr	r0, [sp, #84]	; 0x54
 800f8a8:	9203      	str	r2, [sp, #12]
 800f8aa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f8ae:	9204      	str	r2, [sp, #16]
 800f8b0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800f8b4:	6841      	ldr	r1, [r0, #4]
 800f8b6:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 800f8ba:	fb01 2505 	mla	r5, r1, r5, r2
 800f8be:	6802      	ldr	r2, [r0, #0]
 800f8c0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800f8c4:	f8d9 2000 	ldr.w	r2, [r9]
 800f8c8:	9201      	str	r2, [sp, #4]
 800f8ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f8ce:	f1bb 0f00 	cmp.w	fp, #0
 800f8d2:	dc03      	bgt.n	800f8dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800f8d4:	9a03      	ldr	r2, [sp, #12]
 800f8d6:	2a00      	cmp	r2, #0
 800f8d8:	f340 8159 	ble.w	800fb8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 800f8dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f8de:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 800f8e2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 800f8e6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f8ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f8ec:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f8f0:	2b00      	cmp	r3, #0
 800f8f2:	dd0e      	ble.n	800f912 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 800f8f4:	1402      	asrs	r2, r0, #16
 800f8f6:	d405      	bmi.n	800f904 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f8f8:	42ba      	cmp	r2, r7
 800f8fa:	da03      	bge.n	800f904 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f8fc:	140a      	asrs	r2, r1, #16
 800f8fe:	d401      	bmi.n	800f904 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f900:	42b2      	cmp	r2, r6
 800f902:	db07      	blt.n	800f914 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f904:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f906:	4410      	add	r0, r2
 800f908:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f90a:	3b01      	subs	r3, #1
 800f90c:	4411      	add	r1, r2
 800f90e:	3502      	adds	r5, #2
 800f910:	e7ee      	b.n	800f8f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800f912:	d017      	beq.n	800f944 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800f914:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f916:	1e5a      	subs	r2, r3, #1
 800f918:	fb04 0402 	mla	r4, r4, r2, r0
 800f91c:	1424      	asrs	r4, r4, #16
 800f91e:	d409      	bmi.n	800f934 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f920:	42bc      	cmp	r4, r7
 800f922:	da07      	bge.n	800f934 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f924:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f926:	fb04 1202 	mla	r2, r4, r2, r1
 800f92a:	1412      	asrs	r2, r2, #16
 800f92c:	d402      	bmi.n	800f934 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f92e:	42b2      	cmp	r2, r6
 800f930:	f2c0 80bf 	blt.w	800fab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 800f934:	2700      	movs	r7, #0
 800f936:	19da      	adds	r2, r3, r7
 800f938:	2a00      	cmp	r2, #0
 800f93a:	dc3e      	bgt.n	800f9ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800f93c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f940:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f944:	f1bb 0f00 	cmp.w	fp, #0
 800f948:	f340 8121 	ble.w	800fb8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 800f94c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f950:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f954:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f958:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f95a:	f1bb 0b01 	subs.w	fp, fp, #1
 800f95e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f962:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f966:	eeb0 6a62 	vmov.f32	s12, s5
 800f96a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f96e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f972:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f976:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f97a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f97e:	eeb0 6a43 	vmov.f32	s12, s6
 800f982:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f986:	ee12 2a90 	vmov	r2, s5
 800f98a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f98e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f992:	ee13 2a10 	vmov	r2, s6
 800f996:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f99a:	9313      	str	r3, [sp, #76]	; 0x4c
 800f99c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f99e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f9a2:	9a03      	ldr	r2, [sp, #12]
 800f9a4:	9314      	str	r3, [sp, #80]	; 0x50
 800f9a6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f9aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f9ac:	eeb0 3a67 	vmov.f32	s6, s15
 800f9b0:	bf08      	it	eq
 800f9b2:	4613      	moveq	r3, r2
 800f9b4:	eef0 2a47 	vmov.f32	s5, s14
 800f9b8:	e789      	b.n	800f8ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800f9ba:	1406      	asrs	r6, r0, #16
 800f9bc:	d42d      	bmi.n	800fa1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800f9be:	f8d9 4008 	ldr.w	r4, [r9, #8]
 800f9c2:	42b4      	cmp	r4, r6
 800f9c4:	dd29      	ble.n	800fa1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800f9c6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 800f9ca:	d426      	bmi.n	800fa1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800f9cc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 800f9d0:	4562      	cmp	r2, ip
 800f9d2:	dd22      	ble.n	800fa1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800f9d4:	b224      	sxth	r4, r4
 800f9d6:	9a01      	ldr	r2, [sp, #4]
 800f9d8:	fb0c 6404 	mla	r4, ip, r4, r6
 800f9dc:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 800f9e0:	0e22      	lsrs	r2, r4, #24
 800f9e2:	d01a      	beq.n	800fa1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800f9e4:	9e04      	ldr	r6, [sp, #16]
 800f9e6:	4372      	muls	r2, r6
 800f9e8:	1c56      	adds	r6, r2, #1
 800f9ea:	eb06 2222 	add.w	r2, r6, r2, asr #8
 800f9ee:	1212      	asrs	r2, r2, #8
 800f9f0:	0a26      	lsrs	r6, r4, #8
 800f9f2:	2aff      	cmp	r2, #255	; 0xff
 800f9f4:	9605      	str	r6, [sp, #20]
 800f9f6:	d116      	bne.n	800fa26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 800f9f8:	f06f 0201 	mvn.w	r2, #1
 800f9fc:	fb02 fc07 	mul.w	ip, r2, r7
 800fa00:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 800fa04:	0962      	lsrs	r2, r4, #5
 800fa06:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800fa0a:	f026 0607 	bic.w	r6, r6, #7
 800fa0e:	4316      	orrs	r6, r2
 800fa10:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800fa14:	4326      	orrs	r6, r4
 800fa16:	f825 600c 	strh.w	r6, [r5, ip]
 800fa1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fa1c:	4410      	add	r0, r2
 800fa1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fa20:	3f01      	subs	r7, #1
 800fa22:	4411      	add	r1, r2
 800fa24:	e787      	b.n	800f936 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800fa26:	f06f 0601 	mvn.w	r6, #1
 800fa2a:	437e      	muls	r6, r7
 800fa2c:	fa1f fa82 	uxth.w	sl, r2
 800fa30:	f835 8006 	ldrh.w	r8, [r5, r6]
 800fa34:	9602      	str	r6, [sp, #8]
 800fa36:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800fa3a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 800fa3e:	43d2      	mvns	r2, r2
 800fa40:	b2d2      	uxtb	r2, r2
 800fa42:	fb1c fc0a 	smulbb	ip, ip, sl
 800fa46:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800fa4a:	fb0e ce02 	mla	lr, lr, r2, ip
 800fa4e:	b2e4      	uxtb	r4, r4
 800fa50:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 800fa54:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800fa58:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800fa5c:	fa5f f888 	uxtb.w	r8, r8
 800fa60:	fb14 f40a 	smulbb	r4, r4, sl
 800fa64:	fb08 4402 	mla	r4, r8, r2, r4
 800fa68:	fa1f fe8e 	uxth.w	lr, lr
 800fa6c:	fb16 f60a 	smulbb	r6, r6, sl
 800fa70:	b2a4      	uxth	r4, r4
 800fa72:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800fa76:	fb0c 6c02 	mla	ip, ip, r2, r6
 800fa7a:	f10e 0201 	add.w	r2, lr, #1
 800fa7e:	1c66      	adds	r6, r4, #1
 800fa80:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 800fa84:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800fa88:	fa1f fc8c 	uxth.w	ip, ip
 800fa8c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fa90:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800fa94:	ea46 0e0e 	orr.w	lr, r6, lr
 800fa98:	f10c 0601 	add.w	r6, ip, #1
 800fa9c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 800faa0:	0976      	lsrs	r6, r6, #5
 800faa2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800faa6:	9a02      	ldr	r2, [sp, #8]
 800faa8:	ea4e 0e06 	orr.w	lr, lr, r6
 800faac:	f825 e002 	strh.w	lr, [r5, r2]
 800fab0:	e7b3      	b.n	800fa1a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800fab2:	f04f 0800 	mov.w	r8, #0
 800fab6:	eba3 0208 	sub.w	r2, r3, r8
 800faba:	2a00      	cmp	r2, #0
 800fabc:	f77f af3e 	ble.w	800f93c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800fac0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 800fac4:	1404      	asrs	r4, r0, #16
 800fac6:	140a      	asrs	r2, r1, #16
 800fac8:	fb06 4202 	mla	r2, r6, r2, r4
 800facc:	9c01      	ldr	r4, [sp, #4]
 800face:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 800fad2:	0e22      	lsrs	r2, r4, #24
 800fad4:	d016      	beq.n	800fb04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 800fad6:	9e04      	ldr	r6, [sp, #16]
 800fad8:	4372      	muls	r2, r6
 800fada:	1c56      	adds	r6, r2, #1
 800fadc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 800fae0:	1212      	asrs	r2, r2, #8
 800fae2:	2aff      	cmp	r2, #255	; 0xff
 800fae4:	ea4f 2614 	mov.w	r6, r4, lsr #8
 800fae8:	d113      	bne.n	800fb12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 800faea:	0962      	lsrs	r2, r4, #5
 800faec:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 800faf0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800faf4:	f026 0607 	bic.w	r6, r6, #7
 800faf8:	4316      	orrs	r6, r2
 800fafa:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 800fafe:	4326      	orrs	r6, r4
 800fb00:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 800fb04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fb06:	4410      	add	r0, r2
 800fb08:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fb0a:	f108 0801 	add.w	r8, r8, #1
 800fb0e:	4411      	add	r1, r2
 800fb10:	e7d1      	b.n	800fab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 800fb12:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 800fb16:	fa1f fa82 	uxth.w	sl, r2
 800fb1a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800fb1e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 800fb22:	43d2      	mvns	r2, r2
 800fb24:	b2d2      	uxtb	r2, r2
 800fb26:	fb17 f70a 	smulbb	r7, r7, sl
 800fb2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fb2e:	fb0c 7c02 	mla	ip, ip, r2, r7
 800fb32:	b2e4      	uxtb	r4, r4
 800fb34:	ea4f 07ee 	mov.w	r7, lr, asr #3
 800fb38:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fb3c:	fa5f fe8e 	uxtb.w	lr, lr
 800fb40:	fb14 f40a 	smulbb	r4, r4, sl
 800fb44:	fb0e 4402 	mla	r4, lr, r2, r4
 800fb48:	b2f6      	uxtb	r6, r6
 800fb4a:	fa1f fc8c 	uxth.w	ip, ip
 800fb4e:	fb16 f60a 	smulbb	r6, r6, sl
 800fb52:	b2a4      	uxth	r4, r4
 800fb54:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fb58:	fb07 6702 	mla	r7, r7, r2, r6
 800fb5c:	f10c 0201 	add.w	r2, ip, #1
 800fb60:	1c66      	adds	r6, r4, #1
 800fb62:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 800fb66:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 800fb6a:	b2bf      	uxth	r7, r7
 800fb6c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fb70:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fb74:	ea46 0c0c 	orr.w	ip, r6, ip
 800fb78:	1c7e      	adds	r6, r7, #1
 800fb7a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 800fb7e:	0976      	lsrs	r6, r6, #5
 800fb80:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800fb84:	ea4c 0c06 	orr.w	ip, ip, r6
 800fb88:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 800fb8c:	e7ba      	b.n	800fb04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 800fb8e:	b007      	add	sp, #28
 800fb90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fb94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fb94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb98:	b085      	sub	sp, #20
 800fb9a:	468b      	mov	fp, r1
 800fb9c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fb9e:	9203      	str	r2, [sp, #12]
 800fba0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800fba4:	6841      	ldr	r1, [r0, #4]
 800fba6:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 800fbaa:	fb01 2404 	mla	r4, r1, r4, r2
 800fbae:	6802      	ldr	r2, [r0, #0]
 800fbb0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fbb4:	f8d8 2000 	ldr.w	r2, [r8]
 800fbb8:	9201      	str	r2, [sp, #4]
 800fbba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fbbe:	f1bb 0f00 	cmp.w	fp, #0
 800fbc2:	dc03      	bgt.n	800fbcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800fbc4:	9a03      	ldr	r2, [sp, #12]
 800fbc6:	2a00      	cmp	r2, #0
 800fbc8:	f340 814f 	ble.w	800fe6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 800fbcc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fbce:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800fbd2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800fbd6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fbda:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fbdc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fbe0:	2b00      	cmp	r3, #0
 800fbe2:	dd0e      	ble.n	800fc02 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800fbe4:	1408      	asrs	r0, r1, #16
 800fbe6:	d405      	bmi.n	800fbf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800fbe8:	42b8      	cmp	r0, r7
 800fbea:	da03      	bge.n	800fbf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800fbec:	1410      	asrs	r0, r2, #16
 800fbee:	d401      	bmi.n	800fbf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800fbf0:	42b0      	cmp	r0, r6
 800fbf2:	db07      	blt.n	800fc04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800fbf4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fbf6:	4401      	add	r1, r0
 800fbf8:	9812      	ldr	r0, [sp, #72]	; 0x48
 800fbfa:	3b01      	subs	r3, #1
 800fbfc:	4402      	add	r2, r0
 800fbfe:	3402      	adds	r4, #2
 800fc00:	e7ee      	b.n	800fbe0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 800fc02:	d017      	beq.n	800fc34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800fc04:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800fc06:	1e58      	subs	r0, r3, #1
 800fc08:	fb05 1500 	mla	r5, r5, r0, r1
 800fc0c:	142d      	asrs	r5, r5, #16
 800fc0e:	d409      	bmi.n	800fc24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 800fc10:	42bd      	cmp	r5, r7
 800fc12:	da07      	bge.n	800fc24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 800fc14:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800fc16:	fb05 2000 	mla	r0, r5, r0, r2
 800fc1a:	1400      	asrs	r0, r0, #16
 800fc1c:	d402      	bmi.n	800fc24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 800fc1e:	42b0      	cmp	r0, r6
 800fc20:	f2c0 80ba 	blt.w	800fd98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 800fc24:	2600      	movs	r6, #0
 800fc26:	1998      	adds	r0, r3, r6
 800fc28:	2800      	cmp	r0, #0
 800fc2a:	dc3e      	bgt.n	800fcaa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 800fc2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fc30:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fc34:	f1bb 0f00 	cmp.w	fp, #0
 800fc38:	f340 8117 	ble.w	800fe6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 800fc3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fc40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fc44:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fc48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc4a:	f1bb 0b01 	subs.w	fp, fp, #1
 800fc4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fc52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fc56:	eeb0 6a62 	vmov.f32	s12, s5
 800fc5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fc5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fc62:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fc66:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800fc6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fc6e:	eeb0 6a43 	vmov.f32	s12, s6
 800fc72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fc76:	ee12 2a90 	vmov	r2, s5
 800fc7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fc7e:	fb92 f3f3 	sdiv	r3, r2, r3
 800fc82:	ee13 2a10 	vmov	r2, s6
 800fc86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fc8a:	9311      	str	r3, [sp, #68]	; 0x44
 800fc8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc8e:	fb92 f3f3 	sdiv	r3, r2, r3
 800fc92:	9a03      	ldr	r2, [sp, #12]
 800fc94:	9312      	str	r3, [sp, #72]	; 0x48
 800fc96:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800fc9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc9c:	eeb0 3a67 	vmov.f32	s6, s15
 800fca0:	bf08      	it	eq
 800fca2:	4613      	moveq	r3, r2
 800fca4:	eef0 2a47 	vmov.f32	s5, s14
 800fca8:	e789      	b.n	800fbbe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 800fcaa:	140f      	asrs	r7, r1, #16
 800fcac:	d424      	bmi.n	800fcf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fcae:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800fcb2:	42bd      	cmp	r5, r7
 800fcb4:	dd20      	ble.n	800fcf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fcb6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800fcba:	d41d      	bmi.n	800fcf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fcbc:	f8d8 000c 	ldr.w	r0, [r8, #12]
 800fcc0:	4560      	cmp	r0, ip
 800fcc2:	dd19      	ble.n	800fcf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fcc4:	b22d      	sxth	r5, r5
 800fcc6:	fb0c 7505 	mla	r5, ip, r5, r7
 800fcca:	9801      	ldr	r0, [sp, #4]
 800fccc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800fcd0:	0e07      	lsrs	r7, r0, #24
 800fcd2:	2fff      	cmp	r7, #255	; 0xff
 800fcd4:	d116      	bne.n	800fd04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800fcd6:	f06f 0501 	mvn.w	r5, #1
 800fcda:	fb05 f706 	mul.w	r7, r5, r6
 800fcde:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800fce2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800fce6:	0945      	lsrs	r5, r0, #5
 800fce8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fcec:	ea4c 0505 	orr.w	r5, ip, r5
 800fcf0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800fcf4:	4305      	orrs	r5, r0
 800fcf6:	53e5      	strh	r5, [r4, r7]
 800fcf8:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fcfa:	4401      	add	r1, r0
 800fcfc:	9812      	ldr	r0, [sp, #72]	; 0x48
 800fcfe:	3e01      	subs	r6, #1
 800fd00:	4402      	add	r2, r0
 800fd02:	e790      	b.n	800fc26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800fd04:	b2fd      	uxtb	r5, r7
 800fd06:	2f00      	cmp	r7, #0
 800fd08:	d0f6      	beq.n	800fcf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fd0a:	f06f 0701 	mvn.w	r7, #1
 800fd0e:	4377      	muls	r7, r6
 800fd10:	fa1f f985 	uxth.w	r9, r5
 800fd14:	f834 e007 	ldrh.w	lr, [r4, r7]
 800fd18:	9702      	str	r7, [sp, #8]
 800fd1a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800fd1e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800fd22:	43ed      	mvns	r5, r5
 800fd24:	b2ed      	uxtb	r5, r5
 800fd26:	fb17 f709 	smulbb	r7, r7, r9
 800fd2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fd2e:	fb0c 7c05 	mla	ip, ip, r5, r7
 800fd32:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800fd36:	ea4f 07ee 	mov.w	r7, lr, asr #3
 800fd3a:	b2c0      	uxtb	r0, r0
 800fd3c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fd40:	fa5f fe8e 	uxtb.w	lr, lr
 800fd44:	fb10 f009 	smulbb	r0, r0, r9
 800fd48:	fb0e 0005 	mla	r0, lr, r5, r0
 800fd4c:	b280      	uxth	r0, r0
 800fd4e:	fa1f fc8c 	uxth.w	ip, ip
 800fd52:	fb1a fa09 	smulbb	sl, sl, r9
 800fd56:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fd5a:	fb07 a705 	mla	r7, r7, r5, sl
 800fd5e:	f100 0a01 	add.w	sl, r0, #1
 800fd62:	f10c 0501 	add.w	r5, ip, #1
 800fd66:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800fd6a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fd6e:	b2bf      	uxth	r7, r7
 800fd70:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fd74:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fd78:	ea4a 0c0c 	orr.w	ip, sl, ip
 800fd7c:	f107 0a01 	add.w	sl, r7, #1
 800fd80:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800fd84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fd88:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fd8c:	9802      	ldr	r0, [sp, #8]
 800fd8e:	ea4c 0c0a 	orr.w	ip, ip, sl
 800fd92:	f824 c000 	strh.w	ip, [r4, r0]
 800fd96:	e7af      	b.n	800fcf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800fd98:	f04f 0e00 	mov.w	lr, #0
 800fd9c:	eba3 000e 	sub.w	r0, r3, lr
 800fda0:	2800      	cmp	r0, #0
 800fda2:	f77f af43 	ble.w	800fc2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800fda6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 800fdaa:	140d      	asrs	r5, r1, #16
 800fdac:	1410      	asrs	r0, r2, #16
 800fdae:	fb06 5000 	mla	r0, r6, r0, r5
 800fdb2:	9d01      	ldr	r5, [sp, #4]
 800fdb4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 800fdb8:	0e2e      	lsrs	r6, r5, #24
 800fdba:	2eff      	cmp	r6, #255	; 0xff
 800fdbc:	d112      	bne.n	800fde4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 800fdbe:	482c      	ldr	r0, [pc, #176]	; (800fe70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 800fdc0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 800fdc4:	0968      	lsrs	r0, r5, #5
 800fdc6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 800fdca:	4330      	orrs	r0, r6
 800fdcc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 800fdd0:	4328      	orrs	r0, r5
 800fdd2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 800fdd6:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fdd8:	4401      	add	r1, r0
 800fdda:	9812      	ldr	r0, [sp, #72]	; 0x48
 800fddc:	f10e 0e01 	add.w	lr, lr, #1
 800fde0:	4402      	add	r2, r0
 800fde2:	e7db      	b.n	800fd9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 800fde4:	b2f0      	uxtb	r0, r6
 800fde6:	2e00      	cmp	r6, #0
 800fde8:	d0f5      	beq.n	800fdd6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 800fdea:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800fdee:	fa1f f980 	uxth.w	r9, r0
 800fdf2:	ea4f 272c 	mov.w	r7, ip, asr #8
 800fdf6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800fdfa:	43c0      	mvns	r0, r0
 800fdfc:	b2c0      	uxtb	r0, r0
 800fdfe:	fb16 f609 	smulbb	r6, r6, r9
 800fe02:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fe06:	fb07 6700 	mla	r7, r7, r0, r6
 800fe0a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800fe0e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800fe12:	b2ed      	uxtb	r5, r5
 800fe14:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800fe18:	fa5f fc8c 	uxtb.w	ip, ip
 800fe1c:	fb15 f509 	smulbb	r5, r5, r9
 800fe20:	fb0c 5500 	mla	r5, ip, r0, r5
 800fe24:	b2bf      	uxth	r7, r7
 800fe26:	fb1a fa09 	smulbb	sl, sl, r9
 800fe2a:	b2ad      	uxth	r5, r5
 800fe2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fe30:	fb06 a600 	mla	r6, r6, r0, sl
 800fe34:	1c78      	adds	r0, r7, #1
 800fe36:	f105 0a01 	add.w	sl, r5, #1
 800fe3a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 800fe3e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800fe42:	b2b6      	uxth	r6, r6
 800fe44:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fe48:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fe4c:	ea4a 0707 	orr.w	r7, sl, r7
 800fe50:	f106 0a01 	add.w	sl, r6, #1
 800fe54:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fe58:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fe5c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fe60:	ea47 070a 	orr.w	r7, r7, sl
 800fe64:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800fe68:	e7b5      	b.n	800fdd6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 800fe6a:	b005      	add	sp, #20
 800fe6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe70:	fffff800 	.word	0xfffff800

0800fe74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fe74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe78:	b087      	sub	sp, #28
 800fe7a:	468b      	mov	fp, r1
 800fe7c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fe7e:	9203      	str	r2, [sp, #12]
 800fe80:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800fe84:	9204      	str	r2, [sp, #16]
 800fe86:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fe8a:	6841      	ldr	r1, [r0, #4]
 800fe8c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 800fe90:	fb01 2404 	mla	r4, r1, r4, r2
 800fe94:	6802      	ldr	r2, [r0, #0]
 800fe96:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fe9a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 800fe9e:	3201      	adds	r2, #1
 800fea0:	f022 0201 	bic.w	r2, r2, #1
 800fea4:	9200      	str	r2, [sp, #0]
 800fea6:	f8d9 2000 	ldr.w	r2, [r9]
 800feaa:	9201      	str	r2, [sp, #4]
 800feac:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800feb0:	f1bb 0f00 	cmp.w	fp, #0
 800feb4:	dc03      	bgt.n	800febe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 800feb6:	9a03      	ldr	r2, [sp, #12]
 800feb8:	2a00      	cmp	r2, #0
 800feba:	f340 8169 	ble.w	8010190 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 800febe:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fec0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 800fec4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 800fec8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fecc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fece:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fed2:	2b00      	cmp	r3, #0
 800fed4:	dd0e      	ble.n	800fef4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800fed6:	1402      	asrs	r2, r0, #16
 800fed8:	d405      	bmi.n	800fee6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800feda:	42ba      	cmp	r2, r7
 800fedc:	da03      	bge.n	800fee6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800fede:	140a      	asrs	r2, r1, #16
 800fee0:	d401      	bmi.n	800fee6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800fee2:	42b2      	cmp	r2, r6
 800fee4:	db07      	blt.n	800fef6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 800fee6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fee8:	4410      	add	r0, r2
 800feea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800feec:	3b01      	subs	r3, #1
 800feee:	4411      	add	r1, r2
 800fef0:	3402      	adds	r4, #2
 800fef2:	e7ee      	b.n	800fed2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 800fef4:	d017      	beq.n	800ff26 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 800fef6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fef8:	1e5a      	subs	r2, r3, #1
 800fefa:	fb05 0502 	mla	r5, r5, r2, r0
 800fefe:	142d      	asrs	r5, r5, #16
 800ff00:	d409      	bmi.n	800ff16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800ff02:	42bd      	cmp	r5, r7
 800ff04:	da07      	bge.n	800ff16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800ff06:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ff08:	fb05 1202 	mla	r2, r5, r2, r1
 800ff0c:	1412      	asrs	r2, r2, #16
 800ff0e:	d402      	bmi.n	800ff16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800ff10:	42b2      	cmp	r2, r6
 800ff12:	f2c0 80c7 	blt.w	80100a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 800ff16:	2700      	movs	r7, #0
 800ff18:	19da      	adds	r2, r3, r7
 800ff1a:	2a00      	cmp	r2, #0
 800ff1c:	dc3e      	bgt.n	800ff9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 800ff1e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ff22:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ff26:	f1bb 0f00 	cmp.w	fp, #0
 800ff2a:	f340 8131 	ble.w	8010190 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 800ff2e:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ff32:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ff36:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ff3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ff3c:	f1bb 0b01 	subs.w	fp, fp, #1
 800ff40:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ff44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ff48:	eeb0 6a62 	vmov.f32	s12, s5
 800ff4c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ff50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ff54:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ff58:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800ff5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ff60:	eeb0 6a43 	vmov.f32	s12, s6
 800ff64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ff68:	ee12 2a90 	vmov	r2, s5
 800ff6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ff70:	fb92 f3f3 	sdiv	r3, r2, r3
 800ff74:	ee13 2a10 	vmov	r2, s6
 800ff78:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ff7c:	9313      	str	r3, [sp, #76]	; 0x4c
 800ff7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ff80:	fb92 f3f3 	sdiv	r3, r2, r3
 800ff84:	9a03      	ldr	r2, [sp, #12]
 800ff86:	9314      	str	r3, [sp, #80]	; 0x50
 800ff88:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800ff8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ff8e:	eeb0 3a67 	vmov.f32	s6, s15
 800ff92:	bf08      	it	eq
 800ff94:	4613      	moveq	r3, r2
 800ff96:	eef0 2a47 	vmov.f32	s5, s14
 800ff9a:	e789      	b.n	800feb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800ff9c:	1405      	asrs	r5, r0, #16
 800ff9e:	d435      	bmi.n	801000c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 800ffa0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 800ffa4:	42aa      	cmp	r2, r5
 800ffa6:	dd31      	ble.n	801000c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 800ffa8:	140e      	asrs	r6, r1, #16
 800ffaa:	d42f      	bmi.n	801000c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 800ffac:	f8d9 200c 	ldr.w	r2, [r9, #12]
 800ffb0:	42b2      	cmp	r2, r6
 800ffb2:	dd2b      	ble.n	801000c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 800ffb4:	9a00      	ldr	r2, [sp, #0]
 800ffb6:	fb06 5502 	mla	r5, r6, r2, r5
 800ffba:	086a      	lsrs	r2, r5, #1
 800ffbc:	9e01      	ldr	r6, [sp, #4]
 800ffbe:	5cb2      	ldrb	r2, [r6, r2]
 800ffc0:	07ee      	lsls	r6, r5, #31
 800ffc2:	bf54      	ite	pl
 800ffc4:	f002 020f 	andpl.w	r2, r2, #15
 800ffc8:	1112      	asrmi	r2, r2, #4
 800ffca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800ffce:	b2d2      	uxtb	r2, r2
 800ffd0:	b1e2      	cbz	r2, 801000c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 800ffd2:	9d04      	ldr	r5, [sp, #16]
 800ffd4:	436a      	muls	r2, r5
 800ffd6:	1c55      	adds	r5, r2, #1
 800ffd8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 800ffdc:	4d6e      	ldr	r5, [pc, #440]	; (8010198 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 800ffde:	682d      	ldr	r5, [r5, #0]
 800ffe0:	1212      	asrs	r2, r2, #8
 800ffe2:	0a2e      	lsrs	r6, r5, #8
 800ffe4:	2aff      	cmp	r2, #255	; 0xff
 800ffe6:	9605      	str	r6, [sp, #20]
 800ffe8:	d116      	bne.n	8010018 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 800ffea:	f06f 0201 	mvn.w	r2, #1
 800ffee:	fb02 fc07 	mul.w	ip, r2, r7
 800fff2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 800fff6:	096a      	lsrs	r2, r5, #5
 800fff8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800fffc:	f026 0607 	bic.w	r6, r6, #7
 8010000:	4316      	orrs	r6, r2
 8010002:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8010006:	432e      	orrs	r6, r5
 8010008:	f824 600c 	strh.w	r6, [r4, ip]
 801000c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801000e:	4410      	add	r0, r2
 8010010:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010012:	3f01      	subs	r7, #1
 8010014:	4411      	add	r1, r2
 8010016:	e77f      	b.n	800ff18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8010018:	f06f 0601 	mvn.w	r6, #1
 801001c:	437e      	muls	r6, r7
 801001e:	fa1f fa82 	uxth.w	sl, r2
 8010022:	f834 8006 	ldrh.w	r8, [r4, r6]
 8010026:	9602      	str	r6, [sp, #8]
 8010028:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801002c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8010030:	43d2      	mvns	r2, r2
 8010032:	b2d2      	uxtb	r2, r2
 8010034:	fb1c fc0a 	smulbb	ip, ip, sl
 8010038:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801003c:	fb0e ce02 	mla	lr, lr, r2, ip
 8010040:	b2ed      	uxtb	r5, r5
 8010042:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8010046:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801004a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801004e:	fa5f f888 	uxtb.w	r8, r8
 8010052:	fb15 f50a 	smulbb	r5, r5, sl
 8010056:	fb08 5502 	mla	r5, r8, r2, r5
 801005a:	fa1f fe8e 	uxth.w	lr, lr
 801005e:	fb16 f60a 	smulbb	r6, r6, sl
 8010062:	b2ad      	uxth	r5, r5
 8010064:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010068:	fb0c 6c02 	mla	ip, ip, r2, r6
 801006c:	f10e 0201 	add.w	r2, lr, #1
 8010070:	1c6e      	adds	r6, r5, #1
 8010072:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8010076:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801007a:	fa1f fc8c 	uxth.w	ip, ip
 801007e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010082:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8010086:	ea46 0e0e 	orr.w	lr, r6, lr
 801008a:	f10c 0601 	add.w	r6, ip, #1
 801008e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8010092:	0976      	lsrs	r6, r6, #5
 8010094:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010098:	9a02      	ldr	r2, [sp, #8]
 801009a:	ea4e 0e06 	orr.w	lr, lr, r6
 801009e:	f824 e002 	strh.w	lr, [r4, r2]
 80100a2:	e7b3      	b.n	801000c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80100a4:	f04f 0800 	mov.w	r8, #0
 80100a8:	eba3 0208 	sub.w	r2, r3, r8
 80100ac:	2a00      	cmp	r2, #0
 80100ae:	f77f af36 	ble.w	800ff1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80100b2:	9e00      	ldr	r6, [sp, #0]
 80100b4:	1402      	asrs	r2, r0, #16
 80100b6:	140d      	asrs	r5, r1, #16
 80100b8:	fb06 2505 	mla	r5, r6, r5, r2
 80100bc:	086a      	lsrs	r2, r5, #1
 80100be:	9e01      	ldr	r6, [sp, #4]
 80100c0:	5cb2      	ldrb	r2, [r6, r2]
 80100c2:	07ed      	lsls	r5, r5, #31
 80100c4:	bf54      	ite	pl
 80100c6:	f002 020f 	andpl.w	r2, r2, #15
 80100ca:	1112      	asrmi	r2, r2, #4
 80100cc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80100d0:	b2d2      	uxtb	r2, r2
 80100d2:	b1c2      	cbz	r2, 8010106 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80100d4:	9d04      	ldr	r5, [sp, #16]
 80100d6:	436a      	muls	r2, r5
 80100d8:	1c55      	adds	r5, r2, #1
 80100da:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80100de:	4d2e      	ldr	r5, [pc, #184]	; (8010198 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80100e0:	1212      	asrs	r2, r2, #8
 80100e2:	682e      	ldr	r6, [r5, #0]
 80100e4:	2aff      	cmp	r2, #255	; 0xff
 80100e6:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80100ea:	d113      	bne.n	8010114 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80100ec:	0972      	lsrs	r2, r6, #5
 80100ee:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80100f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80100f6:	f025 0507 	bic.w	r5, r5, #7
 80100fa:	4315      	orrs	r5, r2
 80100fc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8010100:	4335      	orrs	r5, r6
 8010102:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8010106:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010108:	4410      	add	r0, r2
 801010a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801010c:	f108 0801 	add.w	r8, r8, #1
 8010110:	4411      	add	r1, r2
 8010112:	e7c9      	b.n	80100a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8010114:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8010118:	fa1f fa82 	uxth.w	sl, r2
 801011c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010120:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8010124:	43d2      	mvns	r2, r2
 8010126:	b2d2      	uxtb	r2, r2
 8010128:	fb17 f70a 	smulbb	r7, r7, sl
 801012c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010130:	fb0c 7c02 	mla	ip, ip, r2, r7
 8010134:	b2f6      	uxtb	r6, r6
 8010136:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801013a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801013e:	fa5f fe8e 	uxtb.w	lr, lr
 8010142:	fb16 f60a 	smulbb	r6, r6, sl
 8010146:	fb0e 6602 	mla	r6, lr, r2, r6
 801014a:	b2ed      	uxtb	r5, r5
 801014c:	fa1f fc8c 	uxth.w	ip, ip
 8010150:	fb15 f50a 	smulbb	r5, r5, sl
 8010154:	b2b6      	uxth	r6, r6
 8010156:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801015a:	fb07 5702 	mla	r7, r7, r2, r5
 801015e:	f10c 0201 	add.w	r2, ip, #1
 8010162:	1c75      	adds	r5, r6, #1
 8010164:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8010168:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801016c:	b2bf      	uxth	r7, r7
 801016e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010172:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010176:	ea45 0c0c 	orr.w	ip, r5, ip
 801017a:	1c7d      	adds	r5, r7, #1
 801017c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8010180:	096d      	lsrs	r5, r5, #5
 8010182:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010186:	ea4c 0c05 	orr.w	ip, ip, r5
 801018a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801018e:	e7ba      	b.n	8010106 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8010190:	b007      	add	sp, #28
 8010192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010196:	bf00      	nop
 8010198:	2000a4a0 	.word	0x2000a4a0

0801019c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801019c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101a0:	b087      	sub	sp, #28
 80101a2:	f8df 830c 	ldr.w	r8, [pc, #780]	; 80104b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80101a6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80101a8:	9205      	str	r2, [sp, #20]
 80101aa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80101ae:	9101      	str	r1, [sp, #4]
 80101b0:	6841      	ldr	r1, [r0, #4]
 80101b2:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 80101b6:	fb01 2404 	mla	r4, r1, r4, r2
 80101ba:	6802      	ldr	r2, [r0, #0]
 80101bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80101c0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80101c4:	3201      	adds	r2, #1
 80101c6:	f022 0201 	bic.w	r2, r2, #1
 80101ca:	9202      	str	r2, [sp, #8]
 80101cc:	f8db 2000 	ldr.w	r2, [fp]
 80101d0:	9203      	str	r2, [sp, #12]
 80101d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80101d6:	9a01      	ldr	r2, [sp, #4]
 80101d8:	2a00      	cmp	r2, #0
 80101da:	dc03      	bgt.n	80101e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80101dc:	9a05      	ldr	r2, [sp, #20]
 80101de:	2a00      	cmp	r2, #0
 80101e0:	f340 8162 	ble.w	80104a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80101e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80101e6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80101ea:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80101ee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80101f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80101f4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80101f8:	2b00      	cmp	r3, #0
 80101fa:	dd0e      	ble.n	801021a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80101fc:	1402      	asrs	r2, r0, #16
 80101fe:	d405      	bmi.n	801020c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010200:	42ba      	cmp	r2, r7
 8010202:	da03      	bge.n	801020c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010204:	140a      	asrs	r2, r1, #16
 8010206:	d401      	bmi.n	801020c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010208:	42b2      	cmp	r2, r6
 801020a:	db07      	blt.n	801021c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801020c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801020e:	4410      	add	r0, r2
 8010210:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010212:	3b01      	subs	r3, #1
 8010214:	4411      	add	r1, r2
 8010216:	3402      	adds	r4, #2
 8010218:	e7ee      	b.n	80101f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801021a:	d017      	beq.n	801024c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801021c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801021e:	1e5a      	subs	r2, r3, #1
 8010220:	fb05 0502 	mla	r5, r5, r2, r0
 8010224:	142d      	asrs	r5, r5, #16
 8010226:	d409      	bmi.n	801023c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010228:	42bd      	cmp	r5, r7
 801022a:	da07      	bge.n	801023c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801022c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801022e:	fb05 1202 	mla	r2, r5, r2, r1
 8010232:	1412      	asrs	r2, r2, #16
 8010234:	d402      	bmi.n	801023c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010236:	42b2      	cmp	r2, r6
 8010238:	f2c0 80c3 	blt.w	80103c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801023c:	2500      	movs	r5, #0
 801023e:	195a      	adds	r2, r3, r5
 8010240:	2a00      	cmp	r2, #0
 8010242:	dc3f      	bgt.n	80102c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010244:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010248:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801024c:	9b01      	ldr	r3, [sp, #4]
 801024e:	2b00      	cmp	r3, #0
 8010250:	f340 812a 	ble.w	80104a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8010254:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010258:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801025c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010260:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010262:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010266:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801026a:	eeb0 6a62 	vmov.f32	s12, s5
 801026e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010272:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010276:	ee77 2a62 	vsub.f32	s5, s14, s5
 801027a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801027e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010282:	eeb0 6a43 	vmov.f32	s12, s6
 8010286:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801028a:	ee12 2a90 	vmov	r2, s5
 801028e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010292:	fb92 f3f3 	sdiv	r3, r2, r3
 8010296:	ee13 2a10 	vmov	r2, s6
 801029a:	9313      	str	r3, [sp, #76]	; 0x4c
 801029c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801029e:	fb92 f3f3 	sdiv	r3, r2, r3
 80102a2:	9314      	str	r3, [sp, #80]	; 0x50
 80102a4:	9b01      	ldr	r3, [sp, #4]
 80102a6:	9a05      	ldr	r2, [sp, #20]
 80102a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80102ac:	3b01      	subs	r3, #1
 80102ae:	9301      	str	r3, [sp, #4]
 80102b0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80102b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80102b6:	eeb0 3a67 	vmov.f32	s6, s15
 80102ba:	bf08      	it	eq
 80102bc:	4613      	moveq	r3, r2
 80102be:	eef0 2a47 	vmov.f32	s5, s14
 80102c2:	e788      	b.n	80101d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80102c4:	1406      	asrs	r6, r0, #16
 80102c6:	d42c      	bmi.n	8010322 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80102c8:	f8db 2008 	ldr.w	r2, [fp, #8]
 80102cc:	42b2      	cmp	r2, r6
 80102ce:	dd28      	ble.n	8010322 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80102d0:	140f      	asrs	r7, r1, #16
 80102d2:	d426      	bmi.n	8010322 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80102d4:	f8db 200c 	ldr.w	r2, [fp, #12]
 80102d8:	42ba      	cmp	r2, r7
 80102da:	dd22      	ble.n	8010322 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80102dc:	9a02      	ldr	r2, [sp, #8]
 80102de:	fb07 6602 	mla	r6, r7, r2, r6
 80102e2:	0872      	lsrs	r2, r6, #1
 80102e4:	9f03      	ldr	r7, [sp, #12]
 80102e6:	5cba      	ldrb	r2, [r7, r2]
 80102e8:	07f6      	lsls	r6, r6, #31
 80102ea:	bf54      	ite	pl
 80102ec:	f002 020f 	andpl.w	r2, r2, #15
 80102f0:	1112      	asrmi	r2, r2, #4
 80102f2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80102f6:	b2d2      	uxtb	r2, r2
 80102f8:	2aff      	cmp	r2, #255	; 0xff
 80102fa:	d118      	bne.n	801032e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80102fc:	f8d8 2000 	ldr.w	r2, [r8]
 8010300:	f06f 0601 	mvn.w	r6, #1
 8010304:	fb06 f705 	mul.w	r7, r6, r5
 8010308:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801030c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8010310:	0956      	lsrs	r6, r2, #5
 8010312:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010316:	ea4c 0606 	orr.w	r6, ip, r6
 801031a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801031e:	4316      	orrs	r6, r2
 8010320:	53e6      	strh	r6, [r4, r7]
 8010322:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010324:	4410      	add	r0, r2
 8010326:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010328:	3d01      	subs	r5, #1
 801032a:	4411      	add	r1, r2
 801032c:	e787      	b.n	801023e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801032e:	2a00      	cmp	r2, #0
 8010330:	d0f7      	beq.n	8010322 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8010332:	f06f 0601 	mvn.w	r6, #1
 8010336:	436e      	muls	r6, r5
 8010338:	f8d8 c000 	ldr.w	ip, [r8]
 801033c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8010340:	9604      	str	r6, [sp, #16]
 8010342:	fa1f f982 	uxth.w	r9, r2
 8010346:	ea4f 272e 	mov.w	r7, lr, asr #8
 801034a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801034e:	43d2      	mvns	r2, r2
 8010350:	b2d2      	uxtb	r2, r2
 8010352:	fb16 f609 	smulbb	r6, r6, r9
 8010356:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801035a:	fb07 6702 	mla	r7, r7, r2, r6
 801035e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8010362:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010366:	fa5f fc8c 	uxtb.w	ip, ip
 801036a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801036e:	fa5f fe8e 	uxtb.w	lr, lr
 8010372:	fb1c fc09 	smulbb	ip, ip, r9
 8010376:	fb0e cc02 	mla	ip, lr, r2, ip
 801037a:	b2bf      	uxth	r7, r7
 801037c:	fb1a fa09 	smulbb	sl, sl, r9
 8010380:	fa1f fc8c 	uxth.w	ip, ip
 8010384:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010388:	fb06 a602 	mla	r6, r6, r2, sl
 801038c:	1c7a      	adds	r2, r7, #1
 801038e:	f10c 0a01 	add.w	sl, ip, #1
 8010392:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010396:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801039a:	b2b6      	uxth	r6, r6
 801039c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80103a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80103a4:	ea4a 0707 	orr.w	r7, sl, r7
 80103a8:	f106 0a01 	add.w	sl, r6, #1
 80103ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80103b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80103b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80103b8:	9a04      	ldr	r2, [sp, #16]
 80103ba:	ea47 070a 	orr.w	r7, r7, sl
 80103be:	52a7      	strh	r7, [r4, r2]
 80103c0:	e7af      	b.n	8010322 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80103c2:	f04f 0e00 	mov.w	lr, #0
 80103c6:	eba3 020e 	sub.w	r2, r3, lr
 80103ca:	2a00      	cmp	r2, #0
 80103cc:	f77f af3a 	ble.w	8010244 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80103d0:	9e02      	ldr	r6, [sp, #8]
 80103d2:	1402      	asrs	r2, r0, #16
 80103d4:	140d      	asrs	r5, r1, #16
 80103d6:	fb06 2505 	mla	r5, r6, r5, r2
 80103da:	086a      	lsrs	r2, r5, #1
 80103dc:	9e03      	ldr	r6, [sp, #12]
 80103de:	5cb2      	ldrb	r2, [r6, r2]
 80103e0:	07ed      	lsls	r5, r5, #31
 80103e2:	bf54      	ite	pl
 80103e4:	f002 020f 	andpl.w	r2, r2, #15
 80103e8:	1112      	asrmi	r2, r2, #4
 80103ea:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80103ee:	b2d2      	uxtb	r2, r2
 80103f0:	2aff      	cmp	r2, #255	; 0xff
 80103f2:	d115      	bne.n	8010420 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80103f4:	f8d8 5000 	ldr.w	r5, [r8]
 80103f8:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 80103fc:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8010400:	096a      	lsrs	r2, r5, #5
 8010402:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010406:	4332      	orrs	r2, r6
 8010408:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801040c:	432a      	orrs	r2, r5
 801040e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8010412:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010414:	4410      	add	r0, r2
 8010416:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010418:	f10e 0e01 	add.w	lr, lr, #1
 801041c:	4411      	add	r1, r2
 801041e:	e7d2      	b.n	80103c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8010420:	2a00      	cmp	r2, #0
 8010422:	d0f6      	beq.n	8010412 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8010424:	f8d8 7000 	ldr.w	r7, [r8]
 8010428:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801042c:	fa1f f982 	uxth.w	r9, r2
 8010430:	ea4f 262c 	mov.w	r6, ip, asr #8
 8010434:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8010438:	43d2      	mvns	r2, r2
 801043a:	b2d2      	uxtb	r2, r2
 801043c:	fb15 f509 	smulbb	r5, r5, r9
 8010440:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010444:	fb06 5602 	mla	r6, r6, r2, r5
 8010448:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801044c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8010450:	b2ff      	uxtb	r7, r7
 8010452:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010456:	fa5f fc8c 	uxtb.w	ip, ip
 801045a:	fb17 f709 	smulbb	r7, r7, r9
 801045e:	fb0c 7702 	mla	r7, ip, r2, r7
 8010462:	b2b6      	uxth	r6, r6
 8010464:	fb1a fa09 	smulbb	sl, sl, r9
 8010468:	b2bf      	uxth	r7, r7
 801046a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801046e:	fb05 a502 	mla	r5, r5, r2, sl
 8010472:	1c72      	adds	r2, r6, #1
 8010474:	f107 0a01 	add.w	sl, r7, #1
 8010478:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801047c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010480:	b2ad      	uxth	r5, r5
 8010482:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010486:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801048a:	ea4a 0606 	orr.w	r6, sl, r6
 801048e:	f105 0a01 	add.w	sl, r5, #1
 8010492:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010496:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801049a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801049e:	ea46 060a 	orr.w	r6, r6, sl
 80104a2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80104a6:	e7b4      	b.n	8010412 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80104a8:	b007      	add	sp, #28
 80104aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104ae:	bf00      	nop
 80104b0:	2000a4a0 	.word	0x2000a4a0

080104b4 <_ZN8touchgfx8LCD16bppD1Ev>:
 80104b4:	4770      	bx	lr

080104b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80104b6:	4770      	bx	lr

080104b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80104b8:	4770      	bx	lr

080104ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80104ba:	4770      	bx	lr

080104bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80104bc:	4770      	bx	lr

080104be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80104be:	4770      	bx	lr

080104c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80104c0:	4770      	bx	lr

080104c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80104c2:	4770      	bx	lr

080104c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80104c4:	4770      	bx	lr

080104c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80104c6:	4770      	bx	lr

080104c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80104c8:	4770      	bx	lr

080104ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80104ca:	4770      	bx	lr

080104cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80104cc:	4770      	bx	lr

080104ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80104ce:	4770      	bx	lr

080104d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80104d0:	4770      	bx	lr

080104d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80104d2:	4770      	bx	lr

080104d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80104d4:	4770      	bx	lr

080104d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80104d6:	4770      	bx	lr

080104d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80104d8:	4770      	bx	lr

080104da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80104da:	4770      	bx	lr

080104dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80104dc:	4770      	bx	lr

080104de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80104de:	4770      	bx	lr

080104e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80104e0:	4770      	bx	lr

080104e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80104e2:	4770      	bx	lr

080104e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80104e4:	4770      	bx	lr

080104e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80104e6:	4770      	bx	lr

080104e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80104e8:	4770      	bx	lr

080104ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80104ea:	4770      	bx	lr

080104ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80104ec:	4770      	bx	lr
	...

080104f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80104f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80104f4:	4692      	mov	sl, r2
 80104f6:	4a22      	ldr	r2, [pc, #136]	; (8010580 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x90>)
 80104f8:	6812      	ldr	r2, [r2, #0]
 80104fa:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 80104fe:	2a02      	cmp	r2, #2
 8010500:	b088      	sub	sp, #32
 8010502:	4605      	mov	r5, r0
 8010504:	4689      	mov	r9, r1
 8010506:	d106      	bne.n	8010516 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8010508:	4b1e      	ldr	r3, [pc, #120]	; (8010584 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x94>)
 801050a:	4a1f      	ldr	r2, [pc, #124]	; (8010588 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801050c:	f44f 7158 	mov.w	r1, #864	; 0x360
 8010510:	481e      	ldr	r0, [pc, #120]	; (801058c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 8010512:	f009 fc87 	bl	8019e24 <__assert_func>
 8010516:	ac08      	add	r4, sp, #32
 8010518:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801051c:	4620      	mov	r0, r4
 801051e:	f7fd fce3 	bl	800dee8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010522:	682b      	ldr	r3, [r5, #0]
 8010524:	4606      	mov	r6, r0
 8010526:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010528:	4628      	mov	r0, r5
 801052a:	4798      	blx	r3
 801052c:	4286      	cmp	r6, r0
 801052e:	d004      	beq.n	801053a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8010530:	4b17      	ldr	r3, [pc, #92]	; (8010590 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 8010532:	4a15      	ldr	r2, [pc, #84]	; (8010588 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8010534:	f240 3162 	movw	r1, #866	; 0x362
 8010538:	e7ea      	b.n	8010510 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801053a:	4620      	mov	r0, r4
 801053c:	f7fd fc4a 	bl	800ddd4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8010540:	4606      	mov	r6, r0
 8010542:	b920      	cbnz	r0, 801054e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8010544:	4b13      	ldr	r3, [pc, #76]	; (8010594 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 8010546:	4a10      	ldr	r2, [pc, #64]	; (8010588 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8010548:	f44f 7159 	mov.w	r1, #868	; 0x364
 801054c:	e7e0      	b.n	8010510 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801054e:	682b      	ldr	r3, [r5, #0]
 8010550:	4620      	mov	r0, r4
 8010552:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8010556:	f7fd fb21 	bl	800db9c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801055a:	4607      	mov	r7, r0
 801055c:	4620      	mov	r0, r4
 801055e:	f7fd fb61 	bl	800dc24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010562:	b23f      	sxth	r7, r7
 8010564:	b200      	sxth	r0, r0
 8010566:	9002      	str	r0, [sp, #8]
 8010568:	e9cd 6700 	strd	r6, r7, [sp]
 801056c:	a806      	add	r0, sp, #24
 801056e:	4653      	mov	r3, sl
 8010570:	464a      	mov	r2, r9
 8010572:	4629      	mov	r1, r5
 8010574:	47c0      	blx	r8
 8010576:	4630      	mov	r0, r6
 8010578:	b008      	add	sp, #32
 801057a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801057e:	bf00      	nop
 8010580:	2000a498 	.word	0x2000a498
 8010584:	0801d80e 	.word	0x0801d80e
 8010588:	0801e10b 	.word	0x0801e10b
 801058c:	0801d8c0 	.word	0x0801d8c0
 8010590:	0801d8f2 	.word	0x0801d8f2
 8010594:	0801d947 	.word	0x0801d947

08010598 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8010598:	b508      	push	{r3, lr}
 801059a:	4b06      	ldr	r3, [pc, #24]	; (80105b4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 801059c:	8818      	ldrh	r0, [r3, #0]
 801059e:	b928      	cbnz	r0, 80105ac <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80105a0:	4b05      	ldr	r3, [pc, #20]	; (80105b8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80105a2:	4a06      	ldr	r2, [pc, #24]	; (80105bc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 80105a4:	4806      	ldr	r0, [pc, #24]	; (80105c0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 80105a6:	2153      	movs	r1, #83	; 0x53
 80105a8:	f009 fc3c 	bl	8019e24 <__assert_func>
 80105ac:	0040      	lsls	r0, r0, #1
 80105ae:	b280      	uxth	r0, r0
 80105b0:	bd08      	pop	{r3, pc}
 80105b2:	bf00      	nop
 80105b4:	2000a492 	.word	0x2000a492
 80105b8:	0801d9b6 	.word	0x0801d9b6
 80105bc:	0801dfc8 	.word	0x0801dfc8
 80105c0:	0801d9f8 	.word	0x0801d9f8

080105c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80105c4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80105c8:	2300      	movs	r3, #0
 80105ca:	9300      	str	r3, [sp, #0]
 80105cc:	4b3d      	ldr	r3, [pc, #244]	; (80106c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80105ce:	781b      	ldrb	r3, [r3, #0]
 80105d0:	2b00      	cmp	r3, #0
 80105d2:	d137      	bne.n	8010644 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80105d4:	4a3c      	ldr	r2, [pc, #240]	; (80106c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80105d6:	f9b2 2000 	ldrsh.w	r2, [r2]
 80105da:	f8ad 2004 	strh.w	r2, [sp, #4]
 80105de:	2b00      	cmp	r3, #0
 80105e0:	d132      	bne.n	8010648 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80105e2:	4b3a      	ldr	r3, [pc, #232]	; (80106cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80105e4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80105e8:	6808      	ldr	r0, [r1, #0]
 80105ea:	6849      	ldr	r1, [r1, #4]
 80105ec:	f8ad 3006 	strh.w	r3, [sp, #6]
 80105f0:	ac02      	add	r4, sp, #8
 80105f2:	ab02      	add	r3, sp, #8
 80105f4:	c303      	stmia	r3!, {r0, r1}
 80105f6:	4669      	mov	r1, sp
 80105f8:	4620      	mov	r0, r4
 80105fa:	f7fa fccb 	bl	800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80105fe:	4668      	mov	r0, sp
 8010600:	f7fa fca0 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010604:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010608:	f8bd 2000 	ldrh.w	r2, [sp]
 801060c:	4d30      	ldr	r5, [pc, #192]	; (80106d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801060e:	4413      	add	r3, r2
 8010610:	f8ad 3008 	strh.w	r3, [sp, #8]
 8010614:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8010618:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801061c:	6828      	ldr	r0, [r5, #0]
 801061e:	4413      	add	r3, r2
 8010620:	f8ad 300a 	strh.w	r3, [sp, #10]
 8010624:	6803      	ldr	r3, [r0, #0]
 8010626:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010628:	4798      	blx	r3
 801062a:	f010 0f01 	tst.w	r0, #1
 801062e:	462f      	mov	r7, r5
 8010630:	d00c      	beq.n	801064c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8010632:	6828      	ldr	r0, [r5, #0]
 8010634:	6803      	ldr	r3, [r0, #0]
 8010636:	e894 0006 	ldmia.w	r4, {r1, r2}
 801063a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801063c:	4798      	blx	r3
 801063e:	b004      	add	sp, #16
 8010640:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010644:	4a21      	ldr	r2, [pc, #132]	; (80106cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8010646:	e7c6      	b.n	80105d6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8010648:	4b1f      	ldr	r3, [pc, #124]	; (80106c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801064a:	e7cb      	b.n	80105e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801064c:	6838      	ldr	r0, [r7, #0]
 801064e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8010652:	6803      	ldr	r3, [r0, #0]
 8010654:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8010658:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801065a:	4798      	blx	r3
 801065c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8010660:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8010664:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8010668:	fb16 3602 	smlabb	r6, r6, r2, r3
 801066c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8010670:	6838      	ldr	r0, [r7, #0]
 8010672:	6803      	ldr	r3, [r0, #0]
 8010674:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010676:	4798      	blx	r3
 8010678:	4a13      	ldr	r2, [pc, #76]	; (80106c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801067a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801067e:	8813      	ldrh	r3, [r2, #0]
 8010680:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8010684:	fb03 1404 	mla	r4, r3, r4, r1
 8010688:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801068c:	435d      	muls	r5, r3
 801068e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8010692:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8010696:	4691      	mov	r9, r2
 8010698:	6838      	ldr	r0, [r7, #0]
 801069a:	42ac      	cmp	r4, r5
 801069c:	6803      	ldr	r3, [r0, #0]
 801069e:	d20e      	bcs.n	80106be <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80106a0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80106a4:	4632      	mov	r2, r6
 80106a6:	4643      	mov	r3, r8
 80106a8:	4621      	mov	r1, r4
 80106aa:	47d0      	blx	sl
 80106ac:	f8b9 3000 	ldrh.w	r3, [r9]
 80106b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80106b4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80106b8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80106bc:	e7ec      	b.n	8010698 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80106be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80106c0:	4798      	blx	r3
 80106c2:	e7bc      	b.n	801063e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80106c4:	2000a490 	.word	0x2000a490
 80106c8:	2000a492 	.word	0x2000a492
 80106cc:	2000a494 	.word	0x2000a494
 80106d0:	2000a498 	.word	0x2000a498

080106d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80106d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106d8:	b08b      	sub	sp, #44	; 0x2c
 80106da:	460f      	mov	r7, r1
 80106dc:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80106e0:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80106e4:	4616      	mov	r6, r2
 80106e6:	f1bb 0f00 	cmp.w	fp, #0
 80106ea:	d049      	beq.n	8010780 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80106ec:	6810      	ldr	r0, [r2, #0]
 80106ee:	6851      	ldr	r1, [r2, #4]
 80106f0:	ad06      	add	r5, sp, #24
 80106f2:	c503      	stmia	r5!, {r0, r1}
 80106f4:	6818      	ldr	r0, [r3, #0]
 80106f6:	6859      	ldr	r1, [r3, #4]
 80106f8:	ad08      	add	r5, sp, #32
 80106fa:	c503      	stmia	r5!, {r0, r1}
 80106fc:	a806      	add	r0, sp, #24
 80106fe:	f7fa fc21 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010702:	4631      	mov	r1, r6
 8010704:	a808      	add	r0, sp, #32
 8010706:	f7fa fc45 	bl	800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801070a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801070e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8010712:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8010716:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801071a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801071e:	fb16 2103 	smlabb	r1, r6, r3, r2
 8010722:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8010726:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801072a:	4f5f      	ldr	r7, [pc, #380]	; (80108a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801072c:	440a      	add	r2, r1
 801072e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8010732:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010736:	6838      	ldr	r0, [r7, #0]
 8010738:	4413      	add	r3, r2
 801073a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801073e:	6803      	ldr	r3, [r0, #0]
 8010740:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010742:	4798      	blx	r3
 8010744:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8010748:	46b9      	mov	r9, r7
 801074a:	d01c      	beq.n	8010786 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 801074c:	f010 0f04 	tst.w	r0, #4
 8010750:	d01d      	beq.n	801078e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8010752:	f8d9 0000 	ldr.w	r0, [r9]
 8010756:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801075a:	6801      	ldr	r1, [r0, #0]
 801075c:	f8cd b00c 	str.w	fp, [sp, #12]
 8010760:	2700      	movs	r7, #0
 8010762:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8010766:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801076a:	9402      	str	r4, [sp, #8]
 801076c:	b2ad      	uxth	r5, r5
 801076e:	fa1f f488 	uxth.w	r4, r8
 8010772:	9501      	str	r5, [sp, #4]
 8010774:	9400      	str	r4, [sp, #0]
 8010776:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8010778:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801077c:	4631      	mov	r1, r6
 801077e:	47a0      	blx	r4
 8010780:	b00b      	add	sp, #44	; 0x2c
 8010782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010786:	b914      	cbnz	r4, 801078e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8010788:	f010 0f01 	tst.w	r0, #1
 801078c:	e7e0      	b.n	8010750 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801078e:	f8d9 0000 	ldr.w	r0, [r9]
 8010792:	6803      	ldr	r3, [r0, #0]
 8010794:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010796:	4798      	blx	r3
 8010798:	4b44      	ldr	r3, [pc, #272]	; (80108ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801079a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801079e:	881a      	ldrh	r2, [r3, #0]
 80107a0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80107a4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80107a8:	fb02 1404 	mla	r4, r2, r4, r1
 80107ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80107b0:	469a      	mov	sl, r3
 80107b2:	fb05 f502 	mul.w	r5, r5, r2
 80107b6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80107ba:	d059      	beq.n	8010870 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80107bc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80107c0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80107c4:	fa1f f28b 	uxth.w	r2, fp
 80107c8:	fa1f f989 	uxth.w	r9, r9
 80107cc:	469e      	mov	lr, r3
 80107ce:	42ac      	cmp	r4, r5
 80107d0:	d264      	bcs.n	801089c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80107d2:	eb04 0a07 	add.w	sl, r4, r7
 80107d6:	4554      	cmp	r4, sl
 80107d8:	d23d      	bcs.n	8010856 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80107da:	8821      	ldrh	r1, [r4, #0]
 80107dc:	f836 3b02 	ldrh.w	r3, [r6], #2
 80107e0:	1208      	asrs	r0, r1, #8
 80107e2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80107e6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80107ea:	fb10 f009 	smulbb	r0, r0, r9
 80107ee:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80107f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80107f6:	00c9      	lsls	r1, r1, #3
 80107f8:	fb0c 0c02 	mla	ip, ip, r2, r0
 80107fc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8010800:	10d8      	asrs	r0, r3, #3
 8010802:	b2c9      	uxtb	r1, r1
 8010804:	00db      	lsls	r3, r3, #3
 8010806:	fa1f fc8c 	uxth.w	ip, ip
 801080a:	fb1b fb09 	smulbb	fp, fp, r9
 801080e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8010812:	b2db      	uxtb	r3, r3
 8010814:	fb11 f109 	smulbb	r1, r1, r9
 8010818:	fb00 b002 	mla	r0, r0, r2, fp
 801081c:	fb03 1302 	mla	r3, r3, r2, r1
 8010820:	f10c 0b01 	add.w	fp, ip, #1
 8010824:	b29b      	uxth	r3, r3
 8010826:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801082a:	b280      	uxth	r0, r0
 801082c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8010830:	f103 0c01 	add.w	ip, r3, #1
 8010834:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8010838:	1c43      	adds	r3, r0, #1
 801083a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801083e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8010842:	0940      	lsrs	r0, r0, #5
 8010844:	ea4c 0c0b 	orr.w	ip, ip, fp
 8010848:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801084c:	ea4c 0c00 	orr.w	ip, ip, r0
 8010850:	f824 cb02 	strh.w	ip, [r4], #2
 8010854:	e7bf      	b.n	80107d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8010856:	f8be 3000 	ldrh.w	r3, [lr]
 801085a:	eba3 0308 	sub.w	r3, r3, r8
 801085e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010862:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8010866:	eba3 0308 	sub.w	r3, r3, r8
 801086a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801086e:	e7ae      	b.n	80107ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8010870:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8010874:	f8d9 0000 	ldr.w	r0, [r9]
 8010878:	42ac      	cmp	r4, r5
 801087a:	6803      	ldr	r3, [r0, #0]
 801087c:	d20e      	bcs.n	801089c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801087e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8010882:	4632      	mov	r2, r6
 8010884:	463b      	mov	r3, r7
 8010886:	4621      	mov	r1, r4
 8010888:	47c0      	blx	r8
 801088a:	f8ba 3000 	ldrh.w	r3, [sl]
 801088e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010892:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8010896:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801089a:	e7eb      	b.n	8010874 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801089c:	4b02      	ldr	r3, [pc, #8]	; (80108a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801089e:	6818      	ldr	r0, [r3, #0]
 80108a0:	6803      	ldr	r3, [r0, #0]
 80108a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80108a4:	4798      	blx	r3
 80108a6:	e76b      	b.n	8010780 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80108a8:	2000a498 	.word	0x2000a498
 80108ac:	2000a492 	.word	0x2000a492

080108b0 <_ZN8touchgfx8LCD16bppD0Ev>:
 80108b0:	b510      	push	{r4, lr}
 80108b2:	2178      	movs	r1, #120	; 0x78
 80108b4:	4604      	mov	r4, r0
 80108b6:	f009 fa86 	bl	8019dc6 <_ZdlPvj>
 80108ba:	4620      	mov	r0, r4
 80108bc:	bd10      	pop	{r4, pc}

080108be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80108be:	b510      	push	{r4, lr}
 80108c0:	2104      	movs	r1, #4
 80108c2:	4604      	mov	r4, r0
 80108c4:	f009 fa7f 	bl	8019dc6 <_ZdlPvj>
 80108c8:	4620      	mov	r0, r4
 80108ca:	bd10      	pop	{r4, pc}

080108cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80108cc:	b510      	push	{r4, lr}
 80108ce:	2104      	movs	r1, #4
 80108d0:	4604      	mov	r4, r0
 80108d2:	f009 fa78 	bl	8019dc6 <_ZdlPvj>
 80108d6:	4620      	mov	r0, r4
 80108d8:	bd10      	pop	{r4, pc}

080108da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80108da:	b510      	push	{r4, lr}
 80108dc:	2104      	movs	r1, #4
 80108de:	4604      	mov	r4, r0
 80108e0:	f009 fa71 	bl	8019dc6 <_ZdlPvj>
 80108e4:	4620      	mov	r0, r4
 80108e6:	bd10      	pop	{r4, pc}

080108e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80108e8:	b510      	push	{r4, lr}
 80108ea:	2104      	movs	r1, #4
 80108ec:	4604      	mov	r4, r0
 80108ee:	f009 fa6a 	bl	8019dc6 <_ZdlPvj>
 80108f2:	4620      	mov	r0, r4
 80108f4:	bd10      	pop	{r4, pc}

080108f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80108f6:	b510      	push	{r4, lr}
 80108f8:	2104      	movs	r1, #4
 80108fa:	4604      	mov	r4, r0
 80108fc:	f009 fa63 	bl	8019dc6 <_ZdlPvj>
 8010900:	4620      	mov	r0, r4
 8010902:	bd10      	pop	{r4, pc}

08010904 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8010904:	b510      	push	{r4, lr}
 8010906:	2104      	movs	r1, #4
 8010908:	4604      	mov	r4, r0
 801090a:	f009 fa5c 	bl	8019dc6 <_ZdlPvj>
 801090e:	4620      	mov	r0, r4
 8010910:	bd10      	pop	{r4, pc}

08010912 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010912:	b510      	push	{r4, lr}
 8010914:	2104      	movs	r1, #4
 8010916:	4604      	mov	r4, r0
 8010918:	f009 fa55 	bl	8019dc6 <_ZdlPvj>
 801091c:	4620      	mov	r0, r4
 801091e:	bd10      	pop	{r4, pc}

08010920 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8010920:	b510      	push	{r4, lr}
 8010922:	2104      	movs	r1, #4
 8010924:	4604      	mov	r4, r0
 8010926:	f009 fa4e 	bl	8019dc6 <_ZdlPvj>
 801092a:	4620      	mov	r0, r4
 801092c:	bd10      	pop	{r4, pc}

0801092e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801092e:	b510      	push	{r4, lr}
 8010930:	2104      	movs	r1, #4
 8010932:	4604      	mov	r4, r0
 8010934:	f009 fa47 	bl	8019dc6 <_ZdlPvj>
 8010938:	4620      	mov	r0, r4
 801093a:	bd10      	pop	{r4, pc}

0801093c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801093c:	b510      	push	{r4, lr}
 801093e:	2104      	movs	r1, #4
 8010940:	4604      	mov	r4, r0
 8010942:	f009 fa40 	bl	8019dc6 <_ZdlPvj>
 8010946:	4620      	mov	r0, r4
 8010948:	bd10      	pop	{r4, pc}

0801094a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801094a:	b510      	push	{r4, lr}
 801094c:	2104      	movs	r1, #4
 801094e:	4604      	mov	r4, r0
 8010950:	f009 fa39 	bl	8019dc6 <_ZdlPvj>
 8010954:	4620      	mov	r0, r4
 8010956:	bd10      	pop	{r4, pc}

08010958 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010958:	b510      	push	{r4, lr}
 801095a:	2104      	movs	r1, #4
 801095c:	4604      	mov	r4, r0
 801095e:	f009 fa32 	bl	8019dc6 <_ZdlPvj>
 8010962:	4620      	mov	r0, r4
 8010964:	bd10      	pop	{r4, pc}

08010966 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010966:	b510      	push	{r4, lr}
 8010968:	2104      	movs	r1, #4
 801096a:	4604      	mov	r4, r0
 801096c:	f009 fa2b 	bl	8019dc6 <_ZdlPvj>
 8010970:	4620      	mov	r0, r4
 8010972:	bd10      	pop	{r4, pc}

08010974 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8010974:	b510      	push	{r4, lr}
 8010976:	2104      	movs	r1, #4
 8010978:	4604      	mov	r4, r0
 801097a:	f009 fa24 	bl	8019dc6 <_ZdlPvj>
 801097e:	4620      	mov	r0, r4
 8010980:	bd10      	pop	{r4, pc}

08010982 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010982:	b510      	push	{r4, lr}
 8010984:	2104      	movs	r1, #4
 8010986:	4604      	mov	r4, r0
 8010988:	f009 fa1d 	bl	8019dc6 <_ZdlPvj>
 801098c:	4620      	mov	r0, r4
 801098e:	bd10      	pop	{r4, pc}

08010990 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010990:	b510      	push	{r4, lr}
 8010992:	2104      	movs	r1, #4
 8010994:	4604      	mov	r4, r0
 8010996:	f009 fa16 	bl	8019dc6 <_ZdlPvj>
 801099a:	4620      	mov	r0, r4
 801099c:	bd10      	pop	{r4, pc}

0801099e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801099e:	b510      	push	{r4, lr}
 80109a0:	2104      	movs	r1, #4
 80109a2:	4604      	mov	r4, r0
 80109a4:	f009 fa0f 	bl	8019dc6 <_ZdlPvj>
 80109a8:	4620      	mov	r0, r4
 80109aa:	bd10      	pop	{r4, pc}

080109ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80109ac:	b510      	push	{r4, lr}
 80109ae:	2104      	movs	r1, #4
 80109b0:	4604      	mov	r4, r0
 80109b2:	f009 fa08 	bl	8019dc6 <_ZdlPvj>
 80109b6:	4620      	mov	r0, r4
 80109b8:	bd10      	pop	{r4, pc}

080109ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80109ba:	b510      	push	{r4, lr}
 80109bc:	2104      	movs	r1, #4
 80109be:	4604      	mov	r4, r0
 80109c0:	f009 fa01 	bl	8019dc6 <_ZdlPvj>
 80109c4:	4620      	mov	r0, r4
 80109c6:	bd10      	pop	{r4, pc}

080109c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80109c8:	b510      	push	{r4, lr}
 80109ca:	2104      	movs	r1, #4
 80109cc:	4604      	mov	r4, r0
 80109ce:	f009 f9fa 	bl	8019dc6 <_ZdlPvj>
 80109d2:	4620      	mov	r0, r4
 80109d4:	bd10      	pop	{r4, pc}

080109d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80109d6:	b510      	push	{r4, lr}
 80109d8:	2104      	movs	r1, #4
 80109da:	4604      	mov	r4, r0
 80109dc:	f009 f9f3 	bl	8019dc6 <_ZdlPvj>
 80109e0:	4620      	mov	r0, r4
 80109e2:	bd10      	pop	{r4, pc}

080109e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80109e4:	b510      	push	{r4, lr}
 80109e6:	2104      	movs	r1, #4
 80109e8:	4604      	mov	r4, r0
 80109ea:	f009 f9ec 	bl	8019dc6 <_ZdlPvj>
 80109ee:	4620      	mov	r0, r4
 80109f0:	bd10      	pop	{r4, pc}

080109f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80109f2:	b510      	push	{r4, lr}
 80109f4:	2104      	movs	r1, #4
 80109f6:	4604      	mov	r4, r0
 80109f8:	f009 f9e5 	bl	8019dc6 <_ZdlPvj>
 80109fc:	4620      	mov	r0, r4
 80109fe:	bd10      	pop	{r4, pc}

08010a00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010a00:	b510      	push	{r4, lr}
 8010a02:	2104      	movs	r1, #4
 8010a04:	4604      	mov	r4, r0
 8010a06:	f009 f9de 	bl	8019dc6 <_ZdlPvj>
 8010a0a:	4620      	mov	r0, r4
 8010a0c:	bd10      	pop	{r4, pc}

08010a0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8010a0e:	b510      	push	{r4, lr}
 8010a10:	2104      	movs	r1, #4
 8010a12:	4604      	mov	r4, r0
 8010a14:	f009 f9d7 	bl	8019dc6 <_ZdlPvj>
 8010a18:	4620      	mov	r0, r4
 8010a1a:	bd10      	pop	{r4, pc}

08010a1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8010a1c:	b510      	push	{r4, lr}
 8010a1e:	2104      	movs	r1, #4
 8010a20:	4604      	mov	r4, r0
 8010a22:	f009 f9d0 	bl	8019dc6 <_ZdlPvj>
 8010a26:	4620      	mov	r0, r4
 8010a28:	bd10      	pop	{r4, pc}

08010a2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8010a2a:	b510      	push	{r4, lr}
 8010a2c:	2104      	movs	r1, #4
 8010a2e:	4604      	mov	r4, r0
 8010a30:	f009 f9c9 	bl	8019dc6 <_ZdlPvj>
 8010a34:	4620      	mov	r0, r4
 8010a36:	bd10      	pop	{r4, pc}

08010a38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8010a38:	b510      	push	{r4, lr}
 8010a3a:	2104      	movs	r1, #4
 8010a3c:	4604      	mov	r4, r0
 8010a3e:	f009 f9c2 	bl	8019dc6 <_ZdlPvj>
 8010a42:	4620      	mov	r0, r4
 8010a44:	bd10      	pop	{r4, pc}
	...

08010a48 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8010a48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010a4a:	4606      	mov	r6, r0
 8010a4c:	b087      	sub	sp, #28
 8010a4e:	460c      	mov	r4, r1
 8010a50:	4617      	mov	r7, r2
 8010a52:	461d      	mov	r5, r3
 8010a54:	b333      	cbz	r3, 8010aa4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8010a56:	4608      	mov	r0, r1
 8010a58:	f7f8 fac5 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a5c:	bb10      	cbnz	r0, 8010aa4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8010a5e:	6820      	ldr	r0, [r4, #0]
 8010a60:	6861      	ldr	r1, [r4, #4]
 8010a62:	4c1c      	ldr	r4, [pc, #112]	; (8010ad4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8010a64:	ab04      	add	r3, sp, #16
 8010a66:	c303      	stmia	r3!, {r0, r1}
 8010a68:	a804      	add	r0, sp, #16
 8010a6a:	f7fa fa6b 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010a6e:	6820      	ldr	r0, [r4, #0]
 8010a70:	6803      	ldr	r3, [r0, #0]
 8010a72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010a74:	4798      	blx	r3
 8010a76:	2dff      	cmp	r5, #255	; 0xff
 8010a78:	d016      	beq.n	8010aa8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8010a7a:	f010 0f08 	tst.w	r0, #8
 8010a7e:	6820      	ldr	r0, [r4, #0]
 8010a80:	d015      	beq.n	8010aae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8010a82:	2400      	movs	r4, #0
 8010a84:	6801      	ldr	r1, [r0, #0]
 8010a86:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010a8a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8010a8e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8010a92:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8010a96:	9401      	str	r4, [sp, #4]
 8010a98:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8010a9c:	9400      	str	r4, [sp, #0]
 8010a9e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8010aa0:	4639      	mov	r1, r7
 8010aa2:	47a0      	blx	r4
 8010aa4:	b007      	add	sp, #28
 8010aa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010aa8:	f010 0f02 	tst.w	r0, #2
 8010aac:	e7e7      	b.n	8010a7e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8010aae:	6803      	ldr	r3, [r0, #0]
 8010ab0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010ab2:	4798      	blx	r3
 8010ab4:	4b08      	ldr	r3, [pc, #32]	; (8010ad8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8010ab6:	881a      	ldrh	r2, [r3, #0]
 8010ab8:	6833      	ldr	r3, [r6, #0]
 8010aba:	e9cd 7500 	strd	r7, r5, [sp]
 8010abe:	4601      	mov	r1, r0
 8010ac0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8010ac2:	4630      	mov	r0, r6
 8010ac4:	ab04      	add	r3, sp, #16
 8010ac6:	47a8      	blx	r5
 8010ac8:	6820      	ldr	r0, [r4, #0]
 8010aca:	6803      	ldr	r3, [r0, #0]
 8010acc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ace:	4798      	blx	r3
 8010ad0:	e7e8      	b.n	8010aa4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8010ad2:	bf00      	nop
 8010ad4:	2000a498 	.word	0x2000a498
 8010ad8:	2000a492 	.word	0x2000a492

08010adc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8010adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ae0:	4690      	mov	r8, r2
 8010ae2:	4a8d      	ldr	r2, [pc, #564]	; (8010d18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>)
 8010ae4:	6812      	ldr	r2, [r2, #0]
 8010ae6:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8010aea:	b091      	sub	sp, #68	; 0x44
 8010aec:	2a02      	cmp	r2, #2
 8010aee:	4606      	mov	r6, r0
 8010af0:	460d      	mov	r5, r1
 8010af2:	461c      	mov	r4, r3
 8010af4:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
 8010af8:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8010afc:	d106      	bne.n	8010b0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30>
 8010afe:	4b87      	ldr	r3, [pc, #540]	; (8010d1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x240>)
 8010b00:	4a87      	ldr	r2, [pc, #540]	; (8010d20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 8010b02:	f240 316b 	movw	r1, #875	; 0x36b
 8010b06:	4887      	ldr	r0, [pc, #540]	; (8010d24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 8010b08:	f009 f98c 	bl	8019e24 <__assert_func>
 8010b0c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8010b0e:	b923      	cbnz	r3, 8010b1a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e>
 8010b10:	4b85      	ldr	r3, [pc, #532]	; (8010d28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 8010b12:	4a83      	ldr	r2, [pc, #524]	; (8010d20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 8010b14:	f44f 715b 	mov.w	r1, #876	; 0x36c
 8010b18:	e7f5      	b.n	8010b06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2a>
 8010b1a:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010b1e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8010b22:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8010b26:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 8010b2a:	4621      	mov	r1, r4
 8010b2c:	4648      	mov	r0, r9
 8010b2e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8010b32:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8010b36:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8010b3a:	f7f8 fa11 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 8010b3e:	4641      	mov	r1, r8
 8010b40:	4648      	mov	r0, r9
 8010b42:	f7f8 fa0d 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 8010b46:	4a79      	ldr	r2, [pc, #484]	; (8010d2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 8010b48:	f8b2 c000 	ldrh.w	ip, [r2]
 8010b4c:	4a78      	ldr	r2, [pc, #480]	; (8010d30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 8010b4e:	8810      	ldrh	r0, [r2, #0]
 8010b50:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8010b54:	2a00      	cmp	r2, #0
 8010b56:	fa0f f18c 	sxth.w	r1, ip
 8010b5a:	fa0f fe80 	sxth.w	lr, r0
 8010b5e:	da07      	bge.n	8010b70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x94>
 8010b60:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 8010b64:	4442      	add	r2, r8
 8010b66:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8010b6a:	2200      	movs	r2, #0
 8010b6c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8010b70:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8010b74:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8010b78:	1a89      	subs	r1, r1, r2
 8010b7a:	4588      	cmp	r8, r1
 8010b7c:	bfc4      	itt	gt
 8010b7e:	ebac 0102 	subgt.w	r1, ip, r2
 8010b82:	f8ad 102c 	strhgt.w	r1, [sp, #44]	; 0x2c
 8010b86:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010b8a:	2900      	cmp	r1, #0
 8010b8c:	da07      	bge.n	8010b9e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xc2>
 8010b8e:	f8bd 802e 	ldrh.w	r8, [sp, #46]	; 0x2e
 8010b92:	4441      	add	r1, r8
 8010b94:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010b98:	2100      	movs	r1, #0
 8010b9a:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8010b9e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8010ba2:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	; 0x2e
 8010ba6:	ebae 0e0a 	sub.w	lr, lr, sl
 8010baa:	4571      	cmp	r1, lr
 8010bac:	bfc4      	itt	gt
 8010bae:	eba0 010a 	subgt.w	r1, r0, sl
 8010bb2:	f8ad 102e 	strhgt.w	r1, [sp, #46]	; 0x2e
 8010bb6:	495f      	ldr	r1, [pc, #380]	; (8010d34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 8010bb8:	7809      	ldrb	r1, [r1, #0]
 8010bba:	b9a9      	cbnz	r1, 8010be8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x10c>
 8010bbc:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8010bc0:	45e0      	cmp	r8, ip
 8010bc2:	bf14      	ite	ne
 8010bc4:	2300      	movne	r3, #0
 8010bc6:	2301      	moveq	r3, #1
 8010bc8:	4648      	mov	r0, r9
 8010bca:	9202      	str	r2, [sp, #8]
 8010bcc:	9305      	str	r3, [sp, #20]
 8010bce:	f7f8 fa0a 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010bd2:	9a02      	ldr	r2, [sp, #8]
 8010bd4:	b160      	cbz	r0, 8010bf0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x114>
 8010bd6:	2300      	movs	r3, #0
 8010bd8:	8033      	strh	r3, [r6, #0]
 8010bda:	8073      	strh	r3, [r6, #2]
 8010bdc:	80b3      	strh	r3, [r6, #4]
 8010bde:	4630      	mov	r0, r6
 8010be0:	80f3      	strh	r3, [r6, #6]
 8010be2:	b011      	add	sp, #68	; 0x44
 8010be4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010be8:	f9bd 802e 	ldrsh.w	r8, [sp, #46]	; 0x2e
 8010bec:	4580      	cmp	r8, r0
 8010bee:	e7e8      	b.n	8010bc2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe6>
 8010bf0:	8821      	ldrh	r1, [r4, #0]
 8010bf2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8010bf6:	9304      	str	r3, [sp, #16]
 8010bf8:	1a52      	subs	r2, r2, r1
 8010bfa:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8010bfe:	9306      	str	r3, [sp, #24]
 8010c00:	b213      	sxth	r3, r2
 8010c02:	9302      	str	r3, [sp, #8]
 8010c04:	8863      	ldrh	r3, [r4, #2]
 8010c06:	900e      	str	r0, [sp, #56]	; 0x38
 8010c08:	ebaa 0a03 	sub.w	sl, sl, r3
 8010c0c:	fa0f f38a 	sxth.w	r3, sl
 8010c10:	9303      	str	r3, [sp, #12]
 8010c12:	9b02      	ldr	r3, [sp, #8]
 8010c14:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8010c18:	9b03      	ldr	r3, [sp, #12]
 8010c1a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8010c1e:	9b04      	ldr	r3, [sp, #16]
 8010c20:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8010c24:	a90e      	add	r1, sp, #56	; 0x38
 8010c26:	9b06      	ldr	r3, [sp, #24]
 8010c28:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010c2c:	a80c      	add	r0, sp, #48	; 0x30
 8010c2e:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8010c32:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 8010c36:	f7fa f9ad 	bl	800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010c3a:	4648      	mov	r0, r9
 8010c3c:	f7fa f982 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010c40:	a80e      	add	r0, sp, #56	; 0x38
 8010c42:	f7fa f97f 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010c46:	4b3c      	ldr	r3, [pc, #240]	; (8010d38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 8010c48:	f9bd 703c 	ldrsh.w	r7, [sp, #60]	; 0x3c
 8010c4c:	881b      	ldrh	r3, [r3, #0]
 8010c4e:	9307      	str	r3, [sp, #28]
 8010c50:	682b      	ldr	r3, [r5, #0]
 8010c52:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8010d18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 8010c56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010c58:	4628      	mov	r0, r5
 8010c5a:	4798      	blx	r3
 8010c5c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8010c60:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8010c64:	4682      	mov	sl, r0
 8010c66:	fb17 2303 	smlabb	r3, r7, r3, r2
 8010c6a:	f8d8 0000 	ldr.w	r0, [r8]
 8010c6e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010c70:	eb02 0443 	add.w	r4, r2, r3, lsl #1
 8010c74:	6803      	ldr	r3, [r0, #0]
 8010c76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010c78:	4798      	blx	r3
 8010c7a:	9009      	str	r0, [sp, #36]	; 0x24
 8010c7c:	f8d8 0000 	ldr.w	r0, [r8]
 8010c80:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8010c84:	6802      	ldr	r2, [r0, #0]
 8010c86:	9308      	str	r3, [sp, #32]
 8010c88:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8010c8a:	f9bd 502a 	ldrsh.w	r5, [sp, #42]	; 0x2a
 8010c8e:	4790      	blx	r2
 8010c90:	f010 0f01 	tst.w	r0, #1
 8010c94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010c96:	d011      	beq.n	8010cbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 8010c98:	f8d8 0000 	ldr.w	r0, [r8]
 8010c9c:	6803      	ldr	r3, [r0, #0]
 8010c9e:	f8cd b000 	str.w	fp, [sp]
 8010ca2:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8010ca4:	e899 0006 	ldmia.w	r9, {r1, r2}
 8010ca8:	4623      	mov	r3, r4
 8010caa:	47a8      	blx	r5
 8010cac:	9b02      	ldr	r3, [sp, #8]
 8010cae:	8033      	strh	r3, [r6, #0]
 8010cb0:	9b03      	ldr	r3, [sp, #12]
 8010cb2:	8073      	strh	r3, [r6, #2]
 8010cb4:	9b04      	ldr	r3, [sp, #16]
 8010cb6:	80b3      	strh	r3, [r6, #4]
 8010cb8:	9b06      	ldr	r3, [sp, #24]
 8010cba:	e790      	b.n	8010bde <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x102>
 8010cbc:	9a08      	ldr	r2, [sp, #32]
 8010cbe:	fb0a f505 	mul.w	r5, sl, r5
 8010cc2:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 8010cc6:	9a05      	ldr	r2, [sp, #20]
 8010cc8:	441d      	add	r5, r3
 8010cca:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8010cce:	b162      	cbz	r2, 8010cea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8010cd0:	9a07      	ldr	r2, [sp, #28]
 8010cd2:	4297      	cmp	r7, r2
 8010cd4:	d109      	bne.n	8010cea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8010cd6:	f8d8 0000 	ldr.w	r0, [r8]
 8010cda:	6802      	ldr	r2, [r0, #0]
 8010cdc:	fb03 f30a 	mul.w	r3, r3, sl
 8010ce0:	6b57      	ldr	r7, [r2, #52]	; 0x34
 8010ce2:	4621      	mov	r1, r4
 8010ce4:	462a      	mov	r2, r5
 8010ce6:	47b8      	blx	r7
 8010ce8:	e7e0      	b.n	8010cac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8010cea:	437b      	muls	r3, r7
 8010cec:	f8df b028 	ldr.w	fp, [pc, #40]	; 8010d18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 8010cf0:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 8010cf4:	007f      	lsls	r7, r7, #1
 8010cf6:	4544      	cmp	r4, r8
 8010cf8:	d2d8      	bcs.n	8010cac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8010cfa:	f8db 0000 	ldr.w	r0, [fp]
 8010cfe:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8010d02:	6802      	ldr	r2, [r0, #0]
 8010d04:	4621      	mov	r1, r4
 8010d06:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 8010d0a:	005b      	lsls	r3, r3, #1
 8010d0c:	462a      	mov	r2, r5
 8010d0e:	47c8      	blx	r9
 8010d10:	4455      	add	r5, sl
 8010d12:	443c      	add	r4, r7
 8010d14:	e7ef      	b.n	8010cf6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 8010d16:	bf00      	nop
 8010d18:	2000a498 	.word	0x2000a498
 8010d1c:	0801d80e 	.word	0x0801d80e
 8010d20:	0801e078 	.word	0x0801e078
 8010d24:	0801d8c0 	.word	0x0801d8c0
 8010d28:	0801d7c0 	.word	0x0801d7c0
 8010d2c:	2000a48c 	.word	0x2000a48c
 8010d30:	2000a48e 	.word	0x2000a48e
 8010d34:	2000a490 	.word	0x2000a490
 8010d38:	2000a492 	.word	0x2000a492

08010d3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8010d3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010d40:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8010d44:	9e08      	ldr	r6, [sp, #32]
 8010d46:	4688      	mov	r8, r1
 8010d48:	4614      	mov	r4, r2
 8010d4a:	461d      	mov	r5, r3
 8010d4c:	2f00      	cmp	r7, #0
 8010d4e:	f000 80b3 	beq.w	8010eb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8010d52:	4618      	mov	r0, r3
 8010d54:	f7f8 f947 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d58:	2800      	cmp	r0, #0
 8010d5a:	f040 80ad 	bne.w	8010eb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8010d5e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8010d62:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8010d66:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8010d6a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8010d6e:	fb04 1303 	mla	r3, r4, r3, r1
 8010d72:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8010d76:	4365      	muls	r5, r4
 8010d78:	2fff      	cmp	r7, #255	; 0xff
 8010d7a:	eba4 0200 	sub.w	r2, r4, r0
 8010d7e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8010d82:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8010d86:	d04b      	beq.n	8010e20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8010d88:	b2bc      	uxth	r4, r7
 8010d8a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8010d8e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8010d92:	fa5f f788 	uxtb.w	r7, r8
 8010d96:	b2f3      	uxtb	r3, r6
 8010d98:	0040      	lsls	r0, r0, #1
 8010d9a:	fb0e fe04 	mul.w	lr, lr, r4
 8010d9e:	4367      	muls	r7, r4
 8010da0:	4363      	muls	r3, r4
 8010da2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8010da6:	fa1f fc8c 	uxth.w	ip, ip
 8010daa:	42a9      	cmp	r1, r5
 8010dac:	f080 8084 	bcs.w	8010eb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8010db0:	eb01 0900 	add.w	r9, r1, r0
 8010db4:	4549      	cmp	r1, r9
 8010db6:	d231      	bcs.n	8010e1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8010db8:	880a      	ldrh	r2, [r1, #0]
 8010dba:	1214      	asrs	r4, r2, #8
 8010dbc:	10d6      	asrs	r6, r2, #3
 8010dbe:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8010dc2:	00d2      	lsls	r2, r2, #3
 8010dc4:	b2d2      	uxtb	r2, r2
 8010dc6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8010dca:	fb14 f40c 	smulbb	r4, r4, ip
 8010dce:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8010dd2:	4474      	add	r4, lr
 8010dd4:	fb12 f20c 	smulbb	r2, r2, ip
 8010dd8:	b2a4      	uxth	r4, r4
 8010dda:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010dde:	441a      	add	r2, r3
 8010de0:	b292      	uxth	r2, r2
 8010de2:	f104 0a01 	add.w	sl, r4, #1
 8010de6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8010dea:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8010dee:	fb16 f60c 	smulbb	r6, r6, ip
 8010df2:	f102 0a01 	add.w	sl, r2, #1
 8010df6:	443e      	add	r6, r7
 8010df8:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8010dfc:	b2b6      	uxth	r6, r6
 8010dfe:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8010e02:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8010e06:	4322      	orrs	r2, r4
 8010e08:	1c74      	adds	r4, r6, #1
 8010e0a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8010e0e:	0976      	lsrs	r6, r6, #5
 8010e10:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010e14:	4332      	orrs	r2, r6
 8010e16:	f821 2b02 	strh.w	r2, [r1], #2
 8010e1a:	e7cb      	b.n	8010db4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8010e1c:	4441      	add	r1, r8
 8010e1e:	e7c4      	b.n	8010daa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8010e20:	4f26      	ldr	r7, [pc, #152]	; (8010ebc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8010e22:	0973      	lsrs	r3, r6, #5
 8010e24:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8010e28:	ea08 0707 	and.w	r7, r8, r7
 8010e2c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8010e30:	433b      	orrs	r3, r7
 8010e32:	4333      	orrs	r3, r6
 8010e34:	07e6      	lsls	r6, r4, #31
 8010e36:	b29b      	uxth	r3, r3
 8010e38:	d50b      	bpl.n	8010e52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8010e3a:	0040      	lsls	r0, r0, #1
 8010e3c:	0052      	lsls	r2, r2, #1
 8010e3e:	42a9      	cmp	r1, r5
 8010e40:	d23a      	bcs.n	8010eb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8010e42:	180c      	adds	r4, r1, r0
 8010e44:	42a1      	cmp	r1, r4
 8010e46:	d202      	bcs.n	8010e4e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8010e48:	f821 3b02 	strh.w	r3, [r1], #2
 8010e4c:	e7fa      	b.n	8010e44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8010e4e:	4411      	add	r1, r2
 8010e50:	e7f5      	b.n	8010e3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8010e52:	078f      	lsls	r7, r1, #30
 8010e54:	d008      	beq.n	8010e68 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8010e56:	0066      	lsls	r6, r4, #1
 8010e58:	460a      	mov	r2, r1
 8010e5a:	42aa      	cmp	r2, r5
 8010e5c:	d202      	bcs.n	8010e64 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8010e5e:	8013      	strh	r3, [r2, #0]
 8010e60:	4432      	add	r2, r6
 8010e62:	e7fa      	b.n	8010e5a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8010e64:	3102      	adds	r1, #2
 8010e66:	3801      	subs	r0, #1
 8010e68:	07c6      	lsls	r6, r0, #31
 8010e6a:	d50b      	bpl.n	8010e84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8010e6c:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8010e70:	3a01      	subs	r2, #1
 8010e72:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8010e76:	0066      	lsls	r6, r4, #1
 8010e78:	42aa      	cmp	r2, r5
 8010e7a:	d202      	bcs.n	8010e82 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8010e7c:	8013      	strh	r3, [r2, #0]
 8010e7e:	4432      	add	r2, r6
 8010e80:	e7fa      	b.n	8010e78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8010e82:	3801      	subs	r0, #1
 8010e84:	b1c0      	cbz	r0, 8010eb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8010e86:	1040      	asrs	r0, r0, #1
 8010e88:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8010e8c:	0080      	lsls	r0, r0, #2
 8010e8e:	0064      	lsls	r4, r4, #1
 8010e90:	42a9      	cmp	r1, r5
 8010e92:	d211      	bcs.n	8010eb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8010e94:	078a      	lsls	r2, r1, #30
 8010e96:	d006      	beq.n	8010ea6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8010e98:	4b09      	ldr	r3, [pc, #36]	; (8010ec0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8010e9a:	4a0a      	ldr	r2, [pc, #40]	; (8010ec4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8010e9c:	480a      	ldr	r0, [pc, #40]	; (8010ec8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8010e9e:	f240 4137 	movw	r1, #1079	; 0x437
 8010ea2:	f008 ffbf 	bl	8019e24 <__assert_func>
 8010ea6:	180e      	adds	r6, r1, r0
 8010ea8:	460a      	mov	r2, r1
 8010eaa:	42b2      	cmp	r2, r6
 8010eac:	d202      	bcs.n	8010eb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8010eae:	f842 3b04 	str.w	r3, [r2], #4
 8010eb2:	e7fa      	b.n	8010eaa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8010eb4:	4421      	add	r1, r4
 8010eb6:	e7eb      	b.n	8010e90 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8010eb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010ebc:	00fff800 	.word	0x00fff800
 8010ec0:	0801d671 	.word	0x0801d671
 8010ec4:	0801dcc4 	.word	0x0801dcc4
 8010ec8:	0801d8c0 	.word	0x0801d8c0

08010ecc <_ZN8touchgfx8LCD16bppC1Ev>:
 8010ecc:	2200      	movs	r2, #0
 8010ece:	4910      	ldr	r1, [pc, #64]	; (8010f10 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8010ed0:	6042      	str	r2, [r0, #4]
 8010ed2:	6001      	str	r1, [r0, #0]
 8010ed4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8010ed8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8010edc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8010ee0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8010ee4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8010ee8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8010eec:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8010ef0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8010ef4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8010ef8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8010efc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8010f00:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8010f04:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8010f08:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8010f0c:	4770      	bx	lr
 8010f0e:	bf00      	nop
 8010f10:	0801dc74 	.word	0x0801dc74

08010f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8010f14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f18:	460d      	mov	r5, r1
 8010f1a:	b08d      	sub	sp, #52	; 0x34
 8010f1c:	4604      	mov	r4, r0
 8010f1e:	6808      	ldr	r0, [r1, #0]
 8010f20:	6849      	ldr	r1, [r1, #4]
 8010f22:	4699      	mov	r9, r3
 8010f24:	ab08      	add	r3, sp, #32
 8010f26:	c303      	stmia	r3!, {r0, r1}
 8010f28:	6810      	ldr	r0, [r2, #0]
 8010f2a:	6851      	ldr	r1, [r2, #4]
 8010f2c:	ab0a      	add	r3, sp, #40	; 0x28
 8010f2e:	c303      	stmia	r3!, {r0, r1}
 8010f30:	a808      	add	r0, sp, #32
 8010f32:	f7fa f807 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010f36:	4629      	mov	r1, r5
 8010f38:	a80a      	add	r0, sp, #40	; 0x28
 8010f3a:	f7fa f82b 	bl	800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010f3e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8010f42:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8010f46:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8010f4a:	4d63      	ldr	r5, [pc, #396]	; (80110d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8010f4c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8010f50:	6828      	ldr	r0, [r5, #0]
 8010f52:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8010f56:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010f5a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8010f5e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8010f62:	440a      	add	r2, r1
 8010f64:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8010f68:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010f6c:	4413      	add	r3, r2
 8010f6e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010f72:	6803      	ldr	r3, [r0, #0]
 8010f74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010f76:	4798      	blx	r3
 8010f78:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010f7c:	d119      	bne.n	8010fb2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8010f7e:	f010 0f20 	tst.w	r0, #32
 8010f82:	6828      	ldr	r0, [r5, #0]
 8010f84:	d018      	beq.n	8010fb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8010f86:	2500      	movs	r5, #0
 8010f88:	6801      	ldr	r1, [r0, #0]
 8010f8a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8010f8e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8010f92:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8010f96:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8010f9a:	9502      	str	r5, [sp, #8]
 8010f9c:	b2b6      	uxth	r6, r6
 8010f9e:	fa1f f588 	uxth.w	r5, r8
 8010fa2:	9601      	str	r6, [sp, #4]
 8010fa4:	9500      	str	r5, [sp, #0]
 8010fa6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8010fa8:	4621      	mov	r1, r4
 8010faa:	47a8      	blx	r5
 8010fac:	b00d      	add	sp, #52	; 0x34
 8010fae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fb2:	f010 0f40 	tst.w	r0, #64	; 0x40
 8010fb6:	e7e4      	b.n	8010f82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8010fb8:	6803      	ldr	r3, [r0, #0]
 8010fba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010fbc:	4798      	blx	r3
 8010fbe:	4947      	ldr	r1, [pc, #284]	; (80110dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8010fc0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8010fc4:	880b      	ldrh	r3, [r1, #0]
 8010fc6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8010fca:	fb03 5202 	mla	r2, r3, r2, r5
 8010fce:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8010fd2:	4373      	muls	r3, r6
 8010fd4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010fd8:	9307      	str	r3, [sp, #28]
 8010fda:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8010fde:	9306      	str	r3, [sp, #24]
 8010fe0:	468a      	mov	sl, r1
 8010fe2:	9b07      	ldr	r3, [sp, #28]
 8010fe4:	4298      	cmp	r0, r3
 8010fe6:	d270      	bcs.n	80110ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8010fe8:	9b06      	ldr	r3, [sp, #24]
 8010fea:	4621      	mov	r1, r4
 8010fec:	eb00 0b03 	add.w	fp, r0, r3
 8010ff0:	4558      	cmp	r0, fp
 8010ff2:	d25d      	bcs.n	80110b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8010ff4:	f851 4b04 	ldr.w	r4, [r1], #4
 8010ff8:	0e23      	lsrs	r3, r4, #24
 8010ffa:	d014      	beq.n	8011026 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8010ffc:	2bff      	cmp	r3, #255	; 0xff
 8010ffe:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8011002:	d112      	bne.n	801102a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8011004:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011008:	d10f      	bne.n	801102a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801100a:	0963      	lsrs	r3, r4, #5
 801100c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8011010:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011014:	f02c 0c07 	bic.w	ip, ip, #7
 8011018:	ea43 0c0c 	orr.w	ip, r3, ip
 801101c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011020:	ea4c 0404 	orr.w	r4, ip, r4
 8011024:	8004      	strh	r4, [r0, #0]
 8011026:	3002      	adds	r0, #2
 8011028:	e7e2      	b.n	8010ff0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801102a:	fb09 f303 	mul.w	r3, r9, r3
 801102e:	8807      	ldrh	r7, [r0, #0]
 8011030:	1c5a      	adds	r2, r3, #1
 8011032:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8011036:	1212      	asrs	r2, r2, #8
 8011038:	123e      	asrs	r6, r7, #8
 801103a:	b293      	uxth	r3, r2
 801103c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8011040:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011044:	43d2      	mvns	r2, r2
 8011046:	b2d2      	uxtb	r2, r2
 8011048:	10fd      	asrs	r5, r7, #3
 801104a:	fb1e fe03 	smulbb	lr, lr, r3
 801104e:	00ff      	lsls	r7, r7, #3
 8011050:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8011054:	fb06 e602 	mla	r6, r6, r2, lr
 8011058:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801105c:	b2ff      	uxtb	r7, r7
 801105e:	fa5f fc8c 	uxtb.w	ip, ip
 8011062:	b2e4      	uxtb	r4, r4
 8011064:	b2b6      	uxth	r6, r6
 8011066:	fb1c fc03 	smulbb	ip, ip, r3
 801106a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801106e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8011072:	fb14 f403 	smulbb	r4, r4, r3
 8011076:	fb05 c502 	mla	r5, r5, r2, ip
 801107a:	f106 0e01 	add.w	lr, r6, #1
 801107e:	fb07 4702 	mla	r7, r7, r2, r4
 8011082:	b2ad      	uxth	r5, r5
 8011084:	b2bf      	uxth	r7, r7
 8011086:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801108a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801108e:	f105 0c01 	add.w	ip, r5, #1
 8011092:	1c7e      	adds	r6, r7, #1
 8011094:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011098:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801109c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80110a0:	096d      	lsrs	r5, r5, #5
 80110a2:	ea46 060e 	orr.w	r6, r6, lr
 80110a6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80110aa:	432e      	orrs	r6, r5
 80110ac:	8006      	strh	r6, [r0, #0]
 80110ae:	e7ba      	b.n	8011026 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80110b0:	f8ba 3000 	ldrh.w	r3, [sl]
 80110b4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80110b8:	eba3 0308 	sub.w	r3, r3, r8
 80110bc:	eba4 0408 	sub.w	r4, r4, r8
 80110c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80110c4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80110c8:	e78b      	b.n	8010fe2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80110ca:	4b03      	ldr	r3, [pc, #12]	; (80110d8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80110cc:	6818      	ldr	r0, [r3, #0]
 80110ce:	6803      	ldr	r3, [r0, #0]
 80110d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80110d2:	4798      	blx	r3
 80110d4:	e76a      	b.n	8010fac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80110d6:	bf00      	nop
 80110d8:	2000a498 	.word	0x2000a498
 80110dc:	2000a492 	.word	0x2000a492

080110e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80110e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80110e4:	460c      	mov	r4, r1
 80110e6:	b085      	sub	sp, #20
 80110e8:	6810      	ldr	r0, [r2, #0]
 80110ea:	6851      	ldr	r1, [r2, #4]
 80110ec:	466d      	mov	r5, sp
 80110ee:	c503      	stmia	r5!, {r0, r1}
 80110f0:	6818      	ldr	r0, [r3, #0]
 80110f2:	6859      	ldr	r1, [r3, #4]
 80110f4:	4616      	mov	r6, r2
 80110f6:	c503      	stmia	r5!, {r0, r1}
 80110f8:	4668      	mov	r0, sp
 80110fa:	f7f9 ff23 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80110fe:	4631      	mov	r1, r6
 8011100:	a802      	add	r0, sp, #8
 8011102:	f7f9 ff47 	bl	800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011106:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801110a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801110e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8011112:	4d28      	ldr	r5, [pc, #160]	; (80111b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8011114:	4e28      	ldr	r6, [pc, #160]	; (80111b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8011116:	6828      	ldr	r0, [r5, #0]
 8011118:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801111c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8011120:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011124:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8011128:	f8bd 1000 	ldrh.w	r1, [sp]
 801112c:	440a      	add	r2, r1
 801112e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8011132:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8011136:	4413      	add	r3, r2
 8011138:	f8ad 300a 	strh.w	r3, [sp, #10]
 801113c:	6803      	ldr	r3, [r0, #0]
 801113e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011140:	4798      	blx	r3
 8011142:	8833      	ldrh	r3, [r6, #0]
 8011144:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8011148:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801114c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 80111bc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8011150:	fb03 1202 	mla	r2, r3, r2, r1
 8011154:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8011158:	fb08 f303 	mul.w	r3, r8, r3
 801115c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011160:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8011164:	4298      	cmp	r0, r3
 8011166:	d21d      	bcs.n	80111a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8011168:	eb00 080c 	add.w	r8, r0, ip
 801116c:	4540      	cmp	r0, r8
 801116e:	d20f      	bcs.n	8011190 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8011170:	f854 1b04 	ldr.w	r1, [r4], #4
 8011174:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8011178:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801117c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011180:	ea42 0209 	orr.w	r2, r2, r9
 8011184:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011188:	430a      	orrs	r2, r1
 801118a:	f820 2b02 	strh.w	r2, [r0], #2
 801118e:	e7ed      	b.n	801116c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8011190:	8832      	ldrh	r2, [r6, #0]
 8011192:	1bd2      	subs	r2, r2, r7
 8011194:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8011198:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801119c:	1bd2      	subs	r2, r2, r7
 801119e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80111a2:	e7df      	b.n	8011164 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80111a4:	6828      	ldr	r0, [r5, #0]
 80111a6:	6803      	ldr	r3, [r0, #0]
 80111a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111aa:	4798      	blx	r3
 80111ac:	b005      	add	sp, #20
 80111ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80111b2:	bf00      	nop
 80111b4:	2000a498 	.word	0x2000a498
 80111b8:	2000a492 	.word	0x2000a492
 80111bc:	fffff800 	.word	0xfffff800

080111c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80111c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80111c4:	460e      	mov	r6, r1
 80111c6:	b08e      	sub	sp, #56	; 0x38
 80111c8:	4604      	mov	r4, r0
 80111ca:	6808      	ldr	r0, [r1, #0]
 80111cc:	6849      	ldr	r1, [r1, #4]
 80111ce:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80113a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80111d2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 80113ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80111d6:	461d      	mov	r5, r3
 80111d8:	ab0a      	add	r3, sp, #40	; 0x28
 80111da:	c303      	stmia	r3!, {r0, r1}
 80111dc:	6810      	ldr	r0, [r2, #0]
 80111de:	6851      	ldr	r1, [r2, #4]
 80111e0:	ab0c      	add	r3, sp, #48	; 0x30
 80111e2:	c303      	stmia	r3!, {r0, r1}
 80111e4:	a80a      	add	r0, sp, #40	; 0x28
 80111e6:	f7f9 fead 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80111ea:	4631      	mov	r1, r6
 80111ec:	a80c      	add	r0, sp, #48	; 0x30
 80111ee:	f7f9 fed1 	bl	800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80111f2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80111f6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80111fa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80111fe:	f8d8 0000 	ldr.w	r0, [r8]
 8011202:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8011206:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801120a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801120e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8011212:	440c      	add	r4, r1
 8011214:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8011218:	440a      	add	r2, r1
 801121a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801121e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8011222:	4413      	add	r3, r2
 8011224:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011228:	6803      	ldr	r3, [r0, #0]
 801122a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801122c:	4798      	blx	r3
 801122e:	2dff      	cmp	r5, #255	; 0xff
 8011230:	d124      	bne.n	801127c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8011232:	f010 0f01 	tst.w	r0, #1
 8011236:	f8d8 0000 	ldr.w	r0, [r8]
 801123a:	d022      	beq.n	8011282 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801123c:	2100      	movs	r1, #0
 801123e:	f8d0 c000 	ldr.w	ip, [r0]
 8011242:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8011246:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801124a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801124e:	f04f 0e01 	mov.w	lr, #1
 8011252:	f8cd e018 	str.w	lr, [sp, #24]
 8011256:	f8b9 e000 	ldrh.w	lr, [r9]
 801125a:	9503      	str	r5, [sp, #12]
 801125c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8011260:	b2b6      	uxth	r6, r6
 8011262:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011266:	9102      	str	r1, [sp, #8]
 8011268:	b2bf      	uxth	r7, r7
 801126a:	9601      	str	r6, [sp, #4]
 801126c:	9700      	str	r7, [sp, #0]
 801126e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8011272:	4621      	mov	r1, r4
 8011274:	47a8      	blx	r5
 8011276:	b00e      	add	sp, #56	; 0x38
 8011278:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801127c:	f010 0f04 	tst.w	r0, #4
 8011280:	e7d9      	b.n	8011236 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8011282:	6803      	ldr	r3, [r0, #0]
 8011284:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011286:	4798      	blx	r3
 8011288:	f8b9 3000 	ldrh.w	r3, [r9]
 801128c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8011290:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8011294:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8011298:	fb03 1202 	mla	r2, r3, r2, r1
 801129c:	ebac 0c07 	sub.w	ip, ip, r7
 80112a0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80112a4:	435e      	muls	r6, r3
 80112a6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80112aa:	2dff      	cmp	r5, #255	; 0xff
 80112ac:	eba3 0707 	sub.w	r7, r3, r7
 80112b0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80112b4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80112b8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80112bc:	d049      	beq.n	8011352 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80112be:	43eb      	mvns	r3, r5
 80112c0:	fa1f f985 	uxth.w	r9, r5
 80112c4:	b2db      	uxtb	r3, r3
 80112c6:	42b0      	cmp	r0, r6
 80112c8:	d266      	bcs.n	8011398 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80112ca:	eb00 0a0e 	add.w	sl, r0, lr
 80112ce:	4550      	cmp	r0, sl
 80112d0:	4621      	mov	r1, r4
 80112d2:	f104 0403 	add.w	r4, r4, #3
 80112d6:	d25b      	bcs.n	8011390 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80112d8:	8802      	ldrh	r2, [r0, #0]
 80112da:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80112de:	ea4f 2822 	mov.w	r8, r2, asr #8
 80112e2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80112e6:	fb11 f109 	smulbb	r1, r1, r9
 80112ea:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80112ee:	10d5      	asrs	r5, r2, #3
 80112f0:	fb08 1803 	mla	r8, r8, r3, r1
 80112f4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80112f8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80112fc:	fb11 f109 	smulbb	r1, r1, r9
 8011300:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8011304:	fb05 1503 	mla	r5, r5, r3, r1
 8011308:	00d2      	lsls	r2, r2, #3
 801130a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801130e:	b2d2      	uxtb	r2, r2
 8011310:	fb11 f109 	smulbb	r1, r1, r9
 8011314:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8011318:	fa1f f888 	uxth.w	r8, r8
 801131c:	fb02 1203 	mla	r2, r2, r3, r1
 8011320:	b292      	uxth	r2, r2
 8011322:	f108 0101 	add.w	r1, r8, #1
 8011326:	b2ad      	uxth	r5, r5
 8011328:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801132c:	1c51      	adds	r1, r2, #1
 801132e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8011332:	1c69      	adds	r1, r5, #1
 8011334:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8011338:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801133c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011340:	096d      	lsrs	r5, r5, #5
 8011342:	ea42 0208 	orr.w	r2, r2, r8
 8011346:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801134a:	432a      	orrs	r2, r5
 801134c:	f820 2b02 	strh.w	r2, [r0], #2
 8011350:	e7bd      	b.n	80112ce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8011352:	4a14      	ldr	r2, [pc, #80]	; (80113a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8011354:	42b0      	cmp	r0, r6
 8011356:	d21f      	bcs.n	8011398 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8011358:	eb00 050e 	add.w	r5, r0, lr
 801135c:	42a8      	cmp	r0, r5
 801135e:	4621      	mov	r1, r4
 8011360:	f104 0403 	add.w	r4, r4, #3
 8011364:	d210      	bcs.n	8011388 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8011366:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801136a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801136e:	00db      	lsls	r3, r3, #3
 8011370:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8011374:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011378:	430b      	orrs	r3, r1
 801137a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801137e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8011382:	f820 3b02 	strh.w	r3, [r0], #2
 8011386:	e7e9      	b.n	801135c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8011388:	4438      	add	r0, r7
 801138a:	eb01 040c 	add.w	r4, r1, ip
 801138e:	e7e1      	b.n	8011354 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8011390:	4438      	add	r0, r7
 8011392:	eb01 040c 	add.w	r4, r1, ip
 8011396:	e796      	b.n	80112c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8011398:	4b03      	ldr	r3, [pc, #12]	; (80113a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801139a:	6818      	ldr	r0, [r3, #0]
 801139c:	6803      	ldr	r3, [r0, #0]
 801139e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80113a0:	4798      	blx	r3
 80113a2:	e768      	b.n	8011276 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80113a4:	fffff800 	.word	0xfffff800
 80113a8:	2000a498 	.word	0x2000a498
 80113ac:	2000a492 	.word	0x2000a492

080113b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80113b0:	b570      	push	{r4, r5, r6, lr}
 80113b2:	9c04      	ldr	r4, [sp, #16]
 80113b4:	f89d 6018 	ldrb.w	r6, [sp, #24]
 80113b8:	4605      	mov	r5, r0
 80113ba:	4608      	mov	r0, r1
 80113bc:	4619      	mov	r1, r3
 80113be:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80113c2:	2a0d      	cmp	r2, #13
 80113c4:	d825      	bhi.n	8011412 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 80113c6:	e8df f002 	tbb	[pc, r2]
 80113ca:	1807      	.short	0x1807
 80113cc:	1d1d1d13 	.word	0x1d1d1d13
 80113d0:	1d1d1d1d 	.word	0x1d1d1d1d
 80113d4:	1d1d1d1d 	.word	0x1d1d1d1d
 80113d8:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80113dc:	682a      	ldr	r2, [r5, #0]
 80113de:	68d6      	ldr	r6, [r2, #12]
 80113e0:	4623      	mov	r3, r4
 80113e2:	460a      	mov	r2, r1
 80113e4:	46b4      	mov	ip, r6
 80113e6:	4601      	mov	r1, r0
 80113e8:	4628      	mov	r0, r5
 80113ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113ee:	4760      	bx	ip
 80113f0:	4622      	mov	r2, r4
 80113f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113f6:	f7ff bd8d 	b.w	8010f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80113fa:	4622      	mov	r2, r4
 80113fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011400:	f7ff bede 	b.w	80111c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8011404:	4b03      	ldr	r3, [pc, #12]	; (8011414 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 8011406:	4a04      	ldr	r2, [pc, #16]	; (8011418 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 8011408:	4804      	ldr	r0, [pc, #16]	; (801141c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 801140a:	f240 3159 	movw	r1, #857	; 0x359
 801140e:	f008 fd09 	bl	8019e24 <__assert_func>
 8011412:	bd70      	pop	{r4, r5, r6, pc}
 8011414:	0801d985 	.word	0x0801d985
 8011418:	0801e191 	.word	0x0801e191
 801141c:	0801d8c0 	.word	0x0801d8c0

08011420 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8011420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011424:	b093      	sub	sp, #76	; 0x4c
 8011426:	880e      	ldrh	r6, [r1, #0]
 8011428:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801142c:	4681      	mov	r9, r0
 801142e:	4688      	mov	r8, r1
 8011430:	4615      	mov	r5, r2
 8011432:	b136      	cbz	r6, 8011442 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8011434:	4b70      	ldr	r3, [pc, #448]	; (80115f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8011436:	4a71      	ldr	r2, [pc, #452]	; (80115fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8011438:	4871      	ldr	r0, [pc, #452]	; (8011600 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801143a:	f44f 71c3 	mov.w	r1, #390	; 0x186
 801143e:	f008 fcf1 	bl	8019e24 <__assert_func>
 8011442:	6810      	ldr	r0, [r2, #0]
 8011444:	6851      	ldr	r1, [r2, #4]
 8011446:	4f6f      	ldr	r7, [pc, #444]	; (8011604 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8011448:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8011608 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 801144c:	ac0e      	add	r4, sp, #56	; 0x38
 801144e:	c403      	stmia	r4!, {r0, r1}
 8011450:	6818      	ldr	r0, [r3, #0]
 8011452:	6859      	ldr	r1, [r3, #4]
 8011454:	ac10      	add	r4, sp, #64	; 0x40
 8011456:	c403      	stmia	r4!, {r0, r1}
 8011458:	a80e      	add	r0, sp, #56	; 0x38
 801145a:	f7f9 fd73 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801145e:	4629      	mov	r1, r5
 8011460:	a810      	add	r0, sp, #64	; 0x40
 8011462:	f7f9 fd97 	bl	800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011466:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801146a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801146e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8011472:	6838      	ldr	r0, [r7, #0]
 8011474:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8011478:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801147c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011480:	4489      	add	r9, r1
 8011482:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8011486:	440a      	add	r2, r1
 8011488:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801148c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8011490:	4413      	add	r3, r2
 8011492:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8011496:	6803      	ldr	r3, [r0, #0]
 8011498:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801149a:	4798      	blx	r3
 801149c:	f010 0f80 	tst.w	r0, #128	; 0x80
 80114a0:	6838      	ldr	r0, [r7, #0]
 80114a2:	d01d      	beq.n	80114e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 80114a4:	6802      	ldr	r2, [r0, #0]
 80114a6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80114aa:	e9cd 6608 	strd	r6, r6, [sp, #32]
 80114ae:	210b      	movs	r1, #11
 80114b0:	9107      	str	r1, [sp, #28]
 80114b2:	f8bb 1000 	ldrh.w	r1, [fp]
 80114b6:	9106      	str	r1, [sp, #24]
 80114b8:	2101      	movs	r1, #1
 80114ba:	e9cd a104 	strd	sl, r1, [sp, #16]
 80114be:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80114c2:	9103      	str	r1, [sp, #12]
 80114c4:	b2a4      	uxth	r4, r4
 80114c6:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 80114ca:	9100      	str	r1, [sp, #0]
 80114cc:	b2ad      	uxth	r5, r5
 80114ce:	9502      	str	r5, [sp, #8]
 80114d0:	9401      	str	r4, [sp, #4]
 80114d2:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 80114d4:	4649      	mov	r1, r9
 80114d6:	4642      	mov	r2, r8
 80114d8:	47a0      	blx	r4
 80114da:	b013      	add	sp, #76	; 0x4c
 80114dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114e0:	6803      	ldr	r3, [r0, #0]
 80114e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80114e4:	4798      	blx	r3
 80114e6:	f8bb 3000 	ldrh.w	r3, [fp]
 80114ea:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80114ee:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 80114f2:	fb03 1202 	mla	r2, r3, r2, r1
 80114f6:	435d      	muls	r5, r3
 80114f8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80114fc:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8011500:	920c      	str	r2, [sp, #48]	; 0x30
 8011502:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8011506:	1b12      	subs	r2, r2, r4
 8011508:	920d      	str	r2, [sp, #52]	; 0x34
 801150a:	0062      	lsls	r2, r4, #1
 801150c:	1b1c      	subs	r4, r3, r4
 801150e:	0063      	lsls	r3, r4, #1
 8011510:	920a      	str	r2, [sp, #40]	; 0x28
 8011512:	930b      	str	r3, [sp, #44]	; 0x2c
 8011514:	f04f 0e04 	mov.w	lr, #4
 8011518:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801151a:	4298      	cmp	r0, r3
 801151c:	d266      	bcs.n	80115ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 801151e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011520:	eb00 0b03 	add.w	fp, r0, r3
 8011524:	4558      	cmp	r0, fp
 8011526:	d25c      	bcs.n	80115e2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 8011528:	f819 3b01 	ldrb.w	r3, [r9], #1
 801152c:	fb1e e303 	smlabb	r3, lr, r3, lr
 8011530:	f858 2003 	ldr.w	r2, [r8, r3]
 8011534:	0e11      	lsrs	r1, r2, #24
 8011536:	d012      	beq.n	801155e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8011538:	29ff      	cmp	r1, #255	; 0xff
 801153a:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801153e:	d110      	bne.n	8011562 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8011540:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8011544:	d10d      	bne.n	8011562 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8011546:	0953      	lsrs	r3, r2, #5
 8011548:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801154c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011550:	f027 0707 	bic.w	r7, r7, #7
 8011554:	431f      	orrs	r7, r3
 8011556:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801155a:	433a      	orrs	r2, r7
 801155c:	8002      	strh	r2, [r0, #0]
 801155e:	3002      	adds	r0, #2
 8011560:	e7e0      	b.n	8011524 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 8011562:	fb0a f101 	mul.w	r1, sl, r1
 8011566:	8806      	ldrh	r6, [r0, #0]
 8011568:	1c4b      	adds	r3, r1, #1
 801156a:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801156e:	1235      	asrs	r5, r6, #8
 8011570:	10f4      	asrs	r4, r6, #3
 8011572:	121b      	asrs	r3, r3, #8
 8011574:	00f6      	lsls	r6, r6, #3
 8011576:	b299      	uxth	r1, r3
 8011578:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801157c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8011580:	b2f6      	uxtb	r6, r6
 8011582:	43db      	mvns	r3, r3
 8011584:	b2d2      	uxtb	r2, r2
 8011586:	b2db      	uxtb	r3, r3
 8011588:	fb1c fc01 	smulbb	ip, ip, r1
 801158c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8011590:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8011594:	fb12 f201 	smulbb	r2, r2, r1
 8011598:	fb05 c503 	mla	r5, r5, r3, ip
 801159c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80115a0:	b2ff      	uxtb	r7, r7
 80115a2:	fb06 2203 	mla	r2, r6, r3, r2
 80115a6:	b2ad      	uxth	r5, r5
 80115a8:	fb17 f701 	smulbb	r7, r7, r1
 80115ac:	b292      	uxth	r2, r2
 80115ae:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80115b2:	fb04 7403 	mla	r4, r4, r3, r7
 80115b6:	f105 0c01 	add.w	ip, r5, #1
 80115ba:	1c57      	adds	r7, r2, #1
 80115bc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80115c0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80115c4:	b2a4      	uxth	r4, r4
 80115c6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80115ca:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80115ce:	433d      	orrs	r5, r7
 80115d0:	1c67      	adds	r7, r4, #1
 80115d2:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80115d6:	0964      	lsrs	r4, r4, #5
 80115d8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80115dc:	4325      	orrs	r5, r4
 80115de:	8005      	strh	r5, [r0, #0]
 80115e0:	e7bd      	b.n	801155e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 80115e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80115e4:	4418      	add	r0, r3
 80115e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80115e8:	4499      	add	r9, r3
 80115ea:	e795      	b.n	8011518 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 80115ec:	4b05      	ldr	r3, [pc, #20]	; (8011604 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80115ee:	6818      	ldr	r0, [r3, #0]
 80115f0:	6803      	ldr	r3, [r0, #0]
 80115f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115f4:	4798      	blx	r3
 80115f6:	e770      	b.n	80114da <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 80115f8:	0801d770 	.word	0x0801d770
 80115fc:	0801decf 	.word	0x0801decf
 8011600:	0801d8c0 	.word	0x0801d8c0
 8011604:	2000a498 	.word	0x2000a498
 8011608:	2000a492 	.word	0x2000a492

0801160c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801160c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011610:	4614      	mov	r4, r2
 8011612:	880a      	ldrh	r2, [r1, #0]
 8011614:	b087      	sub	sp, #28
 8011616:	2a02      	cmp	r2, #2
 8011618:	4680      	mov	r8, r0
 801161a:	460d      	mov	r5, r1
 801161c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8011620:	d006      	beq.n	8011630 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8011622:	4b63      	ldr	r3, [pc, #396]	; (80117b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8011624:	4a63      	ldr	r2, [pc, #396]	; (80117b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8011626:	4864      	ldr	r0, [pc, #400]	; (80117b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8011628:	f240 11dd 	movw	r1, #477	; 0x1dd
 801162c:	f008 fbfa 	bl	8019e24 <__assert_func>
 8011630:	2e00      	cmp	r6, #0
 8011632:	f000 80b9 	beq.w	80117a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8011636:	6820      	ldr	r0, [r4, #0]
 8011638:	6861      	ldr	r1, [r4, #4]
 801163a:	af02      	add	r7, sp, #8
 801163c:	c703      	stmia	r7!, {r0, r1}
 801163e:	6818      	ldr	r0, [r3, #0]
 8011640:	6859      	ldr	r1, [r3, #4]
 8011642:	af04      	add	r7, sp, #16
 8011644:	c703      	stmia	r7!, {r0, r1}
 8011646:	a802      	add	r0, sp, #8
 8011648:	f7f9 fc7c 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801164c:	4621      	mov	r1, r4
 801164e:	a804      	add	r0, sp, #16
 8011650:	f7f9 fca0 	bl	800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011654:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011658:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801165c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8011660:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8011664:	fb14 2103 	smlabb	r1, r4, r3, r2
 8011668:	eb08 0401 	add.w	r4, r8, r1
 801166c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011670:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8011674:	440a      	add	r2, r1
 8011676:	f8ad 2010 	strh.w	r2, [sp, #16]
 801167a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801167e:	4413      	add	r3, r2
 8011680:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011684:	4b4d      	ldr	r3, [pc, #308]	; (80117bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8011686:	6818      	ldr	r0, [r3, #0]
 8011688:	6803      	ldr	r3, [r0, #0]
 801168a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801168c:	4798      	blx	r3
 801168e:	4b4c      	ldr	r3, [pc, #304]	; (80117c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 8011690:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8011694:	881a      	ldrh	r2, [r3, #0]
 8011696:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801169a:	2eff      	cmp	r6, #255	; 0xff
 801169c:	fb02 c101 	mla	r1, r2, r1, ip
 80116a0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80116a4:	fb02 f207 	mul.w	r2, r2, r7
 80116a8:	f105 0104 	add.w	r1, r5, #4
 80116ac:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80116b0:	461d      	mov	r5, r3
 80116b2:	d05a      	beq.n	801176a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 80116b4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80116b8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80116bc:	b2b6      	uxth	r6, r6
 80116be:	fa1f fe8e 	uxth.w	lr, lr
 80116c2:	9301      	str	r3, [sp, #4]
 80116c4:	4282      	cmp	r2, r0
 80116c6:	d96a      	bls.n	801179e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80116c8:	eb00 0b0a 	add.w	fp, r0, sl
 80116cc:	4583      	cmp	fp, r0
 80116ce:	d940      	bls.n	8011752 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 80116d0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80116d4:	8805      	ldrh	r5, [r0, #0]
 80116d6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80116da:	122f      	asrs	r7, r5, #8
 80116dc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80116e0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80116e4:	fb17 f70e 	smulbb	r7, r7, lr
 80116e8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80116ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80116f0:	00ed      	lsls	r5, r5, #3
 80116f2:	fb0c 7c06 	mla	ip, ip, r6, r7
 80116f6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80116fa:	10df      	asrs	r7, r3, #3
 80116fc:	b2ed      	uxtb	r5, r5
 80116fe:	00db      	lsls	r3, r3, #3
 8011700:	fa1f fc8c 	uxth.w	ip, ip
 8011704:	fb19 f90e 	smulbb	r9, r9, lr
 8011708:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801170c:	b2db      	uxtb	r3, r3
 801170e:	fb15 f50e 	smulbb	r5, r5, lr
 8011712:	fb07 9706 	mla	r7, r7, r6, r9
 8011716:	fb03 5306 	mla	r3, r3, r6, r5
 801171a:	f10c 0901 	add.w	r9, ip, #1
 801171e:	b29b      	uxth	r3, r3
 8011720:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011724:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8011728:	f103 0c01 	add.w	ip, r3, #1
 801172c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8011730:	b2bf      	uxth	r7, r7
 8011732:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8011736:	ea4c 0c09 	orr.w	ip, ip, r9
 801173a:	f107 0901 	add.w	r9, r7, #1
 801173e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8011742:	097f      	lsrs	r7, r7, #5
 8011744:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8011748:	ea4c 0c07 	orr.w	ip, ip, r7
 801174c:	f820 cb02 	strh.w	ip, [r0], #2
 8011750:	e7bc      	b.n	80116cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8011752:	9b01      	ldr	r3, [sp, #4]
 8011754:	881b      	ldrh	r3, [r3, #0]
 8011756:	eba3 0308 	sub.w	r3, r3, r8
 801175a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801175e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011762:	eba3 0308 	sub.w	r3, r3, r8
 8011766:	441c      	add	r4, r3
 8011768:	e7ac      	b.n	80116c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 801176a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801176e:	4282      	cmp	r2, r0
 8011770:	d915      	bls.n	801179e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8011772:	eb00 060a 	add.w	r6, r0, sl
 8011776:	4286      	cmp	r6, r0
 8011778:	d906      	bls.n	8011788 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 801177a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801177e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8011782:	f820 3b02 	strh.w	r3, [r0], #2
 8011786:	e7f6      	b.n	8011776 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8011788:	882b      	ldrh	r3, [r5, #0]
 801178a:	eba3 0308 	sub.w	r3, r3, r8
 801178e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011792:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011796:	eba3 0308 	sub.w	r3, r3, r8
 801179a:	441c      	add	r4, r3
 801179c:	e7e7      	b.n	801176e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 801179e:	4b07      	ldr	r3, [pc, #28]	; (80117bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80117a0:	6818      	ldr	r0, [r3, #0]
 80117a2:	6803      	ldr	r3, [r0, #0]
 80117a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80117a6:	4798      	blx	r3
 80117a8:	b007      	add	sp, #28
 80117aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80117ae:	bf00      	nop
 80117b0:	0801d6a0 	.word	0x0801d6a0
 80117b4:	0801dd39 	.word	0x0801dd39
 80117b8:	0801d8c0 	.word	0x0801d8c0
 80117bc:	2000a498 	.word	0x2000a498
 80117c0:	2000a492 	.word	0x2000a492

080117c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80117c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80117c8:	f8b1 9000 	ldrh.w	r9, [r1]
 80117cc:	b091      	sub	sp, #68	; 0x44
 80117ce:	f1b9 0f01 	cmp.w	r9, #1
 80117d2:	4604      	mov	r4, r0
 80117d4:	460f      	mov	r7, r1
 80117d6:	4690      	mov	r8, r2
 80117d8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80117dc:	d006      	beq.n	80117ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 80117de:	4b84      	ldr	r3, [pc, #528]	; (80119f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 80117e0:	4a84      	ldr	r2, [pc, #528]	; (80119f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 80117e2:	4885      	ldr	r0, [pc, #532]	; (80119f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 80117e4:	f240 212b 	movw	r1, #555	; 0x22b
 80117e8:	f008 fb1c 	bl	8019e24 <__assert_func>
 80117ec:	2d00      	cmp	r5, #0
 80117ee:	d04f      	beq.n	8011890 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80117f0:	6810      	ldr	r0, [r2, #0]
 80117f2:	6851      	ldr	r1, [r2, #4]
 80117f4:	f8df b208 	ldr.w	fp, [pc, #520]	; 8011a00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 80117f8:	ae0c      	add	r6, sp, #48	; 0x30
 80117fa:	c603      	stmia	r6!, {r0, r1}
 80117fc:	6818      	ldr	r0, [r3, #0]
 80117fe:	6859      	ldr	r1, [r3, #4]
 8011800:	ae0e      	add	r6, sp, #56	; 0x38
 8011802:	c603      	stmia	r6!, {r0, r1}
 8011804:	a80c      	add	r0, sp, #48	; 0x30
 8011806:	f7f9 fb9d 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801180a:	4641      	mov	r1, r8
 801180c:	a80e      	add	r0, sp, #56	; 0x38
 801180e:	f7f9 fbc1 	bl	800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011812:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8011816:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801181a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801181e:	f8db 0000 	ldr.w	r0, [fp]
 8011822:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8011826:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801182a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8011a04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 801182e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011832:	440c      	add	r4, r1
 8011834:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8011838:	440a      	add	r2, r1
 801183a:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801183e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8011842:	4413      	add	r3, r2
 8011844:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8011848:	6803      	ldr	r3, [r0, #0]
 801184a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801184c:	4798      	blx	r3
 801184e:	f010 0f80 	tst.w	r0, #128	; 0x80
 8011852:	f8db 0000 	ldr.w	r0, [fp]
 8011856:	d01e      	beq.n	8011896 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8011858:	2200      	movs	r2, #0
 801185a:	6801      	ldr	r1, [r0, #0]
 801185c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011860:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8011864:	220b      	movs	r2, #11
 8011866:	9207      	str	r2, [sp, #28]
 8011868:	f8b8 2000 	ldrh.w	r2, [r8]
 801186c:	9504      	str	r5, [sp, #16]
 801186e:	e9cd 9205 	strd	r9, r2, [sp, #20]
 8011872:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8011876:	9203      	str	r2, [sp, #12]
 8011878:	fa1f f28a 	uxth.w	r2, sl
 801187c:	9202      	str	r2, [sp, #8]
 801187e:	b2b6      	uxth	r6, r6
 8011880:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8011884:	9200      	str	r2, [sp, #0]
 8011886:	9601      	str	r6, [sp, #4]
 8011888:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801188a:	463a      	mov	r2, r7
 801188c:	4621      	mov	r1, r4
 801188e:	47a8      	blx	r5
 8011890:	b011      	add	sp, #68	; 0x44
 8011892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011896:	6803      	ldr	r3, [r0, #0]
 8011898:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801189a:	4798      	blx	r3
 801189c:	f8b8 2000 	ldrh.w	r2, [r8]
 80118a0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80118a4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80118a8:	2dff      	cmp	r5, #255	; 0xff
 80118aa:	fb02 1303 	mla	r3, r2, r3, r1
 80118ae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80118b2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80118b6:	fb0a fa02 	mul.w	sl, sl, r2
 80118ba:	d062      	beq.n	8011982 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 80118bc:	ea6f 0c05 	mvn.w	ip, r5
 80118c0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80118c4:	930a      	str	r3, [sp, #40]	; 0x28
 80118c6:	b2ad      	uxth	r5, r5
 80118c8:	fa5f fc8c 	uxtb.w	ip, ip
 80118cc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80118d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80118d2:	4298      	cmp	r0, r3
 80118d4:	f080 8085 	bcs.w	80119e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80118d8:	eb00 0b09 	add.w	fp, r0, r9
 80118dc:	4558      	cmp	r0, fp
 80118de:	d246      	bcs.n	801196e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80118e0:	f814 eb01 	ldrb.w	lr, [r4], #1
 80118e4:	2303      	movs	r3, #3
 80118e6:	2204      	movs	r2, #4
 80118e8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80118ec:	eb07 0a0e 	add.w	sl, r7, lr
 80118f0:	8803      	ldrh	r3, [r0, #0]
 80118f2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80118f6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80118fa:	1219      	asrs	r1, r3, #8
 80118fc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8011900:	fb18 f805 	smulbb	r8, r8, r5
 8011904:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8011908:	10da      	asrs	r2, r3, #3
 801190a:	fb01 810c 	mla	r1, r1, ip, r8
 801190e:	00db      	lsls	r3, r3, #3
 8011910:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8011914:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8011918:	b2db      	uxtb	r3, r3
 801191a:	fb18 f805 	smulbb	r8, r8, r5
 801191e:	fb1e fe05 	smulbb	lr, lr, r5
 8011922:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8011926:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801192a:	b289      	uxth	r1, r1
 801192c:	fb02 820c 	mla	r2, r2, ip, r8
 8011930:	fb03 e30c 	mla	r3, r3, ip, lr
 8011934:	b292      	uxth	r2, r2
 8011936:	b29b      	uxth	r3, r3
 8011938:	f101 0801 	add.w	r8, r1, #1
 801193c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8011940:	f103 0e01 	add.w	lr, r3, #1
 8011944:	f102 0801 	add.w	r8, r2, #1
 8011948:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801194c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8011950:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8011954:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011958:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801195c:	ea4e 0101 	orr.w	r1, lr, r1
 8011960:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011964:	ea41 0108 	orr.w	r1, r1, r8
 8011968:	f820 1b02 	strh.w	r1, [r0], #2
 801196c:	e7b6      	b.n	80118dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 801196e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011970:	881b      	ldrh	r3, [r3, #0]
 8011972:	1b9b      	subs	r3, r3, r6
 8011974:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011978:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801197c:	1b9b      	subs	r3, r3, r6
 801197e:	441c      	add	r4, r3
 8011980:	e7a6      	b.n	80118d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 8011982:	491e      	ldr	r1, [pc, #120]	; (80119fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 8011984:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8011988:	2203      	movs	r2, #3
 801198a:	2504      	movs	r5, #4
 801198c:	4550      	cmp	r0, sl
 801198e:	d228      	bcs.n	80119e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8011990:	eb00 0c09 	add.w	ip, r0, r9
 8011994:	4560      	cmp	r0, ip
 8011996:	4623      	mov	r3, r4
 8011998:	d219      	bcs.n	80119ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801199a:	f893 e000 	ldrb.w	lr, [r3]
 801199e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80119a2:	eb07 0b0e 	add.w	fp, r7, lr
 80119a6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80119aa:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80119ae:	f89b b001 	ldrb.w	fp, [fp, #1]
 80119b2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80119b6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80119ba:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80119be:	ea43 030b 	orr.w	r3, r3, fp
 80119c2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80119c6:	3401      	adds	r4, #1
 80119c8:	f820 3b02 	strh.w	r3, [r0], #2
 80119cc:	e7e2      	b.n	8011994 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 80119ce:	f8b8 3000 	ldrh.w	r3, [r8]
 80119d2:	1b9b      	subs	r3, r3, r6
 80119d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80119d8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80119dc:	1b9b      	subs	r3, r3, r6
 80119de:	441c      	add	r4, r3
 80119e0:	e7d4      	b.n	801198c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 80119e2:	4b07      	ldr	r3, [pc, #28]	; (8011a00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 80119e4:	6818      	ldr	r0, [r3, #0]
 80119e6:	6803      	ldr	r3, [r0, #0]
 80119e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80119ea:	4798      	blx	r3
 80119ec:	e750      	b.n	8011890 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80119ee:	bf00      	nop
 80119f0:	0801d6ee 	.word	0x0801d6ee
 80119f4:	0801ddc2 	.word	0x0801ddc2
 80119f8:	0801d8c0 	.word	0x0801d8c0
 80119fc:	fffff800 	.word	0xfffff800
 8011a00:	2000a498 	.word	0x2000a498
 8011a04:	2000a492 	.word	0x2000a492

08011a08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8011a08:	b430      	push	{r4, r5}
 8011a0a:	780d      	ldrb	r5, [r1, #0]
 8011a0c:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8011a10:	2d01      	cmp	r5, #1
 8011a12:	d00a      	beq.n	8011a2a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8011a14:	d305      	bcc.n	8011a22 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8011a16:	2d02      	cmp	r5, #2
 8011a18:	d10b      	bne.n	8011a32 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8011a1a:	9402      	str	r4, [sp, #8]
 8011a1c:	bc30      	pop	{r4, r5}
 8011a1e:	f7ff bdf5 	b.w	801160c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8011a22:	9402      	str	r4, [sp, #8]
 8011a24:	bc30      	pop	{r4, r5}
 8011a26:	f7ff bcfb 	b.w	8011420 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8011a2a:	9402      	str	r4, [sp, #8]
 8011a2c:	bc30      	pop	{r4, r5}
 8011a2e:	f7ff bec9 	b.w	80117c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8011a32:	bc30      	pop	{r4, r5}
 8011a34:	4770      	bx	lr
	...

08011a38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8011a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a3c:	4604      	mov	r4, r0
 8011a3e:	b087      	sub	sp, #28
 8011a40:	6810      	ldr	r0, [r2, #0]
 8011a42:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8011a46:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8011c80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8011a4a:	460e      	mov	r6, r1
 8011a4c:	6851      	ldr	r1, [r2, #4]
 8011a4e:	ad02      	add	r5, sp, #8
 8011a50:	c503      	stmia	r5!, {r0, r1}
 8011a52:	6818      	ldr	r0, [r3, #0]
 8011a54:	6859      	ldr	r1, [r3, #4]
 8011a56:	ad04      	add	r5, sp, #16
 8011a58:	4617      	mov	r7, r2
 8011a5a:	c503      	stmia	r5!, {r0, r1}
 8011a5c:	a802      	add	r0, sp, #8
 8011a5e:	f7f9 fa71 	bl	800af44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011a62:	4639      	mov	r1, r7
 8011a64:	a804      	add	r0, sp, #16
 8011a66:	f7f9 fa95 	bl	800af94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011a6a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011a6e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011a72:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8011a76:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8011a7a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8011a7e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011a82:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8011a86:	440e      	add	r6, r1
 8011a88:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011a8c:	440a      	add	r2, r1
 8011a8e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011a92:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011a96:	4413      	add	r3, r2
 8011a98:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011a9c:	4b77      	ldr	r3, [pc, #476]	; (8011c7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8011a9e:	6818      	ldr	r0, [r3, #0]
 8011aa0:	6803      	ldr	r3, [r0, #0]
 8011aa2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011aa4:	4798      	blx	r3
 8011aa6:	f8b9 b000 	ldrh.w	fp, [r9]
 8011aaa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011aae:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011ab2:	fb0b 2303 	mla	r3, fp, r3, r2
 8011ab6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011aba:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8011abe:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8011ac2:	fb05 f50b 	mul.w	r5, r5, fp
 8011ac6:	9300      	str	r3, [sp, #0]
 8011ac8:	d069      	beq.n	8011b9e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8011aca:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8011ace:	4558      	cmp	r0, fp
 8011ad0:	f080 80cc 	bcs.w	8011c6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8011ad4:	9b00      	ldr	r3, [sp, #0]
 8011ad6:	18c3      	adds	r3, r0, r3
 8011ad8:	9301      	str	r3, [sp, #4]
 8011ada:	4631      	mov	r1, r6
 8011adc:	9b01      	ldr	r3, [sp, #4]
 8011ade:	4298      	cmp	r0, r3
 8011ae0:	d24f      	bcs.n	8011b82 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8011ae2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8011ae6:	2a00      	cmp	r2, #0
 8011ae8:	d048      	beq.n	8011b7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8011aea:	fb0a f202 	mul.w	r2, sl, r2
 8011aee:	1c53      	adds	r3, r2, #1
 8011af0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8011af4:	121b      	asrs	r3, r3, #8
 8011af6:	d041      	beq.n	8011b7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8011af8:	8802      	ldrh	r2, [r0, #0]
 8011afa:	f8b4 c000 	ldrh.w	ip, [r4]
 8011afe:	b29e      	uxth	r6, r3
 8011b00:	1215      	asrs	r5, r2, #8
 8011b02:	43db      	mvns	r3, r3
 8011b04:	b2db      	uxtb	r3, r3
 8011b06:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011b0a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8011b0e:	fb15 f503 	smulbb	r5, r5, r3
 8011b12:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8011b16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011b1a:	00d2      	lsls	r2, r2, #3
 8011b1c:	fb07 5706 	mla	r7, r7, r6, r5
 8011b20:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011b24:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8011b28:	b2d2      	uxtb	r2, r2
 8011b2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011b2e:	b2bf      	uxth	r7, r7
 8011b30:	fb1e fe03 	smulbb	lr, lr, r3
 8011b34:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011b38:	fa5f fc8c 	uxtb.w	ip, ip
 8011b3c:	fb12 f203 	smulbb	r2, r2, r3
 8011b40:	fb05 e506 	mla	r5, r5, r6, lr
 8011b44:	fb0c 2c06 	mla	ip, ip, r6, r2
 8011b48:	f107 0e01 	add.w	lr, r7, #1
 8011b4c:	fa1f fc8c 	uxth.w	ip, ip
 8011b50:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8011b54:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8011b58:	f10c 0701 	add.w	r7, ip, #1
 8011b5c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8011b60:	b2ad      	uxth	r5, r5
 8011b62:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8011b66:	ea47 070e 	orr.w	r7, r7, lr
 8011b6a:	f105 0e01 	add.w	lr, r5, #1
 8011b6e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8011b72:	096d      	lsrs	r5, r5, #5
 8011b74:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011b78:	432f      	orrs	r7, r5
 8011b7a:	8007      	strh	r7, [r0, #0]
 8011b7c:	3002      	adds	r0, #2
 8011b7e:	3402      	adds	r4, #2
 8011b80:	e7ac      	b.n	8011adc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8011b82:	f8b9 3000 	ldrh.w	r3, [r9]
 8011b86:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8011b8a:	eba3 0308 	sub.w	r3, r3, r8
 8011b8e:	eba6 0608 	sub.w	r6, r6, r8
 8011b92:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8011b96:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011b9a:	440e      	add	r6, r1
 8011b9c:	e797      	b.n	8011ace <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8011b9e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011ba2:	42a8      	cmp	r0, r5
 8011ba4:	d262      	bcs.n	8011c6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8011ba6:	9b00      	ldr	r3, [sp, #0]
 8011ba8:	4631      	mov	r1, r6
 8011baa:	eb00 0b03 	add.w	fp, r0, r3
 8011bae:	4558      	cmp	r0, fp
 8011bb0:	d24e      	bcs.n	8011c50 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8011bb2:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011bb6:	b12b      	cbz	r3, 8011bc4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8011bb8:	2bff      	cmp	r3, #255	; 0xff
 8011bba:	f8b4 e000 	ldrh.w	lr, [r4]
 8011bbe:	d104      	bne.n	8011bca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8011bc0:	f8a0 e000 	strh.w	lr, [r0]
 8011bc4:	3002      	adds	r0, #2
 8011bc6:	3402      	adds	r4, #2
 8011bc8:	e7f1      	b.n	8011bae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8011bca:	8802      	ldrh	r2, [r0, #0]
 8011bcc:	b29f      	uxth	r7, r3
 8011bce:	1216      	asrs	r6, r2, #8
 8011bd0:	43db      	mvns	r3, r3
 8011bd2:	b2db      	uxtb	r3, r3
 8011bd4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011bd8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011bdc:	fb16 f603 	smulbb	r6, r6, r3
 8011be0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8011be4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011be8:	00d2      	lsls	r2, r2, #3
 8011bea:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011bee:	b2d2      	uxtb	r2, r2
 8011bf0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011bf4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011bf8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011bfc:	fb1a fa03 	smulbb	sl, sl, r3
 8011c00:	fa1f fc8c 	uxth.w	ip, ip
 8011c04:	fb12 f303 	smulbb	r3, r2, r3
 8011c08:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011c0c:	fa5f fe8e 	uxtb.w	lr, lr
 8011c10:	fb06 a607 	mla	r6, r6, r7, sl
 8011c14:	f10c 0201 	add.w	r2, ip, #1
 8011c18:	fb0e 3307 	mla	r3, lr, r7, r3
 8011c1c:	b2b6      	uxth	r6, r6
 8011c1e:	b29b      	uxth	r3, r3
 8011c20:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011c24:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8011c28:	f106 0a01 	add.w	sl, r6, #1
 8011c2c:	f103 0c01 	add.w	ip, r3, #1
 8011c30:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8011c34:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8011c38:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8011c3c:	0976      	lsrs	r6, r6, #5
 8011c3e:	ea4c 0c02 	orr.w	ip, ip, r2
 8011c42:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011c46:	ea4c 0c06 	orr.w	ip, ip, r6
 8011c4a:	f8a0 c000 	strh.w	ip, [r0]
 8011c4e:	e7b9      	b.n	8011bc4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8011c50:	f8b9 3000 	ldrh.w	r3, [r9]
 8011c54:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8011c58:	eba3 0308 	sub.w	r3, r3, r8
 8011c5c:	eba6 0608 	sub.w	r6, r6, r8
 8011c60:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8011c64:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011c68:	440e      	add	r6, r1
 8011c6a:	e79a      	b.n	8011ba2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8011c6c:	4b03      	ldr	r3, [pc, #12]	; (8011c7c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8011c6e:	6818      	ldr	r0, [r3, #0]
 8011c70:	6803      	ldr	r3, [r0, #0]
 8011c72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011c74:	4798      	blx	r3
 8011c76:	b007      	add	sp, #28
 8011c78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c7c:	2000a498 	.word	0x2000a498
 8011c80:	2000a492 	.word	0x2000a492

08011c84 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8011c84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c88:	b089      	sub	sp, #36	; 0x24
 8011c8a:	4682      	mov	sl, r0
 8011c8c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8011c90:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011c92:	460f      	mov	r7, r1
 8011c94:	4691      	mov	r9, r2
 8011c96:	4698      	mov	r8, r3
 8011c98:	2e00      	cmp	r6, #0
 8011c9a:	d03d      	beq.n	8011d18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8011c9c:	4608      	mov	r0, r1
 8011c9e:	f7fb ff7d 	bl	800db9c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011ca2:	4605      	mov	r5, r0
 8011ca4:	4638      	mov	r0, r7
 8011ca6:	f7fb ffbd 	bl	800dc24 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011caa:	f8ad 000e 	strh.w	r0, [sp, #14]
 8011cae:	4638      	mov	r0, r7
 8011cb0:	f8ad 9008 	strh.w	r9, [sp, #8]
 8011cb4:	f8ad 500c 	strh.w	r5, [sp, #12]
 8011cb8:	f8ad 800a 	strh.w	r8, [sp, #10]
 8011cbc:	f7fc f88a 	bl	800ddd4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8011cc0:	4605      	mov	r5, r0
 8011cc2:	4638      	mov	r0, r7
 8011cc4:	f7fc f8b8 	bl	800de38 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8011cc8:	4681      	mov	r9, r0
 8011cca:	4638      	mov	r0, r7
 8011ccc:	f7fc f90c 	bl	800dee8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011cd0:	280b      	cmp	r0, #11
 8011cd2:	f200 816f 	bhi.w	8011fb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 8011cd6:	e8df f010 	tbh	[pc, r0, lsl #1]
 8011cda:	00c3      	.short	0x00c3
 8011cdc:	000c00b4 	.word	0x000c00b4
 8011ce0:	016d016d 	.word	0x016d016d
 8011ce4:	016d016d 	.word	0x016d016d
 8011ce8:	016d016d 	.word	0x016d016d
 8011cec:	016d016d 	.word	0x016d016d
 8011cf0:	00bb      	.short	0x00bb
 8011cf2:	4bb3      	ldr	r3, [pc, #716]	; (8011fc0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 8011cf4:	6818      	ldr	r0, [r3, #0]
 8011cf6:	6803      	ldr	r3, [r0, #0]
 8011cf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011cfa:	4798      	blx	r3
 8011cfc:	2eff      	cmp	r6, #255	; 0xff
 8011cfe:	d121      	bne.n	8011d44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8011d00:	0683      	lsls	r3, r0, #26
 8011d02:	d41f      	bmi.n	8011d44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8011d04:	4638      	mov	r0, r7
 8011d06:	f7fc f82b 	bl	800dd60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011d0a:	b940      	cbnz	r0, 8011d1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8011d0c:	4623      	mov	r3, r4
 8011d0e:	aa02      	add	r2, sp, #8
 8011d10:	4629      	mov	r1, r5
 8011d12:	4650      	mov	r0, sl
 8011d14:	f7ff f9e4 	bl	80110e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8011d18:	b009      	add	sp, #36	; 0x24
 8011d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d1e:	f10d 0818 	add.w	r8, sp, #24
 8011d22:	4639      	mov	r1, r7
 8011d24:	4640      	mov	r0, r8
 8011d26:	f7fb ffc1 	bl	800dcac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011d2a:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011d2e:	af04      	add	r7, sp, #16
 8011d30:	e887 0003 	stmia.w	r7, {r0, r1}
 8011d34:	4638      	mov	r0, r7
 8011d36:	4621      	mov	r1, r4
 8011d38:	f7f7 f912 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 8011d3c:	4638      	mov	r0, r7
 8011d3e:	f7f7 f952 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d42:	b130      	cbz	r0, 8011d52 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 8011d44:	4633      	mov	r3, r6
 8011d46:	4622      	mov	r2, r4
 8011d48:	a902      	add	r1, sp, #8
 8011d4a:	4628      	mov	r0, r5
 8011d4c:	f7ff f8e2 	bl	8010f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8011d50:	e7e2      	b.n	8011d18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8011d52:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011d56:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011d5a:	4293      	cmp	r3, r2
 8011d5c:	dd12      	ble.n	8011d84 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 8011d5e:	1a9b      	subs	r3, r3, r2
 8011d60:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011d64:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011d68:	f8ad 0018 	strh.w	r0, [sp, #24]
 8011d6c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8011d70:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011d74:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011d78:	4642      	mov	r2, r8
 8011d7a:	4633      	mov	r3, r6
 8011d7c:	a902      	add	r1, sp, #8
 8011d7e:	4628      	mov	r0, r5
 8011d80:	f7ff f8c8 	bl	8010f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8011d84:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8011d88:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011d8c:	4293      	cmp	r3, r2
 8011d8e:	dd12      	ble.n	8011db6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 8011d90:	1a9b      	subs	r3, r3, r2
 8011d92:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8011d96:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8011d9a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011d9e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011da2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011da6:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011daa:	23ff      	movs	r3, #255	; 0xff
 8011dac:	4642      	mov	r2, r8
 8011dae:	a902      	add	r1, sp, #8
 8011db0:	4628      	mov	r0, r5
 8011db2:	f7ff f8af 	bl	8010f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8011db6:	463b      	mov	r3, r7
 8011db8:	aa02      	add	r2, sp, #8
 8011dba:	4629      	mov	r1, r5
 8011dbc:	4650      	mov	r0, sl
 8011dbe:	f7ff f98f 	bl	80110e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8011dc2:	88a2      	ldrh	r2, [r4, #4]
 8011dc4:	8823      	ldrh	r3, [r4, #0]
 8011dc6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8011dca:	4413      	add	r3, r2
 8011dcc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011dd0:	440a      	add	r2, r1
 8011dd2:	b29b      	uxth	r3, r3
 8011dd4:	b292      	uxth	r2, r2
 8011dd6:	b211      	sxth	r1, r2
 8011dd8:	b218      	sxth	r0, r3
 8011dda:	4288      	cmp	r0, r1
 8011ddc:	dd12      	ble.n	8011e04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 8011dde:	1a9b      	subs	r3, r3, r2
 8011de0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8011de4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8011de8:	f8ad 1018 	strh.w	r1, [sp, #24]
 8011dec:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011df0:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011df4:	23ff      	movs	r3, #255	; 0xff
 8011df6:	4642      	mov	r2, r8
 8011df8:	a902      	add	r1, sp, #8
 8011dfa:	4628      	mov	r0, r5
 8011dfc:	f8ad 601a 	strh.w	r6, [sp, #26]
 8011e00:	f7ff f888 	bl	8010f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8011e04:	88e2      	ldrh	r2, [r4, #6]
 8011e06:	8863      	ldrh	r3, [r4, #2]
 8011e08:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8011e0c:	4413      	add	r3, r2
 8011e0e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011e12:	440a      	add	r2, r1
 8011e14:	b29b      	uxth	r3, r3
 8011e16:	b292      	uxth	r2, r2
 8011e18:	b211      	sxth	r1, r2
 8011e1a:	b218      	sxth	r0, r3
 8011e1c:	4288      	cmp	r0, r1
 8011e1e:	f77f af7b 	ble.w	8011d18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8011e22:	1a9b      	subs	r3, r3, r2
 8011e24:	f9b4 6000 	ldrsh.w	r6, [r4]
 8011e28:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011e2c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011e30:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011e34:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011e38:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011e3c:	23ff      	movs	r3, #255	; 0xff
 8011e3e:	4642      	mov	r2, r8
 8011e40:	e782      	b.n	8011d48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8011e42:	4633      	mov	r3, r6
 8011e44:	4622      	mov	r2, r4
 8011e46:	a902      	add	r1, sp, #8
 8011e48:	4628      	mov	r0, r5
 8011e4a:	f7ff f9b9 	bl	80111c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8011e4e:	e763      	b.n	8011d18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8011e50:	9600      	str	r6, [sp, #0]
 8011e52:	4623      	mov	r3, r4
 8011e54:	aa02      	add	r2, sp, #8
 8011e56:	4649      	mov	r1, r9
 8011e58:	4628      	mov	r0, r5
 8011e5a:	f7ff fdd5 	bl	8011a08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8011e5e:	e75b      	b.n	8011d18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8011e60:	4638      	mov	r0, r7
 8011e62:	f7fb ff7d 	bl	800dd60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011e66:	b950      	cbnz	r0, 8011e7e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8011e68:	e9cd 6000 	strd	r6, r0, [sp]
 8011e6c:	f8da 3000 	ldr.w	r3, [sl]
 8011e70:	aa02      	add	r2, sp, #8
 8011e72:	68de      	ldr	r6, [r3, #12]
 8011e74:	4629      	mov	r1, r5
 8011e76:	4623      	mov	r3, r4
 8011e78:	4650      	mov	r0, sl
 8011e7a:	47b0      	blx	r6
 8011e7c:	e74c      	b.n	8011d18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8011e7e:	f10d 0818 	add.w	r8, sp, #24
 8011e82:	4639      	mov	r1, r7
 8011e84:	4640      	mov	r0, r8
 8011e86:	f7fb ff11 	bl	800dcac <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011e8a:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011e8e:	af04      	add	r7, sp, #16
 8011e90:	e887 0003 	stmia.w	r7, {r0, r1}
 8011e94:	4638      	mov	r0, r7
 8011e96:	4621      	mov	r1, r4
 8011e98:	f7f7 f862 	bl	8008f60 <_ZN8touchgfx4RectaNERKS0_>
 8011e9c:	4638      	mov	r0, r7
 8011e9e:	f7f7 f8a2 	bl	8008fe6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011ea2:	b138      	cbz	r0, 8011eb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8011ea4:	9600      	str	r6, [sp, #0]
 8011ea6:	4623      	mov	r3, r4
 8011ea8:	aa02      	add	r2, sp, #8
 8011eaa:	4649      	mov	r1, r9
 8011eac:	4628      	mov	r0, r5
 8011eae:	f7ff fdc3 	bl	8011a38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011eb2:	e731      	b.n	8011d18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8011eb4:	e9cd 6000 	strd	r6, r0, [sp]
 8011eb8:	f8da 3000 	ldr.w	r3, [sl]
 8011ebc:	aa02      	add	r2, sp, #8
 8011ebe:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8011ec2:	4629      	mov	r1, r5
 8011ec4:	463b      	mov	r3, r7
 8011ec6:	4650      	mov	r0, sl
 8011ec8:	47d8      	blx	fp
 8011eca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011ece:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011ed2:	4293      	cmp	r3, r2
 8011ed4:	dd13      	ble.n	8011efe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8011ed6:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011eda:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011ede:	f8ad 0018 	strh.w	r0, [sp, #24]
 8011ee2:	1a9b      	subs	r3, r3, r2
 8011ee4:	f8ad 201a 	strh.w	r2, [sp, #26]
 8011ee8:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011eec:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011ef0:	9600      	str	r6, [sp, #0]
 8011ef2:	4643      	mov	r3, r8
 8011ef4:	aa02      	add	r2, sp, #8
 8011ef6:	4649      	mov	r1, r9
 8011ef8:	4628      	mov	r0, r5
 8011efa:	f7ff fd9d 	bl	8011a38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011efe:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8011f02:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011f06:	4293      	cmp	r3, r2
 8011f08:	dd13      	ble.n	8011f32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8011f0a:	1a9b      	subs	r3, r3, r2
 8011f0c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8011f10:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8011f14:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011f18:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011f1c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011f20:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011f24:	9600      	str	r6, [sp, #0]
 8011f26:	4643      	mov	r3, r8
 8011f28:	aa02      	add	r2, sp, #8
 8011f2a:	4649      	mov	r1, r9
 8011f2c:	4628      	mov	r0, r5
 8011f2e:	f7ff fd83 	bl	8011a38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011f32:	88a2      	ldrh	r2, [r4, #4]
 8011f34:	8823      	ldrh	r3, [r4, #0]
 8011f36:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8011f3a:	4413      	add	r3, r2
 8011f3c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011f40:	440a      	add	r2, r1
 8011f42:	b29b      	uxth	r3, r3
 8011f44:	b292      	uxth	r2, r2
 8011f46:	b211      	sxth	r1, r2
 8011f48:	b218      	sxth	r0, r3
 8011f4a:	4288      	cmp	r0, r1
 8011f4c:	dd13      	ble.n	8011f76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8011f4e:	1a9b      	subs	r3, r3, r2
 8011f50:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8011f54:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8011f58:	f8ad 1018 	strh.w	r1, [sp, #24]
 8011f5c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011f60:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011f64:	9600      	str	r6, [sp, #0]
 8011f66:	4643      	mov	r3, r8
 8011f68:	aa02      	add	r2, sp, #8
 8011f6a:	4649      	mov	r1, r9
 8011f6c:	4628      	mov	r0, r5
 8011f6e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011f72:	f7ff fd61 	bl	8011a38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011f76:	88e2      	ldrh	r2, [r4, #6]
 8011f78:	8863      	ldrh	r3, [r4, #2]
 8011f7a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8011f7e:	4413      	add	r3, r2
 8011f80:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011f84:	440a      	add	r2, r1
 8011f86:	b29b      	uxth	r3, r3
 8011f88:	b292      	uxth	r2, r2
 8011f8a:	b211      	sxth	r1, r2
 8011f8c:	b218      	sxth	r0, r3
 8011f8e:	4288      	cmp	r0, r1
 8011f90:	f77f aec2 	ble.w	8011d18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8011f94:	f9b4 7000 	ldrsh.w	r7, [r4]
 8011f98:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011f9c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8011fa0:	1a9b      	subs	r3, r3, r2
 8011fa2:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011fa6:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011faa:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011fae:	9600      	str	r6, [sp, #0]
 8011fb0:	4643      	mov	r3, r8
 8011fb2:	e779      	b.n	8011ea8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8011fb4:	4b03      	ldr	r3, [pc, #12]	; (8011fc4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8011fb6:	4a04      	ldr	r2, [pc, #16]	; (8011fc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8011fb8:	4804      	ldr	r0, [pc, #16]	; (8011fcc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8011fba:	21b0      	movs	r1, #176	; 0xb0
 8011fbc:	f007 ff32 	bl	8019e24 <__assert_func>
 8011fc0:	2000a498 	.word	0x2000a498
 8011fc4:	0801d73c 	.word	0x0801d73c
 8011fc8:	0801de4b 	.word	0x0801de4b
 8011fcc:	0801d8c0 	.word	0x0801d8c0

08011fd0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8011fd0:	b508      	push	{r3, lr}
 8011fd2:	b180      	cbz	r0, 8011ff6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8011fd4:	2902      	cmp	r1, #2
 8011fd6:	d014      	beq.n	8012002 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8011fd8:	2903      	cmp	r1, #3
 8011fda:	d01d      	beq.n	8012018 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8011fdc:	2901      	cmp	r1, #1
 8011fde:	d101      	bne.n	8011fe4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8011fe0:	2001      	movs	r0, #1
 8011fe2:	bd08      	pop	{r3, pc}
 8011fe4:	4b0e      	ldr	r3, [pc, #56]	; (8012020 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8011fe6:	8818      	ldrh	r0, [r3, #0]
 8011fe8:	b990      	cbnz	r0, 8012010 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8011fea:	4b0e      	ldr	r3, [pc, #56]	; (8012024 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8011fec:	4a0e      	ldr	r2, [pc, #56]	; (8012028 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8011fee:	480f      	ldr	r0, [pc, #60]	; (801202c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8011ff0:	2153      	movs	r1, #83	; 0x53
 8011ff2:	f007 ff17 	bl	8019e24 <__assert_func>
 8011ff6:	2902      	cmp	r1, #2
 8011ff8:	d00e      	beq.n	8012018 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8011ffa:	2903      	cmp	r1, #3
 8011ffc:	d0f2      	beq.n	8011fe4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8011ffe:	2901      	cmp	r1, #1
 8012000:	d1ee      	bne.n	8011fe0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8012002:	4b07      	ldr	r3, [pc, #28]	; (8012020 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012004:	8818      	ldrh	r0, [r3, #0]
 8012006:	2800      	cmp	r0, #0
 8012008:	d0ef      	beq.n	8011fea <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801200a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801200e:	e7e8      	b.n	8011fe2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012010:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012014:	4240      	negs	r0, r0
 8012016:	e7e4      	b.n	8011fe2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012018:	f04f 30ff 	mov.w	r0, #4294967295
 801201c:	e7e1      	b.n	8011fe2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801201e:	bf00      	nop
 8012020:	2000a492 	.word	0x2000a492
 8012024:	0801d9b6 	.word	0x0801d9b6
 8012028:	0801dfc8 	.word	0x0801dfc8
 801202c:	0801d9f8 	.word	0x0801d9f8

08012030 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8012030:	b508      	push	{r3, lr}
 8012032:	b180      	cbz	r0, 8012056 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8012034:	2902      	cmp	r1, #2
 8012036:	d014      	beq.n	8012062 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8012038:	2903      	cmp	r1, #3
 801203a:	d018      	beq.n	801206e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801203c:	2901      	cmp	r1, #1
 801203e:	d001      	beq.n	8012044 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012040:	2001      	movs	r0, #1
 8012042:	e013      	b.n	801206c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012044:	4b0e      	ldr	r3, [pc, #56]	; (8012080 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012046:	8818      	ldrh	r0, [r3, #0]
 8012048:	b970      	cbnz	r0, 8012068 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 801204a:	4b0e      	ldr	r3, [pc, #56]	; (8012084 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 801204c:	4a0e      	ldr	r2, [pc, #56]	; (8012088 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 801204e:	480f      	ldr	r0, [pc, #60]	; (801208c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8012050:	2153      	movs	r1, #83	; 0x53
 8012052:	f007 fee7 	bl	8019e24 <__assert_func>
 8012056:	2902      	cmp	r1, #2
 8012058:	d009      	beq.n	801206e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801205a:	2903      	cmp	r1, #3
 801205c:	d0f0      	beq.n	8012040 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 801205e:	2901      	cmp	r1, #1
 8012060:	d1f0      	bne.n	8012044 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012062:	f04f 30ff 	mov.w	r0, #4294967295
 8012066:	e001      	b.n	801206c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012068:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801206c:	bd08      	pop	{r3, pc}
 801206e:	4b04      	ldr	r3, [pc, #16]	; (8012080 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012070:	8818      	ldrh	r0, [r3, #0]
 8012072:	2800      	cmp	r0, #0
 8012074:	d0e9      	beq.n	801204a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8012076:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801207a:	4240      	negs	r0, r0
 801207c:	e7f6      	b.n	801206c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801207e:	bf00      	nop
 8012080:	2000a492 	.word	0x2000a492
 8012084:	0801d9b6 	.word	0x0801d9b6
 8012088:	0801dfc8 	.word	0x0801dfc8
 801208c:	0801d9f8 	.word	0x0801d9f8

08012090 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8012090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012094:	b099      	sub	sp, #100	; 0x64
 8012096:	910b      	str	r1, [sp, #44]	; 0x2c
 8012098:	a914      	add	r1, sp, #80	; 0x50
 801209a:	e881 000c 	stmia.w	r1, {r2, r3}
 801209e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80120a2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80120a6:	930a      	str	r3, [sp, #40]	; 0x28
 80120a8:	f891 900d 	ldrb.w	r9, [r1, #13]
 80120ac:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80120b0:	9311      	str	r3, [sp, #68]	; 0x44
 80120b2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80120b6:	930c      	str	r3, [sp, #48]	; 0x30
 80120b8:	7988      	ldrb	r0, [r1, #6]
 80120ba:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 80120be:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 80120c2:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 80120c6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80120ca:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80120ce:	ea4f 1349 	mov.w	r3, r9, lsl #5
 80120d2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80120d6:	4303      	orrs	r3, r0
 80120d8:	9309      	str	r3, [sp, #36]	; 0x24
 80120da:	f000 81a1 	beq.w	8012420 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80120de:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80120e2:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80120e6:	f891 9007 	ldrb.w	r9, [r1, #7]
 80120ea:	ea59 0903 	orrs.w	r9, r9, r3
 80120ee:	f000 8197 	beq.w	8012420 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80120f2:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80120f6:	b29b      	uxth	r3, r3
 80120f8:	2e00      	cmp	r6, #0
 80120fa:	f000 813a 	beq.w	8012372 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 80120fe:	1af6      	subs	r6, r6, r3
 8012100:	b2b6      	uxth	r6, r6
 8012102:	0433      	lsls	r3, r6, #16
 8012104:	d502      	bpl.n	801210c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8012106:	1bad      	subs	r5, r5, r6
 8012108:	b22d      	sxth	r5, r5
 801210a:	2600      	movs	r6, #0
 801210c:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012110:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8012114:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8012118:	428d      	cmp	r5, r1
 801211a:	b28b      	uxth	r3, r1
 801211c:	bfbf      	itttt	lt
 801211e:	18f6      	addlt	r6, r6, r3
 8012120:	1b75      	sublt	r5, r6, r5
 8012122:	b2ae      	uxthlt	r6, r5
 8012124:	460d      	movlt	r5, r1
 8012126:	8891      	ldrh	r1, [r2, #4]
 8012128:	440b      	add	r3, r1
 801212a:	b21b      	sxth	r3, r3
 801212c:	9310      	str	r3, [sp, #64]	; 0x40
 801212e:	88d3      	ldrh	r3, [r2, #6]
 8012130:	8852      	ldrh	r2, [r2, #2]
 8012132:	4413      	add	r3, r2
 8012134:	b21b      	sxth	r3, r3
 8012136:	930f      	str	r3, [sp, #60]	; 0x3c
 8012138:	4bbc      	ldr	r3, [pc, #752]	; (801242c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801213a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801213c:	f893 b000 	ldrb.w	fp, [r3]
 8012140:	f10b 3cff 	add.w	ip, fp, #4294967295
 8012144:	f1dc 0300 	rsbs	r3, ip, #0
 8012148:	eb43 030c 	adc.w	r3, r3, ip
 801214c:	930e      	str	r3, [sp, #56]	; 0x38
 801214e:	4629      	mov	r1, r5
 8012150:	4653      	mov	r3, sl
 8012152:	a814      	add	r0, sp, #80	; 0x50
 8012154:	f7f8 fd7a 	bl	800ac4c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8012158:	4629      	mov	r1, r5
 801215a:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801215e:	4653      	mov	r3, sl
 8012160:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012162:	a814      	add	r0, sp, #80	; 0x50
 8012164:	f7f8 fd8a 	bl	800ac7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8012168:	a918      	add	r1, sp, #96	; 0x60
 801216a:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801216e:	a817      	add	r0, sp, #92	; 0x5c
 8012170:	f7f8 fea6 	bl	800aec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8012174:	f1ba 0f00 	cmp.w	sl, #0
 8012178:	f040 80fe 	bne.w	8012378 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 801217c:	f1bb 0f01 	cmp.w	fp, #1
 8012180:	f040 8102 	bne.w	8012388 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8012184:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012186:	b153      	cbz	r3, 801219e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8012188:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801218a:	2408      	movs	r4, #8
 801218c:	fb94 f3f8 	sdiv	r3, r4, r8
 8012190:	1e5c      	subs	r4, r3, #1
 8012192:	4414      	add	r4, r2
 8012194:	fb94 f4f3 	sdiv	r4, r4, r3
 8012198:	fb14 f403 	smulbb	r4, r4, r3
 801219c:	b2a4      	uxth	r4, r4
 801219e:	b906      	cbnz	r6, 80121a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 80121a0:	b16f      	cbz	r7, 80121be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 80121a2:	fb07 6304 	mla	r3, r7, r4, r6
 80121a6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80121a8:	fb08 f303 	mul.w	r3, r8, r3
 80121ac:	463a      	mov	r2, r7
 80121ae:	f003 0707 	and.w	r7, r3, #7
 80121b2:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 80121b6:	9328      	str	r3, [sp, #160]	; 0xa0
 80121b8:	eba9 0302 	sub.w	r3, r9, r2
 80121bc:	930d      	str	r3, [sp, #52]	; 0x34
 80121be:	4651      	mov	r1, sl
 80121c0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80121c2:	f7ff ff05 	bl	8011fd0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80121c6:	4651      	mov	r1, sl
 80121c8:	4681      	mov	r9, r0
 80121ca:	980e      	ldr	r0, [sp, #56]	; 0x38
 80121cc:	f7ff ff30 	bl	8012030 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80121d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80121d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80121d4:	eba3 0a02 	sub.w	sl, r3, r2
 80121d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80121da:	459a      	cmp	sl, r3
 80121dc:	bfa8      	it	ge
 80121de:	469a      	movge	sl, r3
 80121e0:	f1ba 0f00 	cmp.w	sl, #0
 80121e4:	4683      	mov	fp, r0
 80121e6:	f340 811b 	ble.w	8012420 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80121ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80121ec:	1bad      	subs	r5, r5, r6
 80121ee:	1b5d      	subs	r5, r3, r5
 80121f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80121f2:	429d      	cmp	r5, r3
 80121f4:	bfd4      	ite	le
 80121f6:	ebc6 0605 	rsble	r6, r6, r5
 80121fa:	ebc6 0603 	rsbgt	r6, r6, r3
 80121fe:	2e00      	cmp	r6, #0
 8012200:	f340 810e 	ble.w	8012420 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8012204:	1ba4      	subs	r4, r4, r6
 8012206:	fb08 f304 	mul.w	r3, r8, r4
 801220a:	930f      	str	r3, [sp, #60]	; 0x3c
 801220c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801220e:	2b00      	cmp	r3, #0
 8012210:	f040 8114 	bne.w	801243c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8012214:	4b86      	ldr	r3, [pc, #536]	; (8012430 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8012216:	6818      	ldr	r0, [r3, #0]
 8012218:	6803      	ldr	r3, [r0, #0]
 801221a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801221c:	4798      	blx	r3
 801221e:	2301      	movs	r3, #1
 8012220:	fa03 f308 	lsl.w	r3, r3, r8
 8012224:	4a83      	ldr	r2, [pc, #524]	; (8012434 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8012226:	3b01      	subs	r3, #1
 8012228:	b2db      	uxtb	r3, r3
 801222a:	8811      	ldrh	r1, [r2, #0]
 801222c:	930e      	str	r3, [sp, #56]	; 0x38
 801222e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8012232:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8012236:	fb01 2303 	mla	r3, r1, r3, r2
 801223a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801223e:	930a      	str	r3, [sp, #40]	; 0x28
 8012240:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012242:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8012246:	9313      	str	r3, [sp, #76]	; 0x4c
 8012248:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801224a:	0a19      	lsrs	r1, r3, #8
 801224c:	b2cb      	uxtb	r3, r1
 801224e:	9312      	str	r3, [sp, #72]	; 0x48
 8012250:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012252:	b2db      	uxtb	r3, r3
 8012254:	9311      	str	r3, [sp, #68]	; 0x44
 8012256:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012258:	095a      	lsrs	r2, r3, #5
 801225a:	4b77      	ldr	r3, [pc, #476]	; (8012438 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801225c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012260:	400b      	ands	r3, r1
 8012262:	4313      	orrs	r3, r2
 8012264:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8012266:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801226a:	4313      	orrs	r3, r2
 801226c:	b29b      	uxth	r3, r3
 801226e:	9310      	str	r3, [sp, #64]	; 0x40
 8012270:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012272:	781a      	ldrb	r2, [r3, #0]
 8012274:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8012278:	413a      	asrs	r2, r7
 801227a:	fb06 b919 	mls	r9, r6, r9, fp
 801227e:	fb03 fb06 	mul.w	fp, r3, r6
 8012282:	b2d2      	uxtb	r2, r2
 8012284:	930d      	str	r3, [sp, #52]	; 0x34
 8012286:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801228a:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801228e:	f0c0 80ea 	bcc.w	8012466 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 8012292:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8012296:	46b6      	mov	lr, r6
 8012298:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801229c:	f0c0 80d2 	bcc.w	8012444 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80122a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80122a2:	4013      	ands	r3, r2
 80122a4:	d055      	beq.n	8012352 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 80122a6:	20ff      	movs	r0, #255	; 0xff
 80122a8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80122aa:	fb90 f1f1 	sdiv	r1, r0, r1
 80122ae:	434b      	muls	r3, r1
 80122b0:	2bfe      	cmp	r3, #254	; 0xfe
 80122b2:	dd03      	ble.n	80122bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 80122b4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80122b6:	4281      	cmp	r1, r0
 80122b8:	f000 80c2 	beq.w	8012440 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80122bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80122be:	f8bc 4000 	ldrh.w	r4, [ip]
 80122c2:	fb11 f303 	smulbb	r3, r1, r3
 80122c6:	b29b      	uxth	r3, r3
 80122c8:	1c59      	adds	r1, r3, #1
 80122ca:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80122ce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80122d2:	b29d      	uxth	r5, r3
 80122d4:	43db      	mvns	r3, r3
 80122d6:	b2db      	uxtb	r3, r3
 80122d8:	9309      	str	r3, [sp, #36]	; 0x24
 80122da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80122dc:	1220      	asrs	r0, r4, #8
 80122de:	fb13 f905 	smulbb	r9, r3, r5
 80122e2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80122e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80122e8:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80122ec:	fb00 9003 	mla	r0, r0, r3, r9
 80122f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80122f2:	10e1      	asrs	r1, r4, #3
 80122f4:	fb13 f905 	smulbb	r9, r3, r5
 80122f8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80122fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80122fe:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8012302:	fb01 9103 	mla	r1, r1, r3, r9
 8012306:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012308:	00e4      	lsls	r4, r4, #3
 801230a:	fb13 f505 	smulbb	r5, r3, r5
 801230e:	b2e4      	uxtb	r4, r4
 8012310:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012312:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8012316:	fb04 5403 	mla	r4, r4, r3, r5
 801231a:	b280      	uxth	r0, r0
 801231c:	b2a4      	uxth	r4, r4
 801231e:	1c43      	adds	r3, r0, #1
 8012320:	f104 0901 	add.w	r9, r4, #1
 8012324:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012328:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801232c:	b289      	uxth	r1, r1
 801232e:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8012332:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8012336:	ea49 0000 	orr.w	r0, r9, r0
 801233a:	f101 0901 	add.w	r9, r1, #1
 801233e:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8012342:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012346:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801234a:	ea40 0009 	orr.w	r0, r0, r9
 801234e:	f8ac 0000 	strh.w	r0, [ip]
 8012352:	4447      	add	r7, r8
 8012354:	b2bf      	uxth	r7, r7
 8012356:	2f07      	cmp	r7, #7
 8012358:	bf81      	itttt	hi
 801235a:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801235c:	785a      	ldrbhi	r2, [r3, #1]
 801235e:	3301      	addhi	r3, #1
 8012360:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8012362:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012364:	bf9a      	itte	ls
 8012366:	fa42 f208 	asrls.w	r2, r2, r8
 801236a:	b2d2      	uxtbls	r2, r2
 801236c:	2700      	movhi	r7, #0
 801236e:	449c      	add	ip, r3
 8012370:	e792      	b.n	8012298 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8012372:	441d      	add	r5, r3
 8012374:	b22d      	sxth	r5, r5
 8012376:	e6c9      	b.n	801210c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8012378:	f1ba 0f01 	cmp.w	sl, #1
 801237c:	f47f af02 	bne.w	8012184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8012380:	f1bb 0f01 	cmp.w	fp, #1
 8012384:	f47f aefe 	bne.w	8012184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8012388:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 8012430 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801238c:	f8db 0000 	ldr.w	r0, [fp]
 8012390:	6803      	ldr	r3, [r0, #0]
 8012392:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012394:	4798      	blx	r3
 8012396:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801239a:	465a      	mov	r2, fp
 801239c:	d006      	beq.n	80123ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801239e:	f1b8 0f04 	cmp.w	r8, #4
 80123a2:	d140      	bne.n	8012426 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80123a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80123a6:	3300      	adds	r3, #0
 80123a8:	bf18      	it	ne
 80123aa:	2301      	movne	r3, #1
 80123ac:	0580      	lsls	r0, r0, #22
 80123ae:	d563      	bpl.n	8012478 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 80123b0:	f1b8 0f08 	cmp.w	r8, #8
 80123b4:	d160      	bne.n	8012478 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 80123b6:	2b00      	cmp	r3, #0
 80123b8:	bf0c      	ite	eq
 80123ba:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80123be:	f44f 7180 	movne.w	r1, #256	; 0x100
 80123c2:	2e00      	cmp	r6, #0
 80123c4:	f47f aede 	bne.w	8012184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80123c8:	2f00      	cmp	r7, #0
 80123ca:	f47f aedb 	bne.w	8012184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80123ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80123d0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80123d2:	18eb      	adds	r3, r5, r3
 80123d4:	4283      	cmp	r3, r0
 80123d6:	f73f aed5 	bgt.w	8012184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80123da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80123dc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80123de:	444b      	add	r3, r9
 80123e0:	4283      	cmp	r3, r0
 80123e2:	f73f aecf 	bgt.w	8012184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80123e6:	6810      	ldr	r0, [r2, #0]
 80123e8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80123ec:	6805      	ldr	r5, [r0, #0]
 80123ee:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80123f2:	f1b8 0f08 	cmp.w	r8, #8
 80123f6:	f04f 0600 	mov.w	r6, #0
 80123fa:	bf18      	it	ne
 80123fc:	3401      	addne	r4, #1
 80123fe:	e9cd 1605 	strd	r1, r6, [sp, #20]
 8012402:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012404:	9104      	str	r1, [sp, #16]
 8012406:	bf18      	it	ne
 8012408:	f024 0401 	bicne.w	r4, r4, #1
 801240c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801240e:	bf18      	it	ne
 8012410:	b2a4      	uxthne	r4, r4
 8012412:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8012416:	e9cd 4900 	strd	r4, r9, [sp]
 801241a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801241c:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 801241e:	47a0      	blx	r4
 8012420:	b019      	add	sp, #100	; 0x64
 8012422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012426:	2300      	movs	r3, #0
 8012428:	e7c0      	b.n	80123ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 801242a:	bf00      	nop
 801242c:	2000a490 	.word	0x2000a490
 8012430:	2000a498 	.word	0x2000a498
 8012434:	2000a492 	.word	0x2000a492
 8012438:	00fff800 	.word	0x00fff800
 801243c:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801243e:	e6ee      	b.n	801221e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 8012440:	9810      	ldr	r0, [sp, #64]	; 0x40
 8012442:	e784      	b.n	801234e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 8012444:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012446:	b153      	cbz	r3, 801245e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 8012448:	441f      	add	r7, r3
 801244a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801244c:	b2bf      	uxth	r7, r7
 801244e:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8012452:	f007 0707 	and.w	r7, r7, #7
 8012456:	781a      	ldrb	r2, [r3, #0]
 8012458:	9328      	str	r3, [sp, #160]	; 0xa0
 801245a:	413a      	asrs	r2, r7
 801245c:	b2d2      	uxtb	r2, r2
 801245e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012460:	445b      	add	r3, fp
 8012462:	930a      	str	r3, [sp, #40]	; 0x28
 8012464:	e711      	b.n	801228a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 8012466:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012468:	2b00      	cmp	r3, #0
 801246a:	d1d9      	bne.n	8012420 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801246c:	4b05      	ldr	r3, [pc, #20]	; (8012484 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 801246e:	6818      	ldr	r0, [r3, #0]
 8012470:	6803      	ldr	r3, [r0, #0]
 8012472:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012474:	4798      	blx	r3
 8012476:	e7d3      	b.n	8012420 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8012478:	2b00      	cmp	r3, #0
 801247a:	f43f ae83 	beq.w	8012184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801247e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8012482:	e79e      	b.n	80123c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 8012484:	2000a498 	.word	0x2000a498

08012488 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8012488:	b538      	push	{r3, r4, r5, lr}
 801248a:	4c15      	ldr	r4, [pc, #84]	; (80124e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801248c:	7823      	ldrb	r3, [r4, #0]
 801248e:	f3bf 8f5b 	dmb	ish
 8012492:	07da      	lsls	r2, r3, #31
 8012494:	4605      	mov	r5, r0
 8012496:	d40b      	bmi.n	80124b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8012498:	4620      	mov	r0, r4
 801249a:	f007 fc96 	bl	8019dca <__cxa_guard_acquire>
 801249e:	b138      	cbz	r0, 80124b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80124a0:	4620      	mov	r0, r4
 80124a2:	f007 fc9e 	bl	8019de2 <__cxa_guard_release>
 80124a6:	4a0f      	ldr	r2, [pc, #60]	; (80124e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80124a8:	490f      	ldr	r1, [pc, #60]	; (80124e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80124aa:	4810      	ldr	r0, [pc, #64]	; (80124ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80124ac:	f007 fc86 	bl	8019dbc <__aeabi_atexit>
 80124b0:	4c0f      	ldr	r4, [pc, #60]	; (80124f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80124b2:	7823      	ldrb	r3, [r4, #0]
 80124b4:	f3bf 8f5b 	dmb	ish
 80124b8:	07db      	lsls	r3, r3, #31
 80124ba:	d40b      	bmi.n	80124d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80124bc:	4620      	mov	r0, r4
 80124be:	f007 fc84 	bl	8019dca <__cxa_guard_acquire>
 80124c2:	b138      	cbz	r0, 80124d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80124c4:	4620      	mov	r0, r4
 80124c6:	f007 fc8c 	bl	8019de2 <__cxa_guard_release>
 80124ca:	4a06      	ldr	r2, [pc, #24]	; (80124e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80124cc:	4909      	ldr	r1, [pc, #36]	; (80124f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80124ce:	480a      	ldr	r0, [pc, #40]	; (80124f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80124d0:	f007 fc74 	bl	8019dbc <__aeabi_atexit>
 80124d4:	4b05      	ldr	r3, [pc, #20]	; (80124ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80124d6:	612b      	str	r3, [r5, #16]
 80124d8:	4b07      	ldr	r3, [pc, #28]	; (80124f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80124da:	616b      	str	r3, [r5, #20]
 80124dc:	bd38      	pop	{r3, r4, r5, pc}
 80124de:	bf00      	nop
 80124e0:	2000a564 	.word	0x2000a564
 80124e4:	20000000 	.word	0x20000000
 80124e8:	080104e9 	.word	0x080104e9
 80124ec:	200000a4 	.word	0x200000a4
 80124f0:	2000a568 	.word	0x2000a568
 80124f4:	080104e7 	.word	0x080104e7
 80124f8:	200000a8 	.word	0x200000a8

080124fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80124fc:	b538      	push	{r3, r4, r5, lr}
 80124fe:	4c15      	ldr	r4, [pc, #84]	; (8012554 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8012500:	7823      	ldrb	r3, [r4, #0]
 8012502:	f3bf 8f5b 	dmb	ish
 8012506:	07da      	lsls	r2, r3, #31
 8012508:	4605      	mov	r5, r0
 801250a:	d40b      	bmi.n	8012524 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801250c:	4620      	mov	r0, r4
 801250e:	f007 fc5c 	bl	8019dca <__cxa_guard_acquire>
 8012512:	b138      	cbz	r0, 8012524 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8012514:	4620      	mov	r0, r4
 8012516:	f007 fc64 	bl	8019de2 <__cxa_guard_release>
 801251a:	4a0f      	ldr	r2, [pc, #60]	; (8012558 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801251c:	490f      	ldr	r1, [pc, #60]	; (801255c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801251e:	4810      	ldr	r0, [pc, #64]	; (8012560 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8012520:	f007 fc4c 	bl	8019dbc <__aeabi_atexit>
 8012524:	4c0f      	ldr	r4, [pc, #60]	; (8012564 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8012526:	7823      	ldrb	r3, [r4, #0]
 8012528:	f3bf 8f5b 	dmb	ish
 801252c:	07db      	lsls	r3, r3, #31
 801252e:	d40b      	bmi.n	8012548 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8012530:	4620      	mov	r0, r4
 8012532:	f007 fc4a 	bl	8019dca <__cxa_guard_acquire>
 8012536:	b138      	cbz	r0, 8012548 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8012538:	4620      	mov	r0, r4
 801253a:	f007 fc52 	bl	8019de2 <__cxa_guard_release>
 801253e:	4a06      	ldr	r2, [pc, #24]	; (8012558 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8012540:	4909      	ldr	r1, [pc, #36]	; (8012568 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8012542:	480a      	ldr	r0, [pc, #40]	; (801256c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8012544:	f007 fc3a 	bl	8019dbc <__aeabi_atexit>
 8012548:	4b05      	ldr	r3, [pc, #20]	; (8012560 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801254a:	60ab      	str	r3, [r5, #8]
 801254c:	4b07      	ldr	r3, [pc, #28]	; (801256c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801254e:	60eb      	str	r3, [r5, #12]
 8012550:	bd38      	pop	{r3, r4, r5, pc}
 8012552:	bf00      	nop
 8012554:	2000a53c 	.word	0x2000a53c
 8012558:	20000000 	.word	0x20000000
 801255c:	080104ed 	.word	0x080104ed
 8012560:	2000007c 	.word	0x2000007c
 8012564:	2000a540 	.word	0x2000a540
 8012568:	080104eb 	.word	0x080104eb
 801256c:	20000080 	.word	0x20000080

08012570 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8012570:	b510      	push	{r4, lr}
 8012572:	4604      	mov	r4, r0
 8012574:	f7ff ff88 	bl	8012488 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8012578:	4620      	mov	r0, r4
 801257a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801257e:	f7ff bfbd 	b.w	80124fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08012584 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8012584:	b538      	push	{r3, r4, r5, lr}
 8012586:	4c15      	ldr	r4, [pc, #84]	; (80125dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8012588:	7823      	ldrb	r3, [r4, #0]
 801258a:	f3bf 8f5b 	dmb	ish
 801258e:	07da      	lsls	r2, r3, #31
 8012590:	4605      	mov	r5, r0
 8012592:	d40b      	bmi.n	80125ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8012594:	4620      	mov	r0, r4
 8012596:	f007 fc18 	bl	8019dca <__cxa_guard_acquire>
 801259a:	b138      	cbz	r0, 80125ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801259c:	4620      	mov	r0, r4
 801259e:	f007 fc20 	bl	8019de2 <__cxa_guard_release>
 80125a2:	4a0f      	ldr	r2, [pc, #60]	; (80125e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80125a4:	490f      	ldr	r1, [pc, #60]	; (80125e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80125a6:	4810      	ldr	r0, [pc, #64]	; (80125e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80125a8:	f007 fc08 	bl	8019dbc <__aeabi_atexit>
 80125ac:	4c0f      	ldr	r4, [pc, #60]	; (80125ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80125ae:	7823      	ldrb	r3, [r4, #0]
 80125b0:	f3bf 8f5b 	dmb	ish
 80125b4:	07db      	lsls	r3, r3, #31
 80125b6:	d40b      	bmi.n	80125d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80125b8:	4620      	mov	r0, r4
 80125ba:	f007 fc06 	bl	8019dca <__cxa_guard_acquire>
 80125be:	b138      	cbz	r0, 80125d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80125c0:	4620      	mov	r0, r4
 80125c2:	f007 fc0e 	bl	8019de2 <__cxa_guard_release>
 80125c6:	4a06      	ldr	r2, [pc, #24]	; (80125e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80125c8:	4909      	ldr	r1, [pc, #36]	; (80125f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80125ca:	480a      	ldr	r0, [pc, #40]	; (80125f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80125cc:	f007 fbf6 	bl	8019dbc <__aeabi_atexit>
 80125d0:	4b05      	ldr	r3, [pc, #20]	; (80125e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80125d2:	622b      	str	r3, [r5, #32]
 80125d4:	4b07      	ldr	r3, [pc, #28]	; (80125f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80125d6:	626b      	str	r3, [r5, #36]	; 0x24
 80125d8:	bd38      	pop	{r3, r4, r5, pc}
 80125da:	bf00      	nop
 80125dc:	2000a56c 	.word	0x2000a56c
 80125e0:	20000000 	.word	0x20000000
 80125e4:	080104e1 	.word	0x080104e1
 80125e8:	200000ac 	.word	0x200000ac
 80125ec:	2000a570 	.word	0x2000a570
 80125f0:	080104df 	.word	0x080104df
 80125f4:	200000b0 	.word	0x200000b0

080125f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80125f8:	b538      	push	{r3, r4, r5, lr}
 80125fa:	4c15      	ldr	r4, [pc, #84]	; (8012650 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80125fc:	7823      	ldrb	r3, [r4, #0]
 80125fe:	f3bf 8f5b 	dmb	ish
 8012602:	07da      	lsls	r2, r3, #31
 8012604:	4605      	mov	r5, r0
 8012606:	d40b      	bmi.n	8012620 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8012608:	4620      	mov	r0, r4
 801260a:	f007 fbde 	bl	8019dca <__cxa_guard_acquire>
 801260e:	b138      	cbz	r0, 8012620 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8012610:	4620      	mov	r0, r4
 8012612:	f007 fbe6 	bl	8019de2 <__cxa_guard_release>
 8012616:	4a0f      	ldr	r2, [pc, #60]	; (8012654 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8012618:	490f      	ldr	r1, [pc, #60]	; (8012658 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801261a:	4810      	ldr	r0, [pc, #64]	; (801265c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801261c:	f007 fbce 	bl	8019dbc <__aeabi_atexit>
 8012620:	4c0f      	ldr	r4, [pc, #60]	; (8012660 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8012622:	7823      	ldrb	r3, [r4, #0]
 8012624:	f3bf 8f5b 	dmb	ish
 8012628:	07db      	lsls	r3, r3, #31
 801262a:	d40b      	bmi.n	8012644 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801262c:	4620      	mov	r0, r4
 801262e:	f007 fbcc 	bl	8019dca <__cxa_guard_acquire>
 8012632:	b138      	cbz	r0, 8012644 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8012634:	4620      	mov	r0, r4
 8012636:	f007 fbd4 	bl	8019de2 <__cxa_guard_release>
 801263a:	4a06      	ldr	r2, [pc, #24]	; (8012654 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801263c:	4909      	ldr	r1, [pc, #36]	; (8012664 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801263e:	480a      	ldr	r0, [pc, #40]	; (8012668 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8012640:	f007 fbbc 	bl	8019dbc <__aeabi_atexit>
 8012644:	4b05      	ldr	r3, [pc, #20]	; (801265c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8012646:	61ab      	str	r3, [r5, #24]
 8012648:	4b07      	ldr	r3, [pc, #28]	; (8012668 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801264a:	61eb      	str	r3, [r5, #28]
 801264c:	bd38      	pop	{r3, r4, r5, pc}
 801264e:	bf00      	nop
 8012650:	2000a544 	.word	0x2000a544
 8012654:	20000000 	.word	0x20000000
 8012658:	080104e5 	.word	0x080104e5
 801265c:	20000084 	.word	0x20000084
 8012660:	2000a548 	.word	0x2000a548
 8012664:	080104e3 	.word	0x080104e3
 8012668:	20000088 	.word	0x20000088

0801266c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801266c:	b510      	push	{r4, lr}
 801266e:	4604      	mov	r4, r0
 8012670:	f7ff ff88 	bl	8012584 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8012674:	4620      	mov	r0, r4
 8012676:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801267a:	f7ff bfbd 	b.w	80125f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08012680 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8012680:	b538      	push	{r3, r4, r5, lr}
 8012682:	4c15      	ldr	r4, [pc, #84]	; (80126d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8012684:	7823      	ldrb	r3, [r4, #0]
 8012686:	f3bf 8f5b 	dmb	ish
 801268a:	07da      	lsls	r2, r3, #31
 801268c:	4605      	mov	r5, r0
 801268e:	d40b      	bmi.n	80126a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8012690:	4620      	mov	r0, r4
 8012692:	f007 fb9a 	bl	8019dca <__cxa_guard_acquire>
 8012696:	b138      	cbz	r0, 80126a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8012698:	4620      	mov	r0, r4
 801269a:	f007 fba2 	bl	8019de2 <__cxa_guard_release>
 801269e:	4a0f      	ldr	r2, [pc, #60]	; (80126dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80126a0:	490f      	ldr	r1, [pc, #60]	; (80126e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80126a2:	4810      	ldr	r0, [pc, #64]	; (80126e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80126a4:	f007 fb8a 	bl	8019dbc <__aeabi_atexit>
 80126a8:	4c0f      	ldr	r4, [pc, #60]	; (80126e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80126aa:	7823      	ldrb	r3, [r4, #0]
 80126ac:	f3bf 8f5b 	dmb	ish
 80126b0:	07db      	lsls	r3, r3, #31
 80126b2:	d40b      	bmi.n	80126cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80126b4:	4620      	mov	r0, r4
 80126b6:	f007 fb88 	bl	8019dca <__cxa_guard_acquire>
 80126ba:	b138      	cbz	r0, 80126cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80126bc:	4620      	mov	r0, r4
 80126be:	f007 fb90 	bl	8019de2 <__cxa_guard_release>
 80126c2:	4a06      	ldr	r2, [pc, #24]	; (80126dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80126c4:	4909      	ldr	r1, [pc, #36]	; (80126ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80126c6:	480a      	ldr	r0, [pc, #40]	; (80126f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80126c8:	f007 fb78 	bl	8019dbc <__aeabi_atexit>
 80126cc:	4b05      	ldr	r3, [pc, #20]	; (80126e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80126ce:	632b      	str	r3, [r5, #48]	; 0x30
 80126d0:	4b07      	ldr	r3, [pc, #28]	; (80126f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80126d2:	636b      	str	r3, [r5, #52]	; 0x34
 80126d4:	bd38      	pop	{r3, r4, r5, pc}
 80126d6:	bf00      	nop
 80126d8:	2000a57c 	.word	0x2000a57c
 80126dc:	20000000 	.word	0x20000000
 80126e0:	080104d9 	.word	0x080104d9
 80126e4:	200000bc 	.word	0x200000bc
 80126e8:	2000a580 	.word	0x2000a580
 80126ec:	080104d7 	.word	0x080104d7
 80126f0:	200000c0 	.word	0x200000c0

080126f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80126f4:	b538      	push	{r3, r4, r5, lr}
 80126f6:	4c15      	ldr	r4, [pc, #84]	; (801274c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80126f8:	7823      	ldrb	r3, [r4, #0]
 80126fa:	f3bf 8f5b 	dmb	ish
 80126fe:	07da      	lsls	r2, r3, #31
 8012700:	4605      	mov	r5, r0
 8012702:	d40b      	bmi.n	801271c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8012704:	4620      	mov	r0, r4
 8012706:	f007 fb60 	bl	8019dca <__cxa_guard_acquire>
 801270a:	b138      	cbz	r0, 801271c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801270c:	4620      	mov	r0, r4
 801270e:	f007 fb68 	bl	8019de2 <__cxa_guard_release>
 8012712:	4a0f      	ldr	r2, [pc, #60]	; (8012750 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8012714:	490f      	ldr	r1, [pc, #60]	; (8012754 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8012716:	4810      	ldr	r0, [pc, #64]	; (8012758 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8012718:	f007 fb50 	bl	8019dbc <__aeabi_atexit>
 801271c:	4c0f      	ldr	r4, [pc, #60]	; (801275c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801271e:	7823      	ldrb	r3, [r4, #0]
 8012720:	f3bf 8f5b 	dmb	ish
 8012724:	07db      	lsls	r3, r3, #31
 8012726:	d40b      	bmi.n	8012740 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8012728:	4620      	mov	r0, r4
 801272a:	f007 fb4e 	bl	8019dca <__cxa_guard_acquire>
 801272e:	b138      	cbz	r0, 8012740 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8012730:	4620      	mov	r0, r4
 8012732:	f007 fb56 	bl	8019de2 <__cxa_guard_release>
 8012736:	4a06      	ldr	r2, [pc, #24]	; (8012750 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8012738:	4909      	ldr	r1, [pc, #36]	; (8012760 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801273a:	480a      	ldr	r0, [pc, #40]	; (8012764 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801273c:	f007 fb3e 	bl	8019dbc <__aeabi_atexit>
 8012740:	4b05      	ldr	r3, [pc, #20]	; (8012758 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8012742:	62ab      	str	r3, [r5, #40]	; 0x28
 8012744:	4b07      	ldr	r3, [pc, #28]	; (8012764 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8012746:	62eb      	str	r3, [r5, #44]	; 0x2c
 8012748:	bd38      	pop	{r3, r4, r5, pc}
 801274a:	bf00      	nop
 801274c:	2000a54c 	.word	0x2000a54c
 8012750:	20000000 	.word	0x20000000
 8012754:	080104dd 	.word	0x080104dd
 8012758:	2000008c 	.word	0x2000008c
 801275c:	2000a550 	.word	0x2000a550
 8012760:	080104db 	.word	0x080104db
 8012764:	20000090 	.word	0x20000090

08012768 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8012768:	b510      	push	{r4, lr}
 801276a:	4604      	mov	r4, r0
 801276c:	f7ff ff88 	bl	8012680 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8012770:	4620      	mov	r0, r4
 8012772:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012776:	f7ff bfbd 	b.w	80126f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801277c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801277c:	b538      	push	{r3, r4, r5, lr}
 801277e:	4c15      	ldr	r4, [pc, #84]	; (80127d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8012780:	7823      	ldrb	r3, [r4, #0]
 8012782:	f3bf 8f5b 	dmb	ish
 8012786:	07da      	lsls	r2, r3, #31
 8012788:	4605      	mov	r5, r0
 801278a:	d40b      	bmi.n	80127a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801278c:	4620      	mov	r0, r4
 801278e:	f007 fb1c 	bl	8019dca <__cxa_guard_acquire>
 8012792:	b138      	cbz	r0, 80127a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8012794:	4620      	mov	r0, r4
 8012796:	f007 fb24 	bl	8019de2 <__cxa_guard_release>
 801279a:	4a0f      	ldr	r2, [pc, #60]	; (80127d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801279c:	490f      	ldr	r1, [pc, #60]	; (80127dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801279e:	4810      	ldr	r0, [pc, #64]	; (80127e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80127a0:	f007 fb0c 	bl	8019dbc <__aeabi_atexit>
 80127a4:	4c0f      	ldr	r4, [pc, #60]	; (80127e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80127a6:	7823      	ldrb	r3, [r4, #0]
 80127a8:	f3bf 8f5b 	dmb	ish
 80127ac:	07db      	lsls	r3, r3, #31
 80127ae:	d40b      	bmi.n	80127c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80127b0:	4620      	mov	r0, r4
 80127b2:	f007 fb0a 	bl	8019dca <__cxa_guard_acquire>
 80127b6:	b138      	cbz	r0, 80127c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80127b8:	4620      	mov	r0, r4
 80127ba:	f007 fb12 	bl	8019de2 <__cxa_guard_release>
 80127be:	4a06      	ldr	r2, [pc, #24]	; (80127d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80127c0:	4909      	ldr	r1, [pc, #36]	; (80127e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80127c2:	480a      	ldr	r0, [pc, #40]	; (80127ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80127c4:	f007 fafa 	bl	8019dbc <__aeabi_atexit>
 80127c8:	4b05      	ldr	r3, [pc, #20]	; (80127e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80127ca:	652b      	str	r3, [r5, #80]	; 0x50
 80127cc:	4b07      	ldr	r3, [pc, #28]	; (80127ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80127ce:	656b      	str	r3, [r5, #84]	; 0x54
 80127d0:	bd38      	pop	{r3, r4, r5, pc}
 80127d2:	bf00      	nop
 80127d4:	2000a584 	.word	0x2000a584
 80127d8:	20000000 	.word	0x20000000
 80127dc:	080104c9 	.word	0x080104c9
 80127e0:	200000c4 	.word	0x200000c4
 80127e4:	2000a588 	.word	0x2000a588
 80127e8:	080104c7 	.word	0x080104c7
 80127ec:	200000c8 	.word	0x200000c8

080127f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80127f0:	b538      	push	{r3, r4, r5, lr}
 80127f2:	4c15      	ldr	r4, [pc, #84]	; (8012848 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80127f4:	7823      	ldrb	r3, [r4, #0]
 80127f6:	f3bf 8f5b 	dmb	ish
 80127fa:	07da      	lsls	r2, r3, #31
 80127fc:	4605      	mov	r5, r0
 80127fe:	d40b      	bmi.n	8012818 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8012800:	4620      	mov	r0, r4
 8012802:	f007 fae2 	bl	8019dca <__cxa_guard_acquire>
 8012806:	b138      	cbz	r0, 8012818 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8012808:	4620      	mov	r0, r4
 801280a:	f007 faea 	bl	8019de2 <__cxa_guard_release>
 801280e:	4a0f      	ldr	r2, [pc, #60]	; (801284c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8012810:	490f      	ldr	r1, [pc, #60]	; (8012850 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8012812:	4810      	ldr	r0, [pc, #64]	; (8012854 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8012814:	f007 fad2 	bl	8019dbc <__aeabi_atexit>
 8012818:	4c0f      	ldr	r4, [pc, #60]	; (8012858 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801281a:	7823      	ldrb	r3, [r4, #0]
 801281c:	f3bf 8f5b 	dmb	ish
 8012820:	07db      	lsls	r3, r3, #31
 8012822:	d40b      	bmi.n	801283c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8012824:	4620      	mov	r0, r4
 8012826:	f007 fad0 	bl	8019dca <__cxa_guard_acquire>
 801282a:	b138      	cbz	r0, 801283c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801282c:	4620      	mov	r0, r4
 801282e:	f007 fad8 	bl	8019de2 <__cxa_guard_release>
 8012832:	4a06      	ldr	r2, [pc, #24]	; (801284c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8012834:	4909      	ldr	r1, [pc, #36]	; (801285c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8012836:	480a      	ldr	r0, [pc, #40]	; (8012860 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8012838:	f007 fac0 	bl	8019dbc <__aeabi_atexit>
 801283c:	4b05      	ldr	r3, [pc, #20]	; (8012854 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801283e:	64ab      	str	r3, [r5, #72]	; 0x48
 8012840:	4b07      	ldr	r3, [pc, #28]	; (8012860 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8012842:	64eb      	str	r3, [r5, #76]	; 0x4c
 8012844:	bd38      	pop	{r3, r4, r5, pc}
 8012846:	bf00      	nop
 8012848:	2000a58c 	.word	0x2000a58c
 801284c:	20000000 	.word	0x20000000
 8012850:	080104cd 	.word	0x080104cd
 8012854:	200000cc 	.word	0x200000cc
 8012858:	2000a590 	.word	0x2000a590
 801285c:	080104cb 	.word	0x080104cb
 8012860:	200000d0 	.word	0x200000d0

08012864 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8012864:	b538      	push	{r3, r4, r5, lr}
 8012866:	4c15      	ldr	r4, [pc, #84]	; (80128bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8012868:	7823      	ldrb	r3, [r4, #0]
 801286a:	f3bf 8f5b 	dmb	ish
 801286e:	07da      	lsls	r2, r3, #31
 8012870:	4605      	mov	r5, r0
 8012872:	d40b      	bmi.n	801288c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8012874:	4620      	mov	r0, r4
 8012876:	f007 faa8 	bl	8019dca <__cxa_guard_acquire>
 801287a:	b138      	cbz	r0, 801288c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801287c:	4620      	mov	r0, r4
 801287e:	f007 fab0 	bl	8019de2 <__cxa_guard_release>
 8012882:	4a0f      	ldr	r2, [pc, #60]	; (80128c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8012884:	490f      	ldr	r1, [pc, #60]	; (80128c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8012886:	4810      	ldr	r0, [pc, #64]	; (80128c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8012888:	f007 fa98 	bl	8019dbc <__aeabi_atexit>
 801288c:	4c0f      	ldr	r4, [pc, #60]	; (80128cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801288e:	7823      	ldrb	r3, [r4, #0]
 8012890:	f3bf 8f5b 	dmb	ish
 8012894:	07db      	lsls	r3, r3, #31
 8012896:	d40b      	bmi.n	80128b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8012898:	4620      	mov	r0, r4
 801289a:	f007 fa96 	bl	8019dca <__cxa_guard_acquire>
 801289e:	b138      	cbz	r0, 80128b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80128a0:	4620      	mov	r0, r4
 80128a2:	f007 fa9e 	bl	8019de2 <__cxa_guard_release>
 80128a6:	4a06      	ldr	r2, [pc, #24]	; (80128c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80128a8:	4909      	ldr	r1, [pc, #36]	; (80128d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80128aa:	480a      	ldr	r0, [pc, #40]	; (80128d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80128ac:	f007 fa86 	bl	8019dbc <__aeabi_atexit>
 80128b0:	4b05      	ldr	r3, [pc, #20]	; (80128c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80128b2:	642b      	str	r3, [r5, #64]	; 0x40
 80128b4:	4b07      	ldr	r3, [pc, #28]	; (80128d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80128b6:	646b      	str	r3, [r5, #68]	; 0x44
 80128b8:	bd38      	pop	{r3, r4, r5, pc}
 80128ba:	bf00      	nop
 80128bc:	2000a554 	.word	0x2000a554
 80128c0:	20000000 	.word	0x20000000
 80128c4:	080104d1 	.word	0x080104d1
 80128c8:	20000094 	.word	0x20000094
 80128cc:	2000a558 	.word	0x2000a558
 80128d0:	080104cf 	.word	0x080104cf
 80128d4:	20000098 	.word	0x20000098

080128d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80128d8:	b538      	push	{r3, r4, r5, lr}
 80128da:	4c15      	ldr	r4, [pc, #84]	; (8012930 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80128dc:	7823      	ldrb	r3, [r4, #0]
 80128de:	f3bf 8f5b 	dmb	ish
 80128e2:	07da      	lsls	r2, r3, #31
 80128e4:	4605      	mov	r5, r0
 80128e6:	d40b      	bmi.n	8012900 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80128e8:	4620      	mov	r0, r4
 80128ea:	f007 fa6e 	bl	8019dca <__cxa_guard_acquire>
 80128ee:	b138      	cbz	r0, 8012900 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80128f0:	4620      	mov	r0, r4
 80128f2:	f007 fa76 	bl	8019de2 <__cxa_guard_release>
 80128f6:	4a0f      	ldr	r2, [pc, #60]	; (8012934 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80128f8:	490f      	ldr	r1, [pc, #60]	; (8012938 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80128fa:	4810      	ldr	r0, [pc, #64]	; (801293c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80128fc:	f007 fa5e 	bl	8019dbc <__aeabi_atexit>
 8012900:	4c0f      	ldr	r4, [pc, #60]	; (8012940 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8012902:	7823      	ldrb	r3, [r4, #0]
 8012904:	f3bf 8f5b 	dmb	ish
 8012908:	07db      	lsls	r3, r3, #31
 801290a:	d40b      	bmi.n	8012924 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801290c:	4620      	mov	r0, r4
 801290e:	f007 fa5c 	bl	8019dca <__cxa_guard_acquire>
 8012912:	b138      	cbz	r0, 8012924 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8012914:	4620      	mov	r0, r4
 8012916:	f007 fa64 	bl	8019de2 <__cxa_guard_release>
 801291a:	4a06      	ldr	r2, [pc, #24]	; (8012934 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801291c:	4909      	ldr	r1, [pc, #36]	; (8012944 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801291e:	480a      	ldr	r0, [pc, #40]	; (8012948 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8012920:	f007 fa4c 	bl	8019dbc <__aeabi_atexit>
 8012924:	4b05      	ldr	r3, [pc, #20]	; (801293c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8012926:	63ab      	str	r3, [r5, #56]	; 0x38
 8012928:	4b07      	ldr	r3, [pc, #28]	; (8012948 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801292a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801292c:	bd38      	pop	{r3, r4, r5, pc}
 801292e:	bf00      	nop
 8012930:	2000a574 	.word	0x2000a574
 8012934:	20000000 	.word	0x20000000
 8012938:	080104d5 	.word	0x080104d5
 801293c:	200000b4 	.word	0x200000b4
 8012940:	2000a578 	.word	0x2000a578
 8012944:	080104d3 	.word	0x080104d3
 8012948:	200000b8 	.word	0x200000b8

0801294c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801294c:	b510      	push	{r4, lr}
 801294e:	4604      	mov	r4, r0
 8012950:	f7ff ff14 	bl	801277c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8012954:	4620      	mov	r0, r4
 8012956:	f7ff ff85 	bl	8012864 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801295a:	4620      	mov	r0, r4
 801295c:	f7ff ff48 	bl	80127f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8012960:	4620      	mov	r0, r4
 8012962:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012966:	f7ff bfb7 	b.w	80128d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801296c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801296c:	b538      	push	{r3, r4, r5, lr}
 801296e:	4c15      	ldr	r4, [pc, #84]	; (80129c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8012970:	7823      	ldrb	r3, [r4, #0]
 8012972:	f3bf 8f5b 	dmb	ish
 8012976:	07da      	lsls	r2, r3, #31
 8012978:	4605      	mov	r5, r0
 801297a:	d40b      	bmi.n	8012994 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801297c:	4620      	mov	r0, r4
 801297e:	f007 fa24 	bl	8019dca <__cxa_guard_acquire>
 8012982:	b138      	cbz	r0, 8012994 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8012984:	4620      	mov	r0, r4
 8012986:	f007 fa2c 	bl	8019de2 <__cxa_guard_release>
 801298a:	4a0f      	ldr	r2, [pc, #60]	; (80129c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801298c:	490f      	ldr	r1, [pc, #60]	; (80129cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801298e:	4810      	ldr	r0, [pc, #64]	; (80129d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8012990:	f007 fa14 	bl	8019dbc <__aeabi_atexit>
 8012994:	4c0f      	ldr	r4, [pc, #60]	; (80129d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8012996:	7823      	ldrb	r3, [r4, #0]
 8012998:	f3bf 8f5b 	dmb	ish
 801299c:	07db      	lsls	r3, r3, #31
 801299e:	d40b      	bmi.n	80129b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80129a0:	4620      	mov	r0, r4
 80129a2:	f007 fa12 	bl	8019dca <__cxa_guard_acquire>
 80129a6:	b138      	cbz	r0, 80129b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80129a8:	4620      	mov	r0, r4
 80129aa:	f007 fa1a 	bl	8019de2 <__cxa_guard_release>
 80129ae:	4a06      	ldr	r2, [pc, #24]	; (80129c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80129b0:	4909      	ldr	r1, [pc, #36]	; (80129d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80129b2:	480a      	ldr	r0, [pc, #40]	; (80129dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80129b4:	f007 fa02 	bl	8019dbc <__aeabi_atexit>
 80129b8:	4b05      	ldr	r3, [pc, #20]	; (80129d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80129ba:	662b      	str	r3, [r5, #96]	; 0x60
 80129bc:	4b07      	ldr	r3, [pc, #28]	; (80129dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80129be:	666b      	str	r3, [r5, #100]	; 0x64
 80129c0:	bd38      	pop	{r3, r4, r5, pc}
 80129c2:	bf00      	nop
 80129c4:	2000a55c 	.word	0x2000a55c
 80129c8:	20000000 	.word	0x20000000
 80129cc:	080104c1 	.word	0x080104c1
 80129d0:	2000009c 	.word	0x2000009c
 80129d4:	2000a560 	.word	0x2000a560
 80129d8:	080104bf 	.word	0x080104bf
 80129dc:	200000a0 	.word	0x200000a0

080129e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80129e0:	b538      	push	{r3, r4, r5, lr}
 80129e2:	4c15      	ldr	r4, [pc, #84]	; (8012a38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80129e4:	7823      	ldrb	r3, [r4, #0]
 80129e6:	f3bf 8f5b 	dmb	ish
 80129ea:	07da      	lsls	r2, r3, #31
 80129ec:	4605      	mov	r5, r0
 80129ee:	d40b      	bmi.n	8012a08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80129f0:	4620      	mov	r0, r4
 80129f2:	f007 f9ea 	bl	8019dca <__cxa_guard_acquire>
 80129f6:	b138      	cbz	r0, 8012a08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80129f8:	4620      	mov	r0, r4
 80129fa:	f007 f9f2 	bl	8019de2 <__cxa_guard_release>
 80129fe:	4a0f      	ldr	r2, [pc, #60]	; (8012a3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8012a00:	490f      	ldr	r1, [pc, #60]	; (8012a40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8012a02:	4810      	ldr	r0, [pc, #64]	; (8012a44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8012a04:	f007 f9da 	bl	8019dbc <__aeabi_atexit>
 8012a08:	4c0f      	ldr	r4, [pc, #60]	; (8012a48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8012a0a:	7823      	ldrb	r3, [r4, #0]
 8012a0c:	f3bf 8f5b 	dmb	ish
 8012a10:	07db      	lsls	r3, r3, #31
 8012a12:	d40b      	bmi.n	8012a2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8012a14:	4620      	mov	r0, r4
 8012a16:	f007 f9d8 	bl	8019dca <__cxa_guard_acquire>
 8012a1a:	b138      	cbz	r0, 8012a2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8012a1c:	4620      	mov	r0, r4
 8012a1e:	f007 f9e0 	bl	8019de2 <__cxa_guard_release>
 8012a22:	4a06      	ldr	r2, [pc, #24]	; (8012a3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8012a24:	4909      	ldr	r1, [pc, #36]	; (8012a4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8012a26:	480a      	ldr	r0, [pc, #40]	; (8012a50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8012a28:	f007 f9c8 	bl	8019dbc <__aeabi_atexit>
 8012a2c:	4b05      	ldr	r3, [pc, #20]	; (8012a44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8012a2e:	65ab      	str	r3, [r5, #88]	; 0x58
 8012a30:	4b07      	ldr	r3, [pc, #28]	; (8012a50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8012a32:	65eb      	str	r3, [r5, #92]	; 0x5c
 8012a34:	bd38      	pop	{r3, r4, r5, pc}
 8012a36:	bf00      	nop
 8012a38:	2000a534 	.word	0x2000a534
 8012a3c:	20000000 	.word	0x20000000
 8012a40:	080104c5 	.word	0x080104c5
 8012a44:	20000074 	.word	0x20000074
 8012a48:	2000a538 	.word	0x2000a538
 8012a4c:	080104c3 	.word	0x080104c3
 8012a50:	20000078 	.word	0x20000078

08012a54 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8012a54:	b510      	push	{r4, lr}
 8012a56:	4604      	mov	r4, r0
 8012a58:	f7ff ff88 	bl	801296c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8012a5c:	4620      	mov	r0, r4
 8012a5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a62:	f7ff bfbd 	b.w	80129e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08012a68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8012a68:	b538      	push	{r3, r4, r5, lr}
 8012a6a:	4c15      	ldr	r4, [pc, #84]	; (8012ac0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8012a6c:	7823      	ldrb	r3, [r4, #0]
 8012a6e:	f3bf 8f5b 	dmb	ish
 8012a72:	07da      	lsls	r2, r3, #31
 8012a74:	4605      	mov	r5, r0
 8012a76:	d40b      	bmi.n	8012a90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8012a78:	4620      	mov	r0, r4
 8012a7a:	f007 f9a6 	bl	8019dca <__cxa_guard_acquire>
 8012a7e:	b138      	cbz	r0, 8012a90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8012a80:	4620      	mov	r0, r4
 8012a82:	f007 f9ae 	bl	8019de2 <__cxa_guard_release>
 8012a86:	4a0f      	ldr	r2, [pc, #60]	; (8012ac4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8012a88:	490f      	ldr	r1, [pc, #60]	; (8012ac8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8012a8a:	4810      	ldr	r0, [pc, #64]	; (8012acc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8012a8c:	f007 f996 	bl	8019dbc <__aeabi_atexit>
 8012a90:	4c0f      	ldr	r4, [pc, #60]	; (8012ad0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8012a92:	7823      	ldrb	r3, [r4, #0]
 8012a94:	f3bf 8f5b 	dmb	ish
 8012a98:	07db      	lsls	r3, r3, #31
 8012a9a:	d40b      	bmi.n	8012ab4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8012a9c:	4620      	mov	r0, r4
 8012a9e:	f007 f994 	bl	8019dca <__cxa_guard_acquire>
 8012aa2:	b138      	cbz	r0, 8012ab4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8012aa4:	4620      	mov	r0, r4
 8012aa6:	f007 f99c 	bl	8019de2 <__cxa_guard_release>
 8012aaa:	4a06      	ldr	r2, [pc, #24]	; (8012ac4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8012aac:	4909      	ldr	r1, [pc, #36]	; (8012ad4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8012aae:	480a      	ldr	r0, [pc, #40]	; (8012ad8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8012ab0:	f007 f984 	bl	8019dbc <__aeabi_atexit>
 8012ab4:	4b05      	ldr	r3, [pc, #20]	; (8012acc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8012ab6:	672b      	str	r3, [r5, #112]	; 0x70
 8012ab8:	4b07      	ldr	r3, [pc, #28]	; (8012ad8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8012aba:	676b      	str	r3, [r5, #116]	; 0x74
 8012abc:	bd38      	pop	{r3, r4, r5, pc}
 8012abe:	bf00      	nop
 8012ac0:	2000a52c 	.word	0x2000a52c
 8012ac4:	20000000 	.word	0x20000000
 8012ac8:	080104b9 	.word	0x080104b9
 8012acc:	2000006c 	.word	0x2000006c
 8012ad0:	2000a530 	.word	0x2000a530
 8012ad4:	080104b7 	.word	0x080104b7
 8012ad8:	20000070 	.word	0x20000070

08012adc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8012adc:	b538      	push	{r3, r4, r5, lr}
 8012ade:	4c15      	ldr	r4, [pc, #84]	; (8012b34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8012ae0:	7823      	ldrb	r3, [r4, #0]
 8012ae2:	f3bf 8f5b 	dmb	ish
 8012ae6:	07da      	lsls	r2, r3, #31
 8012ae8:	4605      	mov	r5, r0
 8012aea:	d40b      	bmi.n	8012b04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8012aec:	4620      	mov	r0, r4
 8012aee:	f007 f96c 	bl	8019dca <__cxa_guard_acquire>
 8012af2:	b138      	cbz	r0, 8012b04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8012af4:	4620      	mov	r0, r4
 8012af6:	f007 f974 	bl	8019de2 <__cxa_guard_release>
 8012afa:	4a0f      	ldr	r2, [pc, #60]	; (8012b38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8012afc:	490f      	ldr	r1, [pc, #60]	; (8012b3c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8012afe:	4810      	ldr	r0, [pc, #64]	; (8012b40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8012b00:	f007 f95c 	bl	8019dbc <__aeabi_atexit>
 8012b04:	4c0f      	ldr	r4, [pc, #60]	; (8012b44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8012b06:	7823      	ldrb	r3, [r4, #0]
 8012b08:	f3bf 8f5b 	dmb	ish
 8012b0c:	07db      	lsls	r3, r3, #31
 8012b0e:	d40b      	bmi.n	8012b28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8012b10:	4620      	mov	r0, r4
 8012b12:	f007 f95a 	bl	8019dca <__cxa_guard_acquire>
 8012b16:	b138      	cbz	r0, 8012b28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8012b18:	4620      	mov	r0, r4
 8012b1a:	f007 f962 	bl	8019de2 <__cxa_guard_release>
 8012b1e:	4a06      	ldr	r2, [pc, #24]	; (8012b38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8012b20:	4909      	ldr	r1, [pc, #36]	; (8012b48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8012b22:	480a      	ldr	r0, [pc, #40]	; (8012b4c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8012b24:	f007 f94a 	bl	8019dbc <__aeabi_atexit>
 8012b28:	4b05      	ldr	r3, [pc, #20]	; (8012b40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8012b2a:	66ab      	str	r3, [r5, #104]	; 0x68
 8012b2c:	4b07      	ldr	r3, [pc, #28]	; (8012b4c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8012b2e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8012b30:	bd38      	pop	{r3, r4, r5, pc}
 8012b32:	bf00      	nop
 8012b34:	2000a524 	.word	0x2000a524
 8012b38:	20000000 	.word	0x20000000
 8012b3c:	080104bd 	.word	0x080104bd
 8012b40:	20000064 	.word	0x20000064
 8012b44:	2000a528 	.word	0x2000a528
 8012b48:	080104bb 	.word	0x080104bb
 8012b4c:	20000068 	.word	0x20000068

08012b50 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8012b50:	b510      	push	{r4, lr}
 8012b52:	4604      	mov	r4, r0
 8012b54:	f7ff ff88 	bl	8012a68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8012b58:	4620      	mov	r0, r4
 8012b5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b5e:	f7ff bfbd 	b.w	8012adc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08012b62 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8012b62:	b510      	push	{r4, lr}
 8012b64:	4604      	mov	r4, r0
 8012b66:	f7ff fff3 	bl	8012b50 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8012b6a:	4620      	mov	r0, r4
 8012b6c:	f7ff ff72 	bl	8012a54 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8012b70:	4620      	mov	r0, r4
 8012b72:	f7ff fdf9 	bl	8012768 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8012b76:	4620      	mov	r0, r4
 8012b78:	f7ff fcfa 	bl	8012570 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8012b7c:	4620      	mov	r0, r4
 8012b7e:	f7ff fd75 	bl	801266c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8012b82:	4620      	mov	r0, r4
 8012b84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b88:	f7ff bee0 	b.w	801294c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08012b8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8012b8c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b90:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8012b94:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8012b98:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8012b9c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8012ba0:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8012ba4:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8012ba8:	8808      	ldrh	r0, [r1, #0]
 8012baa:	fb0e 4708 	mla	r7, lr, r8, r4
 8012bae:	f1be 0f00 	cmp.w	lr, #0
 8012bb2:	eb02 0a07 	add.w	sl, r2, r7
 8012bb6:	db37      	blt.n	8012c28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012bb8:	45f3      	cmp	fp, lr
 8012bba:	dd35      	ble.n	8012c28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012bbc:	2c00      	cmp	r4, #0
 8012bbe:	db31      	blt.n	8012c24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8012bc0:	45a0      	cmp	r8, r4
 8012bc2:	dd2f      	ble.n	8012c24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8012bc4:	5dd2      	ldrb	r2, [r2, r7]
 8012bc6:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8012bca:	1c62      	adds	r2, r4, #1
 8012bcc:	d42f      	bmi.n	8012c2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8012bce:	4590      	cmp	r8, r2
 8012bd0:	dd2d      	ble.n	8012c2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8012bd2:	b366      	cbz	r6, 8012c2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8012bd4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8012bd8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8012bdc:	f11e 0e01 	adds.w	lr, lr, #1
 8012be0:	d429      	bmi.n	8012c36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8012be2:	45f3      	cmp	fp, lr
 8012be4:	dd27      	ble.n	8012c36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8012be6:	f1bc 0f00 	cmp.w	ip, #0
 8012bea:	f000 80a1 	beq.w	8012d30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 8012bee:	2c00      	cmp	r4, #0
 8012bf0:	db1f      	blt.n	8012c32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8012bf2:	45a0      	cmp	r8, r4
 8012bf4:	dd1d      	ble.n	8012c32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8012bf6:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8012bfa:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8012bfe:	3401      	adds	r4, #1
 8012c00:	d41c      	bmi.n	8012c3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8012c02:	45a0      	cmp	r8, r4
 8012c04:	dd1a      	ble.n	8012c3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8012c06:	b1de      	cbz	r6, 8012c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8012c08:	44d0      	add	r8, sl
 8012c0a:	f898 2001 	ldrb.w	r2, [r8, #1]
 8012c0e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8012c12:	2e0f      	cmp	r6, #15
 8012c14:	d915      	bls.n	8012c42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8012c16:	4b49      	ldr	r3, [pc, #292]	; (8012d3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8012c18:	4a49      	ldr	r2, [pc, #292]	; (8012d40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8012c1a:	484a      	ldr	r0, [pc, #296]	; (8012d44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8012c1c:	f240 11db 	movw	r1, #475	; 0x1db
 8012c20:	f007 f900 	bl	8019e24 <__assert_func>
 8012c24:	4681      	mov	r9, r0
 8012c26:	e7d0      	b.n	8012bca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8012c28:	4607      	mov	r7, r0
 8012c2a:	4681      	mov	r9, r0
 8012c2c:	e7d6      	b.n	8012bdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8012c2e:	4607      	mov	r7, r0
 8012c30:	e7d4      	b.n	8012bdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8012c32:	4686      	mov	lr, r0
 8012c34:	e7e3      	b.n	8012bfe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8012c36:	4603      	mov	r3, r0
 8012c38:	4686      	mov	lr, r0
 8012c3a:	e7ea      	b.n	8012c12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8012c3c:	4603      	mov	r3, r0
 8012c3e:	e7e8      	b.n	8012c12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8012c40:	4603      	mov	r3, r0
 8012c42:	f1bc 0f0f 	cmp.w	ip, #15
 8012c46:	d8e6      	bhi.n	8012c16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8012c48:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8012c4c:	fb16 f80c 	smulbb	r8, r6, ip
 8012c50:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8012c54:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8012c58:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8012c5c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8012c60:	ea44 0909 	orr.w	r9, r4, r9
 8012c64:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8012c68:	f1cc 0410 	rsb	r4, ip, #16
 8012c6c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8012c70:	1ba4      	subs	r4, r4, r6
 8012c72:	041a      	lsls	r2, r3, #16
 8012c74:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8012c78:	ea4a 0707 	orr.w	r7, sl, r7
 8012c7c:	4377      	muls	r7, r6
 8012c7e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8012c82:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8012c86:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012c8a:	fb04 7409 	mla	r4, r4, r9, r7
 8012c8e:	4313      	orrs	r3, r2
 8012c90:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8012c94:	fb08 4303 	mla	r3, r8, r3, r4
 8012c98:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8012c9c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8012ca0:	4322      	orrs	r2, r4
 8012ca2:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8012ca6:	fb0c 3202 	mla	r2, ip, r2, r3
 8012caa:	0d53      	lsrs	r3, r2, #21
 8012cac:	0952      	lsrs	r2, r2, #5
 8012cae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012cb2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012cb6:	431a      	orrs	r2, r3
 8012cb8:	b293      	uxth	r3, r2
 8012cba:	b2af      	uxth	r7, r5
 8012cbc:	1202      	asrs	r2, r0, #8
 8012cbe:	43ed      	mvns	r5, r5
 8012cc0:	b2ed      	uxtb	r5, r5
 8012cc2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012cc6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8012cca:	fb12 f205 	smulbb	r2, r2, r5
 8012cce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012cd2:	fb0c 2c07 	mla	ip, ip, r7, r2
 8012cd6:	00dc      	lsls	r4, r3, #3
 8012cd8:	10da      	asrs	r2, r3, #3
 8012cda:	10c6      	asrs	r6, r0, #3
 8012cdc:	00c3      	lsls	r3, r0, #3
 8012cde:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012ce2:	b2db      	uxtb	r3, r3
 8012ce4:	fb16 f605 	smulbb	r6, r6, r5
 8012ce8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8012cec:	b2e4      	uxtb	r4, r4
 8012cee:	fb13 f305 	smulbb	r3, r3, r5
 8012cf2:	fa1f fc8c 	uxth.w	ip, ip
 8012cf6:	fb02 6207 	mla	r2, r2, r7, r6
 8012cfa:	fb04 3307 	mla	r3, r4, r7, r3
 8012cfe:	b296      	uxth	r6, r2
 8012d00:	b29a      	uxth	r2, r3
 8012d02:	f10c 0301 	add.w	r3, ip, #1
 8012d06:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8012d0a:	1c53      	adds	r3, r2, #1
 8012d0c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8012d10:	1c72      	adds	r2, r6, #1
 8012d12:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8012d16:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012d1a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8012d1e:	0952      	lsrs	r2, r2, #5
 8012d20:	ea43 030c 	orr.w	r3, r3, ip
 8012d24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012d28:	4313      	orrs	r3, r2
 8012d2a:	800b      	strh	r3, [r1, #0]
 8012d2c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d30:	2e0f      	cmp	r6, #15
 8012d32:	f63f af70 	bhi.w	8012c16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8012d36:	4603      	mov	r3, r0
 8012d38:	4686      	mov	lr, r0
 8012d3a:	e785      	b.n	8012c48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8012d3c:	0801da2b 	.word	0x0801da2b
 8012d40:	0801e003 	.word	0x0801e003
 8012d44:	0801d9f8 	.word	0x0801d9f8

08012d48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d4c:	ed2d 8b08 	vpush	{d8-d11}
 8012d50:	b099      	sub	sp, #100	; 0x64
 8012d52:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8012d56:	9215      	str	r2, [sp, #84]	; 0x54
 8012d58:	9309      	str	r3, [sp, #36]	; 0x24
 8012d5a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8012d5c:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8012d60:	930d      	str	r3, [sp, #52]	; 0x34
 8012d62:	910c      	str	r1, [sp, #48]	; 0x30
 8012d64:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8012d68:	9016      	str	r0, [sp, #88]	; 0x58
 8012d6a:	6850      	ldr	r0, [r2, #4]
 8012d6c:	6812      	ldr	r2, [r2, #0]
 8012d6e:	fb00 1303 	mla	r3, r0, r3, r1
 8012d72:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8012d76:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012d78:	681b      	ldr	r3, [r3, #0]
 8012d7a:	930b      	str	r3, [sp, #44]	; 0x2c
 8012d7c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012d7e:	685e      	ldr	r6, [r3, #4]
 8012d80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012d82:	43db      	mvns	r3, r3
 8012d84:	b2db      	uxtb	r3, r3
 8012d86:	eeb0 aa40 	vmov.f32	s20, s0
 8012d8a:	eef0 9a60 	vmov.f32	s19, s1
 8012d8e:	eeb0 9a41 	vmov.f32	s18, s2
 8012d92:	eeb0 8a62 	vmov.f32	s16, s5
 8012d96:	eef0 8a43 	vmov.f32	s17, s6
 8012d9a:	eef0 ba44 	vmov.f32	s23, s8
 8012d9e:	eeb0 ba64 	vmov.f32	s22, s9
 8012da2:	eef0 aa45 	vmov.f32	s21, s10
 8012da6:	3604      	adds	r6, #4
 8012da8:	930a      	str	r3, [sp, #40]	; 0x28
 8012daa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012dac:	2b00      	cmp	r3, #0
 8012dae:	dc03      	bgt.n	8012db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012db0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012db2:	2b00      	cmp	r3, #0
 8012db4:	f340 8225 	ble.w	8013202 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8012db8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012dba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8012dbe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8012dc2:	1e48      	subs	r0, r1, #1
 8012dc4:	1e57      	subs	r7, r2, #1
 8012dc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012dc8:	2b00      	cmp	r3, #0
 8012dca:	f340 80e3 	ble.w	8012f94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8012dce:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8012dd2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8012dd6:	d406      	bmi.n	8012de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012dd8:	4584      	cmp	ip, r0
 8012dda:	da04      	bge.n	8012de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012ddc:	2b00      	cmp	r3, #0
 8012dde:	db02      	blt.n	8012de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012de0:	42bb      	cmp	r3, r7
 8012de2:	f2c0 80d8 	blt.w	8012f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8012de6:	f11c 0c01 	adds.w	ip, ip, #1
 8012dea:	f100 80c9 	bmi.w	8012f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8012dee:	4561      	cmp	r1, ip
 8012df0:	f2c0 80c6 	blt.w	8012f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8012df4:	3301      	adds	r3, #1
 8012df6:	f100 80c3 	bmi.w	8012f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8012dfa:	429a      	cmp	r2, r3
 8012dfc:	f2c0 80c0 	blt.w	8012f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8012e00:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8012e04:	4647      	mov	r7, r8
 8012e06:	f1bb 0f00 	cmp.w	fp, #0
 8012e0a:	f340 80e3 	ble.w	8012fd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012e0e:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8012e10:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012e12:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8012e16:	689b      	ldr	r3, [r3, #8]
 8012e18:	ea5f 422a 	movs.w	r2, sl, asr #16
 8012e1c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8012e20:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8012e24:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8012e28:	f100 8121 	bmi.w	801306e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8012e2c:	f103 39ff 	add.w	r9, r3, #4294967295
 8012e30:	454a      	cmp	r2, r9
 8012e32:	f280 811c 	bge.w	801306e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8012e36:	f1bc 0f00 	cmp.w	ip, #0
 8012e3a:	f2c0 8118 	blt.w	801306e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8012e3e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8012e42:	45cc      	cmp	ip, r9
 8012e44:	f280 8113 	bge.w	801306e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8012e48:	b21b      	sxth	r3, r3
 8012e4a:	fb0c 2203 	mla	r2, ip, r3, r2
 8012e4e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8012e50:	eb04 0902 	add.w	r9, r4, r2
 8012e54:	5ca2      	ldrb	r2, [r4, r2]
 8012e56:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8012e5a:	2800      	cmp	r0, #0
 8012e5c:	f000 80fe 	beq.w	801305c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8012e60:	f899 2001 	ldrb.w	r2, [r9, #1]
 8012e64:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8012e68:	9211      	str	r2, [sp, #68]	; 0x44
 8012e6a:	b151      	cbz	r1, 8012e82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8012e6c:	eb09 0203 	add.w	r2, r9, r3
 8012e70:	f819 3003 	ldrb.w	r3, [r9, r3]
 8012e74:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012e78:	930f      	str	r3, [sp, #60]	; 0x3c
 8012e7a:	7853      	ldrb	r3, [r2, #1]
 8012e7c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012e80:	9312      	str	r3, [sp, #72]	; 0x48
 8012e82:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012e84:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012e86:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012e8a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012e8e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012e92:	ea4c 0c03 	orr.w	ip, ip, r3
 8012e96:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012e98:	041b      	lsls	r3, r3, #16
 8012e9a:	fb10 f201 	smulbb	r2, r0, r1
 8012e9e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8012ea2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012ea6:	10d2      	asrs	r2, r2, #3
 8012ea8:	4323      	orrs	r3, r4
 8012eaa:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8012eae:	4353      	muls	r3, r2
 8012eb0:	fb09 330c 	mla	r3, r9, ip, r3
 8012eb4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8012eb8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012ebc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8012ec0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8012ec4:	f1c1 0c10 	rsb	ip, r1, #16
 8012ec8:	ebac 0c00 	sub.w	ip, ip, r0
 8012ecc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012ed0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8012ed4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012ed6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012ed8:	0418      	lsls	r0, r3, #16
 8012eda:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012ede:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012ee2:	4318      	orrs	r0, r3
 8012ee4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8012ee8:	fb02 c200 	mla	r2, r2, r0, ip
 8012eec:	0d53      	lsrs	r3, r2, #21
 8012eee:	0952      	lsrs	r2, r2, #5
 8012ef0:	8838      	ldrh	r0, [r7, #0]
 8012ef2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012ef6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012efa:	431a      	orrs	r2, r3
 8012efc:	b292      	uxth	r2, r2
 8012efe:	1201      	asrs	r1, r0, #8
 8012f00:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8012f04:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8012f08:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012f0c:	fb11 f104 	smulbb	r1, r1, r4
 8012f10:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8012f14:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012f18:	00c0      	lsls	r0, r0, #3
 8012f1a:	fb0c 1c03 	mla	ip, ip, r3, r1
 8012f1e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012f22:	10d1      	asrs	r1, r2, #3
 8012f24:	b2c0      	uxtb	r0, r0
 8012f26:	00d2      	lsls	r2, r2, #3
 8012f28:	b2d2      	uxtb	r2, r2
 8012f2a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012f2e:	fb1e fe04 	smulbb	lr, lr, r4
 8012f32:	fb10 f004 	smulbb	r0, r0, r4
 8012f36:	fa1f fc8c 	uxth.w	ip, ip
 8012f3a:	fb01 e103 	mla	r1, r1, r3, lr
 8012f3e:	fb02 0303 	mla	r3, r2, r3, r0
 8012f42:	b29a      	uxth	r2, r3
 8012f44:	f10c 0301 	add.w	r3, ip, #1
 8012f48:	b289      	uxth	r1, r1
 8012f4a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8012f4e:	1c53      	adds	r3, r2, #1
 8012f50:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8012f54:	1c4a      	adds	r2, r1, #1
 8012f56:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8012f5a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012f5e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8012f62:	0949      	lsrs	r1, r1, #5
 8012f64:	ea43 030c 	orr.w	r3, r3, ip
 8012f68:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012f6c:	430b      	orrs	r3, r1
 8012f6e:	803b      	strh	r3, [r7, #0]
 8012f70:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012f72:	449a      	add	sl, r3
 8012f74:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012f76:	3702      	adds	r7, #2
 8012f78:	441d      	add	r5, r3
 8012f7a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8012f7e:	e742      	b.n	8012e06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8012f80:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012f82:	449a      	add	sl, r3
 8012f84:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012f86:	441d      	add	r5, r3
 8012f88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012f8a:	3b01      	subs	r3, #1
 8012f8c:	9309      	str	r3, [sp, #36]	; 0x24
 8012f8e:	f108 0802 	add.w	r8, r8, #2
 8012f92:	e718      	b.n	8012dc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012f94:	d023      	beq.n	8012fde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8012f96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012f98:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8012f9a:	3b01      	subs	r3, #1
 8012f9c:	fb00 a003 	mla	r0, r0, r3, sl
 8012fa0:	1400      	asrs	r0, r0, #16
 8012fa2:	f53f af2d 	bmi.w	8012e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8012fa6:	3901      	subs	r1, #1
 8012fa8:	4288      	cmp	r0, r1
 8012faa:	f6bf af29 	bge.w	8012e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8012fae:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8012fb0:	fb01 5303 	mla	r3, r1, r3, r5
 8012fb4:	141b      	asrs	r3, r3, #16
 8012fb6:	f53f af23 	bmi.w	8012e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8012fba:	3a01      	subs	r2, #1
 8012fbc:	4293      	cmp	r3, r2
 8012fbe:	f6bf af1f 	bge.w	8012e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8012fc2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8012fc6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8012fca:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8012fce:	f1be 0f00 	cmp.w	lr, #0
 8012fd2:	dc6c      	bgt.n	80130ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8012fd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012fd6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8012fda:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8012fde:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012fe0:	2b00      	cmp	r3, #0
 8012fe2:	f340 810e 	ble.w	8013202 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8012fe6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8012fea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012fee:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8012ff2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012ff4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8012ff8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8012ffc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013000:	eef0 6a48 	vmov.f32	s13, s16
 8013004:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013008:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801300c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013010:	ee16 aa90 	vmov	sl, s13
 8013014:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013018:	eef0 6a68 	vmov.f32	s13, s17
 801301c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013020:	ee18 2a10 	vmov	r2, s16
 8013024:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013028:	fb92 f3f3 	sdiv	r3, r2, r3
 801302c:	ee18 2a90 	vmov	r2, s17
 8013030:	932d      	str	r3, [sp, #180]	; 0xb4
 8013032:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013034:	fb92 f3f3 	sdiv	r3, r2, r3
 8013038:	932e      	str	r3, [sp, #184]	; 0xb8
 801303a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801303c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801303e:	3b01      	subs	r3, #1
 8013040:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013044:	930c      	str	r3, [sp, #48]	; 0x30
 8013046:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013048:	bf08      	it	eq
 801304a:	4613      	moveq	r3, r2
 801304c:	ee16 5a90 	vmov	r5, s13
 8013050:	9309      	str	r3, [sp, #36]	; 0x24
 8013052:	eef0 8a67 	vmov.f32	s17, s15
 8013056:	eeb0 8a47 	vmov.f32	s16, s14
 801305a:	e6a6      	b.n	8012daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 801305c:	2900      	cmp	r1, #0
 801305e:	f43f af10 	beq.w	8012e82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8013062:	f819 3003 	ldrb.w	r3, [r9, r3]
 8013066:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801306a:	930f      	str	r3, [sp, #60]	; 0x3c
 801306c:	e709      	b.n	8012e82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 801306e:	f112 0901 	adds.w	r9, r2, #1
 8013072:	f53f af7d 	bmi.w	8012f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013076:	454b      	cmp	r3, r9
 8013078:	f6ff af7a 	blt.w	8012f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801307c:	f11c 0901 	adds.w	r9, ip, #1
 8013080:	f53f af76 	bmi.w	8012f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013084:	45ce      	cmp	lr, r9
 8013086:	f6ff af73 	blt.w	8012f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801308a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801308c:	9202      	str	r2, [sp, #8]
 801308e:	b21b      	sxth	r3, r3
 8013090:	fa0f f28e 	sxth.w	r2, lr
 8013094:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8013098:	e9cd c003 	strd	ip, r0, [sp, #12]
 801309c:	9201      	str	r2, [sp, #4]
 801309e:	9300      	str	r3, [sp, #0]
 80130a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80130a2:	9816      	ldr	r0, [sp, #88]	; 0x58
 80130a4:	4633      	mov	r3, r6
 80130a6:	4639      	mov	r1, r7
 80130a8:	f7ff fd70 	bl	8012b8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80130ac:	e760      	b.n	8012f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80130ae:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80130b0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80130b2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80130b6:	ea4f 422a 	mov.w	r2, sl, asr #16
 80130ba:	1429      	asrs	r1, r5, #16
 80130bc:	fb03 2101 	mla	r1, r3, r1, r2
 80130c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80130c2:	440a      	add	r2, r1
 80130c4:	5c61      	ldrb	r1, [r4, r1]
 80130c6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80130ca:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80130ce:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80130d2:	f1bc 0f00 	cmp.w	ip, #0
 80130d6:	f000 808c 	beq.w	80131f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80130da:	7857      	ldrb	r7, [r2, #1]
 80130dc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80130e0:	9413      	str	r4, [sp, #76]	; 0x4c
 80130e2:	b140      	cbz	r0, 80130f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80130e4:	18d7      	adds	r7, r2, r3
 80130e6:	5cd3      	ldrb	r3, [r2, r3]
 80130e8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80130ec:	9310      	str	r3, [sp, #64]	; 0x40
 80130ee:	787b      	ldrb	r3, [r7, #1]
 80130f0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80130f4:	9314      	str	r3, [sp, #80]	; 0x50
 80130f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80130f8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80130fa:	fb1c f200 	smulbb	r2, ip, r0
 80130fe:	041f      	lsls	r7, r3, #16
 8013100:	10d2      	asrs	r2, r2, #3
 8013102:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013106:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801310a:	431f      	orrs	r7, r3
 801310c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8013110:	9317      	str	r3, [sp, #92]	; 0x5c
 8013112:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013114:	041b      	lsls	r3, r3, #16
 8013116:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801311a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801311e:	ea43 030b 	orr.w	r3, r3, fp
 8013122:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8013124:	4353      	muls	r3, r2
 8013126:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801312a:	fb04 3707 	mla	r7, r4, r7, r3
 801312e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013132:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8013136:	ea43 0b01 	orr.w	fp, r3, r1
 801313a:	f1c0 0110 	rsb	r1, r0, #16
 801313e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013140:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013142:	eba1 0c0c 	sub.w	ip, r1, ip
 8013146:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801314a:	fb0c 770b 	mla	r7, ip, fp, r7
 801314e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013152:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8013156:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801315a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801315e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8013162:	fb02 770c 	mla	r7, r2, ip, r7
 8013166:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013168:	0d79      	lsrs	r1, r7, #21
 801316a:	097f      	lsrs	r7, r7, #5
 801316c:	8812      	ldrh	r2, [r2, #0]
 801316e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013172:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013176:	430f      	orrs	r7, r1
 8013178:	b2bb      	uxth	r3, r7
 801317a:	1211      	asrs	r1, r2, #8
 801317c:	1218      	asrs	r0, r3, #8
 801317e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013182:	fb11 f104 	smulbb	r1, r1, r4
 8013186:	10d7      	asrs	r7, r2, #3
 8013188:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801318c:	00d2      	lsls	r2, r2, #3
 801318e:	fb00 1009 	mla	r0, r0, r9, r1
 8013192:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013196:	10d9      	asrs	r1, r3, #3
 8013198:	b2d2      	uxtb	r2, r2
 801319a:	00db      	lsls	r3, r3, #3
 801319c:	fb17 f704 	smulbb	r7, r7, r4
 80131a0:	fb12 f204 	smulbb	r2, r2, r4
 80131a4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80131a8:	b2db      	uxtb	r3, r3
 80131aa:	b280      	uxth	r0, r0
 80131ac:	fb01 7109 	mla	r1, r1, r9, r7
 80131b0:	fb03 2309 	mla	r3, r3, r9, r2
 80131b4:	b29b      	uxth	r3, r3
 80131b6:	b289      	uxth	r1, r1
 80131b8:	1c42      	adds	r2, r0, #1
 80131ba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80131be:	1c4f      	adds	r7, r1, #1
 80131c0:	1c5a      	adds	r2, r3, #1
 80131c2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80131c6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80131ca:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80131ce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80131d2:	0949      	lsrs	r1, r1, #5
 80131d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80131d6:	4310      	orrs	r0, r2
 80131d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80131dc:	4308      	orrs	r0, r1
 80131de:	f823 0b02 	strh.w	r0, [r3], #2
 80131e2:	930e      	str	r3, [sp, #56]	; 0x38
 80131e4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80131e6:	449a      	add	sl, r3
 80131e8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80131ea:	f10e 3eff 	add.w	lr, lr, #4294967295
 80131ee:	441d      	add	r5, r3
 80131f0:	e6ed      	b.n	8012fce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 80131f2:	2800      	cmp	r0, #0
 80131f4:	f43f af7f 	beq.w	80130f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80131f8:	5cd3      	ldrb	r3, [r2, r3]
 80131fa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80131fe:	9310      	str	r3, [sp, #64]	; 0x40
 8013200:	e779      	b.n	80130f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8013202:	b019      	add	sp, #100	; 0x64
 8013204:	ecbd 8b08 	vpop	{d8-d11}
 8013208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801320c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801320c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013210:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8013214:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8013218:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801321c:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8013220:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8013224:	8808      	ldrh	r0, [r1, #0]
 8013226:	fb06 570e 	mla	r7, r6, lr, r5
 801322a:	2e00      	cmp	r6, #0
 801322c:	eb02 0807 	add.w	r8, r2, r7
 8013230:	db38      	blt.n	80132a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013232:	45b1      	cmp	r9, r6
 8013234:	dd36      	ble.n	80132a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013236:	2d00      	cmp	r5, #0
 8013238:	db32      	blt.n	80132a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801323a:	45ae      	cmp	lr, r5
 801323c:	dd30      	ble.n	80132a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801323e:	5dd2      	ldrb	r2, [r2, r7]
 8013240:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013244:	1c6a      	adds	r2, r5, #1
 8013246:	d430      	bmi.n	80132aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013248:	4596      	cmp	lr, r2
 801324a:	dd2e      	ble.n	80132aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801324c:	b36c      	cbz	r4, 80132aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801324e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8013252:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8013256:	3601      	adds	r6, #1
 8013258:	d42b      	bmi.n	80132b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801325a:	45b1      	cmp	r9, r6
 801325c:	dd29      	ble.n	80132b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801325e:	f1bc 0f00 	cmp.w	ip, #0
 8013262:	d028      	beq.n	80132b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8013264:	2d00      	cmp	r5, #0
 8013266:	db22      	blt.n	80132ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013268:	45ae      	cmp	lr, r5
 801326a:	dd20      	ble.n	80132ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 801326c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8013270:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8013274:	3501      	adds	r5, #1
 8013276:	d407      	bmi.n	8013288 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013278:	45ae      	cmp	lr, r5
 801327a:	dd05      	ble.n	8013288 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801327c:	b134      	cbz	r4, 801328c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801327e:	44c6      	add	lr, r8
 8013280:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8013284:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013288:	2c0f      	cmp	r4, #15
 801328a:	d802      	bhi.n	8013292 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801328c:	f1bc 0f0f 	cmp.w	ip, #15
 8013290:	d914      	bls.n	80132bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8013292:	4b26      	ldr	r3, [pc, #152]	; (801332c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8013294:	4a26      	ldr	r2, [pc, #152]	; (8013330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8013296:	4827      	ldr	r0, [pc, #156]	; (8013334 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8013298:	f240 11db 	movw	r1, #475	; 0x1db
 801329c:	f006 fdc2 	bl	8019e24 <__assert_func>
 80132a0:	4607      	mov	r7, r0
 80132a2:	e7cf      	b.n	8013244 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 80132a4:	4602      	mov	r2, r0
 80132a6:	4607      	mov	r7, r0
 80132a8:	e7d5      	b.n	8013256 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80132aa:	4602      	mov	r2, r0
 80132ac:	e7d3      	b.n	8013256 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80132ae:	4606      	mov	r6, r0
 80132b0:	e7e0      	b.n	8013274 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 80132b2:	4606      	mov	r6, r0
 80132b4:	e7e8      	b.n	8013288 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80132b6:	2c0f      	cmp	r4, #15
 80132b8:	d8eb      	bhi.n	8013292 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80132ba:	4606      	mov	r6, r0
 80132bc:	043d      	lsls	r5, r7, #16
 80132be:	fb14 f30c 	smulbb	r3, r4, ip
 80132c2:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80132c6:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80132ca:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80132ce:	10db      	asrs	r3, r3, #3
 80132d0:	432f      	orrs	r7, r5
 80132d2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80132d6:	f1cc 0510 	rsb	r5, ip, #16
 80132da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80132de:	1b2d      	subs	r5, r5, r4
 80132e0:	ea4e 0202 	orr.w	r2, lr, r2
 80132e4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80132e8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80132ec:	4354      	muls	r4, r2
 80132ee:	fb05 4507 	mla	r5, r5, r7, r4
 80132f2:	0404      	lsls	r4, r0, #16
 80132f4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80132f8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80132fc:	4320      	orrs	r0, r4
 80132fe:	fb03 5400 	mla	r4, r3, r0, r5
 8013302:	0430      	lsls	r0, r6, #16
 8013304:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013308:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801330c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8013310:	4330      	orrs	r0, r6
 8013312:	fb03 4000 	mla	r0, r3, r0, r4
 8013316:	0d43      	lsrs	r3, r0, #21
 8013318:	0940      	lsrs	r0, r0, #5
 801331a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801331e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8013322:	4318      	orrs	r0, r3
 8013324:	8008      	strh	r0, [r1, #0]
 8013326:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801332a:	bf00      	nop
 801332c:	0801da2b 	.word	0x0801da2b
 8013330:	0801e003 	.word	0x0801e003
 8013334:	0801d9f8 	.word	0x0801d9f8

08013338 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801333c:	ed2d 8b0a 	vpush	{d8-d12}
 8013340:	b093      	sub	sp, #76	; 0x4c
 8013342:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8013346:	920f      	str	r2, [sp, #60]	; 0x3c
 8013348:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801334a:	9108      	str	r1, [sp, #32]
 801334c:	9306      	str	r3, [sp, #24]
 801334e:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8013352:	9010      	str	r0, [sp, #64]	; 0x40
 8013354:	6850      	ldr	r0, [r2, #4]
 8013356:	6812      	ldr	r2, [r2, #0]
 8013358:	fb00 1303 	mla	r3, r0, r3, r1
 801335c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8013360:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013362:	681b      	ldr	r3, [r3, #0]
 8013364:	9307      	str	r3, [sp, #28]
 8013366:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013368:	685f      	ldr	r7, [r3, #4]
 801336a:	eeb0 aa40 	vmov.f32	s20, s0
 801336e:	eef0 9a60 	vmov.f32	s19, s1
 8013372:	eeb0 9a41 	vmov.f32	s18, s2
 8013376:	eeb0 8a62 	vmov.f32	s16, s5
 801337a:	eef0 8a43 	vmov.f32	s17, s6
 801337e:	eeb0 ca44 	vmov.f32	s24, s8
 8013382:	eef0 ba64 	vmov.f32	s23, s9
 8013386:	eeb0 ba45 	vmov.f32	s22, s10
 801338a:	3704      	adds	r7, #4
 801338c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8013390:	9b08      	ldr	r3, [sp, #32]
 8013392:	2b00      	cmp	r3, #0
 8013394:	dc03      	bgt.n	801339e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013396:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013398:	2b00      	cmp	r3, #0
 801339a:	f340 81b2 	ble.w	8013702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801339e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80133a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80133a4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80133a8:	1e48      	subs	r0, r1, #1
 80133aa:	f102 3cff 	add.w	ip, r2, #4294967295
 80133ae:	9b06      	ldr	r3, [sp, #24]
 80133b0:	2b00      	cmp	r3, #0
 80133b2:	f340 80a9 	ble.w	8013508 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80133b6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80133ba:	ea4f 4326 	mov.w	r3, r6, asr #16
 80133be:	d406      	bmi.n	80133ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80133c0:	4586      	cmp	lr, r0
 80133c2:	da04      	bge.n	80133ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80133c4:	2b00      	cmp	r3, #0
 80133c6:	db02      	blt.n	80133ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80133c8:	4563      	cmp	r3, ip
 80133ca:	f2c0 809e 	blt.w	801350a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80133ce:	f11e 0e01 	adds.w	lr, lr, #1
 80133d2:	f100 808f 	bmi.w	80134f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80133d6:	4571      	cmp	r1, lr
 80133d8:	f2c0 808c 	blt.w	80134f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80133dc:	3301      	adds	r3, #1
 80133de:	f100 8089 	bmi.w	80134f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80133e2:	429a      	cmp	r2, r3
 80133e4:	f2c0 8086 	blt.w	80134f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80133e8:	f8dd b018 	ldr.w	fp, [sp, #24]
 80133ec:	46c8      	mov	r8, r9
 80133ee:	f1bb 0f00 	cmp.w	fp, #0
 80133f2:	f340 80a6 	ble.w	8013542 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 80133f6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80133f8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80133fa:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80133fe:	689b      	ldr	r3, [r3, #8]
 8013400:	1422      	asrs	r2, r4, #16
 8013402:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8013406:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801340a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801340e:	f100 80e3 	bmi.w	80135d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013412:	f103 3aff 	add.w	sl, r3, #4294967295
 8013416:	4552      	cmp	r2, sl
 8013418:	f280 80de 	bge.w	80135d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801341c:	f1bc 0f00 	cmp.w	ip, #0
 8013420:	f2c0 80da 	blt.w	80135d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013424:	f10e 3aff 	add.w	sl, lr, #4294967295
 8013428:	45d4      	cmp	ip, sl
 801342a:	f280 80d5 	bge.w	80135d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801342e:	b21b      	sxth	r3, r3
 8013430:	fb0c 2203 	mla	r2, ip, r3, r2
 8013434:	9d07      	ldr	r5, [sp, #28]
 8013436:	eb05 0a02 	add.w	sl, r5, r2
 801343a:	5caa      	ldrb	r2, [r5, r2]
 801343c:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8013440:	2800      	cmp	r0, #0
 8013442:	f000 80c0 	beq.w	80135c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8013446:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801344a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801344e:	920b      	str	r2, [sp, #44]	; 0x2c
 8013450:	b151      	cbz	r1, 8013468 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8013452:	eb0a 0203 	add.w	r2, sl, r3
 8013456:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801345a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801345e:	9309      	str	r3, [sp, #36]	; 0x24
 8013460:	7853      	ldrb	r3, [r2, #1]
 8013462:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013466:	930c      	str	r3, [sp, #48]	; 0x30
 8013468:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801346a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801346c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013470:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013474:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013478:	ea4c 0c03 	orr.w	ip, ip, r3
 801347c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801347e:	041b      	lsls	r3, r3, #16
 8013480:	fb10 f201 	smulbb	r2, r0, r1
 8013484:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013488:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801348c:	10d2      	asrs	r2, r2, #3
 801348e:	432b      	orrs	r3, r5
 8013490:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8013494:	4353      	muls	r3, r2
 8013496:	fb0a 330c 	mla	r3, sl, ip, r3
 801349a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801349e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80134a2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80134a6:	ea4c 0e0e 	orr.w	lr, ip, lr
 80134aa:	f1c1 0c10 	rsb	ip, r1, #16
 80134ae:	ebac 0c00 	sub.w	ip, ip, r0
 80134b2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80134b6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80134ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80134bc:	0418      	lsls	r0, r3, #16
 80134be:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80134c2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80134c6:	4318      	orrs	r0, r3
 80134c8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80134cc:	fb02 c200 	mla	r2, r2, r0, ip
 80134d0:	0d53      	lsrs	r3, r2, #21
 80134d2:	0952      	lsrs	r2, r2, #5
 80134d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80134d8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80134dc:	431a      	orrs	r2, r3
 80134de:	f8a8 2000 	strh.w	r2, [r8]
 80134e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80134e4:	441c      	add	r4, r3
 80134e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80134e8:	f108 0802 	add.w	r8, r8, #2
 80134ec:	441e      	add	r6, r3
 80134ee:	f10b 3bff 	add.w	fp, fp, #4294967295
 80134f2:	e77c      	b.n	80133ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80134f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80134f6:	441c      	add	r4, r3
 80134f8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80134fa:	441e      	add	r6, r3
 80134fc:	9b06      	ldr	r3, [sp, #24]
 80134fe:	3b01      	subs	r3, #1
 8013500:	9306      	str	r3, [sp, #24]
 8013502:	f109 0902 	add.w	r9, r9, #2
 8013506:	e752      	b.n	80133ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013508:	d020      	beq.n	801354c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801350a:	9b06      	ldr	r3, [sp, #24]
 801350c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801350e:	3b01      	subs	r3, #1
 8013510:	fb00 4003 	mla	r0, r0, r3, r4
 8013514:	1400      	asrs	r0, r0, #16
 8013516:	f53f af67 	bmi.w	80133e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801351a:	3901      	subs	r1, #1
 801351c:	4288      	cmp	r0, r1
 801351e:	f6bf af63 	bge.w	80133e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013522:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013524:	fb01 6303 	mla	r3, r1, r3, r6
 8013528:	141b      	asrs	r3, r3, #16
 801352a:	f53f af5d 	bmi.w	80133e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801352e:	3a01      	subs	r2, #1
 8013530:	4293      	cmp	r3, r2
 8013532:	f6bf af59 	bge.w	80133e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013536:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801353a:	46ca      	mov	sl, r9
 801353c:	f1b8 0f00 	cmp.w	r8, #0
 8013540:	dc67      	bgt.n	8013612 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8013542:	9b06      	ldr	r3, [sp, #24]
 8013544:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8013548:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801354c:	9b08      	ldr	r3, [sp, #32]
 801354e:	2b00      	cmp	r3, #0
 8013550:	f340 80d7 	ble.w	8013702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8013554:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8013558:	ee79 9aab 	vadd.f32	s19, s19, s23
 801355c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8013560:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013562:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8013566:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801356a:	eef0 6a48 	vmov.f32	s13, s16
 801356e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013572:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013576:	ee37 8a48 	vsub.f32	s16, s14, s16
 801357a:	ee16 4a90 	vmov	r4, s13
 801357e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013582:	eef0 6a68 	vmov.f32	s13, s17
 8013586:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801358a:	ee18 2a10 	vmov	r2, s16
 801358e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013592:	fb92 f3f3 	sdiv	r3, r2, r3
 8013596:	ee18 2a90 	vmov	r2, s17
 801359a:	9329      	str	r3, [sp, #164]	; 0xa4
 801359c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801359e:	fb92 f3f3 	sdiv	r3, r2, r3
 80135a2:	932a      	str	r3, [sp, #168]	; 0xa8
 80135a4:	9b08      	ldr	r3, [sp, #32]
 80135a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80135a8:	3b01      	subs	r3, #1
 80135aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80135ae:	9308      	str	r3, [sp, #32]
 80135b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80135b2:	bf08      	it	eq
 80135b4:	4613      	moveq	r3, r2
 80135b6:	ee16 6a90 	vmov	r6, s13
 80135ba:	9306      	str	r3, [sp, #24]
 80135bc:	eef0 8a67 	vmov.f32	s17, s15
 80135c0:	eeb0 8a47 	vmov.f32	s16, s14
 80135c4:	e6e4      	b.n	8013390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80135c6:	2900      	cmp	r1, #0
 80135c8:	f43f af4e 	beq.w	8013468 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80135cc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80135d0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80135d4:	9309      	str	r3, [sp, #36]	; 0x24
 80135d6:	e747      	b.n	8013468 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80135d8:	f112 0a01 	adds.w	sl, r2, #1
 80135dc:	d481      	bmi.n	80134e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80135de:	4553      	cmp	r3, sl
 80135e0:	f6ff af7f 	blt.w	80134e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80135e4:	f11c 0a01 	adds.w	sl, ip, #1
 80135e8:	f53f af7b 	bmi.w	80134e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80135ec:	45d6      	cmp	lr, sl
 80135ee:	f6ff af78 	blt.w	80134e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80135f2:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80135f6:	b21b      	sxth	r3, r3
 80135f8:	fa0f f28e 	sxth.w	r2, lr
 80135fc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8013600:	9201      	str	r2, [sp, #4]
 8013602:	9300      	str	r3, [sp, #0]
 8013604:	9a07      	ldr	r2, [sp, #28]
 8013606:	9810      	ldr	r0, [sp, #64]	; 0x40
 8013608:	463b      	mov	r3, r7
 801360a:	4641      	mov	r1, r8
 801360c:	f7ff fdfe 	bl	801320c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8013610:	e767      	b.n	80134e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013612:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013614:	9d07      	ldr	r5, [sp, #28]
 8013616:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801361a:	1422      	asrs	r2, r4, #16
 801361c:	1431      	asrs	r1, r6, #16
 801361e:	fb03 2101 	mla	r1, r3, r1, r2
 8013622:	9a07      	ldr	r2, [sp, #28]
 8013624:	440a      	add	r2, r1
 8013626:	5c69      	ldrb	r1, [r5, r1]
 8013628:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801362c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8013630:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8013634:	f1be 0f00 	cmp.w	lr, #0
 8013638:	d05c      	beq.n	80136f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801363a:	f892 c001 	ldrb.w	ip, [r2, #1]
 801363e:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8013642:	950d      	str	r5, [sp, #52]	; 0x34
 8013644:	b150      	cbz	r0, 801365c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8013646:	eb02 0c03 	add.w	ip, r2, r3
 801364a:	5cd3      	ldrb	r3, [r2, r3]
 801364c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013650:	930a      	str	r3, [sp, #40]	; 0x28
 8013652:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8013656:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801365a:	930e      	str	r3, [sp, #56]	; 0x38
 801365c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801365e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013660:	fb1e f200 	smulbb	r2, lr, r0
 8013664:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013668:	10d2      	asrs	r2, r2, #3
 801366a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801366e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013672:	ea4c 0c03 	orr.w	ip, ip, r3
 8013676:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801367a:	9311      	str	r3, [sp, #68]	; 0x44
 801367c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801367e:	041b      	lsls	r3, r3, #16
 8013680:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8013684:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013688:	ea43 030b 	orr.w	r3, r3, fp
 801368c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801368e:	4353      	muls	r3, r2
 8013690:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8013694:	fb05 3c0c 	mla	ip, r5, ip, r3
 8013698:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801369c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80136a0:	ea43 0b01 	orr.w	fp, r3, r1
 80136a4:	f1c0 0110 	rsb	r1, r0, #16
 80136a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80136aa:	eba1 0e0e 	sub.w	lr, r1, lr
 80136ae:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80136b2:	fb0e cc0b 	mla	ip, lr, fp, ip
 80136b6:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80136ba:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80136be:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80136c2:	ea4b 0e0e 	orr.w	lr, fp, lr
 80136c6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80136ca:	fb02 cc0e 	mla	ip, r2, lr, ip
 80136ce:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80136d2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80136d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80136da:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80136de:	ea43 0c0c 	orr.w	ip, r3, ip
 80136e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80136e4:	f82a cb02 	strh.w	ip, [sl], #2
 80136e8:	441c      	add	r4, r3
 80136ea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80136ec:	f108 38ff 	add.w	r8, r8, #4294967295
 80136f0:	441e      	add	r6, r3
 80136f2:	e723      	b.n	801353c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80136f4:	2800      	cmp	r0, #0
 80136f6:	d0b1      	beq.n	801365c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80136f8:	5cd3      	ldrb	r3, [r2, r3]
 80136fa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80136fe:	930a      	str	r3, [sp, #40]	; 0x28
 8013700:	e7ac      	b.n	801365c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8013702:	b013      	add	sp, #76	; 0x4c
 8013704:	ecbd 8b0a 	vpop	{d8-d12}
 8013708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801370c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801370c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013710:	468b      	mov	fp, r1
 8013712:	8809      	ldrh	r1, [r1, #0]
 8013714:	b089      	sub	sp, #36	; 0x24
 8013716:	10cd      	asrs	r5, r1, #3
 8013718:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 801371c:	ea4f 2921 	mov.w	r9, r1, asr #8
 8013720:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013724:	00c9      	lsls	r1, r1, #3
 8013726:	9500      	str	r5, [sp, #0]
 8013728:	b2c9      	uxtb	r1, r1
 801372a:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 801372e:	9101      	str	r1, [sp, #4]
 8013730:	9900      	ldr	r1, [sp, #0]
 8013732:	9202      	str	r2, [sp, #8]
 8013734:	fb04 650e 	mla	r5, r4, lr, r6
 8013738:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801373c:	eb02 0805 	add.w	r8, r2, r5
 8013740:	0209      	lsls	r1, r1, #8
 8013742:	9a01      	ldr	r2, [sp, #4]
 8013744:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8013748:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 801374c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8013750:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8013754:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8013758:	4311      	orrs	r1, r2
 801375a:	2c00      	cmp	r4, #0
 801375c:	9107      	str	r1, [sp, #28]
 801375e:	db43      	blt.n	80137e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8013760:	45a2      	cmp	sl, r4
 8013762:	dd41      	ble.n	80137e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8013764:	2e00      	cmp	r6, #0
 8013766:	db3d      	blt.n	80137e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8013768:	45b6      	cmp	lr, r6
 801376a:	dd3b      	ble.n	80137e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801376c:	9a02      	ldr	r2, [sp, #8]
 801376e:	5d55      	ldrb	r5, [r2, r5]
 8013770:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013774:	441d      	add	r5, r3
 8013776:	1c72      	adds	r2, r6, #1
 8013778:	d439      	bmi.n	80137ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801377a:	4596      	cmp	lr, r2
 801377c:	dd37      	ble.n	80137ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801377e:	2f00      	cmp	r7, #0
 8013780:	d035      	beq.n	80137ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8013782:	f898 1001 	ldrb.w	r1, [r8, #1]
 8013786:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801378a:	4419      	add	r1, r3
 801378c:	3401      	adds	r4, #1
 801378e:	d432      	bmi.n	80137f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013790:	45a2      	cmp	sl, r4
 8013792:	dd30      	ble.n	80137f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013794:	b378      	cbz	r0, 80137f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013796:	2e00      	cmp	r6, #0
 8013798:	db2b      	blt.n	80137f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801379a:	45b6      	cmp	lr, r6
 801379c:	dd29      	ble.n	80137f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801379e:	f818 400e 	ldrb.w	r4, [r8, lr]
 80137a2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80137a6:	441c      	add	r4, r3
 80137a8:	3601      	adds	r6, #1
 80137aa:	d427      	bmi.n	80137fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80137ac:	45b6      	cmp	lr, r6
 80137ae:	dd25      	ble.n	80137fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80137b0:	b327      	cbz	r7, 80137fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80137b2:	44c6      	add	lr, r8
 80137b4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80137b8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80137bc:	4413      	add	r3, r2
 80137be:	782a      	ldrb	r2, [r5, #0]
 80137c0:	9202      	str	r2, [sp, #8]
 80137c2:	780a      	ldrb	r2, [r1, #0]
 80137c4:	9203      	str	r2, [sp, #12]
 80137c6:	7822      	ldrb	r2, [r4, #0]
 80137c8:	9204      	str	r2, [sp, #16]
 80137ca:	2f0f      	cmp	r7, #15
 80137cc:	781a      	ldrb	r2, [r3, #0]
 80137ce:	9205      	str	r2, [sp, #20]
 80137d0:	d801      	bhi.n	80137d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 80137d2:	280f      	cmp	r0, #15
 80137d4:	d914      	bls.n	8013800 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 80137d6:	4b3f      	ldr	r3, [pc, #252]	; (80138d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 80137d8:	4a3f      	ldr	r2, [pc, #252]	; (80138d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 80137da:	4840      	ldr	r0, [pc, #256]	; (80138dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 80137dc:	f240 11f9 	movw	r1, #505	; 0x1f9
 80137e0:	f006 fb20 	bl	8019e24 <__assert_func>
 80137e4:	ad07      	add	r5, sp, #28
 80137e6:	e7c6      	b.n	8013776 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 80137e8:	a907      	add	r1, sp, #28
 80137ea:	460d      	mov	r5, r1
 80137ec:	e7ce      	b.n	801378c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80137ee:	a907      	add	r1, sp, #28
 80137f0:	e7cc      	b.n	801378c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80137f2:	ac07      	add	r4, sp, #28
 80137f4:	e7d8      	b.n	80137a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 80137f6:	ab07      	add	r3, sp, #28
 80137f8:	461c      	mov	r4, r3
 80137fa:	e7e0      	b.n	80137be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80137fc:	ab07      	add	r3, sp, #28
 80137fe:	e7de      	b.n	80137be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8013800:	b2ba      	uxth	r2, r7
 8013802:	b280      	uxth	r0, r0
 8013804:	fb02 fa00 	mul.w	sl, r2, r0
 8013808:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801380c:	0112      	lsls	r2, r2, #4
 801380e:	b280      	uxth	r0, r0
 8013810:	f891 8002 	ldrb.w	r8, [r1, #2]
 8013814:	7849      	ldrb	r1, [r1, #1]
 8013816:	78ae      	ldrb	r6, [r5, #2]
 8013818:	786d      	ldrb	r5, [r5, #1]
 801381a:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 801381e:	eba2 020a 	sub.w	r2, r2, sl
 8013822:	b292      	uxth	r2, r2
 8013824:	ebae 0e00 	sub.w	lr, lr, r0
 8013828:	fa1f fe8e 	uxth.w	lr, lr
 801382c:	4351      	muls	r1, r2
 801382e:	fb02 f808 	mul.w	r8, r2, r8
 8013832:	fb0e 8806 	mla	r8, lr, r6, r8
 8013836:	fb0e 1505 	mla	r5, lr, r5, r1
 801383a:	78a6      	ldrb	r6, [r4, #2]
 801383c:	7861      	ldrb	r1, [r4, #1]
 801383e:	fa1f f78c 	uxth.w	r7, ip
 8013842:	fb00 8806 	mla	r8, r0, r6, r8
 8013846:	fb00 5501 	mla	r5, r0, r1, r5
 801384a:	789e      	ldrb	r6, [r3, #2]
 801384c:	7859      	ldrb	r1, [r3, #1]
 801384e:	9b00      	ldr	r3, [sp, #0]
 8013850:	ea6f 0c0c 	mvn.w	ip, ip
 8013854:	fa5f fc8c 	uxtb.w	ip, ip
 8013858:	fb0a 5101 	mla	r1, sl, r1, r5
 801385c:	fb13 f50c 	smulbb	r5, r3, ip
 8013860:	9b03      	ldr	r3, [sp, #12]
 8013862:	435a      	muls	r2, r3
 8013864:	9b02      	ldr	r3, [sp, #8]
 8013866:	fb0e 2203 	mla	r2, lr, r3, r2
 801386a:	9b04      	ldr	r3, [sp, #16]
 801386c:	fb00 2003 	mla	r0, r0, r3, r2
 8013870:	9b05      	ldr	r3, [sp, #20]
 8013872:	fb0a 8606 	mla	r6, sl, r6, r8
 8013876:	fb19 f90c 	smulbb	r9, r9, ip
 801387a:	fb0a 0a03 	mla	sl, sl, r3, r0
 801387e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013882:	9b01      	ldr	r3, [sp, #4]
 8013884:	fb06 9607 	mla	r6, r6, r7, r9
 8013888:	b2b6      	uxth	r6, r6
 801388a:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 801388e:	fb13 fc0c 	smulbb	ip, r3, ip
 8013892:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8013896:	fb01 5107 	mla	r1, r1, r7, r5
 801389a:	f106 0901 	add.w	r9, r6, #1
 801389e:	fb0a c707 	mla	r7, sl, r7, ip
 80138a2:	b2bf      	uxth	r7, r7
 80138a4:	b289      	uxth	r1, r1
 80138a6:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80138aa:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 80138ae:	1c4d      	adds	r5, r1, #1
 80138b0:	1c7e      	adds	r6, r7, #1
 80138b2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80138b6:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80138ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80138be:	0949      	lsrs	r1, r1, #5
 80138c0:	ea46 0609 	orr.w	r6, r6, r9
 80138c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80138c8:	430e      	orrs	r6, r1
 80138ca:	f8ab 6000 	strh.w	r6, [fp]
 80138ce:	b009      	add	sp, #36	; 0x24
 80138d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138d4:	0801da2b 	.word	0x0801da2b
 80138d8:	0801df5a 	.word	0x0801df5a
 80138dc:	0801d9f8 	.word	0x0801d9f8

080138e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80138e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138e4:	ed2d 8b08 	vpush	{d8-d11}
 80138e8:	b095      	sub	sp, #84	; 0x54
 80138ea:	eeb0 aa40 	vmov.f32	s20, s0
 80138ee:	9212      	str	r2, [sp, #72]	; 0x48
 80138f0:	9309      	str	r3, [sp, #36]	; 0x24
 80138f2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80138f4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80138f8:	930f      	str	r3, [sp, #60]	; 0x3c
 80138fa:	910e      	str	r1, [sp, #56]	; 0x38
 80138fc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8013900:	9013      	str	r0, [sp, #76]	; 0x4c
 8013902:	6850      	ldr	r0, [r2, #4]
 8013904:	6812      	ldr	r2, [r2, #0]
 8013906:	fb00 1303 	mla	r3, r0, r3, r1
 801390a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801390e:	930a      	str	r3, [sp, #40]	; 0x28
 8013910:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013912:	681b      	ldr	r3, [r3, #0]
 8013914:	930d      	str	r3, [sp, #52]	; 0x34
 8013916:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013918:	685c      	ldr	r4, [r3, #4]
 801391a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801391c:	43db      	mvns	r3, r3
 801391e:	b2db      	uxtb	r3, r3
 8013920:	eef0 9a60 	vmov.f32	s19, s1
 8013924:	eeb0 9a41 	vmov.f32	s18, s2
 8013928:	eeb0 8a62 	vmov.f32	s16, s5
 801392c:	eef0 8a43 	vmov.f32	s17, s6
 8013930:	eef0 ba44 	vmov.f32	s23, s8
 8013934:	eeb0 ba64 	vmov.f32	s22, s9
 8013938:	eef0 aa45 	vmov.f32	s21, s10
 801393c:	3404      	adds	r4, #4
 801393e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013940:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013942:	2b00      	cmp	r3, #0
 8013944:	dc03      	bgt.n	801394e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013946:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013948:	2b00      	cmp	r3, #0
 801394a:	f340 8255 	ble.w	8013df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801394e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013950:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8013954:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8013958:	1e48      	subs	r0, r1, #1
 801395a:	1e55      	subs	r5, r2, #1
 801395c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801395e:	2b00      	cmp	r3, #0
 8013960:	f340 80f9 	ble.w	8013b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8013964:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8013966:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013968:	1436      	asrs	r6, r6, #16
 801396a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801396e:	d406      	bmi.n	801397e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013970:	4286      	cmp	r6, r0
 8013972:	da04      	bge.n	801397e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013974:	2b00      	cmp	r3, #0
 8013976:	db02      	blt.n	801397e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013978:	42ab      	cmp	r3, r5
 801397a:	f2c0 80ed 	blt.w	8013b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801397e:	3601      	adds	r6, #1
 8013980:	f100 80da 	bmi.w	8013b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8013984:	42b1      	cmp	r1, r6
 8013986:	f2c0 80d7 	blt.w	8013b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801398a:	3301      	adds	r3, #1
 801398c:	f100 80d4 	bmi.w	8013b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8013990:	429a      	cmp	r2, r3
 8013992:	f2c0 80d1 	blt.w	8013b38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8013996:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013998:	9311      	str	r3, [sp, #68]	; 0x44
 801399a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801399c:	930c      	str	r3, [sp, #48]	; 0x30
 801399e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80139a0:	2b00      	cmp	r3, #0
 80139a2:	f340 80fa 	ble.w	8013b9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80139a6:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80139a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80139aa:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80139ac:	68c6      	ldr	r6, [r0, #12]
 80139ae:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80139b0:	141d      	asrs	r5, r3, #16
 80139b2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80139b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80139b8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80139ba:	1400      	asrs	r0, r0, #16
 80139bc:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80139c0:	6892      	ldr	r2, [r2, #8]
 80139c2:	f100 813e 	bmi.w	8013c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80139c6:	1e57      	subs	r7, r2, #1
 80139c8:	42b8      	cmp	r0, r7
 80139ca:	f280 813a 	bge.w	8013c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80139ce:	2d00      	cmp	r5, #0
 80139d0:	f2c0 8137 	blt.w	8013c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80139d4:	1e77      	subs	r7, r6, #1
 80139d6:	42bd      	cmp	r5, r7
 80139d8:	f280 8133 	bge.w	8013c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80139dc:	b212      	sxth	r2, r2
 80139de:	fb05 0002 	mla	r0, r5, r2, r0
 80139e2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80139e4:	f815 a000 	ldrb.w	sl, [r5, r0]
 80139e8:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80139ec:	182e      	adds	r6, r5, r0
 80139ee:	eb04 050a 	add.w	r5, r4, sl
 80139f2:	2b00      	cmp	r3, #0
 80139f4:	f000 8117 	beq.w	8013c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 80139f8:	f896 c001 	ldrb.w	ip, [r6, #1]
 80139fc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8013a00:	44a4      	add	ip, r4
 8013a02:	2900      	cmp	r1, #0
 8013a04:	f000 8117 	beq.w	8013c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8013a08:	18b0      	adds	r0, r6, r2
 8013a0a:	5cb2      	ldrb	r2, [r6, r2]
 8013a0c:	7840      	ldrb	r0, [r0, #1]
 8013a0e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013a12:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013a16:	4422      	add	r2, r4
 8013a18:	4420      	add	r0, r4
 8013a1a:	b29b      	uxth	r3, r3
 8013a1c:	b289      	uxth	r1, r1
 8013a1e:	fb03 f901 	mul.w	r9, r3, r1
 8013a22:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8013a26:	011b      	lsls	r3, r3, #4
 8013a28:	b289      	uxth	r1, r1
 8013a2a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8013a2e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8013a32:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8013a34:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8013a38:	f8b6 e000 	ldrh.w	lr, [r6]
 8013a3c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8013a40:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8013a44:	eba3 0309 	sub.w	r3, r3, r9
 8013a48:	b29b      	uxth	r3, r3
 8013a4a:	eba8 0801 	sub.w	r8, r8, r1
 8013a4e:	fa1f f888 	uxth.w	r8, r8
 8013a52:	435f      	muls	r7, r3
 8013a54:	fb08 770b 	mla	r7, r8, fp, r7
 8013a58:	f892 b002 	ldrb.w	fp, [r2, #2]
 8013a5c:	9310      	str	r3, [sp, #64]	; 0x40
 8013a5e:	fb01 770b 	mla	r7, r1, fp, r7
 8013a62:	f890 b002 	ldrb.w	fp, [r0, #2]
 8013a66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a68:	fb09 770b 	mla	r7, r9, fp, r7
 8013a6c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8013a70:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8013a74:	fb1b fb03 	smulbb	fp, fp, r3
 8013a78:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8013a7c:	fb07 b706 	mla	r7, r7, r6, fp
 8013a80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013a82:	f895 b001 	ldrb.w	fp, [r5, #1]
 8013a86:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8013a8a:	f89c c000 	ldrb.w	ip, [ip]
 8013a8e:	435d      	muls	r5, r3
 8013a90:	fb08 550b 	mla	r5, r8, fp, r5
 8013a94:	f892 b001 	ldrb.w	fp, [r2, #1]
 8013a98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a9a:	fb01 550b 	mla	r5, r1, fp, r5
 8013a9e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8013aa2:	fb09 550b 	mla	r5, r9, fp, r5
 8013aa6:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8013aaa:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8013aae:	fb1b fb03 	smulbb	fp, fp, r3
 8013ab2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013ab4:	fb03 f30c 	mul.w	r3, r3, ip
 8013ab8:	f892 c000 	ldrb.w	ip, [r2]
 8013abc:	fb08 330a 	mla	r3, r8, sl, r3
 8013ac0:	fb01 330c 	mla	r3, r1, ip, r3
 8013ac4:	f890 c000 	ldrb.w	ip, [r0]
 8013ac8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013acc:	fb09 3c0c 	mla	ip, r9, ip, r3
 8013ad0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013ad2:	fa5f fe8e 	uxtb.w	lr, lr
 8013ad6:	b2bf      	uxth	r7, r7
 8013ad8:	fb1e fe03 	smulbb	lr, lr, r3
 8013adc:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8013ae0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8013ae4:	fb05 b506 	mla	r5, r5, r6, fp
 8013ae8:	1c7b      	adds	r3, r7, #1
 8013aea:	fb0c e606 	mla	r6, ip, r6, lr
 8013aee:	b2ad      	uxth	r5, r5
 8013af0:	b2b6      	uxth	r6, r6
 8013af2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8013af6:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8013afa:	f105 0b01 	add.w	fp, r5, #1
 8013afe:	1c77      	adds	r7, r6, #1
 8013b00:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8013b04:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8013b08:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013b0c:	096d      	lsrs	r5, r5, #5
 8013b0e:	431f      	orrs	r7, r3
 8013b10:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013b14:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013b16:	433d      	orrs	r5, r7
 8013b18:	801d      	strh	r5, [r3, #0]
 8013b1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013b1c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013b1e:	3302      	adds	r3, #2
 8013b20:	930c      	str	r3, [sp, #48]	; 0x30
 8013b22:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013b24:	4413      	add	r3, r2
 8013b26:	9327      	str	r3, [sp, #156]	; 0x9c
 8013b28:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8013b2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013b2c:	4413      	add	r3, r2
 8013b2e:	9328      	str	r3, [sp, #160]	; 0xa0
 8013b30:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013b32:	3b01      	subs	r3, #1
 8013b34:	9311      	str	r3, [sp, #68]	; 0x44
 8013b36:	e732      	b.n	801399e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8013b38:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013b3a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8013b3c:	4433      	add	r3, r6
 8013b3e:	9327      	str	r3, [sp, #156]	; 0x9c
 8013b40:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8013b42:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013b44:	4433      	add	r3, r6
 8013b46:	9328      	str	r3, [sp, #160]	; 0xa0
 8013b48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b4a:	3b01      	subs	r3, #1
 8013b4c:	9309      	str	r3, [sp, #36]	; 0x24
 8013b4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013b50:	3302      	adds	r3, #2
 8013b52:	930a      	str	r3, [sp, #40]	; 0x28
 8013b54:	e702      	b.n	801395c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013b56:	d027      	beq.n	8013ba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013b58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b5a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8013b5c:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8013b5e:	3b01      	subs	r3, #1
 8013b60:	fb00 5003 	mla	r0, r0, r3, r5
 8013b64:	1400      	asrs	r0, r0, #16
 8013b66:	f53f af16 	bmi.w	8013996 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013b6a:	3901      	subs	r1, #1
 8013b6c:	4288      	cmp	r0, r1
 8013b6e:	f6bf af12 	bge.w	8013996 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013b72:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013b74:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8013b76:	fb01 0303 	mla	r3, r1, r3, r0
 8013b7a:	141b      	asrs	r3, r3, #16
 8013b7c:	f53f af0b 	bmi.w	8013996 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013b80:	3a01      	subs	r2, #1
 8013b82:	4293      	cmp	r3, r2
 8013b84:	f6bf af07 	bge.w	8013996 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013b88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b8a:	9311      	str	r3, [sp, #68]	; 0x44
 8013b8c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8013b90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013b92:	930c      	str	r3, [sp, #48]	; 0x30
 8013b94:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013b96:	2b00      	cmp	r3, #0
 8013b98:	dc70      	bgt.n	8013c7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8013b9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b9c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013b9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013ba2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013ba6:	930a      	str	r3, [sp, #40]	; 0x28
 8013ba8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013baa:	2b00      	cmp	r3, #0
 8013bac:	f340 8124 	ble.w	8013df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8013bb0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013bb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013bb8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013bbc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013bbe:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8013bc2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013bc6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013bca:	eef0 6a48 	vmov.f32	s13, s16
 8013bce:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013bd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013bd6:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013bda:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8013bde:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013be2:	eef0 6a68 	vmov.f32	s13, s17
 8013be6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013bea:	ee18 2a10 	vmov	r2, s16
 8013bee:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013bf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013bf6:	ee18 2a90 	vmov	r2, s17
 8013bfa:	9329      	str	r3, [sp, #164]	; 0xa4
 8013bfc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013bfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8013c02:	932a      	str	r3, [sp, #168]	; 0xa8
 8013c04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c06:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013c08:	3b01      	subs	r3, #1
 8013c0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013c0e:	930e      	str	r3, [sp, #56]	; 0x38
 8013c10:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013c12:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8013c16:	bf08      	it	eq
 8013c18:	4613      	moveq	r3, r2
 8013c1a:	9309      	str	r3, [sp, #36]	; 0x24
 8013c1c:	eef0 8a67 	vmov.f32	s17, s15
 8013c20:	eeb0 8a47 	vmov.f32	s16, s14
 8013c24:	e68c      	b.n	8013940 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013c26:	b149      	cbz	r1, 8013c3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8013c28:	5cb2      	ldrb	r2, [r6, r2]
 8013c2a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013c2e:	4422      	add	r2, r4
 8013c30:	4628      	mov	r0, r5
 8013c32:	46ac      	mov	ip, r5
 8013c34:	e6f1      	b.n	8013a1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8013c36:	4628      	mov	r0, r5
 8013c38:	462a      	mov	r2, r5
 8013c3a:	e6ee      	b.n	8013a1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8013c3c:	4628      	mov	r0, r5
 8013c3e:	462a      	mov	r2, r5
 8013c40:	e7f7      	b.n	8013c32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8013c42:	1c47      	adds	r7, r0, #1
 8013c44:	f53f af69 	bmi.w	8013b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8013c48:	42ba      	cmp	r2, r7
 8013c4a:	f6ff af66 	blt.w	8013b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8013c4e:	1c6f      	adds	r7, r5, #1
 8013c50:	f53f af63 	bmi.w	8013b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8013c54:	42be      	cmp	r6, r7
 8013c56:	f6ff af60 	blt.w	8013b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8013c5a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013c5c:	9002      	str	r0, [sp, #8]
 8013c5e:	b236      	sxth	r6, r6
 8013c60:	b212      	sxth	r2, r2
 8013c62:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8013c66:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8013c6a:	9200      	str	r2, [sp, #0]
 8013c6c:	9601      	str	r6, [sp, #4]
 8013c6e:	4623      	mov	r3, r4
 8013c70:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8013c74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013c76:	f7ff fd49 	bl	801370c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8013c7a:	e74e      	b.n	8013b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8013c7c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8013c7e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8013c80:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8013c82:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013c84:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8013c88:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013c8a:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8013c8e:	142d      	asrs	r5, r5, #16
 8013c90:	1400      	asrs	r0, r0, #16
 8013c92:	fb02 5000 	mla	r0, r2, r0, r5
 8013c96:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8013c98:	f815 9000 	ldrb.w	r9, [r5, r0]
 8013c9c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013ca0:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8013ca4:	182e      	adds	r6, r5, r0
 8013ca6:	eb04 0509 	add.w	r5, r4, r9
 8013caa:	2b00      	cmp	r3, #0
 8013cac:	f000 8096 	beq.w	8013ddc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8013cb0:	7877      	ldrb	r7, [r6, #1]
 8013cb2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8013cb6:	4427      	add	r7, r4
 8013cb8:	2900      	cmp	r1, #0
 8013cba:	f000 8097 	beq.w	8013dec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8013cbe:	18b0      	adds	r0, r6, r2
 8013cc0:	5cb2      	ldrb	r2, [r6, r2]
 8013cc2:	7840      	ldrb	r0, [r0, #1]
 8013cc4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013cc8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013ccc:	4422      	add	r2, r4
 8013cce:	4420      	add	r0, r4
 8013cd0:	b29b      	uxth	r3, r3
 8013cd2:	b289      	uxth	r1, r1
 8013cd4:	fb03 f801 	mul.w	r8, r3, r1
 8013cd8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8013cda:	f895 b002 	ldrb.w	fp, [r5, #2]
 8013cde:	f8b6 c000 	ldrh.w	ip, [r6]
 8013ce2:	78be      	ldrb	r6, [r7, #2]
 8013ce4:	f814 9009 	ldrb.w	r9, [r4, r9]
 8013ce8:	011b      	lsls	r3, r3, #4
 8013cea:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8013cee:	b289      	uxth	r1, r1
 8013cf0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8013cf4:	eba3 0308 	sub.w	r3, r3, r8
 8013cf8:	b29b      	uxth	r3, r3
 8013cfa:	ebae 0e01 	sub.w	lr, lr, r1
 8013cfe:	fa1f fe8e 	uxth.w	lr, lr
 8013d02:	435e      	muls	r6, r3
 8013d04:	fb0e 660b 	mla	r6, lr, fp, r6
 8013d08:	f892 b002 	ldrb.w	fp, [r2, #2]
 8013d0c:	9310      	str	r3, [sp, #64]	; 0x40
 8013d0e:	fb01 660b 	mla	r6, r1, fp, r6
 8013d12:	f890 b002 	ldrb.w	fp, [r0, #2]
 8013d16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013d18:	fb08 660b 	mla	r6, r8, fp, r6
 8013d1c:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8013d20:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8013d24:	fb1b fb03 	smulbb	fp, fp, r3
 8013d28:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013d2c:	fb06 b60a 	mla	r6, r6, sl, fp
 8013d30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d32:	f895 b001 	ldrb.w	fp, [r5, #1]
 8013d36:	787d      	ldrb	r5, [r7, #1]
 8013d38:	783f      	ldrb	r7, [r7, #0]
 8013d3a:	435d      	muls	r5, r3
 8013d3c:	fb0e 550b 	mla	r5, lr, fp, r5
 8013d40:	f892 b001 	ldrb.w	fp, [r2, #1]
 8013d44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013d46:	fb01 550b 	mla	r5, r1, fp, r5
 8013d4a:	f890 b001 	ldrb.w	fp, [r0, #1]
 8013d4e:	fb08 550b 	mla	r5, r8, fp, r5
 8013d52:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8013d56:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8013d5a:	fb1b fb03 	smulbb	fp, fp, r3
 8013d5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d60:	437b      	muls	r3, r7
 8013d62:	7817      	ldrb	r7, [r2, #0]
 8013d64:	fb0e 3309 	mla	r3, lr, r9, r3
 8013d68:	fb01 3307 	mla	r3, r1, r7, r3
 8013d6c:	7807      	ldrb	r7, [r0, #0]
 8013d6e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013d72:	fb08 3707 	mla	r7, r8, r7, r3
 8013d76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013d78:	fa5f fc8c 	uxtb.w	ip, ip
 8013d7c:	fb1c fc03 	smulbb	ip, ip, r3
 8013d80:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8013d84:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8013d88:	fb05 b50a 	mla	r5, r5, sl, fp
 8013d8c:	fb07 c70a 	mla	r7, r7, sl, ip
 8013d90:	b2b6      	uxth	r6, r6
 8013d92:	b2ad      	uxth	r5, r5
 8013d94:	b2bf      	uxth	r7, r7
 8013d96:	1c73      	adds	r3, r6, #1
 8013d98:	1c7a      	adds	r2, r7, #1
 8013d9a:	f105 0b01 	add.w	fp, r5, #1
 8013d9e:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8013da2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8013da6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8013daa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013dae:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013db2:	096d      	lsrs	r5, r5, #5
 8013db4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013db6:	4316      	orrs	r6, r2
 8013db8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013dbc:	432e      	orrs	r6, r5
 8013dbe:	f823 6b02 	strh.w	r6, [r3], #2
 8013dc2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013dc4:	930c      	str	r3, [sp, #48]	; 0x30
 8013dc6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013dc8:	4413      	add	r3, r2
 8013dca:	9327      	str	r3, [sp, #156]	; 0x9c
 8013dcc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8013dce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013dd0:	4413      	add	r3, r2
 8013dd2:	9328      	str	r3, [sp, #160]	; 0xa0
 8013dd4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013dd6:	3b01      	subs	r3, #1
 8013dd8:	9311      	str	r3, [sp, #68]	; 0x44
 8013dda:	e6db      	b.n	8013b94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8013ddc:	b149      	cbz	r1, 8013df2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8013dde:	5cb2      	ldrb	r2, [r6, r2]
 8013de0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013de4:	4422      	add	r2, r4
 8013de6:	4628      	mov	r0, r5
 8013de8:	462f      	mov	r7, r5
 8013dea:	e771      	b.n	8013cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8013dec:	4628      	mov	r0, r5
 8013dee:	462a      	mov	r2, r5
 8013df0:	e76e      	b.n	8013cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8013df2:	4628      	mov	r0, r5
 8013df4:	462a      	mov	r2, r5
 8013df6:	e7f7      	b.n	8013de8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8013df8:	b015      	add	sp, #84	; 0x54
 8013dfa:	ecbd 8b08 	vpop	{d8-d11}
 8013dfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013e04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8013e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e08:	880e      	ldrh	r6, [r1, #0]
 8013e0a:	b085      	sub	sp, #20
 8013e0c:	0230      	lsls	r0, r6, #8
 8013e0e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8013e12:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8013e16:	0170      	lsls	r0, r6, #5
 8013e18:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8013e1c:	9101      	str	r1, [sp, #4]
 8013e1e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8013e22:	00f6      	lsls	r6, r6, #3
 8013e24:	ea4b 0000 	orr.w	r0, fp, r0
 8013e28:	b2f6      	uxtb	r6, r6
 8013e2a:	4691      	mov	r9, r2
 8013e2c:	fb05 7a0c 	mla	sl, r5, ip, r7
 8013e30:	4306      	orrs	r6, r0
 8013e32:	2d00      	cmp	r5, #0
 8013e34:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8013e38:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8013e3c:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8013e40:	9603      	str	r6, [sp, #12]
 8013e42:	eb09 0e0a 	add.w	lr, r9, sl
 8013e46:	db42      	blt.n	8013ece <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8013e48:	45a8      	cmp	r8, r5
 8013e4a:	dd40      	ble.n	8013ece <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8013e4c:	2f00      	cmp	r7, #0
 8013e4e:	db3c      	blt.n	8013eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8013e50:	45bc      	cmp	ip, r7
 8013e52:	dd3a      	ble.n	8013eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8013e54:	f819 600a 	ldrb.w	r6, [r9, sl]
 8013e58:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8013e5c:	441e      	add	r6, r3
 8013e5e:	1c78      	adds	r0, r7, #1
 8013e60:	d438      	bmi.n	8013ed4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8013e62:	4584      	cmp	ip, r0
 8013e64:	dd36      	ble.n	8013ed4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8013e66:	b3aa      	cbz	r2, 8013ed4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8013e68:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8013e6c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013e70:	4418      	add	r0, r3
 8013e72:	3501      	adds	r5, #1
 8013e74:	d432      	bmi.n	8013edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8013e76:	45a8      	cmp	r8, r5
 8013e78:	dd30      	ble.n	8013edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8013e7a:	b37c      	cbz	r4, 8013edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8013e7c:	2f00      	cmp	r7, #0
 8013e7e:	db2b      	blt.n	8013ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8013e80:	45bc      	cmp	ip, r7
 8013e82:	dd29      	ble.n	8013ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8013e84:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8013e88:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013e8c:	441d      	add	r5, r3
 8013e8e:	3701      	adds	r7, #1
 8013e90:	d427      	bmi.n	8013ee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8013e92:	45bc      	cmp	ip, r7
 8013e94:	dd25      	ble.n	8013ee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8013e96:	b322      	cbz	r2, 8013ee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8013e98:	44f4      	add	ip, lr
 8013e9a:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8013e9e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8013ea2:	443b      	add	r3, r7
 8013ea4:	781f      	ldrb	r7, [r3, #0]
 8013ea6:	f896 9000 	ldrb.w	r9, [r6]
 8013eaa:	f890 a000 	ldrb.w	sl, [r0]
 8013eae:	f895 8000 	ldrb.w	r8, [r5]
 8013eb2:	2a0f      	cmp	r2, #15
 8013eb4:	4639      	mov	r1, r7
 8013eb6:	d801      	bhi.n	8013ebc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8013eb8:	2c0f      	cmp	r4, #15
 8013eba:	d914      	bls.n	8013ee6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8013ebc:	4b2c      	ldr	r3, [pc, #176]	; (8013f70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8013ebe:	4a2d      	ldr	r2, [pc, #180]	; (8013f74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8013ec0:	482d      	ldr	r0, [pc, #180]	; (8013f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8013ec2:	f240 11f9 	movw	r1, #505	; 0x1f9
 8013ec6:	f005 ffad 	bl	8019e24 <__assert_func>
 8013eca:	ae03      	add	r6, sp, #12
 8013ecc:	e7c7      	b.n	8013e5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8013ece:	a803      	add	r0, sp, #12
 8013ed0:	4606      	mov	r6, r0
 8013ed2:	e7ce      	b.n	8013e72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8013ed4:	a803      	add	r0, sp, #12
 8013ed6:	e7cc      	b.n	8013e72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8013ed8:	ad03      	add	r5, sp, #12
 8013eda:	e7d8      	b.n	8013e8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8013edc:	ab03      	add	r3, sp, #12
 8013ede:	461d      	mov	r5, r3
 8013ee0:	e7e0      	b.n	8013ea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8013ee2:	ab03      	add	r3, sp, #12
 8013ee4:	e7de      	b.n	8013ea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8013ee6:	b292      	uxth	r2, r2
 8013ee8:	b2a4      	uxth	r4, r4
 8013eea:	fb02 fe04 	mul.w	lr, r2, r4
 8013eee:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8013ef2:	0112      	lsls	r2, r2, #4
 8013ef4:	b2a4      	uxth	r4, r4
 8013ef6:	f890 c002 	ldrb.w	ip, [r0, #2]
 8013efa:	f896 b002 	ldrb.w	fp, [r6, #2]
 8013efe:	7840      	ldrb	r0, [r0, #1]
 8013f00:	7876      	ldrb	r6, [r6, #1]
 8013f02:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8013f06:	eba2 020e 	sub.w	r2, r2, lr
 8013f0a:	b292      	uxth	r2, r2
 8013f0c:	1b3f      	subs	r7, r7, r4
 8013f0e:	b2bf      	uxth	r7, r7
 8013f10:	fb02 fc0c 	mul.w	ip, r2, ip
 8013f14:	fb07 cc0b 	mla	ip, r7, fp, ip
 8013f18:	f895 b002 	ldrb.w	fp, [r5, #2]
 8013f1c:	fb04 cc0b 	mla	ip, r4, fp, ip
 8013f20:	f893 b002 	ldrb.w	fp, [r3, #2]
 8013f24:	785b      	ldrb	r3, [r3, #1]
 8013f26:	fb0e cc0b 	mla	ip, lr, fp, ip
 8013f2a:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8013f2e:	fb02 fc0a 	mul.w	ip, r2, sl
 8013f32:	4342      	muls	r2, r0
 8013f34:	7868      	ldrb	r0, [r5, #1]
 8013f36:	fb07 cc09 	mla	ip, r7, r9, ip
 8013f3a:	fb07 2206 	mla	r2, r7, r6, r2
 8013f3e:	fb04 cc08 	mla	ip, r4, r8, ip
 8013f42:	fb04 2400 	mla	r4, r4, r0, r2
 8013f46:	fb0e cc01 	mla	ip, lr, r1, ip
 8013f4a:	fb0e 4e03 	mla	lr, lr, r3, r4
 8013f4e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013f52:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8013f56:	ea4c 0c0b 	orr.w	ip, ip, fp
 8013f5a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8013f5e:	9b01      	ldr	r3, [sp, #4]
 8013f60:	ea4c 0c0e 	orr.w	ip, ip, lr
 8013f64:	f8a3 c000 	strh.w	ip, [r3]
 8013f68:	b005      	add	sp, #20
 8013f6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f6e:	bf00      	nop
 8013f70:	0801da2b 	.word	0x0801da2b
 8013f74:	0801df5a 	.word	0x0801df5a
 8013f78:	0801d9f8 	.word	0x0801d9f8

08013f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f80:	ed2d 8b08 	vpush	{d8-d11}
 8013f84:	b08f      	sub	sp, #60	; 0x3c
 8013f86:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8013f8a:	920c      	str	r2, [sp, #48]	; 0x30
 8013f8c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013f8e:	910a      	str	r1, [sp, #40]	; 0x28
 8013f90:	9306      	str	r3, [sp, #24]
 8013f92:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8013f96:	900d      	str	r0, [sp, #52]	; 0x34
 8013f98:	6850      	ldr	r0, [r2, #4]
 8013f9a:	6812      	ldr	r2, [r2, #0]
 8013f9c:	fb00 1303 	mla	r3, r0, r3, r1
 8013fa0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013fa4:	9307      	str	r3, [sp, #28]
 8013fa6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013fa8:	681b      	ldr	r3, [r3, #0]
 8013faa:	9308      	str	r3, [sp, #32]
 8013fac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013fae:	685c      	ldr	r4, [r3, #4]
 8013fb0:	eeb0 aa40 	vmov.f32	s20, s0
 8013fb4:	eef0 9a60 	vmov.f32	s19, s1
 8013fb8:	eeb0 9a41 	vmov.f32	s18, s2
 8013fbc:	eeb0 8a62 	vmov.f32	s16, s5
 8013fc0:	eef0 8a43 	vmov.f32	s17, s6
 8013fc4:	eef0 ba44 	vmov.f32	s23, s8
 8013fc8:	eeb0 ba64 	vmov.f32	s22, s9
 8013fcc:	eef0 aa45 	vmov.f32	s21, s10
 8013fd0:	3404      	adds	r4, #4
 8013fd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013fd4:	2b00      	cmp	r3, #0
 8013fd6:	dc03      	bgt.n	8013fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013fd8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013fda:	2b00      	cmp	r3, #0
 8013fdc:	f340 81d6 	ble.w	801438c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8013fe0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013fe2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8013fe6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8013fea:	1e48      	subs	r0, r1, #1
 8013fec:	1e56      	subs	r6, r2, #1
 8013fee:	9b06      	ldr	r3, [sp, #24]
 8013ff0:	2b00      	cmp	r3, #0
 8013ff2:	f340 80b7 	ble.w	8014164 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013ff6:	ea5f 472b 	movs.w	r7, fp, asr #16
 8013ffa:	ea4f 4325 	mov.w	r3, r5, asr #16
 8013ffe:	d406      	bmi.n	801400e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014000:	4287      	cmp	r7, r0
 8014002:	da04      	bge.n	801400e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014004:	2b00      	cmp	r3, #0
 8014006:	db02      	blt.n	801400e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014008:	42b3      	cmp	r3, r6
 801400a:	f2c0 80ac 	blt.w	8014166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801400e:	3701      	adds	r7, #1
 8014010:	f100 809d 	bmi.w	801414e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014014:	42b9      	cmp	r1, r7
 8014016:	f2c0 809a 	blt.w	801414e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801401a:	3301      	adds	r3, #1
 801401c:	f100 8097 	bmi.w	801414e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014020:	429a      	cmp	r2, r3
 8014022:	f2c0 8094 	blt.w	801414e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014026:	9b06      	ldr	r3, [sp, #24]
 8014028:	930b      	str	r3, [sp, #44]	; 0x2c
 801402a:	9b07      	ldr	r3, [sp, #28]
 801402c:	9309      	str	r3, [sp, #36]	; 0x24
 801402e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014030:	2b00      	cmp	r3, #0
 8014032:	f340 80b5 	ble.w	80141a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8014036:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8014038:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801403a:	68c7      	ldr	r7, [r0, #12]
 801403c:	6892      	ldr	r2, [r2, #8]
 801403e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8014042:	ea4f 4625 	mov.w	r6, r5, asr #16
 8014046:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801404a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801404e:	f100 80fb 	bmi.w	8014248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8014052:	f102 3cff 	add.w	ip, r2, #4294967295
 8014056:	4560      	cmp	r0, ip
 8014058:	f280 80f6 	bge.w	8014248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801405c:	2e00      	cmp	r6, #0
 801405e:	f2c0 80f3 	blt.w	8014248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8014062:	f107 3cff 	add.w	ip, r7, #4294967295
 8014066:	4566      	cmp	r6, ip
 8014068:	f280 80ee 	bge.w	8014248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801406c:	b212      	sxth	r2, r2
 801406e:	fb06 0002 	mla	r0, r6, r2, r0
 8014072:	9e08      	ldr	r6, [sp, #32]
 8014074:	1837      	adds	r7, r6, r0
 8014076:	5c30      	ldrb	r0, [r6, r0]
 8014078:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801407c:	eb04 0c08 	add.w	ip, r4, r8
 8014080:	2b00      	cmp	r3, #0
 8014082:	f000 80d3 	beq.w	801422c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8014086:	787e      	ldrb	r6, [r7, #1]
 8014088:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801408c:	4426      	add	r6, r4
 801408e:	2900      	cmp	r1, #0
 8014090:	f000 80d4 	beq.w	801423c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8014094:	18b8      	adds	r0, r7, r2
 8014096:	5cba      	ldrb	r2, [r7, r2]
 8014098:	7840      	ldrb	r0, [r0, #1]
 801409a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801409e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80140a2:	4422      	add	r2, r4
 80140a4:	4420      	add	r0, r4
 80140a6:	b29b      	uxth	r3, r3
 80140a8:	b289      	uxth	r1, r1
 80140aa:	fb03 f901 	mul.w	r9, r3, r1
 80140ae:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80140b2:	011b      	lsls	r3, r3, #4
 80140b4:	b289      	uxth	r1, r1
 80140b6:	78b7      	ldrb	r7, [r6, #2]
 80140b8:	f89c a002 	ldrb.w	sl, [ip, #2]
 80140bc:	f89c c001 	ldrb.w	ip, [ip, #1]
 80140c0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80140c4:	eba3 0309 	sub.w	r3, r3, r9
 80140c8:	b29b      	uxth	r3, r3
 80140ca:	ebae 0e01 	sub.w	lr, lr, r1
 80140ce:	fa1f fe8e 	uxth.w	lr, lr
 80140d2:	435f      	muls	r7, r3
 80140d4:	fb0e 770a 	mla	r7, lr, sl, r7
 80140d8:	f892 a002 	ldrb.w	sl, [r2, #2]
 80140dc:	fb01 770a 	mla	r7, r1, sl, r7
 80140e0:	f890 a002 	ldrb.w	sl, [r0, #2]
 80140e4:	fb09 7a0a 	mla	sl, r9, sl, r7
 80140e8:	f814 7008 	ldrb.w	r7, [r4, r8]
 80140ec:	f896 8000 	ldrb.w	r8, [r6]
 80140f0:	7876      	ldrb	r6, [r6, #1]
 80140f2:	fb03 f808 	mul.w	r8, r3, r8
 80140f6:	fb0e 8807 	mla	r8, lr, r7, r8
 80140fa:	7817      	ldrb	r7, [r2, #0]
 80140fc:	fb01 8807 	mla	r8, r1, r7, r8
 8014100:	7807      	ldrb	r7, [r0, #0]
 8014102:	fb09 8707 	mla	r7, r9, r7, r8
 8014106:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801410a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801410e:	ea47 070a 	orr.w	r7, r7, sl
 8014112:	4373      	muls	r3, r6
 8014114:	f892 a001 	ldrb.w	sl, [r2, #1]
 8014118:	fb0e 330c 	mla	r3, lr, ip, r3
 801411c:	fb01 310a 	mla	r1, r1, sl, r3
 8014120:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014124:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014126:	fb09 1a0a 	mla	sl, r9, sl, r1
 801412a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801412e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014132:	ea47 070a 	orr.w	r7, r7, sl
 8014136:	801f      	strh	r7, [r3, #0]
 8014138:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801413a:	3302      	adds	r3, #2
 801413c:	9309      	str	r3, [sp, #36]	; 0x24
 801413e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014140:	449b      	add	fp, r3
 8014142:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014144:	441d      	add	r5, r3
 8014146:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014148:	3b01      	subs	r3, #1
 801414a:	930b      	str	r3, [sp, #44]	; 0x2c
 801414c:	e76f      	b.n	801402e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801414e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014150:	449b      	add	fp, r3
 8014152:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014154:	441d      	add	r5, r3
 8014156:	9b06      	ldr	r3, [sp, #24]
 8014158:	3b01      	subs	r3, #1
 801415a:	9306      	str	r3, [sp, #24]
 801415c:	9b07      	ldr	r3, [sp, #28]
 801415e:	3302      	adds	r3, #2
 8014160:	9307      	str	r3, [sp, #28]
 8014162:	e744      	b.n	8013fee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014164:	d023      	beq.n	80141ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8014166:	9b06      	ldr	r3, [sp, #24]
 8014168:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801416a:	3b01      	subs	r3, #1
 801416c:	fb00 b003 	mla	r0, r0, r3, fp
 8014170:	1400      	asrs	r0, r0, #16
 8014172:	f53f af58 	bmi.w	8014026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014176:	3901      	subs	r1, #1
 8014178:	4288      	cmp	r0, r1
 801417a:	f6bf af54 	bge.w	8014026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801417e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8014180:	fb01 5303 	mla	r3, r1, r3, r5
 8014184:	141b      	asrs	r3, r3, #16
 8014186:	f53f af4e 	bmi.w	8014026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801418a:	3a01      	subs	r2, #1
 801418c:	4293      	cmp	r3, r2
 801418e:	f6bf af4a 	bge.w	8014026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014192:	9b06      	ldr	r3, [sp, #24]
 8014194:	9309      	str	r3, [sp, #36]	; 0x24
 8014196:	9b07      	ldr	r3, [sp, #28]
 8014198:	930b      	str	r3, [sp, #44]	; 0x2c
 801419a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801419c:	2b00      	cmp	r3, #0
 801419e:	dc70      	bgt.n	8014282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80141a0:	9b06      	ldr	r3, [sp, #24]
 80141a2:	9a07      	ldr	r2, [sp, #28]
 80141a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80141a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80141ac:	9307      	str	r3, [sp, #28]
 80141ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80141b0:	2b00      	cmp	r3, #0
 80141b2:	f340 80eb 	ble.w	801438c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 80141b6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80141ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80141be:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80141c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80141c4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80141c8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80141cc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80141d0:	eef0 6a48 	vmov.f32	s13, s16
 80141d4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80141d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80141dc:	ee37 8a48 	vsub.f32	s16, s14, s16
 80141e0:	ee16 ba90 	vmov	fp, s13
 80141e4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80141e8:	eef0 6a68 	vmov.f32	s13, s17
 80141ec:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80141f0:	ee18 2a10 	vmov	r2, s16
 80141f4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80141f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80141fc:	ee18 2a90 	vmov	r2, s17
 8014200:	9323      	str	r3, [sp, #140]	; 0x8c
 8014202:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014204:	fb92 f3f3 	sdiv	r3, r2, r3
 8014208:	9324      	str	r3, [sp, #144]	; 0x90
 801420a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801420c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801420e:	3b01      	subs	r3, #1
 8014210:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014214:	930a      	str	r3, [sp, #40]	; 0x28
 8014216:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014218:	bf08      	it	eq
 801421a:	4613      	moveq	r3, r2
 801421c:	ee16 5a90 	vmov	r5, s13
 8014220:	9306      	str	r3, [sp, #24]
 8014222:	eef0 8a67 	vmov.f32	s17, s15
 8014226:	eeb0 8a47 	vmov.f32	s16, s14
 801422a:	e6d2      	b.n	8013fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801422c:	b149      	cbz	r1, 8014242 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 801422e:	5cba      	ldrb	r2, [r7, r2]
 8014230:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014234:	4422      	add	r2, r4
 8014236:	4660      	mov	r0, ip
 8014238:	4666      	mov	r6, ip
 801423a:	e734      	b.n	80140a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801423c:	4660      	mov	r0, ip
 801423e:	4662      	mov	r2, ip
 8014240:	e731      	b.n	80140a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8014242:	4660      	mov	r0, ip
 8014244:	4662      	mov	r2, ip
 8014246:	e7f7      	b.n	8014238 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8014248:	f110 0c01 	adds.w	ip, r0, #1
 801424c:	f53f af74 	bmi.w	8014138 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014250:	4562      	cmp	r2, ip
 8014252:	f6ff af71 	blt.w	8014138 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014256:	f116 0c01 	adds.w	ip, r6, #1
 801425a:	f53f af6d 	bmi.w	8014138 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801425e:	4567      	cmp	r7, ip
 8014260:	f6ff af6a 	blt.w	8014138 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014264:	b23f      	sxth	r7, r7
 8014266:	b212      	sxth	r2, r2
 8014268:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801426c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8014270:	9200      	str	r2, [sp, #0]
 8014272:	9701      	str	r7, [sp, #4]
 8014274:	4623      	mov	r3, r4
 8014276:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801427a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801427c:	f7ff fdc2 	bl	8013e04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8014280:	e75a      	b.n	8014138 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014282:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014284:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8014288:	ea4f 462b 	mov.w	r6, fp, asr #16
 801428c:	1428      	asrs	r0, r5, #16
 801428e:	fb02 6000 	mla	r0, r2, r0, r6
 8014292:	9e08      	ldr	r6, [sp, #32]
 8014294:	f816 8000 	ldrb.w	r8, [r6, r0]
 8014298:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801429c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80142a0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80142a4:	1837      	adds	r7, r6, r0
 80142a6:	eb04 0c08 	add.w	ip, r4, r8
 80142aa:	2b00      	cmp	r3, #0
 80142ac:	d060      	beq.n	8014370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80142ae:	787e      	ldrb	r6, [r7, #1]
 80142b0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80142b4:	4426      	add	r6, r4
 80142b6:	2900      	cmp	r1, #0
 80142b8:	d062      	beq.n	8014380 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 80142ba:	18b8      	adds	r0, r7, r2
 80142bc:	5cba      	ldrb	r2, [r7, r2]
 80142be:	7840      	ldrb	r0, [r0, #1]
 80142c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80142c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80142c8:	4422      	add	r2, r4
 80142ca:	4420      	add	r0, r4
 80142cc:	b29b      	uxth	r3, r3
 80142ce:	b289      	uxth	r1, r1
 80142d0:	fb03 f901 	mul.w	r9, r3, r1
 80142d4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80142d8:	011b      	lsls	r3, r3, #4
 80142da:	b289      	uxth	r1, r1
 80142dc:	78b7      	ldrb	r7, [r6, #2]
 80142de:	f89c a002 	ldrb.w	sl, [ip, #2]
 80142e2:	f89c c001 	ldrb.w	ip, [ip, #1]
 80142e6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80142ea:	eba3 0309 	sub.w	r3, r3, r9
 80142ee:	b29b      	uxth	r3, r3
 80142f0:	ebae 0e01 	sub.w	lr, lr, r1
 80142f4:	fa1f fe8e 	uxth.w	lr, lr
 80142f8:	435f      	muls	r7, r3
 80142fa:	fb0e 770a 	mla	r7, lr, sl, r7
 80142fe:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014302:	fb01 770a 	mla	r7, r1, sl, r7
 8014306:	f890 a002 	ldrb.w	sl, [r0, #2]
 801430a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801430e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014312:	f896 8000 	ldrb.w	r8, [r6]
 8014316:	7876      	ldrb	r6, [r6, #1]
 8014318:	fb03 f808 	mul.w	r8, r3, r8
 801431c:	fb0e 8807 	mla	r8, lr, r7, r8
 8014320:	7817      	ldrb	r7, [r2, #0]
 8014322:	fb01 8807 	mla	r8, r1, r7, r8
 8014326:	7807      	ldrb	r7, [r0, #0]
 8014328:	fb09 8707 	mla	r7, r9, r7, r8
 801432c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8014330:	4373      	muls	r3, r6
 8014332:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014336:	7856      	ldrb	r6, [r2, #1]
 8014338:	ea47 070a 	orr.w	r7, r7, sl
 801433c:	fb0e 330c 	mla	r3, lr, ip, r3
 8014340:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014344:	fb01 3306 	mla	r3, r1, r6, r3
 8014348:	fb09 3a0a 	mla	sl, r9, sl, r3
 801434c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014350:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014352:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014356:	ea47 070a 	orr.w	r7, r7, sl
 801435a:	f823 7b02 	strh.w	r7, [r3], #2
 801435e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014360:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014362:	449b      	add	fp, r3
 8014364:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014366:	441d      	add	r5, r3
 8014368:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801436a:	3b01      	subs	r3, #1
 801436c:	9309      	str	r3, [sp, #36]	; 0x24
 801436e:	e714      	b.n	801419a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8014370:	b149      	cbz	r1, 8014386 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8014372:	5cba      	ldrb	r2, [r7, r2]
 8014374:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014378:	4422      	add	r2, r4
 801437a:	4660      	mov	r0, ip
 801437c:	4666      	mov	r6, ip
 801437e:	e7a5      	b.n	80142cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8014380:	4660      	mov	r0, ip
 8014382:	4662      	mov	r2, ip
 8014384:	e7a2      	b.n	80142cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8014386:	4660      	mov	r0, ip
 8014388:	4662      	mov	r2, ip
 801438a:	e7f7      	b.n	801437c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 801438c:	b00f      	add	sp, #60	; 0x3c
 801438e:	ecbd 8b08 	vpop	{d8-d11}
 8014392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014398 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8014398:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801439c:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 80143a0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80143a4:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 80143a8:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80143ac:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 80143b0:	fb04 560c 	mla	r6, r4, ip, r5
 80143b4:	2c00      	cmp	r4, #0
 80143b6:	eb02 0e06 	add.w	lr, r2, r6
 80143ba:	db3d      	blt.n	8014438 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 80143bc:	45a0      	cmp	r8, r4
 80143be:	dd3b      	ble.n	8014438 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 80143c0:	2d00      	cmp	r5, #0
 80143c2:	db37      	blt.n	8014434 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 80143c4:	45ac      	cmp	ip, r5
 80143c6:	dd35      	ble.n	8014434 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 80143c8:	5d92      	ldrb	r2, [r2, r6]
 80143ca:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80143ce:	1c6e      	adds	r6, r5, #1
 80143d0:	d435      	bmi.n	801443e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80143d2:	45b4      	cmp	ip, r6
 80143d4:	dd33      	ble.n	801443e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80143d6:	b3a0      	cbz	r0, 8014442 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 80143d8:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80143dc:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 80143e0:	3401      	adds	r4, #1
 80143e2:	d432      	bmi.n	801444a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 80143e4:	45a0      	cmp	r8, r4
 80143e6:	dd30      	ble.n	801444a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 80143e8:	b397      	cbz	r7, 8014450 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 80143ea:	2d00      	cmp	r5, #0
 80143ec:	db2b      	blt.n	8014446 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 80143ee:	45ac      	cmp	ip, r5
 80143f0:	dd29      	ble.n	8014446 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 80143f2:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80143f6:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 80143fa:	3501      	adds	r5, #1
 80143fc:	d42b      	bmi.n	8014456 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80143fe:	45ac      	cmp	ip, r5
 8014400:	dd29      	ble.n	8014456 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8014402:	b350      	cbz	r0, 801445a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8014404:	44f4      	add	ip, lr
 8014406:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801440a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 801440e:	280f      	cmp	r0, #15
 8014410:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8014414:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8014418:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801441c:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8014420:	d801      	bhi.n	8014426 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 8014422:	2f0f      	cmp	r7, #15
 8014424:	d91b      	bls.n	801445e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 8014426:	4b8d      	ldr	r3, [pc, #564]	; (801465c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8014428:	4a8d      	ldr	r2, [pc, #564]	; (8014660 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 801442a:	488e      	ldr	r0, [pc, #568]	; (8014664 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 801442c:	f240 11f9 	movw	r1, #505	; 0x1f9
 8014430:	f005 fcf8 	bl	8019e24 <__assert_func>
 8014434:	2200      	movs	r2, #0
 8014436:	e7ca      	b.n	80143ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8014438:	2600      	movs	r6, #0
 801443a:	4632      	mov	r2, r6
 801443c:	e7d0      	b.n	80143e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801443e:	2600      	movs	r6, #0
 8014440:	e7ce      	b.n	80143e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8014442:	4606      	mov	r6, r0
 8014444:	e7cc      	b.n	80143e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8014446:	2400      	movs	r4, #0
 8014448:	e7d7      	b.n	80143fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 801444a:	2300      	movs	r3, #0
 801444c:	461c      	mov	r4, r3
 801444e:	e7de      	b.n	801440e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8014450:	463b      	mov	r3, r7
 8014452:	463c      	mov	r4, r7
 8014454:	e7db      	b.n	801440e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8014456:	2300      	movs	r3, #0
 8014458:	e7d9      	b.n	801440e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801445a:	4603      	mov	r3, r0
 801445c:	e7d7      	b.n	801440e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801445e:	b280      	uxth	r0, r0
 8014460:	b2bf      	uxth	r7, r7
 8014462:	fb07 fe00 	mul.w	lr, r7, r0
 8014466:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801446a:	0100      	lsls	r0, r0, #4
 801446c:	eba0 0c0e 	sub.w	ip, r0, lr
 8014470:	b2bf      	uxth	r7, r7
 8014472:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8014476:	fa1f fc8c 	uxth.w	ip, ip
 801447a:	1bed      	subs	r5, r5, r7
 801447c:	b2ad      	uxth	r5, r5
 801447e:	fb0a f00c 	mul.w	r0, sl, ip
 8014482:	fb0b 0005 	mla	r0, fp, r5, r0
 8014486:	fb07 0009 	mla	r0, r7, r9, r0
 801448a:	fb0e 0008 	mla	r0, lr, r8, r0
 801448e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8014492:	9001      	str	r0, [sp, #4]
 8014494:	2800      	cmp	r0, #0
 8014496:	f000 80de 	beq.w	8014656 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 801449a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801449e:	d018      	beq.n	80144d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 80144a0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80144a4:	fb0b f000 	mul.w	r0, fp, r0
 80144a8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80144ac:	fb0b fb02 	mul.w	fp, fp, r2
 80144b0:	0a02      	lsrs	r2, r0, #8
 80144b2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80144b6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80144ba:	4402      	add	r2, r0
 80144bc:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80144c0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80144c4:	0a12      	lsrs	r2, r2, #8
 80144c6:	0a00      	lsrs	r0, r0, #8
 80144c8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80144cc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80144d0:	4302      	orrs	r2, r0
 80144d2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80144d6:	d01a      	beq.n	801450e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 80144d8:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 80144dc:	fb0a f000 	mul.w	r0, sl, r0
 80144e0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80144e4:	fb0a fa06 	mul.w	sl, sl, r6
 80144e8:	0a06      	lsrs	r6, r0, #8
 80144ea:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80144ee:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80144f2:	4406      	add	r6, r0
 80144f4:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80144f8:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80144fc:	0a36      	lsrs	r6, r6, #8
 80144fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014502:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014506:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801450a:	ea46 060a 	orr.w	r6, r6, sl
 801450e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014512:	d01b      	beq.n	801454c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 8014514:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8014518:	fb09 fa0a 	mul.w	sl, r9, sl
 801451c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8014520:	fb09 f004 	mul.w	r0, r9, r4
 8014524:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8014528:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801452c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014530:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8014534:	4454      	add	r4, sl
 8014536:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801453a:	0a24      	lsrs	r4, r4, #8
 801453c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014540:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014544:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8014548:	ea44 0409 	orr.w	r4, r4, r9
 801454c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014550:	d01b      	beq.n	801458a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 8014552:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8014556:	fb08 f909 	mul.w	r9, r8, r9
 801455a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801455e:	fb08 f003 	mul.w	r0, r8, r3
 8014562:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8014566:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801456a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801456e:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8014572:	444b      	add	r3, r9
 8014574:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8014578:	0a1b      	lsrs	r3, r3, #8
 801457a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801457e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014582:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8014586:	ea43 0308 	orr.w	r3, r3, r8
 801458a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801458e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014592:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8014596:	fb0c f808 	mul.w	r8, ip, r8
 801459a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801459e:	fb0c f606 	mul.w	r6, ip, r6
 80145a2:	fb05 8909 	mla	r9, r5, r9, r8
 80145a6:	fb05 6502 	mla	r5, r5, r2, r6
 80145aa:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80145ae:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80145b2:	9a01      	ldr	r2, [sp, #4]
 80145b4:	8808      	ldrh	r0, [r1, #0]
 80145b6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80145ba:	fb07 9908 	mla	r9, r7, r8, r9
 80145be:	fb07 5704 	mla	r7, r7, r4, r5
 80145c2:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80145c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80145ca:	b2b6      	uxth	r6, r6
 80145cc:	fb0e 9808 	mla	r8, lr, r8, r9
 80145d0:	fb0e 7e03 	mla	lr, lr, r3, r7
 80145d4:	4372      	muls	r2, r6
 80145d6:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80145da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80145de:	1c53      	adds	r3, r2, #1
 80145e0:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 80145e4:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80145e8:	ea48 0e0e 	orr.w	lr, r8, lr
 80145ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80145f0:	1205      	asrs	r5, r0, #8
 80145f2:	ea4f 421e 	mov.w	r2, lr, lsr #16
 80145f6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80145fa:	b2db      	uxtb	r3, r3
 80145fc:	fb12 f206 	smulbb	r2, r2, r6
 8014600:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8014604:	fb05 2503 	mla	r5, r5, r3, r2
 8014608:	f3ce 2407 	ubfx	r4, lr, #8, #8
 801460c:	10c2      	asrs	r2, r0, #3
 801460e:	fa5f fe8e 	uxtb.w	lr, lr
 8014612:	00c0      	lsls	r0, r0, #3
 8014614:	fb14 f406 	smulbb	r4, r4, r6
 8014618:	b2c0      	uxtb	r0, r0
 801461a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801461e:	fb1e fe06 	smulbb	lr, lr, r6
 8014622:	fb02 4203 	mla	r2, r2, r3, r4
 8014626:	b2ad      	uxth	r5, r5
 8014628:	fb00 e303 	mla	r3, r0, r3, lr
 801462c:	b298      	uxth	r0, r3
 801462e:	b294      	uxth	r4, r2
 8014630:	1c6b      	adds	r3, r5, #1
 8014632:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8014636:	1c62      	adds	r2, r4, #1
 8014638:	1c43      	adds	r3, r0, #1
 801463a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801463e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8014642:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8014646:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801464a:	0952      	lsrs	r2, r2, #5
 801464c:	432b      	orrs	r3, r5
 801464e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014652:	4313      	orrs	r3, r2
 8014654:	800b      	strh	r3, [r1, #0]
 8014656:	b003      	add	sp, #12
 8014658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801465c:	0801da2b 	.word	0x0801da2b
 8014660:	0801df5a 	.word	0x0801df5a
 8014664:	0801d9f8 	.word	0x0801d9f8

08014668 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801466c:	ed2d 8b08 	vpush	{d8-d11}
 8014670:	b09f      	sub	sp, #124	; 0x7c
 8014672:	eeb0 aa40 	vmov.f32	s20, s0
 8014676:	921b      	str	r2, [sp, #108]	; 0x6c
 8014678:	9309      	str	r3, [sp, #36]	; 0x24
 801467a:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801467c:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8014680:	931c      	str	r3, [sp, #112]	; 0x70
 8014682:	9119      	str	r1, [sp, #100]	; 0x64
 8014684:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8014688:	901d      	str	r0, [sp, #116]	; 0x74
 801468a:	6850      	ldr	r0, [r2, #4]
 801468c:	6812      	ldr	r2, [r2, #0]
 801468e:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8014690:	fb00 1303 	mla	r3, r0, r3, r1
 8014694:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014698:	930c      	str	r3, [sp, #48]	; 0x30
 801469a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801469c:	681b      	ldr	r3, [r3, #0]
 801469e:	9312      	str	r3, [sp, #72]	; 0x48
 80146a0:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80146a2:	685e      	ldr	r6, [r3, #4]
 80146a4:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80146a8:	930d      	str	r3, [sp, #52]	; 0x34
 80146aa:	eef0 9a60 	vmov.f32	s19, s1
 80146ae:	eeb0 9a41 	vmov.f32	s18, s2
 80146b2:	eeb0 8a62 	vmov.f32	s16, s5
 80146b6:	eef0 8a43 	vmov.f32	s17, s6
 80146ba:	eef0 ba44 	vmov.f32	s23, s8
 80146be:	eeb0 ba64 	vmov.f32	s22, s9
 80146c2:	eef0 aa45 	vmov.f32	s21, s10
 80146c6:	3604      	adds	r6, #4
 80146c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80146ca:	2b00      	cmp	r3, #0
 80146cc:	dc03      	bgt.n	80146d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80146ce:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80146d0:	2b00      	cmp	r3, #0
 80146d2:	f340 8388 	ble.w	8014de6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80146d6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80146d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80146dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80146e0:	1e48      	subs	r0, r1, #1
 80146e2:	1e57      	subs	r7, r2, #1
 80146e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146e6:	2b00      	cmp	r3, #0
 80146e8:	f340 8195 	ble.w	8014a16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80146ec:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80146ee:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80146f2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80146f6:	d406      	bmi.n	8014706 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80146f8:	4584      	cmp	ip, r0
 80146fa:	da04      	bge.n	8014706 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80146fc:	2b00      	cmp	r3, #0
 80146fe:	db02      	blt.n	8014706 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014700:	42bb      	cmp	r3, r7
 8014702:	f2c0 8189 	blt.w	8014a18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8014706:	f11c 0c01 	adds.w	ip, ip, #1
 801470a:	f100 8177 	bmi.w	80149fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801470e:	4561      	cmp	r1, ip
 8014710:	f2c0 8174 	blt.w	80149fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8014714:	3301      	adds	r3, #1
 8014716:	f100 8171 	bmi.w	80149fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801471a:	429a      	cmp	r2, r3
 801471c:	f2c0 816e 	blt.w	80149fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8014720:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014722:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8014724:	931a      	str	r3, [sp, #104]	; 0x68
 8014726:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8014728:	2b00      	cmp	r3, #0
 801472a:	f340 8193 	ble.w	8014a54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801472e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8014730:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014734:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8014736:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801473a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801473c:	141b      	asrs	r3, r3, #16
 801473e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014742:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014746:	f100 81d6 	bmi.w	8014af6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801474a:	f100 38ff 	add.w	r8, r0, #4294967295
 801474e:	4543      	cmp	r3, r8
 8014750:	f280 81d1 	bge.w	8014af6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8014754:	f1bc 0f00 	cmp.w	ip, #0
 8014758:	f2c0 81cd 	blt.w	8014af6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801475c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8014760:	45c4      	cmp	ip, r8
 8014762:	f280 81c8 	bge.w	8014af6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8014766:	b200      	sxth	r0, r0
 8014768:	fb0c 3300 	mla	r3, ip, r0, r3
 801476c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801476e:	eb04 0803 	add.w	r8, r4, r3
 8014772:	5ce3      	ldrb	r3, [r4, r3]
 8014774:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8014778:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801477c:	2a00      	cmp	r2, #0
 801477e:	f000 81af 	beq.w	8014ae0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8014782:	f898 c001 	ldrb.w	ip, [r8, #1]
 8014786:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801478a:	940e      	str	r4, [sp, #56]	; 0x38
 801478c:	0e24      	lsrs	r4, r4, #24
 801478e:	9415      	str	r4, [sp, #84]	; 0x54
 8014790:	b179      	cbz	r1, 80147b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8014792:	eb08 0c00 	add.w	ip, r8, r0
 8014796:	f818 0000 	ldrb.w	r0, [r8, r0]
 801479a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801479e:	900a      	str	r0, [sp, #40]	; 0x28
 80147a0:	0e00      	lsrs	r0, r0, #24
 80147a2:	9013      	str	r0, [sp, #76]	; 0x4c
 80147a4:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80147a8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80147ac:	900f      	str	r0, [sp, #60]	; 0x3c
 80147ae:	0e00      	lsrs	r0, r0, #24
 80147b0:	9016      	str	r0, [sp, #88]	; 0x58
 80147b2:	b292      	uxth	r2, r2
 80147b4:	b289      	uxth	r1, r1
 80147b6:	fb02 f901 	mul.w	r9, r2, r1
 80147ba:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80147be:	0112      	lsls	r2, r2, #4
 80147c0:	eba2 0809 	sub.w	r8, r2, r9
 80147c4:	b289      	uxth	r1, r1
 80147c6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80147ca:	9815      	ldr	r0, [sp, #84]	; 0x54
 80147cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80147ce:	fa1f f888 	uxth.w	r8, r8
 80147d2:	1a52      	subs	r2, r2, r1
 80147d4:	b292      	uxth	r2, r2
 80147d6:	fb08 f000 	mul.w	r0, r8, r0
 80147da:	fb02 000e 	mla	r0, r2, lr, r0
 80147de:	fb01 0004 	mla	r0, r1, r4, r0
 80147e2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80147e4:	fb09 0004 	mla	r0, r9, r4, r0
 80147e8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80147ec:	2800      	cmp	r0, #0
 80147ee:	f000 80fa 	beq.w	80149e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80147f2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80147f6:	d01b      	beq.n	8014830 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80147f8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80147fc:	fb0e fa0a 	mul.w	sl, lr, sl
 8014800:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014804:	fb0e fe03 	mul.w	lr, lr, r3
 8014808:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801480c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014810:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014814:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8014818:	4453      	add	r3, sl
 801481a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801481e:	0a1b      	lsrs	r3, r3, #8
 8014820:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014824:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014828:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801482c:	ea43 030c 	orr.w	r3, r3, ip
 8014830:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014832:	2cff      	cmp	r4, #255	; 0xff
 8014834:	d021      	beq.n	801487a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8014836:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014838:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801483c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801483e:	fb04 fb0b 	mul.w	fp, r4, fp
 8014842:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014844:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014848:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801484a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801484e:	fb04 fa0a 	mul.w	sl, r4, sl
 8014852:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014856:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801485a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801485e:	44de      	add	lr, fp
 8014860:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8014864:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014868:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801486c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014870:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014874:	ea4e 040a 	orr.w	r4, lr, sl
 8014878:	940e      	str	r4, [sp, #56]	; 0x38
 801487a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801487c:	2cff      	cmp	r4, #255	; 0xff
 801487e:	d021      	beq.n	80148c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8014880:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014882:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8014886:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014888:	fb04 fb0b 	mul.w	fp, r4, fp
 801488c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801488e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014892:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014894:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8014898:	fb04 fa0a 	mul.w	sl, r4, sl
 801489c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80148a0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80148a4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80148a8:	44de      	add	lr, fp
 80148aa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80148ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80148b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80148b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80148ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80148be:	ea4e 040a 	orr.w	r4, lr, sl
 80148c2:	940a      	str	r4, [sp, #40]	; 0x28
 80148c4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80148c6:	2cff      	cmp	r4, #255	; 0xff
 80148c8:	d021      	beq.n	801490e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80148ca:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80148cc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80148d0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80148d2:	fb04 fb0b 	mul.w	fp, r4, fp
 80148d6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80148d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80148dc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80148de:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80148e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80148e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80148ea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80148ee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80148f2:	44de      	add	lr, fp
 80148f4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80148f8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80148fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014900:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014904:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014908:	ea4e 040a 	orr.w	r4, lr, sl
 801490c:	940f      	str	r4, [sp, #60]	; 0x3c
 801490e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014910:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8014914:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014916:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801491a:	fb08 fc0c 	mul.w	ip, r8, ip
 801491e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014922:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8014926:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8014928:	fb01 cc0e 	mla	ip, r1, lr, ip
 801492c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8014930:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014932:	fb09 cc0e 	mla	ip, r9, lr, ip
 8014936:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801493a:	fb08 f80e 	mul.w	r8, r8, lr
 801493e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014942:	fb02 8303 	mla	r3, r2, r3, r8
 8014946:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014948:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801494a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801494e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014950:	fb01 330a 	mla	r3, r1, sl, r3
 8014954:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8014958:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801495a:	fb09 3901 	mla	r9, r9, r1, r3
 801495e:	4342      	muls	r2, r0
 8014960:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014964:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014968:	883b      	ldrh	r3, [r7, #0]
 801496a:	1c50      	adds	r0, r2, #1
 801496c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014970:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8014974:	ea4c 0c09 	orr.w	ip, ip, r9
 8014978:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801497c:	1219      	asrs	r1, r3, #8
 801497e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8014982:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8014986:	b2c0      	uxtb	r0, r0
 8014988:	fb12 f204 	smulbb	r2, r2, r4
 801498c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014990:	fb01 2100 	mla	r1, r1, r0, r2
 8014994:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8014998:	10da      	asrs	r2, r3, #3
 801499a:	fa5f fc8c 	uxtb.w	ip, ip
 801499e:	00db      	lsls	r3, r3, #3
 80149a0:	fb1c fc04 	smulbb	ip, ip, r4
 80149a4:	b2db      	uxtb	r3, r3
 80149a6:	b289      	uxth	r1, r1
 80149a8:	fb03 c300 	mla	r3, r3, r0, ip
 80149ac:	fa1f fc83 	uxth.w	ip, r3
 80149b0:	1c4b      	adds	r3, r1, #1
 80149b2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80149b6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80149ba:	fb1e fe04 	smulbb	lr, lr, r4
 80149be:	f10c 0301 	add.w	r3, ip, #1
 80149c2:	fb02 e200 	mla	r2, r2, r0, lr
 80149c6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80149ca:	b292      	uxth	r2, r2
 80149cc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80149d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80149d4:	430b      	orrs	r3, r1
 80149d6:	1c51      	adds	r1, r2, #1
 80149d8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80149dc:	0952      	lsrs	r2, r2, #5
 80149de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80149e2:	4313      	orrs	r3, r2
 80149e4:	803b      	strh	r3, [r7, #0]
 80149e6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80149e8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80149ea:	441a      	add	r2, r3
 80149ec:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80149ee:	9231      	str	r2, [sp, #196]	; 0xc4
 80149f0:	441d      	add	r5, r3
 80149f2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80149f4:	3b01      	subs	r3, #1
 80149f6:	3702      	adds	r7, #2
 80149f8:	931a      	str	r3, [sp, #104]	; 0x68
 80149fa:	e694      	b.n	8014726 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80149fc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80149fe:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8014a00:	441c      	add	r4, r3
 8014a02:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8014a04:	9431      	str	r4, [sp, #196]	; 0xc4
 8014a06:	441d      	add	r5, r3
 8014a08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a0a:	3b01      	subs	r3, #1
 8014a0c:	9309      	str	r3, [sp, #36]	; 0x24
 8014a0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014a10:	3302      	adds	r3, #2
 8014a12:	930c      	str	r3, [sp, #48]	; 0x30
 8014a14:	e666      	b.n	80146e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014a16:	d024      	beq.n	8014a62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8014a18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a1a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8014a1c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8014a1e:	3b01      	subs	r3, #1
 8014a20:	fb00 4003 	mla	r0, r0, r3, r4
 8014a24:	1400      	asrs	r0, r0, #16
 8014a26:	f53f ae7b 	bmi.w	8014720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014a2a:	3901      	subs	r1, #1
 8014a2c:	4288      	cmp	r0, r1
 8014a2e:	f6bf ae77 	bge.w	8014720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014a32:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8014a34:	fb01 5303 	mla	r3, r1, r3, r5
 8014a38:	141b      	asrs	r3, r3, #16
 8014a3a:	f53f ae71 	bmi.w	8014720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014a3e:	3a01      	subs	r2, #1
 8014a40:	4293      	cmp	r3, r2
 8014a42:	f6bf ae6d 	bge.w	8014720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014a46:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014a4a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8014a4e:	f1bb 0f00 	cmp.w	fp, #0
 8014a52:	dc70      	bgt.n	8014b36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8014a54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a56:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014a5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014a5c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8014a60:	930c      	str	r3, [sp, #48]	; 0x30
 8014a62:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014a64:	2b00      	cmp	r3, #0
 8014a66:	f340 81be 	ble.w	8014de6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8014a6a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014a6e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014a72:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014a76:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014a78:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014a7c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014a80:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014a84:	eef0 6a48 	vmov.f32	s13, s16
 8014a88:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014a8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014a90:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014a94:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8014a98:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014a9c:	eef0 6a68 	vmov.f32	s13, s17
 8014aa0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014aa4:	ee18 2a10 	vmov	r2, s16
 8014aa8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014aac:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ab0:	ee18 2a90 	vmov	r2, s17
 8014ab4:	9333      	str	r3, [sp, #204]	; 0xcc
 8014ab6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014ab8:	fb92 f3f3 	sdiv	r3, r2, r3
 8014abc:	9334      	str	r3, [sp, #208]	; 0xd0
 8014abe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014ac0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8014ac2:	3b01      	subs	r3, #1
 8014ac4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014ac8:	9319      	str	r3, [sp, #100]	; 0x64
 8014aca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014acc:	bf08      	it	eq
 8014ace:	4613      	moveq	r3, r2
 8014ad0:	ee16 5a90 	vmov	r5, s13
 8014ad4:	9309      	str	r3, [sp, #36]	; 0x24
 8014ad6:	eef0 8a67 	vmov.f32	s17, s15
 8014ada:	eeb0 8a47 	vmov.f32	s16, s14
 8014ade:	e5f3      	b.n	80146c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014ae0:	2900      	cmp	r1, #0
 8014ae2:	f43f ae66 	beq.w	80147b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8014ae6:	f818 0000 	ldrb.w	r0, [r8, r0]
 8014aea:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8014aee:	900a      	str	r0, [sp, #40]	; 0x28
 8014af0:	0e00      	lsrs	r0, r0, #24
 8014af2:	9013      	str	r0, [sp, #76]	; 0x4c
 8014af4:	e65d      	b.n	80147b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8014af6:	f113 0801 	adds.w	r8, r3, #1
 8014afa:	f53f af74 	bmi.w	80149e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8014afe:	4540      	cmp	r0, r8
 8014b00:	f6ff af71 	blt.w	80149e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8014b04:	f11c 0801 	adds.w	r8, ip, #1
 8014b08:	f53f af6d 	bmi.w	80149e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8014b0c:	45c6      	cmp	lr, r8
 8014b0e:	f6ff af6a 	blt.w	80149e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8014b12:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8014b14:	9302      	str	r3, [sp, #8]
 8014b16:	b200      	sxth	r0, r0
 8014b18:	fa0f f38e 	sxth.w	r3, lr
 8014b1c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014b20:	e9cd c203 	strd	ip, r2, [sp, #12]
 8014b24:	9301      	str	r3, [sp, #4]
 8014b26:	9000      	str	r0, [sp, #0]
 8014b28:	4633      	mov	r3, r6
 8014b2a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014b2c:	981d      	ldr	r0, [sp, #116]	; 0x74
 8014b2e:	4639      	mov	r1, r7
 8014b30:	f7ff fc32 	bl	8014398 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8014b34:	e757      	b.n	80149e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8014b36:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8014b38:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8014b3a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014b3e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8014b40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014b44:	1427      	asrs	r7, r4, #16
 8014b46:	142b      	asrs	r3, r5, #16
 8014b48:	fb01 7303 	mla	r3, r1, r3, r7
 8014b4c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014b4e:	18e7      	adds	r7, r4, r3
 8014b50:	5ce3      	ldrb	r3, [r4, r3]
 8014b52:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8014b56:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014b5a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8014b5e:	2a00      	cmp	r2, #0
 8014b60:	f000 8137 	beq.w	8014dd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8014b64:	f897 e001 	ldrb.w	lr, [r7, #1]
 8014b68:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8014b6c:	9410      	str	r4, [sp, #64]	; 0x40
 8014b6e:	0e24      	lsrs	r4, r4, #24
 8014b70:	9417      	str	r4, [sp, #92]	; 0x5c
 8014b72:	b170      	cbz	r0, 8014b92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8014b74:	eb07 0e01 	add.w	lr, r7, r1
 8014b78:	5c79      	ldrb	r1, [r7, r1]
 8014b7a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014b7e:	910b      	str	r1, [sp, #44]	; 0x2c
 8014b80:	0e09      	lsrs	r1, r1, #24
 8014b82:	9114      	str	r1, [sp, #80]	; 0x50
 8014b84:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8014b88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014b8c:	9111      	str	r1, [sp, #68]	; 0x44
 8014b8e:	0e09      	lsrs	r1, r1, #24
 8014b90:	9118      	str	r1, [sp, #96]	; 0x60
 8014b92:	b292      	uxth	r2, r2
 8014b94:	b280      	uxth	r0, r0
 8014b96:	fb02 f800 	mul.w	r8, r2, r0
 8014b9a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8014b9e:	0112      	lsls	r2, r2, #4
 8014ba0:	eba2 0e08 	sub.w	lr, r2, r8
 8014ba4:	b280      	uxth	r0, r0
 8014ba6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8014baa:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8014bac:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014bae:	fa1f fe8e 	uxth.w	lr, lr
 8014bb2:	1a12      	subs	r2, r2, r0
 8014bb4:	b292      	uxth	r2, r2
 8014bb6:	fb0e f101 	mul.w	r1, lr, r1
 8014bba:	fb02 110c 	mla	r1, r2, ip, r1
 8014bbe:	fb00 1104 	mla	r1, r0, r4, r1
 8014bc2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8014bc4:	fb08 1104 	mla	r1, r8, r4, r1
 8014bc8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014bcc:	2900      	cmp	r1, #0
 8014bce:	f000 80f5 	beq.w	8014dbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8014bd2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8014bd6:	d019      	beq.n	8014c0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8014bd8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8014bdc:	fb0c fa0a 	mul.w	sl, ip, sl
 8014be0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014be4:	fb0c fc03 	mul.w	ip, ip, r3
 8014be8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8014bec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014bf0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014bf4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8014bf8:	4453      	add	r3, sl
 8014bfa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8014bfe:	0a1b      	lsrs	r3, r3, #8
 8014c00:	0a3f      	lsrs	r7, r7, #8
 8014c02:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014c06:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8014c0a:	433b      	orrs	r3, r7
 8014c0c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014c0e:	2cff      	cmp	r4, #255	; 0xff
 8014c10:	d020      	beq.n	8014c54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8014c12:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014c14:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014c18:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014c1a:	4367      	muls	r7, r4
 8014c1c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014c1e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014c22:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014c24:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014c28:	fb04 fa0a 	mul.w	sl, r4, sl
 8014c2c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014c30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014c34:	44bc      	add	ip, r7
 8014c36:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8014c3a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014c3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014c42:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014c46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014c4a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014c4e:	ea4c 040a 	orr.w	r4, ip, sl
 8014c52:	9410      	str	r4, [sp, #64]	; 0x40
 8014c54:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014c56:	2cff      	cmp	r4, #255	; 0xff
 8014c58:	d020      	beq.n	8014c9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8014c5a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014c5c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014c60:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014c62:	4367      	muls	r7, r4
 8014c64:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014c66:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014c6a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014c6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014c70:	fb04 fa0a 	mul.w	sl, r4, sl
 8014c74:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014c78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014c7c:	44bc      	add	ip, r7
 8014c7e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8014c82:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014c86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014c8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014c8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014c92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014c96:	ea4c 040a 	orr.w	r4, ip, sl
 8014c9a:	940b      	str	r4, [sp, #44]	; 0x2c
 8014c9c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8014c9e:	2cff      	cmp	r4, #255	; 0xff
 8014ca0:	d020      	beq.n	8014ce4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8014ca2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014ca4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014ca8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8014caa:	4367      	muls	r7, r4
 8014cac:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014cae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014cb2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8014cb4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014cb8:	fb04 fa0a 	mul.w	sl, r4, sl
 8014cbc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014cc0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014cc4:	44bc      	add	ip, r7
 8014cc6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8014cca:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014cce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014cd2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014cd6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014cda:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014cde:	ea4c 040a 	orr.w	r4, ip, sl
 8014ce2:	9411      	str	r4, [sp, #68]	; 0x44
 8014ce4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014ce6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014cea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014cec:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8014cf0:	fb0e f707 	mul.w	r7, lr, r7
 8014cf4:	fb02 770c 	mla	r7, r2, ip, r7
 8014cf8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8014cfc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014cfe:	fb00 770c 	mla	r7, r0, ip, r7
 8014d02:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8014d06:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014d08:	fb08 770c 	mla	r7, r8, ip, r7
 8014d0c:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8014d10:	fb0e fe0c 	mul.w	lr, lr, ip
 8014d14:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014d18:	fb02 e303 	mla	r3, r2, r3, lr
 8014d1c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014d1e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014d20:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8014d24:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014d26:	fb00 330a 	mla	r3, r0, sl, r3
 8014d2a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8014d2e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8014d32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014d34:	f8b9 0000 	ldrh.w	r0, [r9]
 8014d38:	434b      	muls	r3, r1
 8014d3a:	0a3f      	lsrs	r7, r7, #8
 8014d3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014d40:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014d44:	1c59      	adds	r1, r3, #1
 8014d46:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014d4a:	ea47 070c 	orr.w	r7, r7, ip
 8014d4e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8014d52:	1202      	asrs	r2, r0, #8
 8014d54:	0c3b      	lsrs	r3, r7, #16
 8014d56:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8014d5a:	b2c9      	uxtb	r1, r1
 8014d5c:	fb13 f304 	smulbb	r3, r3, r4
 8014d60:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014d64:	fb02 3201 	mla	r2, r2, r1, r3
 8014d68:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8014d6c:	10c3      	asrs	r3, r0, #3
 8014d6e:	b2ff      	uxtb	r7, r7
 8014d70:	00c0      	lsls	r0, r0, #3
 8014d72:	b292      	uxth	r2, r2
 8014d74:	fb1c fc04 	smulbb	ip, ip, r4
 8014d78:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8014d7c:	b2c0      	uxtb	r0, r0
 8014d7e:	fb17 f704 	smulbb	r7, r7, r4
 8014d82:	fb03 c301 	mla	r3, r3, r1, ip
 8014d86:	fb00 7001 	mla	r0, r0, r1, r7
 8014d8a:	f102 0c01 	add.w	ip, r2, #1
 8014d8e:	b280      	uxth	r0, r0
 8014d90:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8014d94:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8014d98:	1c42      	adds	r2, r0, #1
 8014d9a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8014d9e:	b29b      	uxth	r3, r3
 8014da0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014da4:	ea42 020c 	orr.w	r2, r2, ip
 8014da8:	f103 0c01 	add.w	ip, r3, #1
 8014dac:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8014db0:	095b      	lsrs	r3, r3, #5
 8014db2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014db6:	431a      	orrs	r2, r3
 8014db8:	f8a9 2000 	strh.w	r2, [r9]
 8014dbc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014dbe:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8014dc0:	441a      	add	r2, r3
 8014dc2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8014dc4:	9231      	str	r2, [sp, #196]	; 0xc4
 8014dc6:	f109 0902 	add.w	r9, r9, #2
 8014dca:	441d      	add	r5, r3
 8014dcc:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014dd0:	e63d      	b.n	8014a4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8014dd2:	2800      	cmp	r0, #0
 8014dd4:	f43f aedd 	beq.w	8014b92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8014dd8:	5c79      	ldrb	r1, [r7, r1]
 8014dda:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014dde:	910b      	str	r1, [sp, #44]	; 0x2c
 8014de0:	0e09      	lsrs	r1, r1, #24
 8014de2:	9114      	str	r1, [sp, #80]	; 0x50
 8014de4:	e6d5      	b.n	8014b92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8014de6:	b01f      	add	sp, #124	; 0x7c
 8014de8:	ecbd 8b08 	vpop	{d8-d11}
 8014dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014df0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8014df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014df4:	880e      	ldrh	r6, [r1, #0]
 8014df6:	b085      	sub	sp, #20
 8014df8:	ea4f 2826 	mov.w	r8, r6, asr #8
 8014dfc:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8014e00:	4691      	mov	r9, r2
 8014e02:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014e06:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8014e0a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8014e0e:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8014e12:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8014e16:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8014e1a:	9200      	str	r2, [sp, #0]
 8014e1c:	00f6      	lsls	r6, r6, #3
 8014e1e:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8014e22:	9201      	str	r2, [sp, #4]
 8014e24:	2c00      	cmp	r4, #0
 8014e26:	b2f2      	uxtb	r2, r6
 8014e28:	fb04 560c 	mla	r6, r4, ip, r5
 8014e2c:	9202      	str	r2, [sp, #8]
 8014e2e:	eb09 0806 	add.w	r8, r9, r6
 8014e32:	db3f      	blt.n	8014eb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8014e34:	45a6      	cmp	lr, r4
 8014e36:	dd3d      	ble.n	8014eb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8014e38:	2d00      	cmp	r5, #0
 8014e3a:	db39      	blt.n	8014eb0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8014e3c:	45ac      	cmp	ip, r5
 8014e3e:	dd37      	ble.n	8014eb0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8014e40:	f819 2006 	ldrb.w	r2, [r9, r6]
 8014e44:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8014e48:	1c6e      	adds	r6, r5, #1
 8014e4a:	d436      	bmi.n	8014eba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8014e4c:	45b4      	cmp	ip, r6
 8014e4e:	dd34      	ble.n	8014eba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8014e50:	b3a8      	cbz	r0, 8014ebe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8014e52:	f898 6001 	ldrb.w	r6, [r8, #1]
 8014e56:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8014e5a:	3401      	adds	r4, #1
 8014e5c:	d433      	bmi.n	8014ec6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8014e5e:	45a6      	cmp	lr, r4
 8014e60:	dd31      	ble.n	8014ec6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8014e62:	b39f      	cbz	r7, 8014ecc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8014e64:	2d00      	cmp	r5, #0
 8014e66:	eb08 0e0c 	add.w	lr, r8, ip
 8014e6a:	db2a      	blt.n	8014ec2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8014e6c:	45ac      	cmp	ip, r5
 8014e6e:	dd28      	ble.n	8014ec2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8014e70:	f818 400c 	ldrb.w	r4, [r8, ip]
 8014e74:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8014e78:	3501      	adds	r5, #1
 8014e7a:	d42a      	bmi.n	8014ed2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8014e7c:	45ac      	cmp	ip, r5
 8014e7e:	dd28      	ble.n	8014ed2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8014e80:	b348      	cbz	r0, 8014ed6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8014e82:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8014e86:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8014e8a:	280f      	cmp	r0, #15
 8014e8c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8014e90:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8014e94:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8014e98:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8014e9c:	d801      	bhi.n	8014ea2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8014e9e:	2f0f      	cmp	r7, #15
 8014ea0:	d91b      	bls.n	8014eda <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8014ea2:	4b7d      	ldr	r3, [pc, #500]	; (8015098 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8014ea4:	4a7d      	ldr	r2, [pc, #500]	; (801509c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8014ea6:	487e      	ldr	r0, [pc, #504]	; (80150a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8014ea8:	f240 11f9 	movw	r1, #505	; 0x1f9
 8014eac:	f004 ffba 	bl	8019e24 <__assert_func>
 8014eb0:	2200      	movs	r2, #0
 8014eb2:	e7c9      	b.n	8014e48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8014eb4:	2600      	movs	r6, #0
 8014eb6:	4632      	mov	r2, r6
 8014eb8:	e7cf      	b.n	8014e5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8014eba:	2600      	movs	r6, #0
 8014ebc:	e7cd      	b.n	8014e5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8014ebe:	4606      	mov	r6, r0
 8014ec0:	e7cb      	b.n	8014e5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8014ec2:	2400      	movs	r4, #0
 8014ec4:	e7d8      	b.n	8014e78 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8014ec6:	2300      	movs	r3, #0
 8014ec8:	461c      	mov	r4, r3
 8014eca:	e7de      	b.n	8014e8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8014ecc:	463b      	mov	r3, r7
 8014ece:	463c      	mov	r4, r7
 8014ed0:	e7db      	b.n	8014e8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8014ed2:	2300      	movs	r3, #0
 8014ed4:	e7d9      	b.n	8014e8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8014ed6:	4603      	mov	r3, r0
 8014ed8:	e7d7      	b.n	8014e8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8014eda:	b280      	uxth	r0, r0
 8014edc:	b2bf      	uxth	r7, r7
 8014ede:	fb00 fe07 	mul.w	lr, r0, r7
 8014ee2:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8014ee6:	0100      	lsls	r0, r0, #4
 8014ee8:	eba0 0c0e 	sub.w	ip, r0, lr
 8014eec:	b2bf      	uxth	r7, r7
 8014eee:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8014ef2:	fa1f fc8c 	uxth.w	ip, ip
 8014ef6:	1bed      	subs	r5, r5, r7
 8014ef8:	b2ad      	uxth	r5, r5
 8014efa:	fb0c f00a 	mul.w	r0, ip, sl
 8014efe:	fb05 000b 	mla	r0, r5, fp, r0
 8014f02:	fb07 0009 	mla	r0, r7, r9, r0
 8014f06:	fb0e 0008 	mla	r0, lr, r8, r0
 8014f0a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8014f0e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8014f12:	9003      	str	r0, [sp, #12]
 8014f14:	d018      	beq.n	8014f48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8014f16:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8014f1a:	fb0b f000 	mul.w	r0, fp, r0
 8014f1e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8014f22:	fb0b fb02 	mul.w	fp, fp, r2
 8014f26:	0a02      	lsrs	r2, r0, #8
 8014f28:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014f2c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8014f30:	4402      	add	r2, r0
 8014f32:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8014f36:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8014f3a:	0a12      	lsrs	r2, r2, #8
 8014f3c:	0a00      	lsrs	r0, r0, #8
 8014f3e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014f42:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014f46:	4302      	orrs	r2, r0
 8014f48:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014f4c:	d019      	beq.n	8014f82 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8014f4e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8014f52:	fb0a fb0b 	mul.w	fp, sl, fp
 8014f56:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014f5a:	fb0a fa06 	mul.w	sl, sl, r6
 8014f5e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8014f62:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014f66:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014f6a:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8014f6e:	445e      	add	r6, fp
 8014f70:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8014f74:	0a36      	lsrs	r6, r6, #8
 8014f76:	0a00      	lsrs	r0, r0, #8
 8014f78:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014f7c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014f80:	4306      	orrs	r6, r0
 8014f82:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014f86:	d019      	beq.n	8014fbc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8014f88:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8014f8c:	fb09 fa0a 	mul.w	sl, r9, sl
 8014f90:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8014f94:	fb09 f904 	mul.w	r9, r9, r4
 8014f98:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8014f9c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014fa0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014fa4:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8014fa8:	4454      	add	r4, sl
 8014faa:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8014fae:	0a24      	lsrs	r4, r4, #8
 8014fb0:	0a00      	lsrs	r0, r0, #8
 8014fb2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014fb6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014fba:	4304      	orrs	r4, r0
 8014fbc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014fc0:	d019      	beq.n	8014ff6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8014fc2:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8014fc6:	fb08 f909 	mul.w	r9, r8, r9
 8014fca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014fce:	fb08 f803 	mul.w	r8, r8, r3
 8014fd2:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8014fd6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014fda:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8014fde:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8014fe2:	444b      	add	r3, r9
 8014fe4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8014fe8:	0a1b      	lsrs	r3, r3, #8
 8014fea:	0a00      	lsrs	r0, r0, #8
 8014fec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014ff0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014ff4:	4303      	orrs	r3, r0
 8014ff6:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8014ffa:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8014ffe:	fb0c f808 	mul.w	r8, ip, r8
 8015002:	fb05 8800 	mla	r8, r5, r0, r8
 8015006:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801500a:	fb07 8800 	mla	r8, r7, r0, r8
 801500e:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8015012:	fb0e 8000 	mla	r0, lr, r0, r8
 8015016:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801501a:	fb0c f606 	mul.w	r6, ip, r6
 801501e:	0a00      	lsrs	r0, r0, #8
 8015020:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015024:	fb05 6202 	mla	r2, r5, r2, r6
 8015028:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801502c:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8015030:	fb07 2700 	mla	r7, r7, r0, r2
 8015034:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8015038:	9b03      	ldr	r3, [sp, #12]
 801503a:	9d00      	ldr	r5, [sp, #0]
 801503c:	9a02      	ldr	r2, [sp, #8]
 801503e:	fb0e 7000 	mla	r0, lr, r0, r7
 8015042:	43dc      	mvns	r4, r3
 8015044:	9b01      	ldr	r3, [sp, #4]
 8015046:	b2e4      	uxtb	r4, r4
 8015048:	0a00      	lsrs	r0, r0, #8
 801504a:	4363      	muls	r3, r4
 801504c:	4365      	muls	r5, r4
 801504e:	4362      	muls	r2, r4
 8015050:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015054:	ea48 0000 	orr.w	r0, r8, r0
 8015058:	4614      	mov	r4, r2
 801505a:	1c5e      	adds	r6, r3, #1
 801505c:	1c6a      	adds	r2, r5, #1
 801505e:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8015062:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015066:	0a03      	lsrs	r3, r0, #8
 8015068:	0c02      	lsrs	r2, r0, #16
 801506a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801506e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015072:	00db      	lsls	r3, r3, #3
 8015074:	0212      	lsls	r2, r2, #8
 8015076:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801507a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801507e:	4313      	orrs	r3, r2
 8015080:	1c62      	adds	r2, r4, #1
 8015082:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8015086:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 801508a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801508e:	4318      	orrs	r0, r3
 8015090:	8008      	strh	r0, [r1, #0]
 8015092:	b005      	add	sp, #20
 8015094:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015098:	0801da2b 	.word	0x0801da2b
 801509c:	0801df5a 	.word	0x0801df5a
 80150a0:	0801d9f8 	.word	0x0801d9f8

080150a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80150a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150a8:	ed2d 8b08 	vpush	{d8-d11}
 80150ac:	b09b      	sub	sp, #108	; 0x6c
 80150ae:	eeb0 aa40 	vmov.f32	s20, s0
 80150b2:	9218      	str	r2, [sp, #96]	; 0x60
 80150b4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80150b6:	9116      	str	r1, [sp, #88]	; 0x58
 80150b8:	9307      	str	r3, [sp, #28]
 80150ba:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80150be:	9019      	str	r0, [sp, #100]	; 0x64
 80150c0:	6850      	ldr	r0, [r2, #4]
 80150c2:	6812      	ldr	r2, [r2, #0]
 80150c4:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 80150c6:	fb00 1303 	mla	r3, r0, r3, r1
 80150ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80150ce:	930a      	str	r3, [sp, #40]	; 0x28
 80150d0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80150d2:	681b      	ldr	r3, [r3, #0]
 80150d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80150d6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80150d8:	685e      	ldr	r6, [r3, #4]
 80150da:	eef0 9a60 	vmov.f32	s19, s1
 80150de:	eeb0 9a41 	vmov.f32	s18, s2
 80150e2:	eeb0 8a62 	vmov.f32	s16, s5
 80150e6:	eef0 8a43 	vmov.f32	s17, s6
 80150ea:	eef0 ba44 	vmov.f32	s23, s8
 80150ee:	eeb0 ba64 	vmov.f32	s22, s9
 80150f2:	eef0 aa45 	vmov.f32	s21, s10
 80150f6:	3604      	adds	r6, #4
 80150f8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80150fa:	2b00      	cmp	r3, #0
 80150fc:	dc03      	bgt.n	8015106 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80150fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015100:	2b00      	cmp	r3, #0
 8015102:	f340 8373 	ble.w	80157ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8015106:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015108:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801510c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015110:	1e48      	subs	r0, r1, #1
 8015112:	1e57      	subs	r7, r2, #1
 8015114:	9b07      	ldr	r3, [sp, #28]
 8015116:	2b00      	cmp	r3, #0
 8015118:	f340 8190 	ble.w	801543c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801511c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801511e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8015122:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015126:	d406      	bmi.n	8015136 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015128:	4584      	cmp	ip, r0
 801512a:	da04      	bge.n	8015136 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801512c:	2b00      	cmp	r3, #0
 801512e:	db02      	blt.n	8015136 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015130:	42bb      	cmp	r3, r7
 8015132:	f2c0 8184 	blt.w	801543e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8015136:	f11c 0c01 	adds.w	ip, ip, #1
 801513a:	f100 8172 	bmi.w	8015422 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801513e:	4561      	cmp	r1, ip
 8015140:	f2c0 816f 	blt.w	8015422 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015144:	3301      	adds	r3, #1
 8015146:	f100 816c 	bmi.w	8015422 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801514a:	429a      	cmp	r2, r3
 801514c:	f2c0 8169 	blt.w	8015422 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015150:	9b07      	ldr	r3, [sp, #28]
 8015152:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8015154:	9317      	str	r3, [sp, #92]	; 0x5c
 8015156:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8015158:	2b00      	cmp	r3, #0
 801515a:	f340 818e 	ble.w	801547a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801515e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015160:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015164:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015166:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801516a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801516c:	141b      	asrs	r3, r3, #16
 801516e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015172:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8015176:	f100 81d1 	bmi.w	801551c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801517a:	f101 38ff 	add.w	r8, r1, #4294967295
 801517e:	4543      	cmp	r3, r8
 8015180:	f280 81cc 	bge.w	801551c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8015184:	f1bc 0f00 	cmp.w	ip, #0
 8015188:	f2c0 81c8 	blt.w	801551c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801518c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8015190:	45c4      	cmp	ip, r8
 8015192:	f280 81c3 	bge.w	801551c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8015196:	b209      	sxth	r1, r1
 8015198:	fb0c 3301 	mla	r3, ip, r1, r3
 801519c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801519e:	eb04 0803 	add.w	r8, r4, r3
 80151a2:	5ce3      	ldrb	r3, [r4, r3]
 80151a4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80151a8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80151ac:	2a00      	cmp	r2, #0
 80151ae:	f000 81aa 	beq.w	8015506 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 80151b2:	f898 c001 	ldrb.w	ip, [r8, #1]
 80151b6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80151ba:	940b      	str	r4, [sp, #44]	; 0x2c
 80151bc:	0e24      	lsrs	r4, r4, #24
 80151be:	9412      	str	r4, [sp, #72]	; 0x48
 80151c0:	b178      	cbz	r0, 80151e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80151c2:	eb08 0c01 	add.w	ip, r8, r1
 80151c6:	f818 1001 	ldrb.w	r1, [r8, r1]
 80151ca:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80151ce:	9108      	str	r1, [sp, #32]
 80151d0:	0e09      	lsrs	r1, r1, #24
 80151d2:	9110      	str	r1, [sp, #64]	; 0x40
 80151d4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80151d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80151dc:	910c      	str	r1, [sp, #48]	; 0x30
 80151de:	0e09      	lsrs	r1, r1, #24
 80151e0:	9113      	str	r1, [sp, #76]	; 0x4c
 80151e2:	b292      	uxth	r2, r2
 80151e4:	b280      	uxth	r0, r0
 80151e6:	fb02 f900 	mul.w	r9, r2, r0
 80151ea:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80151ee:	0112      	lsls	r2, r2, #4
 80151f0:	eba2 0809 	sub.w	r8, r2, r9
 80151f4:	b280      	uxth	r0, r0
 80151f6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80151fa:	9912      	ldr	r1, [sp, #72]	; 0x48
 80151fc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80151fe:	fa1f f888 	uxth.w	r8, r8
 8015202:	1a12      	subs	r2, r2, r0
 8015204:	b292      	uxth	r2, r2
 8015206:	fb08 f101 	mul.w	r1, r8, r1
 801520a:	fb02 110e 	mla	r1, r2, lr, r1
 801520e:	fb00 1104 	mla	r1, r0, r4, r1
 8015212:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015214:	fb09 1104 	mla	r1, r9, r4, r1
 8015218:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801521c:	2900      	cmp	r1, #0
 801521e:	f000 80f5 	beq.w	801540c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015222:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015226:	d01b      	beq.n	8015260 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015228:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801522c:	fb0e fa0a 	mul.w	sl, lr, sl
 8015230:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015234:	fb0e fe03 	mul.w	lr, lr, r3
 8015238:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801523c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015240:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015244:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8015248:	4453      	add	r3, sl
 801524a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801524e:	0a1b      	lsrs	r3, r3, #8
 8015250:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015254:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015258:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801525c:	ea43 030c 	orr.w	r3, r3, ip
 8015260:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015262:	2cff      	cmp	r4, #255	; 0xff
 8015264:	d021      	beq.n	80152aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8015266:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015268:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801526c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801526e:	fb04 fb0b 	mul.w	fp, r4, fp
 8015272:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015274:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015278:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801527a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801527e:	fb04 fa0a 	mul.w	sl, r4, sl
 8015282:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015286:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801528a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801528e:	44de      	add	lr, fp
 8015290:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015294:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015298:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801529c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80152a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80152a4:	ea4e 040a 	orr.w	r4, lr, sl
 80152a8:	940b      	str	r4, [sp, #44]	; 0x2c
 80152aa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80152ac:	2cff      	cmp	r4, #255	; 0xff
 80152ae:	d021      	beq.n	80152f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80152b0:	9c08      	ldr	r4, [sp, #32]
 80152b2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80152b6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80152b8:	fb04 fb0b 	mul.w	fp, r4, fp
 80152bc:	9c08      	ldr	r4, [sp, #32]
 80152be:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80152c2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80152c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80152c8:	fb04 fa0a 	mul.w	sl, r4, sl
 80152cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80152d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80152d4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80152d8:	44de      	add	lr, fp
 80152da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80152de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80152e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80152e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80152ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80152ee:	ea4e 040a 	orr.w	r4, lr, sl
 80152f2:	9408      	str	r4, [sp, #32]
 80152f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80152f6:	2cff      	cmp	r4, #255	; 0xff
 80152f8:	d021      	beq.n	801533e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80152fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80152fc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015300:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015302:	fb04 fb0b 	mul.w	fp, r4, fp
 8015306:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015308:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801530c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801530e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015312:	fb04 fa0a 	mul.w	sl, r4, sl
 8015316:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801531a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801531e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015322:	44de      	add	lr, fp
 8015324:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015328:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801532c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015330:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015334:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015338:	ea4e 040a 	orr.w	r4, lr, sl
 801533c:	940c      	str	r4, [sp, #48]	; 0x30
 801533e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015340:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8015344:	9c08      	ldr	r4, [sp, #32]
 8015346:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801534a:	fb08 fc0c 	mul.w	ip, r8, ip
 801534e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015352:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8015356:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015358:	fb00 cc0e 	mla	ip, r0, lr, ip
 801535c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8015360:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015362:	fb09 cc0e 	mla	ip, r9, lr, ip
 8015366:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801536a:	fb08 f80e 	mul.w	r8, r8, lr
 801536e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015372:	fb02 8303 	mla	r3, r2, r3, r8
 8015376:	9a08      	ldr	r2, [sp, #32]
 8015378:	f8b7 8000 	ldrh.w	r8, [r7]
 801537c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8015380:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015382:	fb00 330a 	mla	r3, r0, sl, r3
 8015386:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801538a:	fb09 3900 	mla	r9, r9, r0, r3
 801538e:	43c9      	mvns	r1, r1
 8015390:	ea4f 2228 	mov.w	r2, r8, asr #8
 8015394:	fa5f fe81 	uxtb.w	lr, r1
 8015398:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801539c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80153a0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80153a4:	fb02 f20e 	mul.w	r2, r2, lr
 80153a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80153ac:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80153b0:	ea4c 0c09 	orr.w	ip, ip, r9
 80153b4:	1c53      	adds	r3, r2, #1
 80153b6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80153ba:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80153be:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80153c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80153c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80153ca:	4a63      	ldr	r2, [pc, #396]	; (8015558 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 80153cc:	fb00 f00e 	mul.w	r0, r0, lr
 80153d0:	b2db      	uxtb	r3, r3
 80153d2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80153d6:	1c43      	adds	r3, r0, #1
 80153d8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80153dc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80153e0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80153e4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80153e8:	b2c9      	uxtb	r1, r1
 80153ea:	00db      	lsls	r3, r3, #3
 80153ec:	fb01 f10e 	mul.w	r1, r1, lr
 80153f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80153f4:	4313      	orrs	r3, r2
 80153f6:	1c4a      	adds	r2, r1, #1
 80153f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80153fc:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8015400:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8015404:	ea4c 0c03 	orr.w	ip, ip, r3
 8015408:	f8a7 c000 	strh.w	ip, [r7]
 801540c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801540e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015410:	441a      	add	r2, r3
 8015412:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015414:	922d      	str	r2, [sp, #180]	; 0xb4
 8015416:	441d      	add	r5, r3
 8015418:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801541a:	3b01      	subs	r3, #1
 801541c:	3702      	adds	r7, #2
 801541e:	9317      	str	r3, [sp, #92]	; 0x5c
 8015420:	e699      	b.n	8015156 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015422:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8015424:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8015426:	441c      	add	r4, r3
 8015428:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801542a:	942d      	str	r4, [sp, #180]	; 0xb4
 801542c:	441d      	add	r5, r3
 801542e:	9b07      	ldr	r3, [sp, #28]
 8015430:	3b01      	subs	r3, #1
 8015432:	9307      	str	r3, [sp, #28]
 8015434:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015436:	3302      	adds	r3, #2
 8015438:	930a      	str	r3, [sp, #40]	; 0x28
 801543a:	e66b      	b.n	8015114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801543c:	d024      	beq.n	8015488 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801543e:	9b07      	ldr	r3, [sp, #28]
 8015440:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8015442:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8015444:	3b01      	subs	r3, #1
 8015446:	fb00 4003 	mla	r0, r0, r3, r4
 801544a:	1400      	asrs	r0, r0, #16
 801544c:	f53f ae80 	bmi.w	8015150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8015450:	3901      	subs	r1, #1
 8015452:	4288      	cmp	r0, r1
 8015454:	f6bf ae7c 	bge.w	8015150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8015458:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801545a:	fb01 5303 	mla	r3, r1, r3, r5
 801545e:	141b      	asrs	r3, r3, #16
 8015460:	f53f ae76 	bmi.w	8015150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8015464:	3a01      	subs	r2, #1
 8015466:	4293      	cmp	r3, r2
 8015468:	f6bf ae72 	bge.w	8015150 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801546c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8015470:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8015474:	f1bb 0f00 	cmp.w	fp, #0
 8015478:	dc70      	bgt.n	801555c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801547a:	9b07      	ldr	r3, [sp, #28]
 801547c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015480:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015482:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015486:	930a      	str	r3, [sp, #40]	; 0x28
 8015488:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801548a:	2b00      	cmp	r3, #0
 801548c:	f340 81ae 	ble.w	80157ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8015490:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015494:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015498:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801549c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801549e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80154a2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80154a6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80154aa:	eef0 6a48 	vmov.f32	s13, s16
 80154ae:	ee69 7a27 	vmul.f32	s15, s18, s15
 80154b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80154b6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80154ba:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80154be:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80154c2:	eef0 6a68 	vmov.f32	s13, s17
 80154c6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80154ca:	ee18 2a10 	vmov	r2, s16
 80154ce:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80154d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80154d6:	ee18 2a90 	vmov	r2, s17
 80154da:	932f      	str	r3, [sp, #188]	; 0xbc
 80154dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80154de:	fb92 f3f3 	sdiv	r3, r2, r3
 80154e2:	9330      	str	r3, [sp, #192]	; 0xc0
 80154e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80154e6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80154e8:	3b01      	subs	r3, #1
 80154ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80154ee:	9316      	str	r3, [sp, #88]	; 0x58
 80154f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80154f2:	bf08      	it	eq
 80154f4:	4613      	moveq	r3, r2
 80154f6:	ee16 5a90 	vmov	r5, s13
 80154fa:	9307      	str	r3, [sp, #28]
 80154fc:	eef0 8a67 	vmov.f32	s17, s15
 8015500:	eeb0 8a47 	vmov.f32	s16, s14
 8015504:	e5f8      	b.n	80150f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015506:	2800      	cmp	r0, #0
 8015508:	f43f ae6b 	beq.w	80151e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801550c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8015510:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8015514:	9108      	str	r1, [sp, #32]
 8015516:	0e09      	lsrs	r1, r1, #24
 8015518:	9110      	str	r1, [sp, #64]	; 0x40
 801551a:	e662      	b.n	80151e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801551c:	f113 0801 	adds.w	r8, r3, #1
 8015520:	f53f af74 	bmi.w	801540c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015524:	4541      	cmp	r1, r8
 8015526:	f6ff af71 	blt.w	801540c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801552a:	f11c 0801 	adds.w	r8, ip, #1
 801552e:	f53f af6d 	bmi.w	801540c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015532:	45c6      	cmp	lr, r8
 8015534:	f6ff af6a 	blt.w	801540c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015538:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801553c:	b209      	sxth	r1, r1
 801553e:	fa0f f38e 	sxth.w	r3, lr
 8015542:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8015546:	9301      	str	r3, [sp, #4]
 8015548:	9100      	str	r1, [sp, #0]
 801554a:	4633      	mov	r3, r6
 801554c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801554e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015550:	4639      	mov	r1, r7
 8015552:	f7ff fc4d 	bl	8014df0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8015556:	e759      	b.n	801540c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015558:	fffff800 	.word	0xfffff800
 801555c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801555e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8015560:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015564:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015566:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801556a:	1427      	asrs	r7, r4, #16
 801556c:	142b      	asrs	r3, r5, #16
 801556e:	fb01 7303 	mla	r3, r1, r3, r7
 8015572:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015574:	18e7      	adds	r7, r4, r3
 8015576:	5ce3      	ldrb	r3, [r4, r3]
 8015578:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801557c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8015580:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8015584:	2a00      	cmp	r2, #0
 8015586:	f000 8127 	beq.w	80157d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801558a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801558e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8015592:	940d      	str	r4, [sp, #52]	; 0x34
 8015594:	0e24      	lsrs	r4, r4, #24
 8015596:	9414      	str	r4, [sp, #80]	; 0x50
 8015598:	b170      	cbz	r0, 80155b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801559a:	eb07 0e01 	add.w	lr, r7, r1
 801559e:	5c79      	ldrb	r1, [r7, r1]
 80155a0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80155a4:	9109      	str	r1, [sp, #36]	; 0x24
 80155a6:	0e09      	lsrs	r1, r1, #24
 80155a8:	9111      	str	r1, [sp, #68]	; 0x44
 80155aa:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80155ae:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80155b2:	910e      	str	r1, [sp, #56]	; 0x38
 80155b4:	0e09      	lsrs	r1, r1, #24
 80155b6:	9115      	str	r1, [sp, #84]	; 0x54
 80155b8:	b292      	uxth	r2, r2
 80155ba:	b280      	uxth	r0, r0
 80155bc:	fb02 f800 	mul.w	r8, r2, r0
 80155c0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80155c4:	0112      	lsls	r2, r2, #4
 80155c6:	eba2 0e08 	sub.w	lr, r2, r8
 80155ca:	b280      	uxth	r0, r0
 80155cc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80155d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80155d2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80155d4:	fa1f fe8e 	uxth.w	lr, lr
 80155d8:	1a09      	subs	r1, r1, r0
 80155da:	b289      	uxth	r1, r1
 80155dc:	fb0e f202 	mul.w	r2, lr, r2
 80155e0:	fb01 220c 	mla	r2, r1, ip, r2
 80155e4:	fb00 2204 	mla	r2, r0, r4, r2
 80155e8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80155ea:	fb08 2204 	mla	r2, r8, r4, r2
 80155ee:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80155f2:	2a00      	cmp	r2, #0
 80155f4:	f000 80e5 	beq.w	80157c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80155f8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80155fc:	d019      	beq.n	8015632 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 80155fe:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8015602:	fb0c fa0a 	mul.w	sl, ip, sl
 8015606:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801560a:	fb0c fc03 	mul.w	ip, ip, r3
 801560e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8015612:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015616:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801561a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801561e:	4453      	add	r3, sl
 8015620:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8015624:	0a1b      	lsrs	r3, r3, #8
 8015626:	0a3f      	lsrs	r7, r7, #8
 8015628:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801562c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8015630:	433b      	orrs	r3, r7
 8015632:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015634:	2cff      	cmp	r4, #255	; 0xff
 8015636:	d020      	beq.n	801567a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8015638:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801563a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801563e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015640:	4367      	muls	r7, r4
 8015642:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015644:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015648:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801564a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801564e:	fb04 fa0a 	mul.w	sl, r4, sl
 8015652:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015656:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801565a:	44bc      	add	ip, r7
 801565c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8015660:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015664:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015668:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801566c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015670:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015674:	ea4c 040a 	orr.w	r4, ip, sl
 8015678:	940d      	str	r4, [sp, #52]	; 0x34
 801567a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801567c:	2cff      	cmp	r4, #255	; 0xff
 801567e:	d020      	beq.n	80156c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8015680:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8015682:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015686:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015688:	4367      	muls	r7, r4
 801568a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801568c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015690:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015692:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015696:	fb04 fa0a 	mul.w	sl, r4, sl
 801569a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801569e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80156a2:	44bc      	add	ip, r7
 80156a4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80156a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80156ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80156b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80156b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80156b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80156bc:	ea4c 040a 	orr.w	r4, ip, sl
 80156c0:	9409      	str	r4, [sp, #36]	; 0x24
 80156c2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80156c4:	2cff      	cmp	r4, #255	; 0xff
 80156c6:	d020      	beq.n	801570a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 80156c8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80156ca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80156ce:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80156d0:	4367      	muls	r7, r4
 80156d2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80156d4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80156d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80156da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80156de:	fb04 fa0a 	mul.w	sl, r4, sl
 80156e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80156e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80156ea:	44bc      	add	ip, r7
 80156ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80156f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80156f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80156f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80156fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015700:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015704:	ea4c 040a 	orr.w	r4, ip, sl
 8015708:	940e      	str	r4, [sp, #56]	; 0x38
 801570a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801570c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015710:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8015712:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8015716:	fb0e f707 	mul.w	r7, lr, r7
 801571a:	fb01 770c 	mla	r7, r1, ip, r7
 801571e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8015722:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015724:	fb00 770c 	mla	r7, r0, ip, r7
 8015728:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801572c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801572e:	fb08 770c 	mla	r7, r8, ip, r7
 8015732:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8015736:	fb0e fe0c 	mul.w	lr, lr, ip
 801573a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801573e:	fb01 e303 	mla	r3, r1, r3, lr
 8015742:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015744:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8015748:	990e      	ldr	r1, [sp, #56]	; 0x38
 801574a:	fb00 330a 	mla	r3, r0, sl, r3
 801574e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8015752:	fb08 3c0c 	mla	ip, r8, ip, r3
 8015756:	f8b9 3000 	ldrh.w	r3, [r9]
 801575a:	43d2      	mvns	r2, r2
 801575c:	1218      	asrs	r0, r3, #8
 801575e:	b2d2      	uxtb	r2, r2
 8015760:	10d9      	asrs	r1, r3, #3
 8015762:	0a3f      	lsrs	r7, r7, #8
 8015764:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015768:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801576c:	00db      	lsls	r3, r3, #3
 801576e:	4350      	muls	r0, r2
 8015770:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015774:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015778:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801577c:	b2db      	uxtb	r3, r3
 801577e:	ea47 070c 	orr.w	r7, r7, ip
 8015782:	4351      	muls	r1, r2
 8015784:	4353      	muls	r3, r2
 8015786:	1c42      	adds	r2, r0, #1
 8015788:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801578c:	0c3a      	lsrs	r2, r7, #16
 801578e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015792:	4a19      	ldr	r2, [pc, #100]	; (80157f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 8015794:	b2c0      	uxtb	r0, r0
 8015796:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801579a:	1c4a      	adds	r2, r1, #1
 801579c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80157a0:	0a3a      	lsrs	r2, r7, #8
 80157a2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80157a6:	00c9      	lsls	r1, r1, #3
 80157a8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80157ac:	4301      	orrs	r1, r0
 80157ae:	1c58      	adds	r0, r3, #1
 80157b0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80157b4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80157b8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80157bc:	4308      	orrs	r0, r1
 80157be:	f8a9 0000 	strh.w	r0, [r9]
 80157c2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80157c4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80157c6:	441a      	add	r2, r3
 80157c8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80157ca:	922d      	str	r2, [sp, #180]	; 0xb4
 80157cc:	f109 0902 	add.w	r9, r9, #2
 80157d0:	441d      	add	r5, r3
 80157d2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80157d6:	e64d      	b.n	8015474 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80157d8:	2800      	cmp	r0, #0
 80157da:	f43f aeed 	beq.w	80155b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80157de:	5c79      	ldrb	r1, [r7, r1]
 80157e0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80157e4:	9109      	str	r1, [sp, #36]	; 0x24
 80157e6:	0e09      	lsrs	r1, r1, #24
 80157e8:	9111      	str	r1, [sp, #68]	; 0x44
 80157ea:	e6e5      	b.n	80155b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80157ec:	b01b      	add	sp, #108	; 0x6c
 80157ee:	ecbd 8b08 	vpop	{d8-d11}
 80157f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157f6:	bf00      	nop
 80157f8:	fffff800 	.word	0xfffff800

080157fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80157fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015800:	b085      	sub	sp, #20
 8015802:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015806:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801580a:	9103      	str	r1, [sp, #12]
 801580c:	fb05 7106 	mla	r1, r5, r6, r7
 8015810:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8015814:	2d00      	cmp	r5, #0
 8015816:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801581a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801581e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8015822:	9401      	str	r4, [sp, #4]
 8015824:	eb03 0901 	add.w	r9, r3, r1
 8015828:	f2c0 80c0 	blt.w	80159ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801582c:	45a8      	cmp	r8, r5
 801582e:	f340 80bd 	ble.w	80159ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8015832:	2f00      	cmp	r7, #0
 8015834:	f2c0 80b6 	blt.w	80159a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8015838:	42be      	cmp	r6, r7
 801583a:	f340 80b3 	ble.w	80159a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801583e:	f813 c001 	ldrb.w	ip, [r3, r1]
 8015842:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8015846:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801584a:	d019      	beq.n	8015880 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 801584c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8015850:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8015854:	435a      	muls	r2, r3
 8015856:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801585a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801585e:	fb0c f403 	mul.w	r4, ip, r3
 8015862:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8015866:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801586a:	441a      	add	r2, r3
 801586c:	f104 0320 	add.w	r3, r4, #32
 8015870:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8015874:	0a1b      	lsrs	r3, r3, #8
 8015876:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801587a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801587e:	4319      	orrs	r1, r3
 8015880:	b289      	uxth	r1, r1
 8015882:	1c7b      	adds	r3, r7, #1
 8015884:	f100 8097 	bmi.w	80159b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8015888:	429e      	cmp	r6, r3
 801588a:	f340 8094 	ble.w	80159b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801588e:	2800      	cmp	r0, #0
 8015890:	f000 8094 	beq.w	80159bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8015894:	f899 4001 	ldrb.w	r4, [r9, #1]
 8015898:	9b01      	ldr	r3, [sp, #4]
 801589a:	2cff      	cmp	r4, #255	; 0xff
 801589c:	885b      	ldrh	r3, [r3, #2]
 801589e:	d01b      	beq.n	80158d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80158a0:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80158a4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80158a8:	fb0a f202 	mul.w	r2, sl, r2
 80158ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80158b0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80158b4:	fb04 fa03 	mul.w	sl, r4, r3
 80158b8:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80158bc:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80158c0:	441a      	add	r2, r3
 80158c2:	f10a 0320 	add.w	r3, sl, #32
 80158c6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80158ca:	0a1b      	lsrs	r3, r3, #8
 80158cc:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80158d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80158d4:	ea4b 0303 	orr.w	r3, fp, r3
 80158d8:	b29b      	uxth	r3, r3
 80158da:	3501      	adds	r5, #1
 80158dc:	d474      	bmi.n	80159c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80158de:	45a8      	cmp	r8, r5
 80158e0:	dd72      	ble.n	80159c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80158e2:	f1be 0f00 	cmp.w	lr, #0
 80158e6:	f000 8120 	beq.w	8015b2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 80158ea:	2f00      	cmp	r7, #0
 80158ec:	db69      	blt.n	80159c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80158ee:	42be      	cmp	r6, r7
 80158f0:	dd67      	ble.n	80159c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80158f2:	f819 5006 	ldrb.w	r5, [r9, r6]
 80158f6:	9a01      	ldr	r2, [sp, #4]
 80158f8:	2dff      	cmp	r5, #255	; 0xff
 80158fa:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80158fe:	d01c      	beq.n	801593a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8015900:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8015904:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015908:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801590c:	fb05 fa0b 	mul.w	sl, r5, fp
 8015910:	fb08 f802 	mul.w	r8, r8, r2
 8015914:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015918:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801591c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015920:	4490      	add	r8, r2
 8015922:	f10a 0220 	add.w	r2, sl, #32
 8015926:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801592a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801592e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8015932:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015936:	ea4b 0b0a 	orr.w	fp, fp, sl
 801593a:	fa1f fb8b 	uxth.w	fp, fp
 801593e:	3701      	adds	r7, #1
 8015940:	d447      	bmi.n	80159d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8015942:	42be      	cmp	r6, r7
 8015944:	dd45      	ble.n	80159d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8015946:	2800      	cmp	r0, #0
 8015948:	d046      	beq.n	80159d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 801594a:	3601      	adds	r6, #1
 801594c:	9a01      	ldr	r2, [sp, #4]
 801594e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8015952:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8015956:	2fff      	cmp	r7, #255	; 0xff
 8015958:	d01a      	beq.n	8015990 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 801595a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801595e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8015962:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015966:	fb07 f902 	mul.w	r9, r7, r2
 801596a:	fb08 f806 	mul.w	r8, r8, r6
 801596e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8015972:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8015976:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801597a:	44b0      	add	r8, r6
 801597c:	f109 0620 	add.w	r6, r9, #32
 8015980:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8015984:	0a36      	lsrs	r6, r6, #8
 8015986:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801598a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801598e:	4332      	orrs	r2, r6
 8015990:	b292      	uxth	r2, r2
 8015992:	280f      	cmp	r0, #15
 8015994:	d922      	bls.n	80159dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8015996:	4b69      	ldr	r3, [pc, #420]	; (8015b3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8015998:	4a69      	ldr	r2, [pc, #420]	; (8015b40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801599a:	486a      	ldr	r0, [pc, #424]	; (8015b44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 801599c:	f240 11f9 	movw	r1, #505	; 0x1f9
 80159a0:	f004 fa40 	bl	8019e24 <__assert_func>
 80159a4:	f04f 0c00 	mov.w	ip, #0
 80159a8:	4661      	mov	r1, ip
 80159aa:	e76a      	b.n	8015882 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 80159ac:	2400      	movs	r4, #0
 80159ae:	46a4      	mov	ip, r4
 80159b0:	4623      	mov	r3, r4
 80159b2:	4621      	mov	r1, r4
 80159b4:	e791      	b.n	80158da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80159b6:	2400      	movs	r4, #0
 80159b8:	4623      	mov	r3, r4
 80159ba:	e78e      	b.n	80158da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80159bc:	4604      	mov	r4, r0
 80159be:	4603      	mov	r3, r0
 80159c0:	e78b      	b.n	80158da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80159c2:	2500      	movs	r5, #0
 80159c4:	46ab      	mov	fp, r5
 80159c6:	e7ba      	b.n	801593e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 80159c8:	2700      	movs	r7, #0
 80159ca:	463d      	mov	r5, r7
 80159cc:	463a      	mov	r2, r7
 80159ce:	46bb      	mov	fp, r7
 80159d0:	e7df      	b.n	8015992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80159d2:	2700      	movs	r7, #0
 80159d4:	463a      	mov	r2, r7
 80159d6:	e7dc      	b.n	8015992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80159d8:	4607      	mov	r7, r0
 80159da:	4602      	mov	r2, r0
 80159dc:	f1be 0f0f 	cmp.w	lr, #15
 80159e0:	d8d9      	bhi.n	8015996 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80159e2:	b286      	uxth	r6, r0
 80159e4:	fa1f f98e 	uxth.w	r9, lr
 80159e8:	fb06 f809 	mul.w	r8, r6, r9
 80159ec:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80159f0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80159f4:	0136      	lsls	r6, r6, #4
 80159f6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80159fa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80159fe:	9601      	str	r6, [sp, #4]
 8015a00:	ea4a 0101 	orr.w	r1, sl, r1
 8015a04:	fa1f f689 	uxth.w	r6, r9
 8015a08:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8015a0c:	fb10 f90e 	smulbb	r9, r0, lr
 8015a10:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8015a14:	9602      	str	r6, [sp, #8]
 8015a16:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015a1a:	460e      	mov	r6, r1
 8015a1c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015a20:	f1ce 0110 	rsb	r1, lr, #16
 8015a24:	1a09      	subs	r1, r1, r0
 8015a26:	ea4a 0303 	orr.w	r3, sl, r3
 8015a2a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8015a2e:	4343      	muls	r3, r0
 8015a30:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8015a34:	9801      	ldr	r0, [sp, #4]
 8015a36:	fb01 3106 	mla	r1, r1, r6, r3
 8015a3a:	9e02      	ldr	r6, [sp, #8]
 8015a3c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8015a40:	1b80      	subs	r0, r0, r6
 8015a42:	9e01      	ldr	r6, [sp, #4]
 8015a44:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8015a48:	eba6 0608 	sub.w	r6, r6, r8
 8015a4c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015a50:	b2b6      	uxth	r6, r6
 8015a52:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015a56:	ea4a 0202 	orr.w	r2, sl, r2
 8015a5a:	b280      	uxth	r0, r0
 8015a5c:	4374      	muls	r4, r6
 8015a5e:	fb09 1302 	mla	r3, r9, r2, r1
 8015a62:	fb0c 4400 	mla	r4, ip, r0, r4
 8015a66:	9a03      	ldr	r2, [sp, #12]
 8015a68:	9802      	ldr	r0, [sp, #8]
 8015a6a:	8811      	ldrh	r1, [r2, #0]
 8015a6c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8015a70:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8015a74:	fb00 4505 	mla	r5, r0, r5, r4
 8015a78:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015a7c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8015a80:	fb08 5707 	mla	r7, r8, r7, r5
 8015a84:	ea4a 0b0b 	orr.w	fp, sl, fp
 8015a88:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8015a8c:	b292      	uxth	r2, r2
 8015a8e:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8015a92:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015a96:	4357      	muls	r7, r2
 8015a98:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8015a9c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015aa0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015aa4:	f107 0801 	add.w	r8, r7, #1
 8015aa8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015aac:	ea43 0e0e 	orr.w	lr, r3, lr
 8015ab0:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8015ab4:	fa1f f38e 	uxth.w	r3, lr
 8015ab8:	1208      	asrs	r0, r1, #8
 8015aba:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8015abe:	b2ff      	uxtb	r7, r7
 8015ac0:	121c      	asrs	r4, r3, #8
 8015ac2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015ac6:	fb10 f007 	smulbb	r0, r0, r7
 8015aca:	10cd      	asrs	r5, r1, #3
 8015acc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8015ad0:	fb04 0402 	mla	r4, r4, r2, r0
 8015ad4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015ad8:	10d8      	asrs	r0, r3, #3
 8015ada:	fb15 f507 	smulbb	r5, r5, r7
 8015ade:	00db      	lsls	r3, r3, #3
 8015ae0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015ae4:	fb00 5002 	mla	r0, r0, r2, r5
 8015ae8:	b2dd      	uxtb	r5, r3
 8015aea:	00cb      	lsls	r3, r1, #3
 8015aec:	b2db      	uxtb	r3, r3
 8015aee:	fb13 f307 	smulbb	r3, r3, r7
 8015af2:	fb05 3202 	mla	r2, r5, r2, r3
 8015af6:	b2a4      	uxth	r4, r4
 8015af8:	b292      	uxth	r2, r2
 8015afa:	1c63      	adds	r3, r4, #1
 8015afc:	b280      	uxth	r0, r0
 8015afe:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8015b02:	1c53      	adds	r3, r2, #1
 8015b04:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015b08:	1c42      	adds	r2, r0, #1
 8015b0a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015b0e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8015b12:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015b16:	0940      	lsrs	r0, r0, #5
 8015b18:	4323      	orrs	r3, r4
 8015b1a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015b1e:	9a03      	ldr	r2, [sp, #12]
 8015b20:	4303      	orrs	r3, r0
 8015b22:	8013      	strh	r3, [r2, #0]
 8015b24:	b005      	add	sp, #20
 8015b26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b2a:	280f      	cmp	r0, #15
 8015b2c:	f63f af33 	bhi.w	8015996 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8015b30:	4677      	mov	r7, lr
 8015b32:	4675      	mov	r5, lr
 8015b34:	4672      	mov	r2, lr
 8015b36:	46f3      	mov	fp, lr
 8015b38:	e753      	b.n	80159e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8015b3a:	bf00      	nop
 8015b3c:	0801da2b 	.word	0x0801da2b
 8015b40:	0801df5a 	.word	0x0801df5a
 8015b44:	0801d9f8 	.word	0x0801d9f8

08015b48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b4c:	ed2d 8b08 	vpush	{d8-d11}
 8015b50:	b097      	sub	sp, #92	; 0x5c
 8015b52:	eeb0 aa40 	vmov.f32	s20, s0
 8015b56:	9214      	str	r2, [sp, #80]	; 0x50
 8015b58:	9308      	str	r3, [sp, #32]
 8015b5a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015b5c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8015b60:	9312      	str	r3, [sp, #72]	; 0x48
 8015b62:	9111      	str	r1, [sp, #68]	; 0x44
 8015b64:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8015b68:	9015      	str	r0, [sp, #84]	; 0x54
 8015b6a:	6850      	ldr	r0, [r2, #4]
 8015b6c:	6812      	ldr	r2, [r2, #0]
 8015b6e:	fb00 1303 	mla	r3, r0, r3, r1
 8015b72:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015b76:	9309      	str	r3, [sp, #36]	; 0x24
 8015b78:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015b7a:	681b      	ldr	r3, [r3, #0]
 8015b7c:	930b      	str	r3, [sp, #44]	; 0x2c
 8015b7e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015b80:	685b      	ldr	r3, [r3, #4]
 8015b82:	930c      	str	r3, [sp, #48]	; 0x30
 8015b84:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8015b88:	930a      	str	r3, [sp, #40]	; 0x28
 8015b8a:	eef0 9a60 	vmov.f32	s19, s1
 8015b8e:	eeb0 9a41 	vmov.f32	s18, s2
 8015b92:	eeb0 8a62 	vmov.f32	s16, s5
 8015b96:	eef0 8a43 	vmov.f32	s17, s6
 8015b9a:	eef0 ba44 	vmov.f32	s23, s8
 8015b9e:	eeb0 ba64 	vmov.f32	s22, s9
 8015ba2:	eef0 aa45 	vmov.f32	s21, s10
 8015ba6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015ba8:	2b00      	cmp	r3, #0
 8015baa:	dc03      	bgt.n	8015bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015bac:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015bae:	2b00      	cmp	r3, #0
 8015bb0:	f340 83cb 	ble.w	801634a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8015bb4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015bb6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015bba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015bbe:	1e48      	subs	r0, r1, #1
 8015bc0:	1e55      	subs	r5, r2, #1
 8015bc2:	9b08      	ldr	r3, [sp, #32]
 8015bc4:	2b00      	cmp	r3, #0
 8015bc6:	f340 81a3 	ble.w	8015f10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8015bca:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8015bcc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015bce:	1436      	asrs	r6, r6, #16
 8015bd0:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015bd4:	d406      	bmi.n	8015be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015bd6:	4286      	cmp	r6, r0
 8015bd8:	da04      	bge.n	8015be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015bda:	2b00      	cmp	r3, #0
 8015bdc:	db02      	blt.n	8015be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015bde:	42ab      	cmp	r3, r5
 8015be0:	f2c0 8197 	blt.w	8015f12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8015be4:	3601      	adds	r6, #1
 8015be6:	f100 8184 	bmi.w	8015ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015bea:	42b1      	cmp	r1, r6
 8015bec:	f2c0 8181 	blt.w	8015ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015bf0:	3301      	adds	r3, #1
 8015bf2:	f100 817e 	bmi.w	8015ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015bf6:	429a      	cmp	r2, r3
 8015bf8:	f2c0 817b 	blt.w	8015ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015bfc:	9b08      	ldr	r3, [sp, #32]
 8015bfe:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015c00:	9313      	str	r3, [sp, #76]	; 0x4c
 8015c02:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015c06:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015c08:	2b00      	cmp	r3, #0
 8015c0a:	f340 81a4 	ble.w	8015f56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8015c0e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c10:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8015c12:	1418      	asrs	r0, r3, #16
 8015c14:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015c16:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8015c1a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c1c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8015c20:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015c22:	142d      	asrs	r5, r5, #16
 8015c24:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8015c28:	f100 81f8 	bmi.w	801601c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8015c2c:	f102 3eff 	add.w	lr, r2, #4294967295
 8015c30:	4575      	cmp	r5, lr
 8015c32:	f280 81f3 	bge.w	801601c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8015c36:	2800      	cmp	r0, #0
 8015c38:	f2c0 81f0 	blt.w	801601c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8015c3c:	f103 3eff 	add.w	lr, r3, #4294967295
 8015c40:	4570      	cmp	r0, lr
 8015c42:	f280 81eb 	bge.w	801601c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8015c46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015c48:	b212      	sxth	r2, r2
 8015c4a:	fb00 5002 	mla	r0, r0, r2, r5
 8015c4e:	fa1f fe81 	uxth.w	lr, r1
 8015c52:	eb03 0a00 	add.w	sl, r3, r0
 8015c56:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8015c5a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8015c5e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015c62:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8015c66:	b29b      	uxth	r3, r3
 8015c68:	f1bc 0f00 	cmp.w	ip, #0
 8015c6c:	f000 81b9 	beq.w	8015fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8015c70:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8015c74:	940d      	str	r4, [sp, #52]	; 0x34
 8015c76:	eb0a 0b02 	add.w	fp, sl, r2
 8015c7a:	fa1f fa8c 	uxth.w	sl, ip
 8015c7e:	fb0a fe0e 	mul.w	lr, sl, lr
 8015c82:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8015c86:	fa1f fa8a 	uxth.w	sl, sl
 8015c8a:	eba5 050e 	sub.w	r5, r5, lr
 8015c8e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8015c92:	940e      	str	r4, [sp, #56]	; 0x38
 8015c94:	eba3 030a 	sub.w	r3, r3, sl
 8015c98:	b2ad      	uxth	r5, r5
 8015c9a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015c9c:	b29b      	uxth	r3, r3
 8015c9e:	fb08 f505 	mul.w	r5, r8, r5
 8015ca2:	fb09 5303 	mla	r3, r9, r3, r5
 8015ca6:	fb0a 3304 	mla	r3, sl, r4, r3
 8015caa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015cac:	fb0e 3304 	mla	r3, lr, r4, r3
 8015cb0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015cb4:	2b00      	cmp	r3, #0
 8015cb6:	f000 810f 	beq.w	8015ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8015cba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015cbc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015cc0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8015cc4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8015cc8:	f000 8190 	beq.w	8015fec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8015ccc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8015cd0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8015cd4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015cd8:	fb09 f000 	mul.w	r0, r9, r0
 8015cdc:	fb0a fe0e 	mul.w	lr, sl, lr
 8015ce0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8015ce4:	f100 0b20 	add.w	fp, r0, #32
 8015ce8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015cec:	44ce      	add	lr, r9
 8015cee:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8015cf2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015cf6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8015cfa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015cfe:	ea4e 0909 	orr.w	r9, lr, r9
 8015d02:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015d06:	8868      	ldrh	r0, [r5, #2]
 8015d08:	d019      	beq.n	8015d3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015d0a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8015d0e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8015d12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015d16:	fb08 f800 	mul.w	r8, r8, r0
 8015d1a:	fb0a fe0e 	mul.w	lr, sl, lr
 8015d1e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8015d22:	f108 0b20 	add.w	fp, r8, #32
 8015d26:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015d2a:	4486      	add	lr, r0
 8015d2c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8015d30:	0a00      	lsrs	r0, r0, #8
 8015d32:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8015d36:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015d3a:	ea4e 0000 	orr.w	r0, lr, r0
 8015d3e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8015d42:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8015d46:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015d4a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015d4e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015d52:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015d56:	ea4e 0909 	orr.w	r9, lr, r9
 8015d5a:	ea4a 0000 	orr.w	r0, sl, r0
 8015d5e:	f1bc 0f00 	cmp.w	ip, #0
 8015d62:	f000 8145 	beq.w	8015ff0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8015d66:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8015d6a:	3a01      	subs	r2, #1
 8015d6c:	0052      	lsls	r2, r2, #1
 8015d6e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015d70:	3202      	adds	r2, #2
 8015d72:	2cff      	cmp	r4, #255	; 0xff
 8015d74:	eb05 0e02 	add.w	lr, r5, r2
 8015d78:	5aaa      	ldrh	r2, [r5, r2]
 8015d7a:	d018      	beq.n	8015dae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015d7c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8015d80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015d84:	fb04 fa02 	mul.w	sl, r4, r2
 8015d88:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015d8c:	fb08 f805 	mul.w	r8, r8, r5
 8015d90:	f10a 0520 	add.w	r5, sl, #32
 8015d94:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8015d98:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8015d9c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015da0:	4442      	add	r2, r8
 8015da2:	0a2d      	lsrs	r5, r5, #8
 8015da4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8015da8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015dac:	432a      	orrs	r2, r5
 8015dae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015db0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8015db4:	2cff      	cmp	r4, #255	; 0xff
 8015db6:	d01a      	beq.n	8015dee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8015db8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8015dbc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015dc0:	fb04 fa05 	mul.w	sl, r4, r5
 8015dc4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015dc8:	fb08 f80e 	mul.w	r8, r8, lr
 8015dcc:	f10a 0e20 	add.w	lr, sl, #32
 8015dd0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8015dd4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8015dd8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015ddc:	4445      	add	r5, r8
 8015dde:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015de2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8015de6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8015dea:	ea45 050e 	orr.w	r5, r5, lr
 8015dee:	fb1c fe01 	smulbb	lr, ip, r1
 8015df2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8015df6:	f1cc 0810 	rsb	r8, ip, #16
 8015dfa:	eba8 0801 	sub.w	r8, r8, r1
 8015dfe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8015e02:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8015e06:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8015e0a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8015e0e:	4341      	muls	r1, r0
 8015e10:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015e14:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015e18:	ea4a 0202 	orr.w	r2, sl, r2
 8015e1c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8015e20:	fb09 1108 	mla	r1, r9, r8, r1
 8015e24:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015e28:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8015e2c:	fb0c 1102 	mla	r1, ip, r2, r1
 8015e30:	ea4b 0505 	orr.w	r5, fp, r5
 8015e34:	fb0e 1e05 	mla	lr, lr, r5, r1
 8015e38:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8015e3c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015e40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015e44:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015e48:	ea42 0e0e 	orr.w	lr, r2, lr
 8015e4c:	fa1f f28e 	uxth.w	r2, lr
 8015e50:	2bff      	cmp	r3, #255	; 0xff
 8015e52:	d103      	bne.n	8015e5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015e54:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015e56:	29ff      	cmp	r1, #255	; 0xff
 8015e58:	f000 80de 	beq.w	8016018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8015e5c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015e5e:	8838      	ldrh	r0, [r7, #0]
 8015e60:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015e62:	434b      	muls	r3, r1
 8015e64:	f103 0c01 	add.w	ip, r3, #1
 8015e68:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8015e6c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8015e70:	fa5f fc83 	uxtb.w	ip, r3
 8015e74:	1203      	asrs	r3, r0, #8
 8015e76:	1215      	asrs	r5, r2, #8
 8015e78:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015e7c:	fb13 f30c 	smulbb	r3, r3, ip
 8015e80:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8015e84:	fb05 3501 	mla	r5, r5, r1, r3
 8015e88:	10c3      	asrs	r3, r0, #3
 8015e8a:	10d1      	asrs	r1, r2, #3
 8015e8c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8015e90:	fb13 f30c 	smulbb	r3, r3, ip
 8015e94:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015e98:	fb01 3104 	mla	r1, r1, r4, r3
 8015e9c:	00c3      	lsls	r3, r0, #3
 8015e9e:	00d2      	lsls	r2, r2, #3
 8015ea0:	b2db      	uxtb	r3, r3
 8015ea2:	b2d2      	uxtb	r2, r2
 8015ea4:	fb13 f30c 	smulbb	r3, r3, ip
 8015ea8:	b2ad      	uxth	r5, r5
 8015eaa:	fb02 3304 	mla	r3, r2, r4, r3
 8015eae:	b29a      	uxth	r2, r3
 8015eb0:	1c6b      	adds	r3, r5, #1
 8015eb2:	b289      	uxth	r1, r1
 8015eb4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8015eb8:	1c53      	adds	r3, r2, #1
 8015eba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015ebe:	1c4a      	adds	r2, r1, #1
 8015ec0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015ec4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8015ec8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015ecc:	0949      	lsrs	r1, r1, #5
 8015ece:	432b      	orrs	r3, r5
 8015ed0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015ed4:	430b      	orrs	r3, r1
 8015ed6:	803b      	strh	r3, [r7, #0]
 8015ed8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015eda:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015edc:	4413      	add	r3, r2
 8015ede:	9329      	str	r3, [sp, #164]	; 0xa4
 8015ee0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015ee2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015ee4:	441a      	add	r2, r3
 8015ee6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015ee8:	922a      	str	r2, [sp, #168]	; 0xa8
 8015eea:	3b01      	subs	r3, #1
 8015eec:	3702      	adds	r7, #2
 8015eee:	9313      	str	r3, [sp, #76]	; 0x4c
 8015ef0:	e689      	b.n	8015c06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015ef2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015ef4:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8015ef6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8015ef8:	4433      	add	r3, r6
 8015efa:	9329      	str	r3, [sp, #164]	; 0xa4
 8015efc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015efe:	441c      	add	r4, r3
 8015f00:	9b08      	ldr	r3, [sp, #32]
 8015f02:	942a      	str	r4, [sp, #168]	; 0xa8
 8015f04:	3b01      	subs	r3, #1
 8015f06:	9308      	str	r3, [sp, #32]
 8015f08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f0a:	3302      	adds	r3, #2
 8015f0c:	9309      	str	r3, [sp, #36]	; 0x24
 8015f0e:	e658      	b.n	8015bc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015f10:	d028      	beq.n	8015f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8015f12:	9b08      	ldr	r3, [sp, #32]
 8015f14:	982b      	ldr	r0, [sp, #172]	; 0xac
 8015f16:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8015f18:	3b01      	subs	r3, #1
 8015f1a:	fb00 5003 	mla	r0, r0, r3, r5
 8015f1e:	1400      	asrs	r0, r0, #16
 8015f20:	f53f ae6c 	bmi.w	8015bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8015f24:	3901      	subs	r1, #1
 8015f26:	4288      	cmp	r0, r1
 8015f28:	f6bf ae68 	bge.w	8015bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8015f2c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8015f2e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8015f30:	fb01 0303 	mla	r3, r1, r3, r0
 8015f34:	141b      	asrs	r3, r3, #16
 8015f36:	f53f ae61 	bmi.w	8015bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8015f3a:	3a01      	subs	r2, #1
 8015f3c:	4293      	cmp	r3, r2
 8015f3e:	f6bf ae5d 	bge.w	8015bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8015f42:	9b08      	ldr	r3, [sp, #32]
 8015f44:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8015f48:	9313      	str	r3, [sp, #76]	; 0x4c
 8015f4a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015f4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015f50:	2b00      	cmp	r3, #0
 8015f52:	f300 8082 	bgt.w	801605a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8015f56:	9b08      	ldr	r3, [sp, #32]
 8015f58:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015f5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f5e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015f62:	9309      	str	r3, [sp, #36]	; 0x24
 8015f64:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015f66:	2b00      	cmp	r3, #0
 8015f68:	f340 81ef 	ble.w	801634a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8015f6c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015f70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015f74:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015f78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015f7a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015f7e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015f82:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015f86:	eef0 6a48 	vmov.f32	s13, s16
 8015f8a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015f8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f92:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015f96:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8015f9a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015f9e:	eef0 6a68 	vmov.f32	s13, s17
 8015fa2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015fa6:	ee18 2a10 	vmov	r2, s16
 8015faa:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015fae:	fb92 f3f3 	sdiv	r3, r2, r3
 8015fb2:	ee18 2a90 	vmov	r2, s17
 8015fb6:	932b      	str	r3, [sp, #172]	; 0xac
 8015fb8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015fba:	fb92 f3f3 	sdiv	r3, r2, r3
 8015fbe:	932c      	str	r3, [sp, #176]	; 0xb0
 8015fc0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015fc2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015fc4:	3b01      	subs	r3, #1
 8015fc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015fca:	9311      	str	r3, [sp, #68]	; 0x44
 8015fcc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015fce:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8015fd2:	bf08      	it	eq
 8015fd4:	4613      	moveq	r3, r2
 8015fd6:	9308      	str	r3, [sp, #32]
 8015fd8:	eef0 8a67 	vmov.f32	s17, s15
 8015fdc:	eeb0 8a47 	vmov.f32	s16, s14
 8015fe0:	e5e1      	b.n	8015ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015fe2:	fb08 f505 	mul.w	r5, r8, r5
 8015fe6:	fb09 5303 	mla	r3, r9, r3, r5
 8015fea:	e661      	b.n	8015cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8015fec:	4681      	mov	r9, r0
 8015fee:	e688      	b.n	8015d02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8015ff0:	f1c1 0210 	rsb	r2, r1, #16
 8015ff4:	4341      	muls	r1, r0
 8015ff6:	fb09 1902 	mla	r9, r9, r2, r1
 8015ffa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015ffe:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016002:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016006:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801600a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801600e:	ea42 0909 	orr.w	r9, r2, r9
 8016012:	fa1f f289 	uxth.w	r2, r9
 8016016:	e71b      	b.n	8015e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8016018:	803a      	strh	r2, [r7, #0]
 801601a:	e75d      	b.n	8015ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801601c:	f115 0e01 	adds.w	lr, r5, #1
 8016020:	f53f af5a 	bmi.w	8015ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016024:	4572      	cmp	r2, lr
 8016026:	f6ff af57 	blt.w	8015ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801602a:	f110 0e01 	adds.w	lr, r0, #1
 801602e:	f53f af53 	bmi.w	8015ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016032:	4573      	cmp	r3, lr
 8016034:	f6ff af50 	blt.w	8015ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016038:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801603a:	9502      	str	r5, [sp, #8]
 801603c:	b21b      	sxth	r3, r3
 801603e:	b212      	sxth	r2, r2
 8016040:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8016044:	9301      	str	r3, [sp, #4]
 8016046:	9200      	str	r2, [sp, #0]
 8016048:	e9cd c405 	strd	ip, r4, [sp, #20]
 801604c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8016050:	4639      	mov	r1, r7
 8016052:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016054:	f7ff fbd2 	bl	80157fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8016058:	e73e      	b.n	8015ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801605a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801605c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016060:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016062:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8016066:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016068:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801606c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801606e:	141f      	asrs	r7, r3, #16
 8016070:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016072:	141b      	asrs	r3, r3, #16
 8016074:	fb01 3707 	mla	r7, r1, r7, r3
 8016078:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801607a:	fa1f fc82 	uxth.w	ip, r2
 801607e:	eb03 0a07 	add.w	sl, r3, r7
 8016082:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8016086:	f813 9007 	ldrb.w	r9, [r3, r7]
 801608a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801608e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016092:	b29b      	uxth	r3, r3
 8016094:	2d00      	cmp	r5, #0
 8016096:	f000 813d 	beq.w	8016314 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801609a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801609e:	940f      	str	r4, [sp, #60]	; 0x3c
 80160a0:	eb0a 0b01 	add.w	fp, sl, r1
 80160a4:	fa1f fa85 	uxth.w	sl, r5
 80160a8:	fb0a fc0c 	mul.w	ip, sl, ip
 80160ac:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80160b0:	fa1f fa8a 	uxth.w	sl, sl
 80160b4:	eba0 000c 	sub.w	r0, r0, ip
 80160b8:	eba3 030a 	sub.w	r3, r3, sl
 80160bc:	b280      	uxth	r0, r0
 80160be:	fb08 f000 	mul.w	r0, r8, r0
 80160c2:	b29b      	uxth	r3, r3
 80160c4:	fb09 0303 	mla	r3, r9, r3, r0
 80160c8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80160ca:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80160ce:	9410      	str	r4, [sp, #64]	; 0x40
 80160d0:	fb0a 3300 	mla	r3, sl, r0, r3
 80160d4:	fb0c 3304 	mla	r3, ip, r4, r3
 80160d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80160dc:	2b00      	cmp	r3, #0
 80160de:	f000 810b 	beq.w	80162f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80160e2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80160e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80160e6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80160ea:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80160ee:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80160f2:	f000 8114 	beq.w	801631e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 80160f6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80160fa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80160fe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016102:	fb09 f707 	mul.w	r7, r9, r7
 8016106:	fb0a fc0c 	mul.w	ip, sl, ip
 801610a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801610e:	f107 0b20 	add.w	fp, r7, #32
 8016112:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016116:	44cc      	add	ip, r9
 8016118:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801611c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016120:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016124:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016128:	ea4c 0909 	orr.w	r9, ip, r9
 801612c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016130:	8847      	ldrh	r7, [r0, #2]
 8016132:	d019      	beq.n	8016168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8016134:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016138:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801613c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016140:	fb08 f807 	mul.w	r8, r8, r7
 8016144:	fb0a fc0c 	mul.w	ip, sl, ip
 8016148:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801614c:	f108 0b20 	add.w	fp, r8, #32
 8016150:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016154:	44bc      	add	ip, r7
 8016156:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801615a:	0a3f      	lsrs	r7, r7, #8
 801615c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016160:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016164:	ea4c 0707 	orr.w	r7, ip, r7
 8016168:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801616c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016170:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016174:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016178:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801617c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016180:	ea4c 0909 	orr.w	r9, ip, r9
 8016184:	ea4a 0707 	orr.w	r7, sl, r7
 8016188:	2d00      	cmp	r5, #0
 801618a:	f000 80ca 	beq.w	8016322 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 801618e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8016192:	3901      	subs	r1, #1
 8016194:	0049      	lsls	r1, r1, #1
 8016196:	3102      	adds	r1, #2
 8016198:	eb00 0c01 	add.w	ip, r0, r1
 801619c:	5a41      	ldrh	r1, [r0, r1]
 801619e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80161a0:	28ff      	cmp	r0, #255	; 0xff
 80161a2:	d019      	beq.n	80161d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 80161a4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80161a6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80161aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80161ae:	fb04 fa01 	mul.w	sl, r4, r1
 80161b2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80161b6:	fb08 f800 	mul.w	r8, r8, r0
 80161ba:	f10a 0020 	add.w	r0, sl, #32
 80161be:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80161c2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80161c6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80161ca:	4441      	add	r1, r8
 80161cc:	0a00      	lsrs	r0, r0, #8
 80161ce:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80161d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80161d6:	4301      	orrs	r1, r0
 80161d8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80161da:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80161de:	2cff      	cmp	r4, #255	; 0xff
 80161e0:	d01a      	beq.n	8016218 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 80161e2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80161e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80161ea:	fb04 fa00 	mul.w	sl, r4, r0
 80161ee:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80161f2:	fb08 f80c 	mul.w	r8, r8, ip
 80161f6:	f10a 0c20 	add.w	ip, sl, #32
 80161fa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80161fe:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8016202:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016206:	4440      	add	r0, r8
 8016208:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801620c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016210:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016214:	ea40 000c 	orr.w	r0, r0, ip
 8016218:	fb15 fc02 	smulbb	ip, r5, r2
 801621c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016220:	f1c5 0810 	rsb	r8, r5, #16
 8016224:	eba8 0802 	sub.w	r8, r8, r2
 8016228:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801622c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016230:	437a      	muls	r2, r7
 8016232:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8016236:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801623a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801623e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016242:	fb09 2208 	mla	r2, r9, r8, r2
 8016246:	ea4a 0101 	orr.w	r1, sl, r1
 801624a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801624e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016252:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016256:	fb05 2201 	mla	r2, r5, r1, r2
 801625a:	ea4b 0000 	orr.w	r0, fp, r0
 801625e:	fb0c 2200 	mla	r2, ip, r0, r2
 8016262:	0d57      	lsrs	r7, r2, #21
 8016264:	0952      	lsrs	r2, r2, #5
 8016266:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801626a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801626e:	433a      	orrs	r2, r7
 8016270:	2bff      	cmp	r3, #255	; 0xff
 8016272:	b292      	uxth	r2, r2
 8016274:	d102      	bne.n	801627c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8016276:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016278:	29ff      	cmp	r1, #255	; 0xff
 801627a:	d063      	beq.n	8016344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 801627c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801627e:	f8be 1000 	ldrh.w	r1, [lr]
 8016282:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016284:	4343      	muls	r3, r0
 8016286:	1c58      	adds	r0, r3, #1
 8016288:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801628c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8016290:	1208      	asrs	r0, r1, #8
 8016292:	b2db      	uxtb	r3, r3
 8016294:	1215      	asrs	r5, r2, #8
 8016296:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801629a:	fb10 f003 	smulbb	r0, r0, r3
 801629e:	10cf      	asrs	r7, r1, #3
 80162a0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80162a4:	00c9      	lsls	r1, r1, #3
 80162a6:	fb05 0504 	mla	r5, r5, r4, r0
 80162aa:	b2c9      	uxtb	r1, r1
 80162ac:	10d0      	asrs	r0, r2, #3
 80162ae:	00d2      	lsls	r2, r2, #3
 80162b0:	fb11 f103 	smulbb	r1, r1, r3
 80162b4:	b2d2      	uxtb	r2, r2
 80162b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80162ba:	fb02 1204 	mla	r2, r2, r4, r1
 80162be:	fb17 f703 	smulbb	r7, r7, r3
 80162c2:	b2ad      	uxth	r5, r5
 80162c4:	b292      	uxth	r2, r2
 80162c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80162ca:	fb00 7004 	mla	r0, r0, r4, r7
 80162ce:	1c6b      	adds	r3, r5, #1
 80162d0:	1c57      	adds	r7, r2, #1
 80162d2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80162d6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80162da:	b280      	uxth	r0, r0
 80162dc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80162e0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80162e4:	433d      	orrs	r5, r7
 80162e6:	1c47      	adds	r7, r0, #1
 80162e8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80162ec:	097f      	lsrs	r7, r7, #5
 80162ee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80162f2:	433d      	orrs	r5, r7
 80162f4:	f8ae 5000 	strh.w	r5, [lr]
 80162f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80162fa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80162fc:	4413      	add	r3, r2
 80162fe:	9329      	str	r3, [sp, #164]	; 0xa4
 8016300:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016302:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016304:	441a      	add	r2, r3
 8016306:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016308:	922a      	str	r2, [sp, #168]	; 0xa8
 801630a:	3b01      	subs	r3, #1
 801630c:	f10e 0e02 	add.w	lr, lr, #2
 8016310:	9313      	str	r3, [sp, #76]	; 0x4c
 8016312:	e61c      	b.n	8015f4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8016314:	fb08 f000 	mul.w	r0, r8, r0
 8016318:	fb09 0303 	mla	r3, r9, r3, r0
 801631c:	e6dc      	b.n	80160d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 801631e:	46b9      	mov	r9, r7
 8016320:	e704      	b.n	801612c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8016322:	f1c2 0110 	rsb	r1, r2, #16
 8016326:	437a      	muls	r2, r7
 8016328:	fb09 2901 	mla	r9, r9, r1, r2
 801632c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016330:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016334:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016338:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801633c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016340:	4302      	orrs	r2, r0
 8016342:	e795      	b.n	8016270 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8016344:	f8ae 2000 	strh.w	r2, [lr]
 8016348:	e7d6      	b.n	80162f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801634a:	b017      	add	sp, #92	; 0x5c
 801634c:	ecbd 8b08 	vpop	{d8-d11}
 8016350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016358:	b085      	sub	sp, #20
 801635a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801635e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8016362:	9103      	str	r1, [sp, #12]
 8016364:	fb05 7106 	mla	r1, r5, r6, r7
 8016368:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 801636c:	2d00      	cmp	r5, #0
 801636e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016372:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016376:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801637a:	9401      	str	r4, [sp, #4]
 801637c:	eb02 0901 	add.w	r9, r2, r1
 8016380:	f2c0 80c0 	blt.w	8016504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8016384:	45a8      	cmp	r8, r5
 8016386:	f340 80bd 	ble.w	8016504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801638a:	2f00      	cmp	r7, #0
 801638c:	f2c0 80b6 	blt.w	80164fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8016390:	42be      	cmp	r6, r7
 8016392:	f340 80b3 	ble.w	80164fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8016396:	f812 c001 	ldrb.w	ip, [r2, r1]
 801639a:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 801639e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80163a2:	d019      	beq.n	80163d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 80163a4:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80163a8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80163ac:	435a      	muls	r2, r3
 80163ae:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80163b2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80163b6:	fb0c f403 	mul.w	r4, ip, r3
 80163ba:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80163be:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80163c2:	441a      	add	r2, r3
 80163c4:	f104 0320 	add.w	r3, r4, #32
 80163c8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80163cc:	0a1b      	lsrs	r3, r3, #8
 80163ce:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80163d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80163d6:	4319      	orrs	r1, r3
 80163d8:	b289      	uxth	r1, r1
 80163da:	1c7b      	adds	r3, r7, #1
 80163dc:	f100 8097 	bmi.w	801650e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80163e0:	429e      	cmp	r6, r3
 80163e2:	f340 8094 	ble.w	801650e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80163e6:	2800      	cmp	r0, #0
 80163e8:	f000 8094 	beq.w	8016514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 80163ec:	f899 4001 	ldrb.w	r4, [r9, #1]
 80163f0:	9b01      	ldr	r3, [sp, #4]
 80163f2:	2cff      	cmp	r4, #255	; 0xff
 80163f4:	885b      	ldrh	r3, [r3, #2]
 80163f6:	d01b      	beq.n	8016430 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 80163f8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80163fc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016400:	fb0a f202 	mul.w	r2, sl, r2
 8016404:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016408:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801640c:	fb04 fa03 	mul.w	sl, r4, r3
 8016410:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016414:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016418:	441a      	add	r2, r3
 801641a:	f10a 0320 	add.w	r3, sl, #32
 801641e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016422:	0a1b      	lsrs	r3, r3, #8
 8016424:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016428:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801642c:	ea4b 0303 	orr.w	r3, fp, r3
 8016430:	b29b      	uxth	r3, r3
 8016432:	3501      	adds	r5, #1
 8016434:	d474      	bmi.n	8016520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8016436:	45a8      	cmp	r8, r5
 8016438:	dd72      	ble.n	8016520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801643a:	f1be 0f00 	cmp.w	lr, #0
 801643e:	f000 8110 	beq.w	8016662 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8016442:	2f00      	cmp	r7, #0
 8016444:	db69      	blt.n	801651a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8016446:	42be      	cmp	r6, r7
 8016448:	dd67      	ble.n	801651a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801644a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801644e:	9a01      	ldr	r2, [sp, #4]
 8016450:	2dff      	cmp	r5, #255	; 0xff
 8016452:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8016456:	d01c      	beq.n	8016492 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8016458:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801645c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016460:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016464:	fb05 fa0b 	mul.w	sl, r5, fp
 8016468:	fb08 f802 	mul.w	r8, r8, r2
 801646c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016470:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8016474:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016478:	4490      	add	r8, r2
 801647a:	f10a 0220 	add.w	r2, sl, #32
 801647e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8016482:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016486:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801648a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801648e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8016492:	fa1f fb8b 	uxth.w	fp, fp
 8016496:	3701      	adds	r7, #1
 8016498:	d447      	bmi.n	801652a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801649a:	42be      	cmp	r6, r7
 801649c:	dd45      	ble.n	801652a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801649e:	2800      	cmp	r0, #0
 80164a0:	d046      	beq.n	8016530 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 80164a2:	3601      	adds	r6, #1
 80164a4:	9a01      	ldr	r2, [sp, #4]
 80164a6:	f819 7006 	ldrb.w	r7, [r9, r6]
 80164aa:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80164ae:	2fff      	cmp	r7, #255	; 0xff
 80164b0:	d01a      	beq.n	80164e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 80164b2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80164b6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80164ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80164be:	fb07 f902 	mul.w	r9, r7, r2
 80164c2:	fb08 f806 	mul.w	r8, r8, r6
 80164c6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80164ca:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80164ce:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80164d2:	44b0      	add	r8, r6
 80164d4:	f109 0620 	add.w	r6, r9, #32
 80164d8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80164dc:	0a36      	lsrs	r6, r6, #8
 80164de:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80164e2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80164e6:	4332      	orrs	r2, r6
 80164e8:	b292      	uxth	r2, r2
 80164ea:	280f      	cmp	r0, #15
 80164ec:	d922      	bls.n	8016534 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 80164ee:	4b61      	ldr	r3, [pc, #388]	; (8016674 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 80164f0:	4a61      	ldr	r2, [pc, #388]	; (8016678 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 80164f2:	4862      	ldr	r0, [pc, #392]	; (801667c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 80164f4:	f240 11f9 	movw	r1, #505	; 0x1f9
 80164f8:	f003 fc94 	bl	8019e24 <__assert_func>
 80164fc:	f04f 0c00 	mov.w	ip, #0
 8016500:	4661      	mov	r1, ip
 8016502:	e76a      	b.n	80163da <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8016504:	2400      	movs	r4, #0
 8016506:	46a4      	mov	ip, r4
 8016508:	4623      	mov	r3, r4
 801650a:	4621      	mov	r1, r4
 801650c:	e791      	b.n	8016432 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801650e:	2400      	movs	r4, #0
 8016510:	4623      	mov	r3, r4
 8016512:	e78e      	b.n	8016432 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8016514:	4604      	mov	r4, r0
 8016516:	4603      	mov	r3, r0
 8016518:	e78b      	b.n	8016432 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801651a:	2500      	movs	r5, #0
 801651c:	46ab      	mov	fp, r5
 801651e:	e7ba      	b.n	8016496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8016520:	2700      	movs	r7, #0
 8016522:	463d      	mov	r5, r7
 8016524:	463a      	mov	r2, r7
 8016526:	46bb      	mov	fp, r7
 8016528:	e7df      	b.n	80164ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801652a:	2700      	movs	r7, #0
 801652c:	463a      	mov	r2, r7
 801652e:	e7dc      	b.n	80164ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8016530:	4607      	mov	r7, r0
 8016532:	4602      	mov	r2, r0
 8016534:	f1be 0f0f 	cmp.w	lr, #15
 8016538:	d8d9      	bhi.n	80164ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801653a:	b286      	uxth	r6, r0
 801653c:	fa1f f98e 	uxth.w	r9, lr
 8016540:	fb06 f809 	mul.w	r8, r6, r9
 8016544:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8016548:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801654c:	0136      	lsls	r6, r6, #4
 801654e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016552:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016556:	9601      	str	r6, [sp, #4]
 8016558:	ea4a 0101 	orr.w	r1, sl, r1
 801655c:	fa1f f689 	uxth.w	r6, r9
 8016560:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8016564:	fb10 f90e 	smulbb	r9, r0, lr
 8016568:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801656c:	9602      	str	r6, [sp, #8]
 801656e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016572:	460e      	mov	r6, r1
 8016574:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016578:	f1ce 0110 	rsb	r1, lr, #16
 801657c:	1a09      	subs	r1, r1, r0
 801657e:	ea4a 0303 	orr.w	r3, sl, r3
 8016582:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8016586:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801658a:	4343      	muls	r3, r0
 801658c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8016590:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016594:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016598:	fb01 3106 	mla	r1, r1, r6, r3
 801659c:	ea4a 0202 	orr.w	r2, sl, r2
 80165a0:	fb09 1302 	mla	r3, r9, r2, r1
 80165a4:	9a03      	ldr	r2, [sp, #12]
 80165a6:	9802      	ldr	r0, [sp, #8]
 80165a8:	8811      	ldrh	r1, [r2, #0]
 80165aa:	9a01      	ldr	r2, [sp, #4]
 80165ac:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80165b0:	1a12      	subs	r2, r2, r0
 80165b2:	9801      	ldr	r0, [sp, #4]
 80165b4:	eba0 0608 	sub.w	r6, r0, r8
 80165b8:	b2b6      	uxth	r6, r6
 80165ba:	b292      	uxth	r2, r2
 80165bc:	4374      	muls	r4, r6
 80165be:	fb0c 4402 	mla	r4, ip, r2, r4
 80165c2:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80165c6:	9a02      	ldr	r2, [sp, #8]
 80165c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80165cc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80165d0:	fb02 4505 	mla	r5, r2, r5, r4
 80165d4:	ea4a 0b0b 	orr.w	fp, sl, fp
 80165d8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80165dc:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80165e0:	fb08 5707 	mla	r7, r8, r7, r5
 80165e4:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80165e8:	120a      	asrs	r2, r1, #8
 80165ea:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80165ee:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80165f2:	b2ff      	uxtb	r7, r7
 80165f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80165f8:	10c8      	asrs	r0, r1, #3
 80165fa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80165fe:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016602:	00c9      	lsls	r1, r1, #3
 8016604:	437a      	muls	r2, r7
 8016606:	ea43 0e0e 	orr.w	lr, r3, lr
 801660a:	b2c9      	uxtb	r1, r1
 801660c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016610:	fa1f f38e 	uxth.w	r3, lr
 8016614:	4378      	muls	r0, r7
 8016616:	434f      	muls	r7, r1
 8016618:	1c51      	adds	r1, r2, #1
 801661a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801661e:	121a      	asrs	r2, r3, #8
 8016620:	f022 0207 	bic.w	r2, r2, #7
 8016624:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8016628:	1c41      	adds	r1, r0, #1
 801662a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801662e:	10d9      	asrs	r1, r3, #3
 8016630:	f021 0103 	bic.w	r1, r1, #3
 8016634:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016638:	0212      	lsls	r2, r2, #8
 801663a:	00c9      	lsls	r1, r1, #3
 801663c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016640:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8016644:	430a      	orrs	r2, r1
 8016646:	1c79      	adds	r1, r7, #1
 8016648:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801664c:	00db      	lsls	r3, r3, #3
 801664e:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8016652:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8016656:	4313      	orrs	r3, r2
 8016658:	9a03      	ldr	r2, [sp, #12]
 801665a:	8013      	strh	r3, [r2, #0]
 801665c:	b005      	add	sp, #20
 801665e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016662:	280f      	cmp	r0, #15
 8016664:	f63f af43 	bhi.w	80164ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8016668:	4677      	mov	r7, lr
 801666a:	4675      	mov	r5, lr
 801666c:	4672      	mov	r2, lr
 801666e:	46f3      	mov	fp, lr
 8016670:	e763      	b.n	801653a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8016672:	bf00      	nop
 8016674:	0801da2b 	.word	0x0801da2b
 8016678:	0801df5a 	.word	0x0801df5a
 801667c:	0801d9f8 	.word	0x0801d9f8

08016680 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016684:	ed2d 8b08 	vpush	{d8-d11}
 8016688:	b093      	sub	sp, #76	; 0x4c
 801668a:	eeb0 aa40 	vmov.f32	s20, s0
 801668e:	9210      	str	r2, [sp, #64]	; 0x40
 8016690:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016692:	910e      	str	r1, [sp, #56]	; 0x38
 8016694:	9306      	str	r3, [sp, #24]
 8016696:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801669a:	9011      	str	r0, [sp, #68]	; 0x44
 801669c:	6850      	ldr	r0, [r2, #4]
 801669e:	6812      	ldr	r2, [r2, #0]
 80166a0:	fb00 1303 	mla	r3, r0, r3, r1
 80166a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80166a8:	9307      	str	r3, [sp, #28]
 80166aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80166ac:	681b      	ldr	r3, [r3, #0]
 80166ae:	9308      	str	r3, [sp, #32]
 80166b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80166b2:	685b      	ldr	r3, [r3, #4]
 80166b4:	9309      	str	r3, [sp, #36]	; 0x24
 80166b6:	eef0 9a60 	vmov.f32	s19, s1
 80166ba:	eeb0 9a41 	vmov.f32	s18, s2
 80166be:	eeb0 8a62 	vmov.f32	s16, s5
 80166c2:	eef0 8a43 	vmov.f32	s17, s6
 80166c6:	eef0 ba44 	vmov.f32	s23, s8
 80166ca:	eeb0 ba64 	vmov.f32	s22, s9
 80166ce:	eef0 aa45 	vmov.f32	s21, s10
 80166d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80166d4:	2b00      	cmp	r3, #0
 80166d6:	dc03      	bgt.n	80166e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80166d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80166da:	2b00      	cmp	r3, #0
 80166dc:	f340 83b4 	ble.w	8016e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 80166e0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80166e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80166e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80166ea:	1e48      	subs	r0, r1, #1
 80166ec:	1e55      	subs	r5, r2, #1
 80166ee:	9b06      	ldr	r3, [sp, #24]
 80166f0:	2b00      	cmp	r3, #0
 80166f2:	f340 8163 	ble.w	80169bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 80166f6:	9e25      	ldr	r6, [sp, #148]	; 0x94
 80166f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80166fa:	1436      	asrs	r6, r6, #16
 80166fc:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016700:	d406      	bmi.n	8016710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016702:	4286      	cmp	r6, r0
 8016704:	da04      	bge.n	8016710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016706:	2b00      	cmp	r3, #0
 8016708:	db02      	blt.n	8016710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801670a:	42ab      	cmp	r3, r5
 801670c:	f2c0 8157 	blt.w	80169be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8016710:	3601      	adds	r6, #1
 8016712:	f100 8144 	bmi.w	801699e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8016716:	42b1      	cmp	r1, r6
 8016718:	f2c0 8141 	blt.w	801699e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801671c:	3301      	adds	r3, #1
 801671e:	f100 813e 	bmi.w	801699e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8016722:	429a      	cmp	r2, r3
 8016724:	f2c0 813b 	blt.w	801699e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8016728:	9b06      	ldr	r3, [sp, #24]
 801672a:	9f07      	ldr	r7, [sp, #28]
 801672c:	930f      	str	r3, [sp, #60]	; 0x3c
 801672e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016732:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016734:	2b00      	cmp	r3, #0
 8016736:	f340 8164 	ble.w	8016a02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 801673a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801673c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801673e:	1418      	asrs	r0, r3, #16
 8016740:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016742:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8016746:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016748:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801674c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801674e:	142d      	asrs	r5, r5, #16
 8016750:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8016754:	f100 81ee 	bmi.w	8016b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8016758:	f102 3eff 	add.w	lr, r2, #4294967295
 801675c:	4575      	cmp	r5, lr
 801675e:	f280 81e9 	bge.w	8016b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8016762:	2800      	cmp	r0, #0
 8016764:	f2c0 81e6 	blt.w	8016b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8016768:	f103 3eff 	add.w	lr, r3, #4294967295
 801676c:	4570      	cmp	r0, lr
 801676e:	f280 81e1 	bge.w	8016b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8016772:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016774:	b212      	sxth	r2, r2
 8016776:	fb00 5002 	mla	r0, r0, r2, r5
 801677a:	fa1f fe81 	uxth.w	lr, r1
 801677e:	eb03 0a00 	add.w	sl, r3, r0
 8016782:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8016786:	f813 9000 	ldrb.w	r9, [r3, r0]
 801678a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801678e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8016792:	b29b      	uxth	r3, r3
 8016794:	f1bc 0f00 	cmp.w	ip, #0
 8016798:	f000 8179 	beq.w	8016a8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 801679c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80167a0:	940a      	str	r4, [sp, #40]	; 0x28
 80167a2:	eb0a 0b02 	add.w	fp, sl, r2
 80167a6:	fa1f fa8c 	uxth.w	sl, ip
 80167aa:	fb0a fe0e 	mul.w	lr, sl, lr
 80167ae:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80167b2:	fa1f fa8a 	uxth.w	sl, sl
 80167b6:	eba5 050e 	sub.w	r5, r5, lr
 80167ba:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80167be:	940b      	str	r4, [sp, #44]	; 0x2c
 80167c0:	eba3 030a 	sub.w	r3, r3, sl
 80167c4:	b2ad      	uxth	r5, r5
 80167c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80167c8:	b29b      	uxth	r3, r3
 80167ca:	fb08 f505 	mul.w	r5, r8, r5
 80167ce:	fb09 5303 	mla	r3, r9, r3, r5
 80167d2:	fb0a 3304 	mla	r3, sl, r4, r3
 80167d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80167d8:	fb0e 3304 	mla	r3, lr, r4, r3
 80167dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80167e0:	2b00      	cmp	r3, #0
 80167e2:	f000 80cf 	beq.w	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80167e6:	9c08      	ldr	r4, [sp, #32]
 80167e8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80167ec:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80167f0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80167f4:	f000 8150 	beq.w	8016a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 80167f8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80167fc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016800:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016804:	fb09 f000 	mul.w	r0, r9, r0
 8016808:	fb0a fe0e 	mul.w	lr, sl, lr
 801680c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016810:	f100 0b20 	add.w	fp, r0, #32
 8016814:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016818:	44ce      	add	lr, r9
 801681a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801681e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016822:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016826:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801682a:	ea4e 0909 	orr.w	r9, lr, r9
 801682e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016832:	8868      	ldrh	r0, [r5, #2]
 8016834:	d019      	beq.n	801686a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8016836:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801683a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801683e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016842:	fb08 f800 	mul.w	r8, r8, r0
 8016846:	fb0a fe0e 	mul.w	lr, sl, lr
 801684a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801684e:	f108 0b20 	add.w	fp, r8, #32
 8016852:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016856:	4486      	add	lr, r0
 8016858:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801685c:	0a00      	lsrs	r0, r0, #8
 801685e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016862:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016866:	ea4e 0000 	orr.w	r0, lr, r0
 801686a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801686e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8016872:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016876:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801687a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801687e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016882:	ea4e 0909 	orr.w	r9, lr, r9
 8016886:	ea4a 0000 	orr.w	r0, sl, r0
 801688a:	f1bc 0f00 	cmp.w	ip, #0
 801688e:	f000 8105 	beq.w	8016a9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8016892:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8016896:	3a01      	subs	r2, #1
 8016898:	0052      	lsls	r2, r2, #1
 801689a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801689c:	3202      	adds	r2, #2
 801689e:	2cff      	cmp	r4, #255	; 0xff
 80168a0:	eb05 0e02 	add.w	lr, r5, r2
 80168a4:	5aaa      	ldrh	r2, [r5, r2]
 80168a6:	d018      	beq.n	80168da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80168a8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80168ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80168b0:	fb04 fa02 	mul.w	sl, r4, r2
 80168b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80168b8:	fb08 f805 	mul.w	r8, r8, r5
 80168bc:	f10a 0520 	add.w	r5, sl, #32
 80168c0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80168c4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80168c8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80168cc:	4442      	add	r2, r8
 80168ce:	0a2d      	lsrs	r5, r5, #8
 80168d0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80168d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80168d8:	432a      	orrs	r2, r5
 80168da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80168dc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80168e0:	2cff      	cmp	r4, #255	; 0xff
 80168e2:	d01a      	beq.n	801691a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80168e4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80168e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80168ec:	fb04 fa05 	mul.w	sl, r4, r5
 80168f0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80168f4:	fb08 f80e 	mul.w	r8, r8, lr
 80168f8:	f10a 0e20 	add.w	lr, sl, #32
 80168fc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8016900:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8016904:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016908:	4445      	add	r5, r8
 801690a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801690e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8016912:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8016916:	ea45 050e 	orr.w	r5, r5, lr
 801691a:	fb1c fe01 	smulbb	lr, ip, r1
 801691e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8016922:	f1cc 0810 	rsb	r8, ip, #16
 8016926:	eba8 0801 	sub.w	r8, r8, r1
 801692a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801692e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8016932:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8016936:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801693a:	4341      	muls	r1, r0
 801693c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016940:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016944:	ea4a 0202 	orr.w	r2, sl, r2
 8016948:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801694c:	fb09 1108 	mla	r1, r9, r8, r1
 8016950:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016954:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8016958:	fb0c 1102 	mla	r1, ip, r2, r1
 801695c:	ea4b 0505 	orr.w	r5, fp, r5
 8016960:	fb0e 1e05 	mla	lr, lr, r5, r1
 8016964:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8016968:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801696c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016970:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016974:	ea42 0e0e 	orr.w	lr, r2, lr
 8016978:	fa1f f28e 	uxth.w	r2, lr
 801697c:	2bff      	cmp	r3, #255	; 0xff
 801697e:	f040 80a1 	bne.w	8016ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 8016982:	803a      	strh	r2, [r7, #0]
 8016984:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016986:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016988:	4413      	add	r3, r2
 801698a:	9325      	str	r3, [sp, #148]	; 0x94
 801698c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801698e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016990:	441a      	add	r2, r3
 8016992:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016994:	9226      	str	r2, [sp, #152]	; 0x98
 8016996:	3b01      	subs	r3, #1
 8016998:	3702      	adds	r7, #2
 801699a:	930f      	str	r3, [sp, #60]	; 0x3c
 801699c:	e6c9      	b.n	8016732 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801699e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80169a0:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80169a2:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80169a4:	4433      	add	r3, r6
 80169a6:	9325      	str	r3, [sp, #148]	; 0x94
 80169a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80169aa:	441c      	add	r4, r3
 80169ac:	9b06      	ldr	r3, [sp, #24]
 80169ae:	9426      	str	r4, [sp, #152]	; 0x98
 80169b0:	3b01      	subs	r3, #1
 80169b2:	9306      	str	r3, [sp, #24]
 80169b4:	9b07      	ldr	r3, [sp, #28]
 80169b6:	3302      	adds	r3, #2
 80169b8:	9307      	str	r3, [sp, #28]
 80169ba:	e698      	b.n	80166ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80169bc:	d028      	beq.n	8016a10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80169be:	9b06      	ldr	r3, [sp, #24]
 80169c0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80169c2:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80169c4:	3b01      	subs	r3, #1
 80169c6:	fb00 5003 	mla	r0, r0, r3, r5
 80169ca:	1400      	asrs	r0, r0, #16
 80169cc:	f53f aeac 	bmi.w	8016728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80169d0:	3901      	subs	r1, #1
 80169d2:	4288      	cmp	r0, r1
 80169d4:	f6bf aea8 	bge.w	8016728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80169d8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80169da:	9826      	ldr	r0, [sp, #152]	; 0x98
 80169dc:	fb01 0303 	mla	r3, r1, r3, r0
 80169e0:	141b      	asrs	r3, r3, #16
 80169e2:	f53f aea1 	bmi.w	8016728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80169e6:	3a01      	subs	r2, #1
 80169e8:	4293      	cmp	r3, r2
 80169ea:	f6bf ae9d 	bge.w	8016728 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80169ee:	9b06      	ldr	r3, [sp, #24]
 80169f0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80169f4:	930f      	str	r3, [sp, #60]	; 0x3c
 80169f6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80169fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80169fc:	2b00      	cmp	r3, #0
 80169fe:	f300 80b6 	bgt.w	8016b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8016a02:	9b06      	ldr	r3, [sp, #24]
 8016a04:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016a08:	9b07      	ldr	r3, [sp, #28]
 8016a0a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016a0e:	9307      	str	r3, [sp, #28]
 8016a10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a12:	2b00      	cmp	r3, #0
 8016a14:	f340 8218 	ble.w	8016e48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8016a18:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016a1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016a20:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016a24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016a26:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016a2a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016a2e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016a32:	eef0 6a48 	vmov.f32	s13, s16
 8016a36:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016a3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a3e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016a42:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8016a46:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016a4a:	eef0 6a68 	vmov.f32	s13, s17
 8016a4e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016a52:	ee18 2a10 	vmov	r2, s16
 8016a56:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016a5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a5e:	ee18 2a90 	vmov	r2, s17
 8016a62:	9327      	str	r3, [sp, #156]	; 0x9c
 8016a64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016a66:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a6a:	9328      	str	r3, [sp, #160]	; 0xa0
 8016a6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016a70:	3b01      	subs	r3, #1
 8016a72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a76:	930e      	str	r3, [sp, #56]	; 0x38
 8016a78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016a7a:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 8016a7e:	bf08      	it	eq
 8016a80:	4613      	moveq	r3, r2
 8016a82:	9306      	str	r3, [sp, #24]
 8016a84:	eef0 8a67 	vmov.f32	s17, s15
 8016a88:	eeb0 8a47 	vmov.f32	s16, s14
 8016a8c:	e621      	b.n	80166d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016a8e:	fb08 f505 	mul.w	r5, r8, r5
 8016a92:	fb09 5303 	mla	r3, r9, r3, r5
 8016a96:	e6a1      	b.n	80167dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8016a98:	4681      	mov	r9, r0
 8016a9a:	e6c8      	b.n	801682e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016a9c:	f1c1 0210 	rsb	r2, r1, #16
 8016aa0:	4341      	muls	r1, r0
 8016aa2:	fb09 1902 	mla	r9, r9, r2, r1
 8016aa6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016aaa:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016aae:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016ab2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016ab6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016aba:	ea42 0909 	orr.w	r9, r2, r9
 8016abe:	fa1f f289 	uxth.w	r2, r9
 8016ac2:	e75b      	b.n	801697c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8016ac4:	f8b7 c000 	ldrh.w	ip, [r7]
 8016ac8:	43db      	mvns	r3, r3
 8016aca:	ea4f 202c 	mov.w	r0, ip, asr #8
 8016ace:	fa5f fe83 	uxtb.w	lr, r3
 8016ad2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016ad6:	fb00 f00e 	mul.w	r0, r0, lr
 8016ada:	1c41      	adds	r1, r0, #1
 8016adc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8016ae0:	1211      	asrs	r1, r2, #8
 8016ae2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016ae6:	f021 0107 	bic.w	r1, r1, #7
 8016aea:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016aee:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016af2:	48d8      	ldr	r0, [pc, #864]	; (8016e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8016af4:	fb05 f50e 	mul.w	r5, r5, lr
 8016af8:	b2c9      	uxtb	r1, r1
 8016afa:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8016afe:	1c69      	adds	r1, r5, #1
 8016b00:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8016b04:	10d1      	asrs	r1, r2, #3
 8016b06:	f021 0103 	bic.w	r1, r1, #3
 8016b0a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8016b0e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8016b12:	b2db      	uxtb	r3, r3
 8016b14:	00c9      	lsls	r1, r1, #3
 8016b16:	fb03 f30e 	mul.w	r3, r3, lr
 8016b1a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016b1e:	4301      	orrs	r1, r0
 8016b20:	1c58      	adds	r0, r3, #1
 8016b22:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8016b26:	00d2      	lsls	r2, r2, #3
 8016b28:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016b2c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016b30:	430a      	orrs	r2, r1
 8016b32:	e726      	b.n	8016982 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8016b34:	f115 0e01 	adds.w	lr, r5, #1
 8016b38:	f53f af24 	bmi.w	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8016b3c:	4572      	cmp	r2, lr
 8016b3e:	f6ff af21 	blt.w	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8016b42:	f110 0e01 	adds.w	lr, r0, #1
 8016b46:	f53f af1d 	bmi.w	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8016b4a:	4573      	cmp	r3, lr
 8016b4c:	f6ff af1a 	blt.w	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8016b50:	b21b      	sxth	r3, r3
 8016b52:	b212      	sxth	r2, r2
 8016b54:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8016b58:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8016b5c:	9301      	str	r3, [sp, #4]
 8016b5e:	9200      	str	r2, [sp, #0]
 8016b60:	4639      	mov	r1, r7
 8016b62:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8016b66:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016b68:	f7ff fbf4 	bl	8016354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8016b6c:	e70a      	b.n	8016984 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8016b6e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016b70:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016b74:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016b76:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8016b7a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016b7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016b80:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016b82:	141f      	asrs	r7, r3, #16
 8016b84:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016b86:	141b      	asrs	r3, r3, #16
 8016b88:	fb01 3707 	mla	r7, r1, r7, r3
 8016b8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b8e:	fa1f fc82 	uxth.w	ip, r2
 8016b92:	eb03 0a07 	add.w	sl, r3, r7
 8016b96:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8016b9a:	f813 9007 	ldrb.w	r9, [r3, r7]
 8016b9e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016ba2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016ba6:	b29b      	uxth	r3, r3
 8016ba8:	2d00      	cmp	r5, #0
 8016baa:	f000 80fe 	beq.w	8016daa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 8016bae:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8016bb2:	940c      	str	r4, [sp, #48]	; 0x30
 8016bb4:	eb0a 0b01 	add.w	fp, sl, r1
 8016bb8:	fa1f fa85 	uxth.w	sl, r5
 8016bbc:	fb0a fc0c 	mul.w	ip, sl, ip
 8016bc0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8016bc4:	fa1f fa8a 	uxth.w	sl, sl
 8016bc8:	eba0 000c 	sub.w	r0, r0, ip
 8016bcc:	eba3 030a 	sub.w	r3, r3, sl
 8016bd0:	b280      	uxth	r0, r0
 8016bd2:	fb08 f000 	mul.w	r0, r8, r0
 8016bd6:	b29b      	uxth	r3, r3
 8016bd8:	fb09 0303 	mla	r3, r9, r3, r0
 8016bdc:	980c      	ldr	r0, [sp, #48]	; 0x30
 8016bde:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016be2:	940d      	str	r4, [sp, #52]	; 0x34
 8016be4:	fb0a 3300 	mla	r3, sl, r0, r3
 8016be8:	fb0c 3304 	mla	r3, ip, r4, r3
 8016bec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016bf0:	2b00      	cmp	r3, #0
 8016bf2:	f000 80cc 	beq.w	8016d8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8016bf6:	9808      	ldr	r0, [sp, #32]
 8016bf8:	9c08      	ldr	r4, [sp, #32]
 8016bfa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016bfe:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8016c02:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8016c06:	f000 80d5 	beq.w	8016db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8016c0a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016c0e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016c12:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016c16:	fb09 f707 	mul.w	r7, r9, r7
 8016c1a:	fb0a fc0c 	mul.w	ip, sl, ip
 8016c1e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8016c22:	f107 0b20 	add.w	fp, r7, #32
 8016c26:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016c2a:	44cc      	add	ip, r9
 8016c2c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8016c30:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016c34:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016c38:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016c3c:	ea4c 0909 	orr.w	r9, ip, r9
 8016c40:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016c44:	8847      	ldrh	r7, [r0, #2]
 8016c46:	d019      	beq.n	8016c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8016c48:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016c4c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016c50:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016c54:	fb08 f807 	mul.w	r8, r8, r7
 8016c58:	fb0a fc0c 	mul.w	ip, sl, ip
 8016c5c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8016c60:	f108 0b20 	add.w	fp, r8, #32
 8016c64:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016c68:	44bc      	add	ip, r7
 8016c6a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8016c6e:	0a3f      	lsrs	r7, r7, #8
 8016c70:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016c74:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016c78:	ea4c 0707 	orr.w	r7, ip, r7
 8016c7c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8016c80:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016c84:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016c88:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016c8c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016c90:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016c94:	ea4c 0909 	orr.w	r9, ip, r9
 8016c98:	ea4a 0707 	orr.w	r7, sl, r7
 8016c9c:	2d00      	cmp	r5, #0
 8016c9e:	f000 808b 	beq.w	8016db8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 8016ca2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8016ca6:	3901      	subs	r1, #1
 8016ca8:	0049      	lsls	r1, r1, #1
 8016caa:	3102      	adds	r1, #2
 8016cac:	eb00 0c01 	add.w	ip, r0, r1
 8016cb0:	5a41      	ldrh	r1, [r0, r1]
 8016cb2:	980c      	ldr	r0, [sp, #48]	; 0x30
 8016cb4:	28ff      	cmp	r0, #255	; 0xff
 8016cb6:	d019      	beq.n	8016cec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8016cb8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016cba:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8016cbe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016cc2:	fb04 fa01 	mul.w	sl, r4, r1
 8016cc6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016cca:	fb08 f800 	mul.w	r8, r8, r0
 8016cce:	f10a 0020 	add.w	r0, sl, #32
 8016cd2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8016cd6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016cda:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016cde:	4441      	add	r1, r8
 8016ce0:	0a00      	lsrs	r0, r0, #8
 8016ce2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016ce6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016cea:	4301      	orrs	r1, r0
 8016cec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016cee:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8016cf2:	2cff      	cmp	r4, #255	; 0xff
 8016cf4:	d01a      	beq.n	8016d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8016cf6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8016cfa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016cfe:	fb04 fa00 	mul.w	sl, r4, r0
 8016d02:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016d06:	fb08 f80c 	mul.w	r8, r8, ip
 8016d0a:	f10a 0c20 	add.w	ip, sl, #32
 8016d0e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8016d12:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8016d16:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016d1a:	4440      	add	r0, r8
 8016d1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016d20:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016d24:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016d28:	ea40 000c 	orr.w	r0, r0, ip
 8016d2c:	fb15 fc02 	smulbb	ip, r5, r2
 8016d30:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016d34:	f1c5 0810 	rsb	r8, r5, #16
 8016d38:	eba8 0802 	sub.w	r8, r8, r2
 8016d3c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8016d40:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016d44:	437a      	muls	r2, r7
 8016d46:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8016d4a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8016d4e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016d52:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016d56:	fb09 2208 	mla	r2, r9, r8, r2
 8016d5a:	ea4a 0101 	orr.w	r1, sl, r1
 8016d5e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8016d62:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016d66:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016d6a:	fb05 2201 	mla	r2, r5, r1, r2
 8016d6e:	ea4b 0000 	orr.w	r0, fp, r0
 8016d72:	fb0c 2200 	mla	r2, ip, r0, r2
 8016d76:	0d57      	lsrs	r7, r2, #21
 8016d78:	0952      	lsrs	r2, r2, #5
 8016d7a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016d7e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016d82:	433a      	orrs	r2, r7
 8016d84:	2bff      	cmp	r3, #255	; 0xff
 8016d86:	b292      	uxth	r2, r2
 8016d88:	d127      	bne.n	8016dda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8016d8a:	f8ae 2000 	strh.w	r2, [lr]
 8016d8e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016d90:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016d92:	4413      	add	r3, r2
 8016d94:	9325      	str	r3, [sp, #148]	; 0x94
 8016d96:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8016d98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016d9a:	441a      	add	r2, r3
 8016d9c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016d9e:	9226      	str	r2, [sp, #152]	; 0x98
 8016da0:	3b01      	subs	r3, #1
 8016da2:	f10e 0e02 	add.w	lr, lr, #2
 8016da6:	930f      	str	r3, [sp, #60]	; 0x3c
 8016da8:	e627      	b.n	80169fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8016daa:	fb08 f000 	mul.w	r0, r8, r0
 8016dae:	fb09 0303 	mla	r3, r9, r3, r0
 8016db2:	e71b      	b.n	8016bec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8016db4:	46b9      	mov	r9, r7
 8016db6:	e743      	b.n	8016c40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8016db8:	f1c2 0110 	rsb	r1, r2, #16
 8016dbc:	437a      	muls	r2, r7
 8016dbe:	fb09 2901 	mla	r9, r9, r1, r2
 8016dc2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016dc6:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016dca:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016dce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016dd2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016dd6:	4302      	orrs	r2, r0
 8016dd8:	e7d4      	b.n	8016d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8016dda:	f8be 7000 	ldrh.w	r7, [lr]
 8016dde:	4c1d      	ldr	r4, [pc, #116]	; (8016e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8016de0:	43db      	mvns	r3, r3
 8016de2:	1238      	asrs	r0, r7, #8
 8016de4:	fa5f fc83 	uxtb.w	ip, r3
 8016de8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016dec:	10fd      	asrs	r5, r7, #3
 8016dee:	fb00 f00c 	mul.w	r0, r0, ip
 8016df2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016df6:	fb05 f10c 	mul.w	r1, r5, ip
 8016dfa:	1c45      	adds	r5, r0, #1
 8016dfc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8016e00:	1215      	asrs	r5, r2, #8
 8016e02:	f025 0507 	bic.w	r5, r5, #7
 8016e06:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8016e0a:	1c4d      	adds	r5, r1, #1
 8016e0c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8016e10:	10d1      	asrs	r1, r2, #3
 8016e12:	f021 0103 	bic.w	r1, r1, #3
 8016e16:	00fb      	lsls	r3, r7, #3
 8016e18:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8016e1c:	b2db      	uxtb	r3, r3
 8016e1e:	b2c0      	uxtb	r0, r0
 8016e20:	00c9      	lsls	r1, r1, #3
 8016e22:	fb03 f30c 	mul.w	r3, r3, ip
 8016e26:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016e2a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8016e2e:	4308      	orrs	r0, r1
 8016e30:	1c59      	adds	r1, r3, #1
 8016e32:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8016e36:	00d2      	lsls	r2, r2, #3
 8016e38:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8016e3c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8016e40:	4318      	orrs	r0, r3
 8016e42:	f8ae 0000 	strh.w	r0, [lr]
 8016e46:	e7a2      	b.n	8016d8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8016e48:	b013      	add	sp, #76	; 0x4c
 8016e4a:	ecbd 8b08 	vpop	{d8-d11}
 8016e4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e52:	bf00      	nop
 8016e54:	fffff800 	.word	0xfffff800

08016e58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8016e58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016e5c:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8016e60:	fb0c 4e03 	mla	lr, ip, r3, r4
 8016e64:	f1bc 0f00 	cmp.w	ip, #0
 8016e68:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8016e6c:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8016e70:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8016e74:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8016e78:	8808      	ldrh	r0, [r1, #0]
 8016e7a:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8016e7e:	db2f      	blt.n	8016ee0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016e80:	45e2      	cmp	sl, ip
 8016e82:	dd2d      	ble.n	8016ee0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016e84:	2c00      	cmp	r4, #0
 8016e86:	db29      	blt.n	8016edc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8016e88:	42a3      	cmp	r3, r4
 8016e8a:	dd27      	ble.n	8016edc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8016e8c:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8016e90:	1c62      	adds	r2, r4, #1
 8016e92:	d428      	bmi.n	8016ee6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016e94:	4293      	cmp	r3, r2
 8016e96:	dd26      	ble.n	8016ee6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016e98:	b32f      	cbz	r7, 8016ee6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016e9a:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8016e9e:	f11c 0c01 	adds.w	ip, ip, #1
 8016ea2:	d424      	bmi.n	8016eee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8016ea4:	45e2      	cmp	sl, ip
 8016ea6:	dd22      	ble.n	8016eee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8016ea8:	2e00      	cmp	r6, #0
 8016eaa:	f000 809d 	beq.w	8016fe8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8016eae:	2c00      	cmp	r4, #0
 8016eb0:	db1b      	blt.n	8016eea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8016eb2:	42a3      	cmp	r3, r4
 8016eb4:	dd19      	ble.n	8016eea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8016eb6:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8016eba:	3401      	adds	r4, #1
 8016ebc:	d41a      	bmi.n	8016ef4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8016ebe:	42a3      	cmp	r3, r4
 8016ec0:	dd18      	ble.n	8016ef4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8016ec2:	b1cf      	cbz	r7, 8016ef8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8016ec4:	3301      	adds	r3, #1
 8016ec6:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8016eca:	2f0f      	cmp	r7, #15
 8016ecc:	d915      	bls.n	8016efa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8016ece:	4b49      	ldr	r3, [pc, #292]	; (8016ff4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8016ed0:	4a49      	ldr	r2, [pc, #292]	; (8016ff8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8016ed2:	484a      	ldr	r0, [pc, #296]	; (8016ffc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8016ed4:	f240 11db 	movw	r1, #475	; 0x1db
 8016ed8:	f002 ffa4 	bl	8019e24 <__assert_func>
 8016edc:	4681      	mov	r9, r0
 8016ede:	e7d7      	b.n	8016e90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8016ee0:	4686      	mov	lr, r0
 8016ee2:	4681      	mov	r9, r0
 8016ee4:	e7db      	b.n	8016e9e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8016ee6:	4686      	mov	lr, r0
 8016ee8:	e7d9      	b.n	8016e9e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8016eea:	4684      	mov	ip, r0
 8016eec:	e7e5      	b.n	8016eba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8016eee:	4603      	mov	r3, r0
 8016ef0:	4684      	mov	ip, r0
 8016ef2:	e7ea      	b.n	8016eca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8016ef4:	4603      	mov	r3, r0
 8016ef6:	e7e8      	b.n	8016eca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8016ef8:	4603      	mov	r3, r0
 8016efa:	2e0f      	cmp	r6, #15
 8016efc:	d8e7      	bhi.n	8016ece <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8016efe:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8016f02:	fb17 f806 	smulbb	r8, r7, r6
 8016f06:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016f0a:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8016f0e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016f12:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8016f16:	ea44 0909 	orr.w	r9, r4, r9
 8016f1a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016f1e:	f1c6 0410 	rsb	r4, r6, #16
 8016f22:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016f26:	1be4      	subs	r4, r4, r7
 8016f28:	041a      	lsls	r2, r3, #16
 8016f2a:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8016f2e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8016f32:	fb07 fe0e 	mul.w	lr, r7, lr
 8016f36:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016f3a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8016f3e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016f42:	fb04 e409 	mla	r4, r4, r9, lr
 8016f46:	4313      	orrs	r3, r2
 8016f48:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8016f4c:	fb08 4303 	mla	r3, r8, r3, r4
 8016f50:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016f54:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8016f58:	4322      	orrs	r2, r4
 8016f5a:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8016f5e:	fb06 3202 	mla	r2, r6, r2, r3
 8016f62:	0d53      	lsrs	r3, r2, #21
 8016f64:	0952      	lsrs	r2, r2, #5
 8016f66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016f6a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016f6e:	431a      	orrs	r2, r3
 8016f70:	b293      	uxth	r3, r2
 8016f72:	b2af      	uxth	r7, r5
 8016f74:	1202      	asrs	r2, r0, #8
 8016f76:	43ed      	mvns	r5, r5
 8016f78:	b2ed      	uxtb	r5, r5
 8016f7a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016f7e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016f82:	fb12 f205 	smulbb	r2, r2, r5
 8016f86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016f8a:	fb0c 2c07 	mla	ip, ip, r7, r2
 8016f8e:	00dc      	lsls	r4, r3, #3
 8016f90:	10da      	asrs	r2, r3, #3
 8016f92:	10c6      	asrs	r6, r0, #3
 8016f94:	00c3      	lsls	r3, r0, #3
 8016f96:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016f9a:	b2db      	uxtb	r3, r3
 8016f9c:	fb16 f605 	smulbb	r6, r6, r5
 8016fa0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016fa4:	b2e4      	uxtb	r4, r4
 8016fa6:	fb13 f305 	smulbb	r3, r3, r5
 8016faa:	fa1f fc8c 	uxth.w	ip, ip
 8016fae:	fb02 6207 	mla	r2, r2, r7, r6
 8016fb2:	fb04 3307 	mla	r3, r4, r7, r3
 8016fb6:	b296      	uxth	r6, r2
 8016fb8:	b29a      	uxth	r2, r3
 8016fba:	f10c 0301 	add.w	r3, ip, #1
 8016fbe:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8016fc2:	1c53      	adds	r3, r2, #1
 8016fc4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016fc8:	1c72      	adds	r2, r6, #1
 8016fca:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8016fce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016fd2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016fd6:	0952      	lsrs	r2, r2, #5
 8016fd8:	ea43 030c 	orr.w	r3, r3, ip
 8016fdc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016fe0:	4313      	orrs	r3, r2
 8016fe2:	800b      	strh	r3, [r1, #0]
 8016fe4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016fe8:	2f0f      	cmp	r7, #15
 8016fea:	f63f af70 	bhi.w	8016ece <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8016fee:	4603      	mov	r3, r0
 8016ff0:	4684      	mov	ip, r0
 8016ff2:	e784      	b.n	8016efe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8016ff4:	0801da2b 	.word	0x0801da2b
 8016ff8:	0801e003 	.word	0x0801e003
 8016ffc:	0801d9f8 	.word	0x0801d9f8

08017000 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017004:	ed2d 8b08 	vpush	{d8-d11}
 8017008:	b093      	sub	sp, #76	; 0x4c
 801700a:	461d      	mov	r5, r3
 801700c:	9210      	str	r2, [sp, #64]	; 0x40
 801700e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017010:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8017014:	920b      	str	r2, [sp, #44]	; 0x2c
 8017016:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 801701a:	910a      	str	r1, [sp, #40]	; 0x28
 801701c:	6859      	ldr	r1, [r3, #4]
 801701e:	681b      	ldr	r3, [r3, #0]
 8017020:	9011      	str	r0, [sp, #68]	; 0x44
 8017022:	fb01 2707 	mla	r7, r1, r7, r2
 8017026:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801702a:	9307      	str	r3, [sp, #28]
 801702c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801702e:	681b      	ldr	r3, [r3, #0]
 8017030:	9309      	str	r3, [sp, #36]	; 0x24
 8017032:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017034:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8017038:	43db      	mvns	r3, r3
 801703a:	b2db      	uxtb	r3, r3
 801703c:	eeb0 aa40 	vmov.f32	s20, s0
 8017040:	eef0 9a60 	vmov.f32	s19, s1
 8017044:	eeb0 9a41 	vmov.f32	s18, s2
 8017048:	eeb0 8a62 	vmov.f32	s16, s5
 801704c:	eef0 8a43 	vmov.f32	s17, s6
 8017050:	eef0 ba44 	vmov.f32	s23, s8
 8017054:	eeb0 ba64 	vmov.f32	s22, s9
 8017058:	eef0 aa45 	vmov.f32	s21, s10
 801705c:	9308      	str	r3, [sp, #32]
 801705e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017060:	2b00      	cmp	r3, #0
 8017062:	dc03      	bgt.n	801706c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017064:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017066:	2b00      	cmp	r3, #0
 8017068:	f340 8203 	ble.w	8017472 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801706c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801706e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017072:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017076:	1e48      	subs	r0, r1, #1
 8017078:	f102 3cff 	add.w	ip, r2, #4294967295
 801707c:	2d00      	cmp	r5, #0
 801707e:	f340 80da 	ble.w	8017236 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8017082:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8017086:	ea4f 4326 	mov.w	r3, r6, asr #16
 801708a:	d406      	bmi.n	801709a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801708c:	4586      	cmp	lr, r0
 801708e:	da04      	bge.n	801709a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017090:	2b00      	cmp	r3, #0
 8017092:	db02      	blt.n	801709a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017094:	4563      	cmp	r3, ip
 8017096:	f2c0 80cf 	blt.w	8017238 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801709a:	f11e 0e01 	adds.w	lr, lr, #1
 801709e:	f100 80c1 	bmi.w	8017224 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80170a2:	4571      	cmp	r1, lr
 80170a4:	f2c0 80be 	blt.w	8017224 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80170a8:	3301      	adds	r3, #1
 80170aa:	f100 80bb 	bmi.w	8017224 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80170ae:	429a      	cmp	r2, r3
 80170b0:	f2c0 80b8 	blt.w	8017224 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80170b4:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80170b8:	46a9      	mov	r9, r5
 80170ba:	f1b9 0f00 	cmp.w	r9, #0
 80170be:	f340 80d8 	ble.w	8017272 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80170c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80170c4:	1421      	asrs	r1, r4, #16
 80170c6:	ea4f 4026 	mov.w	r0, r6, asr #16
 80170ca:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80170ce:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80170d2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80170d6:	f100 8111 	bmi.w	80172fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80170da:	f10e 3aff 	add.w	sl, lr, #4294967295
 80170de:	4551      	cmp	r1, sl
 80170e0:	f280 810c 	bge.w	80172fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80170e4:	2800      	cmp	r0, #0
 80170e6:	f2c0 8109 	blt.w	80172fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80170ea:	f103 3aff 	add.w	sl, r3, #4294967295
 80170ee:	4550      	cmp	r0, sl
 80170f0:	f280 8104 	bge.w	80172fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80170f4:	fa0f f38e 	sxth.w	r3, lr
 80170f8:	fb00 1103 	mla	r1, r0, r3, r1
 80170fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80170fe:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8017102:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8017106:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801710a:	f1bc 0f00 	cmp.w	ip, #0
 801710e:	d007      	beq.n	8017120 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8017110:	005b      	lsls	r3, r3, #1
 8017112:	eb0a 0003 	add.w	r0, sl, r3
 8017116:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801711a:	930c      	str	r3, [sp, #48]	; 0x30
 801711c:	8843      	ldrh	r3, [r0, #2]
 801711e:	930d      	str	r3, [sp, #52]	; 0x34
 8017120:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8017124:	fb12 f30c 	smulbb	r3, r2, ip
 8017128:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801712c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017130:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017134:	10db      	asrs	r3, r3, #3
 8017136:	ea40 000e 	orr.w	r0, r0, lr
 801713a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801713e:	f1cc 0e10 	rsb	lr, ip, #16
 8017142:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017146:	ebae 0e02 	sub.w	lr, lr, r2
 801714a:	ea4a 0101 	orr.w	r1, sl, r1
 801714e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8017152:	4351      	muls	r1, r2
 8017154:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017156:	9f08      	ldr	r7, [sp, #32]
 8017158:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801715c:	fb0e 1e00 	mla	lr, lr, r0, r1
 8017160:	0410      	lsls	r0, r2, #16
 8017162:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017166:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801716a:	4310      	orrs	r0, r2
 801716c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801716e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017170:	0412      	lsls	r2, r2, #16
 8017172:	fb03 e000 	mla	r0, r3, r0, lr
 8017176:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801717a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801717e:	ea42 020e 	orr.w	r2, r2, lr
 8017182:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8017186:	fb03 0302 	mla	r3, r3, r2, r0
 801718a:	0d5a      	lsrs	r2, r3, #21
 801718c:	095b      	lsrs	r3, r3, #5
 801718e:	f8b8 0000 	ldrh.w	r0, [r8]
 8017192:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017196:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801719a:	4313      	orrs	r3, r2
 801719c:	b29b      	uxth	r3, r3
 801719e:	1201      	asrs	r1, r0, #8
 80171a0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80171a4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80171a8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80171ac:	fb11 f107 	smulbb	r1, r1, r7
 80171b0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80171b4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80171b8:	00c0      	lsls	r0, r0, #3
 80171ba:	fb0c 1c02 	mla	ip, ip, r2, r1
 80171be:	b2c0      	uxtb	r0, r0
 80171c0:	10d9      	asrs	r1, r3, #3
 80171c2:	00db      	lsls	r3, r3, #3
 80171c4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80171c8:	b2db      	uxtb	r3, r3
 80171ca:	fb10 f007 	smulbb	r0, r0, r7
 80171ce:	fa1f fc8c 	uxth.w	ip, ip
 80171d2:	fb03 0302 	mla	r3, r3, r2, r0
 80171d6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80171da:	fb1e fe07 	smulbb	lr, lr, r7
 80171de:	fb01 e102 	mla	r1, r1, r2, lr
 80171e2:	b29a      	uxth	r2, r3
 80171e4:	f10c 0301 	add.w	r3, ip, #1
 80171e8:	b289      	uxth	r1, r1
 80171ea:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80171ee:	1c53      	adds	r3, r2, #1
 80171f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80171f4:	1c4a      	adds	r2, r1, #1
 80171f6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80171fa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80171fe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017202:	0949      	lsrs	r1, r1, #5
 8017204:	ea43 030c 	orr.w	r3, r3, ip
 8017208:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801720c:	430b      	orrs	r3, r1
 801720e:	f8a8 3000 	strh.w	r3, [r8]
 8017212:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017214:	441c      	add	r4, r3
 8017216:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017218:	f108 0802 	add.w	r8, r8, #2
 801721c:	441e      	add	r6, r3
 801721e:	f109 39ff 	add.w	r9, r9, #4294967295
 8017222:	e74a      	b.n	80170ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8017224:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017226:	441c      	add	r4, r3
 8017228:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801722a:	441e      	add	r6, r3
 801722c:	9b07      	ldr	r3, [sp, #28]
 801722e:	3302      	adds	r3, #2
 8017230:	3d01      	subs	r5, #1
 8017232:	9307      	str	r3, [sp, #28]
 8017234:	e722      	b.n	801707c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017236:	d022      	beq.n	801727e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8017238:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801723a:	1e6b      	subs	r3, r5, #1
 801723c:	fb00 4003 	mla	r0, r0, r3, r4
 8017240:	1400      	asrs	r0, r0, #16
 8017242:	f53f af37 	bmi.w	80170b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017246:	3901      	subs	r1, #1
 8017248:	4288      	cmp	r0, r1
 801724a:	f6bf af33 	bge.w	80170b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801724e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017250:	fb01 6303 	mla	r3, r1, r3, r6
 8017254:	141b      	asrs	r3, r3, #16
 8017256:	f53f af2d 	bmi.w	80170b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801725a:	3a01      	subs	r2, #1
 801725c:	4293      	cmp	r3, r2
 801725e:	f6bf af29 	bge.w	80170b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017262:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8017266:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801726a:	46a8      	mov	r8, r5
 801726c:	f1b8 0f00 	cmp.w	r8, #0
 8017270:	dc5e      	bgt.n	8017330 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8017272:	9b07      	ldr	r3, [sp, #28]
 8017274:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8017278:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801727c:	9307      	str	r3, [sp, #28]
 801727e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017280:	2b00      	cmp	r3, #0
 8017282:	f340 80f6 	ble.w	8017472 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8017286:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801728a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801728e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017292:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017294:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017298:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801729c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80172a0:	eef0 6a48 	vmov.f32	s13, s16
 80172a4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80172a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80172ac:	ee37 8a48 	vsub.f32	s16, s14, s16
 80172b0:	ee16 4a90 	vmov	r4, s13
 80172b4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80172b8:	eef0 6a68 	vmov.f32	s13, s17
 80172bc:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80172c0:	ee18 2a10 	vmov	r2, s16
 80172c4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80172c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80172cc:	ee18 2a90 	vmov	r2, s17
 80172d0:	9327      	str	r3, [sp, #156]	; 0x9c
 80172d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80172d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80172d8:	9328      	str	r3, [sp, #160]	; 0xa0
 80172da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80172dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80172de:	3b01      	subs	r3, #1
 80172e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80172e4:	930a      	str	r3, [sp, #40]	; 0x28
 80172e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80172e8:	ee16 6a90 	vmov	r6, s13
 80172ec:	bf14      	ite	ne
 80172ee:	461d      	movne	r5, r3
 80172f0:	4615      	moveq	r5, r2
 80172f2:	eef0 8a67 	vmov.f32	s17, s15
 80172f6:	eeb0 8a47 	vmov.f32	s16, s14
 80172fa:	e6b0      	b.n	801705e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80172fc:	f111 0a01 	adds.w	sl, r1, #1
 8017300:	d487      	bmi.n	8017212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017302:	45d6      	cmp	lr, sl
 8017304:	db85      	blt.n	8017212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017306:	f110 0a01 	adds.w	sl, r0, #1
 801730a:	d482      	bmi.n	8017212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801730c:	4553      	cmp	r3, sl
 801730e:	db80      	blt.n	8017212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017310:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8017312:	9101      	str	r1, [sp, #4]
 8017314:	b21b      	sxth	r3, r3
 8017316:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801731a:	9300      	str	r3, [sp, #0]
 801731c:	e9cd c704 	strd	ip, r7, [sp, #16]
 8017320:	fa0f f38e 	sxth.w	r3, lr
 8017324:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017326:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017328:	4641      	mov	r1, r8
 801732a:	f7ff fd95 	bl	8016e58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801732e:	e770      	b.n	8017212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017330:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017332:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8017334:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017338:	1430      	asrs	r0, r6, #16
 801733a:	1423      	asrs	r3, r4, #16
 801733c:	fb01 3000 	mla	r0, r1, r0, r3
 8017340:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017342:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8017346:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801734a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801734e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017352:	8858      	ldrh	r0, [r3, #2]
 8017354:	f1be 0f00 	cmp.w	lr, #0
 8017358:	d00b      	beq.n	8017372 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801735a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801735e:	3901      	subs	r1, #1
 8017360:	0049      	lsls	r1, r1, #1
 8017362:	3102      	adds	r1, #2
 8017364:	eb03 0b01 	add.w	fp, r3, r1
 8017368:	5a5b      	ldrh	r3, [r3, r1]
 801736a:	930e      	str	r3, [sp, #56]	; 0x38
 801736c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8017370:	930f      	str	r3, [sp, #60]	; 0x3c
 8017372:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8017376:	fb12 f30e 	smulbb	r3, r2, lr
 801737a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801737e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017382:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8017386:	10db      	asrs	r3, r3, #3
 8017388:	ea41 010c 	orr.w	r1, r1, ip
 801738c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017390:	f1ce 0c10 	rsb	ip, lr, #16
 8017394:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017398:	ebac 0c02 	sub.w	ip, ip, r2
 801739c:	ea4b 0000 	orr.w	r0, fp, r0
 80173a0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80173a4:	4350      	muls	r0, r2
 80173a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80173a8:	9f08      	ldr	r7, [sp, #32]
 80173aa:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80173ae:	fb0c 0c01 	mla	ip, ip, r1, r0
 80173b2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80173b6:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80173ba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80173bc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80173be:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80173c2:	0412      	lsls	r2, r2, #16
 80173c4:	ea4b 0101 	orr.w	r1, fp, r1
 80173c8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80173cc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80173d0:	fb03 c101 	mla	r1, r3, r1, ip
 80173d4:	4302      	orrs	r2, r0
 80173d6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80173da:	fb03 1202 	mla	r2, r3, r2, r1
 80173de:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80173e2:	0952      	lsrs	r2, r2, #5
 80173e4:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80173e8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80173ec:	f8b9 2000 	ldrh.w	r2, [r9]
 80173f0:	ea4b 0303 	orr.w	r3, fp, r3
 80173f4:	b29b      	uxth	r3, r3
 80173f6:	1211      	asrs	r1, r2, #8
 80173f8:	1218      	asrs	r0, r3, #8
 80173fa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80173fe:	fb11 f107 	smulbb	r1, r1, r7
 8017402:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8017406:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801740a:	00d2      	lsls	r2, r2, #3
 801740c:	fb00 100a 	mla	r0, r0, sl, r1
 8017410:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017414:	10d9      	asrs	r1, r3, #3
 8017416:	b2d2      	uxtb	r2, r2
 8017418:	00db      	lsls	r3, r3, #3
 801741a:	fb1c fc07 	smulbb	ip, ip, r7
 801741e:	fb12 f207 	smulbb	r2, r2, r7
 8017422:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017426:	b2db      	uxtb	r3, r3
 8017428:	b280      	uxth	r0, r0
 801742a:	fb01 c10a 	mla	r1, r1, sl, ip
 801742e:	fb03 230a 	mla	r3, r3, sl, r2
 8017432:	b29b      	uxth	r3, r3
 8017434:	b289      	uxth	r1, r1
 8017436:	1c42      	adds	r2, r0, #1
 8017438:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801743c:	f101 0c01 	add.w	ip, r1, #1
 8017440:	1c5a      	adds	r2, r3, #1
 8017442:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8017446:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801744a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801744c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017450:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017454:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017458:	4310      	orrs	r0, r2
 801745a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801745e:	441c      	add	r4, r3
 8017460:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017462:	ea40 000c 	orr.w	r0, r0, ip
 8017466:	f829 0b02 	strh.w	r0, [r9], #2
 801746a:	441e      	add	r6, r3
 801746c:	f108 38ff 	add.w	r8, r8, #4294967295
 8017470:	e6fc      	b.n	801726c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8017472:	b013      	add	sp, #76	; 0x4c
 8017474:	ecbd 8b08 	vpop	{d8-d11}
 8017478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801747c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801747c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017480:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8017484:	fb06 5c03 	mla	ip, r6, r3, r5
 8017488:	2e00      	cmp	r6, #0
 801748a:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801748e:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8017492:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8017496:	8808      	ldrh	r0, [r1, #0]
 8017498:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801749c:	db2e      	blt.n	80174fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801749e:	45b0      	cmp	r8, r6
 80174a0:	dd2c      	ble.n	80174fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80174a2:	2d00      	cmp	r5, #0
 80174a4:	db28      	blt.n	80174f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80174a6:	42ab      	cmp	r3, r5
 80174a8:	dd26      	ble.n	80174f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80174aa:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80174ae:	1c6a      	adds	r2, r5, #1
 80174b0:	d427      	bmi.n	8017502 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80174b2:	4293      	cmp	r3, r2
 80174b4:	dd25      	ble.n	8017502 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80174b6:	b324      	cbz	r4, 8017502 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80174b8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80174bc:	3601      	adds	r6, #1
 80174be:	d424      	bmi.n	801750a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80174c0:	45b0      	cmp	r8, r6
 80174c2:	dd22      	ble.n	801750a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80174c4:	b31f      	cbz	r7, 801750e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80174c6:	2d00      	cmp	r5, #0
 80174c8:	db1d      	blt.n	8017506 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80174ca:	42ab      	cmp	r3, r5
 80174cc:	dd1b      	ble.n	8017506 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80174ce:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 80174d2:	3501      	adds	r5, #1
 80174d4:	d405      	bmi.n	80174e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80174d6:	42ab      	cmp	r3, r5
 80174d8:	dd03      	ble.n	80174e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80174da:	b124      	cbz	r4, 80174e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 80174dc:	3301      	adds	r3, #1
 80174de:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 80174e2:	2c0f      	cmp	r4, #15
 80174e4:	d801      	bhi.n	80174ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80174e6:	2f0f      	cmp	r7, #15
 80174e8:	d914      	bls.n	8017514 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 80174ea:	4b27      	ldr	r3, [pc, #156]	; (8017588 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 80174ec:	4a27      	ldr	r2, [pc, #156]	; (801758c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 80174ee:	4828      	ldr	r0, [pc, #160]	; (8017590 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 80174f0:	f240 11db 	movw	r1, #475	; 0x1db
 80174f4:	f002 fc96 	bl	8019e24 <__assert_func>
 80174f8:	4684      	mov	ip, r0
 80174fa:	e7d8      	b.n	80174ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 80174fc:	4602      	mov	r2, r0
 80174fe:	4684      	mov	ip, r0
 8017500:	e7dc      	b.n	80174bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8017502:	4602      	mov	r2, r0
 8017504:	e7da      	b.n	80174bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8017506:	4606      	mov	r6, r0
 8017508:	e7e3      	b.n	80174d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801750a:	4606      	mov	r6, r0
 801750c:	e7e9      	b.n	80174e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801750e:	2c0f      	cmp	r4, #15
 8017510:	d8eb      	bhi.n	80174ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8017512:	4606      	mov	r6, r0
 8017514:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8017518:	fb14 f307 	smulbb	r3, r4, r7
 801751c:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8017520:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8017524:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017528:	10db      	asrs	r3, r3, #3
 801752a:	ea45 0c0c 	orr.w	ip, r5, ip
 801752e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017532:	f1c7 0510 	rsb	r5, r7, #16
 8017536:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801753a:	1b2d      	subs	r5, r5, r4
 801753c:	ea4e 0202 	orr.w	r2, lr, r2
 8017540:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8017544:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8017548:	4354      	muls	r4, r2
 801754a:	fb05 450c 	mla	r5, r5, ip, r4
 801754e:	0404      	lsls	r4, r0, #16
 8017550:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017554:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017558:	4320      	orrs	r0, r4
 801755a:	fb03 5400 	mla	r4, r3, r0, r5
 801755e:	0430      	lsls	r0, r6, #16
 8017560:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017564:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8017568:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801756c:	4330      	orrs	r0, r6
 801756e:	fb07 4000 	mla	r0, r7, r0, r4
 8017572:	0d43      	lsrs	r3, r0, #21
 8017574:	0940      	lsrs	r0, r0, #5
 8017576:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801757a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801757e:	4318      	orrs	r0, r3
 8017580:	8008      	strh	r0, [r1, #0]
 8017582:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017586:	bf00      	nop
 8017588:	0801da2b 	.word	0x0801da2b
 801758c:	0801e003 	.word	0x0801e003
 8017590:	0801d9f8 	.word	0x0801d9f8

08017594 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017598:	ed2d 8b08 	vpush	{d8-d11}
 801759c:	b08f      	sub	sp, #60	; 0x3c
 801759e:	461d      	mov	r5, r3
 80175a0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80175a2:	920c      	str	r2, [sp, #48]	; 0x30
 80175a4:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 80175a8:	9107      	str	r1, [sp, #28]
 80175aa:	6859      	ldr	r1, [r3, #4]
 80175ac:	681b      	ldr	r3, [r3, #0]
 80175ae:	900d      	str	r0, [sp, #52]	; 0x34
 80175b0:	fb01 2707 	mla	r7, r1, r7, r2
 80175b4:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80175b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80175ba:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80175be:	f8d3 8000 	ldr.w	r8, [r3]
 80175c2:	eeb0 aa40 	vmov.f32	s20, s0
 80175c6:	eef0 9a60 	vmov.f32	s19, s1
 80175ca:	eeb0 9a41 	vmov.f32	s18, s2
 80175ce:	eeb0 8a62 	vmov.f32	s16, s5
 80175d2:	eef0 8a43 	vmov.f32	s17, s6
 80175d6:	eef0 ba44 	vmov.f32	s23, s8
 80175da:	eeb0 ba64 	vmov.f32	s22, s9
 80175de:	eef0 aa45 	vmov.f32	s21, s10
 80175e2:	9b07      	ldr	r3, [sp, #28]
 80175e4:	2b00      	cmp	r3, #0
 80175e6:	dc03      	bgt.n	80175f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80175e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80175ea:	2b00      	cmp	r3, #0
 80175ec:	f340 8181 	ble.w	80178f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80175f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80175f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80175f6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80175fa:	1e48      	subs	r0, r1, #1
 80175fc:	f102 3cff 	add.w	ip, r2, #4294967295
 8017600:	2d00      	cmp	r5, #0
 8017602:	f340 809b 	ble.w	801773c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8017606:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801760a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801760e:	d406      	bmi.n	801761e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017610:	4586      	cmp	lr, r0
 8017612:	da04      	bge.n	801761e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017614:	2b00      	cmp	r3, #0
 8017616:	db02      	blt.n	801761e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017618:	4563      	cmp	r3, ip
 801761a:	f2c0 8090 	blt.w	801773e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801761e:	f11e 0e01 	adds.w	lr, lr, #1
 8017622:	f100 8084 	bmi.w	801772e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017626:	4571      	cmp	r1, lr
 8017628:	f2c0 8081 	blt.w	801772e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801762c:	3301      	adds	r3, #1
 801762e:	d47e      	bmi.n	801772e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017630:	429a      	cmp	r2, r3
 8017632:	db7c      	blt.n	801772e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017634:	46aa      	mov	sl, r5
 8017636:	46b9      	mov	r9, r7
 8017638:	f1ba 0f00 	cmp.w	sl, #0
 801763c:	f340 8099 	ble.w	8017772 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8017640:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017642:	1421      	asrs	r1, r4, #16
 8017644:	ea4f 4026 	mov.w	r0, r6, asr #16
 8017648:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801764c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8017650:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8017654:	f100 80d0 	bmi.w	80177f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017658:	f10e 3bff 	add.w	fp, lr, #4294967295
 801765c:	4559      	cmp	r1, fp
 801765e:	f280 80cb 	bge.w	80177f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017662:	2800      	cmp	r0, #0
 8017664:	f2c0 80c8 	blt.w	80177f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017668:	f103 3bff 	add.w	fp, r3, #4294967295
 801766c:	4558      	cmp	r0, fp
 801766e:	f280 80c3 	bge.w	80177f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8017672:	fa0f fe8e 	sxth.w	lr, lr
 8017676:	fb00 110e 	mla	r1, r0, lr, r1
 801767a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801767e:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8017682:	8841      	ldrh	r1, [r0, #2]
 8017684:	f1bc 0f00 	cmp.w	ip, #0
 8017688:	d00b      	beq.n	80176a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801768a:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801768e:	3b01      	subs	r3, #1
 8017690:	005b      	lsls	r3, r3, #1
 8017692:	3302      	adds	r3, #2
 8017694:	eb00 0e03 	add.w	lr, r0, r3
 8017698:	5ac3      	ldrh	r3, [r0, r3]
 801769a:	9308      	str	r3, [sp, #32]
 801769c:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80176a0:	9309      	str	r3, [sp, #36]	; 0x24
 80176a2:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80176a6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80176aa:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80176ae:	ea40 000b 	orr.w	r0, r0, fp
 80176b2:	fb12 f30c 	smulbb	r3, r2, ip
 80176b6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80176ba:	10db      	asrs	r3, r3, #3
 80176bc:	f1cc 0e10 	rsb	lr, ip, #16
 80176c0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80176c4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80176c8:	ebae 0e02 	sub.w	lr, lr, r2
 80176cc:	ea4b 0101 	orr.w	r1, fp, r1
 80176d0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80176d4:	4351      	muls	r1, r2
 80176d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80176d8:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80176dc:	fb0e 1e00 	mla	lr, lr, r0, r1
 80176e0:	0410      	lsls	r0, r2, #16
 80176e2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80176e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80176ea:	4310      	orrs	r0, r2
 80176ec:	9a08      	ldr	r2, [sp, #32]
 80176ee:	9908      	ldr	r1, [sp, #32]
 80176f0:	0412      	lsls	r2, r2, #16
 80176f2:	fb03 e000 	mla	r0, r3, r0, lr
 80176f6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80176fa:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80176fe:	ea42 020e 	orr.w	r2, r2, lr
 8017702:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8017706:	fb03 0302 	mla	r3, r3, r2, r0
 801770a:	0d5a      	lsrs	r2, r3, #21
 801770c:	095b      	lsrs	r3, r3, #5
 801770e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017712:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017716:	4313      	orrs	r3, r2
 8017718:	f8a9 3000 	strh.w	r3, [r9]
 801771c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801771e:	441c      	add	r4, r3
 8017720:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017722:	f109 0902 	add.w	r9, r9, #2
 8017726:	441e      	add	r6, r3
 8017728:	f10a 3aff 	add.w	sl, sl, #4294967295
 801772c:	e784      	b.n	8017638 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801772e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017730:	441c      	add	r4, r3
 8017732:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017734:	3d01      	subs	r5, #1
 8017736:	441e      	add	r6, r3
 8017738:	3702      	adds	r7, #2
 801773a:	e761      	b.n	8017600 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801773c:	d01d      	beq.n	801777a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801773e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8017740:	1e6b      	subs	r3, r5, #1
 8017742:	fb00 4003 	mla	r0, r0, r3, r4
 8017746:	1400      	asrs	r0, r0, #16
 8017748:	f53f af74 	bmi.w	8017634 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801774c:	3901      	subs	r1, #1
 801774e:	4288      	cmp	r0, r1
 8017750:	f6bf af70 	bge.w	8017634 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017754:	9924      	ldr	r1, [sp, #144]	; 0x90
 8017756:	fb01 6303 	mla	r3, r1, r3, r6
 801775a:	141b      	asrs	r3, r3, #16
 801775c:	f53f af6a 	bmi.w	8017634 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017760:	3a01      	subs	r2, #1
 8017762:	4293      	cmp	r3, r2
 8017764:	f6bf af66 	bge.w	8017634 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017768:	46a9      	mov	r9, r5
 801776a:	46ba      	mov	sl, r7
 801776c:	f1b9 0f00 	cmp.w	r9, #0
 8017770:	dc5a      	bgt.n	8017828 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017772:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8017776:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801777a:	9b07      	ldr	r3, [sp, #28]
 801777c:	2b00      	cmp	r3, #0
 801777e:	f340 80b8 	ble.w	80178f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8017782:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017786:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801778a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801778e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017790:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017794:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017798:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801779c:	eef0 6a48 	vmov.f32	s13, s16
 80177a0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80177a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80177a8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80177ac:	ee16 4a90 	vmov	r4, s13
 80177b0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80177b4:	eef0 6a68 	vmov.f32	s13, s17
 80177b8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80177bc:	ee18 2a10 	vmov	r2, s16
 80177c0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80177c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80177c8:	ee18 2a90 	vmov	r2, s17
 80177cc:	9323      	str	r3, [sp, #140]	; 0x8c
 80177ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80177d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80177d4:	9324      	str	r3, [sp, #144]	; 0x90
 80177d6:	9b07      	ldr	r3, [sp, #28]
 80177d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80177da:	3b01      	subs	r3, #1
 80177dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80177e0:	9307      	str	r3, [sp, #28]
 80177e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80177e4:	ee16 6a90 	vmov	r6, s13
 80177e8:	bf14      	ite	ne
 80177ea:	461d      	movne	r5, r3
 80177ec:	4615      	moveq	r5, r2
 80177ee:	eef0 8a67 	vmov.f32	s17, s15
 80177f2:	eeb0 8a47 	vmov.f32	s16, s14
 80177f6:	e6f4      	b.n	80175e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80177f8:	f111 0b01 	adds.w	fp, r1, #1
 80177fc:	d48e      	bmi.n	801771c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80177fe:	45de      	cmp	lr, fp
 8017800:	db8c      	blt.n	801771c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017802:	f110 0b01 	adds.w	fp, r0, #1
 8017806:	d489      	bmi.n	801771c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017808:	455b      	cmp	r3, fp
 801780a:	db87      	blt.n	801771c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801780c:	b21b      	sxth	r3, r3
 801780e:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8017812:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8017816:	9300      	str	r3, [sp, #0]
 8017818:	4642      	mov	r2, r8
 801781a:	fa0f f38e 	sxth.w	r3, lr
 801781e:	4649      	mov	r1, r9
 8017820:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017822:	f7ff fe2b 	bl	801747c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8017826:	e779      	b.n	801771c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017828:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801782a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801782e:	1420      	asrs	r0, r4, #16
 8017830:	1431      	asrs	r1, r6, #16
 8017832:	fb03 0101 	mla	r1, r3, r1, r0
 8017836:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801783a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801783e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8017842:	8841      	ldrh	r1, [r0, #2]
 8017844:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017848:	f1be 0f00 	cmp.w	lr, #0
 801784c:	d00b      	beq.n	8017866 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801784e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8017852:	3b01      	subs	r3, #1
 8017854:	005b      	lsls	r3, r3, #1
 8017856:	3302      	adds	r3, #2
 8017858:	eb00 0b03 	add.w	fp, r0, r3
 801785c:	5ac3      	ldrh	r3, [r0, r3]
 801785e:	930a      	str	r3, [sp, #40]	; 0x28
 8017860:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8017864:	930b      	str	r3, [sp, #44]	; 0x2c
 8017866:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801786a:	fb12 f30e 	smulbb	r3, r2, lr
 801786e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017872:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017876:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801787a:	10db      	asrs	r3, r3, #3
 801787c:	ea40 000c 	orr.w	r0, r0, ip
 8017880:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017884:	f1ce 0c10 	rsb	ip, lr, #16
 8017888:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801788c:	ebac 0c02 	sub.w	ip, ip, r2
 8017890:	ea4b 0101 	orr.w	r1, fp, r1
 8017894:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8017898:	4351      	muls	r1, r2
 801789a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801789c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80178a0:	fb0c 1c00 	mla	ip, ip, r0, r1
 80178a4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80178a8:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80178ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80178ae:	990a      	ldr	r1, [sp, #40]	; 0x28
 80178b0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80178b4:	0412      	lsls	r2, r2, #16
 80178b6:	ea4b 0000 	orr.w	r0, fp, r0
 80178ba:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80178be:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80178c2:	fb03 c000 	mla	r0, r3, r0, ip
 80178c6:	ea42 0b0b 	orr.w	fp, r2, fp
 80178ca:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80178ce:	fb03 000b 	mla	r0, r3, fp, r0
 80178d2:	0d43      	lsrs	r3, r0, #21
 80178d4:	0940      	lsrs	r0, r0, #5
 80178d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80178da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80178de:	4318      	orrs	r0, r3
 80178e0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80178e2:	f82a 0b02 	strh.w	r0, [sl], #2
 80178e6:	441c      	add	r4, r3
 80178e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80178ea:	f109 39ff 	add.w	r9, r9, #4294967295
 80178ee:	441e      	add	r6, r3
 80178f0:	e73c      	b.n	801776c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80178f2:	b00f      	add	sp, #60	; 0x3c
 80178f4:	ecbd 8b08 	vpop	{d8-d11}
 80178f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080178fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80178fc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017900:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8017904:	fb04 5603 	mla	r6, r4, r3, r5
 8017908:	2c00      	cmp	r4, #0
 801790a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801790e:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8017912:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8017916:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801791a:	db36      	blt.n	801798a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 801791c:	45a6      	cmp	lr, r4
 801791e:	dd34      	ble.n	801798a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8017920:	2d00      	cmp	r5, #0
 8017922:	db30      	blt.n	8017986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8017924:	42ab      	cmp	r3, r5
 8017926:	dd2e      	ble.n	8017986 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8017928:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801792c:	1c6e      	adds	r6, r5, #1
 801792e:	d42f      	bmi.n	8017990 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8017930:	42b3      	cmp	r3, r6
 8017932:	dd2d      	ble.n	8017990 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8017934:	b370      	cbz	r0, 8017994 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8017936:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801793a:	3401      	adds	r4, #1
 801793c:	d42e      	bmi.n	801799c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 801793e:	45a6      	cmp	lr, r4
 8017940:	dd2c      	ble.n	801799c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8017942:	b377      	cbz	r7, 80179a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 8017944:	2d00      	cmp	r5, #0
 8017946:	db27      	blt.n	8017998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8017948:	42ab      	cmp	r3, r5
 801794a:	dd25      	ble.n	8017998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801794c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8017950:	3501      	adds	r5, #1
 8017952:	d429      	bmi.n	80179a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8017954:	42ab      	cmp	r3, r5
 8017956:	dd27      	ble.n	80179a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8017958:	b340      	cbz	r0, 80179ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 801795a:	3301      	adds	r3, #1
 801795c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8017960:	280f      	cmp	r0, #15
 8017962:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017966:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801796a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801796e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8017972:	d801      	bhi.n	8017978 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 8017974:	2f0f      	cmp	r7, #15
 8017976:	d91b      	bls.n	80179b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8017978:	4b8d      	ldr	r3, [pc, #564]	; (8017bb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801797a:	4a8e      	ldr	r2, [pc, #568]	; (8017bb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801797c:	488e      	ldr	r0, [pc, #568]	; (8017bb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801797e:	f240 11f9 	movw	r1, #505	; 0x1f9
 8017982:	f002 fa4f 	bl	8019e24 <__assert_func>
 8017986:	2200      	movs	r2, #0
 8017988:	e7d0      	b.n	801792c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 801798a:	2600      	movs	r6, #0
 801798c:	4632      	mov	r2, r6
 801798e:	e7d4      	b.n	801793a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8017990:	2600      	movs	r6, #0
 8017992:	e7d2      	b.n	801793a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8017994:	4606      	mov	r6, r0
 8017996:	e7d0      	b.n	801793a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8017998:	2400      	movs	r4, #0
 801799a:	e7d9      	b.n	8017950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 801799c:	2300      	movs	r3, #0
 801799e:	461c      	mov	r4, r3
 80179a0:	e7de      	b.n	8017960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80179a2:	463b      	mov	r3, r7
 80179a4:	463c      	mov	r4, r7
 80179a6:	e7db      	b.n	8017960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80179a8:	2300      	movs	r3, #0
 80179aa:	e7d9      	b.n	8017960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80179ac:	4603      	mov	r3, r0
 80179ae:	e7d7      	b.n	8017960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80179b0:	b280      	uxth	r0, r0
 80179b2:	b2bf      	uxth	r7, r7
 80179b4:	fb07 fe00 	mul.w	lr, r7, r0
 80179b8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80179bc:	0100      	lsls	r0, r0, #4
 80179be:	eba0 0c0e 	sub.w	ip, r0, lr
 80179c2:	b2bf      	uxth	r7, r7
 80179c4:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80179c8:	fa1f fc8c 	uxth.w	ip, ip
 80179cc:	1bed      	subs	r5, r5, r7
 80179ce:	b2ad      	uxth	r5, r5
 80179d0:	fb0a f00c 	mul.w	r0, sl, ip
 80179d4:	fb0b 0005 	mla	r0, fp, r5, r0
 80179d8:	fb07 0009 	mla	r0, r7, r9, r0
 80179dc:	fb0e 0008 	mla	r0, lr, r8, r0
 80179e0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80179e4:	9001      	str	r0, [sp, #4]
 80179e6:	2800      	cmp	r0, #0
 80179e8:	f000 80de 	beq.w	8017ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 80179ec:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80179f0:	d018      	beq.n	8017a24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 80179f2:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80179f6:	fb0b f000 	mul.w	r0, fp, r0
 80179fa:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80179fe:	fb0b fb02 	mul.w	fp, fp, r2
 8017a02:	0a02      	lsrs	r2, r0, #8
 8017a04:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017a08:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8017a0c:	4402      	add	r2, r0
 8017a0e:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8017a12:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017a16:	0a12      	lsrs	r2, r2, #8
 8017a18:	0a00      	lsrs	r0, r0, #8
 8017a1a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017a1e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017a22:	4302      	orrs	r2, r0
 8017a24:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017a28:	d01a      	beq.n	8017a60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 8017a2a:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8017a2e:	fb0a f000 	mul.w	r0, sl, r0
 8017a32:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017a36:	fb0a fa06 	mul.w	sl, sl, r6
 8017a3a:	0a06      	lsrs	r6, r0, #8
 8017a3c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017a40:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8017a44:	4406      	add	r6, r0
 8017a46:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8017a4a:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8017a4e:	0a36      	lsrs	r6, r6, #8
 8017a50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017a54:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017a58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017a5c:	ea46 060a 	orr.w	r6, r6, sl
 8017a60:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017a64:	d01b      	beq.n	8017a9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 8017a66:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017a6a:	fb09 fa0a 	mul.w	sl, r9, sl
 8017a6e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017a72:	fb09 f004 	mul.w	r0, r9, r4
 8017a76:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017a7a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017a7e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017a82:	f500 7980 	add.w	r9, r0, #256	; 0x100
 8017a86:	4454      	add	r4, sl
 8017a88:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8017a8c:	0a24      	lsrs	r4, r4, #8
 8017a8e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017a92:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017a96:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017a9a:	ea44 0409 	orr.w	r4, r4, r9
 8017a9e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017aa2:	d01b      	beq.n	8017adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 8017aa4:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8017aa8:	fb08 f909 	mul.w	r9, r8, r9
 8017aac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017ab0:	fb08 f003 	mul.w	r0, r8, r3
 8017ab4:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8017ab8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017abc:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017ac0:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8017ac4:	444b      	add	r3, r9
 8017ac6:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8017aca:	0a1b      	lsrs	r3, r3, #8
 8017acc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017ad0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017ad4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017ad8:	ea43 0308 	orr.w	r3, r3, r8
 8017adc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017ae0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017ae4:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8017ae8:	fb0c f808 	mul.w	r8, ip, r8
 8017aec:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017af0:	fb0c f606 	mul.w	r6, ip, r6
 8017af4:	fb05 8909 	mla	r9, r5, r9, r8
 8017af8:	fb05 6502 	mla	r5, r5, r2, r6
 8017afc:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8017b00:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8017b04:	9a01      	ldr	r2, [sp, #4]
 8017b06:	8808      	ldrh	r0, [r1, #0]
 8017b08:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017b0c:	fb07 9908 	mla	r9, r7, r8, r9
 8017b10:	fb07 5704 	mla	r7, r7, r4, r5
 8017b14:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8017b18:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017b1c:	b2b6      	uxth	r6, r6
 8017b1e:	fb0e 9808 	mla	r8, lr, r8, r9
 8017b22:	fb0e 7e03 	mla	lr, lr, r3, r7
 8017b26:	4372      	muls	r2, r6
 8017b28:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017b2c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017b30:	1c53      	adds	r3, r2, #1
 8017b32:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8017b36:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017b3a:	ea48 0e0e 	orr.w	lr, r8, lr
 8017b3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017b42:	1205      	asrs	r5, r0, #8
 8017b44:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8017b48:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8017b4c:	b2db      	uxtb	r3, r3
 8017b4e:	fb12 f206 	smulbb	r2, r2, r6
 8017b52:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017b56:	fb05 2503 	mla	r5, r5, r3, r2
 8017b5a:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8017b5e:	10c2      	asrs	r2, r0, #3
 8017b60:	fa5f fe8e 	uxtb.w	lr, lr
 8017b64:	00c0      	lsls	r0, r0, #3
 8017b66:	fb14 f406 	smulbb	r4, r4, r6
 8017b6a:	b2c0      	uxtb	r0, r0
 8017b6c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017b70:	fb1e fe06 	smulbb	lr, lr, r6
 8017b74:	fb02 4203 	mla	r2, r2, r3, r4
 8017b78:	b2ad      	uxth	r5, r5
 8017b7a:	fb00 e303 	mla	r3, r0, r3, lr
 8017b7e:	b298      	uxth	r0, r3
 8017b80:	b294      	uxth	r4, r2
 8017b82:	1c6b      	adds	r3, r5, #1
 8017b84:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017b88:	1c62      	adds	r2, r4, #1
 8017b8a:	1c43      	adds	r3, r0, #1
 8017b8c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017b90:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017b94:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017b98:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017b9c:	0952      	lsrs	r2, r2, #5
 8017b9e:	432b      	orrs	r3, r5
 8017ba0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017ba4:	4313      	orrs	r3, r2
 8017ba6:	800b      	strh	r3, [r1, #0]
 8017ba8:	b003      	add	sp, #12
 8017baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017bae:	bf00      	nop
 8017bb0:	0801da2b 	.word	0x0801da2b
 8017bb4:	0801df5a 	.word	0x0801df5a
 8017bb8:	0801d9f8 	.word	0x0801d9f8

08017bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bc0:	ed2d 8b08 	vpush	{d8-d11}
 8017bc4:	b09d      	sub	sp, #116	; 0x74
 8017bc6:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 8017bca:	9219      	str	r2, [sp, #100]	; 0x64
 8017bcc:	9307      	str	r3, [sp, #28]
 8017bce:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8017bd0:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8017bd4:	931a      	str	r3, [sp, #104]	; 0x68
 8017bd6:	9117      	str	r1, [sp, #92]	; 0x5c
 8017bd8:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8017bdc:	901b      	str	r0, [sp, #108]	; 0x6c
 8017bde:	6850      	ldr	r0, [r2, #4]
 8017be0:	6812      	ldr	r2, [r2, #0]
 8017be2:	fb00 1303 	mla	r3, r0, r3, r1
 8017be6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017bea:	930a      	str	r3, [sp, #40]	; 0x28
 8017bec:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8017bee:	681b      	ldr	r3, [r3, #0]
 8017bf0:	9310      	str	r3, [sp, #64]	; 0x40
 8017bf2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8017bf6:	930b      	str	r3, [sp, #44]	; 0x2c
 8017bf8:	eeb0 aa40 	vmov.f32	s20, s0
 8017bfc:	eef0 9a60 	vmov.f32	s19, s1
 8017c00:	eeb0 9a41 	vmov.f32	s18, s2
 8017c04:	eeb0 8a62 	vmov.f32	s16, s5
 8017c08:	eef0 8a43 	vmov.f32	s17, s6
 8017c0c:	eef0 ba44 	vmov.f32	s23, s8
 8017c10:	eeb0 ba64 	vmov.f32	s22, s9
 8017c14:	eef0 aa45 	vmov.f32	s21, s10
 8017c18:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017c1a:	2b00      	cmp	r3, #0
 8017c1c:	dc03      	bgt.n	8017c26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8017c1e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017c20:	2b00      	cmp	r3, #0
 8017c22:	f340 8375 	ble.w	8018310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8017c26:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8017c28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017c2c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017c30:	1e48      	subs	r0, r1, #1
 8017c32:	1e57      	subs	r7, r2, #1
 8017c34:	9b07      	ldr	r3, [sp, #28]
 8017c36:	2b00      	cmp	r3, #0
 8017c38:	f340 818e 	ble.w	8017f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8017c3c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017c40:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017c44:	d406      	bmi.n	8017c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017c46:	4584      	cmp	ip, r0
 8017c48:	da04      	bge.n	8017c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017c4a:	2b00      	cmp	r3, #0
 8017c4c:	db02      	blt.n	8017c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017c4e:	42bb      	cmp	r3, r7
 8017c50:	f2c0 8183 	blt.w	8017f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8017c54:	f11c 0c01 	adds.w	ip, ip, #1
 8017c58:	f100 8173 	bmi.w	8017f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017c5c:	4561      	cmp	r1, ip
 8017c5e:	f2c0 8170 	blt.w	8017f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017c62:	3301      	adds	r3, #1
 8017c64:	f100 816d 	bmi.w	8017f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017c68:	429a      	cmp	r2, r3
 8017c6a:	f2c0 816a 	blt.w	8017f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8017c6e:	9b07      	ldr	r3, [sp, #28]
 8017c70:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017c72:	9318      	str	r3, [sp, #96]	; 0x60
 8017c74:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017c76:	2b00      	cmp	r3, #0
 8017c78:	f340 818c 	ble.w	8017f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8017c7c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8017c7e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8017c80:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8017c84:	689b      	ldr	r3, [r3, #8]
 8017c86:	1422      	asrs	r2, r4, #16
 8017c88:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8017c8c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8017c90:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8017c94:	f100 81cd 	bmi.w	8018032 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8017c98:	f103 38ff 	add.w	r8, r3, #4294967295
 8017c9c:	4542      	cmp	r2, r8
 8017c9e:	f280 81c8 	bge.w	8018032 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8017ca2:	f1bc 0f00 	cmp.w	ip, #0
 8017ca6:	f2c0 81c4 	blt.w	8018032 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8017caa:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017cae:	45c4      	cmp	ip, r8
 8017cb0:	f280 81bf 	bge.w	8018032 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8017cb4:	b21b      	sxth	r3, r3
 8017cb6:	fb0c 2203 	mla	r2, ip, r3, r2
 8017cba:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017cbc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8017cc0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8017cc4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8017cc8:	2800      	cmp	r0, #0
 8017cca:	f000 81a9 	beq.w	8018020 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8017cce:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017cd2:	950c      	str	r5, [sp, #48]	; 0x30
 8017cd4:	0e2d      	lsrs	r5, r5, #24
 8017cd6:	9513      	str	r5, [sp, #76]	; 0x4c
 8017cd8:	b181      	cbz	r1, 8017cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8017cda:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8017cde:	3b01      	subs	r3, #1
 8017ce0:	009b      	lsls	r3, r3, #2
 8017ce2:	3304      	adds	r3, #4
 8017ce4:	eb08 0c03 	add.w	ip, r8, r3
 8017ce8:	f858 3003 	ldr.w	r3, [r8, r3]
 8017cec:	9308      	str	r3, [sp, #32]
 8017cee:	0e1b      	lsrs	r3, r3, #24
 8017cf0:	9311      	str	r3, [sp, #68]	; 0x44
 8017cf2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8017cf6:	930d      	str	r3, [sp, #52]	; 0x34
 8017cf8:	0e1b      	lsrs	r3, r3, #24
 8017cfa:	9314      	str	r3, [sp, #80]	; 0x50
 8017cfc:	b280      	uxth	r0, r0
 8017cfe:	b289      	uxth	r1, r1
 8017d00:	fb00 f901 	mul.w	r9, r0, r1
 8017d04:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017d08:	0100      	lsls	r0, r0, #4
 8017d0a:	eba0 0809 	sub.w	r8, r0, r9
 8017d0e:	b289      	uxth	r1, r1
 8017d10:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017d14:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017d16:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017d18:	fa1f f888 	uxth.w	r8, r8
 8017d1c:	1a5b      	subs	r3, r3, r1
 8017d1e:	b29b      	uxth	r3, r3
 8017d20:	fb08 f000 	mul.w	r0, r8, r0
 8017d24:	fb03 000e 	mla	r0, r3, lr, r0
 8017d28:	fb01 0005 	mla	r0, r1, r5, r0
 8017d2c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017d2e:	fb09 0005 	mla	r0, r9, r5, r0
 8017d32:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017d36:	2800      	cmp	r0, #0
 8017d38:	f000 80fa 	beq.w	8017f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8017d3c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017d40:	d01b      	beq.n	8017d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8017d42:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8017d46:	fb0e fa0a 	mul.w	sl, lr, sl
 8017d4a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017d4e:	fb0e fe02 	mul.w	lr, lr, r2
 8017d52:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8017d56:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017d5a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017d5e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8017d62:	4452      	add	r2, sl
 8017d64:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017d68:	0a12      	lsrs	r2, r2, #8
 8017d6a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017d6e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017d72:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017d76:	ea42 020c 	orr.w	r2, r2, ip
 8017d7a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017d7c:	2dff      	cmp	r5, #255	; 0xff
 8017d7e:	d021      	beq.n	8017dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8017d80:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017d82:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017d86:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017d88:	fb05 fb0b 	mul.w	fp, r5, fp
 8017d8c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017d8e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8017d92:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017d94:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017d98:	fb05 fa0a 	mul.w	sl, r5, sl
 8017d9c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017da0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017da4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017da8:	44de      	add	lr, fp
 8017daa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017dae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017db2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017db6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017dba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017dbe:	ea4e 050a 	orr.w	r5, lr, sl
 8017dc2:	950c      	str	r5, [sp, #48]	; 0x30
 8017dc4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017dc6:	2dff      	cmp	r5, #255	; 0xff
 8017dc8:	d021      	beq.n	8017e0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8017dca:	9d08      	ldr	r5, [sp, #32]
 8017dcc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017dd0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017dd2:	fb05 fb0b 	mul.w	fp, r5, fp
 8017dd6:	9d08      	ldr	r5, [sp, #32]
 8017dd8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8017ddc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017dde:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017de2:	fb05 fa0a 	mul.w	sl, r5, sl
 8017de6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017dea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017dee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017df2:	44de      	add	lr, fp
 8017df4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017df8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017dfc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e08:	ea4e 050a 	orr.w	r5, lr, sl
 8017e0c:	9508      	str	r5, [sp, #32]
 8017e0e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017e10:	2dff      	cmp	r5, #255	; 0xff
 8017e12:	d021      	beq.n	8017e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8017e14:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017e16:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017e1a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017e1c:	fb05 fb0b 	mul.w	fp, r5, fp
 8017e20:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017e22:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8017e26:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017e28:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017e2c:	fb05 fa0a 	mul.w	sl, r5, sl
 8017e30:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e34:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017e38:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017e3c:	44de      	add	lr, fp
 8017e3e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017e42:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e46:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e4e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e52:	ea4e 050a 	orr.w	r5, lr, sl
 8017e56:	950d      	str	r5, [sp, #52]	; 0x34
 8017e58:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017e5a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8017e5e:	9d08      	ldr	r5, [sp, #32]
 8017e60:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8017e64:	fb08 fc0c 	mul.w	ip, r8, ip
 8017e68:	fb03 cc0e 	mla	ip, r3, lr, ip
 8017e6c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8017e70:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017e72:	fb01 cc0e 	mla	ip, r1, lr, ip
 8017e76:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8017e7a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017e7c:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017e80:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8017e84:	fb08 f80e 	mul.w	r8, r8, lr
 8017e88:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017e8c:	fb03 8202 	mla	r2, r3, r2, r8
 8017e90:	9b08      	ldr	r3, [sp, #32]
 8017e92:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8017e94:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8017e98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017e9a:	fb01 220a 	mla	r2, r1, sl, r2
 8017e9e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8017ea2:	fb09 2901 	mla	r9, r9, r1, r2
 8017ea6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017ea8:	883b      	ldrh	r3, [r7, #0]
 8017eaa:	4342      	muls	r2, r0
 8017eac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017eb0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017eb4:	1c50      	adds	r0, r2, #1
 8017eb6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017eba:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017ebe:	ea4c 0c09 	orr.w	ip, ip, r9
 8017ec2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017ec6:	1219      	asrs	r1, r3, #8
 8017ec8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8017ecc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8017ed0:	b2c0      	uxtb	r0, r0
 8017ed2:	fb12 f205 	smulbb	r2, r2, r5
 8017ed6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017eda:	fb01 2100 	mla	r1, r1, r0, r2
 8017ede:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8017ee2:	10da      	asrs	r2, r3, #3
 8017ee4:	fa5f fc8c 	uxtb.w	ip, ip
 8017ee8:	00db      	lsls	r3, r3, #3
 8017eea:	fb1c fc05 	smulbb	ip, ip, r5
 8017eee:	b2db      	uxtb	r3, r3
 8017ef0:	b289      	uxth	r1, r1
 8017ef2:	fb03 c300 	mla	r3, r3, r0, ip
 8017ef6:	fa1f fc83 	uxth.w	ip, r3
 8017efa:	1c4b      	adds	r3, r1, #1
 8017efc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017f00:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017f04:	fb1e fe05 	smulbb	lr, lr, r5
 8017f08:	f10c 0301 	add.w	r3, ip, #1
 8017f0c:	fb02 e200 	mla	r2, r2, r0, lr
 8017f10:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017f14:	b292      	uxth	r2, r2
 8017f16:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8017f1a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017f1e:	430b      	orrs	r3, r1
 8017f20:	1c51      	adds	r1, r2, #1
 8017f22:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017f26:	0952      	lsrs	r2, r2, #5
 8017f28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f2c:	4313      	orrs	r3, r2
 8017f2e:	803b      	strh	r3, [r7, #0]
 8017f30:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017f32:	441c      	add	r4, r3
 8017f34:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017f36:	441e      	add	r6, r3
 8017f38:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017f3a:	3b01      	subs	r3, #1
 8017f3c:	3702      	adds	r7, #2
 8017f3e:	9318      	str	r3, [sp, #96]	; 0x60
 8017f40:	e698      	b.n	8017c74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8017f42:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017f44:	441c      	add	r4, r3
 8017f46:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017f48:	441e      	add	r6, r3
 8017f4a:	9b07      	ldr	r3, [sp, #28]
 8017f4c:	3b01      	subs	r3, #1
 8017f4e:	9307      	str	r3, [sp, #28]
 8017f50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f52:	3302      	adds	r3, #2
 8017f54:	930a      	str	r3, [sp, #40]	; 0x28
 8017f56:	e66d      	b.n	8017c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017f58:	d023      	beq.n	8017fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8017f5a:	9b07      	ldr	r3, [sp, #28]
 8017f5c:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8017f5e:	3b01      	subs	r3, #1
 8017f60:	fb00 4003 	mla	r0, r0, r3, r4
 8017f64:	1400      	asrs	r0, r0, #16
 8017f66:	f53f ae82 	bmi.w	8017c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017f6a:	3901      	subs	r1, #1
 8017f6c:	4288      	cmp	r0, r1
 8017f6e:	f6bf ae7e 	bge.w	8017c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017f72:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8017f74:	fb01 6303 	mla	r3, r1, r3, r6
 8017f78:	141b      	asrs	r3, r3, #16
 8017f7a:	f53f ae78 	bmi.w	8017c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017f7e:	3a01      	subs	r2, #1
 8017f80:	4293      	cmp	r3, r2
 8017f82:	f6bf ae74 	bge.w	8017c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017f86:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017f8a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8017f8e:	f1bb 0f00 	cmp.w	fp, #0
 8017f92:	dc6c      	bgt.n	801806e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8017f94:	9b07      	ldr	r3, [sp, #28]
 8017f96:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017f9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f9c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8017fa0:	930a      	str	r3, [sp, #40]	; 0x28
 8017fa2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017fa4:	2b00      	cmp	r3, #0
 8017fa6:	f340 81b3 	ble.w	8018310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8017faa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017fae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017fb2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017fb6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017fb8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017fbc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017fc0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017fc4:	eef0 6a48 	vmov.f32	s13, s16
 8017fc8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017fcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017fd0:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017fd4:	ee16 4a90 	vmov	r4, s13
 8017fd8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017fdc:	eef0 6a68 	vmov.f32	s13, s17
 8017fe0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017fe4:	ee18 2a10 	vmov	r2, s16
 8017fe8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017fec:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ff0:	ee18 2a90 	vmov	r2, s17
 8017ff4:	9331      	str	r3, [sp, #196]	; 0xc4
 8017ff6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017ff8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017ffc:	9332      	str	r3, [sp, #200]	; 0xc8
 8017ffe:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018000:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8018002:	3b01      	subs	r3, #1
 8018004:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018008:	9317      	str	r3, [sp, #92]	; 0x5c
 801800a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801800c:	bf08      	it	eq
 801800e:	4613      	moveq	r3, r2
 8018010:	ee16 6a90 	vmov	r6, s13
 8018014:	9307      	str	r3, [sp, #28]
 8018016:	eef0 8a67 	vmov.f32	s17, s15
 801801a:	eeb0 8a47 	vmov.f32	s16, s14
 801801e:	e5fb      	b.n	8017c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018020:	2900      	cmp	r1, #0
 8018022:	f43f ae6b 	beq.w	8017cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8018026:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801802a:	9308      	str	r3, [sp, #32]
 801802c:	0e1b      	lsrs	r3, r3, #24
 801802e:	9311      	str	r3, [sp, #68]	; 0x44
 8018030:	e664      	b.n	8017cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8018032:	f112 0801 	adds.w	r8, r2, #1
 8018036:	f53f af7b 	bmi.w	8017f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801803a:	4543      	cmp	r3, r8
 801803c:	f6ff af78 	blt.w	8017f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018040:	f11c 0801 	adds.w	r8, ip, #1
 8018044:	f53f af74 	bmi.w	8017f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018048:	45c6      	cmp	lr, r8
 801804a:	f6ff af71 	blt.w	8017f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801804e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8018050:	9201      	str	r2, [sp, #4]
 8018052:	fa0f f28e 	sxth.w	r2, lr
 8018056:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801805a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801805e:	9200      	str	r2, [sp, #0]
 8018060:	b21b      	sxth	r3, r3
 8018062:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018064:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8018066:	4639      	mov	r1, r7
 8018068:	f7ff fc48 	bl	80178fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801806c:	e760      	b.n	8017f30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801806e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8018070:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018072:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018076:	1427      	asrs	r7, r4, #16
 8018078:	1433      	asrs	r3, r6, #16
 801807a:	fb01 7303 	mla	r3, r1, r3, r7
 801807e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8018082:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8018086:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801808a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801808e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018092:	2a00      	cmp	r2, #0
 8018094:	f000 8133 	beq.w	80182fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8018098:	687d      	ldr	r5, [r7, #4]
 801809a:	950e      	str	r5, [sp, #56]	; 0x38
 801809c:	0e2d      	lsrs	r5, r5, #24
 801809e:	9515      	str	r5, [sp, #84]	; 0x54
 80180a0:	b178      	cbz	r0, 80180c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80180a2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80180a6:	3901      	subs	r1, #1
 80180a8:	0089      	lsls	r1, r1, #2
 80180aa:	3104      	adds	r1, #4
 80180ac:	eb07 0e01 	add.w	lr, r7, r1
 80180b0:	5879      	ldr	r1, [r7, r1]
 80180b2:	9109      	str	r1, [sp, #36]	; 0x24
 80180b4:	0e09      	lsrs	r1, r1, #24
 80180b6:	9112      	str	r1, [sp, #72]	; 0x48
 80180b8:	f8de 1004 	ldr.w	r1, [lr, #4]
 80180bc:	910f      	str	r1, [sp, #60]	; 0x3c
 80180be:	0e09      	lsrs	r1, r1, #24
 80180c0:	9116      	str	r1, [sp, #88]	; 0x58
 80180c2:	b292      	uxth	r2, r2
 80180c4:	b280      	uxth	r0, r0
 80180c6:	fb02 f800 	mul.w	r8, r2, r0
 80180ca:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80180ce:	0112      	lsls	r2, r2, #4
 80180d0:	eba2 0e08 	sub.w	lr, r2, r8
 80180d4:	b280      	uxth	r0, r0
 80180d6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80180da:	9915      	ldr	r1, [sp, #84]	; 0x54
 80180dc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80180de:	fa1f fe8e 	uxth.w	lr, lr
 80180e2:	1a12      	subs	r2, r2, r0
 80180e4:	b292      	uxth	r2, r2
 80180e6:	fb0e f101 	mul.w	r1, lr, r1
 80180ea:	fb02 110c 	mla	r1, r2, ip, r1
 80180ee:	fb00 1105 	mla	r1, r0, r5, r1
 80180f2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80180f4:	fb08 1105 	mla	r1, r8, r5, r1
 80180f8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80180fc:	2900      	cmp	r1, #0
 80180fe:	f000 80f5 	beq.w	80182ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8018102:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018106:	d019      	beq.n	801813c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8018108:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801810c:	fb0c fa0a 	mul.w	sl, ip, sl
 8018110:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018114:	fb0c fc03 	mul.w	ip, ip, r3
 8018118:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801811c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018120:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018124:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018128:	4453      	add	r3, sl
 801812a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801812e:	0a1b      	lsrs	r3, r3, #8
 8018130:	0a3f      	lsrs	r7, r7, #8
 8018132:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018136:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801813a:	433b      	orrs	r3, r7
 801813c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801813e:	2dff      	cmp	r5, #255	; 0xff
 8018140:	d020      	beq.n	8018184 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8018142:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018144:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018148:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801814a:	436f      	muls	r7, r5
 801814c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801814e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018152:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018154:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018158:	fb05 fa0a 	mul.w	sl, r5, sl
 801815c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018160:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018164:	44bc      	add	ip, r7
 8018166:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801816a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801816e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018172:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018176:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801817a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801817e:	ea4c 050a 	orr.w	r5, ip, sl
 8018182:	950e      	str	r5, [sp, #56]	; 0x38
 8018184:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018186:	2dff      	cmp	r5, #255	; 0xff
 8018188:	d020      	beq.n	80181cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801818a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801818c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018190:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018192:	436f      	muls	r7, r5
 8018194:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018196:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801819a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801819c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80181a0:	fb05 fa0a 	mul.w	sl, r5, sl
 80181a4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80181a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181ac:	44bc      	add	ip, r7
 80181ae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80181b2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80181b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80181be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80181c6:	ea4c 050a 	orr.w	r5, ip, sl
 80181ca:	9509      	str	r5, [sp, #36]	; 0x24
 80181cc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80181ce:	2dff      	cmp	r5, #255	; 0xff
 80181d0:	d020      	beq.n	8018214 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80181d2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80181d4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80181d8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80181da:	436f      	muls	r7, r5
 80181dc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80181de:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80181e2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80181e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80181e8:	fb05 fa0a 	mul.w	sl, r5, sl
 80181ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80181f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181f4:	44bc      	add	ip, r7
 80181f6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80181fa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80181fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018202:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018206:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801820a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801820e:	ea4c 050a 	orr.w	r5, ip, sl
 8018212:	950f      	str	r5, [sp, #60]	; 0x3c
 8018214:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018216:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801821a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801821c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018220:	fb0e f707 	mul.w	r7, lr, r7
 8018224:	fb02 770c 	mla	r7, r2, ip, r7
 8018228:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801822c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801822e:	fb00 770c 	mla	r7, r0, ip, r7
 8018232:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8018236:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018238:	fb08 770c 	mla	r7, r8, ip, r7
 801823c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8018240:	fb0e fe0c 	mul.w	lr, lr, ip
 8018244:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018248:	fb02 e303 	mla	r3, r2, r3, lr
 801824c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801824e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018250:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8018254:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018256:	fb00 330a 	mla	r3, r0, sl, r3
 801825a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801825e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8018262:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018264:	f8b9 0000 	ldrh.w	r0, [r9]
 8018268:	4359      	muls	r1, r3
 801826a:	0a3f      	lsrs	r7, r7, #8
 801826c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018270:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018274:	1c4b      	adds	r3, r1, #1
 8018276:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801827a:	ea47 070c 	orr.w	r7, r7, ip
 801827e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018282:	1202      	asrs	r2, r0, #8
 8018284:	0c3b      	lsrs	r3, r7, #16
 8018286:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801828a:	b2c9      	uxtb	r1, r1
 801828c:	fb13 f305 	smulbb	r3, r3, r5
 8018290:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018294:	fb02 3201 	mla	r2, r2, r1, r3
 8018298:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801829c:	10c3      	asrs	r3, r0, #3
 801829e:	b2ff      	uxtb	r7, r7
 80182a0:	00c0      	lsls	r0, r0, #3
 80182a2:	b2c0      	uxtb	r0, r0
 80182a4:	fb17 f705 	smulbb	r7, r7, r5
 80182a8:	fb00 7001 	mla	r0, r0, r1, r7
 80182ac:	b292      	uxth	r2, r2
 80182ae:	fb1c fc05 	smulbb	ip, ip, r5
 80182b2:	b280      	uxth	r0, r0
 80182b4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80182b8:	fb03 c301 	mla	r3, r3, r1, ip
 80182bc:	1c51      	adds	r1, r2, #1
 80182be:	f100 0c01 	add.w	ip, r0, #1
 80182c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80182c6:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80182ca:	b29b      	uxth	r3, r3
 80182cc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80182d0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80182d4:	ea4c 0202 	orr.w	r2, ip, r2
 80182d8:	f103 0c01 	add.w	ip, r3, #1
 80182dc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80182e0:	095b      	lsrs	r3, r3, #5
 80182e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80182e6:	431a      	orrs	r2, r3
 80182e8:	f8a9 2000 	strh.w	r2, [r9]
 80182ec:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80182ee:	441c      	add	r4, r3
 80182f0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80182f2:	f109 0902 	add.w	r9, r9, #2
 80182f6:	441e      	add	r6, r3
 80182f8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80182fc:	e647      	b.n	8017f8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 80182fe:	2800      	cmp	r0, #0
 8018300:	f43f aedf 	beq.w	80180c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8018304:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8018308:	9109      	str	r1, [sp, #36]	; 0x24
 801830a:	0e09      	lsrs	r1, r1, #24
 801830c:	9112      	str	r1, [sp, #72]	; 0x48
 801830e:	e6d8      	b.n	80180c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8018310:	b01d      	add	sp, #116	; 0x74
 8018312:	ecbd 8b08 	vpop	{d8-d11}
 8018316:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801831c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801831c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018320:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8018324:	fb04 5603 	mla	r6, r4, r3, r5
 8018328:	2c00      	cmp	r4, #0
 801832a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801832e:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 8018332:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 8018336:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801833a:	db37      	blt.n	80183ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801833c:	45a6      	cmp	lr, r4
 801833e:	dd35      	ble.n	80183ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8018340:	2d00      	cmp	r5, #0
 8018342:	db31      	blt.n	80183a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8018344:	42ab      	cmp	r3, r5
 8018346:	dd2f      	ble.n	80183a8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8018348:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801834c:	1c6e      	adds	r6, r5, #1
 801834e:	d430      	bmi.n	80183b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8018350:	42b3      	cmp	r3, r6
 8018352:	dd2e      	ble.n	80183b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8018354:	b378      	cbz	r0, 80183b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 8018356:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801835a:	3401      	adds	r4, #1
 801835c:	d42f      	bmi.n	80183be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801835e:	45a6      	cmp	lr, r4
 8018360:	dd2d      	ble.n	80183be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8018362:	b37f      	cbz	r7, 80183c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 8018364:	2d00      	cmp	r5, #0
 8018366:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 801836a:	db26      	blt.n	80183ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801836c:	42ab      	cmp	r3, r5
 801836e:	dd24      	ble.n	80183ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8018370:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8018374:	3501      	adds	r5, #1
 8018376:	d428      	bmi.n	80183ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8018378:	42ab      	cmp	r3, r5
 801837a:	dd26      	ble.n	80183ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801837c:	b338      	cbz	r0, 80183ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 801837e:	f8de 3004 	ldr.w	r3, [lr, #4]
 8018382:	280f      	cmp	r0, #15
 8018384:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018388:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801838c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018390:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8018394:	d801      	bhi.n	801839a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 8018396:	2f0f      	cmp	r7, #15
 8018398:	d91b      	bls.n	80183d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801839a:	4b87      	ldr	r3, [pc, #540]	; (80185b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801839c:	4a87      	ldr	r2, [pc, #540]	; (80185bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801839e:	4888      	ldr	r0, [pc, #544]	; (80185c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 80183a0:	f240 11f9 	movw	r1, #505	; 0x1f9
 80183a4:	f001 fd3e 	bl	8019e24 <__assert_func>
 80183a8:	2200      	movs	r2, #0
 80183aa:	e7cf      	b.n	801834c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 80183ac:	2600      	movs	r6, #0
 80183ae:	4632      	mov	r2, r6
 80183b0:	e7d3      	b.n	801835a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80183b2:	2600      	movs	r6, #0
 80183b4:	e7d1      	b.n	801835a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80183b6:	4606      	mov	r6, r0
 80183b8:	e7cf      	b.n	801835a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80183ba:	2400      	movs	r4, #0
 80183bc:	e7da      	b.n	8018374 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 80183be:	2300      	movs	r3, #0
 80183c0:	461c      	mov	r4, r3
 80183c2:	e7de      	b.n	8018382 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 80183c4:	463b      	mov	r3, r7
 80183c6:	463c      	mov	r4, r7
 80183c8:	e7db      	b.n	8018382 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 80183ca:	2300      	movs	r3, #0
 80183cc:	e7d9      	b.n	8018382 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 80183ce:	4603      	mov	r3, r0
 80183d0:	e7d7      	b.n	8018382 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 80183d2:	b280      	uxth	r0, r0
 80183d4:	b2bf      	uxth	r7, r7
 80183d6:	fb07 fe00 	mul.w	lr, r7, r0
 80183da:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80183de:	0100      	lsls	r0, r0, #4
 80183e0:	eba0 0c0e 	sub.w	ip, r0, lr
 80183e4:	b2bf      	uxth	r7, r7
 80183e6:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80183ea:	fa1f fc8c 	uxth.w	ip, ip
 80183ee:	1bed      	subs	r5, r5, r7
 80183f0:	b2ad      	uxth	r5, r5
 80183f2:	fb0c f00a 	mul.w	r0, ip, sl
 80183f6:	fb0b 0005 	mla	r0, fp, r5, r0
 80183fa:	fb07 0009 	mla	r0, r7, r9, r0
 80183fe:	fb0e 0008 	mla	r0, lr, r8, r0
 8018402:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018406:	9001      	str	r0, [sp, #4]
 8018408:	2800      	cmp	r0, #0
 801840a:	f000 80d1 	beq.w	80185b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 801840e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018412:	d018      	beq.n	8018446 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 8018414:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8018418:	fb0b f000 	mul.w	r0, fp, r0
 801841c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018420:	fb0b fb02 	mul.w	fp, fp, r2
 8018424:	0a02      	lsrs	r2, r0, #8
 8018426:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801842a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801842e:	4402      	add	r2, r0
 8018430:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8018434:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8018438:	0a12      	lsrs	r2, r2, #8
 801843a:	0a00      	lsrs	r0, r0, #8
 801843c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018440:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018444:	4302      	orrs	r2, r0
 8018446:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801844a:	d01a      	beq.n	8018482 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 801844c:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8018450:	fb0a f000 	mul.w	r0, sl, r0
 8018454:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018458:	fb0a fa06 	mul.w	sl, sl, r6
 801845c:	0a06      	lsrs	r6, r0, #8
 801845e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018462:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8018466:	4406      	add	r6, r0
 8018468:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801846c:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8018470:	0a36      	lsrs	r6, r6, #8
 8018472:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018476:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801847a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801847e:	ea46 060a 	orr.w	r6, r6, sl
 8018482:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018486:	d01b      	beq.n	80184c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 8018488:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801848c:	fb09 fa0a 	mul.w	sl, r9, sl
 8018490:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018494:	fb09 f004 	mul.w	r0, r9, r4
 8018498:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801849c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80184a0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80184a4:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80184a8:	4454      	add	r4, sl
 80184aa:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80184ae:	0a24      	lsrs	r4, r4, #8
 80184b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80184b4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80184b8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80184bc:	ea44 0409 	orr.w	r4, r4, r9
 80184c0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80184c4:	d01b      	beq.n	80184fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 80184c6:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80184ca:	fb08 f909 	mul.w	r9, r8, r9
 80184ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80184d2:	fb08 f003 	mul.w	r0, r8, r3
 80184d6:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80184da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80184de:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80184e2:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80184e6:	444b      	add	r3, r9
 80184e8:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80184ec:	0a1b      	lsrs	r3, r3, #8
 80184ee:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80184f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80184f6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80184fa:	ea43 0308 	orr.w	r3, r3, r8
 80184fe:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018502:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018506:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801850a:	fb0c f808 	mul.w	r8, ip, r8
 801850e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018512:	fb0c f606 	mul.w	r6, ip, r6
 8018516:	fb05 8909 	mla	r9, r5, r9, r8
 801851a:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801851e:	fb05 6502 	mla	r5, r5, r2, r6
 8018522:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018526:	fb07 9908 	mla	r9, r7, r8, r9
 801852a:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801852e:	fb07 5704 	mla	r7, r7, r4, r5
 8018532:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018536:	8808      	ldrh	r0, [r1, #0]
 8018538:	fb0e 9808 	mla	r8, lr, r8, r9
 801853c:	fb0e 7e03 	mla	lr, lr, r3, r7
 8018540:	9b01      	ldr	r3, [sp, #4]
 8018542:	43da      	mvns	r2, r3
 8018544:	1203      	asrs	r3, r0, #8
 8018546:	b2d2      	uxtb	r2, r2
 8018548:	10c4      	asrs	r4, r0, #3
 801854a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801854e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018552:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018556:	00c0      	lsls	r0, r0, #3
 8018558:	4353      	muls	r3, r2
 801855a:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801855e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018562:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8018566:	b2c0      	uxtb	r0, r0
 8018568:	ea48 0e0e 	orr.w	lr, r8, lr
 801856c:	4354      	muls	r4, r2
 801856e:	4350      	muls	r0, r2
 8018570:	1c5a      	adds	r2, r3, #1
 8018572:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018576:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801857a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801857e:	1c62      	adds	r2, r4, #1
 8018580:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8018584:	ea4f 221e 	mov.w	r2, lr, lsr #8
 8018588:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801858c:	021b      	lsls	r3, r3, #8
 801858e:	00d2      	lsls	r2, r2, #3
 8018590:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018594:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018598:	4313      	orrs	r3, r2
 801859a:	1c42      	adds	r2, r0, #1
 801859c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80185a0:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 80185a4:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 80185a8:	ea4e 0e03 	orr.w	lr, lr, r3
 80185ac:	f8a1 e000 	strh.w	lr, [r1]
 80185b0:	b003      	add	sp, #12
 80185b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185b6:	bf00      	nop
 80185b8:	0801da2b 	.word	0x0801da2b
 80185bc:	0801df5a 	.word	0x0801df5a
 80185c0:	0801d9f8 	.word	0x0801d9f8

080185c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80185c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185c8:	ed2d 8b08 	vpush	{d8-d11}
 80185cc:	b09b      	sub	sp, #108	; 0x6c
 80185ce:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 80185d2:	9218      	str	r2, [sp, #96]	; 0x60
 80185d4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80185d6:	9116      	str	r1, [sp, #88]	; 0x58
 80185d8:	9307      	str	r3, [sp, #28]
 80185da:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80185de:	9019      	str	r0, [sp, #100]	; 0x64
 80185e0:	6850      	ldr	r0, [r2, #4]
 80185e2:	6812      	ldr	r2, [r2, #0]
 80185e4:	fb00 1303 	mla	r3, r0, r3, r1
 80185e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80185ec:	930a      	str	r3, [sp, #40]	; 0x28
 80185ee:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80185f0:	681b      	ldr	r3, [r3, #0]
 80185f2:	930f      	str	r3, [sp, #60]	; 0x3c
 80185f4:	eeb0 aa40 	vmov.f32	s20, s0
 80185f8:	eef0 9a60 	vmov.f32	s19, s1
 80185fc:	eeb0 9a41 	vmov.f32	s18, s2
 8018600:	eeb0 8a62 	vmov.f32	s16, s5
 8018604:	eef0 8a43 	vmov.f32	s17, s6
 8018608:	eef0 ba44 	vmov.f32	s23, s8
 801860c:	eeb0 ba64 	vmov.f32	s22, s9
 8018610:	eef0 aa45 	vmov.f32	s21, s10
 8018614:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018616:	2b00      	cmp	r3, #0
 8018618:	dc03      	bgt.n	8018622 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801861a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801861c:	2b00      	cmp	r3, #0
 801861e:	f340 8386 	ble.w	8018d2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8018622:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018624:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018628:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801862c:	1e48      	subs	r0, r1, #1
 801862e:	1e57      	subs	r7, r2, #1
 8018630:	9b07      	ldr	r3, [sp, #28]
 8018632:	2b00      	cmp	r3, #0
 8018634:	f340 8166 	ble.w	8018904 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 8018638:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801863c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018640:	d406      	bmi.n	8018650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018642:	4584      	cmp	ip, r0
 8018644:	da04      	bge.n	8018650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018646:	2b00      	cmp	r3, #0
 8018648:	db02      	blt.n	8018650 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801864a:	42bb      	cmp	r3, r7
 801864c:	f2c0 815b 	blt.w	8018906 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8018650:	f11c 0c01 	adds.w	ip, ip, #1
 8018654:	f100 814b 	bmi.w	80188ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8018658:	4561      	cmp	r1, ip
 801865a:	f2c0 8148 	blt.w	80188ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801865e:	3301      	adds	r3, #1
 8018660:	f100 8145 	bmi.w	80188ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8018664:	429a      	cmp	r2, r3
 8018666:	f2c0 8142 	blt.w	80188ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801866a:	9b07      	ldr	r3, [sp, #28]
 801866c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801866e:	9317      	str	r3, [sp, #92]	; 0x5c
 8018670:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018672:	2b00      	cmp	r3, #0
 8018674:	f340 8165 	ble.w	8018942 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8018678:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801867a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801867c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018680:	689b      	ldr	r3, [r3, #8]
 8018682:	1422      	asrs	r2, r4, #16
 8018684:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8018688:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801868c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018690:	f100 81d5 	bmi.w	8018a3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8018694:	f103 38ff 	add.w	r8, r3, #4294967295
 8018698:	4542      	cmp	r2, r8
 801869a:	f280 81d0 	bge.w	8018a3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801869e:	f1bc 0f00 	cmp.w	ip, #0
 80186a2:	f2c0 81cc 	blt.w	8018a3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80186a6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80186aa:	45c4      	cmp	ip, r8
 80186ac:	f280 81c7 	bge.w	8018a3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80186b0:	b21b      	sxth	r3, r3
 80186b2:	fb0c 2203 	mla	r2, ip, r3, r2
 80186b6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80186b8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80186bc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80186c0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80186c4:	2900      	cmp	r1, #0
 80186c6:	f000 8182 	beq.w	80189ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 80186ca:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80186ce:	950b      	str	r5, [sp, #44]	; 0x2c
 80186d0:	0e2d      	lsrs	r5, r5, #24
 80186d2:	9512      	str	r5, [sp, #72]	; 0x48
 80186d4:	b180      	cbz	r0, 80186f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 80186d6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80186da:	3b01      	subs	r3, #1
 80186dc:	009b      	lsls	r3, r3, #2
 80186de:	3304      	adds	r3, #4
 80186e0:	eb08 0c03 	add.w	ip, r8, r3
 80186e4:	f858 3003 	ldr.w	r3, [r8, r3]
 80186e8:	9308      	str	r3, [sp, #32]
 80186ea:	0e1b      	lsrs	r3, r3, #24
 80186ec:	9310      	str	r3, [sp, #64]	; 0x40
 80186ee:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80186f2:	930c      	str	r3, [sp, #48]	; 0x30
 80186f4:	0e1b      	lsrs	r3, r3, #24
 80186f6:	9313      	str	r3, [sp, #76]	; 0x4c
 80186f8:	b289      	uxth	r1, r1
 80186fa:	b280      	uxth	r0, r0
 80186fc:	fb01 f900 	mul.w	r9, r1, r0
 8018700:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018704:	0109      	lsls	r1, r1, #4
 8018706:	eba1 0809 	sub.w	r8, r1, r9
 801870a:	b280      	uxth	r0, r0
 801870c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8018710:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018712:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018714:	fa1f f888 	uxth.w	r8, r8
 8018718:	1a09      	subs	r1, r1, r0
 801871a:	b289      	uxth	r1, r1
 801871c:	fb08 f303 	mul.w	r3, r8, r3
 8018720:	fb01 330e 	mla	r3, r1, lr, r3
 8018724:	fb00 3305 	mla	r3, r0, r5, r3
 8018728:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801872a:	fb09 3305 	mla	r3, r9, r5, r3
 801872e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018732:	2b00      	cmp	r3, #0
 8018734:	f000 80d2 	beq.w	80188dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8018738:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801873c:	d01b      	beq.n	8018776 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801873e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8018742:	fb0e fa0a 	mul.w	sl, lr, sl
 8018746:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801874a:	fb0e fe02 	mul.w	lr, lr, r2
 801874e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8018752:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018756:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801875a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801875e:	4452      	add	r2, sl
 8018760:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018764:	0a12      	lsrs	r2, r2, #8
 8018766:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801876a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801876e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018772:	ea42 020c 	orr.w	r2, r2, ip
 8018776:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018778:	2dff      	cmp	r5, #255	; 0xff
 801877a:	d021      	beq.n	80187c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801877c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801877e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018782:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018784:	fb05 fb0b 	mul.w	fp, r5, fp
 8018788:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801878a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801878e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018790:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018794:	fb05 fa0a 	mul.w	sl, r5, sl
 8018798:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801879c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80187a0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80187a4:	44de      	add	lr, fp
 80187a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80187aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80187ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80187b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80187b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80187ba:	ea4e 050a 	orr.w	r5, lr, sl
 80187be:	950b      	str	r5, [sp, #44]	; 0x2c
 80187c0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80187c2:	2dff      	cmp	r5, #255	; 0xff
 80187c4:	d021      	beq.n	801880a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80187c6:	9d08      	ldr	r5, [sp, #32]
 80187c8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80187cc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80187ce:	fb05 fb0b 	mul.w	fp, r5, fp
 80187d2:	9d08      	ldr	r5, [sp, #32]
 80187d4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80187d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80187da:	fb05 fa0e 	mul.w	sl, r5, lr
 80187de:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80187e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80187e6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80187ea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80187ee:	44de      	add	lr, fp
 80187f0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80187f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80187f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80187fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018800:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018804:	ea4e 050a 	orr.w	r5, lr, sl
 8018808:	9508      	str	r5, [sp, #32]
 801880a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801880c:	2dff      	cmp	r5, #255	; 0xff
 801880e:	d021      	beq.n	8018854 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8018810:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018812:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018816:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018818:	fb05 fb0b 	mul.w	fp, r5, fp
 801881c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801881e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018822:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018824:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018828:	fb05 fa0a 	mul.w	sl, r5, sl
 801882c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018830:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018834:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018838:	44de      	add	lr, fp
 801883a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801883e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018842:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018846:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801884a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801884e:	ea4e 050a 	orr.w	r5, lr, sl
 8018852:	950c      	str	r5, [sp, #48]	; 0x30
 8018854:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018856:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801885a:	9d08      	ldr	r5, [sp, #32]
 801885c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8018860:	fb08 fc0c 	mul.w	ip, r8, ip
 8018864:	fb01 cc0e 	mla	ip, r1, lr, ip
 8018868:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801886c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801886e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8018872:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8018876:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018878:	fb09 cc0e 	mla	ip, r9, lr, ip
 801887c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8018880:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018884:	fb08 f80e 	mul.w	r8, r8, lr
 8018888:	fb01 8202 	mla	r2, r1, r2, r8
 801888c:	9908      	ldr	r1, [sp, #32]
 801888e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8018892:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018894:	fb00 220a 	mla	r2, r0, sl, r2
 8018898:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801889c:	fb09 2900 	mla	r9, r9, r0, r2
 80188a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80188a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80188a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80188ac:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80188b0:	ea4c 0c09 	orr.w	ip, ip, r9
 80188b4:	2bff      	cmp	r3, #255	; 0xff
 80188b6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80188ba:	f040 8091 	bne.w	80189e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80188be:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80188c2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80188c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80188ca:	f022 0207 	bic.w	r2, r2, #7
 80188ce:	431a      	orrs	r2, r3
 80188d0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80188d4:	ea4c 0c02 	orr.w	ip, ip, r2
 80188d8:	f8a7 c000 	strh.w	ip, [r7]
 80188dc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80188de:	441c      	add	r4, r3
 80188e0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80188e2:	441e      	add	r6, r3
 80188e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80188e6:	3b01      	subs	r3, #1
 80188e8:	3702      	adds	r7, #2
 80188ea:	9317      	str	r3, [sp, #92]	; 0x5c
 80188ec:	e6c0      	b.n	8018670 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80188ee:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80188f0:	441c      	add	r4, r3
 80188f2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80188f4:	441e      	add	r6, r3
 80188f6:	9b07      	ldr	r3, [sp, #28]
 80188f8:	3b01      	subs	r3, #1
 80188fa:	9307      	str	r3, [sp, #28]
 80188fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80188fe:	3302      	adds	r3, #2
 8018900:	930a      	str	r3, [sp, #40]	; 0x28
 8018902:	e695      	b.n	8018630 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018904:	d024      	beq.n	8018950 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8018906:	9b07      	ldr	r3, [sp, #28]
 8018908:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801890a:	3b01      	subs	r3, #1
 801890c:	fb00 4003 	mla	r0, r0, r3, r4
 8018910:	1400      	asrs	r0, r0, #16
 8018912:	f53f aeaa 	bmi.w	801866a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018916:	3901      	subs	r1, #1
 8018918:	4288      	cmp	r0, r1
 801891a:	f6bf aea6 	bge.w	801866a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801891e:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8018920:	fb01 6303 	mla	r3, r1, r3, r6
 8018924:	141b      	asrs	r3, r3, #16
 8018926:	f53f aea0 	bmi.w	801866a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801892a:	3a01      	subs	r2, #1
 801892c:	4293      	cmp	r3, r2
 801892e:	f6bf ae9c 	bge.w	801866a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018932:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018936:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801893a:	f1bb 0f00 	cmp.w	fp, #0
 801893e:	f300 809a 	bgt.w	8018a76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8018942:	9b07      	ldr	r3, [sp, #28]
 8018944:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018948:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801894a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801894e:	930a      	str	r3, [sp, #40]	; 0x28
 8018950:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018952:	2b00      	cmp	r3, #0
 8018954:	f340 81eb 	ble.w	8018d2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8018958:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801895c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018960:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018964:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018966:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801896a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801896e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018972:	eef0 6a48 	vmov.f32	s13, s16
 8018976:	ee69 7a27 	vmul.f32	s15, s18, s15
 801897a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801897e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018982:	ee16 4a90 	vmov	r4, s13
 8018986:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801898a:	eef0 6a68 	vmov.f32	s13, s17
 801898e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018992:	ee18 2a10 	vmov	r2, s16
 8018996:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801899a:	fb92 f3f3 	sdiv	r3, r2, r3
 801899e:	ee18 2a90 	vmov	r2, s17
 80189a2:	932f      	str	r3, [sp, #188]	; 0xbc
 80189a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80189a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80189aa:	9330      	str	r3, [sp, #192]	; 0xc0
 80189ac:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80189ae:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80189b0:	3b01      	subs	r3, #1
 80189b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80189b6:	9316      	str	r3, [sp, #88]	; 0x58
 80189b8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80189ba:	bf08      	it	eq
 80189bc:	4613      	moveq	r3, r2
 80189be:	ee16 6a90 	vmov	r6, s13
 80189c2:	9307      	str	r3, [sp, #28]
 80189c4:	eef0 8a67 	vmov.f32	s17, s15
 80189c8:	eeb0 8a47 	vmov.f32	s16, s14
 80189cc:	e622      	b.n	8018614 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80189ce:	2800      	cmp	r0, #0
 80189d0:	f43f ae92 	beq.w	80186f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 80189d4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80189d8:	9308      	str	r3, [sp, #32]
 80189da:	0e1b      	lsrs	r3, r3, #24
 80189dc:	9310      	str	r3, [sp, #64]	; 0x40
 80189de:	e68b      	b.n	80186f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 80189e0:	8839      	ldrh	r1, [r7, #0]
 80189e2:	4dd5      	ldr	r5, [pc, #852]	; (8018d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 80189e4:	43db      	mvns	r3, r3
 80189e6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80189ea:	fa5f f883 	uxtb.w	r8, r3
 80189ee:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80189f2:	fb0e fe08 	mul.w	lr, lr, r8
 80189f6:	10c8      	asrs	r0, r1, #3
 80189f8:	00cb      	lsls	r3, r1, #3
 80189fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80189fe:	f10e 0101 	add.w	r1, lr, #1
 8018a02:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8018a06:	fb00 f008 	mul.w	r0, r0, r8
 8018a0a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8018a0e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8018a12:	f100 0e01 	add.w	lr, r0, #1
 8018a16:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8018a1a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018a1e:	b2db      	uxtb	r3, r3
 8018a20:	b2c9      	uxtb	r1, r1
 8018a22:	00d2      	lsls	r2, r2, #3
 8018a24:	fb03 f308 	mul.w	r3, r3, r8
 8018a28:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8018a2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018a30:	430a      	orrs	r2, r1
 8018a32:	1c59      	adds	r1, r3, #1
 8018a34:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018a38:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018a3c:	e748      	b.n	80188d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8018a3e:	f112 0801 	adds.w	r8, r2, #1
 8018a42:	f53f af4b 	bmi.w	80188dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8018a46:	4543      	cmp	r3, r8
 8018a48:	f6ff af48 	blt.w	80188dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8018a4c:	f11c 0801 	adds.w	r8, ip, #1
 8018a50:	f53f af44 	bmi.w	80188dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8018a54:	45c6      	cmp	lr, r8
 8018a56:	f6ff af41 	blt.w	80188dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8018a5a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8018a5e:	fa0f f28e 	sxth.w	r2, lr
 8018a62:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8018a66:	9200      	str	r2, [sp, #0]
 8018a68:	b21b      	sxth	r3, r3
 8018a6a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018a6c:	9819      	ldr	r0, [sp, #100]	; 0x64
 8018a6e:	4639      	mov	r1, r7
 8018a70:	f7ff fc54 	bl	801831c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8018a74:	e732      	b.n	80188dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8018a76:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018a78:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8018a7a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8018a7e:	1421      	asrs	r1, r4, #16
 8018a80:	1433      	asrs	r3, r6, #16
 8018a82:	fb07 1303 	mla	r3, r7, r3, r1
 8018a86:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8018a88:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8018a8c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8018a90:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018a94:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018a98:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018a9c:	2a00      	cmp	r2, #0
 8018a9e:	f000 8107 	beq.w	8018cb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 8018aa2:	684d      	ldr	r5, [r1, #4]
 8018aa4:	950d      	str	r5, [sp, #52]	; 0x34
 8018aa6:	0e2d      	lsrs	r5, r5, #24
 8018aa8:	9514      	str	r5, [sp, #80]	; 0x50
 8018aaa:	b178      	cbz	r0, 8018acc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8018aac:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8018ab0:	3f01      	subs	r7, #1
 8018ab2:	00bf      	lsls	r7, r7, #2
 8018ab4:	3704      	adds	r7, #4
 8018ab6:	eb01 0e07 	add.w	lr, r1, r7
 8018aba:	59c9      	ldr	r1, [r1, r7]
 8018abc:	9109      	str	r1, [sp, #36]	; 0x24
 8018abe:	0e09      	lsrs	r1, r1, #24
 8018ac0:	9111      	str	r1, [sp, #68]	; 0x44
 8018ac2:	f8de 1004 	ldr.w	r1, [lr, #4]
 8018ac6:	910e      	str	r1, [sp, #56]	; 0x38
 8018ac8:	0e09      	lsrs	r1, r1, #24
 8018aca:	9115      	str	r1, [sp, #84]	; 0x54
 8018acc:	b292      	uxth	r2, r2
 8018ace:	b280      	uxth	r0, r0
 8018ad0:	fb02 f900 	mul.w	r9, r2, r0
 8018ad4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018ad8:	0112      	lsls	r2, r2, #4
 8018ada:	eba2 0e09 	sub.w	lr, r2, r9
 8018ade:	b280      	uxth	r0, r0
 8018ae0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8018ae4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018ae6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018ae8:	fa1f fe8e 	uxth.w	lr, lr
 8018aec:	1a09      	subs	r1, r1, r0
 8018aee:	b289      	uxth	r1, r1
 8018af0:	fb0e f202 	mul.w	r2, lr, r2
 8018af4:	fb01 220c 	mla	r2, r1, ip, r2
 8018af8:	fb00 2205 	mla	r2, r0, r5, r2
 8018afc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018afe:	fb09 2205 	mla	r2, r9, r5, r2
 8018b02:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018b06:	2a00      	cmp	r2, #0
 8018b08:	f000 80c9 	beq.w	8018c9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8018b0c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018b10:	d019      	beq.n	8018b46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 8018b12:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018b16:	fb0c fa0a 	mul.w	sl, ip, sl
 8018b1a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018b1e:	fb0c fc03 	mul.w	ip, ip, r3
 8018b22:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018b26:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018b2a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018b2e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018b32:	4453      	add	r3, sl
 8018b34:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018b38:	0a1b      	lsrs	r3, r3, #8
 8018b3a:	0a3f      	lsrs	r7, r7, #8
 8018b3c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018b40:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018b44:	433b      	orrs	r3, r7
 8018b46:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018b48:	2dff      	cmp	r5, #255	; 0xff
 8018b4a:	d020      	beq.n	8018b8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8018b4c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018b4e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018b52:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018b54:	436f      	muls	r7, r5
 8018b56:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018b58:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018b5c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018b5e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018b62:	fb05 fa0a 	mul.w	sl, r5, sl
 8018b66:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018b6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018b6e:	44bc      	add	ip, r7
 8018b70:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018b74:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018b78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018b7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018b80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018b84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018b88:	ea4c 050a 	orr.w	r5, ip, sl
 8018b8c:	950d      	str	r5, [sp, #52]	; 0x34
 8018b8e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018b90:	2dff      	cmp	r5, #255	; 0xff
 8018b92:	d020      	beq.n	8018bd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 8018b94:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018b96:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018b9a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018b9c:	436f      	muls	r7, r5
 8018b9e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018ba0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8018ba4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018ba6:	fb05 fa0c 	mul.w	sl, r5, ip
 8018baa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018bae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018bb2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018bb6:	44bc      	add	ip, r7
 8018bb8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018bbc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018bc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018bc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018bc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018bcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018bd0:	ea4c 050a 	orr.w	r5, ip, sl
 8018bd4:	9509      	str	r5, [sp, #36]	; 0x24
 8018bd6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018bd8:	2dff      	cmp	r5, #255	; 0xff
 8018bda:	d020      	beq.n	8018c1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 8018bdc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018bde:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018be2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018be4:	436f      	muls	r7, r5
 8018be6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018be8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018bec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018bee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018bf2:	fb05 fa0a 	mul.w	sl, r5, sl
 8018bf6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018bfa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018bfe:	44bc      	add	ip, r7
 8018c00:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018c04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018c08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018c0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018c14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018c18:	ea4c 050a 	orr.w	r5, ip, sl
 8018c1c:	950e      	str	r5, [sp, #56]	; 0x38
 8018c1e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018c20:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018c24:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018c26:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018c2a:	fb0e f707 	mul.w	r7, lr, r7
 8018c2e:	fb01 770c 	mla	r7, r1, ip, r7
 8018c32:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8018c36:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018c38:	fb00 770c 	mla	r7, r0, ip, r7
 8018c3c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8018c40:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018c42:	fb09 770c 	mla	r7, r9, ip, r7
 8018c46:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8018c4a:	fb0e fe0c 	mul.w	lr, lr, ip
 8018c4e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018c52:	fb01 e303 	mla	r3, r1, r3, lr
 8018c56:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018c58:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8018c5c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018c5e:	fb00 330a 	mla	r3, r0, sl, r3
 8018c62:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8018c66:	fb09 3c0c 	mla	ip, r9, ip, r3
 8018c6a:	0a3f      	lsrs	r7, r7, #8
 8018c6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018c70:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018c74:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018c78:	ea47 070c 	orr.w	r7, r7, ip
 8018c7c:	2aff      	cmp	r2, #255	; 0xff
 8018c7e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8018c82:	d11e      	bne.n	8018cc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 8018c84:	097a      	lsrs	r2, r7, #5
 8018c86:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8018c8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018c8e:	f023 0307 	bic.w	r3, r3, #7
 8018c92:	4313      	orrs	r3, r2
 8018c94:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8018c98:	431f      	orrs	r7, r3
 8018c9a:	f8a8 7000 	strh.w	r7, [r8]
 8018c9e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018ca0:	441c      	add	r4, r3
 8018ca2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018ca4:	f108 0802 	add.w	r8, r8, #2
 8018ca8:	441e      	add	r6, r3
 8018caa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018cae:	e644      	b.n	801893a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8018cb0:	2800      	cmp	r0, #0
 8018cb2:	f43f af0b 	beq.w	8018acc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8018cb6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8018cba:	9109      	str	r1, [sp, #36]	; 0x24
 8018cbc:	0e09      	lsrs	r1, r1, #24
 8018cbe:	9111      	str	r1, [sp, #68]	; 0x44
 8018cc0:	e704      	b.n	8018acc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8018cc2:	f8b8 1000 	ldrh.w	r1, [r8]
 8018cc6:	43d2      	mvns	r2, r2
 8018cc8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8018ccc:	fa5f fe82 	uxtb.w	lr, r2
 8018cd0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018cd4:	fb0c fc0e 	mul.w	ip, ip, lr
 8018cd8:	10c8      	asrs	r0, r1, #3
 8018cda:	00ca      	lsls	r2, r1, #3
 8018cdc:	f10c 0101 	add.w	r1, ip, #1
 8018ce0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8018ce4:	0c39      	lsrs	r1, r7, #16
 8018ce6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8018cea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018cee:	4912      	ldr	r1, [pc, #72]	; (8018d38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8018cf0:	fb00 f00e 	mul.w	r0, r0, lr
 8018cf4:	fa5f fc8c 	uxtb.w	ip, ip
 8018cf8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8018cfc:	b2d2      	uxtb	r2, r2
 8018cfe:	1c41      	adds	r1, r0, #1
 8018d00:	fb02 f20e 	mul.w	r2, r2, lr
 8018d04:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018d08:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018d0c:	1c51      	adds	r1, r2, #1
 8018d0e:	00c0      	lsls	r0, r0, #3
 8018d10:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018d14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018d18:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018d1c:	ea4c 0c00 	orr.w	ip, ip, r0
 8018d20:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8018d24:	ea47 0c0c 	orr.w	ip, r7, ip
 8018d28:	f8a8 c000 	strh.w	ip, [r8]
 8018d2c:	e7b7      	b.n	8018c9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8018d2e:	b01b      	add	sp, #108	; 0x6c
 8018d30:	ecbd 8b08 	vpop	{d8-d11}
 8018d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018d38:	fffff800 	.word	0xfffff800

08018d3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8018d3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018d40:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8018d44:	2c00      	cmp	r4, #0
 8018d46:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8018d4a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8018d4e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8018d52:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8018d56:	fb04 ce03 	mla	lr, r4, r3, ip
 8018d5a:	db60      	blt.n	8018e1e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8018d5c:	45a1      	cmp	r9, r4
 8018d5e:	dd5e      	ble.n	8018e1e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8018d60:	f1bc 0f00 	cmp.w	ip, #0
 8018d64:	db59      	blt.n	8018e1a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8018d66:	45e0      	cmp	r8, ip
 8018d68:	dd57      	ble.n	8018e1a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8018d6a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8018d6e:	f01e 0f01 	tst.w	lr, #1
 8018d72:	5c16      	ldrb	r6, [r2, r0]
 8018d74:	bf0c      	ite	eq
 8018d76:	f006 060f 	andeq.w	r6, r6, #15
 8018d7a:	1136      	asrne	r6, r6, #4
 8018d7c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8018d80:	b2f6      	uxtb	r6, r6
 8018d82:	f11c 0001 	adds.w	r0, ip, #1
 8018d86:	d44d      	bmi.n	8018e24 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8018d88:	4580      	cmp	r8, r0
 8018d8a:	dd4b      	ble.n	8018e24 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8018d8c:	2d00      	cmp	r5, #0
 8018d8e:	d04b      	beq.n	8018e28 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8018d90:	f10e 0a01 	add.w	sl, lr, #1
 8018d94:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8018d98:	f01a 0f01 	tst.w	sl, #1
 8018d9c:	5c10      	ldrb	r0, [r2, r0]
 8018d9e:	bf0c      	ite	eq
 8018da0:	f000 000f 	andeq.w	r0, r0, #15
 8018da4:	1100      	asrne	r0, r0, #4
 8018da6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018daa:	b2c0      	uxtb	r0, r0
 8018dac:	3401      	adds	r4, #1
 8018dae:	d43f      	bmi.n	8018e30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8018db0:	45a1      	cmp	r9, r4
 8018db2:	dd3d      	ble.n	8018e30 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8018db4:	2f00      	cmp	r7, #0
 8018db6:	f000 80a8 	beq.w	8018f0a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 8018dba:	f1bc 0f00 	cmp.w	ip, #0
 8018dbe:	db35      	blt.n	8018e2c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8018dc0:	45e0      	cmp	r8, ip
 8018dc2:	dd33      	ble.n	8018e2c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8018dc4:	eb03 090e 	add.w	r9, r3, lr
 8018dc8:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8018dcc:	f019 0f01 	tst.w	r9, #1
 8018dd0:	5d14      	ldrb	r4, [r2, r4]
 8018dd2:	bf0c      	ite	eq
 8018dd4:	f004 040f 	andeq.w	r4, r4, #15
 8018dd8:	1124      	asrne	r4, r4, #4
 8018dda:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8018dde:	b2e4      	uxtb	r4, r4
 8018de0:	f11c 0c01 	adds.w	ip, ip, #1
 8018de4:	d427      	bmi.n	8018e36 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8018de6:	45e0      	cmp	r8, ip
 8018de8:	dd25      	ble.n	8018e36 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8018dea:	b335      	cbz	r5, 8018e3a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8018dec:	3301      	adds	r3, #1
 8018dee:	449e      	add	lr, r3
 8018df0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8018df4:	f01e 0f01 	tst.w	lr, #1
 8018df8:	5cd2      	ldrb	r2, [r2, r3]
 8018dfa:	bf0c      	ite	eq
 8018dfc:	f002 020f 	andeq.w	r2, r2, #15
 8018e00:	1112      	asrne	r2, r2, #4
 8018e02:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018e06:	b2d3      	uxtb	r3, r2
 8018e08:	2d0f      	cmp	r5, #15
 8018e0a:	d917      	bls.n	8018e3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8018e0c:	4b42      	ldr	r3, [pc, #264]	; (8018f18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 8018e0e:	4a43      	ldr	r2, [pc, #268]	; (8018f1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 8018e10:	4843      	ldr	r0, [pc, #268]	; (8018f20 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 8018e12:	f240 11f9 	movw	r1, #505	; 0x1f9
 8018e16:	f001 f805 	bl	8019e24 <__assert_func>
 8018e1a:	2600      	movs	r6, #0
 8018e1c:	e7b1      	b.n	8018d82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8018e1e:	2000      	movs	r0, #0
 8018e20:	4606      	mov	r6, r0
 8018e22:	e7c3      	b.n	8018dac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018e24:	2000      	movs	r0, #0
 8018e26:	e7c1      	b.n	8018dac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018e28:	4628      	mov	r0, r5
 8018e2a:	e7bf      	b.n	8018dac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018e2c:	2400      	movs	r4, #0
 8018e2e:	e7d7      	b.n	8018de0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8018e30:	2300      	movs	r3, #0
 8018e32:	461c      	mov	r4, r3
 8018e34:	e7e8      	b.n	8018e08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8018e36:	2300      	movs	r3, #0
 8018e38:	e7e6      	b.n	8018e08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8018e3a:	462b      	mov	r3, r5
 8018e3c:	2f0f      	cmp	r7, #15
 8018e3e:	d8e5      	bhi.n	8018e0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8018e40:	b2ad      	uxth	r5, r5
 8018e42:	b2bf      	uxth	r7, r7
 8018e44:	fb05 fc07 	mul.w	ip, r5, r7
 8018e48:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8018e4c:	012d      	lsls	r5, r5, #4
 8018e4e:	b2bf      	uxth	r7, r7
 8018e50:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8018e54:	eba5 050c 	sub.w	r5, r5, ip
 8018e58:	1bd2      	subs	r2, r2, r7
 8018e5a:	b2ad      	uxth	r5, r5
 8018e5c:	b292      	uxth	r2, r2
 8018e5e:	4368      	muls	r0, r5
 8018e60:	fb06 0002 	mla	r0, r6, r2, r0
 8018e64:	fb07 0404 	mla	r4, r7, r4, r0
 8018e68:	fb0c 4303 	mla	r3, ip, r3, r4
 8018e6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018e70:	b1b3      	cbz	r3, 8018ea0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8018e72:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8018e76:	435a      	muls	r2, r3
 8018e78:	1c53      	adds	r3, r2, #1
 8018e7a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018e7e:	4a29      	ldr	r2, [pc, #164]	; (8018f24 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 8018e80:	121b      	asrs	r3, r3, #8
 8018e82:	6812      	ldr	r2, [r2, #0]
 8018e84:	2bff      	cmp	r3, #255	; 0xff
 8018e86:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8018e8a:	d10b      	bne.n	8018ea4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 8018e8c:	4b26      	ldr	r3, [pc, #152]	; (8018f28 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 8018e8e:	0950      	lsrs	r0, r2, #5
 8018e90:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018e94:	4033      	ands	r3, r6
 8018e96:	4318      	orrs	r0, r3
 8018e98:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018e9c:	4302      	orrs	r2, r0
 8018e9e:	800a      	strh	r2, [r1, #0]
 8018ea0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018ea4:	880d      	ldrh	r5, [r1, #0]
 8018ea6:	b29f      	uxth	r7, r3
 8018ea8:	122c      	asrs	r4, r5, #8
 8018eaa:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8018eae:	43db      	mvns	r3, r3
 8018eb0:	b2db      	uxtb	r3, r3
 8018eb2:	fb10 f007 	smulbb	r0, r0, r7
 8018eb6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8018eba:	fb04 0403 	mla	r4, r4, r3, r0
 8018ebe:	b2f6      	uxtb	r6, r6
 8018ec0:	10e8      	asrs	r0, r5, #3
 8018ec2:	b2d2      	uxtb	r2, r2
 8018ec4:	00ed      	lsls	r5, r5, #3
 8018ec6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018eca:	fb12 f207 	smulbb	r2, r2, r7
 8018ece:	fb16 f607 	smulbb	r6, r6, r7
 8018ed2:	b2ed      	uxtb	r5, r5
 8018ed4:	b2a4      	uxth	r4, r4
 8018ed6:	fb00 6603 	mla	r6, r0, r3, r6
 8018eda:	fb05 2303 	mla	r3, r5, r3, r2
 8018ede:	b29a      	uxth	r2, r3
 8018ee0:	1c63      	adds	r3, r4, #1
 8018ee2:	b2b0      	uxth	r0, r6
 8018ee4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8018ee8:	1c53      	adds	r3, r2, #1
 8018eea:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018eee:	1c42      	adds	r2, r0, #1
 8018ef0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018ef4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8018ef8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018efc:	0940      	lsrs	r0, r0, #5
 8018efe:	4323      	orrs	r3, r4
 8018f00:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018f04:	4303      	orrs	r3, r0
 8018f06:	800b      	strh	r3, [r1, #0]
 8018f08:	e7ca      	b.n	8018ea0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8018f0a:	2d0f      	cmp	r5, #15
 8018f0c:	f63f af7e 	bhi.w	8018e0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8018f10:	463b      	mov	r3, r7
 8018f12:	463c      	mov	r4, r7
 8018f14:	e794      	b.n	8018e40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8018f16:	bf00      	nop
 8018f18:	0801da2b 	.word	0x0801da2b
 8018f1c:	0801df5a 	.word	0x0801df5a
 8018f20:	0801d9f8 	.word	0x0801d9f8
 8018f24:	2000a4a0 	.word	0x2000a4a0
 8018f28:	00fff800 	.word	0x00fff800

08018f2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f30:	ed2d 8b08 	vpush	{d8-d11}
 8018f34:	b097      	sub	sp, #92	; 0x5c
 8018f36:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8018f3a:	9214      	str	r2, [sp, #80]	; 0x50
 8018f3c:	9309      	str	r3, [sp, #36]	; 0x24
 8018f3e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018f40:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8018f44:	910d      	str	r1, [sp, #52]	; 0x34
 8018f46:	930f      	str	r3, [sp, #60]	; 0x3c
 8018f48:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8018f4c:	9015      	str	r0, [sp, #84]	; 0x54
 8018f4e:	6850      	ldr	r0, [r2, #4]
 8018f50:	6812      	ldr	r2, [r2, #0]
 8018f52:	fb00 1303 	mla	r3, r0, r3, r1
 8018f56:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8018f5a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018f5c:	689b      	ldr	r3, [r3, #8]
 8018f5e:	3301      	adds	r3, #1
 8018f60:	f023 0301 	bic.w	r3, r3, #1
 8018f64:	930a      	str	r3, [sp, #40]	; 0x28
 8018f66:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018f68:	681f      	ldr	r7, [r3, #0]
 8018f6a:	eeb0 aa40 	vmov.f32	s20, s0
 8018f6e:	eef0 9a60 	vmov.f32	s19, s1
 8018f72:	eeb0 9a41 	vmov.f32	s18, s2
 8018f76:	eeb0 8a62 	vmov.f32	s16, s5
 8018f7a:	eef0 8a43 	vmov.f32	s17, s6
 8018f7e:	eef0 ba44 	vmov.f32	s23, s8
 8018f82:	eeb0 ba64 	vmov.f32	s22, s9
 8018f86:	eef0 aa45 	vmov.f32	s21, s10
 8018f8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018f8c:	2b00      	cmp	r3, #0
 8018f8e:	dc03      	bgt.n	8018f98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018f90:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018f92:	2b00      	cmp	r3, #0
 8018f94:	f340 8287 	ble.w	80194a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8018f98:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018f9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018f9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018fa2:	1e48      	subs	r0, r1, #1
 8018fa4:	f102 3cff 	add.w	ip, r2, #4294967295
 8018fa8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018faa:	2b00      	cmp	r3, #0
 8018fac:	f340 80c4 	ble.w	8019138 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8018fb0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018fb4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018fb8:	d406      	bmi.n	8018fc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018fba:	4586      	cmp	lr, r0
 8018fbc:	da04      	bge.n	8018fc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018fbe:	2b00      	cmp	r3, #0
 8018fc0:	db02      	blt.n	8018fc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018fc2:	4563      	cmp	r3, ip
 8018fc4:	f2c0 80b9 	blt.w	801913a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8018fc8:	f11e 0e01 	adds.w	lr, lr, #1
 8018fcc:	f100 80aa 	bmi.w	8019124 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8018fd0:	4571      	cmp	r1, lr
 8018fd2:	f2c0 80a7 	blt.w	8019124 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8018fd6:	3301      	adds	r3, #1
 8018fd8:	f100 80a4 	bmi.w	8019124 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8018fdc:	429a      	cmp	r2, r3
 8018fde:	f2c0 80a1 	blt.w	8019124 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8018fe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018fe4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8018fe8:	930e      	str	r3, [sp, #56]	; 0x38
 8018fea:	46c8      	mov	r8, r9
 8018fec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018fee:	2b00      	cmp	r3, #0
 8018ff0:	f340 80c3 	ble.w	801917a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8018ff4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018ff6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8018ffa:	1423      	asrs	r3, r4, #16
 8018ffc:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019000:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019004:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019008:	f100 814d 	bmi.w	80192a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801900c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8019010:	455b      	cmp	r3, fp
 8019012:	f280 8148 	bge.w	80192a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8019016:	2800      	cmp	r0, #0
 8019018:	f2c0 8145 	blt.w	80192a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801901c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8019020:	4558      	cmp	r0, fp
 8019022:	f280 8140 	bge.w	80192a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8019026:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019028:	fb00 3305 	mla	r3, r0, r5, r3
 801902c:	0858      	lsrs	r0, r3, #1
 801902e:	07dd      	lsls	r5, r3, #31
 8019030:	f817 c000 	ldrb.w	ip, [r7, r0]
 8019034:	bf54      	ite	pl
 8019036:	f00c 0c0f 	andpl.w	ip, ip, #15
 801903a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801903e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019042:	fa5f fc8c 	uxtb.w	ip, ip
 8019046:	2a00      	cmp	r2, #0
 8019048:	f000 80db 	beq.w	8019202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801904c:	1c58      	adds	r0, r3, #1
 801904e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8019052:	07c0      	lsls	r0, r0, #31
 8019054:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019058:	bf54      	ite	pl
 801905a:	f00e 0e0f 	andpl.w	lr, lr, #15
 801905e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8019062:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8019066:	fa5f f08e 	uxtb.w	r0, lr
 801906a:	9010      	str	r0, [sp, #64]	; 0x40
 801906c:	b1c9      	cbz	r1, 80190a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801906e:	4453      	add	r3, sl
 8019070:	0858      	lsrs	r0, r3, #1
 8019072:	07dd      	lsls	r5, r3, #31
 8019074:	5c38      	ldrb	r0, [r7, r0]
 8019076:	bf54      	ite	pl
 8019078:	f000 000f 	andpl.w	r0, r0, #15
 801907c:	1100      	asrmi	r0, r0, #4
 801907e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019082:	3301      	adds	r3, #1
 8019084:	b2c0      	uxtb	r0, r0
 8019086:	900b      	str	r0, [sp, #44]	; 0x2c
 8019088:	0858      	lsrs	r0, r3, #1
 801908a:	07dd      	lsls	r5, r3, #31
 801908c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8019090:	bf54      	ite	pl
 8019092:	f00e 030f 	andpl.w	r3, lr, #15
 8019096:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801909a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801909e:	b2db      	uxtb	r3, r3
 80190a0:	9311      	str	r3, [sp, #68]	; 0x44
 80190a2:	b292      	uxth	r2, r2
 80190a4:	b289      	uxth	r1, r1
 80190a6:	fb02 f301 	mul.w	r3, r2, r1
 80190aa:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80190ae:	0112      	lsls	r2, r2, #4
 80190b0:	b289      	uxth	r1, r1
 80190b2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80190b6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80190b8:	1ad2      	subs	r2, r2, r3
 80190ba:	1a40      	subs	r0, r0, r1
 80190bc:	b292      	uxth	r2, r2
 80190be:	436a      	muls	r2, r5
 80190c0:	b280      	uxth	r0, r0
 80190c2:	fb0c 2c00 	mla	ip, ip, r0, r2
 80190c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80190c8:	fb01 c102 	mla	r1, r1, r2, ip
 80190cc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80190ce:	fb03 1302 	mla	r3, r3, r2, r1
 80190d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80190d6:	b1db      	cbz	r3, 8019110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80190d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80190da:	4353      	muls	r3, r2
 80190dc:	1c5a      	adds	r2, r3, #1
 80190de:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80190e2:	4ac6      	ldr	r2, [pc, #792]	; (80193fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 80190e4:	121b      	asrs	r3, r3, #8
 80190e6:	6812      	ldr	r2, [r2, #0]
 80190e8:	2bff      	cmp	r3, #255	; 0xff
 80190ea:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80190ee:	f040 8099 	bne.w	8019224 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 80190f2:	0953      	lsrs	r3, r2, #5
 80190f4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80190f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80190fc:	f02c 0c07 	bic.w	ip, ip, #7
 8019100:	ea43 0c0c 	orr.w	ip, r3, ip
 8019104:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019108:	ea4c 0202 	orr.w	r2, ip, r2
 801910c:	f8a8 2000 	strh.w	r2, [r8]
 8019110:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019112:	441c      	add	r4, r3
 8019114:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019116:	441e      	add	r6, r3
 8019118:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801911a:	3b01      	subs	r3, #1
 801911c:	f108 0802 	add.w	r8, r8, #2
 8019120:	930e      	str	r3, [sp, #56]	; 0x38
 8019122:	e763      	b.n	8018fec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8019124:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019126:	441c      	add	r4, r3
 8019128:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801912a:	441e      	add	r6, r3
 801912c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801912e:	3b01      	subs	r3, #1
 8019130:	9309      	str	r3, [sp, #36]	; 0x24
 8019132:	f109 0902 	add.w	r9, r9, #2
 8019136:	e737      	b.n	8018fa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019138:	d024      	beq.n	8019184 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801913a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801913c:	982b      	ldr	r0, [sp, #172]	; 0xac
 801913e:	3b01      	subs	r3, #1
 8019140:	fb00 4003 	mla	r0, r0, r3, r4
 8019144:	1400      	asrs	r0, r0, #16
 8019146:	f53f af4c 	bmi.w	8018fe2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801914a:	3901      	subs	r1, #1
 801914c:	4288      	cmp	r0, r1
 801914e:	f6bf af48 	bge.w	8018fe2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019152:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8019154:	fb01 6303 	mla	r3, r1, r3, r6
 8019158:	141b      	asrs	r3, r3, #16
 801915a:	f53f af42 	bmi.w	8018fe2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801915e:	3a01      	subs	r2, #1
 8019160:	4293      	cmp	r3, r2
 8019162:	f6bf af3e 	bge.w	8018fe2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019166:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801916a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801916e:	930e      	str	r3, [sp, #56]	; 0x38
 8019170:	46c8      	mov	r8, r9
 8019172:	f1bb 0f00 	cmp.w	fp, #0
 8019176:	f300 80b7 	bgt.w	80192e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801917a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801917c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019180:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019184:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019186:	2b00      	cmp	r3, #0
 8019188:	f340 818d 	ble.w	80194a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801918c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019190:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019194:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019198:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801919a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801919e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80191a2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80191a6:	eef0 6a48 	vmov.f32	s13, s16
 80191aa:	ee69 7a27 	vmul.f32	s15, s18, s15
 80191ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80191b2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80191b6:	ee16 4a90 	vmov	r4, s13
 80191ba:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80191be:	eef0 6a68 	vmov.f32	s13, s17
 80191c2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80191c6:	ee18 2a10 	vmov	r2, s16
 80191ca:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80191ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80191d2:	ee18 2a90 	vmov	r2, s17
 80191d6:	932b      	str	r3, [sp, #172]	; 0xac
 80191d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80191da:	fb92 f3f3 	sdiv	r3, r2, r3
 80191de:	932c      	str	r3, [sp, #176]	; 0xb0
 80191e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80191e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80191e4:	3b01      	subs	r3, #1
 80191e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80191ea:	930d      	str	r3, [sp, #52]	; 0x34
 80191ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80191ee:	bf08      	it	eq
 80191f0:	4613      	moveq	r3, r2
 80191f2:	ee16 6a90 	vmov	r6, s13
 80191f6:	9309      	str	r3, [sp, #36]	; 0x24
 80191f8:	eef0 8a67 	vmov.f32	s17, s15
 80191fc:	eeb0 8a47 	vmov.f32	s16, s14
 8019200:	e6c3      	b.n	8018f8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019202:	2900      	cmp	r1, #0
 8019204:	f43f af4d 	beq.w	80190a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8019208:	eb0a 0003 	add.w	r0, sl, r3
 801920c:	0843      	lsrs	r3, r0, #1
 801920e:	07c0      	lsls	r0, r0, #31
 8019210:	5cfb      	ldrb	r3, [r7, r3]
 8019212:	bf54      	ite	pl
 8019214:	f003 030f 	andpl.w	r3, r3, #15
 8019218:	111b      	asrmi	r3, r3, #4
 801921a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801921e:	b2db      	uxtb	r3, r3
 8019220:	930b      	str	r3, [sp, #44]	; 0x2c
 8019222:	e73e      	b.n	80190a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8019224:	f8b8 e000 	ldrh.w	lr, [r8]
 8019228:	fa1f fb83 	uxth.w	fp, r3
 801922c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8019230:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8019234:	43db      	mvns	r3, r3
 8019236:	b2db      	uxtb	r3, r3
 8019238:	fb11 f10b 	smulbb	r1, r1, fp
 801923c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019240:	fb00 1003 	mla	r0, r0, r3, r1
 8019244:	fa5f fc8c 	uxtb.w	ip, ip
 8019248:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801924c:	b2d2      	uxtb	r2, r2
 801924e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019252:	b280      	uxth	r0, r0
 8019254:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019258:	fb1c fc0b 	smulbb	ip, ip, fp
 801925c:	fa5f fe8e 	uxtb.w	lr, lr
 8019260:	fb12 fb0b 	smulbb	fp, r2, fp
 8019264:	fb01 cc03 	mla	ip, r1, r3, ip
 8019268:	fb0e bb03 	mla	fp, lr, r3, fp
 801926c:	1c43      	adds	r3, r0, #1
 801926e:	fa1f fc8c 	uxth.w	ip, ip
 8019272:	fa1f fb8b 	uxth.w	fp, fp
 8019276:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801927a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801927e:	f10c 0101 	add.w	r1, ip, #1
 8019282:	f10b 0001 	add.w	r0, fp, #1
 8019286:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801928a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801928e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019292:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019296:	4318      	orrs	r0, r3
 8019298:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801929c:	ea40 000c 	orr.w	r0, r0, ip
 80192a0:	f8a8 0000 	strh.w	r0, [r8]
 80192a4:	e734      	b.n	8019110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80192a6:	f113 0b01 	adds.w	fp, r3, #1
 80192aa:	f53f af31 	bmi.w	8019110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80192ae:	45dc      	cmp	ip, fp
 80192b0:	f6ff af2e 	blt.w	8019110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80192b4:	f110 0b01 	adds.w	fp, r0, #1
 80192b8:	f53f af2a 	bmi.w	8019110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80192bc:	45de      	cmp	lr, fp
 80192be:	f6ff af27 	blt.w	8019110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80192c2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80192c4:	9302      	str	r3, [sp, #8]
 80192c6:	fa0f f38e 	sxth.w	r3, lr
 80192ca:	9301      	str	r3, [sp, #4]
 80192cc:	fa0f f38c 	sxth.w	r3, ip
 80192d0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80192d4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80192d8:	9300      	str	r3, [sp, #0]
 80192da:	463a      	mov	r2, r7
 80192dc:	4653      	mov	r3, sl
 80192de:	4641      	mov	r1, r8
 80192e0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80192e2:	f7ff fd2b 	bl	8018d3c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80192e6:	e713      	b.n	8019110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80192e8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80192ea:	1422      	asrs	r2, r4, #16
 80192ec:	1433      	asrs	r3, r6, #16
 80192ee:	fb05 2303 	mla	r3, r5, r3, r2
 80192f2:	085a      	lsrs	r2, r3, #1
 80192f4:	07dd      	lsls	r5, r3, #31
 80192f6:	5cba      	ldrb	r2, [r7, r2]
 80192f8:	bf54      	ite	pl
 80192fa:	f002 020f 	andpl.w	r2, r2, #15
 80192fe:	1112      	asrmi	r2, r2, #4
 8019300:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019304:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019308:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801930c:	b2d2      	uxtb	r2, r2
 801930e:	2900      	cmp	r1, #0
 8019310:	d076      	beq.n	8019400 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8019312:	f103 0e01 	add.w	lr, r3, #1
 8019316:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801931a:	f01e 0f01 	tst.w	lr, #1
 801931e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019322:	bf0c      	ite	eq
 8019324:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019328:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801932c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019330:	fa5f f58c 	uxtb.w	r5, ip
 8019334:	9512      	str	r5, [sp, #72]	; 0x48
 8019336:	b300      	cbz	r0, 801937a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8019338:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801933a:	442b      	add	r3, r5
 801933c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019340:	07dd      	lsls	r5, r3, #31
 8019342:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019346:	bf54      	ite	pl
 8019348:	f00c 0c0f 	andpl.w	ip, ip, #15
 801934c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019350:	3301      	adds	r3, #1
 8019352:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019356:	fa5f f58c 	uxtb.w	r5, ip
 801935a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801935e:	950c      	str	r5, [sp, #48]	; 0x30
 8019360:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019364:	07dd      	lsls	r5, r3, #31
 8019366:	bf54      	ite	pl
 8019368:	f00c 0c0f 	andpl.w	ip, ip, #15
 801936c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019370:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019374:	fa5f f38c 	uxtb.w	r3, ip
 8019378:	9313      	str	r3, [sp, #76]	; 0x4c
 801937a:	b289      	uxth	r1, r1
 801937c:	b280      	uxth	r0, r0
 801937e:	fb01 f300 	mul.w	r3, r1, r0
 8019382:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8019386:	0109      	lsls	r1, r1, #4
 8019388:	b280      	uxth	r0, r0
 801938a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801938e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019390:	1ac9      	subs	r1, r1, r3
 8019392:	ebac 0c00 	sub.w	ip, ip, r0
 8019396:	b289      	uxth	r1, r1
 8019398:	4369      	muls	r1, r5
 801939a:	fa1f fc8c 	uxth.w	ip, ip
 801939e:	fb02 120c 	mla	r2, r2, ip, r1
 80193a2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80193a4:	fb00 2001 	mla	r0, r0, r1, r2
 80193a8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80193aa:	fb03 0302 	mla	r3, r3, r2, r0
 80193ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80193b2:	b1d3      	cbz	r3, 80193ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 80193b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80193b6:	4353      	muls	r3, r2
 80193b8:	1c5a      	adds	r2, r3, #1
 80193ba:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80193be:	4a0f      	ldr	r2, [pc, #60]	; (80193fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 80193c0:	121b      	asrs	r3, r3, #8
 80193c2:	6812      	ldr	r2, [r2, #0]
 80193c4:	2bff      	cmp	r3, #255	; 0xff
 80193c6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80193ca:	d12d      	bne.n	8019428 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 80193cc:	0953      	lsrs	r3, r2, #5
 80193ce:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80193d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80193d6:	f02c 0c07 	bic.w	ip, ip, #7
 80193da:	ea43 0c0c 	orr.w	ip, r3, ip
 80193de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80193e2:	ea4c 0202 	orr.w	r2, ip, r2
 80193e6:	f8a8 2000 	strh.w	r2, [r8]
 80193ea:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80193ec:	441c      	add	r4, r3
 80193ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80193f0:	f108 0802 	add.w	r8, r8, #2
 80193f4:	441e      	add	r6, r3
 80193f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80193fa:	e6ba      	b.n	8019172 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80193fc:	2000a4a0 	.word	0x2000a4a0
 8019400:	2800      	cmp	r0, #0
 8019402:	d0ba      	beq.n	801937a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8019404:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019406:	442b      	add	r3, r5
 8019408:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801940c:	07db      	lsls	r3, r3, #31
 801940e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019412:	bf54      	ite	pl
 8019414:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019418:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801941c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019420:	fa5f f38c 	uxtb.w	r3, ip
 8019424:	930c      	str	r3, [sp, #48]	; 0x30
 8019426:	e7a8      	b.n	801937a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8019428:	f8b8 e000 	ldrh.w	lr, [r8]
 801942c:	fa1f fa83 	uxth.w	sl, r3
 8019430:	ea4f 202e 	mov.w	r0, lr, asr #8
 8019434:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8019438:	43db      	mvns	r3, r3
 801943a:	b2db      	uxtb	r3, r3
 801943c:	fb11 f10a 	smulbb	r1, r1, sl
 8019440:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019444:	fb00 1003 	mla	r0, r0, r3, r1
 8019448:	b2d2      	uxtb	r2, r2
 801944a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801944e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019452:	fa5f fe8e 	uxtb.w	lr, lr
 8019456:	fb12 f20a 	smulbb	r2, r2, sl
 801945a:	fb0e 2203 	mla	r2, lr, r3, r2
 801945e:	fa5f fc8c 	uxtb.w	ip, ip
 8019462:	b280      	uxth	r0, r0
 8019464:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019468:	b292      	uxth	r2, r2
 801946a:	fb1c fc0a 	smulbb	ip, ip, sl
 801946e:	fb01 cc03 	mla	ip, r1, r3, ip
 8019472:	1c43      	adds	r3, r0, #1
 8019474:	1c51      	adds	r1, r2, #1
 8019476:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801947a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801947e:	fa1f fc8c 	uxth.w	ip, ip
 8019482:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8019486:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801948a:	4308      	orrs	r0, r1
 801948c:	f10c 0101 	add.w	r1, ip, #1
 8019490:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8019494:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019498:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801949c:	ea40 000c 	orr.w	r0, r0, ip
 80194a0:	f8a8 0000 	strh.w	r0, [r8]
 80194a4:	e7a1      	b.n	80193ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 80194a6:	b017      	add	sp, #92	; 0x5c
 80194a8:	ecbd 8b08 	vpop	{d8-d11}
 80194ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80194b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80194b4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 80194b8:	2c00      	cmp	r4, #0
 80194ba:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80194be:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80194c2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80194c6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 80194ca:	fb04 ce03 	mla	lr, r4, r3, ip
 80194ce:	db60      	blt.n	8019592 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 80194d0:	45a1      	cmp	r9, r4
 80194d2:	dd5e      	ble.n	8019592 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 80194d4:	f1bc 0f00 	cmp.w	ip, #0
 80194d8:	db59      	blt.n	801958e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 80194da:	45e0      	cmp	r8, ip
 80194dc:	dd57      	ble.n	801958e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 80194de:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80194e2:	f01e 0f01 	tst.w	lr, #1
 80194e6:	5c16      	ldrb	r6, [r2, r0]
 80194e8:	bf0c      	ite	eq
 80194ea:	f006 060f 	andeq.w	r6, r6, #15
 80194ee:	1136      	asrne	r6, r6, #4
 80194f0:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80194f4:	b2f6      	uxtb	r6, r6
 80194f6:	f11c 0001 	adds.w	r0, ip, #1
 80194fa:	d44d      	bmi.n	8019598 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 80194fc:	4580      	cmp	r8, r0
 80194fe:	dd4b      	ble.n	8019598 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019500:	2d00      	cmp	r5, #0
 8019502:	d04b      	beq.n	801959c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8019504:	f10e 0a01 	add.w	sl, lr, #1
 8019508:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801950c:	f01a 0f01 	tst.w	sl, #1
 8019510:	5c10      	ldrb	r0, [r2, r0]
 8019512:	bf0c      	ite	eq
 8019514:	f000 000f 	andeq.w	r0, r0, #15
 8019518:	1100      	asrne	r0, r0, #4
 801951a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801951e:	b2c0      	uxtb	r0, r0
 8019520:	3401      	adds	r4, #1
 8019522:	d43f      	bmi.n	80195a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019524:	45a1      	cmp	r9, r4
 8019526:	dd3d      	ble.n	80195a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019528:	2f00      	cmp	r7, #0
 801952a:	f000 8093 	beq.w	8019654 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801952e:	f1bc 0f00 	cmp.w	ip, #0
 8019532:	db35      	blt.n	80195a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019534:	45e0      	cmp	r8, ip
 8019536:	dd33      	ble.n	80195a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019538:	eb03 090e 	add.w	r9, r3, lr
 801953c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8019540:	f019 0f01 	tst.w	r9, #1
 8019544:	5d14      	ldrb	r4, [r2, r4]
 8019546:	bf0c      	ite	eq
 8019548:	f004 040f 	andeq.w	r4, r4, #15
 801954c:	1124      	asrne	r4, r4, #4
 801954e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8019552:	b2e4      	uxtb	r4, r4
 8019554:	f11c 0c01 	adds.w	ip, ip, #1
 8019558:	d427      	bmi.n	80195aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801955a:	45e0      	cmp	r8, ip
 801955c:	dd25      	ble.n	80195aa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801955e:	b335      	cbz	r5, 80195ae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8019560:	3301      	adds	r3, #1
 8019562:	449e      	add	lr, r3
 8019564:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8019568:	f01e 0f01 	tst.w	lr, #1
 801956c:	5cd2      	ldrb	r2, [r2, r3]
 801956e:	bf0c      	ite	eq
 8019570:	f002 020f 	andeq.w	r2, r2, #15
 8019574:	1112      	asrne	r2, r2, #4
 8019576:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801957a:	b2d3      	uxtb	r3, r2
 801957c:	2d0f      	cmp	r5, #15
 801957e:	d917      	bls.n	80195b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8019580:	4b37      	ldr	r3, [pc, #220]	; (8019660 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 8019582:	4a38      	ldr	r2, [pc, #224]	; (8019664 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 8019584:	4838      	ldr	r0, [pc, #224]	; (8019668 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8019586:	f240 11f9 	movw	r1, #505	; 0x1f9
 801958a:	f000 fc4b 	bl	8019e24 <__assert_func>
 801958e:	2600      	movs	r6, #0
 8019590:	e7b1      	b.n	80194f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8019592:	2000      	movs	r0, #0
 8019594:	4606      	mov	r6, r0
 8019596:	e7c3      	b.n	8019520 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8019598:	2000      	movs	r0, #0
 801959a:	e7c1      	b.n	8019520 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801959c:	4628      	mov	r0, r5
 801959e:	e7bf      	b.n	8019520 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80195a0:	2400      	movs	r4, #0
 80195a2:	e7d7      	b.n	8019554 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 80195a4:	2300      	movs	r3, #0
 80195a6:	461c      	mov	r4, r3
 80195a8:	e7e8      	b.n	801957c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80195aa:	2300      	movs	r3, #0
 80195ac:	e7e6      	b.n	801957c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80195ae:	462b      	mov	r3, r5
 80195b0:	2f0f      	cmp	r7, #15
 80195b2:	d8e5      	bhi.n	8019580 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 80195b4:	b2ad      	uxth	r5, r5
 80195b6:	b2bf      	uxth	r7, r7
 80195b8:	fb05 fc07 	mul.w	ip, r5, r7
 80195bc:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 80195c0:	012d      	lsls	r5, r5, #4
 80195c2:	b2bf      	uxth	r7, r7
 80195c4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 80195c8:	eba5 050c 	sub.w	r5, r5, ip
 80195cc:	1bd2      	subs	r2, r2, r7
 80195ce:	b2ad      	uxth	r5, r5
 80195d0:	b292      	uxth	r2, r2
 80195d2:	4368      	muls	r0, r5
 80195d4:	fb06 0002 	mla	r0, r6, r2, r0
 80195d8:	fb07 0404 	mla	r4, r7, r4, r0
 80195dc:	fb0c 4303 	mla	r3, ip, r3, r4
 80195e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80195e4:	b3a3      	cbz	r3, 8019650 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80195e6:	4a21      	ldr	r2, [pc, #132]	; (801966c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 80195e8:	880e      	ldrh	r6, [r1, #0]
 80195ea:	6815      	ldr	r5, [r2, #0]
 80195ec:	1234      	asrs	r4, r6, #8
 80195ee:	b29a      	uxth	r2, r3
 80195f0:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80195f4:	43db      	mvns	r3, r3
 80195f6:	b2db      	uxtb	r3, r3
 80195f8:	fb10 f002 	smulbb	r0, r0, r2
 80195fc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8019600:	fb04 0403 	mla	r4, r4, r3, r0
 8019604:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8019608:	10f0      	asrs	r0, r6, #3
 801960a:	b2ed      	uxtb	r5, r5
 801960c:	00f6      	lsls	r6, r6, #3
 801960e:	fb17 f702 	smulbb	r7, r7, r2
 8019612:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019616:	fb15 f202 	smulbb	r2, r5, r2
 801961a:	b2f6      	uxtb	r6, r6
 801961c:	b2a4      	uxth	r4, r4
 801961e:	fb00 7003 	mla	r0, r0, r3, r7
 8019622:	fb06 2303 	mla	r3, r6, r3, r2
 8019626:	b29a      	uxth	r2, r3
 8019628:	1c63      	adds	r3, r4, #1
 801962a:	b280      	uxth	r0, r0
 801962c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8019630:	1c53      	adds	r3, r2, #1
 8019632:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019636:	1c42      	adds	r2, r0, #1
 8019638:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801963c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8019640:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019644:	0940      	lsrs	r0, r0, #5
 8019646:	4323      	orrs	r3, r4
 8019648:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801964c:	4303      	orrs	r3, r0
 801964e:	800b      	strh	r3, [r1, #0]
 8019650:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019654:	2d0f      	cmp	r5, #15
 8019656:	d893      	bhi.n	8019580 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8019658:	463b      	mov	r3, r7
 801965a:	463c      	mov	r4, r7
 801965c:	e7aa      	b.n	80195b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801965e:	bf00      	nop
 8019660:	0801da2b 	.word	0x0801da2b
 8019664:	0801df5a 	.word	0x0801df5a
 8019668:	0801d9f8 	.word	0x0801d9f8
 801966c:	2000a4a0 	.word	0x2000a4a0

08019670 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019674:	ed2d 8b08 	vpush	{d8-d11}
 8019678:	b093      	sub	sp, #76	; 0x4c
 801967a:	461d      	mov	r5, r3
 801967c:	920c      	str	r2, [sp, #48]	; 0x30
 801967e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019680:	9107      	str	r1, [sp, #28]
 8019682:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8019686:	9011      	str	r0, [sp, #68]	; 0x44
 8019688:	6850      	ldr	r0, [r2, #4]
 801968a:	6812      	ldr	r2, [r2, #0]
 801968c:	fb00 1303 	mla	r3, r0, r3, r1
 8019690:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019694:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019696:	689b      	ldr	r3, [r3, #8]
 8019698:	3301      	adds	r3, #1
 801969a:	f023 0301 	bic.w	r3, r3, #1
 801969e:	9306      	str	r3, [sp, #24]
 80196a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80196a2:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80196a6:	681f      	ldr	r7, [r3, #0]
 80196a8:	eeb0 aa40 	vmov.f32	s20, s0
 80196ac:	eef0 9a60 	vmov.f32	s19, s1
 80196b0:	eeb0 9a41 	vmov.f32	s18, s2
 80196b4:	eeb0 8a62 	vmov.f32	s16, s5
 80196b8:	eef0 8a43 	vmov.f32	s17, s6
 80196bc:	eef0 ba44 	vmov.f32	s23, s8
 80196c0:	eeb0 ba64 	vmov.f32	s22, s9
 80196c4:	eef0 aa45 	vmov.f32	s21, s10
 80196c8:	9b07      	ldr	r3, [sp, #28]
 80196ca:	2b00      	cmp	r3, #0
 80196cc:	dc03      	bgt.n	80196d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80196ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80196d0:	2b00      	cmp	r3, #0
 80196d2:	f340 8267 	ble.w	8019ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 80196d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80196d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80196dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80196e0:	1e48      	subs	r0, r1, #1
 80196e2:	f102 3cff 	add.w	ip, r2, #4294967295
 80196e6:	2d00      	cmp	r5, #0
 80196e8:	f340 80b8 	ble.w	801985c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80196ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80196f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80196f4:	d406      	bmi.n	8019704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196f6:	4586      	cmp	lr, r0
 80196f8:	da04      	bge.n	8019704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196fa:	2b00      	cmp	r3, #0
 80196fc:	db02      	blt.n	8019704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80196fe:	4563      	cmp	r3, ip
 8019700:	f2c0 80ad 	blt.w	801985e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8019704:	f11e 0e01 	adds.w	lr, lr, #1
 8019708:	f100 80a0 	bmi.w	801984c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801970c:	4571      	cmp	r1, lr
 801970e:	f2c0 809d 	blt.w	801984c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8019712:	3301      	adds	r3, #1
 8019714:	f100 809a 	bmi.w	801984c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8019718:	429a      	cmp	r2, r3
 801971a:	f2c0 8097 	blt.w	801984c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801971e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8019722:	9509      	str	r5, [sp, #36]	; 0x24
 8019724:	46c8      	mov	r8, r9
 8019726:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019728:	2b00      	cmp	r3, #0
 801972a:	f340 80b6 	ble.w	801989a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801972e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8019732:	9308      	str	r3, [sp, #32]
 8019734:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019736:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801973a:	1423      	asrs	r3, r4, #16
 801973c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019740:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019744:	f100 813e 	bmi.w	80199c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019748:	f10c 3bff 	add.w	fp, ip, #4294967295
 801974c:	455b      	cmp	r3, fp
 801974e:	f280 8139 	bge.w	80199c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019752:	2800      	cmp	r0, #0
 8019754:	f2c0 8136 	blt.w	80199c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019758:	f10e 3bff 	add.w	fp, lr, #4294967295
 801975c:	4558      	cmp	r0, fp
 801975e:	f280 8131 	bge.w	80199c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019762:	9a06      	ldr	r2, [sp, #24]
 8019764:	fb00 3302 	mla	r3, r0, r2, r3
 8019768:	0858      	lsrs	r0, r3, #1
 801976a:	07da      	lsls	r2, r3, #31
 801976c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8019770:	9a08      	ldr	r2, [sp, #32]
 8019772:	bf54      	ite	pl
 8019774:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019778:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801977c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019780:	fa5f fc8c 	uxtb.w	ip, ip
 8019784:	2a00      	cmp	r2, #0
 8019786:	f000 80cb 	beq.w	8019920 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801978a:	1c58      	adds	r0, r3, #1
 801978c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8019790:	07c0      	lsls	r0, r0, #31
 8019792:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019796:	bf54      	ite	pl
 8019798:	f00e 0e0f 	andpl.w	lr, lr, #15
 801979c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80197a0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80197a4:	fa5f fe8e 	uxtb.w	lr, lr
 80197a8:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80197ac:	b1b9      	cbz	r1, 80197de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80197ae:	4453      	add	r3, sl
 80197b0:	0858      	lsrs	r0, r3, #1
 80197b2:	07da      	lsls	r2, r3, #31
 80197b4:	5c38      	ldrb	r0, [r7, r0]
 80197b6:	bf54      	ite	pl
 80197b8:	f000 000f 	andpl.w	r0, r0, #15
 80197bc:	1100      	asrmi	r0, r0, #4
 80197be:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80197c2:	b2c0      	uxtb	r0, r0
 80197c4:	900a      	str	r0, [sp, #40]	; 0x28
 80197c6:	1c58      	adds	r0, r3, #1
 80197c8:	0843      	lsrs	r3, r0, #1
 80197ca:	07c2      	lsls	r2, r0, #31
 80197cc:	5cfb      	ldrb	r3, [r7, r3]
 80197ce:	bf54      	ite	pl
 80197d0:	f003 030f 	andpl.w	r3, r3, #15
 80197d4:	111b      	asrmi	r3, r3, #4
 80197d6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80197da:	b2db      	uxtb	r3, r3
 80197dc:	930e      	str	r3, [sp, #56]	; 0x38
 80197de:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80197e2:	b289      	uxth	r1, r1
 80197e4:	fb02 f301 	mul.w	r3, r2, r1
 80197e8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80197ec:	0112      	lsls	r2, r2, #4
 80197ee:	b289      	uxth	r1, r1
 80197f0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80197f4:	1a40      	subs	r0, r0, r1
 80197f6:	fa1f fe80 	uxth.w	lr, r0
 80197fa:	1ad2      	subs	r2, r2, r3
 80197fc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80197fe:	b292      	uxth	r2, r2
 8019800:	4342      	muls	r2, r0
 8019802:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8019806:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019808:	fb01 c102 	mla	r1, r1, r2, ip
 801980c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801980e:	fb03 1302 	mla	r3, r3, r2, r1
 8019812:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019816:	2bff      	cmp	r3, #255	; 0xff
 8019818:	f040 8093 	bne.w	8019942 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801981c:	4bbe      	ldr	r3, [pc, #760]	; (8019b18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801981e:	681a      	ldr	r2, [r3, #0]
 8019820:	4bbe      	ldr	r3, [pc, #760]	; (8019b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8019822:	0951      	lsrs	r1, r2, #5
 8019824:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8019828:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801982c:	430b      	orrs	r3, r1
 801982e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019832:	4313      	orrs	r3, r2
 8019834:	f8a8 3000 	strh.w	r3, [r8]
 8019838:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801983a:	441c      	add	r4, r3
 801983c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801983e:	441e      	add	r6, r3
 8019840:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019842:	3b01      	subs	r3, #1
 8019844:	f108 0802 	add.w	r8, r8, #2
 8019848:	9309      	str	r3, [sp, #36]	; 0x24
 801984a:	e76c      	b.n	8019726 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801984c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801984e:	441c      	add	r4, r3
 8019850:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019852:	3d01      	subs	r5, #1
 8019854:	441e      	add	r6, r3
 8019856:	f109 0902 	add.w	r9, r9, #2
 801985a:	e744      	b.n	80196e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801985c:	d021      	beq.n	80198a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801985e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8019860:	1e6b      	subs	r3, r5, #1
 8019862:	fb00 4003 	mla	r0, r0, r3, r4
 8019866:	1400      	asrs	r0, r0, #16
 8019868:	f53f af59 	bmi.w	801971e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801986c:	3901      	subs	r1, #1
 801986e:	4288      	cmp	r0, r1
 8019870:	f6bf af55 	bge.w	801971e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019874:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8019876:	fb01 6303 	mla	r3, r1, r3, r6
 801987a:	141b      	asrs	r3, r3, #16
 801987c:	f53f af4f 	bmi.w	801971e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019880:	3a01      	subs	r2, #1
 8019882:	4293      	cmp	r3, r2
 8019884:	f6bf af4b 	bge.w	801971e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019888:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801988c:	9308      	str	r3, [sp, #32]
 801988e:	46a8      	mov	r8, r5
 8019890:	46ce      	mov	lr, r9
 8019892:	f1b8 0f00 	cmp.w	r8, #0
 8019896:	f300 80b5 	bgt.w	8019a04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801989a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801989e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80198a2:	9b07      	ldr	r3, [sp, #28]
 80198a4:	2b00      	cmp	r3, #0
 80198a6:	f340 817d 	ble.w	8019ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 80198aa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80198ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80198b2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80198b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80198b8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80198bc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80198c0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80198c4:	eef0 6a48 	vmov.f32	s13, s16
 80198c8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80198cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80198d0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80198d4:	ee16 4a90 	vmov	r4, s13
 80198d8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80198dc:	eef0 6a68 	vmov.f32	s13, s17
 80198e0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80198e4:	ee18 2a10 	vmov	r2, s16
 80198e8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80198ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80198f0:	ee18 2a90 	vmov	r2, s17
 80198f4:	9327      	str	r3, [sp, #156]	; 0x9c
 80198f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80198f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80198fc:	9328      	str	r3, [sp, #160]	; 0xa0
 80198fe:	9b07      	ldr	r3, [sp, #28]
 8019900:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019902:	3b01      	subs	r3, #1
 8019904:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019908:	9307      	str	r3, [sp, #28]
 801990a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801990c:	ee16 6a90 	vmov	r6, s13
 8019910:	bf14      	ite	ne
 8019912:	461d      	movne	r5, r3
 8019914:	4615      	moveq	r5, r2
 8019916:	eef0 8a67 	vmov.f32	s17, s15
 801991a:	eeb0 8a47 	vmov.f32	s16, s14
 801991e:	e6d3      	b.n	80196c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019920:	2900      	cmp	r1, #0
 8019922:	f43f af5c 	beq.w	80197de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8019926:	eb0a 0003 	add.w	r0, sl, r3
 801992a:	0843      	lsrs	r3, r0, #1
 801992c:	07c0      	lsls	r0, r0, #31
 801992e:	5cfb      	ldrb	r3, [r7, r3]
 8019930:	bf54      	ite	pl
 8019932:	f003 030f 	andpl.w	r3, r3, #15
 8019936:	111b      	asrmi	r3, r3, #4
 8019938:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801993c:	b2db      	uxtb	r3, r3
 801993e:	930a      	str	r3, [sp, #40]	; 0x28
 8019940:	e74d      	b.n	80197de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8019942:	2b00      	cmp	r3, #0
 8019944:	f43f af78 	beq.w	8019838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019948:	4a73      	ldr	r2, [pc, #460]	; (8019b18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801994a:	f8b8 c000 	ldrh.w	ip, [r8]
 801994e:	6810      	ldr	r0, [r2, #0]
 8019950:	fa1f fe83 	uxth.w	lr, r3
 8019954:	ea4f 212c 	mov.w	r1, ip, asr #8
 8019958:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801995c:	43db      	mvns	r3, r3
 801995e:	b2db      	uxtb	r3, r3
 8019960:	fb12 f20e 	smulbb	r2, r2, lr
 8019964:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019968:	fb01 2103 	mla	r1, r1, r3, r2
 801996c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8019970:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019974:	b2c0      	uxtb	r0, r0
 8019976:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801997a:	fb1b fb0e 	smulbb	fp, fp, lr
 801997e:	b289      	uxth	r1, r1
 8019980:	fb10 fe0e 	smulbb	lr, r0, lr
 8019984:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019988:	fa5f fc8c 	uxtb.w	ip, ip
 801998c:	fb02 b203 	mla	r2, r2, r3, fp
 8019990:	1c48      	adds	r0, r1, #1
 8019992:	fb0c e303 	mla	r3, ip, r3, lr
 8019996:	b292      	uxth	r2, r2
 8019998:	b29b      	uxth	r3, r3
 801999a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801999e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80199a2:	f102 0b01 	add.w	fp, r2, #1
 80199a6:	1c59      	adds	r1, r3, #1
 80199a8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80199ac:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80199b0:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80199b4:	0952      	lsrs	r2, r2, #5
 80199b6:	4301      	orrs	r1, r0
 80199b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80199bc:	4311      	orrs	r1, r2
 80199be:	f8a8 1000 	strh.w	r1, [r8]
 80199c2:	e739      	b.n	8019838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80199c4:	f113 0b01 	adds.w	fp, r3, #1
 80199c8:	f53f af36 	bmi.w	8019838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80199cc:	45dc      	cmp	ip, fp
 80199ce:	f6ff af33 	blt.w	8019838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80199d2:	f110 0b01 	adds.w	fp, r0, #1
 80199d6:	f53f af2f 	bmi.w	8019838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80199da:	45de      	cmp	lr, fp
 80199dc:	f6ff af2c 	blt.w	8019838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80199e0:	9a08      	ldr	r2, [sp, #32]
 80199e2:	9302      	str	r3, [sp, #8]
 80199e4:	fa0f f38e 	sxth.w	r3, lr
 80199e8:	9301      	str	r3, [sp, #4]
 80199ea:	fa0f f38c 	sxth.w	r3, ip
 80199ee:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80199f2:	9105      	str	r1, [sp, #20]
 80199f4:	9300      	str	r3, [sp, #0]
 80199f6:	463a      	mov	r2, r7
 80199f8:	4653      	mov	r3, sl
 80199fa:	4641      	mov	r1, r8
 80199fc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80199fe:	f7ff fd57 	bl	80194b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8019a02:	e719      	b.n	8019838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019a04:	9906      	ldr	r1, [sp, #24]
 8019a06:	1422      	asrs	r2, r4, #16
 8019a08:	1433      	asrs	r3, r6, #16
 8019a0a:	fb01 2303 	mla	r3, r1, r3, r2
 8019a0e:	085a      	lsrs	r2, r3, #1
 8019a10:	07d9      	lsls	r1, r3, #31
 8019a12:	5cba      	ldrb	r2, [r7, r2]
 8019a14:	bf54      	ite	pl
 8019a16:	f002 020f 	andpl.w	r2, r2, #15
 8019a1a:	1112      	asrmi	r2, r2, #4
 8019a1c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019a20:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019a24:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019a28:	b2d2      	uxtb	r2, r2
 8019a2a:	2800      	cmp	r0, #0
 8019a2c:	d062      	beq.n	8019af4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8019a2e:	f103 0a01 	add.w	sl, r3, #1
 8019a32:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8019a36:	f01a 0f01 	tst.w	sl, #1
 8019a3a:	5c79      	ldrb	r1, [r7, r1]
 8019a3c:	bf0c      	ite	eq
 8019a3e:	f001 010f 	andeq.w	r1, r1, #15
 8019a42:	1109      	asrne	r1, r1, #4
 8019a44:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019a48:	b2c9      	uxtb	r1, r1
 8019a4a:	910f      	str	r1, [sp, #60]	; 0x3c
 8019a4c:	f1bc 0f00 	cmp.w	ip, #0
 8019a50:	d019      	beq.n	8019a86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8019a52:	9908      	ldr	r1, [sp, #32]
 8019a54:	440b      	add	r3, r1
 8019a56:	0859      	lsrs	r1, r3, #1
 8019a58:	f013 0f01 	tst.w	r3, #1
 8019a5c:	5c79      	ldrb	r1, [r7, r1]
 8019a5e:	bf0c      	ite	eq
 8019a60:	f001 010f 	andeq.w	r1, r1, #15
 8019a64:	1109      	asrne	r1, r1, #4
 8019a66:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019a6a:	b2c9      	uxtb	r1, r1
 8019a6c:	3301      	adds	r3, #1
 8019a6e:	910b      	str	r1, [sp, #44]	; 0x2c
 8019a70:	0859      	lsrs	r1, r3, #1
 8019a72:	07db      	lsls	r3, r3, #31
 8019a74:	5c79      	ldrb	r1, [r7, r1]
 8019a76:	bf54      	ite	pl
 8019a78:	f001 010f 	andpl.w	r1, r1, #15
 8019a7c:	1109      	asrmi	r1, r1, #4
 8019a7e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019a82:	b2c9      	uxtb	r1, r1
 8019a84:	9110      	str	r1, [sp, #64]	; 0x40
 8019a86:	b280      	uxth	r0, r0
 8019a88:	fa1f fc8c 	uxth.w	ip, ip
 8019a8c:	fb00 f30c 	mul.w	r3, r0, ip
 8019a90:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8019a94:	0100      	lsls	r0, r0, #4
 8019a96:	fa1f fc8c 	uxth.w	ip, ip
 8019a9a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8019a9e:	eba1 010c 	sub.w	r1, r1, ip
 8019aa2:	fa1f fa81 	uxth.w	sl, r1
 8019aa6:	1ac0      	subs	r0, r0, r3
 8019aa8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8019aaa:	b280      	uxth	r0, r0
 8019aac:	4348      	muls	r0, r1
 8019aae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8019ab0:	fb02 020a 	mla	r2, r2, sl, r0
 8019ab4:	fb0c 2c01 	mla	ip, ip, r1, r2
 8019ab8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019aba:	fb03 c302 	mla	r3, r3, r2, ip
 8019abe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019ac2:	2bff      	cmp	r3, #255	; 0xff
 8019ac4:	d12c      	bne.n	8019b20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8019ac6:	4b14      	ldr	r3, [pc, #80]	; (8019b18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8019ac8:	681a      	ldr	r2, [r3, #0]
 8019aca:	4b14      	ldr	r3, [pc, #80]	; (8019b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8019acc:	0951      	lsrs	r1, r2, #5
 8019ace:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8019ad2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019ad6:	430b      	orrs	r3, r1
 8019ad8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019adc:	4313      	orrs	r3, r2
 8019ade:	f8ae 3000 	strh.w	r3, [lr]
 8019ae2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019ae4:	441c      	add	r4, r3
 8019ae6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019ae8:	f10e 0e02 	add.w	lr, lr, #2
 8019aec:	441e      	add	r6, r3
 8019aee:	f108 38ff 	add.w	r8, r8, #4294967295
 8019af2:	e6ce      	b.n	8019892 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8019af4:	f1bc 0f00 	cmp.w	ip, #0
 8019af8:	d0c5      	beq.n	8019a86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8019afa:	9908      	ldr	r1, [sp, #32]
 8019afc:	440b      	add	r3, r1
 8019afe:	0859      	lsrs	r1, r3, #1
 8019b00:	07db      	lsls	r3, r3, #31
 8019b02:	5c79      	ldrb	r1, [r7, r1]
 8019b04:	bf54      	ite	pl
 8019b06:	f001 010f 	andpl.w	r1, r1, #15
 8019b0a:	1109      	asrmi	r1, r1, #4
 8019b0c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019b10:	b2c9      	uxtb	r1, r1
 8019b12:	910b      	str	r1, [sp, #44]	; 0x2c
 8019b14:	e7b7      	b.n	8019a86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 8019b16:	bf00      	nop
 8019b18:	2000a4a0 	.word	0x2000a4a0
 8019b1c:	fffff800 	.word	0xfffff800
 8019b20:	2b00      	cmp	r3, #0
 8019b22:	d0de      	beq.n	8019ae2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8019b24:	4a22      	ldr	r2, [pc, #136]	; (8019bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 8019b26:	f8be c000 	ldrh.w	ip, [lr]
 8019b2a:	6810      	ldr	r0, [r2, #0]
 8019b2c:	fa1f fa83 	uxth.w	sl, r3
 8019b30:	ea4f 212c 	mov.w	r1, ip, asr #8
 8019b34:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8019b38:	43db      	mvns	r3, r3
 8019b3a:	b2db      	uxtb	r3, r3
 8019b3c:	fb12 f20a 	smulbb	r2, r2, sl
 8019b40:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019b44:	fb01 2103 	mla	r1, r1, r3, r2
 8019b48:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8019b4c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019b50:	b2c0      	uxtb	r0, r0
 8019b52:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019b56:	fa5f fc8c 	uxtb.w	ip, ip
 8019b5a:	fb10 f00a 	smulbb	r0, r0, sl
 8019b5e:	fb0c 0003 	mla	r0, ip, r3, r0
 8019b62:	b289      	uxth	r1, r1
 8019b64:	fb1b fb0a 	smulbb	fp, fp, sl
 8019b68:	b280      	uxth	r0, r0
 8019b6a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019b6e:	fb02 b203 	mla	r2, r2, r3, fp
 8019b72:	1c4b      	adds	r3, r1, #1
 8019b74:	f100 0b01 	add.w	fp, r0, #1
 8019b78:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019b7c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8019b80:	b292      	uxth	r2, r2
 8019b82:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8019b86:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019b8a:	ea4b 0101 	orr.w	r1, fp, r1
 8019b8e:	f102 0b01 	add.w	fp, r2, #1
 8019b92:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8019b96:	0952      	lsrs	r2, r2, #5
 8019b98:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019b9c:	4311      	orrs	r1, r2
 8019b9e:	f8ae 1000 	strh.w	r1, [lr]
 8019ba2:	e79e      	b.n	8019ae2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8019ba4:	b013      	add	sp, #76	; 0x4c
 8019ba6:	ecbd 8b08 	vpop	{d8-d11}
 8019baa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019bae:	bf00      	nop
 8019bb0:	2000a4a0 	.word	0x2000a4a0

08019bb4 <CRC_Lock>:
 8019bb4:	b530      	push	{r4, r5, lr}
 8019bb6:	4a20      	ldr	r2, [pc, #128]	; (8019c38 <CRC_Lock+0x84>)
 8019bb8:	6813      	ldr	r3, [r2, #0]
 8019bba:	f023 0301 	bic.w	r3, r3, #1
 8019bbe:	6013      	str	r3, [r2, #0]
 8019bc0:	4b1e      	ldr	r3, [pc, #120]	; (8019c3c <CRC_Lock+0x88>)
 8019bc2:	681a      	ldr	r2, [r3, #0]
 8019bc4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8019bc8:	4022      	ands	r2, r4
 8019bca:	f24c 2540 	movw	r5, #49728	; 0xc240
 8019bce:	42aa      	cmp	r2, r5
 8019bd0:	d005      	beq.n	8019bde <CRC_Lock+0x2a>
 8019bd2:	681b      	ldr	r3, [r3, #0]
 8019bd4:	f24c 2270 	movw	r2, #49776	; 0xc270
 8019bd8:	4023      	ands	r3, r4
 8019bda:	4293      	cmp	r3, r2
 8019bdc:	d124      	bne.n	8019c28 <CRC_Lock+0x74>
 8019bde:	4b18      	ldr	r3, [pc, #96]	; (8019c40 <CRC_Lock+0x8c>)
 8019be0:	681b      	ldr	r3, [r3, #0]
 8019be2:	bb0b      	cbnz	r3, 8019c28 <CRC_Lock+0x74>
 8019be4:	4b17      	ldr	r3, [pc, #92]	; (8019c44 <CRC_Lock+0x90>)
 8019be6:	681a      	ldr	r2, [r3, #0]
 8019be8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8019bec:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8019bf0:	d00d      	beq.n	8019c0e <CRC_Lock+0x5a>
 8019bf2:	681a      	ldr	r2, [r3, #0]
 8019bf4:	f240 4483 	movw	r4, #1155	; 0x483
 8019bf8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8019bfc:	42a2      	cmp	r2, r4
 8019bfe:	d006      	beq.n	8019c0e <CRC_Lock+0x5a>
 8019c00:	681b      	ldr	r3, [r3, #0]
 8019c02:	f240 4285 	movw	r2, #1157	; 0x485
 8019c06:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8019c0a:	4293      	cmp	r3, r2
 8019c0c:	d10c      	bne.n	8019c28 <CRC_Lock+0x74>
 8019c0e:	4b0e      	ldr	r3, [pc, #56]	; (8019c48 <CRC_Lock+0x94>)
 8019c10:	2201      	movs	r2, #1
 8019c12:	601a      	str	r2, [r3, #0]
 8019c14:	681a      	ldr	r2, [r3, #0]
 8019c16:	2a00      	cmp	r2, #0
 8019c18:	d1fc      	bne.n	8019c14 <CRC_Lock+0x60>
 8019c1a:	4b0c      	ldr	r3, [pc, #48]	; (8019c4c <CRC_Lock+0x98>)
 8019c1c:	6018      	str	r0, [r3, #0]
 8019c1e:	6818      	ldr	r0, [r3, #0]
 8019c20:	1a43      	subs	r3, r0, r1
 8019c22:	4258      	negs	r0, r3
 8019c24:	4158      	adcs	r0, r3
 8019c26:	bd30      	pop	{r4, r5, pc}
 8019c28:	4b09      	ldr	r3, [pc, #36]	; (8019c50 <CRC_Lock+0x9c>)
 8019c2a:	2201      	movs	r2, #1
 8019c2c:	601a      	str	r2, [r3, #0]
 8019c2e:	681a      	ldr	r2, [r3, #0]
 8019c30:	2a00      	cmp	r2, #0
 8019c32:	d1fc      	bne.n	8019c2e <CRC_Lock+0x7a>
 8019c34:	4b07      	ldr	r3, [pc, #28]	; (8019c54 <CRC_Lock+0xa0>)
 8019c36:	e7f1      	b.n	8019c1c <CRC_Lock+0x68>
 8019c38:	e0002000 	.word	0xe0002000
 8019c3c:	e000ed00 	.word	0xe000ed00
 8019c40:	e0042000 	.word	0xe0042000
 8019c44:	5c001000 	.word	0x5c001000
 8019c48:	58024c08 	.word	0x58024c08
 8019c4c:	58024c00 	.word	0x58024c00
 8019c50:	40023008 	.word	0x40023008
 8019c54:	40023000 	.word	0x40023000

08019c58 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8019c58:	6101      	str	r1, [r0, #16]
 8019c5a:	4770      	bx	lr

08019c5c <_ZN8touchgfx8Gestures4tickEv>:
 8019c5c:	7b83      	ldrb	r3, [r0, #14]
 8019c5e:	b14b      	cbz	r3, 8019c74 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8019c60:	8903      	ldrh	r3, [r0, #8]
 8019c62:	3301      	adds	r3, #1
 8019c64:	b29b      	uxth	r3, r3
 8019c66:	2b07      	cmp	r3, #7
 8019c68:	8103      	strh	r3, [r0, #8]
 8019c6a:	bf81      	itttt	hi
 8019c6c:	2300      	movhi	r3, #0
 8019c6e:	8143      	strhhi	r3, [r0, #10]
 8019c70:	8183      	strhhi	r3, [r0, #12]
 8019c72:	7383      	strbhi	r3, [r0, #14]
 8019c74:	4770      	bx	lr
	...

08019c78 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8019c78:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8019c7c:	4698      	mov	r8, r3
 8019c7e:	8883      	ldrh	r3, [r0, #4]
 8019c80:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019c84:	eba8 0303 	sub.w	r3, r8, r3
 8019c88:	b21b      	sxth	r3, r3
 8019c8a:	4604      	mov	r4, r0
 8019c8c:	2b00      	cmp	r3, #0
 8019c8e:	4617      	mov	r7, r2
 8019c90:	4a18      	ldr	r2, [pc, #96]	; (8019cf4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8019c92:	9200      	str	r2, [sp, #0]
 8019c94:	bfb8      	it	lt
 8019c96:	425b      	neglt	r3, r3
 8019c98:	8aa2      	ldrh	r2, [r4, #20]
 8019c9a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8019c9e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8019ca2:	b21b      	sxth	r3, r3
 8019ca4:	460e      	mov	r6, r1
 8019ca6:	4293      	cmp	r3, r2
 8019ca8:	88c1      	ldrh	r1, [r0, #6]
 8019caa:	f8ad 1008 	strh.w	r1, [sp, #8]
 8019cae:	f04f 0000 	mov.w	r0, #0
 8019cb2:	f88d 0004 	strb.w	r0, [sp, #4]
 8019cb6:	f8ad 500c 	strh.w	r5, [sp, #12]
 8019cba:	dc07      	bgt.n	8019ccc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8019cbc:	1a69      	subs	r1, r5, r1
 8019cbe:	b209      	sxth	r1, r1
 8019cc0:	2900      	cmp	r1, #0
 8019cc2:	bfb8      	it	lt
 8019cc4:	4249      	neglt	r1, r1
 8019cc6:	b209      	sxth	r1, r1
 8019cc8:	428a      	cmp	r2, r1
 8019cca:	da10      	bge.n	8019cee <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8019ccc:	6920      	ldr	r0, [r4, #16]
 8019cce:	6803      	ldr	r3, [r0, #0]
 8019cd0:	4669      	mov	r1, sp
 8019cd2:	685b      	ldr	r3, [r3, #4]
 8019cd4:	4798      	blx	r3
 8019cd6:	eba8 0606 	sub.w	r6, r8, r6
 8019cda:	2300      	movs	r3, #0
 8019cdc:	1bef      	subs	r7, r5, r7
 8019cde:	2001      	movs	r0, #1
 8019ce0:	8123      	strh	r3, [r4, #8]
 8019ce2:	8166      	strh	r6, [r4, #10]
 8019ce4:	81a7      	strh	r7, [r4, #12]
 8019ce6:	f8a4 8004 	strh.w	r8, [r4, #4]
 8019cea:	80e5      	strh	r5, [r4, #6]
 8019cec:	73a0      	strb	r0, [r4, #14]
 8019cee:	b004      	add	sp, #16
 8019cf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019cf4:	0801ce1c 	.word	0x0801ce1c

08019cf8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8019cf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019cfa:	461e      	mov	r6, r3
 8019cfc:	1e4b      	subs	r3, r1, #1
 8019cfe:	2b01      	cmp	r3, #1
 8019d00:	b085      	sub	sp, #20
 8019d02:	4604      	mov	r4, r0
 8019d04:	460d      	mov	r5, r1
 8019d06:	4617      	mov	r7, r2
 8019d08:	d84b      	bhi.n	8019da2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8019d0a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019d0e:	1cd3      	adds	r3, r2, #3
 8019d10:	b29b      	uxth	r3, r3
 8019d12:	2b06      	cmp	r3, #6
 8019d14:	d916      	bls.n	8019d44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8019d16:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8019db8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8019d1a:	f8cd c004 	str.w	ip, [sp, #4]
 8019d1e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019d22:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019d26:	6900      	ldr	r0, [r0, #16]
 8019d28:	f8ad 100c 	strh.w	r1, [sp, #12]
 8019d2c:	f04f 0c00 	mov.w	ip, #0
 8019d30:	f88d c008 	strb.w	ip, [sp, #8]
 8019d34:	f8ad 200a 	strh.w	r2, [sp, #10]
 8019d38:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019d3c:	6803      	ldr	r3, [r0, #0]
 8019d3e:	a901      	add	r1, sp, #4
 8019d40:	689b      	ldr	r3, [r3, #8]
 8019d42:	4798      	blx	r3
 8019d44:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8019d48:	1cd3      	adds	r3, r2, #3
 8019d4a:	b29b      	uxth	r3, r3
 8019d4c:	2b06      	cmp	r3, #6
 8019d4e:	d916      	bls.n	8019d7e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8019d50:	f8df c064 	ldr.w	ip, [pc, #100]	; 8019db8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8019d54:	f8cd c004 	str.w	ip, [sp, #4]
 8019d58:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019d5c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019d60:	6920      	ldr	r0, [r4, #16]
 8019d62:	f8ad 100c 	strh.w	r1, [sp, #12]
 8019d66:	f04f 0c01 	mov.w	ip, #1
 8019d6a:	f88d c008 	strb.w	ip, [sp, #8]
 8019d6e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8019d72:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019d76:	6803      	ldr	r3, [r0, #0]
 8019d78:	a901      	add	r1, sp, #4
 8019d7a:	689b      	ldr	r3, [r3, #8]
 8019d7c:	4798      	blx	r3
 8019d7e:	4b0d      	ldr	r3, [pc, #52]	; (8019db4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8019d80:	9301      	str	r3, [sp, #4]
 8019d82:	6920      	ldr	r0, [r4, #16]
 8019d84:	f88d 5008 	strb.w	r5, [sp, #8]
 8019d88:	2300      	movs	r3, #0
 8019d8a:	f8ad 700a 	strh.w	r7, [sp, #10]
 8019d8e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8019d92:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019d96:	6803      	ldr	r3, [r0, #0]
 8019d98:	a901      	add	r1, sp, #4
 8019d9a:	681b      	ldr	r3, [r3, #0]
 8019d9c:	4798      	blx	r3
 8019d9e:	b005      	add	sp, #20
 8019da0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019da2:	2900      	cmp	r1, #0
 8019da4:	d1eb      	bne.n	8019d7e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8019da6:	80a2      	strh	r2, [r4, #4]
 8019da8:	80c6      	strh	r6, [r0, #6]
 8019daa:	60a1      	str	r1, [r4, #8]
 8019dac:	81a1      	strh	r1, [r4, #12]
 8019dae:	73a1      	strb	r1, [r4, #14]
 8019db0:	e7e5      	b.n	8019d7e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8019db2:	bf00      	nop
 8019db4:	0801ce08 	.word	0x0801ce08
 8019db8:	0801ce30 	.word	0x0801ce30

08019dbc <__aeabi_atexit>:
 8019dbc:	460b      	mov	r3, r1
 8019dbe:	4601      	mov	r1, r0
 8019dc0:	4618      	mov	r0, r3
 8019dc2:	f000 b853 	b.w	8019e6c <__cxa_atexit>

08019dc6 <_ZdlPvj>:
 8019dc6:	f000 b812 	b.w	8019dee <_ZdlPv>

08019dca <__cxa_guard_acquire>:
 8019dca:	6803      	ldr	r3, [r0, #0]
 8019dcc:	07db      	lsls	r3, r3, #31
 8019dce:	d406      	bmi.n	8019dde <__cxa_guard_acquire+0x14>
 8019dd0:	7843      	ldrb	r3, [r0, #1]
 8019dd2:	b103      	cbz	r3, 8019dd6 <__cxa_guard_acquire+0xc>
 8019dd4:	deff      	udf	#255	; 0xff
 8019dd6:	2301      	movs	r3, #1
 8019dd8:	7043      	strb	r3, [r0, #1]
 8019dda:	4618      	mov	r0, r3
 8019ddc:	4770      	bx	lr
 8019dde:	2000      	movs	r0, #0
 8019de0:	4770      	bx	lr

08019de2 <__cxa_guard_release>:
 8019de2:	2301      	movs	r3, #1
 8019de4:	6003      	str	r3, [r0, #0]
 8019de6:	4770      	bx	lr

08019de8 <__cxa_pure_virtual>:
 8019de8:	b508      	push	{r3, lr}
 8019dea:	f000 f80f 	bl	8019e0c <_ZSt9terminatev>

08019dee <_ZdlPv>:
 8019dee:	f000 b88f 	b.w	8019f10 <free>

08019df2 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8019df2:	b508      	push	{r3, lr}
 8019df4:	4780      	blx	r0
 8019df6:	f000 f80e 	bl	8019e16 <abort>
	...

08019dfc <_ZSt13get_terminatev>:
 8019dfc:	4b02      	ldr	r3, [pc, #8]	; (8019e08 <_ZSt13get_terminatev+0xc>)
 8019dfe:	6818      	ldr	r0, [r3, #0]
 8019e00:	f3bf 8f5b 	dmb	ish
 8019e04:	4770      	bx	lr
 8019e06:	bf00      	nop
 8019e08:	200000d4 	.word	0x200000d4

08019e0c <_ZSt9terminatev>:
 8019e0c:	b508      	push	{r3, lr}
 8019e0e:	f7ff fff5 	bl	8019dfc <_ZSt13get_terminatev>
 8019e12:	f7ff ffee 	bl	8019df2 <_ZN10__cxxabiv111__terminateEPFvvE>

08019e16 <abort>:
 8019e16:	b508      	push	{r3, lr}
 8019e18:	2006      	movs	r0, #6
 8019e1a:	f000 fc9d 	bl	801a758 <raise>
 8019e1e:	2001      	movs	r0, #1
 8019e20:	f7e8 f8b6 	bl	8001f90 <_exit>

08019e24 <__assert_func>:
 8019e24:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8019e26:	4614      	mov	r4, r2
 8019e28:	461a      	mov	r2, r3
 8019e2a:	4b09      	ldr	r3, [pc, #36]	; (8019e50 <__assert_func+0x2c>)
 8019e2c:	681b      	ldr	r3, [r3, #0]
 8019e2e:	4605      	mov	r5, r0
 8019e30:	68d8      	ldr	r0, [r3, #12]
 8019e32:	b14c      	cbz	r4, 8019e48 <__assert_func+0x24>
 8019e34:	4b07      	ldr	r3, [pc, #28]	; (8019e54 <__assert_func+0x30>)
 8019e36:	9100      	str	r1, [sp, #0]
 8019e38:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8019e3c:	4906      	ldr	r1, [pc, #24]	; (8019e58 <__assert_func+0x34>)
 8019e3e:	462b      	mov	r3, r5
 8019e40:	f000 f828 	bl	8019e94 <fiprintf>
 8019e44:	f7ff ffe7 	bl	8019e16 <abort>
 8019e48:	4b04      	ldr	r3, [pc, #16]	; (8019e5c <__assert_func+0x38>)
 8019e4a:	461c      	mov	r4, r3
 8019e4c:	e7f3      	b.n	8019e36 <__assert_func+0x12>
 8019e4e:	bf00      	nop
 8019e50:	200000d8 	.word	0x200000d8
 8019e54:	0801e228 	.word	0x0801e228
 8019e58:	0801e235 	.word	0x0801e235
 8019e5c:	0801e263 	.word	0x0801e263

08019e60 <atexit>:
 8019e60:	2300      	movs	r3, #0
 8019e62:	4601      	mov	r1, r0
 8019e64:	461a      	mov	r2, r3
 8019e66:	4618      	mov	r0, r3
 8019e68:	f000 bd52 	b.w	801a910 <__register_exitproc>

08019e6c <__cxa_atexit>:
 8019e6c:	b510      	push	{r4, lr}
 8019e6e:	4c05      	ldr	r4, [pc, #20]	; (8019e84 <__cxa_atexit+0x18>)
 8019e70:	4613      	mov	r3, r2
 8019e72:	b12c      	cbz	r4, 8019e80 <__cxa_atexit+0x14>
 8019e74:	460a      	mov	r2, r1
 8019e76:	4601      	mov	r1, r0
 8019e78:	2002      	movs	r0, #2
 8019e7a:	f000 fd49 	bl	801a910 <__register_exitproc>
 8019e7e:	bd10      	pop	{r4, pc}
 8019e80:	4620      	mov	r0, r4
 8019e82:	e7fc      	b.n	8019e7e <__cxa_atexit+0x12>
 8019e84:	0801a911 	.word	0x0801a911

08019e88 <__errno>:
 8019e88:	4b01      	ldr	r3, [pc, #4]	; (8019e90 <__errno+0x8>)
 8019e8a:	6818      	ldr	r0, [r3, #0]
 8019e8c:	4770      	bx	lr
 8019e8e:	bf00      	nop
 8019e90:	200000d8 	.word	0x200000d8

08019e94 <fiprintf>:
 8019e94:	b40e      	push	{r1, r2, r3}
 8019e96:	b503      	push	{r0, r1, lr}
 8019e98:	4601      	mov	r1, r0
 8019e9a:	ab03      	add	r3, sp, #12
 8019e9c:	4805      	ldr	r0, [pc, #20]	; (8019eb4 <fiprintf+0x20>)
 8019e9e:	f853 2b04 	ldr.w	r2, [r3], #4
 8019ea2:	6800      	ldr	r0, [r0, #0]
 8019ea4:	9301      	str	r3, [sp, #4]
 8019ea6:	f000 f95b 	bl	801a160 <_vfiprintf_r>
 8019eaa:	b002      	add	sp, #8
 8019eac:	f85d eb04 	ldr.w	lr, [sp], #4
 8019eb0:	b003      	add	sp, #12
 8019eb2:	4770      	bx	lr
 8019eb4:	200000d8 	.word	0x200000d8

08019eb8 <__libc_init_array>:
 8019eb8:	b570      	push	{r4, r5, r6, lr}
 8019eba:	4d0d      	ldr	r5, [pc, #52]	; (8019ef0 <__libc_init_array+0x38>)
 8019ebc:	4c0d      	ldr	r4, [pc, #52]	; (8019ef4 <__libc_init_array+0x3c>)
 8019ebe:	1b64      	subs	r4, r4, r5
 8019ec0:	10a4      	asrs	r4, r4, #2
 8019ec2:	2600      	movs	r6, #0
 8019ec4:	42a6      	cmp	r6, r4
 8019ec6:	d109      	bne.n	8019edc <__libc_init_array+0x24>
 8019ec8:	4d0b      	ldr	r5, [pc, #44]	; (8019ef8 <__libc_init_array+0x40>)
 8019eca:	4c0c      	ldr	r4, [pc, #48]	; (8019efc <__libc_init_array+0x44>)
 8019ecc:	f001 f85a 	bl	801af84 <_init>
 8019ed0:	1b64      	subs	r4, r4, r5
 8019ed2:	10a4      	asrs	r4, r4, #2
 8019ed4:	2600      	movs	r6, #0
 8019ed6:	42a6      	cmp	r6, r4
 8019ed8:	d105      	bne.n	8019ee6 <__libc_init_array+0x2e>
 8019eda:	bd70      	pop	{r4, r5, r6, pc}
 8019edc:	f855 3b04 	ldr.w	r3, [r5], #4
 8019ee0:	4798      	blx	r3
 8019ee2:	3601      	adds	r6, #1
 8019ee4:	e7ee      	b.n	8019ec4 <__libc_init_array+0xc>
 8019ee6:	f855 3b04 	ldr.w	r3, [r5], #4
 8019eea:	4798      	blx	r3
 8019eec:	3601      	adds	r6, #1
 8019eee:	e7f2      	b.n	8019ed6 <__libc_init_array+0x1e>
 8019ef0:	0801e320 	.word	0x0801e320
 8019ef4:	0801e320 	.word	0x0801e320
 8019ef8:	0801e320 	.word	0x0801e320
 8019efc:	0801e338 	.word	0x0801e338

08019f00 <malloc>:
 8019f00:	4b02      	ldr	r3, [pc, #8]	; (8019f0c <malloc+0xc>)
 8019f02:	4601      	mov	r1, r0
 8019f04:	6818      	ldr	r0, [r3, #0]
 8019f06:	f000 b88d 	b.w	801a024 <_malloc_r>
 8019f0a:	bf00      	nop
 8019f0c:	200000d8 	.word	0x200000d8

08019f10 <free>:
 8019f10:	4b02      	ldr	r3, [pc, #8]	; (8019f1c <free+0xc>)
 8019f12:	4601      	mov	r1, r0
 8019f14:	6818      	ldr	r0, [r3, #0]
 8019f16:	f000 b819 	b.w	8019f4c <_free_r>
 8019f1a:	bf00      	nop
 8019f1c:	200000d8 	.word	0x200000d8

08019f20 <memcpy>:
 8019f20:	440a      	add	r2, r1
 8019f22:	4291      	cmp	r1, r2
 8019f24:	f100 33ff 	add.w	r3, r0, #4294967295
 8019f28:	d100      	bne.n	8019f2c <memcpy+0xc>
 8019f2a:	4770      	bx	lr
 8019f2c:	b510      	push	{r4, lr}
 8019f2e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8019f32:	f803 4f01 	strb.w	r4, [r3, #1]!
 8019f36:	4291      	cmp	r1, r2
 8019f38:	d1f9      	bne.n	8019f2e <memcpy+0xe>
 8019f3a:	bd10      	pop	{r4, pc}

08019f3c <memset>:
 8019f3c:	4402      	add	r2, r0
 8019f3e:	4603      	mov	r3, r0
 8019f40:	4293      	cmp	r3, r2
 8019f42:	d100      	bne.n	8019f46 <memset+0xa>
 8019f44:	4770      	bx	lr
 8019f46:	f803 1b01 	strb.w	r1, [r3], #1
 8019f4a:	e7f9      	b.n	8019f40 <memset+0x4>

08019f4c <_free_r>:
 8019f4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019f4e:	2900      	cmp	r1, #0
 8019f50:	d044      	beq.n	8019fdc <_free_r+0x90>
 8019f52:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8019f56:	9001      	str	r0, [sp, #4]
 8019f58:	2b00      	cmp	r3, #0
 8019f5a:	f1a1 0404 	sub.w	r4, r1, #4
 8019f5e:	bfb8      	it	lt
 8019f60:	18e4      	addlt	r4, r4, r3
 8019f62:	f000 ff57 	bl	801ae14 <__malloc_lock>
 8019f66:	4a1e      	ldr	r2, [pc, #120]	; (8019fe0 <_free_r+0x94>)
 8019f68:	9801      	ldr	r0, [sp, #4]
 8019f6a:	6813      	ldr	r3, [r2, #0]
 8019f6c:	b933      	cbnz	r3, 8019f7c <_free_r+0x30>
 8019f6e:	6063      	str	r3, [r4, #4]
 8019f70:	6014      	str	r4, [r2, #0]
 8019f72:	b003      	add	sp, #12
 8019f74:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8019f78:	f000 bf52 	b.w	801ae20 <__malloc_unlock>
 8019f7c:	42a3      	cmp	r3, r4
 8019f7e:	d908      	bls.n	8019f92 <_free_r+0x46>
 8019f80:	6825      	ldr	r5, [r4, #0]
 8019f82:	1961      	adds	r1, r4, r5
 8019f84:	428b      	cmp	r3, r1
 8019f86:	bf01      	itttt	eq
 8019f88:	6819      	ldreq	r1, [r3, #0]
 8019f8a:	685b      	ldreq	r3, [r3, #4]
 8019f8c:	1949      	addeq	r1, r1, r5
 8019f8e:	6021      	streq	r1, [r4, #0]
 8019f90:	e7ed      	b.n	8019f6e <_free_r+0x22>
 8019f92:	461a      	mov	r2, r3
 8019f94:	685b      	ldr	r3, [r3, #4]
 8019f96:	b10b      	cbz	r3, 8019f9c <_free_r+0x50>
 8019f98:	42a3      	cmp	r3, r4
 8019f9a:	d9fa      	bls.n	8019f92 <_free_r+0x46>
 8019f9c:	6811      	ldr	r1, [r2, #0]
 8019f9e:	1855      	adds	r5, r2, r1
 8019fa0:	42a5      	cmp	r5, r4
 8019fa2:	d10b      	bne.n	8019fbc <_free_r+0x70>
 8019fa4:	6824      	ldr	r4, [r4, #0]
 8019fa6:	4421      	add	r1, r4
 8019fa8:	1854      	adds	r4, r2, r1
 8019faa:	42a3      	cmp	r3, r4
 8019fac:	6011      	str	r1, [r2, #0]
 8019fae:	d1e0      	bne.n	8019f72 <_free_r+0x26>
 8019fb0:	681c      	ldr	r4, [r3, #0]
 8019fb2:	685b      	ldr	r3, [r3, #4]
 8019fb4:	6053      	str	r3, [r2, #4]
 8019fb6:	4421      	add	r1, r4
 8019fb8:	6011      	str	r1, [r2, #0]
 8019fba:	e7da      	b.n	8019f72 <_free_r+0x26>
 8019fbc:	d902      	bls.n	8019fc4 <_free_r+0x78>
 8019fbe:	230c      	movs	r3, #12
 8019fc0:	6003      	str	r3, [r0, #0]
 8019fc2:	e7d6      	b.n	8019f72 <_free_r+0x26>
 8019fc4:	6825      	ldr	r5, [r4, #0]
 8019fc6:	1961      	adds	r1, r4, r5
 8019fc8:	428b      	cmp	r3, r1
 8019fca:	bf04      	itt	eq
 8019fcc:	6819      	ldreq	r1, [r3, #0]
 8019fce:	685b      	ldreq	r3, [r3, #4]
 8019fd0:	6063      	str	r3, [r4, #4]
 8019fd2:	bf04      	itt	eq
 8019fd4:	1949      	addeq	r1, r1, r5
 8019fd6:	6021      	streq	r1, [r4, #0]
 8019fd8:	6054      	str	r4, [r2, #4]
 8019fda:	e7ca      	b.n	8019f72 <_free_r+0x26>
 8019fdc:	b003      	add	sp, #12
 8019fde:	bd30      	pop	{r4, r5, pc}
 8019fe0:	2000a594 	.word	0x2000a594

08019fe4 <sbrk_aligned>:
 8019fe4:	b570      	push	{r4, r5, r6, lr}
 8019fe6:	4e0e      	ldr	r6, [pc, #56]	; (801a020 <sbrk_aligned+0x3c>)
 8019fe8:	460c      	mov	r4, r1
 8019fea:	6831      	ldr	r1, [r6, #0]
 8019fec:	4605      	mov	r5, r0
 8019fee:	b911      	cbnz	r1, 8019ff6 <sbrk_aligned+0x12>
 8019ff0:	f000 fb7a 	bl	801a6e8 <_sbrk_r>
 8019ff4:	6030      	str	r0, [r6, #0]
 8019ff6:	4621      	mov	r1, r4
 8019ff8:	4628      	mov	r0, r5
 8019ffa:	f000 fb75 	bl	801a6e8 <_sbrk_r>
 8019ffe:	1c43      	adds	r3, r0, #1
 801a000:	d00a      	beq.n	801a018 <sbrk_aligned+0x34>
 801a002:	1cc4      	adds	r4, r0, #3
 801a004:	f024 0403 	bic.w	r4, r4, #3
 801a008:	42a0      	cmp	r0, r4
 801a00a:	d007      	beq.n	801a01c <sbrk_aligned+0x38>
 801a00c:	1a21      	subs	r1, r4, r0
 801a00e:	4628      	mov	r0, r5
 801a010:	f000 fb6a 	bl	801a6e8 <_sbrk_r>
 801a014:	3001      	adds	r0, #1
 801a016:	d101      	bne.n	801a01c <sbrk_aligned+0x38>
 801a018:	f04f 34ff 	mov.w	r4, #4294967295
 801a01c:	4620      	mov	r0, r4
 801a01e:	bd70      	pop	{r4, r5, r6, pc}
 801a020:	2000a598 	.word	0x2000a598

0801a024 <_malloc_r>:
 801a024:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a028:	1ccd      	adds	r5, r1, #3
 801a02a:	f025 0503 	bic.w	r5, r5, #3
 801a02e:	3508      	adds	r5, #8
 801a030:	2d0c      	cmp	r5, #12
 801a032:	bf38      	it	cc
 801a034:	250c      	movcc	r5, #12
 801a036:	2d00      	cmp	r5, #0
 801a038:	4607      	mov	r7, r0
 801a03a:	db01      	blt.n	801a040 <_malloc_r+0x1c>
 801a03c:	42a9      	cmp	r1, r5
 801a03e:	d905      	bls.n	801a04c <_malloc_r+0x28>
 801a040:	230c      	movs	r3, #12
 801a042:	603b      	str	r3, [r7, #0]
 801a044:	2600      	movs	r6, #0
 801a046:	4630      	mov	r0, r6
 801a048:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a04c:	4e2e      	ldr	r6, [pc, #184]	; (801a108 <_malloc_r+0xe4>)
 801a04e:	f000 fee1 	bl	801ae14 <__malloc_lock>
 801a052:	6833      	ldr	r3, [r6, #0]
 801a054:	461c      	mov	r4, r3
 801a056:	bb34      	cbnz	r4, 801a0a6 <_malloc_r+0x82>
 801a058:	4629      	mov	r1, r5
 801a05a:	4638      	mov	r0, r7
 801a05c:	f7ff ffc2 	bl	8019fe4 <sbrk_aligned>
 801a060:	1c43      	adds	r3, r0, #1
 801a062:	4604      	mov	r4, r0
 801a064:	d14d      	bne.n	801a102 <_malloc_r+0xde>
 801a066:	6834      	ldr	r4, [r6, #0]
 801a068:	4626      	mov	r6, r4
 801a06a:	2e00      	cmp	r6, #0
 801a06c:	d140      	bne.n	801a0f0 <_malloc_r+0xcc>
 801a06e:	6823      	ldr	r3, [r4, #0]
 801a070:	4631      	mov	r1, r6
 801a072:	4638      	mov	r0, r7
 801a074:	eb04 0803 	add.w	r8, r4, r3
 801a078:	f000 fb36 	bl	801a6e8 <_sbrk_r>
 801a07c:	4580      	cmp	r8, r0
 801a07e:	d13a      	bne.n	801a0f6 <_malloc_r+0xd2>
 801a080:	6821      	ldr	r1, [r4, #0]
 801a082:	3503      	adds	r5, #3
 801a084:	1a6d      	subs	r5, r5, r1
 801a086:	f025 0503 	bic.w	r5, r5, #3
 801a08a:	3508      	adds	r5, #8
 801a08c:	2d0c      	cmp	r5, #12
 801a08e:	bf38      	it	cc
 801a090:	250c      	movcc	r5, #12
 801a092:	4629      	mov	r1, r5
 801a094:	4638      	mov	r0, r7
 801a096:	f7ff ffa5 	bl	8019fe4 <sbrk_aligned>
 801a09a:	3001      	adds	r0, #1
 801a09c:	d02b      	beq.n	801a0f6 <_malloc_r+0xd2>
 801a09e:	6823      	ldr	r3, [r4, #0]
 801a0a0:	442b      	add	r3, r5
 801a0a2:	6023      	str	r3, [r4, #0]
 801a0a4:	e00e      	b.n	801a0c4 <_malloc_r+0xa0>
 801a0a6:	6822      	ldr	r2, [r4, #0]
 801a0a8:	1b52      	subs	r2, r2, r5
 801a0aa:	d41e      	bmi.n	801a0ea <_malloc_r+0xc6>
 801a0ac:	2a0b      	cmp	r2, #11
 801a0ae:	d916      	bls.n	801a0de <_malloc_r+0xba>
 801a0b0:	1961      	adds	r1, r4, r5
 801a0b2:	42a3      	cmp	r3, r4
 801a0b4:	6025      	str	r5, [r4, #0]
 801a0b6:	bf18      	it	ne
 801a0b8:	6059      	strne	r1, [r3, #4]
 801a0ba:	6863      	ldr	r3, [r4, #4]
 801a0bc:	bf08      	it	eq
 801a0be:	6031      	streq	r1, [r6, #0]
 801a0c0:	5162      	str	r2, [r4, r5]
 801a0c2:	604b      	str	r3, [r1, #4]
 801a0c4:	4638      	mov	r0, r7
 801a0c6:	f104 060b 	add.w	r6, r4, #11
 801a0ca:	f000 fea9 	bl	801ae20 <__malloc_unlock>
 801a0ce:	f026 0607 	bic.w	r6, r6, #7
 801a0d2:	1d23      	adds	r3, r4, #4
 801a0d4:	1af2      	subs	r2, r6, r3
 801a0d6:	d0b6      	beq.n	801a046 <_malloc_r+0x22>
 801a0d8:	1b9b      	subs	r3, r3, r6
 801a0da:	50a3      	str	r3, [r4, r2]
 801a0dc:	e7b3      	b.n	801a046 <_malloc_r+0x22>
 801a0de:	6862      	ldr	r2, [r4, #4]
 801a0e0:	42a3      	cmp	r3, r4
 801a0e2:	bf0c      	ite	eq
 801a0e4:	6032      	streq	r2, [r6, #0]
 801a0e6:	605a      	strne	r2, [r3, #4]
 801a0e8:	e7ec      	b.n	801a0c4 <_malloc_r+0xa0>
 801a0ea:	4623      	mov	r3, r4
 801a0ec:	6864      	ldr	r4, [r4, #4]
 801a0ee:	e7b2      	b.n	801a056 <_malloc_r+0x32>
 801a0f0:	4634      	mov	r4, r6
 801a0f2:	6876      	ldr	r6, [r6, #4]
 801a0f4:	e7b9      	b.n	801a06a <_malloc_r+0x46>
 801a0f6:	230c      	movs	r3, #12
 801a0f8:	603b      	str	r3, [r7, #0]
 801a0fa:	4638      	mov	r0, r7
 801a0fc:	f000 fe90 	bl	801ae20 <__malloc_unlock>
 801a100:	e7a1      	b.n	801a046 <_malloc_r+0x22>
 801a102:	6025      	str	r5, [r4, #0]
 801a104:	e7de      	b.n	801a0c4 <_malloc_r+0xa0>
 801a106:	bf00      	nop
 801a108:	2000a594 	.word	0x2000a594

0801a10c <__sfputc_r>:
 801a10c:	6893      	ldr	r3, [r2, #8]
 801a10e:	3b01      	subs	r3, #1
 801a110:	2b00      	cmp	r3, #0
 801a112:	b410      	push	{r4}
 801a114:	6093      	str	r3, [r2, #8]
 801a116:	da08      	bge.n	801a12a <__sfputc_r+0x1e>
 801a118:	6994      	ldr	r4, [r2, #24]
 801a11a:	42a3      	cmp	r3, r4
 801a11c:	db01      	blt.n	801a122 <__sfputc_r+0x16>
 801a11e:	290a      	cmp	r1, #10
 801a120:	d103      	bne.n	801a12a <__sfputc_r+0x1e>
 801a122:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a126:	f000 bb33 	b.w	801a790 <__swbuf_r>
 801a12a:	6813      	ldr	r3, [r2, #0]
 801a12c:	1c58      	adds	r0, r3, #1
 801a12e:	6010      	str	r0, [r2, #0]
 801a130:	7019      	strb	r1, [r3, #0]
 801a132:	4608      	mov	r0, r1
 801a134:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a138:	4770      	bx	lr

0801a13a <__sfputs_r>:
 801a13a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a13c:	4606      	mov	r6, r0
 801a13e:	460f      	mov	r7, r1
 801a140:	4614      	mov	r4, r2
 801a142:	18d5      	adds	r5, r2, r3
 801a144:	42ac      	cmp	r4, r5
 801a146:	d101      	bne.n	801a14c <__sfputs_r+0x12>
 801a148:	2000      	movs	r0, #0
 801a14a:	e007      	b.n	801a15c <__sfputs_r+0x22>
 801a14c:	f814 1b01 	ldrb.w	r1, [r4], #1
 801a150:	463a      	mov	r2, r7
 801a152:	4630      	mov	r0, r6
 801a154:	f7ff ffda 	bl	801a10c <__sfputc_r>
 801a158:	1c43      	adds	r3, r0, #1
 801a15a:	d1f3      	bne.n	801a144 <__sfputs_r+0xa>
 801a15c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801a160 <_vfiprintf_r>:
 801a160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a164:	460d      	mov	r5, r1
 801a166:	b09d      	sub	sp, #116	; 0x74
 801a168:	4614      	mov	r4, r2
 801a16a:	4698      	mov	r8, r3
 801a16c:	4606      	mov	r6, r0
 801a16e:	b118      	cbz	r0, 801a178 <_vfiprintf_r+0x18>
 801a170:	6983      	ldr	r3, [r0, #24]
 801a172:	b90b      	cbnz	r3, 801a178 <_vfiprintf_r+0x18>
 801a174:	f000 fd48 	bl	801ac08 <__sinit>
 801a178:	4b89      	ldr	r3, [pc, #548]	; (801a3a0 <_vfiprintf_r+0x240>)
 801a17a:	429d      	cmp	r5, r3
 801a17c:	d11b      	bne.n	801a1b6 <_vfiprintf_r+0x56>
 801a17e:	6875      	ldr	r5, [r6, #4]
 801a180:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801a182:	07d9      	lsls	r1, r3, #31
 801a184:	d405      	bmi.n	801a192 <_vfiprintf_r+0x32>
 801a186:	89ab      	ldrh	r3, [r5, #12]
 801a188:	059a      	lsls	r2, r3, #22
 801a18a:	d402      	bmi.n	801a192 <_vfiprintf_r+0x32>
 801a18c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801a18e:	f000 fdd9 	bl	801ad44 <__retarget_lock_acquire_recursive>
 801a192:	89ab      	ldrh	r3, [r5, #12]
 801a194:	071b      	lsls	r3, r3, #28
 801a196:	d501      	bpl.n	801a19c <_vfiprintf_r+0x3c>
 801a198:	692b      	ldr	r3, [r5, #16]
 801a19a:	b9eb      	cbnz	r3, 801a1d8 <_vfiprintf_r+0x78>
 801a19c:	4629      	mov	r1, r5
 801a19e:	4630      	mov	r0, r6
 801a1a0:	f000 fb48 	bl	801a834 <__swsetup_r>
 801a1a4:	b1c0      	cbz	r0, 801a1d8 <_vfiprintf_r+0x78>
 801a1a6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801a1a8:	07dc      	lsls	r4, r3, #31
 801a1aa:	d50e      	bpl.n	801a1ca <_vfiprintf_r+0x6a>
 801a1ac:	f04f 30ff 	mov.w	r0, #4294967295
 801a1b0:	b01d      	add	sp, #116	; 0x74
 801a1b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1b6:	4b7b      	ldr	r3, [pc, #492]	; (801a3a4 <_vfiprintf_r+0x244>)
 801a1b8:	429d      	cmp	r5, r3
 801a1ba:	d101      	bne.n	801a1c0 <_vfiprintf_r+0x60>
 801a1bc:	68b5      	ldr	r5, [r6, #8]
 801a1be:	e7df      	b.n	801a180 <_vfiprintf_r+0x20>
 801a1c0:	4b79      	ldr	r3, [pc, #484]	; (801a3a8 <_vfiprintf_r+0x248>)
 801a1c2:	429d      	cmp	r5, r3
 801a1c4:	bf08      	it	eq
 801a1c6:	68f5      	ldreq	r5, [r6, #12]
 801a1c8:	e7da      	b.n	801a180 <_vfiprintf_r+0x20>
 801a1ca:	89ab      	ldrh	r3, [r5, #12]
 801a1cc:	0598      	lsls	r0, r3, #22
 801a1ce:	d4ed      	bmi.n	801a1ac <_vfiprintf_r+0x4c>
 801a1d0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801a1d2:	f000 fdb9 	bl	801ad48 <__retarget_lock_release_recursive>
 801a1d6:	e7e9      	b.n	801a1ac <_vfiprintf_r+0x4c>
 801a1d8:	2300      	movs	r3, #0
 801a1da:	9309      	str	r3, [sp, #36]	; 0x24
 801a1dc:	2320      	movs	r3, #32
 801a1de:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801a1e2:	f8cd 800c 	str.w	r8, [sp, #12]
 801a1e6:	2330      	movs	r3, #48	; 0x30
 801a1e8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801a3ac <_vfiprintf_r+0x24c>
 801a1ec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801a1f0:	f04f 0901 	mov.w	r9, #1
 801a1f4:	4623      	mov	r3, r4
 801a1f6:	469a      	mov	sl, r3
 801a1f8:	f813 2b01 	ldrb.w	r2, [r3], #1
 801a1fc:	b10a      	cbz	r2, 801a202 <_vfiprintf_r+0xa2>
 801a1fe:	2a25      	cmp	r2, #37	; 0x25
 801a200:	d1f9      	bne.n	801a1f6 <_vfiprintf_r+0x96>
 801a202:	ebba 0b04 	subs.w	fp, sl, r4
 801a206:	d00b      	beq.n	801a220 <_vfiprintf_r+0xc0>
 801a208:	465b      	mov	r3, fp
 801a20a:	4622      	mov	r2, r4
 801a20c:	4629      	mov	r1, r5
 801a20e:	4630      	mov	r0, r6
 801a210:	f7ff ff93 	bl	801a13a <__sfputs_r>
 801a214:	3001      	adds	r0, #1
 801a216:	f000 80aa 	beq.w	801a36e <_vfiprintf_r+0x20e>
 801a21a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a21c:	445a      	add	r2, fp
 801a21e:	9209      	str	r2, [sp, #36]	; 0x24
 801a220:	f89a 3000 	ldrb.w	r3, [sl]
 801a224:	2b00      	cmp	r3, #0
 801a226:	f000 80a2 	beq.w	801a36e <_vfiprintf_r+0x20e>
 801a22a:	2300      	movs	r3, #0
 801a22c:	f04f 32ff 	mov.w	r2, #4294967295
 801a230:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801a234:	f10a 0a01 	add.w	sl, sl, #1
 801a238:	9304      	str	r3, [sp, #16]
 801a23a:	9307      	str	r3, [sp, #28]
 801a23c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801a240:	931a      	str	r3, [sp, #104]	; 0x68
 801a242:	4654      	mov	r4, sl
 801a244:	2205      	movs	r2, #5
 801a246:	f814 1b01 	ldrb.w	r1, [r4], #1
 801a24a:	4858      	ldr	r0, [pc, #352]	; (801a3ac <_vfiprintf_r+0x24c>)
 801a24c:	f7e5 ffd8 	bl	8000200 <memchr>
 801a250:	9a04      	ldr	r2, [sp, #16]
 801a252:	b9d8      	cbnz	r0, 801a28c <_vfiprintf_r+0x12c>
 801a254:	06d1      	lsls	r1, r2, #27
 801a256:	bf44      	itt	mi
 801a258:	2320      	movmi	r3, #32
 801a25a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801a25e:	0713      	lsls	r3, r2, #28
 801a260:	bf44      	itt	mi
 801a262:	232b      	movmi	r3, #43	; 0x2b
 801a264:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801a268:	f89a 3000 	ldrb.w	r3, [sl]
 801a26c:	2b2a      	cmp	r3, #42	; 0x2a
 801a26e:	d015      	beq.n	801a29c <_vfiprintf_r+0x13c>
 801a270:	9a07      	ldr	r2, [sp, #28]
 801a272:	4654      	mov	r4, sl
 801a274:	2000      	movs	r0, #0
 801a276:	f04f 0c0a 	mov.w	ip, #10
 801a27a:	4621      	mov	r1, r4
 801a27c:	f811 3b01 	ldrb.w	r3, [r1], #1
 801a280:	3b30      	subs	r3, #48	; 0x30
 801a282:	2b09      	cmp	r3, #9
 801a284:	d94e      	bls.n	801a324 <_vfiprintf_r+0x1c4>
 801a286:	b1b0      	cbz	r0, 801a2b6 <_vfiprintf_r+0x156>
 801a288:	9207      	str	r2, [sp, #28]
 801a28a:	e014      	b.n	801a2b6 <_vfiprintf_r+0x156>
 801a28c:	eba0 0308 	sub.w	r3, r0, r8
 801a290:	fa09 f303 	lsl.w	r3, r9, r3
 801a294:	4313      	orrs	r3, r2
 801a296:	9304      	str	r3, [sp, #16]
 801a298:	46a2      	mov	sl, r4
 801a29a:	e7d2      	b.n	801a242 <_vfiprintf_r+0xe2>
 801a29c:	9b03      	ldr	r3, [sp, #12]
 801a29e:	1d19      	adds	r1, r3, #4
 801a2a0:	681b      	ldr	r3, [r3, #0]
 801a2a2:	9103      	str	r1, [sp, #12]
 801a2a4:	2b00      	cmp	r3, #0
 801a2a6:	bfbb      	ittet	lt
 801a2a8:	425b      	neglt	r3, r3
 801a2aa:	f042 0202 	orrlt.w	r2, r2, #2
 801a2ae:	9307      	strge	r3, [sp, #28]
 801a2b0:	9307      	strlt	r3, [sp, #28]
 801a2b2:	bfb8      	it	lt
 801a2b4:	9204      	strlt	r2, [sp, #16]
 801a2b6:	7823      	ldrb	r3, [r4, #0]
 801a2b8:	2b2e      	cmp	r3, #46	; 0x2e
 801a2ba:	d10c      	bne.n	801a2d6 <_vfiprintf_r+0x176>
 801a2bc:	7863      	ldrb	r3, [r4, #1]
 801a2be:	2b2a      	cmp	r3, #42	; 0x2a
 801a2c0:	d135      	bne.n	801a32e <_vfiprintf_r+0x1ce>
 801a2c2:	9b03      	ldr	r3, [sp, #12]
 801a2c4:	1d1a      	adds	r2, r3, #4
 801a2c6:	681b      	ldr	r3, [r3, #0]
 801a2c8:	9203      	str	r2, [sp, #12]
 801a2ca:	2b00      	cmp	r3, #0
 801a2cc:	bfb8      	it	lt
 801a2ce:	f04f 33ff 	movlt.w	r3, #4294967295
 801a2d2:	3402      	adds	r4, #2
 801a2d4:	9305      	str	r3, [sp, #20]
 801a2d6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801a3bc <_vfiprintf_r+0x25c>
 801a2da:	7821      	ldrb	r1, [r4, #0]
 801a2dc:	2203      	movs	r2, #3
 801a2de:	4650      	mov	r0, sl
 801a2e0:	f7e5 ff8e 	bl	8000200 <memchr>
 801a2e4:	b140      	cbz	r0, 801a2f8 <_vfiprintf_r+0x198>
 801a2e6:	2340      	movs	r3, #64	; 0x40
 801a2e8:	eba0 000a 	sub.w	r0, r0, sl
 801a2ec:	fa03 f000 	lsl.w	r0, r3, r0
 801a2f0:	9b04      	ldr	r3, [sp, #16]
 801a2f2:	4303      	orrs	r3, r0
 801a2f4:	3401      	adds	r4, #1
 801a2f6:	9304      	str	r3, [sp, #16]
 801a2f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 801a2fc:	482c      	ldr	r0, [pc, #176]	; (801a3b0 <_vfiprintf_r+0x250>)
 801a2fe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801a302:	2206      	movs	r2, #6
 801a304:	f7e5 ff7c 	bl	8000200 <memchr>
 801a308:	2800      	cmp	r0, #0
 801a30a:	d03f      	beq.n	801a38c <_vfiprintf_r+0x22c>
 801a30c:	4b29      	ldr	r3, [pc, #164]	; (801a3b4 <_vfiprintf_r+0x254>)
 801a30e:	bb1b      	cbnz	r3, 801a358 <_vfiprintf_r+0x1f8>
 801a310:	9b03      	ldr	r3, [sp, #12]
 801a312:	3307      	adds	r3, #7
 801a314:	f023 0307 	bic.w	r3, r3, #7
 801a318:	3308      	adds	r3, #8
 801a31a:	9303      	str	r3, [sp, #12]
 801a31c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a31e:	443b      	add	r3, r7
 801a320:	9309      	str	r3, [sp, #36]	; 0x24
 801a322:	e767      	b.n	801a1f4 <_vfiprintf_r+0x94>
 801a324:	fb0c 3202 	mla	r2, ip, r2, r3
 801a328:	460c      	mov	r4, r1
 801a32a:	2001      	movs	r0, #1
 801a32c:	e7a5      	b.n	801a27a <_vfiprintf_r+0x11a>
 801a32e:	2300      	movs	r3, #0
 801a330:	3401      	adds	r4, #1
 801a332:	9305      	str	r3, [sp, #20]
 801a334:	4619      	mov	r1, r3
 801a336:	f04f 0c0a 	mov.w	ip, #10
 801a33a:	4620      	mov	r0, r4
 801a33c:	f810 2b01 	ldrb.w	r2, [r0], #1
 801a340:	3a30      	subs	r2, #48	; 0x30
 801a342:	2a09      	cmp	r2, #9
 801a344:	d903      	bls.n	801a34e <_vfiprintf_r+0x1ee>
 801a346:	2b00      	cmp	r3, #0
 801a348:	d0c5      	beq.n	801a2d6 <_vfiprintf_r+0x176>
 801a34a:	9105      	str	r1, [sp, #20]
 801a34c:	e7c3      	b.n	801a2d6 <_vfiprintf_r+0x176>
 801a34e:	fb0c 2101 	mla	r1, ip, r1, r2
 801a352:	4604      	mov	r4, r0
 801a354:	2301      	movs	r3, #1
 801a356:	e7f0      	b.n	801a33a <_vfiprintf_r+0x1da>
 801a358:	ab03      	add	r3, sp, #12
 801a35a:	9300      	str	r3, [sp, #0]
 801a35c:	462a      	mov	r2, r5
 801a35e:	4b16      	ldr	r3, [pc, #88]	; (801a3b8 <_vfiprintf_r+0x258>)
 801a360:	a904      	add	r1, sp, #16
 801a362:	4630      	mov	r0, r6
 801a364:	f3af 8000 	nop.w
 801a368:	4607      	mov	r7, r0
 801a36a:	1c78      	adds	r0, r7, #1
 801a36c:	d1d6      	bne.n	801a31c <_vfiprintf_r+0x1bc>
 801a36e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801a370:	07d9      	lsls	r1, r3, #31
 801a372:	d405      	bmi.n	801a380 <_vfiprintf_r+0x220>
 801a374:	89ab      	ldrh	r3, [r5, #12]
 801a376:	059a      	lsls	r2, r3, #22
 801a378:	d402      	bmi.n	801a380 <_vfiprintf_r+0x220>
 801a37a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801a37c:	f000 fce4 	bl	801ad48 <__retarget_lock_release_recursive>
 801a380:	89ab      	ldrh	r3, [r5, #12]
 801a382:	065b      	lsls	r3, r3, #25
 801a384:	f53f af12 	bmi.w	801a1ac <_vfiprintf_r+0x4c>
 801a388:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a38a:	e711      	b.n	801a1b0 <_vfiprintf_r+0x50>
 801a38c:	ab03      	add	r3, sp, #12
 801a38e:	9300      	str	r3, [sp, #0]
 801a390:	462a      	mov	r2, r5
 801a392:	4b09      	ldr	r3, [pc, #36]	; (801a3b8 <_vfiprintf_r+0x258>)
 801a394:	a904      	add	r1, sp, #16
 801a396:	4630      	mov	r0, r6
 801a398:	f000 f880 	bl	801a49c <_printf_i>
 801a39c:	e7e4      	b.n	801a368 <_vfiprintf_r+0x208>
 801a39e:	bf00      	nop
 801a3a0:	0801e2c0 	.word	0x0801e2c0
 801a3a4:	0801e2e0 	.word	0x0801e2e0
 801a3a8:	0801e2a0 	.word	0x0801e2a0
 801a3ac:	0801e268 	.word	0x0801e268
 801a3b0:	0801e272 	.word	0x0801e272
 801a3b4:	00000000 	.word	0x00000000
 801a3b8:	0801a13b 	.word	0x0801a13b
 801a3bc:	0801e26e 	.word	0x0801e26e

0801a3c0 <_printf_common>:
 801a3c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a3c4:	4616      	mov	r6, r2
 801a3c6:	4699      	mov	r9, r3
 801a3c8:	688a      	ldr	r2, [r1, #8]
 801a3ca:	690b      	ldr	r3, [r1, #16]
 801a3cc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801a3d0:	4293      	cmp	r3, r2
 801a3d2:	bfb8      	it	lt
 801a3d4:	4613      	movlt	r3, r2
 801a3d6:	6033      	str	r3, [r6, #0]
 801a3d8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801a3dc:	4607      	mov	r7, r0
 801a3de:	460c      	mov	r4, r1
 801a3e0:	b10a      	cbz	r2, 801a3e6 <_printf_common+0x26>
 801a3e2:	3301      	adds	r3, #1
 801a3e4:	6033      	str	r3, [r6, #0]
 801a3e6:	6823      	ldr	r3, [r4, #0]
 801a3e8:	0699      	lsls	r1, r3, #26
 801a3ea:	bf42      	ittt	mi
 801a3ec:	6833      	ldrmi	r3, [r6, #0]
 801a3ee:	3302      	addmi	r3, #2
 801a3f0:	6033      	strmi	r3, [r6, #0]
 801a3f2:	6825      	ldr	r5, [r4, #0]
 801a3f4:	f015 0506 	ands.w	r5, r5, #6
 801a3f8:	d106      	bne.n	801a408 <_printf_common+0x48>
 801a3fa:	f104 0a19 	add.w	sl, r4, #25
 801a3fe:	68e3      	ldr	r3, [r4, #12]
 801a400:	6832      	ldr	r2, [r6, #0]
 801a402:	1a9b      	subs	r3, r3, r2
 801a404:	42ab      	cmp	r3, r5
 801a406:	dc26      	bgt.n	801a456 <_printf_common+0x96>
 801a408:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801a40c:	1e13      	subs	r3, r2, #0
 801a40e:	6822      	ldr	r2, [r4, #0]
 801a410:	bf18      	it	ne
 801a412:	2301      	movne	r3, #1
 801a414:	0692      	lsls	r2, r2, #26
 801a416:	d42b      	bmi.n	801a470 <_printf_common+0xb0>
 801a418:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801a41c:	4649      	mov	r1, r9
 801a41e:	4638      	mov	r0, r7
 801a420:	47c0      	blx	r8
 801a422:	3001      	adds	r0, #1
 801a424:	d01e      	beq.n	801a464 <_printf_common+0xa4>
 801a426:	6823      	ldr	r3, [r4, #0]
 801a428:	68e5      	ldr	r5, [r4, #12]
 801a42a:	6832      	ldr	r2, [r6, #0]
 801a42c:	f003 0306 	and.w	r3, r3, #6
 801a430:	2b04      	cmp	r3, #4
 801a432:	bf08      	it	eq
 801a434:	1aad      	subeq	r5, r5, r2
 801a436:	68a3      	ldr	r3, [r4, #8]
 801a438:	6922      	ldr	r2, [r4, #16]
 801a43a:	bf0c      	ite	eq
 801a43c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801a440:	2500      	movne	r5, #0
 801a442:	4293      	cmp	r3, r2
 801a444:	bfc4      	itt	gt
 801a446:	1a9b      	subgt	r3, r3, r2
 801a448:	18ed      	addgt	r5, r5, r3
 801a44a:	2600      	movs	r6, #0
 801a44c:	341a      	adds	r4, #26
 801a44e:	42b5      	cmp	r5, r6
 801a450:	d11a      	bne.n	801a488 <_printf_common+0xc8>
 801a452:	2000      	movs	r0, #0
 801a454:	e008      	b.n	801a468 <_printf_common+0xa8>
 801a456:	2301      	movs	r3, #1
 801a458:	4652      	mov	r2, sl
 801a45a:	4649      	mov	r1, r9
 801a45c:	4638      	mov	r0, r7
 801a45e:	47c0      	blx	r8
 801a460:	3001      	adds	r0, #1
 801a462:	d103      	bne.n	801a46c <_printf_common+0xac>
 801a464:	f04f 30ff 	mov.w	r0, #4294967295
 801a468:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a46c:	3501      	adds	r5, #1
 801a46e:	e7c6      	b.n	801a3fe <_printf_common+0x3e>
 801a470:	18e1      	adds	r1, r4, r3
 801a472:	1c5a      	adds	r2, r3, #1
 801a474:	2030      	movs	r0, #48	; 0x30
 801a476:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801a47a:	4422      	add	r2, r4
 801a47c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801a480:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801a484:	3302      	adds	r3, #2
 801a486:	e7c7      	b.n	801a418 <_printf_common+0x58>
 801a488:	2301      	movs	r3, #1
 801a48a:	4622      	mov	r2, r4
 801a48c:	4649      	mov	r1, r9
 801a48e:	4638      	mov	r0, r7
 801a490:	47c0      	blx	r8
 801a492:	3001      	adds	r0, #1
 801a494:	d0e6      	beq.n	801a464 <_printf_common+0xa4>
 801a496:	3601      	adds	r6, #1
 801a498:	e7d9      	b.n	801a44e <_printf_common+0x8e>
	...

0801a49c <_printf_i>:
 801a49c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801a4a0:	7e0f      	ldrb	r7, [r1, #24]
 801a4a2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a4a4:	2f78      	cmp	r7, #120	; 0x78
 801a4a6:	4691      	mov	r9, r2
 801a4a8:	4680      	mov	r8, r0
 801a4aa:	460c      	mov	r4, r1
 801a4ac:	469a      	mov	sl, r3
 801a4ae:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801a4b2:	d807      	bhi.n	801a4c4 <_printf_i+0x28>
 801a4b4:	2f62      	cmp	r7, #98	; 0x62
 801a4b6:	d80a      	bhi.n	801a4ce <_printf_i+0x32>
 801a4b8:	2f00      	cmp	r7, #0
 801a4ba:	f000 80d8 	beq.w	801a66e <_printf_i+0x1d2>
 801a4be:	2f58      	cmp	r7, #88	; 0x58
 801a4c0:	f000 80a3 	beq.w	801a60a <_printf_i+0x16e>
 801a4c4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a4c8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801a4cc:	e03a      	b.n	801a544 <_printf_i+0xa8>
 801a4ce:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801a4d2:	2b15      	cmp	r3, #21
 801a4d4:	d8f6      	bhi.n	801a4c4 <_printf_i+0x28>
 801a4d6:	a101      	add	r1, pc, #4	; (adr r1, 801a4dc <_printf_i+0x40>)
 801a4d8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801a4dc:	0801a535 	.word	0x0801a535
 801a4e0:	0801a549 	.word	0x0801a549
 801a4e4:	0801a4c5 	.word	0x0801a4c5
 801a4e8:	0801a4c5 	.word	0x0801a4c5
 801a4ec:	0801a4c5 	.word	0x0801a4c5
 801a4f0:	0801a4c5 	.word	0x0801a4c5
 801a4f4:	0801a549 	.word	0x0801a549
 801a4f8:	0801a4c5 	.word	0x0801a4c5
 801a4fc:	0801a4c5 	.word	0x0801a4c5
 801a500:	0801a4c5 	.word	0x0801a4c5
 801a504:	0801a4c5 	.word	0x0801a4c5
 801a508:	0801a655 	.word	0x0801a655
 801a50c:	0801a579 	.word	0x0801a579
 801a510:	0801a637 	.word	0x0801a637
 801a514:	0801a4c5 	.word	0x0801a4c5
 801a518:	0801a4c5 	.word	0x0801a4c5
 801a51c:	0801a677 	.word	0x0801a677
 801a520:	0801a4c5 	.word	0x0801a4c5
 801a524:	0801a579 	.word	0x0801a579
 801a528:	0801a4c5 	.word	0x0801a4c5
 801a52c:	0801a4c5 	.word	0x0801a4c5
 801a530:	0801a63f 	.word	0x0801a63f
 801a534:	682b      	ldr	r3, [r5, #0]
 801a536:	1d1a      	adds	r2, r3, #4
 801a538:	681b      	ldr	r3, [r3, #0]
 801a53a:	602a      	str	r2, [r5, #0]
 801a53c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a540:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801a544:	2301      	movs	r3, #1
 801a546:	e0a3      	b.n	801a690 <_printf_i+0x1f4>
 801a548:	6820      	ldr	r0, [r4, #0]
 801a54a:	6829      	ldr	r1, [r5, #0]
 801a54c:	0606      	lsls	r6, r0, #24
 801a54e:	f101 0304 	add.w	r3, r1, #4
 801a552:	d50a      	bpl.n	801a56a <_printf_i+0xce>
 801a554:	680e      	ldr	r6, [r1, #0]
 801a556:	602b      	str	r3, [r5, #0]
 801a558:	2e00      	cmp	r6, #0
 801a55a:	da03      	bge.n	801a564 <_printf_i+0xc8>
 801a55c:	232d      	movs	r3, #45	; 0x2d
 801a55e:	4276      	negs	r6, r6
 801a560:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801a564:	485e      	ldr	r0, [pc, #376]	; (801a6e0 <_printf_i+0x244>)
 801a566:	230a      	movs	r3, #10
 801a568:	e019      	b.n	801a59e <_printf_i+0x102>
 801a56a:	680e      	ldr	r6, [r1, #0]
 801a56c:	602b      	str	r3, [r5, #0]
 801a56e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801a572:	bf18      	it	ne
 801a574:	b236      	sxthne	r6, r6
 801a576:	e7ef      	b.n	801a558 <_printf_i+0xbc>
 801a578:	682b      	ldr	r3, [r5, #0]
 801a57a:	6820      	ldr	r0, [r4, #0]
 801a57c:	1d19      	adds	r1, r3, #4
 801a57e:	6029      	str	r1, [r5, #0]
 801a580:	0601      	lsls	r1, r0, #24
 801a582:	d501      	bpl.n	801a588 <_printf_i+0xec>
 801a584:	681e      	ldr	r6, [r3, #0]
 801a586:	e002      	b.n	801a58e <_printf_i+0xf2>
 801a588:	0646      	lsls	r6, r0, #25
 801a58a:	d5fb      	bpl.n	801a584 <_printf_i+0xe8>
 801a58c:	881e      	ldrh	r6, [r3, #0]
 801a58e:	4854      	ldr	r0, [pc, #336]	; (801a6e0 <_printf_i+0x244>)
 801a590:	2f6f      	cmp	r7, #111	; 0x6f
 801a592:	bf0c      	ite	eq
 801a594:	2308      	moveq	r3, #8
 801a596:	230a      	movne	r3, #10
 801a598:	2100      	movs	r1, #0
 801a59a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801a59e:	6865      	ldr	r5, [r4, #4]
 801a5a0:	60a5      	str	r5, [r4, #8]
 801a5a2:	2d00      	cmp	r5, #0
 801a5a4:	bfa2      	ittt	ge
 801a5a6:	6821      	ldrge	r1, [r4, #0]
 801a5a8:	f021 0104 	bicge.w	r1, r1, #4
 801a5ac:	6021      	strge	r1, [r4, #0]
 801a5ae:	b90e      	cbnz	r6, 801a5b4 <_printf_i+0x118>
 801a5b0:	2d00      	cmp	r5, #0
 801a5b2:	d04d      	beq.n	801a650 <_printf_i+0x1b4>
 801a5b4:	4615      	mov	r5, r2
 801a5b6:	fbb6 f1f3 	udiv	r1, r6, r3
 801a5ba:	fb03 6711 	mls	r7, r3, r1, r6
 801a5be:	5dc7      	ldrb	r7, [r0, r7]
 801a5c0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801a5c4:	4637      	mov	r7, r6
 801a5c6:	42bb      	cmp	r3, r7
 801a5c8:	460e      	mov	r6, r1
 801a5ca:	d9f4      	bls.n	801a5b6 <_printf_i+0x11a>
 801a5cc:	2b08      	cmp	r3, #8
 801a5ce:	d10b      	bne.n	801a5e8 <_printf_i+0x14c>
 801a5d0:	6823      	ldr	r3, [r4, #0]
 801a5d2:	07de      	lsls	r6, r3, #31
 801a5d4:	d508      	bpl.n	801a5e8 <_printf_i+0x14c>
 801a5d6:	6923      	ldr	r3, [r4, #16]
 801a5d8:	6861      	ldr	r1, [r4, #4]
 801a5da:	4299      	cmp	r1, r3
 801a5dc:	bfde      	ittt	le
 801a5de:	2330      	movle	r3, #48	; 0x30
 801a5e0:	f805 3c01 	strble.w	r3, [r5, #-1]
 801a5e4:	f105 35ff 	addle.w	r5, r5, #4294967295
 801a5e8:	1b52      	subs	r2, r2, r5
 801a5ea:	6122      	str	r2, [r4, #16]
 801a5ec:	f8cd a000 	str.w	sl, [sp]
 801a5f0:	464b      	mov	r3, r9
 801a5f2:	aa03      	add	r2, sp, #12
 801a5f4:	4621      	mov	r1, r4
 801a5f6:	4640      	mov	r0, r8
 801a5f8:	f7ff fee2 	bl	801a3c0 <_printf_common>
 801a5fc:	3001      	adds	r0, #1
 801a5fe:	d14c      	bne.n	801a69a <_printf_i+0x1fe>
 801a600:	f04f 30ff 	mov.w	r0, #4294967295
 801a604:	b004      	add	sp, #16
 801a606:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a60a:	4835      	ldr	r0, [pc, #212]	; (801a6e0 <_printf_i+0x244>)
 801a60c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801a610:	6829      	ldr	r1, [r5, #0]
 801a612:	6823      	ldr	r3, [r4, #0]
 801a614:	f851 6b04 	ldr.w	r6, [r1], #4
 801a618:	6029      	str	r1, [r5, #0]
 801a61a:	061d      	lsls	r5, r3, #24
 801a61c:	d514      	bpl.n	801a648 <_printf_i+0x1ac>
 801a61e:	07df      	lsls	r7, r3, #31
 801a620:	bf44      	itt	mi
 801a622:	f043 0320 	orrmi.w	r3, r3, #32
 801a626:	6023      	strmi	r3, [r4, #0]
 801a628:	b91e      	cbnz	r6, 801a632 <_printf_i+0x196>
 801a62a:	6823      	ldr	r3, [r4, #0]
 801a62c:	f023 0320 	bic.w	r3, r3, #32
 801a630:	6023      	str	r3, [r4, #0]
 801a632:	2310      	movs	r3, #16
 801a634:	e7b0      	b.n	801a598 <_printf_i+0xfc>
 801a636:	6823      	ldr	r3, [r4, #0]
 801a638:	f043 0320 	orr.w	r3, r3, #32
 801a63c:	6023      	str	r3, [r4, #0]
 801a63e:	2378      	movs	r3, #120	; 0x78
 801a640:	4828      	ldr	r0, [pc, #160]	; (801a6e4 <_printf_i+0x248>)
 801a642:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801a646:	e7e3      	b.n	801a610 <_printf_i+0x174>
 801a648:	0659      	lsls	r1, r3, #25
 801a64a:	bf48      	it	mi
 801a64c:	b2b6      	uxthmi	r6, r6
 801a64e:	e7e6      	b.n	801a61e <_printf_i+0x182>
 801a650:	4615      	mov	r5, r2
 801a652:	e7bb      	b.n	801a5cc <_printf_i+0x130>
 801a654:	682b      	ldr	r3, [r5, #0]
 801a656:	6826      	ldr	r6, [r4, #0]
 801a658:	6961      	ldr	r1, [r4, #20]
 801a65a:	1d18      	adds	r0, r3, #4
 801a65c:	6028      	str	r0, [r5, #0]
 801a65e:	0635      	lsls	r5, r6, #24
 801a660:	681b      	ldr	r3, [r3, #0]
 801a662:	d501      	bpl.n	801a668 <_printf_i+0x1cc>
 801a664:	6019      	str	r1, [r3, #0]
 801a666:	e002      	b.n	801a66e <_printf_i+0x1d2>
 801a668:	0670      	lsls	r0, r6, #25
 801a66a:	d5fb      	bpl.n	801a664 <_printf_i+0x1c8>
 801a66c:	8019      	strh	r1, [r3, #0]
 801a66e:	2300      	movs	r3, #0
 801a670:	6123      	str	r3, [r4, #16]
 801a672:	4615      	mov	r5, r2
 801a674:	e7ba      	b.n	801a5ec <_printf_i+0x150>
 801a676:	682b      	ldr	r3, [r5, #0]
 801a678:	1d1a      	adds	r2, r3, #4
 801a67a:	602a      	str	r2, [r5, #0]
 801a67c:	681d      	ldr	r5, [r3, #0]
 801a67e:	6862      	ldr	r2, [r4, #4]
 801a680:	2100      	movs	r1, #0
 801a682:	4628      	mov	r0, r5
 801a684:	f7e5 fdbc 	bl	8000200 <memchr>
 801a688:	b108      	cbz	r0, 801a68e <_printf_i+0x1f2>
 801a68a:	1b40      	subs	r0, r0, r5
 801a68c:	6060      	str	r0, [r4, #4]
 801a68e:	6863      	ldr	r3, [r4, #4]
 801a690:	6123      	str	r3, [r4, #16]
 801a692:	2300      	movs	r3, #0
 801a694:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801a698:	e7a8      	b.n	801a5ec <_printf_i+0x150>
 801a69a:	6923      	ldr	r3, [r4, #16]
 801a69c:	462a      	mov	r2, r5
 801a69e:	4649      	mov	r1, r9
 801a6a0:	4640      	mov	r0, r8
 801a6a2:	47d0      	blx	sl
 801a6a4:	3001      	adds	r0, #1
 801a6a6:	d0ab      	beq.n	801a600 <_printf_i+0x164>
 801a6a8:	6823      	ldr	r3, [r4, #0]
 801a6aa:	079b      	lsls	r3, r3, #30
 801a6ac:	d413      	bmi.n	801a6d6 <_printf_i+0x23a>
 801a6ae:	68e0      	ldr	r0, [r4, #12]
 801a6b0:	9b03      	ldr	r3, [sp, #12]
 801a6b2:	4298      	cmp	r0, r3
 801a6b4:	bfb8      	it	lt
 801a6b6:	4618      	movlt	r0, r3
 801a6b8:	e7a4      	b.n	801a604 <_printf_i+0x168>
 801a6ba:	2301      	movs	r3, #1
 801a6bc:	4632      	mov	r2, r6
 801a6be:	4649      	mov	r1, r9
 801a6c0:	4640      	mov	r0, r8
 801a6c2:	47d0      	blx	sl
 801a6c4:	3001      	adds	r0, #1
 801a6c6:	d09b      	beq.n	801a600 <_printf_i+0x164>
 801a6c8:	3501      	adds	r5, #1
 801a6ca:	68e3      	ldr	r3, [r4, #12]
 801a6cc:	9903      	ldr	r1, [sp, #12]
 801a6ce:	1a5b      	subs	r3, r3, r1
 801a6d0:	42ab      	cmp	r3, r5
 801a6d2:	dcf2      	bgt.n	801a6ba <_printf_i+0x21e>
 801a6d4:	e7eb      	b.n	801a6ae <_printf_i+0x212>
 801a6d6:	2500      	movs	r5, #0
 801a6d8:	f104 0619 	add.w	r6, r4, #25
 801a6dc:	e7f5      	b.n	801a6ca <_printf_i+0x22e>
 801a6de:	bf00      	nop
 801a6e0:	0801e279 	.word	0x0801e279
 801a6e4:	0801e28a 	.word	0x0801e28a

0801a6e8 <_sbrk_r>:
 801a6e8:	b538      	push	{r3, r4, r5, lr}
 801a6ea:	4d06      	ldr	r5, [pc, #24]	; (801a704 <_sbrk_r+0x1c>)
 801a6ec:	2300      	movs	r3, #0
 801a6ee:	4604      	mov	r4, r0
 801a6f0:	4608      	mov	r0, r1
 801a6f2:	602b      	str	r3, [r5, #0]
 801a6f4:	f7e7 fc7a 	bl	8001fec <_sbrk>
 801a6f8:	1c43      	adds	r3, r0, #1
 801a6fa:	d102      	bne.n	801a702 <_sbrk_r+0x1a>
 801a6fc:	682b      	ldr	r3, [r5, #0]
 801a6fe:	b103      	cbz	r3, 801a702 <_sbrk_r+0x1a>
 801a700:	6023      	str	r3, [r4, #0]
 801a702:	bd38      	pop	{r3, r4, r5, pc}
 801a704:	2000a738 	.word	0x2000a738

0801a708 <_raise_r>:
 801a708:	291f      	cmp	r1, #31
 801a70a:	b538      	push	{r3, r4, r5, lr}
 801a70c:	4604      	mov	r4, r0
 801a70e:	460d      	mov	r5, r1
 801a710:	d904      	bls.n	801a71c <_raise_r+0x14>
 801a712:	2316      	movs	r3, #22
 801a714:	6003      	str	r3, [r0, #0]
 801a716:	f04f 30ff 	mov.w	r0, #4294967295
 801a71a:	bd38      	pop	{r3, r4, r5, pc}
 801a71c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801a71e:	b112      	cbz	r2, 801a726 <_raise_r+0x1e>
 801a720:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801a724:	b94b      	cbnz	r3, 801a73a <_raise_r+0x32>
 801a726:	4620      	mov	r0, r4
 801a728:	f000 f830 	bl	801a78c <_getpid_r>
 801a72c:	462a      	mov	r2, r5
 801a72e:	4601      	mov	r1, r0
 801a730:	4620      	mov	r0, r4
 801a732:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a736:	f000 b817 	b.w	801a768 <_kill_r>
 801a73a:	2b01      	cmp	r3, #1
 801a73c:	d00a      	beq.n	801a754 <_raise_r+0x4c>
 801a73e:	1c59      	adds	r1, r3, #1
 801a740:	d103      	bne.n	801a74a <_raise_r+0x42>
 801a742:	2316      	movs	r3, #22
 801a744:	6003      	str	r3, [r0, #0]
 801a746:	2001      	movs	r0, #1
 801a748:	e7e7      	b.n	801a71a <_raise_r+0x12>
 801a74a:	2400      	movs	r4, #0
 801a74c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801a750:	4628      	mov	r0, r5
 801a752:	4798      	blx	r3
 801a754:	2000      	movs	r0, #0
 801a756:	e7e0      	b.n	801a71a <_raise_r+0x12>

0801a758 <raise>:
 801a758:	4b02      	ldr	r3, [pc, #8]	; (801a764 <raise+0xc>)
 801a75a:	4601      	mov	r1, r0
 801a75c:	6818      	ldr	r0, [r3, #0]
 801a75e:	f7ff bfd3 	b.w	801a708 <_raise_r>
 801a762:	bf00      	nop
 801a764:	200000d8 	.word	0x200000d8

0801a768 <_kill_r>:
 801a768:	b538      	push	{r3, r4, r5, lr}
 801a76a:	4d07      	ldr	r5, [pc, #28]	; (801a788 <_kill_r+0x20>)
 801a76c:	2300      	movs	r3, #0
 801a76e:	4604      	mov	r4, r0
 801a770:	4608      	mov	r0, r1
 801a772:	4611      	mov	r1, r2
 801a774:	602b      	str	r3, [r5, #0]
 801a776:	f7e7 fc03 	bl	8001f80 <_kill>
 801a77a:	1c43      	adds	r3, r0, #1
 801a77c:	d102      	bne.n	801a784 <_kill_r+0x1c>
 801a77e:	682b      	ldr	r3, [r5, #0]
 801a780:	b103      	cbz	r3, 801a784 <_kill_r+0x1c>
 801a782:	6023      	str	r3, [r4, #0]
 801a784:	bd38      	pop	{r3, r4, r5, pc}
 801a786:	bf00      	nop
 801a788:	2000a738 	.word	0x2000a738

0801a78c <_getpid_r>:
 801a78c:	f7e7 bbf6 	b.w	8001f7c <_getpid>

0801a790 <__swbuf_r>:
 801a790:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a792:	460e      	mov	r6, r1
 801a794:	4614      	mov	r4, r2
 801a796:	4605      	mov	r5, r0
 801a798:	b118      	cbz	r0, 801a7a2 <__swbuf_r+0x12>
 801a79a:	6983      	ldr	r3, [r0, #24]
 801a79c:	b90b      	cbnz	r3, 801a7a2 <__swbuf_r+0x12>
 801a79e:	f000 fa33 	bl	801ac08 <__sinit>
 801a7a2:	4b21      	ldr	r3, [pc, #132]	; (801a828 <__swbuf_r+0x98>)
 801a7a4:	429c      	cmp	r4, r3
 801a7a6:	d12b      	bne.n	801a800 <__swbuf_r+0x70>
 801a7a8:	686c      	ldr	r4, [r5, #4]
 801a7aa:	69a3      	ldr	r3, [r4, #24]
 801a7ac:	60a3      	str	r3, [r4, #8]
 801a7ae:	89a3      	ldrh	r3, [r4, #12]
 801a7b0:	071a      	lsls	r2, r3, #28
 801a7b2:	d52f      	bpl.n	801a814 <__swbuf_r+0x84>
 801a7b4:	6923      	ldr	r3, [r4, #16]
 801a7b6:	b36b      	cbz	r3, 801a814 <__swbuf_r+0x84>
 801a7b8:	6923      	ldr	r3, [r4, #16]
 801a7ba:	6820      	ldr	r0, [r4, #0]
 801a7bc:	1ac0      	subs	r0, r0, r3
 801a7be:	6963      	ldr	r3, [r4, #20]
 801a7c0:	b2f6      	uxtb	r6, r6
 801a7c2:	4283      	cmp	r3, r0
 801a7c4:	4637      	mov	r7, r6
 801a7c6:	dc04      	bgt.n	801a7d2 <__swbuf_r+0x42>
 801a7c8:	4621      	mov	r1, r4
 801a7ca:	4628      	mov	r0, r5
 801a7cc:	f000 f988 	bl	801aae0 <_fflush_r>
 801a7d0:	bb30      	cbnz	r0, 801a820 <__swbuf_r+0x90>
 801a7d2:	68a3      	ldr	r3, [r4, #8]
 801a7d4:	3b01      	subs	r3, #1
 801a7d6:	60a3      	str	r3, [r4, #8]
 801a7d8:	6823      	ldr	r3, [r4, #0]
 801a7da:	1c5a      	adds	r2, r3, #1
 801a7dc:	6022      	str	r2, [r4, #0]
 801a7de:	701e      	strb	r6, [r3, #0]
 801a7e0:	6963      	ldr	r3, [r4, #20]
 801a7e2:	3001      	adds	r0, #1
 801a7e4:	4283      	cmp	r3, r0
 801a7e6:	d004      	beq.n	801a7f2 <__swbuf_r+0x62>
 801a7e8:	89a3      	ldrh	r3, [r4, #12]
 801a7ea:	07db      	lsls	r3, r3, #31
 801a7ec:	d506      	bpl.n	801a7fc <__swbuf_r+0x6c>
 801a7ee:	2e0a      	cmp	r6, #10
 801a7f0:	d104      	bne.n	801a7fc <__swbuf_r+0x6c>
 801a7f2:	4621      	mov	r1, r4
 801a7f4:	4628      	mov	r0, r5
 801a7f6:	f000 f973 	bl	801aae0 <_fflush_r>
 801a7fa:	b988      	cbnz	r0, 801a820 <__swbuf_r+0x90>
 801a7fc:	4638      	mov	r0, r7
 801a7fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a800:	4b0a      	ldr	r3, [pc, #40]	; (801a82c <__swbuf_r+0x9c>)
 801a802:	429c      	cmp	r4, r3
 801a804:	d101      	bne.n	801a80a <__swbuf_r+0x7a>
 801a806:	68ac      	ldr	r4, [r5, #8]
 801a808:	e7cf      	b.n	801a7aa <__swbuf_r+0x1a>
 801a80a:	4b09      	ldr	r3, [pc, #36]	; (801a830 <__swbuf_r+0xa0>)
 801a80c:	429c      	cmp	r4, r3
 801a80e:	bf08      	it	eq
 801a810:	68ec      	ldreq	r4, [r5, #12]
 801a812:	e7ca      	b.n	801a7aa <__swbuf_r+0x1a>
 801a814:	4621      	mov	r1, r4
 801a816:	4628      	mov	r0, r5
 801a818:	f000 f80c 	bl	801a834 <__swsetup_r>
 801a81c:	2800      	cmp	r0, #0
 801a81e:	d0cb      	beq.n	801a7b8 <__swbuf_r+0x28>
 801a820:	f04f 37ff 	mov.w	r7, #4294967295
 801a824:	e7ea      	b.n	801a7fc <__swbuf_r+0x6c>
 801a826:	bf00      	nop
 801a828:	0801e2c0 	.word	0x0801e2c0
 801a82c:	0801e2e0 	.word	0x0801e2e0
 801a830:	0801e2a0 	.word	0x0801e2a0

0801a834 <__swsetup_r>:
 801a834:	4b32      	ldr	r3, [pc, #200]	; (801a900 <__swsetup_r+0xcc>)
 801a836:	b570      	push	{r4, r5, r6, lr}
 801a838:	681d      	ldr	r5, [r3, #0]
 801a83a:	4606      	mov	r6, r0
 801a83c:	460c      	mov	r4, r1
 801a83e:	b125      	cbz	r5, 801a84a <__swsetup_r+0x16>
 801a840:	69ab      	ldr	r3, [r5, #24]
 801a842:	b913      	cbnz	r3, 801a84a <__swsetup_r+0x16>
 801a844:	4628      	mov	r0, r5
 801a846:	f000 f9df 	bl	801ac08 <__sinit>
 801a84a:	4b2e      	ldr	r3, [pc, #184]	; (801a904 <__swsetup_r+0xd0>)
 801a84c:	429c      	cmp	r4, r3
 801a84e:	d10f      	bne.n	801a870 <__swsetup_r+0x3c>
 801a850:	686c      	ldr	r4, [r5, #4]
 801a852:	89a3      	ldrh	r3, [r4, #12]
 801a854:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a858:	0719      	lsls	r1, r3, #28
 801a85a:	d42c      	bmi.n	801a8b6 <__swsetup_r+0x82>
 801a85c:	06dd      	lsls	r5, r3, #27
 801a85e:	d411      	bmi.n	801a884 <__swsetup_r+0x50>
 801a860:	2309      	movs	r3, #9
 801a862:	6033      	str	r3, [r6, #0]
 801a864:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801a868:	81a3      	strh	r3, [r4, #12]
 801a86a:	f04f 30ff 	mov.w	r0, #4294967295
 801a86e:	e03e      	b.n	801a8ee <__swsetup_r+0xba>
 801a870:	4b25      	ldr	r3, [pc, #148]	; (801a908 <__swsetup_r+0xd4>)
 801a872:	429c      	cmp	r4, r3
 801a874:	d101      	bne.n	801a87a <__swsetup_r+0x46>
 801a876:	68ac      	ldr	r4, [r5, #8]
 801a878:	e7eb      	b.n	801a852 <__swsetup_r+0x1e>
 801a87a:	4b24      	ldr	r3, [pc, #144]	; (801a90c <__swsetup_r+0xd8>)
 801a87c:	429c      	cmp	r4, r3
 801a87e:	bf08      	it	eq
 801a880:	68ec      	ldreq	r4, [r5, #12]
 801a882:	e7e6      	b.n	801a852 <__swsetup_r+0x1e>
 801a884:	0758      	lsls	r0, r3, #29
 801a886:	d512      	bpl.n	801a8ae <__swsetup_r+0x7a>
 801a888:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801a88a:	b141      	cbz	r1, 801a89e <__swsetup_r+0x6a>
 801a88c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801a890:	4299      	cmp	r1, r3
 801a892:	d002      	beq.n	801a89a <__swsetup_r+0x66>
 801a894:	4630      	mov	r0, r6
 801a896:	f7ff fb59 	bl	8019f4c <_free_r>
 801a89a:	2300      	movs	r3, #0
 801a89c:	6363      	str	r3, [r4, #52]	; 0x34
 801a89e:	89a3      	ldrh	r3, [r4, #12]
 801a8a0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801a8a4:	81a3      	strh	r3, [r4, #12]
 801a8a6:	2300      	movs	r3, #0
 801a8a8:	6063      	str	r3, [r4, #4]
 801a8aa:	6923      	ldr	r3, [r4, #16]
 801a8ac:	6023      	str	r3, [r4, #0]
 801a8ae:	89a3      	ldrh	r3, [r4, #12]
 801a8b0:	f043 0308 	orr.w	r3, r3, #8
 801a8b4:	81a3      	strh	r3, [r4, #12]
 801a8b6:	6923      	ldr	r3, [r4, #16]
 801a8b8:	b94b      	cbnz	r3, 801a8ce <__swsetup_r+0x9a>
 801a8ba:	89a3      	ldrh	r3, [r4, #12]
 801a8bc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801a8c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801a8c4:	d003      	beq.n	801a8ce <__swsetup_r+0x9a>
 801a8c6:	4621      	mov	r1, r4
 801a8c8:	4630      	mov	r0, r6
 801a8ca:	f000 fa63 	bl	801ad94 <__smakebuf_r>
 801a8ce:	89a0      	ldrh	r0, [r4, #12]
 801a8d0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a8d4:	f010 0301 	ands.w	r3, r0, #1
 801a8d8:	d00a      	beq.n	801a8f0 <__swsetup_r+0xbc>
 801a8da:	2300      	movs	r3, #0
 801a8dc:	60a3      	str	r3, [r4, #8]
 801a8de:	6963      	ldr	r3, [r4, #20]
 801a8e0:	425b      	negs	r3, r3
 801a8e2:	61a3      	str	r3, [r4, #24]
 801a8e4:	6923      	ldr	r3, [r4, #16]
 801a8e6:	b943      	cbnz	r3, 801a8fa <__swsetup_r+0xc6>
 801a8e8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801a8ec:	d1ba      	bne.n	801a864 <__swsetup_r+0x30>
 801a8ee:	bd70      	pop	{r4, r5, r6, pc}
 801a8f0:	0781      	lsls	r1, r0, #30
 801a8f2:	bf58      	it	pl
 801a8f4:	6963      	ldrpl	r3, [r4, #20]
 801a8f6:	60a3      	str	r3, [r4, #8]
 801a8f8:	e7f4      	b.n	801a8e4 <__swsetup_r+0xb0>
 801a8fa:	2000      	movs	r0, #0
 801a8fc:	e7f7      	b.n	801a8ee <__swsetup_r+0xba>
 801a8fe:	bf00      	nop
 801a900:	200000d8 	.word	0x200000d8
 801a904:	0801e2c0 	.word	0x0801e2c0
 801a908:	0801e2e0 	.word	0x0801e2e0
 801a90c:	0801e2a0 	.word	0x0801e2a0

0801a910 <__register_exitproc>:
 801a910:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a914:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801a9d0 <__register_exitproc+0xc0>
 801a918:	4606      	mov	r6, r0
 801a91a:	f8d8 0000 	ldr.w	r0, [r8]
 801a91e:	461f      	mov	r7, r3
 801a920:	460d      	mov	r5, r1
 801a922:	4691      	mov	r9, r2
 801a924:	f000 fa0e 	bl	801ad44 <__retarget_lock_acquire_recursive>
 801a928:	4b25      	ldr	r3, [pc, #148]	; (801a9c0 <__register_exitproc+0xb0>)
 801a92a:	681c      	ldr	r4, [r3, #0]
 801a92c:	b934      	cbnz	r4, 801a93c <__register_exitproc+0x2c>
 801a92e:	4c25      	ldr	r4, [pc, #148]	; (801a9c4 <__register_exitproc+0xb4>)
 801a930:	601c      	str	r4, [r3, #0]
 801a932:	4b25      	ldr	r3, [pc, #148]	; (801a9c8 <__register_exitproc+0xb8>)
 801a934:	b113      	cbz	r3, 801a93c <__register_exitproc+0x2c>
 801a936:	681b      	ldr	r3, [r3, #0]
 801a938:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801a93c:	6863      	ldr	r3, [r4, #4]
 801a93e:	2b1f      	cmp	r3, #31
 801a940:	dd07      	ble.n	801a952 <__register_exitproc+0x42>
 801a942:	f8d8 0000 	ldr.w	r0, [r8]
 801a946:	f000 f9ff 	bl	801ad48 <__retarget_lock_release_recursive>
 801a94a:	f04f 30ff 	mov.w	r0, #4294967295
 801a94e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a952:	b34e      	cbz	r6, 801a9a8 <__register_exitproc+0x98>
 801a954:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801a958:	b988      	cbnz	r0, 801a97e <__register_exitproc+0x6e>
 801a95a:	4b1c      	ldr	r3, [pc, #112]	; (801a9cc <__register_exitproc+0xbc>)
 801a95c:	b923      	cbnz	r3, 801a968 <__register_exitproc+0x58>
 801a95e:	f8d8 0000 	ldr.w	r0, [r8]
 801a962:	f000 f9f0 	bl	801ad46 <__retarget_lock_release>
 801a966:	e7f0      	b.n	801a94a <__register_exitproc+0x3a>
 801a968:	f44f 7084 	mov.w	r0, #264	; 0x108
 801a96c:	f7ff fac8 	bl	8019f00 <malloc>
 801a970:	2800      	cmp	r0, #0
 801a972:	d0f4      	beq.n	801a95e <__register_exitproc+0x4e>
 801a974:	2300      	movs	r3, #0
 801a976:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801a97a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801a97e:	6863      	ldr	r3, [r4, #4]
 801a980:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801a984:	2201      	movs	r2, #1
 801a986:	409a      	lsls	r2, r3
 801a988:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801a98c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801a990:	4313      	orrs	r3, r2
 801a992:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801a996:	2e02      	cmp	r6, #2
 801a998:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801a99c:	bf02      	ittt	eq
 801a99e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801a9a2:	4313      	orreq	r3, r2
 801a9a4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801a9a8:	6863      	ldr	r3, [r4, #4]
 801a9aa:	f8d8 0000 	ldr.w	r0, [r8]
 801a9ae:	1c5a      	adds	r2, r3, #1
 801a9b0:	3302      	adds	r3, #2
 801a9b2:	6062      	str	r2, [r4, #4]
 801a9b4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801a9b8:	f000 f9c6 	bl	801ad48 <__retarget_lock_release_recursive>
 801a9bc:	2000      	movs	r0, #0
 801a9be:	e7c6      	b.n	801a94e <__register_exitproc+0x3e>
 801a9c0:	2000a730 	.word	0x2000a730
 801a9c4:	2000a6a4 	.word	0x2000a6a4
 801a9c8:	0801e29c 	.word	0x0801e29c
 801a9cc:	08019f01 	.word	0x08019f01
 801a9d0:	2000013c 	.word	0x2000013c

0801a9d4 <__sflush_r>:
 801a9d4:	898a      	ldrh	r2, [r1, #12]
 801a9d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a9da:	4605      	mov	r5, r0
 801a9dc:	0710      	lsls	r0, r2, #28
 801a9de:	460c      	mov	r4, r1
 801a9e0:	d458      	bmi.n	801aa94 <__sflush_r+0xc0>
 801a9e2:	684b      	ldr	r3, [r1, #4]
 801a9e4:	2b00      	cmp	r3, #0
 801a9e6:	dc05      	bgt.n	801a9f4 <__sflush_r+0x20>
 801a9e8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801a9ea:	2b00      	cmp	r3, #0
 801a9ec:	dc02      	bgt.n	801a9f4 <__sflush_r+0x20>
 801a9ee:	2000      	movs	r0, #0
 801a9f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a9f4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801a9f6:	2e00      	cmp	r6, #0
 801a9f8:	d0f9      	beq.n	801a9ee <__sflush_r+0x1a>
 801a9fa:	2300      	movs	r3, #0
 801a9fc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801aa00:	682f      	ldr	r7, [r5, #0]
 801aa02:	602b      	str	r3, [r5, #0]
 801aa04:	d032      	beq.n	801aa6c <__sflush_r+0x98>
 801aa06:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801aa08:	89a3      	ldrh	r3, [r4, #12]
 801aa0a:	075a      	lsls	r2, r3, #29
 801aa0c:	d505      	bpl.n	801aa1a <__sflush_r+0x46>
 801aa0e:	6863      	ldr	r3, [r4, #4]
 801aa10:	1ac0      	subs	r0, r0, r3
 801aa12:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801aa14:	b10b      	cbz	r3, 801aa1a <__sflush_r+0x46>
 801aa16:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801aa18:	1ac0      	subs	r0, r0, r3
 801aa1a:	2300      	movs	r3, #0
 801aa1c:	4602      	mov	r2, r0
 801aa1e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801aa20:	6a21      	ldr	r1, [r4, #32]
 801aa22:	4628      	mov	r0, r5
 801aa24:	47b0      	blx	r6
 801aa26:	1c43      	adds	r3, r0, #1
 801aa28:	89a3      	ldrh	r3, [r4, #12]
 801aa2a:	d106      	bne.n	801aa3a <__sflush_r+0x66>
 801aa2c:	6829      	ldr	r1, [r5, #0]
 801aa2e:	291d      	cmp	r1, #29
 801aa30:	d82c      	bhi.n	801aa8c <__sflush_r+0xb8>
 801aa32:	4a2a      	ldr	r2, [pc, #168]	; (801aadc <__sflush_r+0x108>)
 801aa34:	40ca      	lsrs	r2, r1
 801aa36:	07d6      	lsls	r6, r2, #31
 801aa38:	d528      	bpl.n	801aa8c <__sflush_r+0xb8>
 801aa3a:	2200      	movs	r2, #0
 801aa3c:	6062      	str	r2, [r4, #4]
 801aa3e:	04d9      	lsls	r1, r3, #19
 801aa40:	6922      	ldr	r2, [r4, #16]
 801aa42:	6022      	str	r2, [r4, #0]
 801aa44:	d504      	bpl.n	801aa50 <__sflush_r+0x7c>
 801aa46:	1c42      	adds	r2, r0, #1
 801aa48:	d101      	bne.n	801aa4e <__sflush_r+0x7a>
 801aa4a:	682b      	ldr	r3, [r5, #0]
 801aa4c:	b903      	cbnz	r3, 801aa50 <__sflush_r+0x7c>
 801aa4e:	6560      	str	r0, [r4, #84]	; 0x54
 801aa50:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801aa52:	602f      	str	r7, [r5, #0]
 801aa54:	2900      	cmp	r1, #0
 801aa56:	d0ca      	beq.n	801a9ee <__sflush_r+0x1a>
 801aa58:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801aa5c:	4299      	cmp	r1, r3
 801aa5e:	d002      	beq.n	801aa66 <__sflush_r+0x92>
 801aa60:	4628      	mov	r0, r5
 801aa62:	f7ff fa73 	bl	8019f4c <_free_r>
 801aa66:	2000      	movs	r0, #0
 801aa68:	6360      	str	r0, [r4, #52]	; 0x34
 801aa6a:	e7c1      	b.n	801a9f0 <__sflush_r+0x1c>
 801aa6c:	6a21      	ldr	r1, [r4, #32]
 801aa6e:	2301      	movs	r3, #1
 801aa70:	4628      	mov	r0, r5
 801aa72:	47b0      	blx	r6
 801aa74:	1c41      	adds	r1, r0, #1
 801aa76:	d1c7      	bne.n	801aa08 <__sflush_r+0x34>
 801aa78:	682b      	ldr	r3, [r5, #0]
 801aa7a:	2b00      	cmp	r3, #0
 801aa7c:	d0c4      	beq.n	801aa08 <__sflush_r+0x34>
 801aa7e:	2b1d      	cmp	r3, #29
 801aa80:	d001      	beq.n	801aa86 <__sflush_r+0xb2>
 801aa82:	2b16      	cmp	r3, #22
 801aa84:	d101      	bne.n	801aa8a <__sflush_r+0xb6>
 801aa86:	602f      	str	r7, [r5, #0]
 801aa88:	e7b1      	b.n	801a9ee <__sflush_r+0x1a>
 801aa8a:	89a3      	ldrh	r3, [r4, #12]
 801aa8c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801aa90:	81a3      	strh	r3, [r4, #12]
 801aa92:	e7ad      	b.n	801a9f0 <__sflush_r+0x1c>
 801aa94:	690f      	ldr	r7, [r1, #16]
 801aa96:	2f00      	cmp	r7, #0
 801aa98:	d0a9      	beq.n	801a9ee <__sflush_r+0x1a>
 801aa9a:	0793      	lsls	r3, r2, #30
 801aa9c:	680e      	ldr	r6, [r1, #0]
 801aa9e:	bf08      	it	eq
 801aaa0:	694b      	ldreq	r3, [r1, #20]
 801aaa2:	600f      	str	r7, [r1, #0]
 801aaa4:	bf18      	it	ne
 801aaa6:	2300      	movne	r3, #0
 801aaa8:	eba6 0807 	sub.w	r8, r6, r7
 801aaac:	608b      	str	r3, [r1, #8]
 801aaae:	f1b8 0f00 	cmp.w	r8, #0
 801aab2:	dd9c      	ble.n	801a9ee <__sflush_r+0x1a>
 801aab4:	6a21      	ldr	r1, [r4, #32]
 801aab6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801aab8:	4643      	mov	r3, r8
 801aaba:	463a      	mov	r2, r7
 801aabc:	4628      	mov	r0, r5
 801aabe:	47b0      	blx	r6
 801aac0:	2800      	cmp	r0, #0
 801aac2:	dc06      	bgt.n	801aad2 <__sflush_r+0xfe>
 801aac4:	89a3      	ldrh	r3, [r4, #12]
 801aac6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801aaca:	81a3      	strh	r3, [r4, #12]
 801aacc:	f04f 30ff 	mov.w	r0, #4294967295
 801aad0:	e78e      	b.n	801a9f0 <__sflush_r+0x1c>
 801aad2:	4407      	add	r7, r0
 801aad4:	eba8 0800 	sub.w	r8, r8, r0
 801aad8:	e7e9      	b.n	801aaae <__sflush_r+0xda>
 801aada:	bf00      	nop
 801aadc:	20400001 	.word	0x20400001

0801aae0 <_fflush_r>:
 801aae0:	b538      	push	{r3, r4, r5, lr}
 801aae2:	690b      	ldr	r3, [r1, #16]
 801aae4:	4605      	mov	r5, r0
 801aae6:	460c      	mov	r4, r1
 801aae8:	b913      	cbnz	r3, 801aaf0 <_fflush_r+0x10>
 801aaea:	2500      	movs	r5, #0
 801aaec:	4628      	mov	r0, r5
 801aaee:	bd38      	pop	{r3, r4, r5, pc}
 801aaf0:	b118      	cbz	r0, 801aafa <_fflush_r+0x1a>
 801aaf2:	6983      	ldr	r3, [r0, #24]
 801aaf4:	b90b      	cbnz	r3, 801aafa <_fflush_r+0x1a>
 801aaf6:	f000 f887 	bl	801ac08 <__sinit>
 801aafa:	4b14      	ldr	r3, [pc, #80]	; (801ab4c <_fflush_r+0x6c>)
 801aafc:	429c      	cmp	r4, r3
 801aafe:	d11b      	bne.n	801ab38 <_fflush_r+0x58>
 801ab00:	686c      	ldr	r4, [r5, #4]
 801ab02:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ab06:	2b00      	cmp	r3, #0
 801ab08:	d0ef      	beq.n	801aaea <_fflush_r+0xa>
 801ab0a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801ab0c:	07d0      	lsls	r0, r2, #31
 801ab0e:	d404      	bmi.n	801ab1a <_fflush_r+0x3a>
 801ab10:	0599      	lsls	r1, r3, #22
 801ab12:	d402      	bmi.n	801ab1a <_fflush_r+0x3a>
 801ab14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ab16:	f000 f915 	bl	801ad44 <__retarget_lock_acquire_recursive>
 801ab1a:	4628      	mov	r0, r5
 801ab1c:	4621      	mov	r1, r4
 801ab1e:	f7ff ff59 	bl	801a9d4 <__sflush_r>
 801ab22:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801ab24:	07da      	lsls	r2, r3, #31
 801ab26:	4605      	mov	r5, r0
 801ab28:	d4e0      	bmi.n	801aaec <_fflush_r+0xc>
 801ab2a:	89a3      	ldrh	r3, [r4, #12]
 801ab2c:	059b      	lsls	r3, r3, #22
 801ab2e:	d4dd      	bmi.n	801aaec <_fflush_r+0xc>
 801ab30:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ab32:	f000 f909 	bl	801ad48 <__retarget_lock_release_recursive>
 801ab36:	e7d9      	b.n	801aaec <_fflush_r+0xc>
 801ab38:	4b05      	ldr	r3, [pc, #20]	; (801ab50 <_fflush_r+0x70>)
 801ab3a:	429c      	cmp	r4, r3
 801ab3c:	d101      	bne.n	801ab42 <_fflush_r+0x62>
 801ab3e:	68ac      	ldr	r4, [r5, #8]
 801ab40:	e7df      	b.n	801ab02 <_fflush_r+0x22>
 801ab42:	4b04      	ldr	r3, [pc, #16]	; (801ab54 <_fflush_r+0x74>)
 801ab44:	429c      	cmp	r4, r3
 801ab46:	bf08      	it	eq
 801ab48:	68ec      	ldreq	r4, [r5, #12]
 801ab4a:	e7da      	b.n	801ab02 <_fflush_r+0x22>
 801ab4c:	0801e2c0 	.word	0x0801e2c0
 801ab50:	0801e2e0 	.word	0x0801e2e0
 801ab54:	0801e2a0 	.word	0x0801e2a0

0801ab58 <std>:
 801ab58:	2300      	movs	r3, #0
 801ab5a:	b510      	push	{r4, lr}
 801ab5c:	4604      	mov	r4, r0
 801ab5e:	e9c0 3300 	strd	r3, r3, [r0]
 801ab62:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ab66:	6083      	str	r3, [r0, #8]
 801ab68:	8181      	strh	r1, [r0, #12]
 801ab6a:	6643      	str	r3, [r0, #100]	; 0x64
 801ab6c:	81c2      	strh	r2, [r0, #14]
 801ab6e:	6183      	str	r3, [r0, #24]
 801ab70:	4619      	mov	r1, r3
 801ab72:	2208      	movs	r2, #8
 801ab74:	305c      	adds	r0, #92	; 0x5c
 801ab76:	f7ff f9e1 	bl	8019f3c <memset>
 801ab7a:	4b05      	ldr	r3, [pc, #20]	; (801ab90 <std+0x38>)
 801ab7c:	6263      	str	r3, [r4, #36]	; 0x24
 801ab7e:	4b05      	ldr	r3, [pc, #20]	; (801ab94 <std+0x3c>)
 801ab80:	62a3      	str	r3, [r4, #40]	; 0x28
 801ab82:	4b05      	ldr	r3, [pc, #20]	; (801ab98 <std+0x40>)
 801ab84:	62e3      	str	r3, [r4, #44]	; 0x2c
 801ab86:	4b05      	ldr	r3, [pc, #20]	; (801ab9c <std+0x44>)
 801ab88:	6224      	str	r4, [r4, #32]
 801ab8a:	6323      	str	r3, [r4, #48]	; 0x30
 801ab8c:	bd10      	pop	{r4, pc}
 801ab8e:	bf00      	nop
 801ab90:	0801ae2d 	.word	0x0801ae2d
 801ab94:	0801ae4f 	.word	0x0801ae4f
 801ab98:	0801ae87 	.word	0x0801ae87
 801ab9c:	0801aeab 	.word	0x0801aeab

0801aba0 <_cleanup_r>:
 801aba0:	4901      	ldr	r1, [pc, #4]	; (801aba8 <_cleanup_r+0x8>)
 801aba2:	f000 b8af 	b.w	801ad04 <_fwalk_reent>
 801aba6:	bf00      	nop
 801aba8:	0801aae1 	.word	0x0801aae1

0801abac <__sfmoreglue>:
 801abac:	b570      	push	{r4, r5, r6, lr}
 801abae:	2268      	movs	r2, #104	; 0x68
 801abb0:	1e4d      	subs	r5, r1, #1
 801abb2:	4355      	muls	r5, r2
 801abb4:	460e      	mov	r6, r1
 801abb6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801abba:	f7ff fa33 	bl	801a024 <_malloc_r>
 801abbe:	4604      	mov	r4, r0
 801abc0:	b140      	cbz	r0, 801abd4 <__sfmoreglue+0x28>
 801abc2:	2100      	movs	r1, #0
 801abc4:	e9c0 1600 	strd	r1, r6, [r0]
 801abc8:	300c      	adds	r0, #12
 801abca:	60a0      	str	r0, [r4, #8]
 801abcc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801abd0:	f7ff f9b4 	bl	8019f3c <memset>
 801abd4:	4620      	mov	r0, r4
 801abd6:	bd70      	pop	{r4, r5, r6, pc}

0801abd8 <__sfp_lock_acquire>:
 801abd8:	4801      	ldr	r0, [pc, #4]	; (801abe0 <__sfp_lock_acquire+0x8>)
 801abda:	f000 b8b3 	b.w	801ad44 <__retarget_lock_acquire_recursive>
 801abde:	bf00      	nop
 801abe0:	2000a736 	.word	0x2000a736

0801abe4 <__sfp_lock_release>:
 801abe4:	4801      	ldr	r0, [pc, #4]	; (801abec <__sfp_lock_release+0x8>)
 801abe6:	f000 b8af 	b.w	801ad48 <__retarget_lock_release_recursive>
 801abea:	bf00      	nop
 801abec:	2000a736 	.word	0x2000a736

0801abf0 <__sinit_lock_acquire>:
 801abf0:	4801      	ldr	r0, [pc, #4]	; (801abf8 <__sinit_lock_acquire+0x8>)
 801abf2:	f000 b8a7 	b.w	801ad44 <__retarget_lock_acquire_recursive>
 801abf6:	bf00      	nop
 801abf8:	2000a737 	.word	0x2000a737

0801abfc <__sinit_lock_release>:
 801abfc:	4801      	ldr	r0, [pc, #4]	; (801ac04 <__sinit_lock_release+0x8>)
 801abfe:	f000 b8a3 	b.w	801ad48 <__retarget_lock_release_recursive>
 801ac02:	bf00      	nop
 801ac04:	2000a737 	.word	0x2000a737

0801ac08 <__sinit>:
 801ac08:	b510      	push	{r4, lr}
 801ac0a:	4604      	mov	r4, r0
 801ac0c:	f7ff fff0 	bl	801abf0 <__sinit_lock_acquire>
 801ac10:	69a3      	ldr	r3, [r4, #24]
 801ac12:	b11b      	cbz	r3, 801ac1c <__sinit+0x14>
 801ac14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ac18:	f7ff bff0 	b.w	801abfc <__sinit_lock_release>
 801ac1c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801ac20:	6523      	str	r3, [r4, #80]	; 0x50
 801ac22:	4b13      	ldr	r3, [pc, #76]	; (801ac70 <__sinit+0x68>)
 801ac24:	4a13      	ldr	r2, [pc, #76]	; (801ac74 <__sinit+0x6c>)
 801ac26:	681b      	ldr	r3, [r3, #0]
 801ac28:	62a2      	str	r2, [r4, #40]	; 0x28
 801ac2a:	42a3      	cmp	r3, r4
 801ac2c:	bf04      	itt	eq
 801ac2e:	2301      	moveq	r3, #1
 801ac30:	61a3      	streq	r3, [r4, #24]
 801ac32:	4620      	mov	r0, r4
 801ac34:	f000 f820 	bl	801ac78 <__sfp>
 801ac38:	6060      	str	r0, [r4, #4]
 801ac3a:	4620      	mov	r0, r4
 801ac3c:	f000 f81c 	bl	801ac78 <__sfp>
 801ac40:	60a0      	str	r0, [r4, #8]
 801ac42:	4620      	mov	r0, r4
 801ac44:	f000 f818 	bl	801ac78 <__sfp>
 801ac48:	2200      	movs	r2, #0
 801ac4a:	60e0      	str	r0, [r4, #12]
 801ac4c:	2104      	movs	r1, #4
 801ac4e:	6860      	ldr	r0, [r4, #4]
 801ac50:	f7ff ff82 	bl	801ab58 <std>
 801ac54:	68a0      	ldr	r0, [r4, #8]
 801ac56:	2201      	movs	r2, #1
 801ac58:	2109      	movs	r1, #9
 801ac5a:	f7ff ff7d 	bl	801ab58 <std>
 801ac5e:	68e0      	ldr	r0, [r4, #12]
 801ac60:	2202      	movs	r2, #2
 801ac62:	2112      	movs	r1, #18
 801ac64:	f7ff ff78 	bl	801ab58 <std>
 801ac68:	2301      	movs	r3, #1
 801ac6a:	61a3      	str	r3, [r4, #24]
 801ac6c:	e7d2      	b.n	801ac14 <__sinit+0xc>
 801ac6e:	bf00      	nop
 801ac70:	0801e264 	.word	0x0801e264
 801ac74:	0801aba1 	.word	0x0801aba1

0801ac78 <__sfp>:
 801ac78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ac7a:	4607      	mov	r7, r0
 801ac7c:	f7ff ffac 	bl	801abd8 <__sfp_lock_acquire>
 801ac80:	4b1e      	ldr	r3, [pc, #120]	; (801acfc <__sfp+0x84>)
 801ac82:	681e      	ldr	r6, [r3, #0]
 801ac84:	69b3      	ldr	r3, [r6, #24]
 801ac86:	b913      	cbnz	r3, 801ac8e <__sfp+0x16>
 801ac88:	4630      	mov	r0, r6
 801ac8a:	f7ff ffbd 	bl	801ac08 <__sinit>
 801ac8e:	3648      	adds	r6, #72	; 0x48
 801ac90:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801ac94:	3b01      	subs	r3, #1
 801ac96:	d503      	bpl.n	801aca0 <__sfp+0x28>
 801ac98:	6833      	ldr	r3, [r6, #0]
 801ac9a:	b30b      	cbz	r3, 801ace0 <__sfp+0x68>
 801ac9c:	6836      	ldr	r6, [r6, #0]
 801ac9e:	e7f7      	b.n	801ac90 <__sfp+0x18>
 801aca0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801aca4:	b9d5      	cbnz	r5, 801acdc <__sfp+0x64>
 801aca6:	4b16      	ldr	r3, [pc, #88]	; (801ad00 <__sfp+0x88>)
 801aca8:	60e3      	str	r3, [r4, #12]
 801acaa:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801acae:	6665      	str	r5, [r4, #100]	; 0x64
 801acb0:	f000 f847 	bl	801ad42 <__retarget_lock_init_recursive>
 801acb4:	f7ff ff96 	bl	801abe4 <__sfp_lock_release>
 801acb8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801acbc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801acc0:	6025      	str	r5, [r4, #0]
 801acc2:	61a5      	str	r5, [r4, #24]
 801acc4:	2208      	movs	r2, #8
 801acc6:	4629      	mov	r1, r5
 801acc8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801accc:	f7ff f936 	bl	8019f3c <memset>
 801acd0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801acd4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801acd8:	4620      	mov	r0, r4
 801acda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801acdc:	3468      	adds	r4, #104	; 0x68
 801acde:	e7d9      	b.n	801ac94 <__sfp+0x1c>
 801ace0:	2104      	movs	r1, #4
 801ace2:	4638      	mov	r0, r7
 801ace4:	f7ff ff62 	bl	801abac <__sfmoreglue>
 801ace8:	4604      	mov	r4, r0
 801acea:	6030      	str	r0, [r6, #0]
 801acec:	2800      	cmp	r0, #0
 801acee:	d1d5      	bne.n	801ac9c <__sfp+0x24>
 801acf0:	f7ff ff78 	bl	801abe4 <__sfp_lock_release>
 801acf4:	230c      	movs	r3, #12
 801acf6:	603b      	str	r3, [r7, #0]
 801acf8:	e7ee      	b.n	801acd8 <__sfp+0x60>
 801acfa:	bf00      	nop
 801acfc:	0801e264 	.word	0x0801e264
 801ad00:	ffff0001 	.word	0xffff0001

0801ad04 <_fwalk_reent>:
 801ad04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ad08:	4606      	mov	r6, r0
 801ad0a:	4688      	mov	r8, r1
 801ad0c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801ad10:	2700      	movs	r7, #0
 801ad12:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ad16:	f1b9 0901 	subs.w	r9, r9, #1
 801ad1a:	d505      	bpl.n	801ad28 <_fwalk_reent+0x24>
 801ad1c:	6824      	ldr	r4, [r4, #0]
 801ad1e:	2c00      	cmp	r4, #0
 801ad20:	d1f7      	bne.n	801ad12 <_fwalk_reent+0xe>
 801ad22:	4638      	mov	r0, r7
 801ad24:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ad28:	89ab      	ldrh	r3, [r5, #12]
 801ad2a:	2b01      	cmp	r3, #1
 801ad2c:	d907      	bls.n	801ad3e <_fwalk_reent+0x3a>
 801ad2e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ad32:	3301      	adds	r3, #1
 801ad34:	d003      	beq.n	801ad3e <_fwalk_reent+0x3a>
 801ad36:	4629      	mov	r1, r5
 801ad38:	4630      	mov	r0, r6
 801ad3a:	47c0      	blx	r8
 801ad3c:	4307      	orrs	r7, r0
 801ad3e:	3568      	adds	r5, #104	; 0x68
 801ad40:	e7e9      	b.n	801ad16 <_fwalk_reent+0x12>

0801ad42 <__retarget_lock_init_recursive>:
 801ad42:	4770      	bx	lr

0801ad44 <__retarget_lock_acquire_recursive>:
 801ad44:	4770      	bx	lr

0801ad46 <__retarget_lock_release>:
 801ad46:	4770      	bx	lr

0801ad48 <__retarget_lock_release_recursive>:
 801ad48:	4770      	bx	lr

0801ad4a <__swhatbuf_r>:
 801ad4a:	b570      	push	{r4, r5, r6, lr}
 801ad4c:	460e      	mov	r6, r1
 801ad4e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ad52:	2900      	cmp	r1, #0
 801ad54:	b096      	sub	sp, #88	; 0x58
 801ad56:	4614      	mov	r4, r2
 801ad58:	461d      	mov	r5, r3
 801ad5a:	da08      	bge.n	801ad6e <__swhatbuf_r+0x24>
 801ad5c:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801ad60:	2200      	movs	r2, #0
 801ad62:	602a      	str	r2, [r5, #0]
 801ad64:	061a      	lsls	r2, r3, #24
 801ad66:	d410      	bmi.n	801ad8a <__swhatbuf_r+0x40>
 801ad68:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801ad6c:	e00e      	b.n	801ad8c <__swhatbuf_r+0x42>
 801ad6e:	466a      	mov	r2, sp
 801ad70:	f000 f8c2 	bl	801aef8 <_fstat_r>
 801ad74:	2800      	cmp	r0, #0
 801ad76:	dbf1      	blt.n	801ad5c <__swhatbuf_r+0x12>
 801ad78:	9a01      	ldr	r2, [sp, #4]
 801ad7a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801ad7e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801ad82:	425a      	negs	r2, r3
 801ad84:	415a      	adcs	r2, r3
 801ad86:	602a      	str	r2, [r5, #0]
 801ad88:	e7ee      	b.n	801ad68 <__swhatbuf_r+0x1e>
 801ad8a:	2340      	movs	r3, #64	; 0x40
 801ad8c:	2000      	movs	r0, #0
 801ad8e:	6023      	str	r3, [r4, #0]
 801ad90:	b016      	add	sp, #88	; 0x58
 801ad92:	bd70      	pop	{r4, r5, r6, pc}

0801ad94 <__smakebuf_r>:
 801ad94:	898b      	ldrh	r3, [r1, #12]
 801ad96:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801ad98:	079d      	lsls	r5, r3, #30
 801ad9a:	4606      	mov	r6, r0
 801ad9c:	460c      	mov	r4, r1
 801ad9e:	d507      	bpl.n	801adb0 <__smakebuf_r+0x1c>
 801ada0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801ada4:	6023      	str	r3, [r4, #0]
 801ada6:	6123      	str	r3, [r4, #16]
 801ada8:	2301      	movs	r3, #1
 801adaa:	6163      	str	r3, [r4, #20]
 801adac:	b002      	add	sp, #8
 801adae:	bd70      	pop	{r4, r5, r6, pc}
 801adb0:	ab01      	add	r3, sp, #4
 801adb2:	466a      	mov	r2, sp
 801adb4:	f7ff ffc9 	bl	801ad4a <__swhatbuf_r>
 801adb8:	9900      	ldr	r1, [sp, #0]
 801adba:	4605      	mov	r5, r0
 801adbc:	4630      	mov	r0, r6
 801adbe:	f7ff f931 	bl	801a024 <_malloc_r>
 801adc2:	b948      	cbnz	r0, 801add8 <__smakebuf_r+0x44>
 801adc4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801adc8:	059a      	lsls	r2, r3, #22
 801adca:	d4ef      	bmi.n	801adac <__smakebuf_r+0x18>
 801adcc:	f023 0303 	bic.w	r3, r3, #3
 801add0:	f043 0302 	orr.w	r3, r3, #2
 801add4:	81a3      	strh	r3, [r4, #12]
 801add6:	e7e3      	b.n	801ada0 <__smakebuf_r+0xc>
 801add8:	4b0d      	ldr	r3, [pc, #52]	; (801ae10 <__smakebuf_r+0x7c>)
 801adda:	62b3      	str	r3, [r6, #40]	; 0x28
 801addc:	89a3      	ldrh	r3, [r4, #12]
 801adde:	6020      	str	r0, [r4, #0]
 801ade0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801ade4:	81a3      	strh	r3, [r4, #12]
 801ade6:	9b00      	ldr	r3, [sp, #0]
 801ade8:	6163      	str	r3, [r4, #20]
 801adea:	9b01      	ldr	r3, [sp, #4]
 801adec:	6120      	str	r0, [r4, #16]
 801adee:	b15b      	cbz	r3, 801ae08 <__smakebuf_r+0x74>
 801adf0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801adf4:	4630      	mov	r0, r6
 801adf6:	f000 f891 	bl	801af1c <_isatty_r>
 801adfa:	b128      	cbz	r0, 801ae08 <__smakebuf_r+0x74>
 801adfc:	89a3      	ldrh	r3, [r4, #12]
 801adfe:	f023 0303 	bic.w	r3, r3, #3
 801ae02:	f043 0301 	orr.w	r3, r3, #1
 801ae06:	81a3      	strh	r3, [r4, #12]
 801ae08:	89a0      	ldrh	r0, [r4, #12]
 801ae0a:	4305      	orrs	r5, r0
 801ae0c:	81a5      	strh	r5, [r4, #12]
 801ae0e:	e7cd      	b.n	801adac <__smakebuf_r+0x18>
 801ae10:	0801aba1 	.word	0x0801aba1

0801ae14 <__malloc_lock>:
 801ae14:	4801      	ldr	r0, [pc, #4]	; (801ae1c <__malloc_lock+0x8>)
 801ae16:	f7ff bf95 	b.w	801ad44 <__retarget_lock_acquire_recursive>
 801ae1a:	bf00      	nop
 801ae1c:	2000a735 	.word	0x2000a735

0801ae20 <__malloc_unlock>:
 801ae20:	4801      	ldr	r0, [pc, #4]	; (801ae28 <__malloc_unlock+0x8>)
 801ae22:	f7ff bf91 	b.w	801ad48 <__retarget_lock_release_recursive>
 801ae26:	bf00      	nop
 801ae28:	2000a735 	.word	0x2000a735

0801ae2c <__sread>:
 801ae2c:	b510      	push	{r4, lr}
 801ae2e:	460c      	mov	r4, r1
 801ae30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ae34:	f000 f894 	bl	801af60 <_read_r>
 801ae38:	2800      	cmp	r0, #0
 801ae3a:	bfab      	itete	ge
 801ae3c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801ae3e:	89a3      	ldrhlt	r3, [r4, #12]
 801ae40:	181b      	addge	r3, r3, r0
 801ae42:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801ae46:	bfac      	ite	ge
 801ae48:	6563      	strge	r3, [r4, #84]	; 0x54
 801ae4a:	81a3      	strhlt	r3, [r4, #12]
 801ae4c:	bd10      	pop	{r4, pc}

0801ae4e <__swrite>:
 801ae4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ae52:	461f      	mov	r7, r3
 801ae54:	898b      	ldrh	r3, [r1, #12]
 801ae56:	05db      	lsls	r3, r3, #23
 801ae58:	4605      	mov	r5, r0
 801ae5a:	460c      	mov	r4, r1
 801ae5c:	4616      	mov	r6, r2
 801ae5e:	d505      	bpl.n	801ae6c <__swrite+0x1e>
 801ae60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ae64:	2302      	movs	r3, #2
 801ae66:	2200      	movs	r2, #0
 801ae68:	f000 f868 	bl	801af3c <_lseek_r>
 801ae6c:	89a3      	ldrh	r3, [r4, #12]
 801ae6e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ae72:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801ae76:	81a3      	strh	r3, [r4, #12]
 801ae78:	4632      	mov	r2, r6
 801ae7a:	463b      	mov	r3, r7
 801ae7c:	4628      	mov	r0, r5
 801ae7e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ae82:	f000 b817 	b.w	801aeb4 <_write_r>

0801ae86 <__sseek>:
 801ae86:	b510      	push	{r4, lr}
 801ae88:	460c      	mov	r4, r1
 801ae8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ae8e:	f000 f855 	bl	801af3c <_lseek_r>
 801ae92:	1c43      	adds	r3, r0, #1
 801ae94:	89a3      	ldrh	r3, [r4, #12]
 801ae96:	bf15      	itete	ne
 801ae98:	6560      	strne	r0, [r4, #84]	; 0x54
 801ae9a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801ae9e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801aea2:	81a3      	strheq	r3, [r4, #12]
 801aea4:	bf18      	it	ne
 801aea6:	81a3      	strhne	r3, [r4, #12]
 801aea8:	bd10      	pop	{r4, pc}

0801aeaa <__sclose>:
 801aeaa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801aeae:	f000 b813 	b.w	801aed8 <_close_r>
	...

0801aeb4 <_write_r>:
 801aeb4:	b538      	push	{r3, r4, r5, lr}
 801aeb6:	4d07      	ldr	r5, [pc, #28]	; (801aed4 <_write_r+0x20>)
 801aeb8:	4604      	mov	r4, r0
 801aeba:	4608      	mov	r0, r1
 801aebc:	4611      	mov	r1, r2
 801aebe:	2200      	movs	r2, #0
 801aec0:	602a      	str	r2, [r5, #0]
 801aec2:	461a      	mov	r2, r3
 801aec4:	f7e7 f878 	bl	8001fb8 <_write>
 801aec8:	1c43      	adds	r3, r0, #1
 801aeca:	d102      	bne.n	801aed2 <_write_r+0x1e>
 801aecc:	682b      	ldr	r3, [r5, #0]
 801aece:	b103      	cbz	r3, 801aed2 <_write_r+0x1e>
 801aed0:	6023      	str	r3, [r4, #0]
 801aed2:	bd38      	pop	{r3, r4, r5, pc}
 801aed4:	2000a738 	.word	0x2000a738

0801aed8 <_close_r>:
 801aed8:	b538      	push	{r3, r4, r5, lr}
 801aeda:	4d06      	ldr	r5, [pc, #24]	; (801aef4 <_close_r+0x1c>)
 801aedc:	2300      	movs	r3, #0
 801aede:	4604      	mov	r4, r0
 801aee0:	4608      	mov	r0, r1
 801aee2:	602b      	str	r3, [r5, #0]
 801aee4:	f7e7 f876 	bl	8001fd4 <_close>
 801aee8:	1c43      	adds	r3, r0, #1
 801aeea:	d102      	bne.n	801aef2 <_close_r+0x1a>
 801aeec:	682b      	ldr	r3, [r5, #0]
 801aeee:	b103      	cbz	r3, 801aef2 <_close_r+0x1a>
 801aef0:	6023      	str	r3, [r4, #0]
 801aef2:	bd38      	pop	{r3, r4, r5, pc}
 801aef4:	2000a738 	.word	0x2000a738

0801aef8 <_fstat_r>:
 801aef8:	b538      	push	{r3, r4, r5, lr}
 801aefa:	4d07      	ldr	r5, [pc, #28]	; (801af18 <_fstat_r+0x20>)
 801aefc:	2300      	movs	r3, #0
 801aefe:	4604      	mov	r4, r0
 801af00:	4608      	mov	r0, r1
 801af02:	4611      	mov	r1, r2
 801af04:	602b      	str	r3, [r5, #0]
 801af06:	f7e7 f868 	bl	8001fda <_fstat>
 801af0a:	1c43      	adds	r3, r0, #1
 801af0c:	d102      	bne.n	801af14 <_fstat_r+0x1c>
 801af0e:	682b      	ldr	r3, [r5, #0]
 801af10:	b103      	cbz	r3, 801af14 <_fstat_r+0x1c>
 801af12:	6023      	str	r3, [r4, #0]
 801af14:	bd38      	pop	{r3, r4, r5, pc}
 801af16:	bf00      	nop
 801af18:	2000a738 	.word	0x2000a738

0801af1c <_isatty_r>:
 801af1c:	b538      	push	{r3, r4, r5, lr}
 801af1e:	4d06      	ldr	r5, [pc, #24]	; (801af38 <_isatty_r+0x1c>)
 801af20:	2300      	movs	r3, #0
 801af22:	4604      	mov	r4, r0
 801af24:	4608      	mov	r0, r1
 801af26:	602b      	str	r3, [r5, #0]
 801af28:	f7e7 f85c 	bl	8001fe4 <_isatty>
 801af2c:	1c43      	adds	r3, r0, #1
 801af2e:	d102      	bne.n	801af36 <_isatty_r+0x1a>
 801af30:	682b      	ldr	r3, [r5, #0]
 801af32:	b103      	cbz	r3, 801af36 <_isatty_r+0x1a>
 801af34:	6023      	str	r3, [r4, #0]
 801af36:	bd38      	pop	{r3, r4, r5, pc}
 801af38:	2000a738 	.word	0x2000a738

0801af3c <_lseek_r>:
 801af3c:	b538      	push	{r3, r4, r5, lr}
 801af3e:	4d07      	ldr	r5, [pc, #28]	; (801af5c <_lseek_r+0x20>)
 801af40:	4604      	mov	r4, r0
 801af42:	4608      	mov	r0, r1
 801af44:	4611      	mov	r1, r2
 801af46:	2200      	movs	r2, #0
 801af48:	602a      	str	r2, [r5, #0]
 801af4a:	461a      	mov	r2, r3
 801af4c:	f7e7 f84c 	bl	8001fe8 <_lseek>
 801af50:	1c43      	adds	r3, r0, #1
 801af52:	d102      	bne.n	801af5a <_lseek_r+0x1e>
 801af54:	682b      	ldr	r3, [r5, #0]
 801af56:	b103      	cbz	r3, 801af5a <_lseek_r+0x1e>
 801af58:	6023      	str	r3, [r4, #0]
 801af5a:	bd38      	pop	{r3, r4, r5, pc}
 801af5c:	2000a738 	.word	0x2000a738

0801af60 <_read_r>:
 801af60:	b538      	push	{r3, r4, r5, lr}
 801af62:	4d07      	ldr	r5, [pc, #28]	; (801af80 <_read_r+0x20>)
 801af64:	4604      	mov	r4, r0
 801af66:	4608      	mov	r0, r1
 801af68:	4611      	mov	r1, r2
 801af6a:	2200      	movs	r2, #0
 801af6c:	602a      	str	r2, [r5, #0]
 801af6e:	461a      	mov	r2, r3
 801af70:	f7e7 f814 	bl	8001f9c <_read>
 801af74:	1c43      	adds	r3, r0, #1
 801af76:	d102      	bne.n	801af7e <_read_r+0x1e>
 801af78:	682b      	ldr	r3, [r5, #0]
 801af7a:	b103      	cbz	r3, 801af7e <_read_r+0x1e>
 801af7c:	6023      	str	r3, [r4, #0]
 801af7e:	bd38      	pop	{r3, r4, r5, pc}
 801af80:	2000a738 	.word	0x2000a738

0801af84 <_init>:
 801af84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801af86:	bf00      	nop
 801af88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801af8a:	bc08      	pop	{r3}
 801af8c:	469e      	mov	lr, r3
 801af8e:	4770      	bx	lr

0801af90 <_fini>:
 801af90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801af92:	bf00      	nop
 801af94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801af96:	bc08      	pop	{r3}
 801af98:	469e      	mov	lr, r3
 801af9a:	4770      	bx	lr
