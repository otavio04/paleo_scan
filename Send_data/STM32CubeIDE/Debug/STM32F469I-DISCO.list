
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001ccac  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000383c  0801ce6c  0801ce6c  0002ce6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000038  080206a8  080206a8  000306a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  080206e0  080206e0  0006c7a4  2**0
                  CONTENTS
  5 .ARM          00000008  080206e0  080206e0  000306e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  080206e8  080206e8  0006c7a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  080206e8  080206e8  000306e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08020700  08020700  00030700  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  08020708  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a764  20000140  08020848  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  2000a8a4  08020848  0004a8a4  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0006c7a4  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 0001bf30  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 00000800  9001bf30  9001bf30  0006bf30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000074  9001c730  9001c730  0006c730  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   0004a4bb  00000000  00000000  0006c7d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   0009c094  00000000  00000000  000b6c8f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0001344f  00000000  00000000  00152d23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002a80  00000000  00000000  00166178  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012c702  00000000  00000000  00168bf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 000047d0  00000000  00000000  00295300  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00026b16  00000000  00000000  00299ad0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00037f83  00000000  00000000  002c05e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  002f8569  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007f64  00000000  00000000  002f8638  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801ce54 	.word	0x0801ce54

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801ce54 	.word	0x0801ce54

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f003 fbe1 	bl	8003d94 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f01b fbd9 	bl	801bd88 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ffa5 	bl	8001524 <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005dc:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005e0:	08020708 	.word	0x08020708
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005ec:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005f0:	2000a8a4 	.word	0x2000a8a4

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005f6:	f000 bdf9 	b.w	80011ec <touchgfx_init>

080005fa <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005fa:	f000 be67 	b.w	80012cc <touchgfx_taskEntry>

080005fe <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005fe:	2100      	movs	r1, #0
 8000600:	4608      	mov	r0, r1
 8000602:	f002 bf2f 	b.w	8003464 <BSP_PB_Init>

08000606 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000606:	2000      	movs	r0, #0
 8000608:	f002 bf66 	b.w	80034d8 <BSP_PB_GetState>

0800060c <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800060c:	6840      	ldr	r0, [r0, #4]
    }
 800060e:	4770      	bx	lr

08000610 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000610:	6041      	str	r1, [r0, #4]
    }
 8000612:	4770      	bx	lr

08000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000614:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000618:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 800061c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000620:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000624:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000628:	6813      	ldr	r3, [r2, #0]
 800062a:	f043 0301 	orr.w	r3, r3, #1
 800062e:	6013      	str	r3, [r2, #0]
}
 8000630:	4770      	bx	lr

08000632 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000632:	1a51      	subs	r1, r2, r1
 8000634:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000638:	fbb1 f0f3 	udiv	r0, r1, r3
 800063c:	4770      	bx	lr
	...

08000640 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000640:	4b01      	ldr	r3, [pc, #4]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000642:	6858      	ldr	r0, [r3, #4]
}
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800064c:	4770      	bx	lr

0800064e <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800064e:	b510      	push	{r4, lr}
 8000650:	210c      	movs	r1, #12
 8000652:	4604      	mov	r4, r0
 8000654:	f01b fb20 	bl	801bc98 <_ZdlPvj>
 8000658:	4620      	mov	r0, r4
 800065a:	bd10      	pop	{r4, pc}

0800065c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065c:	6803      	ldr	r3, [r0, #0]
{
 800065e:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000660:	691b      	ldr	r3, [r3, #16]
{
 8000662:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000664:	b131      	cbz	r1, 8000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000666:	4798      	blx	r3
 8000668:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800066a:	6863      	ldr	r3, [r4, #4]
 800066c:	1a9b      	subs	r3, r3, r2
 800066e:	4418      	add	r0, r3
 8000670:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000672:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000674:	4798      	blx	r3
 8000676:	60a0      	str	r0, [r4, #8]
}
 8000678:	e7fb      	b.n	8000672 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800067a <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800067a:	4770      	bx	lr

0800067c <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 800067c:	4770      	bx	lr
	...

08000680 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000680:	b508      	push	{r3, lr}
    Buttons::init();
 8000682:	f7ff ffbc 	bl	80005fe <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000686:	4b02      	ldr	r3, [pc, #8]	; (8000690 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000688:	2200      	movs	r2, #0
 800068a:	601a      	str	r2, [r3, #0]
}
 800068c:	bd08      	pop	{r3, pc}
 800068e:	bf00      	nop
 8000690:	2000015c 	.word	0x2000015c

08000694 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000694:	b570      	push	{r4, r5, r6, lr}
 8000696:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000698:	f7ff ffb5 	bl	8000606 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 800069c:	4a0b      	ldr	r2, [pc, #44]	; (80006cc <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 800069e:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006a0:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006a2:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006a4:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006a6:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a8:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006ac:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006ae:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006b0:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006b2:	d00a      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006b4:	f016 0001 	ands.w	r0, r6, #1
 80006b8:	d007      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ba:	f011 0001 	ands.w	r0, r1, #1
 80006be:	d004      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006c0:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006c2:	bf5a      	itte	pl
 80006c4:	2001      	movpl	r0, #1
 80006c6:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006c8:	2000      	movmi	r0, #0
}
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	2000015c 	.word	0x2000015c

080006d0 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	2104      	movs	r1, #4
 80006d4:	4604      	mov	r4, r0
 80006d6:	f01b fadf 	bl	801bc98 <_ZdlPvj>
 80006da:	4620      	mov	r0, r4
 80006dc:	bd10      	pop	{r4, pc}

080006de <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006de:	4770      	bx	lr

080006e0 <_ZN20STM32TouchControllerD0Ev>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	2104      	movs	r1, #4
 80006e4:	4604      	mov	r4, r0
 80006e6:	f01b fad7 	bl	801bc98 <_ZdlPvj>
 80006ea:	4620      	mov	r0, r4
 80006ec:	bd10      	pop	{r4, pc}
	...

080006f0 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006f0:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006f2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006f6:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006fa:	f003 fa9d 	bl	8003c38 <BSP_TS_Init>
 80006fe:	4b07      	ldr	r3, [pc, #28]	; (800071c <_ZN20STM32TouchController4initEv+0x2c>)
 8000700:	b910      	cbnz	r0, 8000708 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000702:	2201      	movs	r2, #1
 8000704:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000706:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000708:	781b      	ldrb	r3, [r3, #0]
 800070a:	2b00      	cmp	r3, #0
 800070c:	d1fb      	bne.n	8000706 <_ZN20STM32TouchController4initEv+0x16>
 800070e:	4b04      	ldr	r3, [pc, #16]	; (8000720 <_ZN20STM32TouchController4initEv+0x30>)
 8000710:	4a04      	ldr	r2, [pc, #16]	; (8000724 <_ZN20STM32TouchController4initEv+0x34>)
 8000712:	4805      	ldr	r0, [pc, #20]	; (8000728 <_ZN20STM32TouchController4initEv+0x38>)
 8000714:	2127      	movs	r1, #39	; 0x27
 8000716:	f01b faed 	bl	801bcf4 <__assert_func>
 800071a:	bf00      	nop
 800071c:	20000160 	.word	0x20000160
 8000720:	0801cef0 	.word	0x0801cef0
 8000724:	0801cf03 	.word	0x0801cf03
 8000728:	0801cf2d 	.word	0x0801cf2d

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800072c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 800072e:	4b0b      	ldr	r3, [pc, #44]	; (800075c <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000730:	781c      	ldrb	r4, [r3, #0]
{
 8000732:	460e      	mov	r6, r1
 8000734:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000736:	b15c      	cbz	r4, 8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000738:	a801      	add	r0, sp, #4
 800073a:	f003 fab5 	bl	8003ca8 <BSP_TS_GetState>
        if (state.touchDetected)
 800073e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000742:	b143      	cbz	r3, 8000756 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000744:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000748:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800074a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800074e:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000750:	4620      	mov	r0, r4
 8000752:	b004      	add	sp, #16
 8000754:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000756:	461c      	mov	r4, r3
 8000758:	e7fa      	b.n	8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800075a:	bf00      	nop
 800075c:	20000160 	.word	0x20000160

08000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000760:	2801      	cmp	r0, #1
 8000762:	d00b      	beq.n	800077c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1c>
 8000764:	2803      	cmp	r0, #3
 8000766:	d010      	beq.n	800078a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 8000768:	b9c0      	cbnz	r0, 800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800076a:	4b0d      	ldr	r3, [pc, #52]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800076c:	681a      	ldr	r2, [r3, #0]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000776:	480b      	ldr	r0, [pc, #44]	; (80007a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000778:	f004 bb30 	b.w	8004ddc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800077c:	4b08      	ldr	r3, [pc, #32]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800077e:	685a      	ldr	r2, [r3, #4]
 8000780:	fab2 f282 	clz	r2, r2
 8000784:	0952      	lsrs	r2, r2, #5
 8000786:	2140      	movs	r1, #64	; 0x40
 8000788:	e7f5      	b.n	8000776 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800078a:	4b05      	ldr	r3, [pc, #20]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800078c:	4806      	ldr	r0, [pc, #24]	; (80007a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>)
 800078e:	68da      	ldr	r2, [r3, #12]
 8000790:	fab2 f282 	clz	r2, r2
 8000794:	0952      	lsrs	r2, r2, #5
 8000796:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800079a:	e7ed      	b.n	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 800079c:	4770      	bx	lr
 800079e:	bf00      	nop
 80007a0:	20000164 	.word	0x20000164
 80007a4:	40020000 	.word	0x40020000
 80007a8:	40021800 	.word	0x40021800

080007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007ac:	2801      	cmp	r0, #1
 80007ae:	d00b      	beq.n	80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1c>
 80007b0:	2803      	cmp	r0, #3
 80007b2:	d010      	beq.n	80007d6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 80007b4:	b9c0      	cbnz	r0, 80007e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007b6:	4b0d      	ldr	r3, [pc, #52]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007b8:	681a      	ldr	r2, [r3, #0]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c2:	480b      	ldr	r0, [pc, #44]	; (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007c4:	f004 bb0a 	b.w	8004ddc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c8:	4b08      	ldr	r3, [pc, #32]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007ca:	685a      	ldr	r2, [r3, #4]
 80007cc:	3a00      	subs	r2, #0
 80007ce:	bf18      	it	ne
 80007d0:	2201      	movne	r2, #1
 80007d2:	2140      	movs	r1, #64	; 0x40
 80007d4:	e7f5      	b.n	80007c2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007d6:	4b05      	ldr	r3, [pc, #20]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007d8:	4806      	ldr	r0, [pc, #24]	; (80007f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>)
 80007da:	68da      	ldr	r2, [r3, #12]
 80007dc:	3a00      	subs	r2, #0
 80007de:	bf18      	it	ne
 80007e0:	2201      	movne	r2, #1
 80007e2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80007e6:	e7ed      	b.n	80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007e8:	4770      	bx	lr
 80007ea:	bf00      	nop
 80007ec:	20000164 	.word	0x20000164
 80007f0:	40020000 	.word	0x40020000
 80007f4:	40021800 	.word	0x40021800

080007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007f8:	2801      	cmp	r0, #1
 80007fa:	d006      	beq.n	800080a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x12>
 80007fc:	2803      	cmp	r0, #3
 80007fe:	d006      	beq.n	800080e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
 8000800:	b948      	cbnz	r0, 8000816 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1e>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000802:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000804:	4804      	ldr	r0, [pc, #16]	; (8000818 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>)
        HAL_GPIO_TogglePin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000806:	f004 baee 	b.w	8004de6 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800080a:	2140      	movs	r1, #64	; 0x40
 800080c:	e7fa      	b.n	8000804 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800080e:	4803      	ldr	r0, [pc, #12]	; (800081c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000810:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000814:	e7f7      	b.n	8000806 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000816:	4770      	bx	lr
 8000818:	40020000 	.word	0x40020000
 800081c:	40021800 	.word	0x40021800

08000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000820:	2801      	cmp	r0, #1
{
 8000822:	b508      	push	{r3, lr}
    switch (id)
 8000824:	d00a      	beq.n	800083c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000826:	2803      	cmp	r0, #3
 8000828:	d00a      	beq.n	8000840 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
 800082a:	b968      	cbnz	r0, 8000848 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800082c:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800082e:	4807      	ldr	r0, [pc, #28]	; (800084c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2c>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000830:	f004 face 	bl	8004dd0 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000834:	1e43      	subs	r3, r0, #1
 8000836:	4258      	negs	r0, r3
 8000838:	4158      	adcs	r0, r3
 800083a:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800083c:	2140      	movs	r1, #64	; 0x40
 800083e:	e7f6      	b.n	800082e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xe>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000840:	4803      	ldr	r0, [pc, #12]	; (8000850 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000842:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000846:	e7f3      	b.n	8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000848:	2000      	movs	r0, #0
 800084a:	e7f3      	b.n	8000834 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 800084c:	40020000 	.word	0x40020000
 8000850:	40021800 	.word	0x40021800

08000854 <_ZN8touchgfx4GPIO4initEv>:
{
 8000854:	b570      	push	{r4, r5, r6, lr}
 8000856:	4d08      	ldr	r5, [pc, #32]	; (8000878 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000858:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800085a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800085c:	b2e0      	uxtb	r0, r4
 800085e:	f7ff ffdf 	bl	8000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000862:	b118      	cbz	r0, 800086c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000864:	682b      	ldr	r3, [r5, #0]
 8000866:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000868:	bf18      	it	ne
 800086a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800086c:	3401      	adds	r4, #1
 800086e:	2c05      	cmp	r4, #5
 8000870:	f105 0504 	add.w	r5, r5, #4
 8000874:	d1f2      	bne.n	800085c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000876:	bd70      	pop	{r4, r5, r6, pc}
 8000878:	20000164 	.word	0x20000164

0800087c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800087c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800087e:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000882:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000886:	4770      	bx	lr

08000888 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000888:	2000      	movs	r0, #0
 800088a:	4770      	bx	lr

0800088c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800088c:	4b03      	ldr	r3, [pc, #12]	; (800089c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800088e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000890:	3900      	subs	r1, #0
 8000892:	bf18      	it	ne
 8000894:	2101      	movne	r1, #1
 8000896:	7019      	strb	r1, [r3, #0]
    }
 8000898:	4770      	bx	lr
 800089a:	bf00      	nop
 800089c:	2000a5ff 	.word	0x2000a5ff

080008a0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80008a0:	2000      	movs	r0, #0
 80008a2:	4770      	bx	lr

080008a4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008a4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80008a6:	b10b      	cbz	r3, 80008ac <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008a8:	4608      	mov	r0, r1
 80008aa:	4718      	bx	r3
        }
    }
 80008ac:	4770      	bx	lr

080008ae <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80008ae:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80008b2:	4770      	bx	lr

080008b4 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008b4:	6840      	ldr	r0, [r0, #4]
 80008b6:	6803      	ldr	r3, [r0, #0]
 80008b8:	699b      	ldr	r3, [r3, #24]
 80008ba:	4718      	bx	r3

080008bc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008bc:	4770      	bx	lr

080008be <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008be:	4770      	bx	lr

080008c0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 80008c0:	4b01      	ldr	r3, [pc, #4]	; (80008c8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 80008c2:	6818      	ldr	r0, [r3, #0]
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	20000174 	.word	0x20000174

080008cc <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008cc:	4770      	bx	lr
	...

080008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
 80008d0:	b538      	push	{r3, r4, r5, lr}
 80008d2:	4604      	mov	r4, r0
    mcuInstr.init();
 80008d4:	4d09      	ldr	r5, [pc, #36]	; (80008fc <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80008d6:	f7ff ffbd 	bl	8000854 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80008da:	4620      	mov	r0, r4
 80008dc:	f000 fd76 	bl	80013cc <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 80008e0:	2300      	movs	r3, #0
 80008e2:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 80008e6:	4628      	mov	r0, r5
 80008e8:	f7ff fe94 	bl	8000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 80008ec:	2301      	movs	r3, #1
 80008ee:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 80008f2:	4b03      	ldr	r3, [pc, #12]	; (8000900 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 80008f4:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 80008f6:	6163      	str	r3, [r4, #20]
}
 80008f8:	bd38      	pop	{r3, r4, r5, pc}
 80008fa:	bf00      	nop
 80008fc:	20000180 	.word	0x20000180
 8000900:	2000017c 	.word	0x2000017c

08000904 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000904:	6803      	ldr	r3, [r0, #0]
{
 8000906:	4604      	mov	r4, r0
 8000908:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800090a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800090e:	4798      	blx	r3
    enableInterrupts();
 8000910:	6823      	ldr	r3, [r4, #0]
 8000912:	4620      	mov	r0, r4
 8000914:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000916:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000918:	f000 fa2e 	bl	8000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800091c:	6823      	ldr	r3, [r4, #0]
 800091e:	4620      	mov	r0, r4
 8000920:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000922:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 8000924:	2100      	movs	r1, #0
 8000926:	4806      	ldr	r0, [pc, #24]	; (8000940 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8000928:	9100      	str	r1, [sp, #0]
 800092a:	2329      	movs	r3, #41	; 0x29
 800092c:	2215      	movs	r2, #21
 800092e:	f004 f83e 	bl	80049ae <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 8000932:	f000 fa21 	bl	8000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000936:	6823      	ldr	r3, [r4, #0]
 8000938:	4620      	mov	r0, r4
 800093a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800093c:	4798      	blx	r3
    for (;;)
 800093e:	e7f8      	b.n	8000932 <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 8000940:	2000142c 	.word	0x2000142c

08000944 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000944:	b510      	push	{r4, lr}
 8000946:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000948:	f009 fd2e 	bl	800a3a8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800094c:	6823      	ldr	r3, [r4, #0]
 800094e:	4620      	mov	r0, r4
 8000950:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000954:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000958:	4718      	bx	r3

0800095a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800095a:	f000 bd36 	b.w	80013ca <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800095e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800095e:	f000 bd4c 	b.w	80013fa <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000962 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8000962:	f000 bd4c 	b.w	80013fe <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08000966 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000966:	f000 bd1f 	b.w	80013a8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800096a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800096a:	f000 bd25 	b.w	80013b8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800096e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800096e:	f000 bd49 	b.w	8001404 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

08000974 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000974:	4b02      	ldr	r3, [pc, #8]	; (8000980 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000976:	2200      	movs	r2, #0
 8000978:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 800097a:	f008 bedd 	b.w	8009738 <_ZN8touchgfx3HAL10beginFrameEv>
 800097e:	bf00      	nop
 8000980:	20000014 	.word	0x20000014

08000984 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000984:	b510      	push	{r4, lr}
 8000986:	4604      	mov	r4, r0
    HAL::endFrame();
 8000988:	f008 fee2 	bl	8009750 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800098c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000990:	b113      	cbz	r3, 8000998 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000992:	4b02      	ldr	r3, [pc, #8]	; (800099c <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000994:	2201      	movs	r2, #1
 8000996:	701a      	strb	r2, [r3, #0]
    }
}
 8000998:	bd10      	pop	{r4, pc}
 800099a:	bf00      	nop
 800099c:	20000014 	.word	0x20000014

080009a0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009a0:	f008 be8e 	b.w	80096c0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009a4 <_ZN11TouchGFXHALD0Ev>:
 80009a4:	b510      	push	{r4, lr}
 80009a6:	217c      	movs	r1, #124	; 0x7c
 80009a8:	4604      	mov	r4, r0
 80009aa:	f01b f975 	bl	801bc98 <_ZdlPvj>
 80009ae:	4620      	mov	r0, r4
 80009b0:	bd10      	pop	{r4, pc}

080009b2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009b2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80009b6:	b11b      	cbz	r3, 80009c0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009b8:	6840      	ldr	r0, [r0, #4]
 80009ba:	6803      	ldr	r3, [r0, #0]
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	4718      	bx	r3
    }
 80009c0:	4618      	mov	r0, r3
 80009c2:	4770      	bx	lr

080009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009c4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009c6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009ca:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 80009ce:	4b0c      	ldr	r3, [pc, #48]	; (8000a00 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009d0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009d2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009d4:	d009      	beq.n	80009ea <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009d6:	b93a      	cbnz	r2, 80009e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009d8:	4a0a      	ldr	r2, [pc, #40]	; (8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009da:	490b      	ldr	r1, [pc, #44]	; (8000a08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009dc:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009de:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009e0:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009e2:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009e4:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009e6:	701a      	strb	r2, [r3, #0]
    }
 80009e8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009ea:	2a00      	cmp	r2, #0
 80009ec:	d0fc      	beq.n	80009e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ee:	4a05      	ldr	r2, [pc, #20]	; (8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009f0:	4905      	ldr	r1, [pc, #20]	; (8000a08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009f4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009f6:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009fa:	2200      	movs	r2, #0
 80009fc:	e7f3      	b.n	80009e6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009fe:	bf00      	nop
 8000a00:	2000a5f8 	.word	0x2000a5f8
 8000a04:	2000a5f4 	.word	0x2000a5f4
 8000a08:	2000a5f6 	.word	0x2000a5f6

08000a0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a0c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a0e:	4b09      	ldr	r3, [pc, #36]	; (8000a34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a10:	881b      	ldrh	r3, [r3, #0]
 8000a12:	428b      	cmp	r3, r1
 8000a14:	d803      	bhi.n	8000a1e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a16:	4b08      	ldr	r3, [pc, #32]	; (8000a38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a18:	881b      	ldrh	r3, [r3, #0]
 8000a1a:	4293      	cmp	r3, r2
 8000a1c:	d905      	bls.n	8000a2a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a1e:	4b07      	ldr	r3, [pc, #28]	; (8000a3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a20:	4a07      	ldr	r2, [pc, #28]	; (8000a40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a22:	4808      	ldr	r0, [pc, #32]	; (8000a44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a24:	219e      	movs	r1, #158	; 0x9e
 8000a26:	f01b f965 	bl	801bcf4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a2a:	4b07      	ldr	r3, [pc, #28]	; (8000a48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a2c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a2e:	4b07      	ldr	r3, [pc, #28]	; (8000a4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a30:	801a      	strh	r2, [r3, #0]
    }
 8000a32:	bd08      	pop	{r3, pc}
 8000a34:	2000a5f4 	.word	0x2000a5f4
 8000a38:	2000a5f6 	.word	0x2000a5f6
 8000a3c:	0801cf8c 	.word	0x0801cf8c
 8000a40:	0801cfef 	.word	0x0801cfef
 8000a44:	0801d032 	.word	0x0801d032
 8000a48:	2000a5fa 	.word	0x2000a5fa
 8000a4c:	2000a5fc 	.word	0x2000a5fc

08000a50 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	460d      	mov	r5, r1
 8000a54:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 8000a56:	4b0b      	ldr	r3, [pc, #44]	; (8000a84 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8000a58:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a5a:	b935      	cbnz	r5, 8000a6a <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 8000a5c:	4b0a      	ldr	r3, [pc, #40]	; (8000a88 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000a5e:	4a0b      	ldr	r2, [pc, #44]	; (8000a8c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000a60:	480b      	ldr	r0, [pc, #44]	; (8000a90 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000a62:	f240 21bb 	movw	r1, #699	; 0x2bb
 8000a66:	f01b f945 	bl	801bcf4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a6a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a6e:	4b09      	ldr	r3, [pc, #36]	; (8000a94 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 8000a70:	3a00      	subs	r2, #0
 8000a72:	bf18      	it	ne
 8000a74:	2201      	movne	r2, #1
 8000a76:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a78:	6803      	ldr	r3, [r0, #0]
}
 8000a7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000a7e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a82:	4718      	bx	r3
 8000a84:	20000174 	.word	0x20000174
 8000a88:	0801d077 	.word	0x0801d077
 8000a8c:	0801d0af 	.word	0x0801d0af
 8000a90:	0801d032 	.word	0x0801d032
 8000a94:	2000a5fe 	.word	0x2000a5fe

08000a98 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a98:	2801      	cmp	r0, #1
    {
 8000a9a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a9c:	d80a      	bhi.n	8000ab4 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a9e:	784b      	ldrb	r3, [r1, #1]
 8000aa0:	9300      	str	r3, [sp, #0]
 8000aa2:	780b      	ldrb	r3, [r1, #0]
 8000aa4:	4808      	ldr	r0, [pc, #32]	; (8000ac8 <DSI_IO_WriteCmd+0x30>)
 8000aa6:	2215      	movs	r2, #21
 8000aa8:	2100      	movs	r1, #0
 8000aaa:	f003 ff80 	bl	80049ae <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000aae:	b003      	add	sp, #12
 8000ab0:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000ab4:	9101      	str	r1, [sp, #4]
 8000ab6:	5c0b      	ldrb	r3, [r1, r0]
 8000ab8:	9300      	str	r3, [sp, #0]
 8000aba:	2239      	movs	r2, #57	; 0x39
 8000abc:	4603      	mov	r3, r0
 8000abe:	2100      	movs	r1, #0
 8000ac0:	4801      	ldr	r0, [pc, #4]	; (8000ac8 <DSI_IO_WriteCmd+0x30>)
 8000ac2:	f003 ff85 	bl	80049d0 <HAL_DSI_LongWrite>
    }
 8000ac6:	e7f2      	b.n	8000aae <DSI_IO_WriteCmd+0x16>
 8000ac8:	2000142c 	.word	0x2000142c

08000acc <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000acc:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000ace:	4a0b      	ldr	r2, [pc, #44]	; (8000afc <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000ad0:	4c0b      	ldr	r4, [pc, #44]	; (8000b00 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000ad2:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000ad4:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000ad6:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000ad8:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000ada:	9201      	str	r2, [sp, #4]
 8000adc:	2244      	movs	r2, #68	; 0x44
 8000ade:	9200      	str	r2, [sp, #0]
 8000ae0:	2100      	movs	r1, #0
 8000ae2:	2239      	movs	r2, #57	; 0x39
 8000ae4:	4620      	mov	r0, r4
 8000ae6:	f003 ff73 	bl	80049d0 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000aea:	2100      	movs	r1, #0
 8000aec:	9100      	str	r1, [sp, #0]
 8000aee:	2335      	movs	r3, #53	; 0x35
 8000af0:	462a      	mov	r2, r5
 8000af2:	4620      	mov	r0, r4
 8000af4:	f003 ff5b 	bl	80049ae <HAL_DSI_ShortWrite>
    }
 8000af8:	b003      	add	sp, #12
 8000afa:	bd30      	pop	{r4, r5, pc}
 8000afc:	2000018c 	.word	0x2000018c
 8000b00:	2000142c 	.word	0x2000142c

08000b04 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000b04:	b507      	push	{r0, r1, r2, lr}
 8000b06:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000b08:	f7ff ffe0 	bl	8000acc <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000b0c:	9801      	ldr	r0, [sp, #4]
}
 8000b0e:	b003      	add	sp, #12
 8000b10:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000b14:	f000 bc58 	b.w	80013c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000b18 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000b18:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000b1a:	4b07      	ldr	r3, [pc, #28]	; (8000b38 <LCD_SetUpdateRegion+0x20>)
 8000b1c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000b20:	232a      	movs	r3, #42	; 0x2a
 8000b22:	9001      	str	r0, [sp, #4]
 8000b24:	9300      	str	r3, [sp, #0]
 8000b26:	2239      	movs	r2, #57	; 0x39
 8000b28:	2304      	movs	r3, #4
 8000b2a:	2100      	movs	r1, #0
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <LCD_SetUpdateRegion+0x24>)
 8000b2e:	f003 ff4f 	bl	80049d0 <HAL_DSI_LongWrite>
    }
 8000b32:	b003      	add	sp, #12
 8000b34:	f85d fb04 	ldr.w	pc, [sp], #4
 8000b38:	20000004 	.word	0x20000004
 8000b3c:	2000142c 	.word	0x2000142c

08000b40 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000b40:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000b42:	4d15      	ldr	r5, [pc, #84]	; (8000b98 <HAL_DSI_TearingEffectCallback+0x58>)
 8000b44:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000b46:	2000      	movs	r0, #0
 8000b48:	f7ff fe0a 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000b4c:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000b4e:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000b52:	3301      	adds	r3, #1
 8000b54:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000b58:	f000 f902 	bl	8000d60 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000b5c:	4b0f      	ldr	r3, [pc, #60]	; (8000b9c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000b5e:	6828      	ldr	r0, [r5, #0]
 8000b60:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000b62:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000b64:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000b68:	b123      	cbz	r3, 8000b74 <HAL_DSI_TearingEffectCallback+0x34>
 8000b6a:	4d0d      	ldr	r5, [pc, #52]	; (8000ba0 <HAL_DSI_TearingEffectCallback+0x60>)
 8000b6c:	782b      	ldrb	r3, [r5, #0]
 8000b6e:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000b72:	b123      	cbz	r3, 8000b7e <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b78:	2000      	movs	r0, #0
 8000b7a:	f7ff be17 	b.w	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b7e:	f009 fc13 	bl	800a3a8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b82:	4b08      	ldr	r3, [pc, #32]	; (8000ba4 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b84:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b86:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b88:	f7ff ffc6 	bl	8000b18 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b8c:	4620      	mov	r0, r4
 8000b8e:	f003 fefe 	bl	800498e <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b92:	2301      	movs	r3, #1
 8000b94:	702b      	strb	r3, [r5, #0]
    }
 8000b96:	bd70      	pop	{r4, r5, r6, pc}
 8000b98:	2000a600 	.word	0x2000a600
 8000b9c:	20000014 	.word	0x20000014
 8000ba0:	2000018e 	.word	0x2000018e
 8000ba4:	20000178 	.word	0x20000178

08000ba8 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000ba8:	4b33      	ldr	r3, [pc, #204]	; (8000c78 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000baa:	681a      	ldr	r2, [r3, #0]
 8000bac:	3201      	adds	r2, #1
    {
 8000bae:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8000bb0:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000bb2:	4b32      	ldr	r3, [pc, #200]	; (8000c7c <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000bb4:	4c32      	ldr	r4, [pc, #200]	; (8000c80 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000bb6:	6819      	ldr	r1, [r3, #0]
 8000bb8:	4b32      	ldr	r3, [pc, #200]	; (8000c84 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8000bba:	2a03      	cmp	r2, #3
    {
 8000bbc:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8000bbe:	dc2e      	bgt.n	8000c1e <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc0:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8000bc4:	f020 0008 	bic.w	r0, r0, #8
 8000bc8:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000bcc:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000bd0:	fb00 1102 	mla	r1, r0, r2, r1
 8000bd4:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000bd8:	bf0c      	ite	eq
 8000bda:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000bdc:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000bde:	3302      	adds	r3, #2
 8000be0:	4928      	ldr	r1, [pc, #160]	; (8000c84 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000be2:	041b      	lsls	r3, r3, #16
 8000be4:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000be8:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000bea:	4b27      	ldr	r3, [pc, #156]	; (8000c88 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8000bec:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000bee:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000bf2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000bf6:	4b25      	ldr	r3, [pc, #148]	; (8000c8c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bf8:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bfc:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8000bfe:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c00:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000c02:	f7ff ff89 	bl	8000b18 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000c06:	4a1e      	ldr	r2, [pc, #120]	; (8000c80 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000c08:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000c0c:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000c10:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c12:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000c16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000c1a:	f003 beb8 	b.w	800498e <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000c1e:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 8000c22:	f022 0208 	bic.w	r2, r2, #8
 8000c26:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000c2a:	4a19      	ldr	r2, [pc, #100]	; (8000c90 <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000c2c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000c30:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000c32:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 8000c36:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000c38:	4a16      	ldr	r2, [pc, #88]	; (8000c94 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000c3a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000c3e:	4a13      	ldr	r2, [pc, #76]	; (8000c8c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000c40:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c44:	2201      	movs	r2, #1
 8000c46:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000c48:	2000      	movs	r0, #0
 8000c4a:	f7ff ff65 	bl	8000b18 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c4e:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000c52:	f043 0308 	orr.w	r3, r3, #8
 8000c56:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000c5a:	2000      	movs	r0, #0
 8000c5c:	f7ff fda6 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000c60:	4b0d      	ldr	r3, [pc, #52]	; (8000c98 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 8000c62:	2200      	movs	r2, #0
 8000c64:	701a      	strb	r2, [r3, #0]
        return instance;
 8000c66:	4b0d      	ldr	r3, [pc, #52]	; (8000c9c <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8000c68:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000c6a:	b120      	cbz	r0, 8000c76 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8000c6c:	6803      	ldr	r3, [r0, #0]
    }
 8000c6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000c72:	6a1b      	ldr	r3, [r3, #32]
 8000c74:	4718      	bx	r3
 8000c76:	bd70      	pop	{r4, r5, r6, pc}
 8000c78:	20000178 	.word	0x20000178
 8000c7c:	20000174 	.word	0x20000174
 8000c80:	40016c00 	.word	0x40016c00
 8000c84:	40016800 	.word	0x40016800
 8000c88:	00ca01e3 	.word	0x00ca01e3
 8000c8c:	06800193 	.word	0x06800193
 8000c90:	00ca01e2 	.word	0x00ca01e2
 8000c94:	00ca0003 	.word	0x00ca0003
 8000c98:	2000018e 	.word	0x2000018e
 8000c9c:	2000a600 	.word	0x2000a600

08000ca0 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000ca0:	b508      	push	{r3, lr}
        return instance;
 8000ca2:	4b04      	ldr	r3, [pc, #16]	; (8000cb4 <IdleTaskHook+0x14>)
 8000ca4:	4601      	mov	r1, r0
 8000ca6:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000ca8:	b101      	cbz	r1, 8000cac <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000caa:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000cac:	f009 fb96 	bl	800a3dc <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000cb0:	2001      	movs	r0, #1
 8000cb2:	bd08      	pop	{r3, pc}
 8000cb4:	2000a600 	.word	0x2000a600

08000cb8 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000cb8:	4b05      	ldr	r3, [pc, #20]	; (8000cd0 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000cba:	4806      	ldr	r0, [pc, #24]	; (8000cd4 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	605a      	str	r2, [r3, #4]
 8000cc0:	609a      	str	r2, [r3, #8]
 8000cc2:	4a05      	ldr	r2, [pc, #20]	; (8000cd8 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000cc4:	601a      	str	r2, [r3, #0]
 8000cc6:	4b05      	ldr	r3, [pc, #20]	; (8000cdc <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000cc8:	6003      	str	r3, [r0, #0]
        init();
 8000cca:	f7ff bcd9 	b.w	8000680 <_ZN8touchgfx10KeySampler4initEv>
 8000cce:	bf00      	nop
 8000cd0:	20000180 	.word	0x20000180
 8000cd4:	2000017c 	.word	0x2000017c
 8000cd8:	0801ceb4 	.word	0x0801ceb4
 8000cdc:	0801cedc 	.word	0x0801cedc

08000ce0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ce0:	2101      	movs	r1, #1
{
 8000ce2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ce4:	2200      	movs	r2, #0
 8000ce6:	4608      	mov	r0, r1
 8000ce8:	f006 f8f9 	bl	8006ede <osSemaphoreNew>
 8000cec:	4b0a      	ldr	r3, [pc, #40]	; (8000d18 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000cee:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000cf0:	b928      	cbnz	r0, 8000cfe <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000cf2:	4b0a      	ldr	r3, [pc, #40]	; (8000d1c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000cf4:	4a0a      	ldr	r2, [pc, #40]	; (8000d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cf6:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cf8:	480a      	ldr	r0, [pc, #40]	; (8000d24 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000cfa:	f01a fffb 	bl	801bcf4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000cfe:	2200      	movs	r2, #0
 8000d00:	2104      	movs	r1, #4
 8000d02:	2001      	movs	r0, #1
 8000d04:	f006 f988 	bl	8007018 <osMessageQueueNew>
 8000d08:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000d0a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000d0c:	b918      	cbnz	r0, 8000d16 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000d0e:	4b07      	ldr	r3, [pc, #28]	; (8000d2c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000d10:	4a03      	ldr	r2, [pc, #12]	; (8000d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000d12:	212c      	movs	r1, #44	; 0x2c
 8000d14:	e7f0      	b.n	8000cf8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000d16:	bd08      	pop	{r3, pc}
 8000d18:	20000194 	.word	0x20000194
 8000d1c:	0801d1d8 	.word	0x0801d1d8
 8000d20:	0801d221 	.word	0x0801d221
 8000d24:	0801d250 	.word	0x0801d250
 8000d28:	20000190 	.word	0x20000190
 8000d2c:	0801d297 	.word	0x0801d297

08000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000d30:	4b02      	ldr	r3, [pc, #8]	; (8000d3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000d32:	f04f 31ff 	mov.w	r1, #4294967295
 8000d36:	6818      	ldr	r0, [r3, #0]
 8000d38:	f006 b91b 	b.w	8006f72 <osSemaphoreAcquire>
 8000d3c:	20000194 	.word	0x20000194

08000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000d40:	4b01      	ldr	r3, [pc, #4]	; (8000d48 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000d42:	6818      	ldr	r0, [r3, #0]
 8000d44:	f006 b940 	b.w	8006fc8 <osSemaphoreRelease>
 8000d48:	20000194 	.word	0x20000194

08000d4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000d4c:	4b02      	ldr	r3, [pc, #8]	; (8000d58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000d4e:	2100      	movs	r1, #0
 8000d50:	6818      	ldr	r0, [r3, #0]
 8000d52:	f006 b90e 	b.w	8006f72 <osSemaphoreAcquire>
 8000d56:	bf00      	nop
 8000d58:	20000194 	.word	0x20000194

08000d5c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000d5c:	f7ff bff0 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000d60 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000d60:	4803      	ldr	r0, [pc, #12]	; (8000d70 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000d62:	4904      	ldr	r1, [pc, #16]	; (8000d74 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000d64:	6800      	ldr	r0, [r0, #0]
 8000d66:	2300      	movs	r3, #0
 8000d68:	461a      	mov	r2, r3
 8000d6a:	f006 b990 	b.w	800708e <osMessageQueuePut>
 8000d6e:	bf00      	nop
 8000d70:	20000190 	.word	0x20000190
 8000d74:	20000018 	.word	0x20000018

08000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d78:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d7a:	4c08      	ldr	r4, [pc, #32]	; (8000d9c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	461a      	mov	r2, r3
 8000d80:	a901      	add	r1, sp, #4
 8000d82:	6820      	ldr	r0, [r4, #0]
 8000d84:	f006 f9b3 	bl	80070ee <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d88:	6820      	ldr	r0, [r4, #0]
 8000d8a:	f04f 33ff 	mov.w	r3, #4294967295
 8000d8e:	2200      	movs	r2, #0
 8000d90:	a901      	add	r1, sp, #4
 8000d92:	f006 f9ac 	bl	80070ee <osMessageQueueGet>
}
 8000d96:	b002      	add	sp, #8
 8000d98:	bd10      	pop	{r4, pc}
 8000d9a:	bf00      	nop
 8000d9c:	20000190 	.word	0x20000190

08000da0 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000da0:	6803      	ldr	r3, [r0, #0]
 8000da2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000da4:	4718      	bx	r3

08000da6 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000da6:	2001      	movs	r0, #1
 8000da8:	4770      	bx	lr

08000daa <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000daa:	6803      	ldr	r3, [r0, #0]
 8000dac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000dae:	4718      	bx	r3

08000db0 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000db0:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000db2:	2300      	movs	r3, #0
 8000db4:	9301      	str	r3, [sp, #4]
 8000db6:	4b0d      	ldr	r3, [pc, #52]	; (8000dec <_ZN8STM32DMA10initializeEv+0x3c>)
 8000db8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dba:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dbe:	631a      	str	r2, [r3, #48]	; 0x30
 8000dc0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dc2:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000dc6:	9201      	str	r2, [sp, #4]
 8000dc8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000dca:	691a      	ldr	r2, [r3, #16]
 8000dcc:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dd0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000dd2:	691a      	ldr	r2, [r3, #16]
 8000dd4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000dd8:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000dda:	4b05      	ldr	r3, [pc, #20]	; (8000df0 <_ZN8STM32DMA10initializeEv+0x40>)
 8000ddc:	4a05      	ldr	r2, [pc, #20]	; (8000df4 <_ZN8STM32DMA10initializeEv+0x44>)
 8000dde:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000de0:	4b05      	ldr	r3, [pc, #20]	; (8000df8 <_ZN8STM32DMA10initializeEv+0x48>)
 8000de2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000de6:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000de8:	b002      	add	sp, #8
 8000dea:	4770      	bx	lr
 8000dec:	40023800 	.word	0x40023800
 8000df0:	200013ec 	.word	0x200013ec
 8000df4:	08000e3d 	.word	0x08000e3d
 8000df8:	e000e100 	.word	0xe000e100

08000dfc <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000dfc:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000e00:	4770      	bx	lr
	...

08000e04 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000e04:	4b05      	ldr	r3, [pc, #20]	; (8000e1c <_ZN8STM32DMAD1Ev+0x18>)
 8000e06:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000e08:	4b05      	ldr	r3, [pc, #20]	; (8000e20 <_ZN8STM32DMAD1Ev+0x1c>)
 8000e0a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000e0e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000e12:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000e16:	f3bf 8f6f 	isb	sy
}
 8000e1a:	4770      	bx	lr
 8000e1c:	0801d430 	.word	0x0801d430
 8000e20:	e000e100 	.word	0xe000e100

08000e24 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000e24:	b510      	push	{r4, lr}
 8000e26:	4604      	mov	r4, r0
}
 8000e28:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000e2c:	f7ff ffea 	bl	8000e04 <_ZN8STM32DMAD1Ev>
 8000e30:	4620      	mov	r0, r4
 8000e32:	f01a ff31 	bl	801bc98 <_ZdlPvj>
 8000e36:	4620      	mov	r0, r4
 8000e38:	bd10      	pop	{r4, pc}
	...

08000e3c <DMA2D_XferCpltCallback>:
 8000e3c:	4b02      	ldr	r3, [pc, #8]	; (8000e48 <DMA2D_XferCpltCallback+0xc>)
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000e42:	6803      	ldr	r3, [r0, #0]
 8000e44:	695b      	ldr	r3, [r3, #20]
 8000e46:	4718      	bx	r3
 8000e48:	2000a600 	.word	0x2000a600

08000e4c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000e4c:	b570      	push	{r4, r5, r6, lr}
 8000e4e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000e50:	4625      	mov	r5, r4
 8000e52:	4b0a      	ldr	r3, [pc, #40]	; (8000e7c <_ZN8STM32DMAC1Ev+0x30>)
 8000e54:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000e56:	2600      	movs	r6, #0
 8000e58:	6060      	str	r0, [r4, #4]
 8000e5a:	7226      	strb	r6, [r4, #8]
 8000e5c:	7266      	strb	r6, [r4, #9]
 8000e5e:	f845 3b20 	str.w	r3, [r5], #32
 8000e62:	2260      	movs	r2, #96	; 0x60
 8000e64:	4629      	mov	r1, r5
 8000e66:	f009 fc1f 	bl	800a6a8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000e6a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000e6e:	60ee      	str	r6, [r5, #12]
 8000e70:	3524      	adds	r5, #36	; 0x24
 8000e72:	42ab      	cmp	r3, r5
 8000e74:	d1fb      	bne.n	8000e6e <_ZN8STM32DMAC1Ev+0x22>
}
 8000e76:	4620      	mov	r0, r4
 8000e78:	bd70      	pop	{r4, r5, r6, pc}
 8000e7a:	bf00      	nop
 8000e7c:	0801d430 	.word	0x0801d430

08000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000e80:	b508      	push	{r3, lr}
    switch (format)
 8000e82:	290b      	cmp	r1, #11
 8000e84:	d80b      	bhi.n	8000e9e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000e86:	e8df f001 	tbb	[pc, r1]
 8000e8a:	0612      	.short	0x0612
 8000e8c:	0a0a0a10 	.word	0x0a0a0a10
 8000e90:	0808080a 	.word	0x0808080a
 8000e94:	0808      	.short	0x0808
 8000e96:	2001      	movs	r0, #1
}
 8000e98:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000e9a:	2005      	movs	r0, #5
        break;
 8000e9c:	e7fc      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000e9e:	4b05      	ldr	r3, [pc, #20]	; (8000eb4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ea0:	4a05      	ldr	r2, [pc, #20]	; (8000eb8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ea2:	4806      	ldr	r0, [pc, #24]	; (8000ebc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000ea4:	2166      	movs	r1, #102	; 0x66
 8000ea6:	f01a ff25 	bl	801bcf4 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000eaa:	2000      	movs	r0, #0
 8000eac:	e7f4      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000eae:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000eb0:	e7f2      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000eb2:	bf00      	nop
 8000eb4:	0801d2d9 	.word	0x0801d2d9
 8000eb8:	0801d2f4 	.word	0x0801d2f4
 8000ebc:	0801d33e 	.word	0x0801d33e

08000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ec0:	b508      	push	{r3, lr}
    switch (format)
 8000ec2:	290a      	cmp	r1, #10
 8000ec4:	d809      	bhi.n	8000eda <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ec6:	e8df f001 	tbb	[pc, r1]
 8000eca:	0610      	.short	0x0610
 8000ecc:	0808080e 	.word	0x0808080e
 8000ed0:	06060608 	.word	0x06060608
 8000ed4:	06          	.byte	0x06
 8000ed5:	00          	.byte	0x00
 8000ed6:	2001      	movs	r0, #1
}
 8000ed8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000eda:	4b05      	ldr	r3, [pc, #20]	; (8000ef0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000edc:	4a05      	ldr	r2, [pc, #20]	; (8000ef4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ede:	4806      	ldr	r0, [pc, #24]	; (8000ef8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ee0:	2187      	movs	r1, #135	; 0x87
 8000ee2:	f01a ff07 	bl	801bcf4 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000ee6:	2000      	movs	r0, #0
 8000ee8:	e7f6      	b.n	8000ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000eea:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000eec:	e7f4      	b.n	8000ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000eee:	bf00      	nop
 8000ef0:	0801d2d9 	.word	0x0801d2d9
 8000ef4:	0801d383 	.word	0x0801d383
 8000ef8:	0801d33e 	.word	0x0801d33e

08000efc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f00:	7f4f      	ldrb	r7, [r1, #29]
{
 8000f02:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f04:	4639      	mov	r1, r7
{
 8000f06:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f08:	f7ff ffba 	bl	8000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f0c:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f10:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f12:	4641      	mov	r1, r8
 8000f14:	4648      	mov	r0, r9
 8000f16:	f7ff ffb3 	bl	8000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1a:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1c:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1e:	4648      	mov	r0, r9
 8000f20:	f7ff ffce 	bl	8000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f24:	8aa1      	ldrh	r1, [r4, #20]
 8000f26:	8b62      	ldrh	r2, [r4, #26]
 8000f28:	4b42      	ldr	r3, [pc, #264]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000f2a:	1a52      	subs	r2, r2, r1
 8000f2c:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f2e:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000f30:	8b22      	ldrh	r2, [r4, #24]
 8000f32:	1a52      	subs	r2, r2, r1
 8000f34:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f36:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000f38:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f3a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f3e:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f40:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000f42:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f44:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000f46:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000f48:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f4a:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000f4e:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f50:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000f54:	d026      	beq.n	8000fa4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000f56:	d810      	bhi.n	8000f7a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000f58:	2920      	cmp	r1, #32
 8000f5a:	ea45 0402 	orr.w	r4, r5, r2
 8000f5e:	d061      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000f60:	2940      	cmp	r1, #64	; 0x40
 8000f62:	d05f      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000f64:	2904      	cmp	r1, #4
 8000f66:	d05d      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f68:	4b32      	ldr	r3, [pc, #200]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000f6a:	432a      	orrs	r2, r5
 8000f6c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000f70:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f72:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000f74:	d05a      	beq.n	800102c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f76:	4a30      	ldr	r2, [pc, #192]	; (8001038 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000f78:	e040      	b.n	8000ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000f7a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000f7e:	d007      	beq.n	8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000f80:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000f84:	d1f0      	bne.n	8000f68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f86:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000f8a:	f042 0209 	orr.w	r2, r2, #9
 8000f8e:	e003      	b.n	8000f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f90:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000f94:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f98:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000f9a:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000f9c:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f9e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fa0:	6158      	str	r0, [r3, #20]
 8000fa2:	e02a      	b.n	8000ffa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000fa4:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000fa6:	432a      	orrs	r2, r5
 8000fa8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000fac:	1d21      	adds	r1, r4, #4
 8000fae:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000fb0:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000fb2:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fb4:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fb6:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000fb8:	b142      	cbz	r2, 8000fcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000fba:	2a01      	cmp	r2, #1
 8000fbc:	d021      	beq.n	8001002 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000fbe:	4b1f      	ldr	r3, [pc, #124]	; (800103c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000fc0:	4a1f      	ldr	r2, [pc, #124]	; (8001040 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000fc2:	4820      	ldr	r0, [pc, #128]	; (8001044 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000fc4:	f240 1111 	movw	r1, #273	; 0x111
 8000fc8:	f01a fe94 	bl	801bcf4 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000fcc:	69da      	ldr	r2, [r3, #28]
 8000fce:	8861      	ldrh	r1, [r4, #2]
 8000fd0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000fd4:	3901      	subs	r1, #1
 8000fd6:	f022 0210 	bic.w	r2, r2, #16
 8000fda:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000fde:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000fe0:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000fe2:	4b14      	ldr	r3, [pc, #80]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000fe4:	69da      	ldr	r2, [r3, #28]
 8000fe6:	f042 0220 	orr.w	r2, r2, #32
 8000fea:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000fec:	69da      	ldr	r2, [r3, #28]
 8000fee:	0692      	lsls	r2, r2, #26
 8000ff0:	d4fc      	bmi.n	8000fec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000ff2:	2210      	movs	r2, #16
 8000ff4:	609a      	str	r2, [r3, #8]
            if(blend)
 8000ff6:	2800      	cmp	r0, #0
 8000ff8:	d0bd      	beq.n	8000f76 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ffa:	4a13      	ldr	r2, [pc, #76]	; (8001048 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ffc:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ffe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001002:	8862      	ldrh	r2, [r4, #2]
 8001004:	69d9      	ldr	r1, [r3, #28]
 8001006:	1e54      	subs	r4, r2, #1
 8001008:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 800100c:	f022 0210 	bic.w	r2, r2, #16
 8001010:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8001014:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001018:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 800101c:	bf18      	it	ne
 800101e:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001020:	61da      	str	r2, [r3, #28]
                break;
 8001022:	e7de      	b.n	8000fe2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001024:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001028:	61dc      	str	r4, [r3, #28]
 800102a:	e7b8      	b.n	8000f9e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800102c:	f240 2201 	movw	r2, #513	; 0x201
 8001030:	e7e4      	b.n	8000ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8001032:	bf00      	nop
 8001034:	4002b000 	.word	0x4002b000
 8001038:	00010201 	.word	0x00010201
 800103c:	0801d3ce 	.word	0x0801d3ce
 8001040:	0801d3e8 	.word	0x0801d3e8
 8001044:	0801d33e 	.word	0x0801d33e
 8001048:	00020201 	.word	0x00020201

0800104c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800104c:	b570      	push	{r4, r5, r6, lr}
 800104e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001050:	7f89      	ldrb	r1, [r1, #30]
 8001052:	f7ff ff35 	bl	8000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001056:	8aa6      	ldrh	r6, [r4, #20]
 8001058:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800105a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800105c:	4b15      	ldr	r3, [pc, #84]	; (80010b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800105e:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001060:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001062:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001066:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001068:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800106a:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800106c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800106e:	6826      	ldr	r6, [r4, #0]
 8001070:	68e1      	ldr	r1, [r4, #12]
 8001072:	2e08      	cmp	r6, #8
 8001074:	d10d      	bne.n	8001092 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001076:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001078:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800107a:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 800107c:	7f20      	ldrb	r0, [r4, #28]
 800107e:	4a0e      	ldr	r2, [pc, #56]	; (80010b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001080:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001084:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001086:	4a0d      	ldr	r2, [pc, #52]	; (80010bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001088:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800108a:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800108c:	60dd      	str	r5, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800108e:	601a      	str	r2, [r3, #0]
    }
}
 8001090:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001092:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001094:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001096:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001098:	0948      	lsrs	r0, r1, #5
 800109a:	0a0a      	lsrs	r2, r1, #8
 800109c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80010a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80010a4:	4302      	orrs	r2, r0
 80010a6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80010aa:	430a      	orrs	r2, r1
 80010ac:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80010ae:	4a04      	ldr	r2, [pc, #16]	; (80010c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 80010b0:	e7ed      	b.n	800108e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 80010b2:	bf00      	nop
 80010b4:	4002b000 	.word	0x4002b000
 80010b8:	00010009 	.word	0x00010009
 80010bc:	00020201 	.word	0x00020201
 80010c0:	00030201 	.word	0x00030201

080010c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010c4:	2001      	movs	r0, #1
 80010c6:	4770      	bx	lr

080010c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010c8:	200c      	movs	r0, #12
 80010ca:	4770      	bx	lr

080010cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010cc:	230c      	movs	r3, #12
 80010ce:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d2:	3008      	adds	r0, #8
 80010d4:	4770      	bx	lr

080010d6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010d6:	230c      	movs	r3, #12
 80010d8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010dc:	3008      	adds	r0, #8
 80010de:	4770      	bx	lr

080010e0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010e0:	2001      	movs	r0, #1
 80010e2:	4770      	bx	lr

080010e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010e4:	f44f 70fe 	mov.w	r0, #508	; 0x1fc
 80010e8:	4770      	bx	lr

080010ea <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ea:	f44f 73fe 	mov.w	r3, #508	; 0x1fc
 80010ee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010f6:	f44f 73fe 	mov.w	r3, #508	; 0x1fc
 80010fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010fe:	3008      	adds	r0, #8
 8001100:	4770      	bx	lr

08001102 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001102:	2001      	movs	r0, #1
 8001104:	4770      	bx	lr

08001106 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001106:	2010      	movs	r0, #16
 8001108:	4770      	bx	lr

0800110a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800110a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800110e:	3008      	adds	r0, #8
 8001110:	4770      	bx	lr

08001112 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001112:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001116:	3008      	adds	r0, #8
 8001118:	4770      	bx	lr

0800111a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800111a:	4608      	mov	r0, r1
 800111c:	f001 b930 	b.w	8002380 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001120:	b510      	push	{r4, lr}
 8001122:	4b03      	ldr	r3, [pc, #12]	; (8001130 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001124:	6003      	str	r3, [r0, #0]
 8001126:	4604      	mov	r4, r0
 8001128:	f007 fff0 	bl	800910c <_ZN8touchgfx17AbstractPartitionD1Ev>
 800112c:	4620      	mov	r0, r4
 800112e:	bd10      	pop	{r4, pc}
 8001130:	0801d4e8 	.word	0x0801d4e8

08001134 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001134:	b510      	push	{r4, lr}
 8001136:	4604      	mov	r4, r0
 8001138:	f7ff fff2 	bl	8001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800113c:	4620      	mov	r0, r4
 800113e:	2114      	movs	r1, #20
 8001140:	f01a fdaa 	bl	801bc98 <_ZdlPvj>
 8001144:	4620      	mov	r0, r4
 8001146:	bd10      	pop	{r4, pc}

08001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001148:	b510      	push	{r4, lr}
 800114a:	4b03      	ldr	r3, [pc, #12]	; (8001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800114c:	6003      	str	r3, [r0, #0]
 800114e:	4604      	mov	r4, r0
 8001150:	f007 ffdc 	bl	800910c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001154:	4620      	mov	r0, r4
 8001156:	bd10      	pop	{r4, pc}
 8001158:	0801d4b4 	.word	0x0801d4b4

0800115c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800115c:	b510      	push	{r4, lr}
 800115e:	4604      	mov	r4, r0
 8001160:	f7ff fff2 	bl	8001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001164:	4620      	mov	r0, r4
 8001166:	f44f 7101 	mov.w	r1, #516	; 0x204
 800116a:	f01a fd95 	bl	801bc98 <_ZdlPvj>
 800116e:	4620      	mov	r0, r4
 8001170:	bd10      	pop	{r4, pc}
	...

08001174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001174:	b510      	push	{r4, lr}
 8001176:	4b03      	ldr	r3, [pc, #12]	; (8001184 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001178:	6003      	str	r3, [r0, #0]
 800117a:	4604      	mov	r4, r0
 800117c:	f007 ffc6 	bl	800910c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001180:	4620      	mov	r0, r4
 8001182:	bd10      	pop	{r4, pc}
 8001184:	0801d480 	.word	0x0801d480

08001188 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001188:	b510      	push	{r4, lr}
 800118a:	4604      	mov	r4, r0
 800118c:	f7ff fff2 	bl	8001174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001190:	4620      	mov	r0, r4
 8001192:	2118      	movs	r1, #24
 8001194:	f01a fd80 	bl	801bc98 <_ZdlPvj>
 8001198:	4620      	mov	r0, r4
 800119a:	bd10      	pop	{r4, pc}

0800119c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800119c:	b510      	push	{r4, lr}
 800119e:	4b08      	ldr	r3, [pc, #32]	; (80011c0 <_ZN12FrontendHeapD1Ev+0x24>)
 80011a0:	6003      	str	r3, [r0, #0]
 80011a2:	4604      	mov	r4, r0
 80011a4:	f500 700c 	add.w	r0, r0, #560	; 0x230
 80011a8:	f7ff ffba 	bl	8001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011ac:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80011b0:	f7ff ffca 	bl	8001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011b4:	f104 0014 	add.w	r0, r4, #20
 80011b8:	f7ff ffdc 	bl	8001174 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011bc:	4620      	mov	r0, r4
 80011be:	bd10      	pop	{r4, pc}
 80011c0:	0801d51c 	.word	0x0801d51c

080011c4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011c4:	b508      	push	{r3, lr}
 80011c6:	4802      	ldr	r0, [pc, #8]	; (80011d0 <__tcf_0+0xc>)
 80011c8:	f7ff ffe8 	bl	800119c <_ZN12FrontendHeapD1Ev>
 80011cc:	bd08      	pop	{r3, pc}
 80011ce:	bf00      	nop
 80011d0:	2000019c 	.word	0x2000019c

080011d4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011d4:	b510      	push	{r4, lr}
 80011d6:	4604      	mov	r4, r0
 80011d8:	f7ff ffe0 	bl	800119c <_ZN12FrontendHeapD1Ev>
 80011dc:	4620      	mov	r0, r4
 80011de:	f44f 7168 	mov.w	r1, #928	; 0x3a0
 80011e2:	f01a fd59 	bl	801bc98 <_ZdlPvj>
 80011e6:	4620      	mov	r0, r4
 80011e8:	bd10      	pop	{r4, pc}
	...

080011ec <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011f0:	f000 ff50 	bl	8002094 <_ZN14BitmapDatabase11getInstanceEv>
 80011f4:	4605      	mov	r5, r0
 80011f6:	f000 ff51 	bl	800209c <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011fa:	2400      	movs	r4, #0
 80011fc:	4601      	mov	r1, r0
 80011fe:	4623      	mov	r3, r4
 8001200:	4628      	mov	r0, r5
 8001202:	4622      	mov	r2, r4
 8001204:	9400      	str	r4, [sp, #0]
 8001206:	f00e fbff 	bl	800fa08 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800120a:	4b25      	ldr	r3, [pc, #148]	; (80012a0 <touchgfx_init+0xb4>)
 800120c:	4a25      	ldr	r2, [pc, #148]	; (80012a4 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 800120e:	4d26      	ldr	r5, [pc, #152]	; (80012a8 <touchgfx_init+0xbc>)
 8001210:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001212:	4620      	mov	r0, r4
 8001214:	f001 fd36 	bl	8002c84 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001218:	4824      	ldr	r0, [pc, #144]	; (80012ac <touchgfx_init+0xc0>)
 800121a:	f00e fb41 	bl	800f8a0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800121e:	782b      	ldrb	r3, [r5, #0]
 8001220:	f3bf 8f5b 	dmb	ish
 8001224:	07db      	lsls	r3, r3, #31
 8001226:	d435      	bmi.n	8001294 <touchgfx_init+0xa8>
 8001228:	4628      	mov	r0, r5
 800122a:	f01a fd37 	bl	801bc9c <__cxa_guard_acquire>
 800122e:	b388      	cbz	r0, 8001294 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001230:	4c1f      	ldr	r4, [pc, #124]	; (80012b0 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001232:	4b20      	ldr	r3, [pc, #128]	; (80012b4 <touchgfx_init+0xc8>)
 8001234:	6023      	str	r3, [r4, #0]
 8001236:	f504 7612 	add.w	r6, r4, #584	; 0x248
 800123a:	f104 0014 	add.w	r0, r4, #20
 800123e:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001242:	f504 770c 	add.w	r7, r4, #560	; 0x230
 8001246:	6060      	str	r0, [r4, #4]
 8001248:	f8c4 8008 	str.w	r8, [r4, #8]
 800124c:	60e7      	str	r7, [r4, #12]
 800124e:	6126      	str	r6, [r4, #16]
 8001250:	f007 ff5e 	bl	8009110 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001254:	4b18      	ldr	r3, [pc, #96]	; (80012b8 <touchgfx_init+0xcc>)
 8001256:	6163      	str	r3, [r4, #20]
 8001258:	4640      	mov	r0, r8
 800125a:	f007 ff59 	bl	8009110 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800125e:	4b17      	ldr	r3, [pc, #92]	; (80012bc <touchgfx_init+0xd0>)
 8001260:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001262:	4638      	mov	r0, r7
 8001264:	f007 ff54 	bl	8009110 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001268:	4b15      	ldr	r3, [pc, #84]	; (80012c0 <touchgfx_init+0xd4>)
 800126a:	f8c4 3230 	str.w	r3, [r4, #560]	; 0x230
 800126e:	f504 7011 	add.w	r0, r4, #580	; 0x244
 8001272:	f001 fd83 	bl	8002d7c <_ZN5ModelC1Ev>
 8001276:	4622      	mov	r2, r4
 8001278:	f504 7111 	add.w	r1, r4, #580	; 0x244
 800127c:	4630      	mov	r0, r6
 800127e:	f001 fd73 	bl	8002d68 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001282:	4630      	mov	r0, r6
 8001284:	f001 f87c 	bl	8002380 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001288:	480e      	ldr	r0, [pc, #56]	; (80012c4 <touchgfx_init+0xd8>)
 800128a:	f01a fd51 	bl	801bd30 <atexit>
 800128e:	4628      	mov	r0, r5
 8001290:	f01a fd10 	bl	801bcb4 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001294:	480c      	ldr	r0, [pc, #48]	; (80012c8 <touchgfx_init+0xdc>)
}
 8001296:	b002      	add	sp, #8
 8001298:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800129c:	f7ff bb18 	b.w	80008d0 <_ZN11TouchGFXHAL10initializeEv>
 80012a0:	2000a65c 	.word	0x2000a65c
 80012a4:	2000135c 	.word	0x2000135c
 80012a8:	20000198 	.word	0x20000198
 80012ac:	2000001c 	.word	0x2000001c
 80012b0:	2000019c 	.word	0x2000019c
 80012b4:	0801d51c 	.word	0x0801d51c
 80012b8:	0801d480 	.word	0x0801d480
 80012bc:	0801d4b4 	.word	0x0801d4b4
 80012c0:	0801d4e8 	.word	0x0801d4e8
 80012c4:	080011c5 	.word	0x080011c5
 80012c8:	200012e0 	.word	0x200012e0

080012cc <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012cc:	4801      	ldr	r0, [pc, #4]	; (80012d4 <touchgfx_taskEntry+0x8>)
 80012ce:	f7ff bb19 	b.w	8000904 <_ZN11TouchGFXHAL9taskEntryEv>
 80012d2:	bf00      	nop
 80012d4:	200012e0 	.word	0x200012e0

080012d8 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012d8:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80012da:	4e23      	ldr	r6, [pc, #140]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0x90>)
{
public:

    STM32TouchController() {}
 80012dc:	4c23      	ldr	r4, [pc, #140]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0x94>)
static LCD16bpp display;
 80012de:	4d24      	ldr	r5, [pc, #144]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012e0:	4b24      	ldr	r3, [pc, #144]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012e2:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80012e4:	4630      	mov	r0, r6
 80012e6:	f7ff fdb1 	bl	8000e4c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80012ea:	4628      	mov	r0, r5
 80012ec:	f011 fd38 	bl	8012d60 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012f0:	4b21      	ldr	r3, [pc, #132]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012f2:	4822      	ldr	r0, [pc, #136]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 80012f4:	60dc      	str	r4, [r3, #12]
 80012f6:	2200      	movs	r2, #0
 80012f8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012fc:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8001300:	491f      	ldr	r1, [pc, #124]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001302:	861a      	strh	r2, [r3, #48]	; 0x30
 8001304:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 8001308:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 800130c:	6759      	str	r1, [r3, #116]	; 0x74
 800130e:	2101      	movs	r1, #1
 8001310:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 8001314:	491b      	ldr	r1, [pc, #108]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001316:	661a      	str	r2, [r3, #96]	; 0x60
        instance = this;
 8001318:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800131a:	f44f 7150 	mov.w	r1, #832	; 0x340
 800131e:	8001      	strh	r1, [r0, #0]
 8001320:	4819      	ldr	r0, [pc, #100]	; (8001388 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8001322:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001326:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001328:	4818      	ldr	r0, [pc, #96]	; (800138c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 800132a:	671a      	str	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800132c:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001330:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001334:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001338:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800133c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001340:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001344:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001348:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 800134c:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001350:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001354:	8001      	strh	r1, [r0, #0]
 8001356:	480e      	ldr	r0, [pc, #56]	; (8001390 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001358:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800135c:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800135e:	490d      	ldr	r1, [pc, #52]	; (8001394 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001360:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001362:	4a0d      	ldr	r2, [pc, #52]	; (8001398 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001364:	601a      	str	r2, [r3, #0]
}
 8001366:	bd70      	pop	{r4, r5, r6, pc}
 8001368:	20000540 	.word	0x20000540
 800136c:	2000053c 	.word	0x2000053c
 8001370:	20001360 	.word	0x20001360
 8001374:	0801cf7c 	.word	0x0801cf7c
 8001378:	200012e0 	.word	0x200012e0
 800137c:	2000a5f4 	.word	0x2000a5f4
 8001380:	01000001 	.word	0x01000001
 8001384:	2000a600 	.word	0x2000a600
 8001388:	2000a5fa 	.word	0x2000a5fa
 800138c:	2000a5f6 	.word	0x2000a5f6
 8001390:	2000a5fc 	.word	0x2000a5fc
 8001394:	2000a5f8 	.word	0x2000a5f8
 8001398:	0801d108 	.word	0x0801d108

0800139c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 800139c:	4801      	ldr	r0, [pc, #4]	; (80013a4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800139e:	f7ff bd31 	b.w	8000e04 <_ZN8STM32DMAD1Ev>
 80013a2:	bf00      	nop
 80013a4:	20000540 	.word	0x20000540

080013a8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a8:	4b02      	ldr	r3, [pc, #8]	; (80013b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80013aa:	2290      	movs	r2, #144	; 0x90
 80013ac:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 80013b0:	4770      	bx	lr
 80013b2:	bf00      	nop
 80013b4:	e000e100 	.word	0xe000e100

080013b8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013b8:	4b02      	ldr	r3, [pc, #8]	; (80013c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013ba:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013be:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013c0:	4770      	bx	lr
 80013c2:	bf00      	nop
 80013c4:	e000e100 	.word	0xe000e100

080013c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013c8:	4770      	bx	lr

080013ca <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013ca:	4770      	bx	lr

080013cc <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013cc:	b570      	push	{r4, r5, r6, lr}
 80013ce:	4604      	mov	r4, r0
    HAL::initialize();
 80013d0:	f008 f9cb 	bl	800976a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013d4:	6823      	ldr	r3, [r4, #0]
 80013d6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80013d8:	f00b fe9c 	bl	800d114 <_ZN8touchgfx11Application11getInstanceEv>
 80013dc:	4601      	mov	r1, r0
 80013de:	4620      	mov	r0, r4
 80013e0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013e2:	6823      	ldr	r3, [r4, #0]
 80013e4:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80013e8:	2300      	movs	r3, #0
 80013ea:	4620      	mov	r0, r4
 80013ec:	46ac      	mov	ip, r5
 80013ee:	461a      	mov	r2, r3
}
 80013f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013f4:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013f8:	4760      	bx	ip

080013fa <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013fa:	f008 b967 	b.w	80096cc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013fe <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013fe:	f008 bac0 	b.w	8009982 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
	...

08001404 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001404:	4b04      	ldr	r3, [pc, #16]	; (8001418 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001406:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800140a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800140e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001412:	f3bf 8f6f 	isb	sy
}
 8001416:	4770      	bx	lr
 8001418:	e000e100 	.word	0xe000e100

0800141c <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 800141c:	4901      	ldr	r1, [pc, #4]	; (8001424 <vApplicationIdleHook+0x8>)
 800141e:	2000      	movs	r0, #0
 8001420:	f007 b998 	b.w	8008754 <vTaskSetApplicationTaskTag>
 8001424:	08000ca1 	.word	0x08000ca1

08001428 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001428:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800142a:	2064      	movs	r0, #100	; 0x64
 800142c:	f005 fd4b 	bl	8006ec6 <osDelay>
  for(;;)
 8001430:	e7fb      	b.n	800142a <StartDefaultTask+0x2>
	...

08001434 <f_minus1>:
	count = count - 1;
 8001434:	4a02      	ldr	r2, [pc, #8]	; (8001440 <f_minus1+0xc>)
 8001436:	6813      	ldr	r3, [r2, #0]
 8001438:	3b01      	subs	r3, #1
 800143a:	6013      	str	r3, [r2, #0]
}
 800143c:	4770      	bx	lr
 800143e:	bf00      	nop
 8001440:	200013dc 	.word	0x200013dc

08001444 <f_plus1>:
	count = count + 1;
 8001444:	4a02      	ldr	r2, [pc, #8]	; (8001450 <f_plus1+0xc>)
 8001446:	6813      	ldr	r3, [r2, #0]
 8001448:	3301      	adds	r3, #1
 800144a:	6013      	str	r3, [r2, #0]
}
 800144c:	4770      	bx	lr
 800144e:	bf00      	nop
 8001450:	200013dc 	.word	0x200013dc

08001454 <f_start1>:
{
 8001454:	b570      	push	{r4, r5, r6, lr}
	for(int i = 0; i < count; i++){
 8001456:	4d09      	ldr	r5, [pc, #36]	; (800147c <f_start1+0x28>)
		HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 1);
 8001458:	4e09      	ldr	r6, [pc, #36]	; (8001480 <f_start1+0x2c>)
	for(int i = 0; i < count; i++){
 800145a:	2400      	movs	r4, #0
 800145c:	682b      	ldr	r3, [r5, #0]
 800145e:	42a3      	cmp	r3, r4
 8001460:	dc00      	bgt.n	8001464 <f_start1+0x10>
}
 8001462:	bd70      	pop	{r4, r5, r6, pc}
		HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 1);
 8001464:	2201      	movs	r2, #1
 8001466:	2120      	movs	r1, #32
 8001468:	4630      	mov	r0, r6
 800146a:	f003 fcb7 	bl	8004ddc <HAL_GPIO_WritePin>
		HAL_Delay(1000);
 800146e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001472:	f002 fcc9 	bl	8003e08 <HAL_Delay>
	for(int i = 0; i < count; i++){
 8001476:	3401      	adds	r4, #1
 8001478:	e7f0      	b.n	800145c <f_start1+0x8>
 800147a:	bf00      	nop
 800147c:	200013dc 	.word	0x200013dc
 8001480:	40020c00 	.word	0x40020c00

08001484 <SystemClock_Config>:
{
 8001484:	b530      	push	{r4, r5, lr}
 8001486:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001488:	2210      	movs	r2, #16
 800148a:	2100      	movs	r1, #0
 800148c:	a809      	add	r0, sp, #36	; 0x24
 800148e:	f01a fcbd 	bl	801be0c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001492:	2214      	movs	r2, #20
 8001494:	2100      	movs	r1, #0
 8001496:	a802      	add	r0, sp, #8
 8001498:	f01a fcb8 	bl	801be0c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800149c:	2400      	movs	r4, #0
 800149e:	4b1f      	ldr	r3, [pc, #124]	; (800151c <SystemClock_Config+0x98>)
 80014a0:	9400      	str	r4, [sp, #0]
 80014a2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80014a4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80014a8:	641a      	str	r2, [r3, #64]	; 0x40
 80014aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80014b0:	9300      	str	r3, [sp, #0]
 80014b2:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80014b4:	4b1a      	ldr	r3, [pc, #104]	; (8001520 <SystemClock_Config+0x9c>)
 80014b6:	9401      	str	r4, [sp, #4]
 80014b8:	681a      	ldr	r2, [r3, #0]
 80014ba:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80014be:	601a      	str	r2, [r3, #0]
 80014c0:	681b      	ldr	r3, [r3, #0]
 80014c2:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80014c6:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80014c8:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80014ca:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80014cc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80014d0:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80014d4:	2502      	movs	r5, #2
 80014d6:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 80014da:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80014dc:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 80014e0:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80014e4:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 80014e8:	2004      	movs	r0, #4
 80014ea:	2306      	movs	r3, #6
 80014ec:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014f0:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80014f2:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014f4:	f005 f820 	bl	8006538 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80014f8:	f004 fa74 	bl	80059e4 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014fc:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014fe:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001502:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001504:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001508:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800150c:	2105      	movs	r1, #5
 800150e:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001510:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001514:	f004 fde4 	bl	80060e0 <HAL_RCC_ClockConfig>
}
 8001518:	b015      	add	sp, #84	; 0x54
 800151a:	bd30      	pop	{r4, r5, pc}
 800151c:	40023800 	.word	0x40023800
 8001520:	40007000 	.word	0x40007000

08001524 <main>:
{
 8001524:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001528:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 800152a:	f002 fc41 	bl	8003db0 <HAL_Init>
  SystemClock_Config();
 800152e:	f7ff ffa9 	bl	8001484 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001532:	2214      	movs	r2, #20
 8001534:	2100      	movs	r1, #0
 8001536:	a82d      	add	r0, sp, #180	; 0xb4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001538:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800153a:	f01a fc67 	bl	801be0c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800153e:	4bc8      	ldr	r3, [pc, #800]	; (8001860 <main+0x33c>)
 8001540:	9403      	str	r4, [sp, #12]
 8001542:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001544:	48c7      	ldr	r0, [pc, #796]	; (8001864 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001546:	f042 0210 	orr.w	r2, r2, #16
 800154a:	631a      	str	r2, [r3, #48]	; 0x30
 800154c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154e:	f002 0210 	and.w	r2, r2, #16
 8001552:	9203      	str	r2, [sp, #12]
 8001554:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001556:	9404      	str	r4, [sp, #16]
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f042 0202 	orr.w	r2, r2, #2
 800155e:	631a      	str	r2, [r3, #48]	; 0x30
 8001560:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001562:	f002 0202 	and.w	r2, r2, #2
 8001566:	9204      	str	r2, [sp, #16]
 8001568:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800156a:	9405      	str	r4, [sp, #20]
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001572:	631a      	str	r2, [r3, #48]	; 0x30
 8001574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001576:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800157a:	9205      	str	r2, [sp, #20]
 800157c:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800157e:	9406      	str	r4, [sp, #24]
 8001580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001582:	f042 0208 	orr.w	r2, r2, #8
 8001586:	631a      	str	r2, [r3, #48]	; 0x30
 8001588:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158a:	f002 0208 	and.w	r2, r2, #8
 800158e:	9206      	str	r2, [sp, #24]
 8001590:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001592:	9407      	str	r4, [sp, #28]
 8001594:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001596:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800159a:	631a      	str	r2, [r3, #48]	; 0x30
 800159c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800159e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80015a2:	9207      	str	r2, [sp, #28]
 80015a4:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80015a6:	9408      	str	r4, [sp, #32]
 80015a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015aa:	f042 0220 	orr.w	r2, r2, #32
 80015ae:	631a      	str	r2, [r3, #48]	; 0x30
 80015b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015b2:	f002 0220 	and.w	r2, r2, #32
 80015b6:	9208      	str	r2, [sp, #32]
 80015b8:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 80015ba:	9409      	str	r4, [sp, #36]	; 0x24
 80015bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015be:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80015c2:	631a      	str	r2, [r3, #48]	; 0x30
 80015c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015c6:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 80015ca:	9209      	str	r2, [sp, #36]	; 0x24
 80015cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80015ce:	940a      	str	r4, [sp, #40]	; 0x28
 80015d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015d2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80015d6:	631a      	str	r2, [r3, #48]	; 0x30
 80015d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015da:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80015de:	920a      	str	r2, [sp, #40]	; 0x28
 80015e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80015e2:	940b      	str	r4, [sp, #44]	; 0x2c
 80015e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015e6:	f042 0204 	orr.w	r2, r2, #4
 80015ea:	631a      	str	r2, [r3, #48]	; 0x30
 80015ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015ee:	f002 0204 	and.w	r2, r2, #4
 80015f2:	920b      	str	r2, [sp, #44]	; 0x2c
 80015f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80015f6:	940c      	str	r4, [sp, #48]	; 0x30
 80015f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015fa:	f042 0201 	orr.w	r2, r2, #1
 80015fe:	631a      	str	r2, [r3, #48]	; 0x30
 8001600:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001602:	f002 0201 	and.w	r2, r2, #1
 8001606:	920c      	str	r2, [sp, #48]	; 0x30
 8001608:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 800160a:	940d      	str	r4, [sp, #52]	; 0x34
 800160c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800160e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001612:	631a      	str	r2, [r3, #48]	; 0x30
 8001614:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001616:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 800161a:	4622      	mov	r2, r4
 800161c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001620:	930d      	str	r3, [sp, #52]	; 0x34
 8001622:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001624:	f003 fbda 	bl	8004ddc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 8001628:	488f      	ldr	r0, [pc, #572]	; (8001868 <main+0x344>)
 800162a:	4622      	mov	r2, r4
 800162c:	2120      	movs	r1, #32
 800162e:	f003 fbd5 	bl	8004ddc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001632:	488e      	ldr	r0, [pc, #568]	; (800186c <main+0x348>)
 8001634:	2201      	movs	r2, #1
 8001636:	2108      	movs	r1, #8
 8001638:	f003 fbd0 	bl	8004ddc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 800163c:	488c      	ldr	r0, [pc, #560]	; (8001870 <main+0x34c>)
 800163e:	4622      	mov	r2, r4
 8001640:	2146      	movs	r1, #70	; 0x46
 8001642:	f003 fbcb 	bl	8004ddc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001646:	4622      	mov	r2, r4
 8001648:	488a      	ldr	r0, [pc, #552]	; (8001874 <main+0x350>)
 800164a:	2180      	movs	r1, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800164c:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800164e:	f003 fbc5 	bl	8004ddc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001652:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001656:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 800165a:	4882      	ldr	r0, [pc, #520]	; (8001864 <main+0x340>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800165c:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001660:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001662:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001666:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001668:	f003 fa2a 	bl	8004ac0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED_Pin;
 800166c:	2320      	movs	r3, #32
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 800166e:	487e      	ldr	r0, [pc, #504]	; (8001868 <main+0x344>)
 8001670:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001672:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001676:	2511      	movs	r5, #17
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001678:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 800167c:	f003 fa20 	bl	8004ac0 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001680:	2208      	movs	r2, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001682:	487a      	ldr	r0, [pc, #488]	; (800186c <main+0x348>)
 8001684:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001686:	e9cd 252d 	strd	r2, r5, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800168a:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800168e:	f003 fa17 	bl	8004ac0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8001692:	2246      	movs	r2, #70	; 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001694:	4876      	ldr	r0, [pc, #472]	; (8001870 <main+0x34c>)
 8001696:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001698:	2780      	movs	r7, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800169a:	e9cd 262d 	strd	r2, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800169e:	e9cd 482f 	strd	r4, r8, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80016a2:	f003 fa0d 	bl	8004ac0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80016a6:	a92d      	add	r1, sp, #180	; 0xb4
 80016a8:	4872      	ldr	r0, [pc, #456]	; (8001874 <main+0x350>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80016aa:	e9cd 752d 	strd	r7, r5, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80016ae:	e9cd 482f 	strd	r4, r8, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80016b2:	f003 fa05 	bl	8004ac0 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80016b6:	4870      	ldr	r0, [pc, #448]	; (8001878 <main+0x354>)
  hdma2d.Instance = DMA2D;
 80016b8:	4d70      	ldr	r5, [pc, #448]	; (800187c <main+0x358>)
  hcrc.Instance = CRC;
 80016ba:	4a71      	ldr	r2, [pc, #452]	; (8001880 <main+0x35c>)
 80016bc:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80016be:	f002 fc1d 	bl	8003efc <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 80016c2:	4a70      	ldr	r2, [pc, #448]	; (8001884 <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 80016c4:	e9c5 440a 	strd	r4, r4, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80016c8:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016cc:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 80016ce:	e9c5 2400 	strd	r2, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 80016d2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016d6:	f002 fd25 	bl	8004124 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80016da:	4631      	mov	r1, r6
 80016dc:	4628      	mov	r0, r5
 80016de:	f002 fdd9 	bl	8004294 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80016e2:	4639      	mov	r1, r7
 80016e4:	4622      	mov	r2, r4
 80016e6:	4863      	ldr	r0, [pc, #396]	; (8001874 <main+0x350>)
  hdsi.Instance = DSI;
 80016e8:	4d67      	ldr	r5, [pc, #412]	; (8001888 <main+0x364>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80016ea:	f003 fb77 	bl	8004ddc <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 80016ee:	2014      	movs	r0, #20
 80016f0:	f002 fb8a 	bl	8003e08 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 80016f4:	4639      	mov	r1, r7
 80016f6:	4632      	mov	r2, r6
 80016f8:	485e      	ldr	r0, [pc, #376]	; (8001874 <main+0x350>)
 80016fa:	f003 fb6f 	bl	8004ddc <HAL_GPIO_WritePin>
  HAL_Delay(10);
 80016fe:	200a      	movs	r0, #10
 8001700:	f002 fb82 	bl	8003e08 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001704:	2224      	movs	r2, #36	; 0x24
 8001706:	4621      	mov	r1, r4
 8001708:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 800170a:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 800170c:	f01a fb7e 	bl	801be0c <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8001710:	2218      	movs	r2, #24
 8001712:	4621      	mov	r1, r4
 8001714:	a811      	add	r0, sp, #68	; 0x44
 8001716:	f01a fb79 	bl	801be0c <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 800171a:	2234      	movs	r2, #52	; 0x34
 800171c:	4621      	mov	r1, r4
 800171e:	a82d      	add	r0, sp, #180	; 0xb4
 8001720:	f01a fb74 	bl	801be0c <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8001724:	222c      	movs	r2, #44	; 0x2c
 8001726:	4621      	mov	r1, r4
 8001728:	eb0d 0007 	add.w	r0, sp, r7
 800172c:	f01a fb6e 	bl	801be0c <memset>
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001730:	2702      	movs	r7, #2
  hdsi.Instance = DSI;
 8001732:	4a56      	ldr	r2, [pc, #344]	; (800188c <main+0x368>)
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001734:	217d      	movs	r1, #125	; 0x7d
  hdsi.Init.TXEscapeCkdiv = 4;
 8001736:	f04f 0904 	mov.w	r9, #4
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 800173a:	e9cd 170e 	strd	r1, r7, [sp, #56]	; 0x38
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800173e:	4628      	mov	r0, r5
 8001740:	a90e      	add	r1, sp, #56	; 0x38
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8001742:	e9c5 2400 	strd	r2, r4, [r5]
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8001746:	e9c5 9602 	strd	r9, r6, [r5, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800174a:	f002 fe6b 	bl	8004424 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 800174e:	a917      	add	r1, sp, #92	; 0x5c
 8001750:	4628      	mov	r0, r5
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8001752:	e9cd 6417 	strd	r6, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 8001756:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 800175a:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 800175e:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8001762:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001764:	f003 f88a 	bl	800487c <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8001768:	231c      	movs	r3, #28
 800176a:	2121      	movs	r1, #33	; 0x21
  PhyTimings.DataLaneLP2HSTime = 25;
 800176c:	220f      	movs	r2, #15
  PhyTimings.ClockLaneLP2HSTime = 33;
 800176e:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8001772:	2119      	movs	r1, #25
 8001774:	e9cd 2113 	strd	r2, r1, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001778:	4628      	mov	r0, r5
 800177a:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 800177c:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001780:	f003 f83f 	bl	8004802 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8001784:	4649      	mov	r1, r9
 8001786:	4628      	mov	r0, r5
 8001788:	f003 f82a 	bl	80047e0 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 800178c:	f242 7110 	movw	r1, #10000	; 0x2710
 8001790:	4628      	mov	r0, r5
 8001792:	f003 f97e 	bl	8004a92 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001796:	4621      	mov	r1, r4
 8001798:	4628      	mov	r0, r5
 800179a:	f002 fde0 	bl	800435e <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 800179e:	f44f 7080 	mov.w	r0, #256	; 0x100
 80017a2:	f44f 7100 	mov.w	r1, #512	; 0x200
 80017a6:	e9cd 012d 	strd	r0, r1, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 80017aa:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 80017ae:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80017b2:	e9cd a12f 	strd	sl, r1, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 80017b6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80017ba:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80017be:	e9cd 3131 	strd	r3, r1, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 80017c2:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80017c6:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 80017ca:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 80017ce:	e9cd 3133 	strd	r3, r1, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 80017d2:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 80017d6:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 80017da:	e9cd c135 	strd	ip, r1, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 80017de:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80017e2:	e9cd e137 	strd	lr, r1, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 80017e6:	4628      	mov	r0, r5
 80017e8:	a92d      	add	r1, sp, #180	; 0xb4
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 80017ea:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 80017ee:	9739      	str	r7, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 80017f0:	f002 ffc2 	bl	8004778 <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 80017f4:	2310      	movs	r3, #16
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 80017f6:	a920      	add	r1, sp, #128	; 0x80
 80017f8:	4628      	mov	r0, r5
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 80017fa:	e9cd b322 	strd	fp, r3, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 80017fe:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001802:	e9cd 4924 	strd	r4, r9, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001806:	e9cd 7426 	strd	r7, r4, [sp, #152]	; 0x98
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 800180a:	e9cd 4428 	strd	r4, r4, [sp, #160]	; 0xa0
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 800180e:	962a      	str	r6, [sp, #168]	; 0xa8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001810:	f002 ff40 	bl	8004694 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001814:	4621      	mov	r1, r4
 8001816:	4628      	mov	r0, r5
 8001818:	f002 ff2b 	bl	8004672 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800181c:	481c      	ldr	r0, [pc, #112]	; (8001890 <main+0x36c>)
 800181e:	491d      	ldr	r1, [pc, #116]	; (8001894 <main+0x370>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001820:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001822:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001826:	2320      	movs	r3, #32
 8001828:	2140      	movs	r1, #64	; 0x40
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 800182a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800182e:	e9c0 3104 	strd	r3, r1, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001832:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8001836:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800183a:	e9c0 2309 	strd	r2, r3, [r0, #36]	; 0x24
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800183e:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001842:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001844:	a92d      	add	r1, sp, #180	; 0xb4
  SdramTiming.WriteRecoveryTime = 3;
 8001846:	e9cd 3830 	strd	r3, r8, [sp, #192]	; 0xc0
  SdramTiming.SelfRefreshTime = 4;
 800184a:	e9cd 392e 	strd	r3, r9, [sp, #184]	; 0xb8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800184e:	e9c0 4902 	strd	r4, r9, [r0, #8]
  SdramTiming.RCDDelay = 2;
 8001852:	e9cd 7732 	strd	r7, r7, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 8001856:	972d      	str	r7, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001858:	f005 f828 	bl	80068ac <HAL_SDRAM_Init>
 800185c:	e01c      	b.n	8001898 <main+0x374>
 800185e:	bf00      	nop
 8001860:	40023800 	.word	0x40023800
 8001864:	40021800 	.word	0x40021800
 8001868:	40020c00 	.word	0x40020c00
 800186c:	40022800 	.word	0x40022800
 8001870:	40020000 	.word	0x40020000
 8001874:	40021c00 	.word	0x40021c00
 8001878:	200013e4 	.word	0x200013e4
 800187c:	200013ec 	.word	0x200013ec
 8001880:	40023000 	.word	0x40023000
 8001884:	4002b000 	.word	0x4002b000
 8001888:	2000142c 	.word	0x2000142c
 800188c:	40016c00 	.word	0x40016c00
 8001890:	20001590 	.word	0x20001590
 8001894:	a0000140 	.word	0xa0000140
  BSP_SDRAM_DeInit();
 8001898:	f002 f9b8 	bl	8003c0c <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 800189c:	f002 f968 	bl	8003b70 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80018a0:	2234      	movs	r2, #52	; 0x34
 80018a2:	4621      	mov	r1, r4
 80018a4:	a820      	add	r0, sp, #128	; 0x80
 80018a6:	f01a fab1 	bl	801be0c <memset>
  hltdc.Instance = LTDC;
 80018aa:	f8df 817c 	ldr.w	r8, [pc, #380]	; 8001a28 <main+0x504>
 80018ae:	4b53      	ldr	r3, [pc, #332]	; (80019fc <main+0x4d8>)
  hltdc.Init.Backcolor.Blue = 0;
 80018b0:	f8a8 4034 	strh.w	r4, [r8, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80018b4:	e9c8 3400 	strd	r3, r4, [r8]
  hltdc.Init.AccumulatedActiveH = 482;
 80018b8:	21ca      	movs	r1, #202	; 0xca
 80018ba:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 80018be:	e9c8 1309 	strd	r1, r3, [r8, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80018c2:	20cb      	movs	r0, #203	; 0xcb
 80018c4:	f240 13e3 	movw	r3, #483	; 0x1e3
 80018c8:	e9c8 030b 	strd	r0, r3, [r8, #44]	; 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80018cc:	4640      	mov	r0, r8
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80018ce:	e9c8 4402 	strd	r4, r4, [r8, #8]
  hltdc.Init.HorizontalSync = 1;
 80018d2:	e9c8 4604 	strd	r4, r6, [r8, #16]
  hltdc.Init.AccumulatedHBP = 2;
 80018d6:	e9c8 6706 	strd	r6, r7, [r8, #24]
  hltdc.Init.AccumulatedVBP = 2;
 80018da:	f8c8 7020 	str.w	r7, [r8, #32]
  hltdc.Init.Backcolor.Red = 0;
 80018de:	f888 4036 	strb.w	r4, [r8, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80018e2:	f003 ff49 	bl	8005778 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80018e6:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.FBStartAdress = 0xC0000000;
 80018e8:	f04f 0c05 	mov.w	ip, #5
  pLayerCfg.Alpha0 = 0;
 80018ec:	e9cd 2425 	strd	r2, r4, [sp, #148]	; 0x94
  pLayerCfg.FBStartAdress = 0xC0000000;
 80018f0:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
 80018f4:	e9cd c228 	strd	ip, r2, [sp, #160]	; 0xa0
  pLayerCfg.WindowY1 = 480;
 80018f8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018fc:	a920      	add	r1, sp, #128	; 0x80
 80018fe:	4622      	mov	r2, r4
 8001900:	4640      	mov	r0, r8
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001902:	e9cd 3723 	strd	r3, r7, [sp, #140]	; 0x8c
  pLayerCfg.ImageHeight = 480;
 8001906:	e9cd b32a 	strd	fp, r3, [sp, #168]	; 0xa8
  pLayerCfg.WindowX1 = 200;
 800190a:	e9cd 4b20 	strd	r4, fp, [sp, #128]	; 0x80
  pLayerCfg.WindowY0 = 0;
 800190e:	9422      	str	r4, [sp, #136]	; 0x88
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001910:	f8cd a09c 	str.w	sl, [sp, #156]	; 0x9c
  pLayerCfg.Backcolor.Blue = 0;
 8001914:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 8001918:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800191c:	f003 fff8 	bl	8005910 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8001920:	f8d8 2000 	ldr.w	r2, [r8]
 8001924:	6993      	ldr	r3, [r2, #24]
 8001926:	f023 0301 	bic.w	r3, r3, #1
 800192a:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 800192c:	4628      	mov	r0, r5
 800192e:	f003 f80b 	bl	8004948 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001932:	4631      	mov	r1, r6
 8001934:	4638      	mov	r0, r7
 8001936:	f001 fadf 	bl	8002ef8 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 800193a:	2328      	movs	r3, #40	; 0x28
 800193c:	2215      	movs	r2, #21
 800193e:	4621      	mov	r1, r4
 8001940:	4628      	mov	r0, r5
 8001942:	9400      	str	r4, [sp, #0]
 8001944:	f003 f833 	bl	80049ae <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001948:	a92d      	add	r1, sp, #180	; 0xb4
 800194a:	4628      	mov	r0, r5
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 800194c:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001950:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8001954:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001958:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 800195c:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8001960:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001962:	f002 ff09 	bl	8004778 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8001966:	f44f 7148 	mov.w	r1, #800	; 0x320
 800196a:	4622      	mov	r2, r4
 800196c:	4640      	mov	r0, r8
 800196e:	f003 fffd 	bl	800596c <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8001972:	f8d8 2000 	ldr.w	r2, [r8]
  hqspi.Instance = QUADSPI;
 8001976:	4822      	ldr	r0, [pc, #136]	; (8001a00 <main+0x4dc>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001978:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 800197a:	4d22      	ldr	r5, [pc, #136]	; (8001a04 <main+0x4e0>)
  hi2c1.Init.ClockSpeed = 400000;
 800197c:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 8001a2c <main+0x508>
  hqspi.Init.FifoThreshold = 1;
 8001980:	6086      	str	r6, [r0, #8]
  __HAL_LTDC_ENABLE(&hltdc);
 8001982:	4333      	orrs	r3, r6
 8001984:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 8001986:	4b20      	ldr	r3, [pc, #128]	; (8001a08 <main+0x4e4>)
  hqspi.Init.FlashSize = 27;
 8001988:	f04f 0e10 	mov.w	lr, #16
  hqspi.Init.ClockPrescaler = 1;
 800198c:	e9c0 3600 	strd	r3, r6, [r0]
  hqspi.Init.FlashSize = 27;
 8001990:	231b      	movs	r3, #27
 8001992:	e9c0 e303 	strd	lr, r3, [r0, #12]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 8001996:	e9c0 a405 	strd	sl, r4, [r0, #20]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 800199a:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 800199e:	f004 f92f 	bl	8005c00 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80019a2:	f001 ffab 	bl	80038fc <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 80019a6:	f001 fedf 	bl	8003768 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 80019aa:	f001 fe55 	bl	8003658 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 80019ae:	4b17      	ldr	r3, [pc, #92]	; (8001a0c <main+0x4e8>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80019b0:	622c      	str	r4, [r5, #32]
  hi2c1.Init.ClockSpeed = 400000;
 80019b2:	e9c5 8300 	strd	r8, r3, [r5]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80019b6:	4628      	mov	r0, r5
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80019b8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80019bc:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 80019c0:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80019c4:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80019c8:	f003 fbf2 	bl	80051b0 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 80019cc:	4628      	mov	r0, r5
 80019ce:	f003 fc97 	bl	8005300 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 80019d2:	f7fe fe10 	bl	80005f6 <MX_TouchGFX_Init>
  osKernelInitialize();
 80019d6:	f005 fa01 	bl	8006ddc <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80019da:	4a0d      	ldr	r2, [pc, #52]	; (8001a10 <main+0x4ec>)
 80019dc:	480d      	ldr	r0, [pc, #52]	; (8001a14 <main+0x4f0>)
 80019de:	4621      	mov	r1, r4
 80019e0:	f005 fa28 	bl	8006e34 <osThreadNew>
 80019e4:	4b0c      	ldr	r3, [pc, #48]	; (8001a18 <main+0x4f4>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 80019e6:	4a0d      	ldr	r2, [pc, #52]	; (8001a1c <main+0x4f8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80019e8:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 80019ea:	4621      	mov	r1, r4
 80019ec:	480c      	ldr	r0, [pc, #48]	; (8001a20 <main+0x4fc>)
 80019ee:	f005 fa21 	bl	8006e34 <osThreadNew>
 80019f2:	4b0c      	ldr	r3, [pc, #48]	; (8001a24 <main+0x500>)
 80019f4:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80019f6:	f005 fa03 	bl	8006e00 <osKernelStart>
  while (1)
 80019fa:	e7fe      	b.n	80019fa <main+0x4d6>
 80019fc:	40016800 	.word	0x40016800
 8001a00:	20001544 	.word	0x20001544
 8001a04:	20001448 	.word	0x20001448
 8001a08:	a0001000 	.word	0xa0001000
 8001a0c:	00061a80 	.word	0x00061a80
 8001a10:	0801d568 	.word	0x0801d568
 8001a14:	08001429 	.word	0x08001429
 8001a18:	200013e0 	.word	0x200013e0
 8001a1c:	0801d544 	.word	0x0801d544
 8001a20:	080005fb 	.word	0x080005fb
 8001a24:	200013d8 	.word	0x200013d8
 8001a28:	2000149c 	.word	0x2000149c
 8001a2c:	40005400 	.word	0x40005400

08001a30 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001a30:	6802      	ldr	r2, [r0, #0]
 8001a32:	4b03      	ldr	r3, [pc, #12]	; (8001a40 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001a34:	429a      	cmp	r2, r3
 8001a36:	d101      	bne.n	8001a3c <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001a38:	f002 b9d4 	b.w	8003de4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001a3c:	4770      	bx	lr
 8001a3e:	bf00      	nop
 8001a40:	40001000 	.word	0x40001000

08001a44 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001a44:	4770      	bx	lr
	...

08001a48 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a48:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a4a:	4b0e      	ldr	r3, [pc, #56]	; (8001a84 <HAL_MspInit+0x3c>)
 8001a4c:	2200      	movs	r2, #0
 8001a4e:	9200      	str	r2, [sp, #0]
 8001a50:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a52:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001a56:	6459      	str	r1, [r3, #68]	; 0x44
 8001a58:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a5a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001a5e:	9100      	str	r1, [sp, #0]
 8001a60:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a62:	9201      	str	r2, [sp, #4]
 8001a64:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001a66:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001a6a:	6419      	str	r1, [r3, #64]	; 0x40
 8001a6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a6e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a72:	9301      	str	r3, [sp, #4]
 8001a74:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a76:	210f      	movs	r1, #15
 8001a78:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a7c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a7e:	f002 b9e9 	b.w	8003e54 <HAL_NVIC_SetPriority>
 8001a82:	bf00      	nop
 8001a84:	40023800 	.word	0x40023800

08001a88 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a88:	6802      	ldr	r2, [r0, #0]
 8001a8a:	4b09      	ldr	r3, [pc, #36]	; (8001ab0 <HAL_CRC_MspInit+0x28>)
 8001a8c:	429a      	cmp	r2, r3
{
 8001a8e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a90:	d10b      	bne.n	8001aaa <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a92:	2300      	movs	r3, #0
 8001a94:	9301      	str	r3, [sp, #4]
 8001a96:	4b07      	ldr	r3, [pc, #28]	; (8001ab4 <HAL_CRC_MspInit+0x2c>)
 8001a98:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a9a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a9e:	631a      	str	r2, [r3, #48]	; 0x30
 8001aa0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aa2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001aa6:	9301      	str	r3, [sp, #4]
 8001aa8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001aaa:	b002      	add	sp, #8
 8001aac:	4770      	bx	lr
 8001aae:	bf00      	nop
 8001ab0:	40023000 	.word	0x40023000
 8001ab4:	40023800 	.word	0x40023800

08001ab8 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001ab8:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001aba:	4b0f      	ldr	r3, [pc, #60]	; (8001af8 <HAL_DMA2D_MspInit+0x40>)
 8001abc:	6802      	ldr	r2, [r0, #0]
 8001abe:	429a      	cmp	r2, r3
 8001ac0:	d116      	bne.n	8001af0 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001ac2:	2200      	movs	r2, #0
 8001ac4:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001ac8:	9201      	str	r2, [sp, #4]
 8001aca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001acc:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001ad0:	6319      	str	r1, [r3, #48]	; 0x30
 8001ad2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ad4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001ad8:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001ada:	2105      	movs	r1, #5
 8001adc:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001ade:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001ae0:	f002 f9b8 	bl	8003e54 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ae4:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001ae6:	b003      	add	sp, #12
 8001ae8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001aec:	f002 b9e4 	b.w	8003eb8 <HAL_NVIC_EnableIRQ>
}
 8001af0:	b003      	add	sp, #12
 8001af2:	f85d fb04 	ldr.w	pc, [sp], #4
 8001af6:	bf00      	nop
 8001af8:	4002b000 	.word	0x4002b000

08001afc <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001afc:	b510      	push	{r4, lr}
 8001afe:	4604      	mov	r4, r0
 8001b00:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b02:	2214      	movs	r2, #20
 8001b04:	2100      	movs	r1, #0
 8001b06:	a803      	add	r0, sp, #12
 8001b08:	f01a f980 	bl	801be0c <memset>
  if(hdsi->Instance==DSI)
 8001b0c:	6822      	ldr	r2, [r4, #0]
 8001b0e:	4b17      	ldr	r3, [pc, #92]	; (8001b6c <HAL_DSI_MspInit+0x70>)
 8001b10:	429a      	cmp	r2, r3
 8001b12:	d128      	bne.n	8001b66 <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001b14:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001b18:	2400      	movs	r4, #0
 8001b1a:	9401      	str	r4, [sp, #4]
 8001b1c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b1e:	4814      	ldr	r0, [pc, #80]	; (8001b70 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001b20:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001b24:	645a      	str	r2, [r3, #68]	; 0x44
 8001b26:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b28:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001b2c:	9201      	str	r2, [sp, #4]
 8001b2e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001b30:	9402      	str	r4, [sp, #8]
 8001b32:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b34:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b38:	631a      	str	r2, [r3, #48]	; 0x30
 8001b3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b3c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001b40:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b42:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001b44:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b46:	2302      	movs	r3, #2
 8001b48:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b4c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001b4e:	230d      	movs	r3, #13
 8001b50:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b52:	f002 ffb5 	bl	8004ac0 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001b56:	205c      	movs	r0, #92	; 0x5c
 8001b58:	4622      	mov	r2, r4
 8001b5a:	2105      	movs	r1, #5
 8001b5c:	f002 f97a 	bl	8003e54 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001b60:	205c      	movs	r0, #92	; 0x5c
 8001b62:	f002 f9a9 	bl	8003eb8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001b66:	b008      	add	sp, #32
 8001b68:	bd10      	pop	{r4, pc}
 8001b6a:	bf00      	nop
 8001b6c:	40016c00 	.word	0x40016c00
 8001b70:	40022400 	.word	0x40022400

08001b74 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b74:	b530      	push	{r4, r5, lr}
 8001b76:	4604      	mov	r4, r0
 8001b78:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b7a:	2214      	movs	r2, #20
 8001b7c:	2100      	movs	r1, #0
 8001b7e:	a803      	add	r0, sp, #12
 8001b80:	f01a f944 	bl	801be0c <memset>
  if(hi2c->Instance==I2C1)
 8001b84:	6822      	ldr	r2, [r4, #0]
 8001b86:	4b1a      	ldr	r3, [pc, #104]	; (8001bf0 <HAL_I2C_MspInit+0x7c>)
 8001b88:	429a      	cmp	r2, r3
 8001b8a:	d12f      	bne.n	8001bec <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b8c:	4c19      	ldr	r4, [pc, #100]	; (8001bf4 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b8e:	481a      	ldr	r0, [pc, #104]	; (8001bf8 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b90:	2500      	movs	r5, #0
 8001b92:	9501      	str	r5, [sp, #4]
 8001b94:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b96:	f043 0302 	orr.w	r3, r3, #2
 8001b9a:	6323      	str	r3, [r4, #48]	; 0x30
 8001b9c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b9e:	f003 0302 	and.w	r3, r3, #2
 8001ba2:	9301      	str	r3, [sp, #4]
 8001ba4:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ba6:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001baa:	2312      	movs	r3, #18
 8001bac:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bb0:	2101      	movs	r1, #1
 8001bb2:	2303      	movs	r3, #3
 8001bb4:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001bb8:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bba:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001bbc:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bbe:	f002 ff7f 	bl	8004ac0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001bc2:	9502      	str	r5, [sp, #8]
 8001bc4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bc6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001bca:	6423      	str	r3, [r4, #64]	; 0x40
 8001bcc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bce:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001bd2:	9302      	str	r3, [sp, #8]
 8001bd4:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001bd6:	6a23      	ldr	r3, [r4, #32]
 8001bd8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001bdc:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001bde:	6a23      	ldr	r3, [r4, #32]
 8001be0:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001be4:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001be6:	2064      	movs	r0, #100	; 0x64
 8001be8:	f002 f90e 	bl	8003e08 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001bec:	b009      	add	sp, #36	; 0x24
 8001bee:	bd30      	pop	{r4, r5, pc}
 8001bf0:	40005400 	.word	0x40005400
 8001bf4:	40023800 	.word	0x40023800
 8001bf8:	40020400 	.word	0x40020400

08001bfc <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001bfc:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001bfe:	6802      	ldr	r2, [r0, #0]
 8001c00:	4b0a      	ldr	r3, [pc, #40]	; (8001c2c <HAL_I2C_MspDeInit+0x30>)
 8001c02:	429a      	cmp	r2, r3
 8001c04:	d110      	bne.n	8001c28 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001c06:	4a0a      	ldr	r2, [pc, #40]	; (8001c30 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001c08:	480a      	ldr	r0, [pc, #40]	; (8001c34 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001c0a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001c0c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001c10:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001c12:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001c16:	f003 f839 	bl	8004c8c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001c1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001c1e:	4805      	ldr	r0, [pc, #20]	; (8001c34 <HAL_I2C_MspDeInit+0x38>)
 8001c20:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001c24:	f003 b832 	b.w	8004c8c <HAL_GPIO_DeInit>
}
 8001c28:	bd08      	pop	{r3, pc}
 8001c2a:	bf00      	nop
 8001c2c:	40005400 	.word	0x40005400
 8001c30:	40023800 	.word	0x40023800
 8001c34:	40020400 	.word	0x40020400

08001c38 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001c38:	b510      	push	{r4, lr}
 8001c3a:	4604      	mov	r4, r0
 8001c3c:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001c3e:	223c      	movs	r2, #60	; 0x3c
 8001c40:	2100      	movs	r1, #0
 8001c42:	a801      	add	r0, sp, #4
 8001c44:	f01a f8e2 	bl	801be0c <memset>
  if(hltdc->Instance==LTDC)
 8001c48:	6822      	ldr	r2, [r4, #0]
 8001c4a:	4b12      	ldr	r3, [pc, #72]	; (8001c94 <HAL_LTDC_MspInit+0x5c>)
 8001c4c:	429a      	cmp	r2, r3
 8001c4e:	d11f      	bne.n	8001c90 <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001c50:	2308      	movs	r3, #8
 8001c52:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001c54:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001c58:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c5a:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001c5c:	2306      	movs	r3, #6
 8001c5e:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c60:	f004 fb08 	bl	8006274 <HAL_RCCEx_PeriphCLKConfig>
 8001c64:	b108      	cbz	r0, 8001c6a <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 8001c66:	f7ff feed 	bl	8001a44 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c6a:	4b0b      	ldr	r3, [pc, #44]	; (8001c98 <HAL_LTDC_MspInit+0x60>)
 8001c6c:	2200      	movs	r2, #0
 8001c6e:	9200      	str	r2, [sp, #0]
 8001c70:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c72:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8001c76:	6459      	str	r1, [r3, #68]	; 0x44
 8001c78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c7a:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c7e:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c80:	2058      	movs	r0, #88	; 0x58
 8001c82:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c84:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c86:	f002 f8e5 	bl	8003e54 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c8a:	2058      	movs	r0, #88	; 0x58
 8001c8c:	f002 f914 	bl	8003eb8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c90:	b010      	add	sp, #64	; 0x40
 8001c92:	bd10      	pop	{r4, pc}
 8001c94:	40016800 	.word	0x40016800
 8001c98:	40023800 	.word	0x40023800

08001c9c <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c9e:	4604      	mov	r4, r0
 8001ca0:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ca2:	2214      	movs	r2, #20
 8001ca4:	2100      	movs	r1, #0
 8001ca6:	a803      	add	r0, sp, #12
 8001ca8:	f01a f8b0 	bl	801be0c <memset>
  if(hqspi->Instance==QUADSPI)
 8001cac:	6822      	ldr	r2, [r4, #0]
 8001cae:	4b24      	ldr	r3, [pc, #144]	; (8001d40 <HAL_QSPI_MspInit+0xa4>)
 8001cb0:	429a      	cmp	r2, r3
 8001cb2:	d142      	bne.n	8001d3a <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001cb4:	4b23      	ldr	r3, [pc, #140]	; (8001d44 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cb6:	4824      	ldr	r0, [pc, #144]	; (8001d48 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001cb8:	2400      	movs	r4, #0
 8001cba:	9400      	str	r4, [sp, #0]
 8001cbc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001cbe:	f042 0202 	orr.w	r2, r2, #2
 8001cc2:	639a      	str	r2, [r3, #56]	; 0x38
 8001cc4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001cc6:	f002 0202 	and.w	r2, r2, #2
 8001cca:	9200      	str	r2, [sp, #0]
 8001ccc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001cce:	9401      	str	r4, [sp, #4]
 8001cd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cd2:	f042 0202 	orr.w	r2, r2, #2
 8001cd6:	631a      	str	r2, [r3, #48]	; 0x30
 8001cd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cda:	f002 0202 	and.w	r2, r2, #2
 8001cde:	9201      	str	r2, [sp, #4]
 8001ce0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ce2:	9402      	str	r4, [sp, #8]
 8001ce4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ce6:	f042 0220 	orr.w	r2, r2, #32
 8001cea:	631a      	str	r2, [r3, #48]	; 0x30
 8001cec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cee:	f003 0320 	and.w	r3, r3, #32
 8001cf2:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cf4:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cf6:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cf8:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cfa:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cfc:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cfe:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d00:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001d04:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d08:	f002 feda 	bl	8004ac0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001d0c:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d10:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d14:	480d      	ldr	r0, [pc, #52]	; (8001d4c <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001d16:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d18:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001d1a:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d1c:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d20:	f002 fece 	bl	8004ac0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001d24:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d28:	4808      	ldr	r0, [pc, #32]	; (8001d4c <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001d2a:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d2c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d2e:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d32:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d36:	f002 fec3 	bl	8004ac0 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001d3a:	b009      	add	sp, #36	; 0x24
 8001d3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d3e:	bf00      	nop
 8001d40:	a0001000 	.word	0xa0001000
 8001d44:	40023800 	.word	0x40023800
 8001d48:	40020400 	.word	0x40020400
 8001d4c:	40021400 	.word	0x40021400

08001d50 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001d50:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001d52:	6802      	ldr	r2, [r0, #0]
 8001d54:	4b09      	ldr	r3, [pc, #36]	; (8001d7c <HAL_QSPI_MspDeInit+0x2c>)
 8001d56:	429a      	cmp	r2, r3
 8001d58:	d10f      	bne.n	8001d7a <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d5a:	4a09      	ldr	r2, [pc, #36]	; (8001d80 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d5c:	4809      	ldr	r0, [pc, #36]	; (8001d84 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001d5e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001d60:	f023 0302 	bic.w	r3, r3, #2
 8001d64:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001d66:	2140      	movs	r1, #64	; 0x40
 8001d68:	f002 ff90 	bl	8004c8c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001d6c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d70:	4805      	ldr	r0, [pc, #20]	; (8001d88 <HAL_QSPI_MspDeInit+0x38>)
 8001d72:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d76:	f002 bf89 	b.w	8004c8c <HAL_GPIO_DeInit>
}
 8001d7a:	bd08      	pop	{r3, pc}
 8001d7c:	a0001000 	.word	0xa0001000
 8001d80:	40023800 	.word	0x40023800
 8001d84:	40020400 	.word	0x40020400
 8001d88:	40021400 	.word	0x40021400

08001d8c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d8e:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d90:	2300      	movs	r3, #0
 8001d92:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d94:	4b30      	ldr	r3, [pc, #192]	; (8001e58 <HAL_SDRAM_MspInit+0xcc>)
 8001d96:	681c      	ldr	r4, [r3, #0]
 8001d98:	2c00      	cmp	r4, #0
 8001d9a:	d15a      	bne.n	8001e52 <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8001d9c:	2201      	movs	r2, #1
 8001d9e:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001da0:	4b2e      	ldr	r3, [pc, #184]	; (8001e5c <HAL_SDRAM_MspInit+0xd0>)
 8001da2:	9400      	str	r4, [sp, #0]
 8001da4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001da6:	482e      	ldr	r0, [pc, #184]	; (8001e60 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001da8:	f042 0201 	orr.w	r2, r2, #1
 8001dac:	639a      	str	r2, [r3, #56]	; 0x38
 8001dae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001db0:	f003 0301 	and.w	r3, r3, #1
 8001db4:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001db6:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001db8:	2603      	movs	r6, #3
 8001dba:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001dbc:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dbe:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc0:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001dc4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dc8:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dcc:	f002 fe78 	bl	8004ac0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001dd0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dd4:	4823      	ldr	r0, [pc, #140]	; (8001e64 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dd6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dd8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dda:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dde:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001de2:	f002 fe6d 	bl	8004ac0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001de6:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dea:	481f      	ldr	r0, [pc, #124]	; (8001e68 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dec:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dee:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001df0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001df4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001df8:	f002 fe62 	bl	8004ac0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001dfc:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e00:	481a      	ldr	r0, [pc, #104]	; (8001e6c <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e02:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e04:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e06:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e0a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e0e:	f002 fe57 	bl	8004ac0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e12:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e16:	4816      	ldr	r0, [pc, #88]	; (8001e70 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e18:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e1a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e1c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e20:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e24:	f002 fe4c 	bl	8004ac0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e28:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e2c:	4811      	ldr	r0, [pc, #68]	; (8001e74 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e2e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e30:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e32:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e36:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001e3a:	f002 fe41 	bl	8004ac0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001e3e:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e40:	480d      	ldr	r0, [pc, #52]	; (8001e78 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e42:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e44:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e46:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e4a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e4e:	f002 fe37 	bl	8004ac0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001e52:	b007      	add	sp, #28
 8001e54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e56:	bf00      	nop
 8001e58:	200015c8 	.word	0x200015c8
 8001e5c:	40023800 	.word	0x40023800
 8001e60:	40021000 	.word	0x40021000
 8001e64:	40021800 	.word	0x40021800
 8001e68:	40020c00 	.word	0x40020c00
 8001e6c:	40022000 	.word	0x40022000
 8001e70:	40021400 	.word	0x40021400
 8001e74:	40021c00 	.word	0x40021c00
 8001e78:	40020800 	.word	0x40020800

08001e7c <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e7c:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e7e:	4b17      	ldr	r3, [pc, #92]	; (8001edc <HAL_SDRAM_MspDeInit+0x60>)
 8001e80:	681a      	ldr	r2, [r3, #0]
 8001e82:	bb52      	cbnz	r2, 8001eda <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e84:	2201      	movs	r2, #1
 8001e86:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e88:	4a15      	ldr	r2, [pc, #84]	; (8001ee0 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e8a:	4816      	ldr	r0, [pc, #88]	; (8001ee4 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e8c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e8e:	f023 0301 	bic.w	r3, r3, #1
 8001e92:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e94:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001e98:	f002 fef8 	bl	8004c8c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001e9c:	4812      	ldr	r0, [pc, #72]	; (8001ee8 <HAL_SDRAM_MspDeInit+0x6c>)
 8001e9e:	f248 1133 	movw	r1, #33075	; 0x8133
 8001ea2:	f002 fef3 	bl	8004c8c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001ea6:	4811      	ldr	r0, [pc, #68]	; (8001eec <HAL_SDRAM_MspDeInit+0x70>)
 8001ea8:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001eac:	f002 feee 	bl	8004c8c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001eb0:	480f      	ldr	r0, [pc, #60]	; (8001ef0 <HAL_SDRAM_MspDeInit+0x74>)
 8001eb2:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001eb6:	f002 fee9 	bl	8004c8c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001eba:	480e      	ldr	r0, [pc, #56]	; (8001ef4 <HAL_SDRAM_MspDeInit+0x78>)
 8001ebc:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001ec0:	f002 fee4 	bl	8004c8c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001ec4:	480c      	ldr	r0, [pc, #48]	; (8001ef8 <HAL_SDRAM_MspDeInit+0x7c>)
 8001ec6:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001eca:	f002 fedf 	bl	8004c8c <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001ece:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001ed2:	480a      	ldr	r0, [pc, #40]	; (8001efc <HAL_SDRAM_MspDeInit+0x80>)
 8001ed4:	210d      	movs	r1, #13
 8001ed6:	f002 bed9 	b.w	8004c8c <HAL_GPIO_DeInit>
}
 8001eda:	bd08      	pop	{r3, pc}
 8001edc:	200015c4 	.word	0x200015c4
 8001ee0:	40023800 	.word	0x40023800
 8001ee4:	40021000 	.word	0x40021000
 8001ee8:	40021800 	.word	0x40021800
 8001eec:	40020c00 	.word	0x40020c00
 8001ef0:	40022000 	.word	0x40022000
 8001ef4:	40021400 	.word	0x40021400
 8001ef8:	40021c00 	.word	0x40021c00
 8001efc:	40020800 	.word	0x40020800

08001f00 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001f00:	b530      	push	{r4, r5, lr}
 8001f02:	4601      	mov	r1, r0
 8001f04:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001f06:	2200      	movs	r2, #0
 8001f08:	2036      	movs	r0, #54	; 0x36
 8001f0a:	f001 ffa3 	bl	8003e54 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001f0e:	2036      	movs	r0, #54	; 0x36
 8001f10:	f001 ffd2 	bl	8003eb8 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f14:	2500      	movs	r5, #0
 8001f16:	4b15      	ldr	r3, [pc, #84]	; (8001f6c <HAL_InitTick+0x6c>)
 8001f18:	9502      	str	r5, [sp, #8]
 8001f1a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001f1c:	4c14      	ldr	r4, [pc, #80]	; (8001f70 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f1e:	f042 0210 	orr.w	r2, r2, #16
 8001f22:	641a      	str	r2, [r3, #64]	; 0x40
 8001f24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f26:	f003 0310 	and.w	r3, r3, #16
 8001f2a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f2c:	a901      	add	r1, sp, #4
 8001f2e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001f30:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f32:	f004 f981 	bl	8006238 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001f36:	f004 f96f 	bl	8006218 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001f3a:	4b0e      	ldr	r3, [pc, #56]	; (8001f74 <HAL_InitTick+0x74>)
 8001f3c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001f3e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f42:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001f44:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001f46:	4b0c      	ldr	r3, [pc, #48]	; (8001f78 <HAL_InitTick+0x78>)
 8001f48:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f4c:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001f4e:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f50:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001f52:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f54:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001f56:	f004 fe55 	bl	8006c04 <HAL_TIM_Base_Init>
 8001f5a:	b920      	cbnz	r0, 8001f66 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001f5c:	4620      	mov	r0, r4
 8001f5e:	f004 fd0b 	bl	8006978 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f62:	b009      	add	sp, #36	; 0x24
 8001f64:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f66:	2001      	movs	r0, #1
 8001f68:	e7fb      	b.n	8001f62 <HAL_InitTick+0x62>
 8001f6a:	bf00      	nop
 8001f6c:	40023800 	.word	0x40023800
 8001f70:	200015cc 	.word	0x200015cc
 8001f74:	40001000 	.word	0x40001000
 8001f78:	000f4240 	.word	0x000f4240

08001f7c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f7c:	4770      	bx	lr

08001f7e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f7e:	e7fe      	b.n	8001f7e <HardFault_Handler>

08001f80 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f80:	e7fe      	b.n	8001f80 <MemManage_Handler>

08001f82 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f82:	e7fe      	b.n	8001f82 <BusFault_Handler>

08001f84 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f84:	e7fe      	b.n	8001f84 <UsageFault_Handler>

08001f86 <DebugMon_Handler>:
 8001f86:	4770      	bx	lr

08001f88 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f88:	4801      	ldr	r0, [pc, #4]	; (8001f90 <TIM6_DAC_IRQHandler+0x8>)
 8001f8a:	f004 bd33 	b.w	80069f4 <HAL_TIM_IRQHandler>
 8001f8e:	bf00      	nop
 8001f90:	200015cc 	.word	0x200015cc

08001f94 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f94:	4801      	ldr	r0, [pc, #4]	; (8001f9c <LTDC_IRQHandler+0x8>)
 8001f96:	f003 bc5e 	b.w	8005856 <HAL_LTDC_IRQHandler>
 8001f9a:	bf00      	nop
 8001f9c:	2000149c 	.word	0x2000149c

08001fa0 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001fa0:	4801      	ldr	r0, [pc, #4]	; (8001fa8 <DMA2D_IRQHandler+0x8>)
 8001fa2:	f002 b8ed 	b.w	8004180 <HAL_DMA2D_IRQHandler>
 8001fa6:	bf00      	nop
 8001fa8:	200013ec 	.word	0x200013ec

08001fac <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001fac:	4801      	ldr	r0, [pc, #4]	; (8001fb4 <DSI_IRQHandler+0x8>)
 8001fae:	f002 baee 	b.w	800458e <HAL_DSI_IRQHandler>
 8001fb2:	bf00      	nop
 8001fb4:	2000142c 	.word	0x2000142c

08001fb8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001fb8:	2001      	movs	r0, #1
 8001fba:	4770      	bx	lr

08001fbc <_kill>:

int _kill(int pid, int sig)
{
 8001fbc:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fbe:	f019 fecb 	bl	801bd58 <__errno>
 8001fc2:	2316      	movs	r3, #22
 8001fc4:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001fc6:	f04f 30ff 	mov.w	r0, #4294967295
 8001fca:	bd08      	pop	{r3, pc}

08001fcc <_exit>:

void _exit (int status)
{
 8001fcc:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fce:	f019 fec3 	bl	801bd58 <__errno>
 8001fd2:	2316      	movs	r3, #22
 8001fd4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001fd6:	e7fe      	b.n	8001fd6 <_exit+0xa>

08001fd8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001fd8:	b570      	push	{r4, r5, r6, lr}
 8001fda:	460d      	mov	r5, r1
 8001fdc:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fde:	460e      	mov	r6, r1
 8001fe0:	1b73      	subs	r3, r6, r5
 8001fe2:	429c      	cmp	r4, r3
 8001fe4:	dc01      	bgt.n	8001fea <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001fe6:	4620      	mov	r0, r4
 8001fe8:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001fea:	f3af 8000 	nop.w
 8001fee:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ff2:	e7f5      	b.n	8001fe0 <_read+0x8>

08001ff4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001ff4:	b570      	push	{r4, r5, r6, lr}
 8001ff6:	460d      	mov	r5, r1
 8001ff8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ffa:	460e      	mov	r6, r1
 8001ffc:	1b73      	subs	r3, r6, r5
 8001ffe:	429c      	cmp	r4, r3
 8002000:	dc01      	bgt.n	8002006 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002002:	4620      	mov	r0, r4
 8002004:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002006:	f816 0b01 	ldrb.w	r0, [r6], #1
 800200a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800200e:	e7f5      	b.n	8001ffc <_write+0x8>

08002010 <_close>:

int _close(int file)
{
	return -1;
}
 8002010:	f04f 30ff 	mov.w	r0, #4294967295
 8002014:	4770      	bx	lr

08002016 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002016:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800201a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800201c:	2000      	movs	r0, #0
 800201e:	4770      	bx	lr

08002020 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002020:	2001      	movs	r0, #1
 8002022:	4770      	bx	lr

08002024 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002024:	2000      	movs	r0, #0
 8002026:	4770      	bx	lr

08002028 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002028:	4a0a      	ldr	r2, [pc, #40]	; (8002054 <_sbrk+0x2c>)
 800202a:	6811      	ldr	r1, [r2, #0]
{
 800202c:	b508      	push	{r3, lr}
 800202e:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002030:	b909      	cbnz	r1, 8002036 <_sbrk+0xe>
		heap_end = &end;
 8002032:	4909      	ldr	r1, [pc, #36]	; (8002058 <_sbrk+0x30>)
 8002034:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002036:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002038:	4669      	mov	r1, sp
 800203a:	4403      	add	r3, r0
 800203c:	428b      	cmp	r3, r1
 800203e:	d906      	bls.n	800204e <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002040:	f019 fe8a 	bl	801bd58 <__errno>
 8002044:	230c      	movs	r3, #12
 8002046:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002048:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 800204c:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800204e:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002050:	e7fc      	b.n	800204c <_sbrk+0x24>
 8002052:	bf00      	nop
 8002054:	20001614 	.word	0x20001614
 8002058:	2000a8a8 	.word	0x2000a8a8

0800205c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800205c:	4770      	bx	lr

0800205e <_ZN23ApplicationFontProviderD0Ev>:
 800205e:	b510      	push	{r4, lr}
 8002060:	2104      	movs	r1, #4
 8002062:	4604      	mov	r4, r0
 8002064:	f019 fe18 	bl	801bc98 <_ZdlPvj>
 8002068:	4620      	mov	r0, r4
 800206a:	bd10      	pop	{r4, pc}

0800206c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 800206c:	2901      	cmp	r1, #1
{
 800206e:	b508      	push	{r3, lr}
    switch (typography)
 8002070:	d006      	beq.n	8002080 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002072:	2902      	cmp	r1, #2
 8002074:	d008      	beq.n	8002088 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002076:	b959      	cbnz	r1, 8002090 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002078:	f000 fe50 	bl	8002d1c <_ZN17TypedTextDatabase8getFontsEv>
 800207c:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800207e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002080:	f000 fe4c 	bl	8002d1c <_ZN17TypedTextDatabase8getFontsEv>
 8002084:	6840      	ldr	r0, [r0, #4]
 8002086:	e7fa      	b.n	800207e <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002088:	f000 fe48 	bl	8002d1c <_ZN17TypedTextDatabase8getFontsEv>
 800208c:	6880      	ldr	r0, [r0, #8]
 800208e:	e7f6      	b.n	800207e <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002090:	2000      	movs	r0, #0
 8002092:	e7f4      	b.n	800207e <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002094 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002094:	4800      	ldr	r0, [pc, #0]	; (8002098 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002096:	4770      	bx	lr
 8002098:	0801d5a0 	.word	0x0801d5a0

0800209c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800209c:	2006      	movs	r0, #6
 800209e:	4770      	bx	lr

080020a0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80020a0:	b513      	push	{r0, r1, r4, lr}
 80020a2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80020a4:	b151      	cbz	r1, 80020bc <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020a6:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80020a8:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80020aa:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020ae:	aa01      	add	r2, sp, #4
 80020b0:	689c      	ldr	r4, [r3, #8]
 80020b2:	f10d 0303 	add.w	r3, sp, #3
 80020b6:	47a0      	blx	r4
        return glyph;
    }
 80020b8:	b002      	add	sp, #8
 80020ba:	bd10      	pop	{r4, pc}
            return 0;
 80020bc:	4608      	mov	r0, r1
 80020be:	e7fb      	b.n	80020b8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080020c0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80020c0:	8940      	ldrh	r0, [r0, #10]
 80020c2:	4770      	bx	lr

080020c4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80020c4:	8980      	ldrh	r0, [r0, #12]
 80020c6:	4770      	bx	lr

080020c8 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80020c8:	8880      	ldrh	r0, [r0, #4]
 80020ca:	4770      	bx	lr

080020cc <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80020cc:	7983      	ldrb	r3, [r0, #6]
 80020ce:	8880      	ldrh	r0, [r0, #4]
 80020d0:	4418      	add	r0, r3
    }
 80020d2:	b280      	uxth	r0, r0
 80020d4:	4770      	bx	lr

080020d6 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80020d6:	79c0      	ldrb	r0, [r0, #7]
    }
 80020d8:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80020dc:	4770      	bx	lr

080020de <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80020de:	79c0      	ldrb	r0, [r0, #7]
    }
 80020e0:	09c0      	lsrs	r0, r0, #7
 80020e2:	4770      	bx	lr

080020e4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80020e4:	4770      	bx	lr

080020e6 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80020e6:	b510      	push	{r4, lr}
    }
 80020e8:	2108      	movs	r1, #8
    virtual ~TypedText()
 80020ea:	4604      	mov	r4, r0
    }
 80020ec:	f019 fdd4 	bl	801bc98 <_ZdlPvj>
 80020f0:	4620      	mov	r0, r4
 80020f2:	bd10      	pop	{r4, pc}

080020f4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80020f4:	4770      	bx	lr

080020f6 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 80020f6:	4770      	bx	lr

080020f8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80020f8:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 80020fc:	6808      	ldr	r0, [r1, #0]
 80020fe:	6849      	ldr	r1, [r1, #4]
 8002100:	c303      	stmia	r3!, {r0, r1}
    }
 8002102:	4770      	bx	lr

08002104 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002104:	4770      	bx	lr

08002106 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002106:	4770      	bx	lr

08002108 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002108:	6041      	str	r1, [r0, #4]
    }
 800210a:	4770      	bx	lr

0800210c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800210c:	4770      	bx	lr
	...

08002110 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002110:	4b06      	ldr	r3, [pc, #24]	; (800212c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002112:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002116:	2300      	movs	r3, #0
 8002118:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800211c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002120:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002124:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002128:	4770      	bx	lr
 800212a:	bf00      	nop
 800212c:	080021d1 	.word	0x080021d1

08002130 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002130:	2301      	movs	r3, #1
 8002132:	7203      	strb	r3, [r0, #8]
    }
 8002134:	4770      	bx	lr

08002136 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002136:	4770      	bx	lr

08002138 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002138:	4770      	bx	lr

0800213a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800213a:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 800213c:	68c2      	ldr	r2, [r0, #12]
 800213e:	6841      	ldr	r1, [r0, #4]
 8002140:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002142:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002144:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002148:	07d2      	lsls	r2, r2, #31
 800214a:	bf48      	it	mi
 800214c:	590a      	ldrmi	r2, [r1, r4]
 800214e:	689b      	ldr	r3, [r3, #8]
    }
 8002150:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002154:	bf48      	it	mi
 8002156:	58d3      	ldrmi	r3, [r2, r3]
 8002158:	4718      	bx	r3

0800215a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 800215a:	6843      	ldr	r3, [r0, #4]
 800215c:	b12b      	cbz	r3, 800216a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800215e:	6883      	ldr	r3, [r0, #8]
 8002160:	b92b      	cbnz	r3, 800216e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002162:	68c0      	ldr	r0, [r0, #12]
 8002164:	f000 0001 	and.w	r0, r0, #1
 8002168:	4770      	bx	lr
 800216a:	4618      	mov	r0, r3
 800216c:	4770      	bx	lr
 800216e:	2001      	movs	r0, #1
    }
 8002170:	4770      	bx	lr

08002172 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002172:	b510      	push	{r4, lr}
 8002174:	210c      	movs	r1, #12
 8002176:	4604      	mov	r4, r0
 8002178:	f019 fd8e 	bl	801bc98 <_ZdlPvj>
 800217c:	4620      	mov	r0, r4
 800217e:	bd10      	pop	{r4, pc}

08002180 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002180:	b510      	push	{r4, lr}
 8002182:	2110      	movs	r1, #16
 8002184:	4604      	mov	r4, r0
 8002186:	f019 fd87 	bl	801bc98 <_ZdlPvj>
 800218a:	4620      	mov	r0, r4
 800218c:	bd10      	pop	{r4, pc}

0800218e <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800218e:	b510      	push	{r4, lr}
 8002190:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002194:	4604      	mov	r4, r0
 8002196:	f019 fd7f 	bl	801bc98 <_ZdlPvj>
 800219a:	4620      	mov	r0, r4
 800219c:	bd10      	pop	{r4, pc}

0800219e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800219e:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80021a0:	f00a ffb8 	bl	800d114 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80021a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80021a8:	f00b bb7c 	b.w	800d8a4 <_ZN8touchgfx11Application10invalidateEv>

080021ac <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80021ac:	b510      	push	{r4, lr}
 80021ae:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80021b0:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80021b4:	b158      	cbz	r0, 80021ce <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80021b6:	6803      	ldr	r3, [r0, #0]
 80021b8:	68db      	ldr	r3, [r3, #12]
 80021ba:	4798      	blx	r3
 80021bc:	b138      	cbz	r0, 80021ce <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80021be:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80021c2:	6803      	ldr	r3, [r0, #0]
 80021c4:	689b      	ldr	r3, [r3, #8]
 80021c6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80021c8:	2300      	movs	r3, #0
 80021ca:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80021ce:	bd10      	pop	{r4, pc}

080021d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80021d0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80021d4:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80021d8:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80021da:	68a8      	ldr	r0, [r5, #8]
 80021dc:	6803      	ldr	r3, [r0, #0]
 80021de:	6a1b      	ldr	r3, [r3, #32]
 80021e0:	4798      	blx	r3
 80021e2:	f5b0 7ffe 	cmp.w	r0, #508	; 0x1fc
 80021e6:	d205      	bcs.n	80021f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80021e8:	4b45      	ldr	r3, [pc, #276]	; (8002300 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80021ea:	4a46      	ldr	r2, [pc, #280]	; (8002304 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80021ec:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80021ee:	4846      	ldr	r0, [pc, #280]	; (8002308 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80021f0:	f019 fd80 	bl	801bcf4 <__assert_func>
 80021f4:	6868      	ldr	r0, [r5, #4]
 80021f6:	6803      	ldr	r3, [r0, #0]
 80021f8:	6a1b      	ldr	r3, [r3, #32]
 80021fa:	4798      	blx	r3
 80021fc:	280f      	cmp	r0, #15
 80021fe:	d803      	bhi.n	8002208 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002200:	4b42      	ldr	r3, [pc, #264]	; (800230c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002202:	4a40      	ldr	r2, [pc, #256]	; (8002304 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002204:	21a4      	movs	r1, #164	; 0xa4
 8002206:	e7f2      	b.n	80021ee <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002208:	68e8      	ldr	r0, [r5, #12]
 800220a:	6803      	ldr	r3, [r0, #0]
 800220c:	6a1b      	ldr	r3, [r3, #32]
 800220e:	4798      	blx	r3
 8002210:	280b      	cmp	r0, #11
 8002212:	d803      	bhi.n	800221c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002214:	4b3e      	ldr	r3, [pc, #248]	; (8002310 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002216:	4a3b      	ldr	r2, [pc, #236]	; (8002304 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002218:	21a5      	movs	r1, #165	; 0xa5
 800221a:	e7e8      	b.n	80021ee <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 800221c:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002318 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002220:	f00a ff78 	bl	800d114 <_ZN8touchgfx11Application11getInstanceEv>
 8002224:	f00a ff7c 	bl	800d120 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002228:	f8d9 0000 	ldr.w	r0, [r9]
 800222c:	b110      	cbz	r0, 8002234 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800222e:	6803      	ldr	r3, [r0, #0]
 8002230:	68db      	ldr	r3, [r3, #12]
 8002232:	4798      	blx	r3
    if (*currentTrans)
 8002234:	f8d9 0000 	ldr.w	r0, [r9]
 8002238:	b110      	cbz	r0, 8002240 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800223a:	6803      	ldr	r3, [r0, #0]
 800223c:	681b      	ldr	r3, [r3, #0]
 800223e:	4798      	blx	r3
    if (*currentScreen)
 8002240:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800231c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002244:	f8d8 0000 	ldr.w	r0, [r8]
 8002248:	b110      	cbz	r0, 8002250 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800224a:	6803      	ldr	r3, [r0, #0]
 800224c:	695b      	ldr	r3, [r3, #20]
 800224e:	4798      	blx	r3
    if (*currentPresenter)
 8002250:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002254:	b110      	cbz	r0, 800225c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002256:	6803      	ldr	r3, [r0, #0]
 8002258:	685b      	ldr	r3, [r3, #4]
 800225a:	4798      	blx	r3
    if (*currentScreen)
 800225c:	f8d8 0000 	ldr.w	r0, [r8]
 8002260:	b110      	cbz	r0, 8002268 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002262:	6803      	ldr	r3, [r0, #0]
 8002264:	681b      	ldr	r3, [r3, #0]
 8002266:	4798      	blx	r3
    if (*currentPresenter)
 8002268:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800226c:	b110      	cbz	r0, 8002274 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800226e:	6803      	ldr	r3, [r0, #0]
 8002270:	689b      	ldr	r3, [r3, #8]
 8002272:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002274:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002276:	6803      	ldr	r3, [r0, #0]
 8002278:	2100      	movs	r1, #0
 800227a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800227c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800227e:	f04f 0b00 	mov.w	fp, #0
 8002282:	4b24      	ldr	r3, [pc, #144]	; (8002314 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002284:	6003      	str	r3, [r0, #0]
 8002286:	4604      	mov	r4, r0
 8002288:	f8c0 b004 	str.w	fp, [r0, #4]
 800228c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002290:	68a8      	ldr	r0, [r5, #8]
 8002292:	6803      	ldr	r3, [r0, #0]
 8002294:	4659      	mov	r1, fp
 8002296:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002298:	4798      	blx	r3
 800229a:	4606      	mov	r6, r0
 800229c:	f000 fda0 	bl	8002de0 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80022a0:	6868      	ldr	r0, [r5, #4]
 80022a2:	6803      	ldr	r3, [r0, #0]
 80022a4:	4659      	mov	r1, fp
 80022a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022a8:	4798      	blx	r3
 80022aa:	4631      	mov	r1, r6
 80022ac:	4605      	mov	r5, r0
 80022ae:	f000 fd77 	bl	8002da0 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80022b2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80022b6:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80022ba:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80022be:	b1e5      	cbz	r5, 80022fa <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 80022c0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80022c2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80022c6:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80022c8:	f8c5 a008 	str.w	sl, [r5, #8]
 80022cc:	4630      	mov	r0, r6
 80022ce:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80022d0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80022d2:	4798      	blx	r3
    newPresenter->activate();
 80022d4:	682b      	ldr	r3, [r5, #0]
 80022d6:	4628      	mov	r0, r5
 80022d8:	681b      	ldr	r3, [r3, #0]
 80022da:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80022dc:	4621      	mov	r1, r4
 80022de:	4630      	mov	r0, r6
 80022e0:	f00c faf2 	bl	800e8c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80022e4:	6823      	ldr	r3, [r4, #0]
 80022e6:	4620      	mov	r0, r4
 80022e8:	691b      	ldr	r3, [r3, #16]
 80022ea:	4798      	blx	r3
    newTransition->invalidate();
 80022ec:	6823      	ldr	r3, [r4, #0]
 80022ee:	695b      	ldr	r3, [r3, #20]
 80022f0:	4620      	mov	r0, r4
}
 80022f2:	b001      	add	sp, #4
 80022f4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80022f8:	4718      	bx	r3
    model->bind(newPresenter);
 80022fa:	462b      	mov	r3, r5
 80022fc:	e7e1      	b.n	80022c2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 80022fe:	bf00      	nop
 8002300:	0801d628 	.word	0x0801d628
 8002304:	0801d6b6 	.word	0x0801d6b6
 8002308:	0801d7ba 	.word	0x0801d7ba
 800230c:	0801d801 	.word	0x0801d801
 8002310:	0801d8a4 	.word	0x0801d8a4
 8002314:	0801d9b4 	.word	0x0801d9b4
 8002318:	2000a640 	.word	0x2000a640
 800231c:	2000a63c 	.word	0x2000a63c

08002320 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002322:	4604      	mov	r4, r0
 8002324:	4617      	mov	r7, r2
 8002326:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002328:	f00a ff14 	bl	800d154 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800232c:	4b10      	ldr	r3, [pc, #64]	; (8002370 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 800232e:	2500      	movs	r5, #0
      model(m)
 8002330:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 8002334:	4e0f      	ldr	r6, [pc, #60]	; (8002374 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8002336:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 8002338:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 800233c:	4b0e      	ldr	r3, [pc, #56]	; (8002378 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 800233e:	6830      	ldr	r0, [r6, #0]
 8002340:	6023      	str	r3, [r4, #0]
 8002342:	4b0e      	ldr	r3, [pc, #56]	; (800237c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002344:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002348:	6803      	ldr	r3, [r0, #0]
 800234a:	4629      	mov	r1, r5
 800234c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800234e:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 8002352:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002354:	4628      	mov	r0, r5
 8002356:	f000 fc95 	bl	8002c84 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800235a:	6833      	ldr	r3, [r6, #0]
 800235c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002360:	b10a      	cbz	r2, 8002366 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8002362:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002364:	b900      	cbnz	r0, 8002368 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8002366:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002368:	f012 fb45 	bl	80149f6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800236c:	4620      	mov	r0, r4
 800236e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002370:	2000a64c 	.word	0x2000a64c
 8002374:	2000a600 	.word	0x2000a600
 8002378:	0801d968 	.word	0x0801d968
 800237c:	0801d950 	.word	0x0801d950

08002380 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002380:	4b06      	ldr	r3, [pc, #24]	; (800239c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002382:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002386:	2300      	movs	r3, #0
 8002388:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 800238c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002390:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002394:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002398:	4770      	bx	lr
 800239a:	bf00      	nop
 800239c:	080021d1 	.word	0x080021d1

080023a0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80023a0:	6a00      	ldr	r0, [r0, #32]
 80023a2:	4770      	bx	lr

080023a4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80023a4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80023a6:	4770      	bx	lr

080023a8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80023a8:	4770      	bx	lr

080023aa <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80023aa:	888b      	ldrh	r3, [r1, #4]
 80023ac:	6980      	ldr	r0, [r0, #24]
 80023ae:	680a      	ldr	r2, [r1, #0]
 80023b0:	0adb      	lsrs	r3, r3, #11
 80023b2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80023b6:	4410      	add	r0, r2
 80023b8:	4770      	bx	lr

080023ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80023ba:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80023bc:	b1c2      	cbz	r2, 80023f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80023be:	7b13      	ldrb	r3, [r2, #12]
 80023c0:	b1b3      	cbz	r3, 80023f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80023c2:	7b54      	ldrb	r4, [r2, #13]
 80023c4:	7ad2      	ldrb	r2, [r2, #11]
 80023c6:	0224      	lsls	r4, r4, #8
 80023c8:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80023cc:	4314      	orrs	r4, r2
 80023ce:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80023d0:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80023d2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80023d6:	8813      	ldrh	r3, [r2, #0]
 80023d8:	428b      	cmp	r3, r1
 80023da:	d102      	bne.n	80023e2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80023dc:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80023e0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80023e2:	d805      	bhi.n	80023f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80023e4:	3801      	subs	r0, #1
 80023e6:	b280      	uxth	r0, r0
 80023e8:	3204      	adds	r2, #4
 80023ea:	2800      	cmp	r0, #0
 80023ec:	d1f3      	bne.n	80023d6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80023ee:	e7f7      	b.n	80023e0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80023f0:	2000      	movs	r0, #0
 80023f2:	e7f5      	b.n	80023e0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080023f4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80023f4:	b510      	push	{r4, lr}
 80023f6:	2128      	movs	r1, #40	; 0x28
 80023f8:	4604      	mov	r4, r0
 80023fa:	f019 fc4d 	bl	801bc98 <_ZdlPvj>
 80023fe:	4620      	mov	r0, r4
 8002400:	bd10      	pop	{r4, pc}
	...

08002404 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002404:	b530      	push	{r4, r5, lr}
 8002406:	b089      	sub	sp, #36	; 0x24
 8002408:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800240a:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800240e:	9506      	str	r5, [sp, #24]
 8002410:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002414:	9505      	str	r5, [sp, #20]
 8002416:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800241a:	9504      	str	r5, [sp, #16]
 800241c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002420:	9503      	str	r5, [sp, #12]
 8002422:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002426:	9502      	str	r5, [sp, #8]
 8002428:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 800242c:	9501      	str	r5, [sp, #4]
 800242e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002432:	9500      	str	r5, [sp, #0]
 8002434:	f00b fea8 	bl	800e188 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002438:	4b06      	ldr	r3, [pc, #24]	; (8002454 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800243a:	6023      	str	r3, [r4, #0]
 800243c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800243e:	61a3      	str	r3, [r4, #24]
 8002440:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002442:	61e3      	str	r3, [r4, #28]
 8002444:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002446:	6223      	str	r3, [r4, #32]
 8002448:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800244a:	6263      	str	r3, [r4, #36]	; 0x24
}
 800244c:	4620      	mov	r0, r4
 800244e:	b009      	add	sp, #36	; 0x24
 8002450:	bd30      	pop	{r4, r5, pc}
 8002452:	bf00      	nop
 8002454:	0801d9d8 	.word	0x0801d9d8

08002458 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002458:	2000      	movs	r0, #0
 800245a:	4770      	bx	lr

0800245c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800245c:	8081      	strh	r1, [r0, #4]
    }
 800245e:	4770      	bx	lr

08002460 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002460:	80c1      	strh	r1, [r0, #6]
    }
 8002462:	4770      	bx	lr

08002464 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002464:	8101      	strh	r1, [r0, #8]
    }
 8002466:	4770      	bx	lr

08002468 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002468:	8141      	strh	r1, [r0, #10]
    }
 800246a:	4770      	bx	lr

0800246c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800246c:	4770      	bx	lr

0800246e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 800246e:	4770      	bx	lr

08002470 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002470:	4770      	bx	lr

08002472 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 8002472:	4770      	bx	lr

08002474 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002474:	4770      	bx	lr

08002476 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002476:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002478:	88c4      	ldrh	r4, [r0, #6]
 800247a:	6803      	ldr	r3, [r0, #0]
 800247c:	1b12      	subs	r2, r2, r4
 800247e:	8884      	ldrh	r4, [r0, #4]
 8002480:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002482:	1b09      	subs	r1, r1, r4
 8002484:	b212      	sxth	r2, r2
    }
 8002486:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800248a:	b209      	sxth	r1, r1
 800248c:	4718      	bx	r3

0800248e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800248e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002492:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002494:	f04f 33ff 	mov.w	r3, #4294967295
 8002498:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800249a:	6813      	ldr	r3, [r2, #0]
 800249c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800249e:	6010      	str	r0, [r2, #0]
    }
 80024a0:	4770      	bx	lr

080024a2 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80024a2:	4770      	bx	lr

080024a4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80024a4:	4770      	bx	lr

080024a6 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80024a6:	4770      	bx	lr

080024a8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80024a8:	4770      	bx	lr

080024aa <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80024aa:	4770      	bx	lr

080024ac <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80024ac:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80024b0:	b11a      	cbz	r2, 80024ba <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80024b2:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80024b6:	b102      	cbz	r2, 80024ba <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80024b8:	6018      	str	r0, [r3, #0]
        }
    }
 80024ba:	4770      	bx	lr

080024bc <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80024bc:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80024be:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80024c0:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80024c2:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80024c4:	466d      	mov	r5, sp
 80024c6:	4601      	mov	r1, r0
 80024c8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80024cc:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80024ce:	4628      	mov	r0, r5
 80024d0:	4798      	blx	r3
 80024d2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80024d6:	343c      	adds	r4, #60	; 0x3c
 80024d8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80024dc:	b005      	add	sp, #20
 80024de:	bd30      	pop	{r4, r5, pc}

080024e0 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80024e0:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80024e2:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80024e4:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80024e6:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80024e8:	466d      	mov	r5, sp
 80024ea:	4601      	mov	r1, r0
 80024ec:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80024f0:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80024f2:	4628      	mov	r0, r5
 80024f4:	4798      	blx	r3
 80024f6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80024fa:	343c      	adds	r4, #60	; 0x3c
 80024fc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002500:	b005      	add	sp, #20
 8002502:	bd30      	pop	{r4, r5, pc}

08002504 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002504:	2200      	movs	r2, #0
 8002506:	8002      	strh	r2, [r0, #0]
 8002508:	8042      	strh	r2, [r0, #2]
 800250a:	8082      	strh	r2, [r0, #4]
 800250c:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800250e:	4770      	bx	lr

08002510 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002510:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002514:	4770      	bx	lr

08002516 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002516:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002518:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800251a:	4604      	mov	r4, r0
        setX(x);
 800251c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800251e:	4615      	mov	r5, r2
        setX(x);
 8002520:	4798      	blx	r3
        setBaselineY(baselineY);
 8002522:	6823      	ldr	r3, [r4, #0]
 8002524:	4629      	mov	r1, r5
 8002526:	4620      	mov	r0, r4
 8002528:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 800252a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 800252e:	4718      	bx	r3

08002530 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002530:	2000      	movs	r0, #0
 8002532:	4770      	bx	lr

08002534 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002534:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002536:	4770      	bx	lr

08002538 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002538:	4770      	bx	lr

0800253a <_ZN15Screen1ViewBase7f_startEv>:
     * Virtual Action Handlers
     */
    virtual void f_start()
    {
        // Override and implement this function in Screen1
    }
 800253a:	4770      	bx	lr

0800253c <_ZN15Screen1ViewBase7f_minusEv>:

    virtual void f_minus()
    {
        // Override and implement this function in Screen1
    }
 800253c:	4770      	bx	lr

0800253e <_ZN15Screen1ViewBase6f_plusEv>:

    virtual void f_plus()
    {
        // Override and implement this function in Screen1
    }
 800253e:	4770      	bx	lr

08002540 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002540:	4770      	bx	lr

08002542 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002542:	4770      	bx	lr

08002544 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002544:	4770      	bx	lr

08002546 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002546:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002548:	68c2      	ldr	r2, [r0, #12]
 800254a:	6844      	ldr	r4, [r0, #4]
 800254c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800254e:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002550:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002554:	07d2      	lsls	r2, r2, #31
 8002556:	bf48      	it	mi
 8002558:	5962      	ldrmi	r2, [r4, r5]
 800255a:	689b      	ldr	r3, [r3, #8]
    }
 800255c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800255e:	bf48      	it	mi
 8002560:	58d3      	ldrmi	r3, [r2, r3]
 8002562:	4718      	bx	r3

08002564 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002564:	6843      	ldr	r3, [r0, #4]
 8002566:	b12b      	cbz	r3, 8002574 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002568:	6883      	ldr	r3, [r0, #8]
 800256a:	b92b      	cbnz	r3, 8002578 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800256c:	68c0      	ldr	r0, [r0, #12]
 800256e:	f000 0001 	and.w	r0, r0, #1
 8002572:	4770      	bx	lr
 8002574:	4618      	mov	r0, r3
 8002576:	4770      	bx	lr
 8002578:	2001      	movs	r0, #1
    }
 800257a:	4770      	bx	lr

0800257c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800257c:	b510      	push	{r4, lr}
 800257e:	214c      	movs	r1, #76	; 0x4c
 8002580:	4604      	mov	r4, r0
 8002582:	f019 fb89 	bl	801bc98 <_ZdlPvj>
 8002586:	4620      	mov	r0, r4
 8002588:	bd10      	pop	{r4, pc}

0800258a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800258a:	b510      	push	{r4, lr}
 800258c:	2110      	movs	r1, #16
 800258e:	4604      	mov	r4, r0
 8002590:	f019 fb82 	bl	801bc98 <_ZdlPvj>
 8002594:	4620      	mov	r0, r4
 8002596:	bd10      	pop	{r4, pc}

08002598 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002598:	b510      	push	{r4, lr}
 800259a:	f44f 71fe 	mov.w	r1, #508	; 0x1fc
 800259e:	4604      	mov	r4, r0
 80025a0:	f019 fb7a 	bl	801bc98 <_ZdlPvj>
 80025a4:	4620      	mov	r0, r4
 80025a6:	bd10      	pop	{r4, pc}

080025a8 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_plus)
 80025a8:	f500 7296 	add.w	r2, r0, #300	; 0x12c
 80025ac:	4291      	cmp	r1, r2
 80025ae:	d102      	bne.n	80025b6 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Interaction3
        //When btn_plus clicked call virtual function
        //Call f_plus
        f_plus();
 80025b0:	6803      	ldr	r3, [r0, #0]
 80025b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    else if (&src == &btn_start)
    {
        //Interaction1
        //When btn_start clicked call virtual function
        //Call f_start
        f_start();
 80025b4:	4718      	bx	r3
    else if (&src == &btn_minus)
 80025b6:	f500 72b4 	add.w	r2, r0, #360	; 0x168
 80025ba:	4291      	cmp	r1, r2
 80025bc:	d102      	bne.n	80025c4 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1c>
        f_minus();
 80025be:	6803      	ldr	r3, [r0, #0]
 80025c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80025c2:	e7f7      	b.n	80025b4 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc>
    else if (&src == &btn_start)
 80025c4:	f500 72d2 	add.w	r2, r0, #420	; 0x1a4
 80025c8:	4291      	cmp	r1, r2
 80025ca:	d102      	bne.n	80025d2 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
        f_start();
 80025cc:	6803      	ldr	r3, [r0, #0]
 80025ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025d0:	e7f0      	b.n	80025b4 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xc>
    }
}
 80025d2:	4770      	bx	lr

080025d4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80025d4:	6803      	ldr	r3, [r0, #0]
class TypedText
 80025d6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
    virtual void setBaselineY(int16_t baselineY)
 80025d8:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80025da:	6b5e      	ldr	r6, [r3, #52]	; 0x34
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80025dc:	4b11      	ldr	r3, [pc, #68]	; (8002624 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80025de:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80025e0:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80025e2:	b28d      	uxth	r5, r1
 80025e4:	b92b      	cbnz	r3, 80025f2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 80025e6:	4b10      	ldr	r3, [pc, #64]	; (8002628 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80025e8:	4a10      	ldr	r2, [pc, #64]	; (800262c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80025ea:	21ae      	movs	r1, #174	; 0xae
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80025ec:	4810      	ldr	r0, [pc, #64]	; (8002630 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80025ee:	f019 fb81 	bl	801bcf4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80025f2:	4910      	ldr	r1, [pc, #64]	; (8002634 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80025f4:	8809      	ldrh	r1, [r1, #0]
 80025f6:	4291      	cmp	r1, r2
 80025f8:	d803      	bhi.n	8002602 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80025fa:	4b0f      	ldr	r3, [pc, #60]	; (8002638 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80025fc:	4a0b      	ldr	r2, [pc, #44]	; (800262c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80025fe:	21af      	movs	r1, #175	; 0xaf
 8002600:	e7f4      	b.n	80025ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002602:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002606:	4b0d      	ldr	r3, [pc, #52]	; (800263c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002608:	681b      	ldr	r3, [r3, #0]
 800260a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800260e:	6803      	ldr	r3, [r0, #0]
 8002610:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002612:	4798      	blx	r3
 8002614:	1a28      	subs	r0, r5, r0
 8002616:	b201      	sxth	r1, r0
 8002618:	4633      	mov	r3, r6
 800261a:	4620      	mov	r0, r4
    }
 800261c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002620:	4718      	bx	r3
 8002622:	bf00      	nop
 8002624:	2000a650 	.word	0x2000a650
 8002628:	0801da28 	.word	0x0801da28
 800262c:	0801da6a 	.word	0x0801da6a
 8002630:	0801da98 	.word	0x0801da98
 8002634:	2000a654 	.word	0x2000a654
 8002638:	0801dadf 	.word	0x0801dadf
 800263c:	2000a658 	.word	0x2000a658

08002640 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002640:	2200      	movs	r2, #0
 8002642:	f04f 31ff 	mov.w	r1, #4294967295
 8002646:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800264a:	6082      	str	r2, [r0, #8]
    }
 800264c:	4770      	bx	lr

0800264e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800264e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002650:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002652:	4604      	mov	r4, r0
        setX(x);
 8002654:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002656:	4615      	mov	r5, r2
        setX(x);
 8002658:	4798      	blx	r3
        setY(y);
 800265a:	6823      	ldr	r3, [r4, #0]
 800265c:	4629      	mov	r1, r5
 800265e:	4620      	mov	r0, r4
 8002660:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002662:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002666:	4718      	bx	r3

08002668 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002668:	b570      	push	{r4, r5, r6, lr}
 800266a:	4604      	mov	r4, r0
 800266c:	461d      	mov	r5, r3
 800266e:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002672:	f7ff ffec 	bl	800264e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002676:	6823      	ldr	r3, [r4, #0]
 8002678:	4629      	mov	r1, r5
 800267a:	4620      	mov	r0, r4
 800267c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800267e:	4798      	blx	r3
        setHeight(height);
 8002680:	6823      	ldr	r3, [r4, #0]
 8002682:	4631      	mov	r1, r6
 8002684:	4620      	mov	r0, r4
 8002686:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002688:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800268c:	4718      	bx	r3
	...

08002690 <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002690:	4a09      	ldr	r2, [pc, #36]	; (80026b8 <_ZN8touchgfx3BoxC1Ev+0x28>)
 8002692:	6002      	str	r2, [r0, #0]
          visible(true)
 8002694:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002698:	2200      	movs	r2, #0
 800269a:	8481      	strh	r1, [r0, #36]	; 0x24
 800269c:	21ff      	movs	r1, #255	; 0xff
 800269e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80026a2:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80026a6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80026aa:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80026ae:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 80026b2:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 80026b4:	4770      	bx	lr
 80026b6:	bf00      	nop
 80026b8:	0801ec60 	.word	0x0801ec60

080026bc <_ZN8touchgfx8TextAreaC1Ev>:
 80026bc:	f44f 7180 	mov.w	r1, #256	; 0x100
 80026c0:	8481      	strh	r1, [r0, #36]	; 0x24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026c2:	490d      	ldr	r1, [pc, #52]	; (80026f8 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80026c4:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 80026c6:	490d      	ldr	r1, [pc, #52]	; (80026fc <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80026c8:	6281      	str	r1, [r0, #40]	; 0x28
 80026ca:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80026ce:	8581      	strh	r1, [r0, #44]	; 0x2c
 80026d0:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
        : x(0), y(0), width(0), height(0)
 80026d4:	2200      	movs	r2, #0
 80026d6:	6341      	str	r1, [r0, #52]	; 0x34
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
        : x(x), y(y), width(width), height(height)
 80026d8:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 80026dc:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80026e0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80026e4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80026e8:	e9c0 2207 	strd	r2, r2, [r0, #28]
              text(0)
 80026ec:	e9c0 1210 	strd	r1, r2, [r0, #64]	; 0x40
        : color(col)
 80026f0:	6302      	str	r2, [r0, #48]	; 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026f2:	8702      	strh	r2, [r0, #56]	; 0x38
        : x(x), y(y), width(width), height(height)
 80026f4:	63c2      	str	r2, [r0, #60]	; 0x3c
    }
 80026f6:	4770      	bx	lr
 80026f8:	0801eba0 	.word	0x0801eba0
 80026fc:	0801d620 	.word	0x0801d620

08002700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002700:	4b1b      	ldr	r3, [pc, #108]	; (8002770 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002702:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002704:	881b      	ldrh	r3, [r3, #0]
 8002706:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002708:	428b      	cmp	r3, r1
    void updateTextPosition()
 800270a:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 800270c:	d92b      	bls.n	8002766 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800270e:	4b19      	ldr	r3, [pc, #100]	; (8002774 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002710:	681b      	ldr	r3, [r3, #0]
 8002712:	b92b      	cbnz	r3, 8002720 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002714:	4b18      	ldr	r3, [pc, #96]	; (8002778 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002716:	4a19      	ldr	r2, [pc, #100]	; (800277c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002718:	4819      	ldr	r0, [pc, #100]	; (8002780 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800271a:	21ae      	movs	r1, #174	; 0xae
 800271c:	f019 faea 	bl	801bcf4 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002720:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002724:	4b17      	ldr	r3, [pc, #92]	; (8002784 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002726:	681b      	ldr	r3, [r3, #0]
 8002728:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 800272c:	4b16      	ldr	r3, [pc, #88]	; (8002788 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 800272e:	6818      	ldr	r0, [r3, #0]
 8002730:	f000 fae4 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002734:	682b      	ldr	r3, [r5, #0]
 8002736:	9001      	str	r0, [sp, #4]
 8002738:	4601      	mov	r1, r0
 800273a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800273c:	4628      	mov	r0, r5
 800273e:	4798      	blx	r3
 8002740:	682b      	ldr	r3, [r5, #0]
 8002742:	9901      	ldr	r1, [sp, #4]
 8002744:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002746:	4604      	mov	r4, r0
 8002748:	4628      	mov	r0, r5
 800274a:	4798      	blx	r3
 800274c:	682b      	ldr	r3, [r5, #0]
 800274e:	9901      	ldr	r1, [sp, #4]
 8002750:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002752:	fb14 f400 	smulbb	r4, r4, r0
 8002756:	4628      	mov	r0, r5
 8002758:	4798      	blx	r3
 800275a:	b2e4      	uxtb	r4, r4
 800275c:	4404      	add	r4, r0
 800275e:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002762:	b002      	add	sp, #8
 8002764:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002766:	2300      	movs	r3, #0
 8002768:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 800276c:	e7f9      	b.n	8002762 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 800276e:	bf00      	nop
 8002770:	2000a654 	.word	0x2000a654
 8002774:	2000a650 	.word	0x2000a650
 8002778:	0801da28 	.word	0x0801da28
 800277c:	0801da6a 	.word	0x0801da6a
 8002780:	0801da98 	.word	0x0801da98
 8002784:	2000a658 	.word	0x2000a658
 8002788:	2000a65c 	.word	0x2000a65c

0800278c <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 800278c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002790:	ed2d 8b02 	vpush	{d8}
 8002794:	4604      	mov	r4, r0
 8002796:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002798:	46a1      	mov	r9, r4
        : presenter(0)
 800279a:	2500      	movs	r5, #0
 800279c:	f00b fee8 	bl	800e570 <_ZN8touchgfx6ScreenC1Ev>
 80027a0:	4b99      	ldr	r3, [pc, #612]	; (8002a08 <_ZN15Screen1ViewBaseC1Ev+0x27c>)
 80027a2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80027a4:	f849 3b40 	str.w	r3, [r9], #64
 80027a8:	4648      	mov	r0, r9
 80027aa:	f7ff ff71 	bl	8002690 <_ZN8touchgfx3BoxC1Ev>
 80027ae:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80027b2:	4618      	mov	r0, r3
 80027b4:	f104 0898 	add.w	r8, r4, #152	; 0x98
 80027b8:	ee08 3a90 	vmov	s17, r3
 80027bc:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80027c0:	f7ff ff66 	bl	8002690 <_ZN8touchgfx3BoxC1Ev>
 80027c4:	4640      	mov	r0, r8
 80027c6:	f7ff ff79 	bl	80026bc <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 80027ca:	4630      	mov	r0, r6
 80027cc:	f7ff ff76 	bl	80026bc <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80027d0:	4b8e      	ldr	r3, [pc, #568]	; (8002a0c <_ZN15Screen1ViewBaseC1Ev+0x280>)
 80027d2:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 80027d6:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80027da:	4618      	mov	r0, r3
 80027dc:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 80027e0:	f504 7ab4 	add.w	sl, r4, #360	; 0x168
 80027e4:	ee08 3a10 	vmov	s16, r3
 80027e8:	f504 77d2 	add.w	r7, r4, #420	; 0x1a4
 80027ec:	f008 fe72 	bl	800b4d4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80027f0:	4650      	mov	r0, sl
 80027f2:	f008 fe6f 	bl	800b4d4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80027f6:	4638      	mov	r0, r7
 80027f8:	f008 ff5e 	bl	800b6b8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80027fc:	4b84      	ldr	r3, [pc, #528]	; (8002a10 <_ZN15Screen1ViewBaseC1Ev+0x284>)
 80027fe:	e9c4 347b 	strd	r3, r4, [r4, #492]	; 0x1ec
 8002802:	4b84      	ldr	r3, [pc, #528]	; (8002a14 <_ZN15Screen1ViewBaseC1Ev+0x288>)
    __background.setPosition(0, 0, 800, 480);
 8002804:	f44f 7bf0 	mov.w	fp, #480	; 0x1e0
 8002808:	e9c4 357d 	strd	r3, r5, [r4, #500]	; 0x1f4
 800280c:	f8cd b000 	str.w	fp, [sp]
 8002810:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002814:	462a      	mov	r2, r5
 8002816:	4629      	mov	r1, r5
 8002818:	4648      	mov	r0, r9
 800281a:	f7ff ff25 	bl	8002668 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800281e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    box1.setPosition(0, 0, 800, 480);
 8002822:	ee18 0a90 	vmov	r0, s17
 8002826:	66a3      	str	r3, [r4, #104]	; 0x68
 8002828:	f8cd b000 	str.w	fp, [sp]
 800282c:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002830:	462a      	mov	r2, r5
 8002832:	4629      	mov	r1, r5
 8002834:	f7ff ff18 	bl	8002668 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002838:	f04f 33ff 	mov.w	r3, #4294967295
    textArea1.setXY(165, 126);
 800283c:	227e      	movs	r2, #126	; 0x7e
 800283e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002842:	21a5      	movs	r1, #165	; 0xa5
 8002844:	4640      	mov	r0, r8
 8002846:	f7ff ff02 	bl	800264e <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800284a:	f10d 0b10 	add.w	fp, sp, #16
        this->color = color;
 800284e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002852:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002856:	4641      	mov	r1, r8
 8002858:	4658      	mov	r0, fp
        linespace = space;
 800285a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800285e:	f007 ffff 	bl	800a860 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002862:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8002866:	f104 0cd4 	add.w	ip, r4, #212	; 0xd4
        : typedTextId(id)
 800286a:	4b6b      	ldr	r3, [pc, #428]	; (8002a18 <_ZN15Screen1ViewBaseC1Ev+0x28c>)
 800286c:	930c      	str	r3, [sp, #48]	; 0x30
 800286e:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8002872:	f04f 0304 	mov.w	r3, #4
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R3ZN));
 8002876:	a90c      	add	r1, sp, #48	; 0x30
 8002878:	4640      	mov	r0, r8
 800287a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800287e:	f008 fb43 	bl	800af08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txt_number.setXY(185, 186);
 8002882:	22ba      	movs	r2, #186	; 0xba
 8002884:	21b9      	movs	r1, #185	; 0xb9
 8002886:	4630      	mov	r0, r6
 8002888:	f7ff fee1 	bl	800264e <_ZN8touchgfx8Drawable5setXYEss>
 800288c:	f8d4 20e0 	ldr.w	r2, [r4, #224]	; 0xe0
        linespace = space;
 8002890:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        this->color = color;
 8002894:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8002898:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
        this->color = color;
 800289c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
        boundingArea = calculateBoundingArea();
 80028a0:	4631      	mov	r1, r6
 80028a2:	4658      	mov	r0, fp
 80028a4:	4790      	blx	r2
 80028a6:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80028aa:	4b5c      	ldr	r3, [pc, #368]	; (8002a1c <_ZN15Screen1ViewBaseC1Ev+0x290>)
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	f504 7c8e 	add.w	ip, r4, #284	; 0x11c
 80028b2:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80028b6:	b92b      	cbnz	r3, 80028c4 <_ZN15Screen1ViewBaseC1Ev+0x138>
 80028b8:	4b59      	ldr	r3, [pc, #356]	; (8002a20 <_ZN15Screen1ViewBaseC1Ev+0x294>)
 80028ba:	4a5a      	ldr	r2, [pc, #360]	; (8002a24 <_ZN15Screen1ViewBaseC1Ev+0x298>)
 80028bc:	21ae      	movs	r1, #174	; 0xae
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80028be:	485a      	ldr	r0, [pc, #360]	; (8002a28 <_ZN15Screen1ViewBaseC1Ev+0x29c>)
 80028c0:	f019 fa18 	bl	801bcf4 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80028c4:	4b59      	ldr	r3, [pc, #356]	; (8002a2c <_ZN15Screen1ViewBaseC1Ev+0x2a0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80028c6:	881b      	ldrh	r3, [r3, #0]
 80028c8:	2b01      	cmp	r3, #1
 80028ca:	d803      	bhi.n	80028d4 <_ZN15Screen1ViewBaseC1Ev+0x148>
 80028cc:	4b58      	ldr	r3, [pc, #352]	; (8002a30 <_ZN15Screen1ViewBaseC1Ev+0x2a4>)
 80028ce:	4a55      	ldr	r2, [pc, #340]	; (8002a24 <_ZN15Screen1ViewBaseC1Ev+0x298>)
 80028d0:	21af      	movs	r1, #175	; 0xaf
 80028d2:	e7f4      	b.n	80028be <_ZN15Screen1ViewBaseC1Ev+0x132>
        return texts->getText(typedTextId);
 80028d4:	4b57      	ldr	r3, [pc, #348]	; (8002a34 <_ZN15Screen1ViewBaseC1Ev+0x2a8>)
 80028d6:	2101      	movs	r1, #1
 80028d8:	6818      	ldr	r0, [r3, #0]
 80028da:	f000 fa0f 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
        wc1 = value;
 80028de:	f8c4 0128 	str.w	r0, [r4, #296]	; 0x128
    txt_number.resizeToCurrentText();
 80028e2:	4630      	mov	r0, r6
 80028e4:	f008 faf0 	bl	800aec8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80028e8:	4b4b      	ldr	r3, [pc, #300]	; (8002a18 <_ZN15Screen1ViewBaseC1Ev+0x28c>)
 80028ea:	930c      	str	r3, [sp, #48]	; 0x30
    txt_number.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6XES));
 80028ec:	a90c      	add	r1, sp, #48	; 0x30
 80028ee:	f04f 0303 	mov.w	r3, #3
 80028f2:	4630      	mov	r0, r6
 80028f4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80028f8:	f008 fb06 	bl	800af08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    btn_plus.setXY(135, 240);
 80028fc:	ee18 0a10 	vmov	r0, s16
 8002900:	22f0      	movs	r2, #240	; 0xf0
 8002902:	2187      	movs	r1, #135	; 0x87
 8002904:	f7ff fea3 	bl	800264e <_ZN8touchgfx8Drawable5setXYEss>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002908:	f04f 0303 	mov.w	r3, #3
 800290c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002910:	2305      	movs	r3, #5
 8002912:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002916:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
    btn_plus.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_32_ID));
 800291a:	a90b      	add	r1, sp, #44	; 0x2c
 800291c:	ab0c      	add	r3, sp, #48	; 0x30
 800291e:	f04f 0b02 	mov.w	fp, #2
 8002922:	ee18 0a10 	vmov	r0, s16
 8002926:	9300      	str	r3, [sp, #0]
 8002928:	aa0a      	add	r2, sp, #40	; 0x28
 800292a:	460b      	mov	r3, r1
 800292c:	a909      	add	r1, sp, #36	; 0x24
 800292e:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8002932:	f008 fd2b 	bl	800b38c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    btn_plus.setAction(buttonCallback);
 8002936:	f504 72f6 	add.w	r2, r4, #492	; 0x1ec
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800293a:	4b3f      	ldr	r3, [pc, #252]	; (8002a38 <_ZN15Screen1ViewBaseC1Ev+0x2ac>)
 800293c:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
 8002940:	9203      	str	r2, [sp, #12]
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002942:	f8c4 2154 	str.w	r2, [r4, #340]	; 0x154
    btn_minus.setXY(253, 240);
 8002946:	4650      	mov	r0, sl
 8002948:	22f0      	movs	r2, #240	; 0xf0
 800294a:	21fd      	movs	r1, #253	; 0xfd
 800294c:	f7ff fe7f 	bl	800264e <_ZN8touchgfx8Drawable5setXYEss>
 8002950:	f04f 0203 	mov.w	r2, #3
 8002954:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8002958:	f04f 0204 	mov.w	r2, #4
 800295c:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8002960:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
    btn_minus.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_32_ID));
 8002964:	aa0c      	add	r2, sp, #48	; 0x30
 8002966:	9200      	str	r2, [sp, #0]
 8002968:	aa0b      	add	r2, sp, #44	; 0x2c
 800296a:	4613      	mov	r3, r2
 800296c:	a909      	add	r1, sp, #36	; 0x24
 800296e:	aa0a      	add	r2, sp, #40	; 0x28
 8002970:	4650      	mov	r0, sl
 8002972:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 8002976:	f008 fd09 	bl	800b38c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800297a:	4b2f      	ldr	r3, [pc, #188]	; (8002a38 <_ZN15Screen1ViewBaseC1Ev+0x2ac>)
 800297c:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002980:	9b03      	ldr	r3, [sp, #12]
 8002982:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
    btn_start.setXY(497, 186);
 8002986:	4638      	mov	r0, r7
 8002988:	22ba      	movs	r2, #186	; 0xba
 800298a:	f240 11f1 	movw	r1, #497	; 0x1f1
 800298e:	f7ff fe5e 	bl	800264e <_ZN8touchgfx8Drawable5setXYEss>
    btn_start.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8002992:	aa0c      	add	r2, sp, #48	; 0x30
 8002994:	2301      	movs	r3, #1
 8002996:	a90b      	add	r1, sp, #44	; 0x2c
 8002998:	4638      	mov	r0, r7
 800299a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800299e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 80029a2:	f008 fb0e 	bl	800afc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 80029a6:	4638      	mov	r0, r7
class TypedText
 80029a8:	f8a4 b1dc 	strh.w	fp, [r4, #476]	; 0x1dc
 80029ac:	f7ff fea8 	bl	8002700 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80029b0:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 80029b4:	e9c4 3378 	strd	r3, r3, [r4, #480]	; 0x1e0
 80029b8:	9b03      	ldr	r3, [sp, #12]
 80029ba:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80029be:	1d20      	adds	r0, r4, #4
 80029c0:	4649      	mov	r1, r9
 80029c2:	9003      	str	r0, [sp, #12]
 80029c4:	f006 fc28 	bl	8009218 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029c8:	ee18 1a90 	vmov	r1, s17
 80029cc:	9803      	ldr	r0, [sp, #12]
 80029ce:	f006 fc23 	bl	8009218 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029d2:	9803      	ldr	r0, [sp, #12]
 80029d4:	4641      	mov	r1, r8
 80029d6:	f006 fc1f 	bl	8009218 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029da:	9803      	ldr	r0, [sp, #12]
 80029dc:	4631      	mov	r1, r6
 80029de:	f006 fc1b 	bl	8009218 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029e2:	ee18 1a10 	vmov	r1, s16
 80029e6:	9803      	ldr	r0, [sp, #12]
 80029e8:	f006 fc16 	bl	8009218 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029ec:	9803      	ldr	r0, [sp, #12]
 80029ee:	4651      	mov	r1, sl
 80029f0:	f006 fc12 	bl	8009218 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029f4:	9803      	ldr	r0, [sp, #12]
 80029f6:	4639      	mov	r1, r7
 80029f8:	f006 fc0e 	bl	8009218 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80029fc:	4620      	mov	r0, r4
 80029fe:	b00f      	add	sp, #60	; 0x3c
 8002a00:	ecbd 8b02 	vpop	{d8}
 8002a04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a08:	0801dbd0 	.word	0x0801dbd0
 8002a0c:	0801db28 	.word	0x0801db28
 8002a10:	0801dbb8 	.word	0x0801dbb8
 8002a14:	080025a9 	.word	0x080025a9
 8002a18:	0801d620 	.word	0x0801d620
 8002a1c:	2000a650 	.word	0x2000a650
 8002a20:	0801da28 	.word	0x0801da28
 8002a24:	0801da6a 	.word	0x0801da6a
 8002a28:	0801da98 	.word	0x0801da98
 8002a2c:	2000a654 	.word	0x2000a654
 8002a30:	0801dadf 	.word	0x0801dadf
 8002a34:	2000a65c 	.word	0x2000a65c
 8002a38:	0016000f 	.word	0x0016000f

08002a3c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a3c:	4770      	bx	lr
	...

08002a40 <_Z23getFont_verdana_10_4bppv>:
{
 8002a40:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a42:	4d15      	ldr	r5, [pc, #84]	; (8002a98 <_Z23getFont_verdana_10_4bppv+0x58>)
 8002a44:	782c      	ldrb	r4, [r5, #0]
 8002a46:	f3bf 8f5b 	dmb	ish
 8002a4a:	f014 0401 	ands.w	r4, r4, #1
{
 8002a4e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002a50:	d11e      	bne.n	8002a90 <_Z23getFont_verdana_10_4bppv+0x50>
 8002a52:	4628      	mov	r0, r5
 8002a54:	f019 f922 	bl	801bc9c <__cxa_guard_acquire>
 8002a58:	b1d0      	cbz	r0, 8002a90 <_Z23getFont_verdana_10_4bppv+0x50>
 8002a5a:	233f      	movs	r3, #63	; 0x3f
 8002a5c:	9307      	str	r3, [sp, #28]
 8002a5e:	4b0f      	ldr	r3, [pc, #60]	; (8002a9c <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002a60:	9306      	str	r3, [sp, #24]
 8002a62:	4b0f      	ldr	r3, [pc, #60]	; (8002aa0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002a64:	490f      	ldr	r1, [pc, #60]	; (8002aa4 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002a66:	4810      	ldr	r0, [pc, #64]	; (8002aa8 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002a68:	9408      	str	r4, [sp, #32]
 8002a6a:	2201      	movs	r2, #1
 8002a6c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002a70:	2304      	movs	r3, #4
 8002a72:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002a76:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002a7a:	230a      	movs	r3, #10
 8002a7c:	9403      	str	r4, [sp, #12]
 8002a7e:	9400      	str	r4, [sp, #0]
 8002a80:	f7ff fcc0 	bl	8002404 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002a84:	4809      	ldr	r0, [pc, #36]	; (8002aac <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002a86:	f019 f953 	bl	801bd30 <atexit>
 8002a8a:	4628      	mov	r0, r5
 8002a8c:	f019 f912 	bl	801bcb4 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002a90:	4805      	ldr	r0, [pc, #20]	; (8002aa8 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002a92:	b00d      	add	sp, #52	; 0x34
 8002a94:	bd30      	pop	{r4, r5, pc}
 8002a96:	bf00      	nop
 8002a98:	20001618 	.word	0x20001618
 8002a9c:	080206a8 	.word	0x080206a8
 8002aa0:	080206d4 	.word	0x080206d4
 8002aa4:	9001c5dc 	.word	0x9001c5dc
 8002aa8:	2000161c 	.word	0x2000161c
 8002aac:	08002a3d 	.word	0x08002a3d

08002ab0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 22, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002ab0:	4770      	bx	lr
	...

08002ab4 <_Z23getFont_verdana_20_4bppv>:
{
 8002ab4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 22, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002ab6:	4d15      	ldr	r5, [pc, #84]	; (8002b0c <_Z23getFont_verdana_20_4bppv+0x58>)
 8002ab8:	782c      	ldrb	r4, [r5, #0]
 8002aba:	f3bf 8f5b 	dmb	ish
 8002abe:	f014 0401 	ands.w	r4, r4, #1
{
 8002ac2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 22, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002ac4:	d11f      	bne.n	8002b06 <_Z23getFont_verdana_20_4bppv+0x52>
 8002ac6:	4628      	mov	r0, r5
 8002ac8:	f019 f8e8 	bl	801bc9c <__cxa_guard_acquire>
 8002acc:	b1d8      	cbz	r0, 8002b06 <_Z23getFont_verdana_20_4bppv+0x52>
 8002ace:	233f      	movs	r3, #63	; 0x3f
 8002ad0:	9307      	str	r3, [sp, #28]
 8002ad2:	4b0f      	ldr	r3, [pc, #60]	; (8002b10 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002ad4:	9306      	str	r3, [sp, #24]
 8002ad6:	4b0f      	ldr	r3, [pc, #60]	; (8002b14 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002ad8:	9305      	str	r3, [sp, #20]
 8002ada:	2301      	movs	r3, #1
 8002adc:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8002ae0:	9302      	str	r3, [sp, #8]
 8002ae2:	2304      	movs	r3, #4
 8002ae4:	e9cd 4300 	strd	r4, r3, [sp]
 8002ae8:	490b      	ldr	r1, [pc, #44]	; (8002b18 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002aea:	480c      	ldr	r0, [pc, #48]	; (8002b1c <_Z23getFont_verdana_20_4bppv+0x68>)
 8002aec:	9408      	str	r4, [sp, #32]
 8002aee:	2314      	movs	r3, #20
 8002af0:	2216      	movs	r2, #22
 8002af2:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002af6:	f7ff fc85 	bl	8002404 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002afa:	4809      	ldr	r0, [pc, #36]	; (8002b20 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002afc:	f019 f918 	bl	801bd30 <atexit>
 8002b00:	4628      	mov	r0, r5
 8002b02:	f019 f8d7 	bl	801bcb4 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002b06:	4805      	ldr	r0, [pc, #20]	; (8002b1c <_Z23getFont_verdana_20_4bppv+0x68>)
 8002b08:	b00d      	add	sp, #52	; 0x34
 8002b0a:	bd30      	pop	{r4, r5, pc}
 8002b0c:	20001644 	.word	0x20001644
 8002b10:	080206ac 	.word	0x080206ac
 8002b14:	080206d8 	.word	0x080206d8
 8002b18:	9001c5ec 	.word	0x9001c5ec
 8002b1c:	20001648 	.word	0x20001648
 8002b20:	08002ab1 	.word	0x08002ab1

08002b24 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002b24:	4770      	bx	lr
	...

08002b28 <_Z23getFont_verdana_40_4bppv>:
{
 8002b28:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002b2a:	4d15      	ldr	r5, [pc, #84]	; (8002b80 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002b2c:	782c      	ldrb	r4, [r5, #0]
 8002b2e:	f3bf 8f5b 	dmb	ish
 8002b32:	f014 0401 	ands.w	r4, r4, #1
{
 8002b36:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002b38:	d11e      	bne.n	8002b78 <_Z23getFont_verdana_40_4bppv+0x50>
 8002b3a:	4628      	mov	r0, r5
 8002b3c:	f019 f8ae 	bl	801bc9c <__cxa_guard_acquire>
 8002b40:	b1d0      	cbz	r0, 8002b78 <_Z23getFont_verdana_40_4bppv+0x50>
 8002b42:	233f      	movs	r3, #63	; 0x3f
 8002b44:	9307      	str	r3, [sp, #28]
 8002b46:	4b0f      	ldr	r3, [pc, #60]	; (8002b84 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002b48:	9306      	str	r3, [sp, #24]
 8002b4a:	4b0f      	ldr	r3, [pc, #60]	; (8002b88 <_Z23getFont_verdana_40_4bppv+0x60>)
 8002b4c:	490f      	ldr	r1, [pc, #60]	; (8002b8c <_Z23getFont_verdana_40_4bppv+0x64>)
 8002b4e:	4810      	ldr	r0, [pc, #64]	; (8002b90 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002b50:	9408      	str	r4, [sp, #32]
 8002b52:	2201      	movs	r2, #1
 8002b54:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002b58:	2304      	movs	r3, #4
 8002b5a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002b5e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002b62:	2328      	movs	r3, #40	; 0x28
 8002b64:	9403      	str	r4, [sp, #12]
 8002b66:	9400      	str	r4, [sp, #0]
 8002b68:	f7ff fc4c 	bl	8002404 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002b6c:	4809      	ldr	r0, [pc, #36]	; (8002b94 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002b6e:	f019 f8df 	bl	801bd30 <atexit>
 8002b72:	4628      	mov	r0, r5
 8002b74:	f019 f89e 	bl	801bcb4 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002b78:	4805      	ldr	r0, [pc, #20]	; (8002b90 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002b7a:	b00d      	add	sp, #52	; 0x34
 8002b7c:	bd30      	pop	{r4, r5, pc}
 8002b7e:	bf00      	nop
 8002b80:	20001670 	.word	0x20001670
 8002b84:	080206d0 	.word	0x080206d0
 8002b88:	080206dc 	.word	0x080206dc
 8002b8c:	9001c720 	.word	0x9001c720
 8002b90:	20001674 	.word	0x20001674
 8002b94:	08002b25 	.word	0x08002b25

08002b98 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002b98:	2000      	movs	r0, #0
 8002b9a:	4770      	bx	lr

08002b9c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8002b9c:	2000      	movs	r0, #0
 8002b9e:	4770      	bx	lr

08002ba0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002ba0:	b40e      	push	{r1, r2, r3}
 8002ba2:	b503      	push	{r0, r1, lr}
 8002ba4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002ba6:	2100      	movs	r1, #0
{
 8002ba8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002bac:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002bae:	f00b f91d 	bl	800ddec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002bb2:	b002      	add	sp, #8
 8002bb4:	f85d eb04 	ldr.w	lr, [sp], #4
 8002bb8:	b003      	add	sp, #12
 8002bba:	4770      	bx	lr

08002bbc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002bbc:	b40c      	push	{r2, r3}
 8002bbe:	b507      	push	{r0, r1, r2, lr}
 8002bc0:	ab04      	add	r3, sp, #16
 8002bc2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002bc6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002bc8:	f00b f910 	bl	800ddec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002bcc:	b003      	add	sp, #12
 8002bce:	f85d eb04 	ldr.w	lr, [sp], #4
 8002bd2:	b002      	add	sp, #8
 8002bd4:	4770      	bx	lr
	...

08002bd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002bd8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8002bda:	b510      	push	{r4, lr}
 8002bdc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002bde:	b373      	cbz	r3, 8002c3e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002be0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8002be2:	b92b      	cbnz	r3, 8002bf0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002be4:	4b18      	ldr	r3, [pc, #96]	; (8002c48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002be6:	4a19      	ldr	r2, [pc, #100]	; (8002c4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002be8:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002bea:	4819      	ldr	r0, [pc, #100]	; (8002c50 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002bec:	f019 f882 	bl	801bcf4 <__assert_func>
            return buffer[pos];
 8002bf0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8002bf2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002bf6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002bf8:	b30b      	cbz	r3, 8002c3e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002bfa:	f00c fbfd 	bl	800f3f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002bfe:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8002c00:	2b01      	cmp	r3, #1
 8002c02:	d803      	bhi.n	8002c0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002c04:	4b13      	ldr	r3, [pc, #76]	; (8002c54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002c06:	4a14      	ldr	r2, [pc, #80]	; (8002c58 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002c08:	21c5      	movs	r1, #197	; 0xc5
 8002c0a:	e7ee      	b.n	8002bea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002c0c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8002c0e:	1c53      	adds	r3, r2, #1
 8002c10:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002c12:	2b09      	cmp	r3, #9
 8002c14:	4619      	mov	r1, r3
 8002c16:	bf88      	it	hi
 8002c18:	f1a3 010a 	subhi.w	r1, r3, #10
 8002c1c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002c20:	f640 103f 	movw	r0, #2367	; 0x93f
 8002c24:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8002c26:	4281      	cmp	r1, r0
 8002c28:	d109      	bne.n	8002c3e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002c2a:	2b0a      	cmp	r3, #10
 8002c2c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002c30:	bf28      	it	cs
 8002c32:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002c34:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002c38:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8002c3a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8002c3c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002c3e:	4620      	mov	r0, r4
}
 8002c40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002c44:	f00c babc 	b.w	800f1c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002c48:	0801dc08 	.word	0x0801dc08
 8002c4c:	0801dc11 	.word	0x0801dc11
 8002c50:	0801dcbc 	.word	0x0801dcbc
 8002c54:	0801dd06 	.word	0x0801dd06
 8002c58:	0801dd14 	.word	0x0801dd14

08002c5c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002c5c:	f00c ba68 	b.w	800f130 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002c60 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002c60:	b510      	push	{r4, lr}
 8002c62:	b086      	sub	sp, #24
 8002c64:	ac02      	add	r4, sp, #8
 8002c66:	e884 0006 	stmia.w	r4, {r1, r2}
 8002c6a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002c6c:	ab0a      	add	r3, sp, #40	; 0x28
 8002c6e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002c70:	9301      	str	r3, [sp, #4]
 8002c72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c74:	9300      	str	r3, [sp, #0]
 8002c76:	4621      	mov	r1, r4
 8002c78:	9b08      	ldr	r3, [sp, #32]
 8002c7a:	f009 fd6d 	bl	800c758 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002c7e:	b006      	add	sp, #24
 8002c80:	bd10      	pop	{r4, pc}
	...

08002c84 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002c84:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002c86:	bb18      	cbnz	r0, 8002cd0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002c88:	4b12      	ldr	r3, [pc, #72]	; (8002cd4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002c8a:	4813      	ldr	r0, [pc, #76]	; (8002cd8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	4913      	ldr	r1, [pc, #76]	; (8002cdc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002c90:	b1b3      	cbz	r3, 8002cc0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002c92:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002c94:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002c96:	441a      	add	r2, r3
 8002c98:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002c9a:	685a      	ldr	r2, [r3, #4]
 8002c9c:	441a      	add	r2, r3
 8002c9e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002ca0:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002ca2:	4b0f      	ldr	r3, [pc, #60]	; (8002ce0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002ca4:	2200      	movs	r2, #0
 8002ca6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002ca8:	f000 f838 	bl	8002d1c <_ZN17TypedTextDatabase8getFontsEv>
 8002cac:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002cae:	f000 f833 	bl	8002d18 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002cb2:	4b0c      	ldr	r3, [pc, #48]	; (8002ce4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002cb4:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002cb6:	4b0c      	ldr	r3, [pc, #48]	; (8002ce8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002cb8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002cba:	4b0c      	ldr	r3, [pc, #48]	; (8002cec <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002cbc:	8018      	strh	r0, [r3, #0]
    }
}
 8002cbe:	e007      	b.n	8002cd0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002cc0:	4b0b      	ldr	r3, [pc, #44]	; (8002cf0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002cc2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002cc4:	4b0b      	ldr	r3, [pc, #44]	; (8002cf4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002cc6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002cc8:	4b0b      	ldr	r3, [pc, #44]	; (8002cf8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002cca:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002ccc:	2c00      	cmp	r4, #0
 8002cce:	d1e8      	bne.n	8002ca2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002cd0:	bd38      	pop	{r3, r4, r5, pc}
 8002cd2:	bf00      	nop
 8002cd4:	2000169c 	.word	0x2000169c
 8002cd8:	200016a0 	.word	0x200016a0
 8002cdc:	200016a4 	.word	0x200016a4
 8002ce0:	200016a8 	.word	0x200016a8
 8002ce4:	2000a650 	.word	0x2000a650
 8002ce8:	2000a658 	.word	0x2000a658
 8002cec:	2000a654 	.word	0x2000a654
 8002cf0:	9001c744 	.word	0x9001c744
 8002cf4:	9001c730 	.word	0x9001c730
 8002cf8:	9001c7a0 	.word	0x9001c7a0

08002cfc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002cfc:	4b04      	ldr	r3, [pc, #16]	; (8002d10 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002d04:	4b03      	ldr	r3, [pc, #12]	; (8002d14 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002d06:	681b      	ldr	r3, [r3, #0]
}
 8002d08:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002d0c:	4770      	bx	lr
 8002d0e:	bf00      	nop
 8002d10:	200016a4 	.word	0x200016a4
 8002d14:	200016a0 	.word	0x200016a0

08002d18 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002d18:	2005      	movs	r0, #5
 8002d1a:	4770      	bx	lr

08002d1c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002d1c:	4800      	ldr	r0, [pc, #0]	; (8002d20 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002d1e:	4770      	bx	lr
 8002d20:	200016ac 	.word	0x200016ac

08002d24 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002d24:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002d26:	f7ff fec5 	bl	8002ab4 <_Z23getFont_verdana_20_4bppv>
};
 8002d2a:	4c04      	ldr	r4, [pc, #16]	; (8002d3c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002d2c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002d2e:	f7ff fefb 	bl	8002b28 <_Z23getFont_verdana_40_4bppv>
};
 8002d32:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002d34:	f7ff fe84 	bl	8002a40 <_Z23getFont_verdana_10_4bppv>
};
 8002d38:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002d3a:	bd10      	pop	{r4, pc}
 8002d3c:	200016ac 	.word	0x200016ac

08002d40 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002d40:	4770      	bx	lr

08002d42 <_ZN19FrontendApplicationD0Ev>:
 8002d42:	b510      	push	{r4, lr}
 8002d44:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002d48:	4604      	mov	r4, r0
 8002d4a:	f018 ffa5 	bl	801bc98 <_ZdlPvj>
 8002d4e:	4620      	mov	r0, r4
 8002d50:	bd10      	pop	{r4, pc}

08002d52 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002d52:	b510      	push	{r4, lr}
 8002d54:	4604      	mov	r4, r0
    {
        model.tick();
 8002d56:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8002d5a:	f000 f812 	bl	8002d82 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002d5e:	4620      	mov	r0, r4
    }
 8002d60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002d64:	f00a b856 	b.w	800ce14 <_ZN8touchgfx11Application15handleTickEventEv>

08002d68 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002d68:	b510      	push	{r4, lr}
 8002d6a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002d6c:	f7ff fad8 	bl	8002320 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002d70:	4b01      	ldr	r3, [pc, #4]	; (8002d78 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002d72:	6023      	str	r3, [r4, #0]
{

}
 8002d74:	4620      	mov	r0, r4
 8002d76:	bd10      	pop	{r4, pc}
 8002d78:	0801ddf0 	.word	0x0801ddf0

08002d7c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002d7c:	2200      	movs	r2, #0
 8002d7e:	6002      	str	r2, [r0, #0]
{

}
 8002d80:	4770      	bx	lr

08002d82 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002d82:	4770      	bx	lr

08002d84 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002d84:	4770      	bx	lr

08002d86 <_ZThn4_N16Screen1PresenterD1Ev>:
 8002d86:	3804      	subs	r0, #4
 8002d88:	4770      	bx	lr

08002d8a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002d8a:	4770      	bx	lr

08002d8c <_ZN16Screen1PresenterD0Ev>:
 8002d8c:	b510      	push	{r4, lr}
 8002d8e:	2110      	movs	r1, #16
 8002d90:	4604      	mov	r4, r0
 8002d92:	f018 ff81 	bl	801bc98 <_ZdlPvj>
 8002d96:	4620      	mov	r0, r4
 8002d98:	bd10      	pop	{r4, pc}

08002d9a <_ZThn4_N16Screen1PresenterD0Ev>:
 8002d9a:	f1a0 0004 	sub.w	r0, r0, #4
 8002d9e:	e7f5      	b.n	8002d8c <_ZN16Screen1PresenterD0Ev>

08002da0 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002da0:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002da2:	2200      	movs	r2, #0
 8002da4:	6082      	str	r2, [r0, #8]
    : view(v)
 8002da6:	4a04      	ldr	r2, [pc, #16]	; (8002db8 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002da8:	60c1      	str	r1, [r0, #12]
 8002daa:	f102 0408 	add.w	r4, r2, #8
 8002dae:	3220      	adds	r2, #32
 8002db0:	6004      	str	r4, [r0, #0]
 8002db2:	6042      	str	r2, [r0, #4]
}
 8002db4:	bd10      	pop	{r4, pc}
 8002db6:	bf00      	nop
 8002db8:	0801de34 	.word	0x0801de34

08002dbc <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002dbc:	4770      	bx	lr

08002dbe <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002dbe:	4770      	bx	lr

08002dc0 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002dc0:	f7ff bbbe 	b.w	8002540 <_ZN15Screen1ViewBase11setupScreenEv>

08002dc4 <_ZN11Screen1View7f_startEv>:

void Screen1View::f_start()
{
    f_start1();
 8002dc4:	f7fe bb46 	b.w	8001454 <f_start1>

08002dc8 <_ZN11Screen1View7f_minusEv>:
}

void Screen1View::f_minus()
{
    f_minus1();
 8002dc8:	f7fe bb34 	b.w	8001434 <f_minus1>

08002dcc <_ZN11Screen1View6f_plusEv>:
}

void Screen1View::f_plus()
{
    f_plus1();
 8002dcc:	f7fe bb3a 	b.w	8001444 <f_plus1>

08002dd0 <_ZN11Screen1ViewD0Ev>:
 8002dd0:	b510      	push	{r4, lr}
 8002dd2:	f44f 71fe 	mov.w	r1, #508	; 0x1fc
 8002dd6:	4604      	mov	r4, r0
 8002dd8:	f018 ff5e 	bl	801bc98 <_ZdlPvj>
 8002ddc:	4620      	mov	r0, r4
 8002dde:	bd10      	pop	{r4, pc}

08002de0 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002de0:	b510      	push	{r4, lr}
 8002de2:	4604      	mov	r4, r0
 8002de4:	f7ff fcd2 	bl	800278c <_ZN15Screen1ViewBaseC1Ev>
 8002de8:	4b01      	ldr	r3, [pc, #4]	; (8002df0 <_ZN11Screen1ViewC1Ev+0x10>)
 8002dea:	6023      	str	r3, [r4, #0]
}
 8002dec:	4620      	mov	r0, r4
 8002dee:	bd10      	pop	{r4, pc}
 8002df0:	0801de64 	.word	0x0801de64

08002df4 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8002df4:	4770      	bx	lr

08002df6 <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8002df6:	2000      	movs	r0, #0
 8002df8:	4770      	bx	lr

08002dfa <ft6x06_ReadID>:
{
 8002dfa:	b510      	push	{r4, lr}
 8002dfc:	4604      	mov	r4, r0
  TS_IO_Init();
 8002dfe:	f000 fb75 	bl	80034ec <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8002e02:	21a8      	movs	r1, #168	; 0xa8
 8002e04:	b2e0      	uxtb	r0, r4
 8002e06:	f000 fb8d 	bl	8003524 <TS_IO_Read>
}
 8002e0a:	b280      	uxth	r0, r0
 8002e0c:	bd10      	pop	{r4, pc}
	...

08002e10 <ft6x06_TS_DetectTouch>:
{
 8002e10:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8002e12:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002e14:	2102      	movs	r1, #2
 8002e16:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8002e18:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002e1c:	f000 fb82 	bl	8003524 <TS_IO_Read>
 8002e20:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8002e24:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002e28:	f003 030f 	and.w	r3, r3, #15
 8002e2c:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8002e30:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002e34:	2b02      	cmp	r3, #2
    nbTouch = 0;
 8002e36:	bf88      	it	hi
 8002e38:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002e3c:	4b04      	ldr	r3, [pc, #16]	; (8002e50 <ft6x06_TS_DetectTouch+0x40>)
 8002e3e:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8002e42:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002e46:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8002e48:	2200      	movs	r2, #0
 8002e4a:	709a      	strb	r2, [r3, #2]
}
 8002e4c:	b002      	add	sp, #8
 8002e4e:	bd10      	pop	{r4, pc}
 8002e50:	200016ba 	.word	0x200016ba

08002e54 <ft6x06_TS_GetXY>:
{
 8002e54:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002e56:	4c15      	ldr	r4, [pc, #84]	; (8002eac <ft6x06_TS_GetXY+0x58>)
{
 8002e58:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002e5a:	78a3      	ldrb	r3, [r4, #2]
 8002e5c:	7862      	ldrb	r2, [r4, #1]
 8002e5e:	429a      	cmp	r2, r3
{
 8002e60:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002e62:	d91f      	bls.n	8002ea4 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8002e64:	b303      	cbz	r3, 8002ea8 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8002e66:	2b01      	cmp	r3, #1
 8002e68:	bf14      	ite	ne
 8002e6a:	2100      	movne	r1, #0
 8002e6c:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8002e6e:	2304      	movs	r3, #4
 8002e70:	eb0d 0203 	add.w	r2, sp, r3
 8002e74:	b2c0      	uxtb	r0, r0
 8002e76:	f000 fb73 	bl	8003560 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8002e7a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002e7e:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002e82:	021b      	lsls	r3, r3, #8
 8002e84:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002e88:	4313      	orrs	r3, r2
 8002e8a:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8002e8c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002e90:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8002e94:	021b      	lsls	r3, r3, #8
 8002e96:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002e9a:	4313      	orrs	r3, r2
 8002e9c:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8002e9e:	78a3      	ldrb	r3, [r4, #2]
 8002ea0:	3301      	adds	r3, #1
 8002ea2:	70a3      	strb	r3, [r4, #2]
}
 8002ea4:	b002      	add	sp, #8
 8002ea6:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8002ea8:	2103      	movs	r1, #3
 8002eaa:	e7e0      	b.n	8002e6e <ft6x06_TS_GetXY+0x1a>
 8002eac:	200016ba 	.word	0x200016ba

08002eb0 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002eb0:	2201      	movs	r2, #1
 8002eb2:	21a4      	movs	r1, #164	; 0xa4
 8002eb4:	b2c0      	uxtb	r0, r0
 8002eb6:	f000 bb1b 	b.w	80034f0 <TS_IO_Write>

08002eba <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002eba:	2200      	movs	r2, #0
 8002ebc:	21a4      	movs	r1, #164	; 0xa4
 8002ebe:	b2c0      	uxtb	r0, r0
 8002ec0:	f000 bb16 	b.w	80034f0 <TS_IO_Write>

08002ec4 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8002ec4:	f7ff bff9 	b.w	8002eba <ft6x06_TS_DisableIT>

08002ec8 <ft6x06_TS_ClearIT>:
 8002ec8:	4770      	bx	lr
	...

08002ecc <ft6x06_Init>:
{  
 8002ecc:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8002ece:	4b09      	ldr	r3, [pc, #36]	; (8002ef4 <ft6x06_Init+0x28>)
 8002ed0:	781a      	ldrb	r2, [r3, #0]
 8002ed2:	4290      	cmp	r0, r2
 8002ed4:	d00a      	beq.n	8002eec <ft6x06_Init+0x20>
 8002ed6:	7859      	ldrb	r1, [r3, #1]
 8002ed8:	4288      	cmp	r0, r1
 8002eda:	d007      	beq.n	8002eec <ft6x06_Init+0x20>
 8002edc:	b10a      	cbz	r2, 8002ee2 <ft6x06_Init+0x16>
 8002ede:	b929      	cbnz	r1, 8002eec <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8002ee0:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8002ee2:	5498      	strb	r0, [r3, r2]
}
 8002ee4:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8002ee8:	f000 bb00 	b.w	80034ec <TS_IO_Init>
}
 8002eec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002ef0:	4770      	bx	lr
 8002ef2:	bf00      	nop
 8002ef4:	200016b8 	.word	0x200016b8

08002ef8 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8002ef8:	b538      	push	{r3, r4, r5, lr}
 8002efa:	4604      	mov	r4, r0
 8002efc:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002efe:	2000      	movs	r0, #0
 8002f00:	49c9      	ldr	r1, [pc, #804]	; (8003228 <OTM8009A_Init+0x330>)
 8002f02:	f7fd fdc9 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8002f06:	49c9      	ldr	r1, [pc, #804]	; (800322c <OTM8009A_Init+0x334>)
 8002f08:	2003      	movs	r0, #3
 8002f0a:	f7fd fdc5 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8002f0e:	49c8      	ldr	r1, [pc, #800]	; (8003230 <OTM8009A_Init+0x338>)
 8002f10:	2000      	movs	r0, #0
 8002f12:	f7fd fdc1 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8002f16:	49c7      	ldr	r1, [pc, #796]	; (8003234 <OTM8009A_Init+0x33c>)
 8002f18:	2002      	movs	r0, #2
 8002f1a:	f7fd fdbd 	bl	8000a98 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002f1e:	49c4      	ldr	r1, [pc, #784]	; (8003230 <OTM8009A_Init+0x338>)
 8002f20:	2000      	movs	r0, #0
 8002f22:	f7fd fdb9 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8002f26:	49c4      	ldr	r1, [pc, #784]	; (8003238 <OTM8009A_Init+0x340>)
 8002f28:	2000      	movs	r0, #0
 8002f2a:	f7fd fdb5 	bl	8000a98 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002f2e:	200a      	movs	r0, #10
 8002f30:	f000 fb2e 	bl	8003590 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8002f34:	49c1      	ldr	r1, [pc, #772]	; (800323c <OTM8009A_Init+0x344>)
 8002f36:	2000      	movs	r0, #0
 8002f38:	f7fd fdae 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8002f3c:	49c0      	ldr	r1, [pc, #768]	; (8003240 <OTM8009A_Init+0x348>)
 8002f3e:	2000      	movs	r0, #0
 8002f40:	f7fd fdaa 	bl	8000a98 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002f44:	200a      	movs	r0, #10
 8002f46:	f000 fb23 	bl	8003590 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8002f4a:	49be      	ldr	r1, [pc, #760]	; (8003244 <OTM8009A_Init+0x34c>)
 8002f4c:	2000      	movs	r0, #0
 8002f4e:	f7fd fda3 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8002f52:	49bd      	ldr	r1, [pc, #756]	; (8003248 <OTM8009A_Init+0x350>)
 8002f54:	2000      	movs	r0, #0
 8002f56:	f7fd fd9f 	bl	8000a98 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8002f5a:	49bc      	ldr	r1, [pc, #752]	; (800324c <OTM8009A_Init+0x354>)
 8002f5c:	2000      	movs	r0, #0
 8002f5e:	f7fd fd9b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002f62:	49bb      	ldr	r1, [pc, #748]	; (8003250 <OTM8009A_Init+0x358>)
 8002f64:	2000      	movs	r0, #0
 8002f66:	f7fd fd97 	bl	8000a98 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8002f6a:	49ba      	ldr	r1, [pc, #744]	; (8003254 <OTM8009A_Init+0x35c>)
 8002f6c:	2000      	movs	r0, #0
 8002f6e:	f7fd fd93 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8002f72:	49b9      	ldr	r1, [pc, #740]	; (8003258 <OTM8009A_Init+0x360>)
 8002f74:	2000      	movs	r0, #0
 8002f76:	f7fd fd8f 	bl	8000a98 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002f7a:	49ab      	ldr	r1, [pc, #684]	; (8003228 <OTM8009A_Init+0x330>)
 8002f7c:	2000      	movs	r0, #0
 8002f7e:	f7fd fd8b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8002f82:	49b6      	ldr	r1, [pc, #728]	; (800325c <OTM8009A_Init+0x364>)
 8002f84:	2000      	movs	r0, #0
 8002f86:	f7fd fd87 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002f8a:	49b5      	ldr	r1, [pc, #724]	; (8003260 <OTM8009A_Init+0x368>)
 8002f8c:	2000      	movs	r0, #0
 8002f8e:	f7fd fd83 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8002f92:	49b4      	ldr	r1, [pc, #720]	; (8003264 <OTM8009A_Init+0x36c>)
 8002f94:	2000      	movs	r0, #0
 8002f96:	f7fd fd7f 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002f9a:	49b3      	ldr	r1, [pc, #716]	; (8003268 <OTM8009A_Init+0x370>)
 8002f9c:	2000      	movs	r0, #0
 8002f9e:	f7fd fd7b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8002fa2:	49b2      	ldr	r1, [pc, #712]	; (800326c <OTM8009A_Init+0x374>)
 8002fa4:	2000      	movs	r0, #0
 8002fa6:	f7fd fd77 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8002faa:	49b1      	ldr	r1, [pc, #708]	; (8003270 <OTM8009A_Init+0x378>)
 8002fac:	2000      	movs	r0, #0
 8002fae:	f7fd fd73 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8002fb2:	49b0      	ldr	r1, [pc, #704]	; (8003274 <OTM8009A_Init+0x37c>)
 8002fb4:	2000      	movs	r0, #0
 8002fb6:	f7fd fd6f 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8002fba:	49af      	ldr	r1, [pc, #700]	; (8003278 <OTM8009A_Init+0x380>)
 8002fbc:	2000      	movs	r0, #0
 8002fbe:	f7fd fd6b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002fc2:	49a3      	ldr	r1, [pc, #652]	; (8003250 <OTM8009A_Init+0x358>)
 8002fc4:	2000      	movs	r0, #0
 8002fc6:	f7fd fd67 	bl	8000a98 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002fca:	4997      	ldr	r1, [pc, #604]	; (8003228 <OTM8009A_Init+0x330>)
 8002fcc:	2000      	movs	r0, #0
 8002fce:	f7fd fd63 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8002fd2:	49aa      	ldr	r1, [pc, #680]	; (800327c <OTM8009A_Init+0x384>)
 8002fd4:	2002      	movs	r0, #2
 8002fd6:	f7fd fd5f 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8002fda:	49a9      	ldr	r1, [pc, #676]	; (8003280 <OTM8009A_Init+0x388>)
 8002fdc:	2000      	movs	r0, #0
 8002fde:	f7fd fd5b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8002fe2:	49a8      	ldr	r1, [pc, #672]	; (8003284 <OTM8009A_Init+0x38c>)
 8002fe4:	2000      	movs	r0, #0
 8002fe6:	f7fd fd57 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8002fea:	49a7      	ldr	r1, [pc, #668]	; (8003288 <OTM8009A_Init+0x390>)
 8002fec:	2000      	movs	r0, #0
 8002fee:	f7fd fd53 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8002ff2:	49a6      	ldr	r1, [pc, #664]	; (800328c <OTM8009A_Init+0x394>)
 8002ff4:	2000      	movs	r0, #0
 8002ff6:	f7fd fd4f 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8002ffa:	49a5      	ldr	r1, [pc, #660]	; (8003290 <OTM8009A_Init+0x398>)
 8002ffc:	2000      	movs	r0, #0
 8002ffe:	f7fd fd4b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8003002:	49a4      	ldr	r1, [pc, #656]	; (8003294 <OTM8009A_Init+0x39c>)
 8003004:	2000      	movs	r0, #0
 8003006:	f7fd fd47 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800300a:	4995      	ldr	r1, [pc, #596]	; (8003260 <OTM8009A_Init+0x368>)
 800300c:	2000      	movs	r0, #0
 800300e:	f7fd fd43 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8003012:	49a1      	ldr	r1, [pc, #644]	; (8003298 <OTM8009A_Init+0x3a0>)
 8003014:	2000      	movs	r0, #0
 8003016:	f7fd fd3f 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800301a:	4993      	ldr	r1, [pc, #588]	; (8003268 <OTM8009A_Init+0x370>)
 800301c:	2000      	movs	r0, #0
 800301e:	f7fd fd3b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8003022:	499e      	ldr	r1, [pc, #632]	; (800329c <OTM8009A_Init+0x3a4>)
 8003024:	2000      	movs	r0, #0
 8003026:	f7fd fd37 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 800302a:	499d      	ldr	r1, [pc, #628]	; (80032a0 <OTM8009A_Init+0x3a8>)
 800302c:	2000      	movs	r0, #0
 800302e:	f7fd fd33 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8003032:	499c      	ldr	r1, [pc, #624]	; (80032a4 <OTM8009A_Init+0x3ac>)
 8003034:	2002      	movs	r0, #2
 8003036:	f7fd fd2f 	bl	8000a98 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800303a:	497d      	ldr	r1, [pc, #500]	; (8003230 <OTM8009A_Init+0x338>)
 800303c:	2000      	movs	r0, #0
 800303e:	f7fd fd2b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8003042:	4999      	ldr	r1, [pc, #612]	; (80032a8 <OTM8009A_Init+0x3b0>)
 8003044:	2006      	movs	r0, #6
 8003046:	f7fd fd27 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800304a:	4998      	ldr	r1, [pc, #608]	; (80032ac <OTM8009A_Init+0x3b4>)
 800304c:	2000      	movs	r0, #0
 800304e:	f7fd fd23 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8003052:	4997      	ldr	r1, [pc, #604]	; (80032b0 <OTM8009A_Init+0x3b8>)
 8003054:	200e      	movs	r0, #14
 8003056:	f7fd fd1f 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800305a:	4996      	ldr	r1, [pc, #600]	; (80032b4 <OTM8009A_Init+0x3bc>)
 800305c:	2000      	movs	r0, #0
 800305e:	f7fd fd1b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8003062:	4995      	ldr	r1, [pc, #596]	; (80032b8 <OTM8009A_Init+0x3c0>)
 8003064:	200e      	movs	r0, #14
 8003066:	f7fd fd17 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800306a:	4994      	ldr	r1, [pc, #592]	; (80032bc <OTM8009A_Init+0x3c4>)
 800306c:	2000      	movs	r0, #0
 800306e:	f7fd fd13 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8003072:	4993      	ldr	r1, [pc, #588]	; (80032c0 <OTM8009A_Init+0x3c8>)
 8003074:	200a      	movs	r0, #10
 8003076:	f7fd fd0f 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800307a:	4992      	ldr	r1, [pc, #584]	; (80032c4 <OTM8009A_Init+0x3cc>)
 800307c:	2000      	movs	r0, #0
 800307e:	f7fd fd0b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8003082:	4991      	ldr	r1, [pc, #580]	; (80032c8 <OTM8009A_Init+0x3d0>)
 8003084:	2000      	movs	r0, #0
 8003086:	f7fd fd07 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800308a:	4969      	ldr	r1, [pc, #420]	; (8003230 <OTM8009A_Init+0x338>)
 800308c:	2000      	movs	r0, #0
 800308e:	f7fd fd03 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8003092:	498e      	ldr	r1, [pc, #568]	; (80032cc <OTM8009A_Init+0x3d4>)
 8003094:	200a      	movs	r0, #10
 8003096:	f7fd fcff 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800309a:	498d      	ldr	r1, [pc, #564]	; (80032d0 <OTM8009A_Init+0x3d8>)
 800309c:	2000      	movs	r0, #0
 800309e:	f7fd fcfb 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 80030a2:	498c      	ldr	r1, [pc, #560]	; (80032d4 <OTM8009A_Init+0x3dc>)
 80030a4:	200f      	movs	r0, #15
 80030a6:	f7fd fcf7 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80030aa:	4980      	ldr	r1, [pc, #512]	; (80032ac <OTM8009A_Init+0x3b4>)
 80030ac:	2000      	movs	r0, #0
 80030ae:	f7fd fcf3 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 80030b2:	4989      	ldr	r1, [pc, #548]	; (80032d8 <OTM8009A_Init+0x3e0>)
 80030b4:	200f      	movs	r0, #15
 80030b6:	f7fd fcef 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80030ba:	497e      	ldr	r1, [pc, #504]	; (80032b4 <OTM8009A_Init+0x3bc>)
 80030bc:	2000      	movs	r0, #0
 80030be:	f7fd fceb 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 80030c2:	4986      	ldr	r1, [pc, #536]	; (80032dc <OTM8009A_Init+0x3e4>)
 80030c4:	200a      	movs	r0, #10
 80030c6:	f7fd fce7 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80030ca:	497c      	ldr	r1, [pc, #496]	; (80032bc <OTM8009A_Init+0x3c4>)
 80030cc:	2000      	movs	r0, #0
 80030ce:	f7fd fce3 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 80030d2:	4983      	ldr	r1, [pc, #524]	; (80032e0 <OTM8009A_Init+0x3e8>)
 80030d4:	200f      	movs	r0, #15
 80030d6:	f7fd fcdf 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 80030da:	497a      	ldr	r1, [pc, #488]	; (80032c4 <OTM8009A_Init+0x3cc>)
 80030dc:	2000      	movs	r0, #0
 80030de:	f7fd fcdb 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 80030e2:	4980      	ldr	r1, [pc, #512]	; (80032e4 <OTM8009A_Init+0x3ec>)
 80030e4:	200f      	movs	r0, #15
 80030e6:	f7fd fcd7 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 80030ea:	497f      	ldr	r1, [pc, #508]	; (80032e8 <OTM8009A_Init+0x3f0>)
 80030ec:	2000      	movs	r0, #0
 80030ee:	f7fd fcd3 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 80030f2:	497e      	ldr	r1, [pc, #504]	; (80032ec <OTM8009A_Init+0x3f4>)
 80030f4:	200a      	movs	r0, #10
 80030f6:	f7fd fccf 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 80030fa:	497d      	ldr	r1, [pc, #500]	; (80032f0 <OTM8009A_Init+0x3f8>)
 80030fc:	2000      	movs	r0, #0
 80030fe:	f7fd fccb 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8003102:	497c      	ldr	r1, [pc, #496]	; (80032f4 <OTM8009A_Init+0x3fc>)
 8003104:	200a      	movs	r0, #10
 8003106:	f7fd fcc7 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 800310a:	4949      	ldr	r1, [pc, #292]	; (8003230 <OTM8009A_Init+0x338>)
 800310c:	2000      	movs	r0, #0
 800310e:	f7fd fcc3 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8003112:	4979      	ldr	r1, [pc, #484]	; (80032f8 <OTM8009A_Init+0x400>)
 8003114:	200a      	movs	r0, #10
 8003116:	f7fd fcbf 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 800311a:	496d      	ldr	r1, [pc, #436]	; (80032d0 <OTM8009A_Init+0x3d8>)
 800311c:	2000      	movs	r0, #0
 800311e:	f7fd fcbb 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8003122:	4976      	ldr	r1, [pc, #472]	; (80032fc <OTM8009A_Init+0x404>)
 8003124:	200f      	movs	r0, #15
 8003126:	f7fd fcb7 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 800312a:	4960      	ldr	r1, [pc, #384]	; (80032ac <OTM8009A_Init+0x3b4>)
 800312c:	2000      	movs	r0, #0
 800312e:	f7fd fcb3 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8003132:	4973      	ldr	r1, [pc, #460]	; (8003300 <OTM8009A_Init+0x408>)
 8003134:	200f      	movs	r0, #15
 8003136:	f7fd fcaf 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 800313a:	495e      	ldr	r1, [pc, #376]	; (80032b4 <OTM8009A_Init+0x3bc>)
 800313c:	2000      	movs	r0, #0
 800313e:	f7fd fcab 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8003142:	4970      	ldr	r1, [pc, #448]	; (8003304 <OTM8009A_Init+0x40c>)
 8003144:	200a      	movs	r0, #10
 8003146:	f7fd fca7 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 800314a:	495c      	ldr	r1, [pc, #368]	; (80032bc <OTM8009A_Init+0x3c4>)
 800314c:	2000      	movs	r0, #0
 800314e:	f7fd fca3 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8003152:	496d      	ldr	r1, [pc, #436]	; (8003308 <OTM8009A_Init+0x410>)
 8003154:	200f      	movs	r0, #15
 8003156:	f7fd fc9f 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 800315a:	495a      	ldr	r1, [pc, #360]	; (80032c4 <OTM8009A_Init+0x3cc>)
 800315c:	2000      	movs	r0, #0
 800315e:	f7fd fc9b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8003162:	496a      	ldr	r1, [pc, #424]	; (800330c <OTM8009A_Init+0x414>)
 8003164:	200f      	movs	r0, #15
 8003166:	f7fd fc97 	bl	8000a98 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800316a:	493d      	ldr	r1, [pc, #244]	; (8003260 <OTM8009A_Init+0x368>)
 800316c:	2000      	movs	r0, #0
 800316e:	f7fd fc93 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8003172:	4967      	ldr	r1, [pc, #412]	; (8003310 <OTM8009A_Init+0x418>)
 8003174:	2000      	movs	r0, #0
 8003176:	f7fd fc8f 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 800317a:	4966      	ldr	r1, [pc, #408]	; (8003314 <OTM8009A_Init+0x41c>)
 800317c:	2000      	movs	r0, #0
 800317e:	f7fd fc8b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8003182:	4965      	ldr	r1, [pc, #404]	; (8003318 <OTM8009A_Init+0x420>)
 8003184:	2000      	movs	r0, #0
 8003186:	f7fd fc87 	bl	8000a98 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 800318a:	4964      	ldr	r1, [pc, #400]	; (800331c <OTM8009A_Init+0x424>)
 800318c:	2000      	movs	r0, #0
 800318e:	f7fd fc83 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8003192:	4963      	ldr	r1, [pc, #396]	; (8003320 <OTM8009A_Init+0x428>)
 8003194:	2000      	movs	r0, #0
 8003196:	f7fd fc7f 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800319a:	4923      	ldr	r1, [pc, #140]	; (8003228 <OTM8009A_Init+0x330>)
 800319c:	2000      	movs	r0, #0
 800319e:	f7fd fc7b 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 80031a2:	4960      	ldr	r1, [pc, #384]	; (8003324 <OTM8009A_Init+0x42c>)
 80031a4:	2003      	movs	r0, #3
 80031a6:	f7fd fc77 	bl	8000a98 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80031aa:	491f      	ldr	r1, [pc, #124]	; (8003228 <OTM8009A_Init+0x330>)
 80031ac:	2000      	movs	r0, #0
 80031ae:	f7fd fc73 	bl	8000a98 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80031b2:	491d      	ldr	r1, [pc, #116]	; (8003228 <OTM8009A_Init+0x330>)
 80031b4:	2000      	movs	r0, #0
 80031b6:	f7fd fc6f 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 80031ba:	495b      	ldr	r1, [pc, #364]	; (8003328 <OTM8009A_Init+0x430>)
 80031bc:	2010      	movs	r0, #16
 80031be:	f7fd fc6b 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80031c2:	4919      	ldr	r1, [pc, #100]	; (8003228 <OTM8009A_Init+0x330>)
 80031c4:	2000      	movs	r0, #0
 80031c6:	f7fd fc67 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 80031ca:	4958      	ldr	r1, [pc, #352]	; (800332c <OTM8009A_Init+0x434>)
 80031cc:	2010      	movs	r0, #16
 80031ce:	f7fd fc63 	bl	8000a98 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 80031d2:	2000      	movs	r0, #0
 80031d4:	4956      	ldr	r1, [pc, #344]	; (8003330 <OTM8009A_Init+0x438>)
 80031d6:	f7fd fc5f 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 80031da:	2078      	movs	r0, #120	; 0x78
 80031dc:	f000 f9d8 	bl	8003590 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 80031e0:	2c00      	cmp	r4, #0
 80031e2:	f000 80c7 	beq.w	8003374 <OTM8009A_Init+0x47c>
 80031e6:	2c02      	cmp	r4, #2
 80031e8:	d103      	bne.n	80031f2 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 80031ea:	4952      	ldr	r1, [pc, #328]	; (8003334 <OTM8009A_Init+0x43c>)
 80031ec:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 80031ee:	f7fd fc53 	bl	8000a98 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 80031f2:	2d01      	cmp	r5, #1
 80031f4:	d10b      	bne.n	800320e <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 80031f6:	4950      	ldr	r1, [pc, #320]	; (8003338 <OTM8009A_Init+0x440>)
 80031f8:	2000      	movs	r0, #0
 80031fa:	f7fd fc4d 	bl	8000a98 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 80031fe:	494f      	ldr	r1, [pc, #316]	; (800333c <OTM8009A_Init+0x444>)
 8003200:	2004      	movs	r0, #4
 8003202:	f7fd fc49 	bl	8000a98 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8003206:	494e      	ldr	r1, [pc, #312]	; (8003340 <OTM8009A_Init+0x448>)
 8003208:	2004      	movs	r0, #4
 800320a:	f7fd fc45 	bl	8000a98 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 800320e:	494d      	ldr	r1, [pc, #308]	; (8003344 <OTM8009A_Init+0x44c>)
 8003210:	2000      	movs	r0, #0
 8003212:	f7fd fc41 	bl	8000a98 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8003216:	494c      	ldr	r1, [pc, #304]	; (8003348 <OTM8009A_Init+0x450>)
 8003218:	2000      	movs	r0, #0
 800321a:	f7fd fc3d 	bl	8000a98 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 800321e:	494b      	ldr	r1, [pc, #300]	; (800334c <OTM8009A_Init+0x454>)
 8003220:	2000      	movs	r0, #0
 8003222:	f7fd fc39 	bl	8000a98 <DSI_IO_WriteCmd>
 8003226:	e093      	b.n	8003350 <OTM8009A_Init+0x458>
 8003228:	0801de9c 	.word	0x0801de9c
 800322c:	0801df02 	.word	0x0801df02
 8003230:	0801deb2 	.word	0x0801deb2
 8003234:	0801df88 	.word	0x0801df88
 8003238:	0801dec8 	.word	0x0801dec8
 800323c:	0801dede 	.word	0x0801dede
 8003240:	0801def4 	.word	0x0801def4
 8003244:	0801defa 	.word	0x0801defa
 8003248:	0801defc 	.word	0x0801defc
 800324c:	0801defe 	.word	0x0801defe
 8003250:	0801df00 	.word	0x0801df00
 8003254:	0801de9e 	.word	0x0801de9e
 8003258:	0801dea0 	.word	0x0801dea0
 800325c:	0801dea2 	.word	0x0801dea2
 8003260:	0801dea4 	.word	0x0801dea4
 8003264:	0801dea6 	.word	0x0801dea6
 8003268:	0801dea8 	.word	0x0801dea8
 800326c:	0801deaa 	.word	0x0801deaa
 8003270:	0801deac 	.word	0x0801deac
 8003274:	0801deae 	.word	0x0801deae
 8003278:	0801deb0 	.word	0x0801deb0
 800327c:	0801e006 	.word	0x0801e006
 8003280:	0801deb4 	.word	0x0801deb4
 8003284:	0801deb6 	.word	0x0801deb6
 8003288:	0801deb8 	.word	0x0801deb8
 800328c:	0801deba 	.word	0x0801deba
 8003290:	0801debc 	.word	0x0801debc
 8003294:	0801debe 	.word	0x0801debe
 8003298:	0801dec0 	.word	0x0801dec0
 800329c:	0801dec2 	.word	0x0801dec2
 80032a0:	0801dec4 	.word	0x0801dec4
 80032a4:	0801e009 	.word	0x0801e009
 80032a8:	0801e00c 	.word	0x0801e00c
 80032ac:	0801dec6 	.word	0x0801dec6
 80032b0:	0801e013 	.word	0x0801e013
 80032b4:	0801deca 	.word	0x0801deca
 80032b8:	0801e022 	.word	0x0801e022
 80032bc:	0801decc 	.word	0x0801decc
 80032c0:	0801df06 	.word	0x0801df06
 80032c4:	0801dece 	.word	0x0801dece
 80032c8:	0801deec 	.word	0x0801deec
 80032cc:	0801df11 	.word	0x0801df11
 80032d0:	0801ded0 	.word	0x0801ded0
 80032d4:	0801df1c 	.word	0x0801df1c
 80032d8:	0801df2c 	.word	0x0801df2c
 80032dc:	0801df3c 	.word	0x0801df3c
 80032e0:	0801df47 	.word	0x0801df47
 80032e4:	0801df57 	.word	0x0801df57
 80032e8:	0801ded2 	.word	0x0801ded2
 80032ec:	0801df67 	.word	0x0801df67
 80032f0:	0801ded4 	.word	0x0801ded4
 80032f4:	0801df72 	.word	0x0801df72
 80032f8:	0801df7d 	.word	0x0801df7d
 80032fc:	0801df8b 	.word	0x0801df8b
 8003300:	0801df9b 	.word	0x0801df9b
 8003304:	0801dfab 	.word	0x0801dfab
 8003308:	0801dfb6 	.word	0x0801dfb6
 800330c:	0801dfc6 	.word	0x0801dfc6
 8003310:	0801deee 	.word	0x0801deee
 8003314:	0801def0 	.word	0x0801def0
 8003318:	0801def2 	.word	0x0801def2
 800331c:	0801def6 	.word	0x0801def6
 8003320:	0801def8 	.word	0x0801def8
 8003324:	0801dfd6 	.word	0x0801dfd6
 8003328:	0801dfe4 	.word	0x0801dfe4
 800332c:	0801dff5 	.word	0x0801dff5
 8003330:	0801ded6 	.word	0x0801ded6
 8003334:	0801ded8 	.word	0x0801ded8
 8003338:	0801dedc 	.word	0x0801dedc
 800333c:	0801dfda 	.word	0x0801dfda
 8003340:	0801dfdf 	.word	0x0801dfdf
 8003344:	0801dee0 	.word	0x0801dee0
 8003348:	0801dee2 	.word	0x0801dee2
 800334c:	0801dee4 	.word	0x0801dee4

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8003350:	490a      	ldr	r1, [pc, #40]	; (800337c <OTM8009A_Init+0x484>)
 8003352:	2000      	movs	r0, #0
 8003354:	f7fd fba0 	bl	8000a98 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8003358:	4909      	ldr	r1, [pc, #36]	; (8003380 <OTM8009A_Init+0x488>)
 800335a:	2000      	movs	r0, #0
 800335c:	f7fd fb9c 	bl	8000a98 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003360:	4908      	ldr	r1, [pc, #32]	; (8003384 <OTM8009A_Init+0x48c>)
 8003362:	2000      	movs	r0, #0
 8003364:	f7fd fb98 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8003368:	4907      	ldr	r1, [pc, #28]	; (8003388 <OTM8009A_Init+0x490>)
 800336a:	2000      	movs	r0, #0
 800336c:	f7fd fb94 	bl	8000a98 <DSI_IO_WriteCmd>

  return 0;
}
 8003370:	2000      	movs	r0, #0
 8003372:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8003374:	4905      	ldr	r1, [pc, #20]	; (800338c <OTM8009A_Init+0x494>)
 8003376:	4620      	mov	r0, r4
 8003378:	e739      	b.n	80031ee <OTM8009A_Init+0x2f6>
 800337a:	bf00      	nop
 800337c:	0801dee6 	.word	0x0801dee6
 8003380:	0801dee8 	.word	0x0801dee8
 8003384:	0801de9c 	.word	0x0801de9c
 8003388:	0801deea 	.word	0x0801deea
 800338c:	0801deda 	.word	0x0801deda

08003390 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8003390:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8003392:	4d2f      	ldr	r5, [pc, #188]	; (8003450 <I2C1_Init+0xc0>)
{
 8003394:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8003396:	4628      	mov	r0, r5
 8003398:	f002 f964 	bl	8005664 <HAL_I2C_GetState>
 800339c:	4604      	mov	r4, r0
 800339e:	2800      	cmp	r0, #0
 80033a0:	d154      	bne.n	800344c <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 80033a2:	4a2c      	ldr	r2, [pc, #176]	; (8003454 <I2C1_Init+0xc4>)
 80033a4:	4b2c      	ldr	r3, [pc, #176]	; (8003458 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80033a6:	4e2d      	ldr	r6, [pc, #180]	; (800345c <I2C1_Init+0xcc>)
 80033a8:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 80033aa:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 80033ae:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 80033b2:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80033b6:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80033ba:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 80033be:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80033c0:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80033c2:	f043 0302 	orr.w	r3, r3, #2
 80033c6:	6333      	str	r3, [r6, #48]	; 0x30
 80033c8:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 80033ca:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80033cc:	f003 0302 	and.w	r3, r3, #2
 80033d0:	9301      	str	r3, [sp, #4]
 80033d2:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 80033d4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80033d8:	2312      	movs	r3, #18
 80033da:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 80033de:	2002      	movs	r0, #2
 80033e0:	2304      	movs	r3, #4
 80033e2:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 80033e6:	a903      	add	r1, sp, #12
 80033e8:	481d      	ldr	r0, [pc, #116]	; (8003460 <I2C1_Init+0xd0>)
 80033ea:	f001 fb69 	bl	8004ac0 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 80033ee:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 80033f2:	a903      	add	r1, sp, #12
 80033f4:	481a      	ldr	r0, [pc, #104]	; (8003460 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 80033f6:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 80033f8:	f001 fb62 	bl	8004ac0 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 80033fc:	9402      	str	r4, [sp, #8]
 80033fe:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003400:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003404:	6433      	str	r3, [r6, #64]	; 0x40
 8003406:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003408:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800340c:	9302      	str	r3, [sp, #8]
 800340e:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8003410:	6a33      	ldr	r3, [r6, #32]
 8003412:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003416:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8003418:	6a33      	ldr	r3, [r6, #32]
 800341a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800341e:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8003420:	4622      	mov	r2, r4
 8003422:	2105      	movs	r1, #5
 8003424:	201f      	movs	r0, #31
 8003426:	f000 fd15 	bl	8003e54 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 800342a:	201f      	movs	r0, #31
 800342c:	f000 fd44 	bl	8003eb8 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8003430:	4622      	mov	r2, r4
 8003432:	2105      	movs	r1, #5
 8003434:	2020      	movs	r0, #32
 8003436:	f000 fd0d 	bl	8003e54 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 800343a:	2020      	movs	r0, #32
 800343c:	f000 fd3c 	bl	8003eb8 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8003440:	4628      	mov	r0, r5
  }
}
 8003442:	b008      	add	sp, #32
 8003444:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 8003448:	f001 beb2 	b.w	80051b0 <HAL_I2C_Init>
}
 800344c:	b008      	add	sp, #32
 800344e:	bd70      	pop	{r4, r5, r6, pc}
 8003450:	200016c0 	.word	0x200016c0
 8003454:	40005400 	.word	0x40005400
 8003458:	00061a80 	.word	0x00061a80
 800345c:	40023800 	.word	0x40023800
 8003460:	40020400 	.word	0x40020400

08003464 <BSP_PB_Init>:
{
 8003464:	b510      	push	{r4, lr}
 8003466:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8003468:	4b19      	ldr	r3, [pc, #100]	; (80034d0 <BSP_PB_Init+0x6c>)
 800346a:	2400      	movs	r4, #0
 800346c:	9400      	str	r4, [sp, #0]
 800346e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003470:	f042 0201 	orr.w	r2, r2, #1
 8003474:	631a      	str	r2, [r3, #48]	; 0x30
 8003476:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003478:	f003 0301 	and.w	r3, r3, #1
 800347c:	9300      	str	r3, [sp, #0]
 800347e:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8003480:	b969      	cbnz	r1, 800349e <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003482:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8003484:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003488:	2302      	movs	r3, #2
 800348a:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800348c:	4b11      	ldr	r3, [pc, #68]	; (80034d4 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 800348e:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003490:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003494:	a901      	add	r1, sp, #4
 8003496:	f001 fb13 	bl	8004ac0 <HAL_GPIO_Init>
}
 800349a:	b006      	add	sp, #24
 800349c:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 800349e:	2901      	cmp	r1, #1
 80034a0:	d1fb      	bne.n	800349a <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80034a2:	2302      	movs	r3, #2
 80034a4:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 80034a6:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80034aa:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80034ac:	4b09      	ldr	r3, [pc, #36]	; (80034d4 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80034ae:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80034b0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 80034b4:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80034b6:	a901      	add	r1, sp, #4
 80034b8:	f001 fb02 	bl	8004ac0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 80034bc:	4622      	mov	r2, r4
 80034be:	210f      	movs	r1, #15
 80034c0:	2006      	movs	r0, #6
 80034c2:	f000 fcc7 	bl	8003e54 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 80034c6:	2006      	movs	r0, #6
 80034c8:	f000 fcf6 	bl	8003eb8 <HAL_NVIC_EnableIRQ>
}
 80034cc:	e7e5      	b.n	800349a <BSP_PB_Init+0x36>
 80034ce:	bf00      	nop
 80034d0:	40023800 	.word	0x40023800
 80034d4:	20000048 	.word	0x20000048

080034d8 <BSP_PB_GetState>:
{
 80034d8:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 80034da:	4b03      	ldr	r3, [pc, #12]	; (80034e8 <BSP_PB_GetState+0x10>)
 80034dc:	2101      	movs	r1, #1
 80034de:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80034e2:	f001 fc75 	bl	8004dd0 <HAL_GPIO_ReadPin>
}
 80034e6:	bd08      	pop	{r3, pc}
 80034e8:	20000048 	.word	0x20000048

080034ec <TS_IO_Init>:
 80034ec:	f7ff bf50 	b.w	8003390 <I2C1_Init>

080034f0 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 80034f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 80034f2:	2301      	movs	r3, #1
 80034f4:	f88d 2017 	strb.w	r2, [sp, #23]
 80034f8:	2264      	movs	r2, #100	; 0x64
 80034fa:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80034fe:	f10d 0217 	add.w	r2, sp, #23
 8003502:	9200      	str	r2, [sp, #0]
 8003504:	460a      	mov	r2, r1
 8003506:	4601      	mov	r1, r0
 8003508:	4805      	ldr	r0, [pc, #20]	; (8003520 <TS_IO_Write+0x30>)
 800350a:	f001 ff13 	bl	8005334 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 800350e:	b120      	cbz	r0, 800351a <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 8003510:	4803      	ldr	r0, [pc, #12]	; (8003520 <TS_IO_Write+0x30>)
 8003512:	f001 fef5 	bl	8005300 <HAL_I2C_DeInit>
  I2C1_Init();
 8003516:	f7ff ff3b 	bl	8003390 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 800351a:	b007      	add	sp, #28
 800351c:	f85d fb04 	ldr.w	pc, [sp], #4
 8003520:	200016c0 	.word	0x200016c0

08003524 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8003524:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8003526:	2300      	movs	r3, #0
{
 8003528:	460a      	mov	r2, r1
  uint8_t Value = 0;
 800352a:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800352e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003532:	2301      	movs	r3, #1
 8003534:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8003538:	f10d 0117 	add.w	r1, sp, #23
 800353c:	9100      	str	r1, [sp, #0]
 800353e:	4601      	mov	r1, r0
 8003540:	4806      	ldr	r0, [pc, #24]	; (800355c <TS_IO_Read+0x38>)
 8003542:	f001 ff87 	bl	8005454 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003546:	b120      	cbz	r0, 8003552 <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8003548:	4804      	ldr	r0, [pc, #16]	; (800355c <TS_IO_Read+0x38>)
 800354a:	f001 fed9 	bl	8005300 <HAL_I2C_DeInit>
  I2C1_Init();
 800354e:	f7ff ff1f 	bl	8003390 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 8003552:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8003556:	b007      	add	sp, #28
 8003558:	f85d fb04 	ldr.w	pc, [sp], #4
 800355c:	200016c0 	.word	0x200016c0

08003560 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8003560:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8003562:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003566:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800356a:	9200      	str	r2, [sp, #0]
 800356c:	2301      	movs	r3, #1
 800356e:	460a      	mov	r2, r1
 8003570:	4601      	mov	r1, r0
 8003572:	4806      	ldr	r0, [pc, #24]	; (800358c <TS_IO_ReadMultiple+0x2c>)
 8003574:	f001 ff6e 	bl	8005454 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003578:	4604      	mov	r4, r0
 800357a:	b120      	cbz	r0, 8003586 <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 800357c:	4803      	ldr	r0, [pc, #12]	; (800358c <TS_IO_ReadMultiple+0x2c>)
 800357e:	f001 febf 	bl	8005300 <HAL_I2C_DeInit>
  I2C1_Init();
 8003582:	f7ff ff05 	bl	8003390 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8003586:	b2a0      	uxth	r0, r4
 8003588:	b004      	add	sp, #16
 800358a:	bd10      	pop	{r4, pc}
 800358c:	200016c0 	.word	0x200016c0

08003590 <OTM8009A_IO_Delay>:
 8003590:	f000 bc3a 	b.w	8003e08 <HAL_Delay>

08003594 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003594:	b500      	push	{lr}
 8003596:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003598:	f44f 7280 	mov.w	r2, #256	; 0x100
 800359c:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800359e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 80035a2:	2205      	movs	r2, #5
 80035a4:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80035a6:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80035a8:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 80035aa:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 80035ac:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80035b0:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80035b4:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 80035b8:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80035ba:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 80035bc:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 80035be:	2210      	movs	r2, #16
 80035c0:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80035c2:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80035c6:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 80035c8:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80035ca:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 80035cc:	a906      	add	r1, sp, #24
 80035ce:	466a      	mov	r2, sp
 80035d0:	4804      	ldr	r0, [pc, #16]	; (80035e4 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 80035d2:	f002 fbc0 	bl	8005d56 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 80035d6:	3800      	subs	r0, #0
 80035d8:	bf18      	it	ne
 80035da:	2001      	movne	r0, #1
 80035dc:	b015      	add	sp, #84	; 0x54
 80035de:	f85d fb04 	ldr.w	pc, [sp], #4
 80035e2:	bf00      	nop
 80035e4:	20001714 	.word	0x20001714

080035e8 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 80035e8:	b500      	push	{lr}
 80035ea:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80035ec:	f44f 7380 	mov.w	r3, #256	; 0x100
 80035f0:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 80035f2:	2306      	movs	r3, #6
 80035f4:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035f6:	4817      	ldr	r0, [pc, #92]	; (8003654 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80035f8:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035fa:	f241 3288 	movw	r2, #5000	; 0x1388
 80035fe:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003600:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003604:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8003608:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 800360a:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800360c:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800360e:	f002 fb5e 	bl	8005cce <HAL_QSPI_Command>
 8003612:	b9e0      	cbnz	r0, 800364e <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8003614:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8003616:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 800361a:	2201      	movs	r2, #1
 800361c:	2310      	movs	r3, #16
 800361e:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8003622:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8003626:	2305      	movs	r3, #5
 8003628:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800362c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003630:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003632:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003634:	4807      	ldr	r0, [pc, #28]	; (8003654 <QSPI_WriteEnable.constprop.0+0x6c>)
 8003636:	f241 3388 	movw	r3, #5000	; 0x1388
 800363a:	466a      	mov	r2, sp
 800363c:	a906      	add	r1, sp, #24
 800363e:	f002 fb8a 	bl	8005d56 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8003642:	3800      	subs	r0, #0
 8003644:	bf18      	it	ne
 8003646:	2001      	movne	r0, #1
}
 8003648:	b015      	add	sp, #84	; 0x54
 800364a:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 800364e:	2001      	movs	r0, #1
 8003650:	e7fa      	b.n	8003648 <QSPI_WriteEnable.constprop.0+0x60>
 8003652:	bf00      	nop
 8003654:	20001714 	.word	0x20001714

08003658 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8003658:	b500      	push	{lr}
 800365a:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800365c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003660:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8003662:	23eb      	movs	r3, #235	; 0xeb
 8003664:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003666:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800366a:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 800366c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003670:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8003672:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8003676:	2300      	movs	r3, #0
 8003678:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 800367c:	220a      	movs	r2, #10
 800367e:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003680:	a902      	add	r1, sp, #8
 8003682:	466a      	mov	r2, sp
 8003684:	4806      	ldr	r0, [pc, #24]	; (80036a0 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003686:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003688:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 800368c:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800368e:	f002 fbb2 	bl	8005df6 <HAL_QSPI_MemoryMapped>
}
 8003692:	3800      	subs	r0, #0
 8003694:	bf18      	it	ne
 8003696:	2001      	movne	r0, #1
 8003698:	b011      	add	sp, #68	; 0x44
 800369a:	f85d fb04 	ldr.w	pc, [sp], #4
 800369e:	bf00      	nop
 80036a0:	20001714 	.word	0x20001714

080036a4 <BSP_QSPI_MspInit>:
{
 80036a4:	b570      	push	{r4, r5, r6, lr}
 80036a6:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 80036a8:	4b2c      	ldr	r3, [pc, #176]	; (800375c <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80036aa:	482d      	ldr	r0, [pc, #180]	; (8003760 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 80036ac:	2400      	movs	r4, #0
 80036ae:	9400      	str	r4, [sp, #0]
 80036b0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80036b2:	f042 0202 	orr.w	r2, r2, #2
 80036b6:	639a      	str	r2, [r3, #56]	; 0x38
 80036b8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80036ba:	f002 0202 	and.w	r2, r2, #2
 80036be:	9200      	str	r2, [sp, #0]
 80036c0:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 80036c2:	699a      	ldr	r2, [r3, #24]
 80036c4:	f042 0202 	orr.w	r2, r2, #2
 80036c8:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80036ca:	699a      	ldr	r2, [r3, #24]
 80036cc:	f022 0202 	bic.w	r2, r2, #2
 80036d0:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 80036d2:	9401      	str	r4, [sp, #4]
 80036d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80036d6:	f042 0202 	orr.w	r2, r2, #2
 80036da:	631a      	str	r2, [r3, #48]	; 0x30
 80036dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80036de:	f002 0202 	and.w	r2, r2, #2
 80036e2:	9201      	str	r2, [sp, #4]
 80036e4:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80036e6:	9402      	str	r4, [sp, #8]
 80036e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80036ea:	f042 0220 	orr.w	r2, r2, #32
 80036ee:	631a      	str	r2, [r3, #48]	; 0x30
 80036f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036f2:	f003 0320 	and.w	r3, r3, #32
 80036f6:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80036f8:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80036fa:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80036fc:	2302      	movs	r3, #2
 80036fe:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8003702:	2101      	movs	r1, #1
 8003704:	2303      	movs	r3, #3
 8003706:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800370a:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800370c:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 800370e:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003710:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003712:	f001 f9d5 	bl	8004ac0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003716:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800371a:	a903      	add	r1, sp, #12
 800371c:	4811      	ldr	r0, [pc, #68]	; (8003764 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800371e:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8003720:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003722:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003724:	f001 f9cc 	bl	8004ac0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003728:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800372c:	a903      	add	r1, sp, #12
 800372e:	480d      	ldr	r0, [pc, #52]	; (8003764 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003730:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003732:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003734:	f001 f9c4 	bl	8004ac0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003738:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800373a:	a903      	add	r1, sp, #12
 800373c:	4809      	ldr	r0, [pc, #36]	; (8003764 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800373e:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003740:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003742:	f001 f9bd 	bl	8004ac0 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8003746:	4622      	mov	r2, r4
 8003748:	210f      	movs	r1, #15
 800374a:	205b      	movs	r0, #91	; 0x5b
 800374c:	f000 fb82 	bl	8003e54 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8003750:	205b      	movs	r0, #91	; 0x5b
 8003752:	f000 fbb1 	bl	8003eb8 <HAL_NVIC_EnableIRQ>
}
 8003756:	b008      	add	sp, #32
 8003758:	bd70      	pop	{r4, r5, r6, pc}
 800375a:	bf00      	nop
 800375c:	40023800 	.word	0x40023800
 8003760:	40020400 	.word	0x40020400
 8003764:	40021400 	.word	0x40021400

08003768 <BSP_QSPI_Init>:
{
 8003768:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 800376a:	4c48      	ldr	r4, [pc, #288]	; (800388c <BSP_QSPI_Init+0x124>)
 800376c:	4b48      	ldr	r3, [pc, #288]	; (8003890 <BSP_QSPI_Init+0x128>)
 800376e:	6023      	str	r3, [r4, #0]
{
 8003770:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003772:	4620      	mov	r0, r4
 8003774:	f002 fa98 	bl	8005ca8 <HAL_QSPI_DeInit>
 8003778:	4605      	mov	r5, r0
 800377a:	b110      	cbz	r0, 8003782 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 800377c:	2001      	movs	r0, #1
}
 800377e:	b011      	add	sp, #68	; 0x44
 8003780:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8003782:	4601      	mov	r1, r0
 8003784:	4620      	mov	r0, r4
 8003786:	f7ff ff8d 	bl	80036a4 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 800378a:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800378c:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 800378e:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003792:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003794:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8003798:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 800379c:	fab3 f383 	clz	r3, r3
 80037a0:	3b01      	subs	r3, #1
 80037a2:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80037a4:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80037a6:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 80037aa:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 80037ae:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80037b2:	f002 fa25 	bl	8005c00 <HAL_QSPI_Init>
 80037b6:	2800      	cmp	r0, #0
 80037b8:	d1e0      	bne.n	800377c <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80037ba:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80037be:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80037c2:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 80037c6:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 80037c8:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 80037ca:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80037cc:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80037ce:	f241 3288 	movw	r2, #5000	; 0x1388
 80037d2:	a902      	add	r1, sp, #8
 80037d4:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80037d6:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 80037d8:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80037da:	f002 fa78 	bl	8005cce <HAL_QSPI_Command>
 80037de:	b108      	cbz	r0, 80037e4 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 80037e0:	2004      	movs	r0, #4
 80037e2:	e7cc      	b.n	800377e <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 80037e4:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80037e6:	f241 3288 	movw	r2, #5000	; 0x1388
 80037ea:	a902      	add	r1, sp, #8
 80037ec:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 80037ee:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80037f0:	f002 fa6d 	bl	8005cce <HAL_QSPI_Command>
 80037f4:	2800      	cmp	r0, #0
 80037f6:	d1f3      	bne.n	80037e0 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 80037f8:	f241 3088 	movw	r0, #5000	; 0x1388
 80037fc:	f7ff feca 	bl	8003594 <QSPI_AutoPollingMemReady.constprop.0>
 8003800:	2800      	cmp	r0, #0
 8003802:	d1ed      	bne.n	80037e0 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003804:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003808:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800380c:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003810:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8003812:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003814:	f241 3288 	movw	r2, #5000	; 0x1388
 8003818:	a902      	add	r1, sp, #8
 800381a:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800381c:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800381e:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003820:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003822:	f002 fa54 	bl	8005cce <HAL_QSPI_Command>
 8003826:	2800      	cmp	r0, #0
 8003828:	d1da      	bne.n	80037e0 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800382a:	f241 3288 	movw	r2, #5000	; 0x1388
 800382e:	f10d 0107 	add.w	r1, sp, #7
 8003832:	4620      	mov	r0, r4
 8003834:	f002 fbc4 	bl	8005fc0 <HAL_QSPI_Receive>
 8003838:	2800      	cmp	r0, #0
 800383a:	d1d1      	bne.n	80037e0 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 800383c:	f7ff fed4 	bl	80035e8 <QSPI_WriteEnable.constprop.0>
 8003840:	2800      	cmp	r0, #0
 8003842:	d1cd      	bne.n	80037e0 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8003844:	2381      	movs	r3, #129	; 0x81
 8003846:	9302      	str	r3, [sp, #8]
 8003848:	22f0      	movs	r2, #240	; 0xf0
 800384a:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800384e:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003852:	210a      	movs	r1, #10
 8003854:	fab2 f282 	clz	r2, r2
 8003858:	fa01 f202 	lsl.w	r2, r1, r2
 800385c:	f003 030f 	and.w	r3, r3, #15
 8003860:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003862:	a902      	add	r1, sp, #8
 8003864:	f241 3288 	movw	r2, #5000	; 0x1388
 8003868:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800386a:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800386e:	f002 fa2e 	bl	8005cce <HAL_QSPI_Command>
 8003872:	2800      	cmp	r0, #0
 8003874:	d1b4      	bne.n	80037e0 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003876:	f241 3288 	movw	r2, #5000	; 0x1388
 800387a:	f10d 0107 	add.w	r1, sp, #7
 800387e:	4620      	mov	r0, r4
 8003880:	f002 fb42 	bl	8005f08 <HAL_QSPI_Transmit>
 8003884:	2800      	cmp	r0, #0
 8003886:	f43f af7a 	beq.w	800377e <BSP_QSPI_Init+0x16>
 800388a:	e7a9      	b.n	80037e0 <BSP_QSPI_Init+0x78>
 800388c:	20001714 	.word	0x20001714
 8003890:	a0001000 	.word	0xa0001000

08003894 <BSP_QSPI_MspDeInit>:
{
 8003894:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8003896:	205b      	movs	r0, #91	; 0x5b
 8003898:	f000 fb1c 	bl	8003ed4 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 800389c:	4814      	ldr	r0, [pc, #80]	; (80038f0 <BSP_QSPI_MspDeInit+0x5c>)
 800389e:	2140      	movs	r1, #64	; 0x40
 80038a0:	f001 f9f4 	bl	8004c8c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 80038a4:	4813      	ldr	r0, [pc, #76]	; (80038f4 <BSP_QSPI_MspDeInit+0x60>)
 80038a6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80038aa:	f001 f9ef 	bl	8004c8c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 80038ae:	4811      	ldr	r0, [pc, #68]	; (80038f4 <BSP_QSPI_MspDeInit+0x60>)
 80038b0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80038b4:	f001 f9ea 	bl	8004c8c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 80038b8:	480e      	ldr	r0, [pc, #56]	; (80038f4 <BSP_QSPI_MspDeInit+0x60>)
 80038ba:	f44f 7100 	mov.w	r1, #512	; 0x200
 80038be:	f001 f9e5 	bl	8004c8c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 80038c2:	480c      	ldr	r0, [pc, #48]	; (80038f4 <BSP_QSPI_MspDeInit+0x60>)
 80038c4:	2180      	movs	r1, #128	; 0x80
 80038c6:	f001 f9e1 	bl	8004c8c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 80038ca:	480a      	ldr	r0, [pc, #40]	; (80038f4 <BSP_QSPI_MspDeInit+0x60>)
 80038cc:	2140      	movs	r1, #64	; 0x40
 80038ce:	f001 f9dd 	bl	8004c8c <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 80038d2:	4b09      	ldr	r3, [pc, #36]	; (80038f8 <BSP_QSPI_MspDeInit+0x64>)
 80038d4:	699a      	ldr	r2, [r3, #24]
 80038d6:	f042 0202 	orr.w	r2, r2, #2
 80038da:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80038dc:	699a      	ldr	r2, [r3, #24]
 80038de:	f022 0202 	bic.w	r2, r2, #2
 80038e2:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 80038e4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80038e6:	f022 0202 	bic.w	r2, r2, #2
 80038ea:	639a      	str	r2, [r3, #56]	; 0x38
}
 80038ec:	bd08      	pop	{r3, pc}
 80038ee:	bf00      	nop
 80038f0:	40020400 	.word	0x40020400
 80038f4:	40021400 	.word	0x40021400
 80038f8:	40023800 	.word	0x40023800

080038fc <BSP_QSPI_DeInit>:
{
 80038fc:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 80038fe:	4d08      	ldr	r5, [pc, #32]	; (8003920 <BSP_QSPI_DeInit+0x24>)
 8003900:	4b08      	ldr	r3, [pc, #32]	; (8003924 <BSP_QSPI_DeInit+0x28>)
 8003902:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003904:	4628      	mov	r0, r5
 8003906:	f002 f9cf 	bl	8005ca8 <HAL_QSPI_DeInit>
 800390a:	4604      	mov	r4, r0
 800390c:	b928      	cbnz	r0, 800391a <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 800390e:	4601      	mov	r1, r0
 8003910:	4628      	mov	r0, r5
 8003912:	f7ff ffbf 	bl	8003894 <BSP_QSPI_MspDeInit>
}
 8003916:	4620      	mov	r0, r4
 8003918:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 800391a:	2401      	movs	r4, #1
 800391c:	e7fb      	b.n	8003916 <BSP_QSPI_DeInit+0x1a>
 800391e:	bf00      	nop
 8003920:	20001714 	.word	0x20001714
 8003924:	a0001000 	.word	0xa0001000

08003928 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8003928:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 800392c:	4c21      	ldr	r4, [pc, #132]	; (80039b4 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800392e:	4d22      	ldr	r5, [pc, #136]	; (80039b8 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003930:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 8003932:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003936:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003938:	4621      	mov	r1, r4
{
 800393a:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800393c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003940:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003942:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8003946:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 800394a:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800394e:	f002 ffdb 	bl	8006908 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 8003952:	4630      	mov	r0, r6
 8003954:	f000 fa58 	bl	8003e08 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8003958:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800395a:	4621      	mov	r1, r4
 800395c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003960:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003962:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8003966:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800396a:	f002 ffcd 	bl	8006908 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800396e:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003970:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003974:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8003976:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003978:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800397c:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 800397e:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003982:	f002 ffc1 	bl	8006908 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8003986:	f44f 730c 	mov.w	r3, #560	; 0x230
 800398a:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 800398c:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800398e:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003992:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8003994:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8003996:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003998:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800399c:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 800399e:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80039a0:	f002 ffb2 	bl	8006908 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 80039a4:	4649      	mov	r1, r9
 80039a6:	4628      	mov	r0, r5
}
 80039a8:	b003      	add	sp, #12
 80039aa:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 80039ae:	f002 bfc9 	b.w	8006944 <HAL_SDRAM_ProgramRefreshRate>
 80039b2:	bf00      	nop
 80039b4:	20001760 	.word	0x20001760
 80039b8:	2000184c 	.word	0x2000184c

080039bc <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80039bc:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80039be:	4606      	mov	r6, r0
{
 80039c0:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80039c2:	2800      	cmp	r0, #0
 80039c4:	f000 80bd 	beq.w	8003b42 <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 80039c8:	4b5f      	ldr	r3, [pc, #380]	; (8003b48 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80039ca:	4860      	ldr	r0, [pc, #384]	; (8003b4c <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80039cc:	4c60      	ldr	r4, [pc, #384]	; (8003b50 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 80039ce:	2500      	movs	r5, #0
 80039d0:	9500      	str	r5, [sp, #0]
 80039d2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80039d4:	f042 0201 	orr.w	r2, r2, #1
 80039d8:	639a      	str	r2, [r3, #56]	; 0x38
 80039da:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80039dc:	f002 0201 	and.w	r2, r2, #1
 80039e0:	9200      	str	r2, [sp, #0]
 80039e2:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 80039e4:	9501      	str	r5, [sp, #4]
 80039e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039e8:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80039ec:	631a      	str	r2, [r3, #48]	; 0x30
 80039ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039f0:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80039f4:	9201      	str	r2, [sp, #4]
 80039f6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80039f8:	9502      	str	r5, [sp, #8]
 80039fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039fc:	f042 0204 	orr.w	r2, r2, #4
 8003a00:	631a      	str	r2, [r3, #48]	; 0x30
 8003a02:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a04:	f002 0204 	and.w	r2, r2, #4
 8003a08:	9202      	str	r2, [sp, #8]
 8003a0a:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003a0c:	9503      	str	r5, [sp, #12]
 8003a0e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a10:	f042 0208 	orr.w	r2, r2, #8
 8003a14:	631a      	str	r2, [r3, #48]	; 0x30
 8003a16:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a18:	f002 0208 	and.w	r2, r2, #8
 8003a1c:	9203      	str	r2, [sp, #12]
 8003a1e:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8003a20:	9504      	str	r5, [sp, #16]
 8003a22:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a24:	f042 0210 	orr.w	r2, r2, #16
 8003a28:	631a      	str	r2, [r3, #48]	; 0x30
 8003a2a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a2c:	f002 0210 	and.w	r2, r2, #16
 8003a30:	9204      	str	r2, [sp, #16]
 8003a32:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8003a34:	9505      	str	r5, [sp, #20]
 8003a36:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a38:	f042 0220 	orr.w	r2, r2, #32
 8003a3c:	631a      	str	r2, [r3, #48]	; 0x30
 8003a3e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a40:	f002 0220 	and.w	r2, r2, #32
 8003a44:	9205      	str	r2, [sp, #20]
 8003a46:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8003a48:	9506      	str	r5, [sp, #24]
 8003a4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a4c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003a50:	631a      	str	r2, [r3, #48]	; 0x30
 8003a52:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a54:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8003a58:	9206      	str	r2, [sp, #24]
 8003a5a:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8003a5c:	9507      	str	r5, [sp, #28]
 8003a5e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a60:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003a64:	631a      	str	r2, [r3, #48]	; 0x30
 8003a66:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a68:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8003a6c:	9207      	str	r2, [sp, #28]
 8003a6e:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8003a70:	9508      	str	r5, [sp, #32]
 8003a72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003a74:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003a78:	631a      	str	r2, [r3, #48]	; 0x30
 8003a7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a7c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003a80:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003a82:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8003a84:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8003a86:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003a88:	2301      	movs	r3, #1
 8003a8a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003a8e:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8003a90:	220c      	movs	r2, #12
 8003a92:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8003a94:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003a96:	f001 f813 	bl	8004ac0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003a9a:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003a9e:	482d      	ldr	r0, [pc, #180]	; (8003b54 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003aa0:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003aa2:	a909      	add	r1, sp, #36	; 0x24
 8003aa4:	f001 f80c 	bl	8004ac0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003aa8:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003aac:	482a      	ldr	r0, [pc, #168]	; (8003b58 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003aae:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003ab0:	a909      	add	r1, sp, #36	; 0x24
 8003ab2:	f001 f805 	bl	8004ac0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003ab6:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003aba:	4828      	ldr	r0, [pc, #160]	; (8003b5c <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003abc:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003abe:	a909      	add	r1, sp, #36	; 0x24
 8003ac0:	f000 fffe 	bl	8004ac0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003ac4:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003ac8:	4825      	ldr	r0, [pc, #148]	; (8003b60 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003aca:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003acc:	a909      	add	r1, sp, #36	; 0x24
 8003ace:	f000 fff7 	bl	8004ac0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003ad2:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003ad6:	4823      	ldr	r0, [pc, #140]	; (8003b64 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003ad8:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003ada:	a909      	add	r1, sp, #36	; 0x24
 8003adc:	f000 fff0 	bl	8004ac0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003ae0:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003ae4:	4820      	ldr	r0, [pc, #128]	; (8003b68 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003ae6:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003ae8:	a909      	add	r1, sp, #36	; 0x24
 8003aea:	f000 ffe9 	bl	8004ac0 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8003aee:	2280      	movs	r2, #128	; 0x80
 8003af0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003af4:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8003af8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003afc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003b00:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8003b04:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8003b08:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8003b0c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8003b10:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8003b14:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8003b16:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8003b1a:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003b1c:	4b13      	ldr	r3, [pc, #76]	; (8003b6c <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003b1e:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8003b20:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003b22:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003b24:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003b26:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8003b28:	f000 fa8e 	bl	8004048 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8003b2c:	4620      	mov	r0, r4
 8003b2e:	f000 fa0b 	bl	8003f48 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8003b32:	2038      	movs	r0, #56	; 0x38
 8003b34:	462a      	mov	r2, r5
 8003b36:	2105      	movs	r1, #5
 8003b38:	f000 f98c 	bl	8003e54 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8003b3c:	2038      	movs	r0, #56	; 0x38
 8003b3e:	f000 f9bb 	bl	8003eb8 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003b42:	b00e      	add	sp, #56	; 0x38
 8003b44:	bd70      	pop	{r4, r5, r6, pc}
 8003b46:	bf00      	nop
 8003b48:	40023800 	.word	0x40023800
 8003b4c:	40020800 	.word	0x40020800
 8003b50:	200017ec 	.word	0x200017ec
 8003b54:	40020c00 	.word	0x40020c00
 8003b58:	40021000 	.word	0x40021000
 8003b5c:	40021400 	.word	0x40021400
 8003b60:	40021800 	.word	0x40021800
 8003b64:	40021c00 	.word	0x40021c00
 8003b68:	40022000 	.word	0x40022000
 8003b6c:	40026410 	.word	0x40026410

08003b70 <BSP_SDRAM_Init>:
{
 8003b70:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003b72:	4c19      	ldr	r4, [pc, #100]	; (8003bd8 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8003b74:	4d19      	ldr	r5, [pc, #100]	; (8003bdc <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003b76:	4b1a      	ldr	r3, [pc, #104]	; (8003be0 <BSP_SDRAM_Init+0x70>)
 8003b78:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8003b7a:	2107      	movs	r1, #7
 8003b7c:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8003b7e:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8003b80:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8003b84:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8003b88:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8003b8c:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8003b8e:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8003b90:	2340      	movs	r3, #64	; 0x40
 8003b92:	2220      	movs	r2, #32
 8003b94:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8003b98:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8003b9a:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8003b9e:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8003ba2:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8003ba6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003baa:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003bae:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8003bb0:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8003bb4:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003bb6:	f7ff ff01 	bl	80039bc <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8003bba:	4629      	mov	r1, r5
 8003bbc:	4620      	mov	r0, r4
 8003bbe:	f002 fe75 	bl	80068ac <HAL_SDRAM_Init>
 8003bc2:	4c08      	ldr	r4, [pc, #32]	; (8003be4 <BSP_SDRAM_Init+0x74>)
 8003bc4:	3800      	subs	r0, #0
 8003bc6:	bf18      	it	ne
 8003bc8:	2001      	movne	r0, #1
 8003bca:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8003bcc:	f240 5069 	movw	r0, #1385	; 0x569
 8003bd0:	f7ff feaa 	bl	8003928 <BSP_SDRAM_Initialization_sequence>
}
 8003bd4:	7820      	ldrb	r0, [r4, #0]
 8003bd6:	bd38      	pop	{r3, r4, r5, pc}
 8003bd8:	2000184c 	.word	0x2000184c
 8003bdc:	20001770 	.word	0x20001770
 8003be0:	a0000140 	.word	0xa0000140
 8003be4:	2000004d 	.word	0x2000004d

08003be8 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003be8:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003bea:	b148      	cbz	r0, 8003c00 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8003bec:	2038      	movs	r0, #56	; 0x38
 8003bee:	f000 f971 	bl	8003ed4 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003bf2:	4804      	ldr	r0, [pc, #16]	; (8003c04 <BSP_SDRAM_MspDeInit+0x1c>)
 8003bf4:	4b04      	ldr	r3, [pc, #16]	; (8003c08 <BSP_SDRAM_MspDeInit+0x20>)
 8003bf6:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8003bf8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8003bfc:	f000 ba24 	b.w	8004048 <HAL_DMA_DeInit>
}
 8003c00:	bd08      	pop	{r3, pc}
 8003c02:	bf00      	nop
 8003c04:	2000178c 	.word	0x2000178c
 8003c08:	40026410 	.word	0x40026410

08003c0c <BSP_SDRAM_DeInit>:
{
 8003c0c:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003c0e:	4c07      	ldr	r4, [pc, #28]	; (8003c2c <BSP_SDRAM_DeInit+0x20>)
 8003c10:	4b07      	ldr	r3, [pc, #28]	; (8003c30 <BSP_SDRAM_DeInit+0x24>)
 8003c12:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8003c14:	4620      	mov	r0, r4
 8003c16:	f002 fe69 	bl	80068ec <HAL_SDRAM_DeInit>
 8003c1a:	4d06      	ldr	r5, [pc, #24]	; (8003c34 <BSP_SDRAM_DeInit+0x28>)
 8003c1c:	4601      	mov	r1, r0
 8003c1e:	b918      	cbnz	r0, 8003c28 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8003c20:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8003c22:	4620      	mov	r0, r4
 8003c24:	f7ff ffe0 	bl	8003be8 <BSP_SDRAM_MspDeInit>
}
 8003c28:	7828      	ldrb	r0, [r5, #0]
 8003c2a:	bd38      	pop	{r3, r4, r5, pc}
 8003c2c:	2000184c 	.word	0x2000184c
 8003c30:	a0000140 	.word	0xa0000140
 8003c34:	2000004c 	.word	0x2000004c

08003c38 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8003c38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8003c3c:	4d16      	ldr	r5, [pc, #88]	; (8003c98 <BSP_TS_Init+0x60>)
 8003c3e:	4c17      	ldr	r4, [pc, #92]	; (8003c9c <BSP_TS_Init+0x64>)
 8003c40:	682b      	ldr	r3, [r5, #0]
{
 8003c42:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8003c44:	7820      	ldrb	r0, [r4, #0]
{
 8003c46:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8003c48:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8003c4a:	686b      	ldr	r3, [r5, #4]
 8003c4c:	2054      	movs	r0, #84	; 0x54
 8003c4e:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8003c50:	b2c0      	uxtb	r0, r0
 8003c52:	2811      	cmp	r0, #17
 8003c54:	d00a      	beq.n	8003c6c <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8003c56:	686b      	ldr	r3, [r5, #4]
 8003c58:	2070      	movs	r0, #112	; 0x70
 8003c5a:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003c5c:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003c5e:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003c60:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003c62:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003c64:	d004      	beq.n	8003c70 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8003c66:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8003c68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8003c6c:	2354      	movs	r3, #84	; 0x54
 8003c6e:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8003c70:	4b0b      	ldr	r3, [pc, #44]	; (8003ca0 <BSP_TS_Init+0x68>)
 8003c72:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8003ca4 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 8003c76:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8003c78:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8003c7c:	42be      	cmp	r6, r7
 8003c7e:	bf34      	ite	cc
 8003c80:	2601      	movcc	r6, #1
 8003c82:	260c      	movcs	r6, #12
 8003c84:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8003c86:	68ab      	ldr	r3, [r5, #8]
 8003c88:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8003c8a:	f8d8 3000 	ldr.w	r3, [r8]
 8003c8e:	7820      	ldrb	r0, [r4, #0]
 8003c90:	68db      	ldr	r3, [r3, #12]
 8003c92:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8003c94:	2000      	movs	r0, #0
 8003c96:	e7e7      	b.n	8003c68 <BSP_TS_Init+0x30>
 8003c98:	20000020 	.word	0x20000020
 8003c9c:	20001880 	.word	0x20001880
 8003ca0:	20001898 	.word	0x20001898
 8003ca4:	20001894 	.word	0x20001894

08003ca8 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8003ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003cac:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8003d8c <BSP_TS_GetState+0xe4>
 8003cb0:	4a33      	ldr	r2, [pc, #204]	; (8003d80 <BSP_TS_GetState+0xd8>)
 8003cb2:	f8db 3000 	ldr.w	r3, [fp]
{
 8003cb6:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003cb8:	691b      	ldr	r3, [r3, #16]
 8003cba:	7810      	ldrb	r0, [r2, #0]
{
 8003cbc:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003cbe:	4798      	blx	r3
 8003cc0:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8003cc2:	b158      	cbz	r0, 8003cdc <BSP_TS_GetState+0x34>
 8003cc4:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003d90 <BSP_TS_GetState+0xe8>
 8003cc8:	4f2e      	ldr	r7, [pc, #184]	; (8003d84 <BSP_TS_GetState+0xdc>)
 8003cca:	f106 0a02 	add.w	sl, r6, #2
 8003cce:	ad03      	add	r5, sp, #12
 8003cd0:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8003cd2:	f04f 0900 	mov.w	r9, #0
 8003cd6:	7833      	ldrb	r3, [r6, #0]
 8003cd8:	454b      	cmp	r3, r9
 8003cda:	d803      	bhi.n	8003ce4 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8003cdc:	2000      	movs	r0, #0
 8003cde:	b005      	add	sp, #20
 8003ce0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8003ce4:	f8db 3000 	ldr.w	r3, [fp]
 8003ce8:	4825      	ldr	r0, [pc, #148]	; (8003d80 <BSP_TS_GetState+0xd8>)
 8003cea:	695b      	ldr	r3, [r3, #20]
 8003cec:	7800      	ldrb	r0, [r0, #0]
 8003cee:	9101      	str	r1, [sp, #4]
 8003cf0:	462a      	mov	r2, r5
 8003cf2:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8003cf4:	4b24      	ldr	r3, [pc, #144]	; (8003d88 <BSP_TS_GetState+0xe0>)
 8003cf6:	9901      	ldr	r1, [sp, #4]
 8003cf8:	781b      	ldrb	r3, [r3, #0]
 8003cfa:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8003cfe:	bf1f      	itttt	ne
 8003d00:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8003d02:	8828      	ldrhne	r0, [r5, #0]
 8003d04:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 8003d06:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8003d08:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8003d0a:	bf41      	itttt	mi
 8003d0c:	880a      	ldrhmi	r2, [r1, #0]
 8003d0e:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8003d12:	3203      	addmi	r2, #3
 8003d14:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 8003d16:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003d18:	bf48      	it	mi
 8003d1a:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003d1c:	f8d8 2000 	ldr.w	r2, [r8]
 8003d20:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003d24:	bf42      	ittt	mi
 8003d26:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 8003d2a:	3301      	addmi	r3, #1
 8003d2c:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003d2e:	b293      	uxth	r3, r2
 8003d30:	4290      	cmp	r0, r2
 8003d32:	bf8c      	ite	hi
 8003d34:	1ac3      	subhi	r3, r0, r3
 8003d36:	1a1b      	subls	r3, r3, r0
 8003d38:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003d3a:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003d3e:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003d40:	683b      	ldr	r3, [r7, #0]
 8003d42:	b29c      	uxth	r4, r3
 8003d44:	429a      	cmp	r2, r3
 8003d46:	bf88      	it	hi
 8003d48:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8003d4a:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003d4c:	bf98      	it	ls
 8003d4e:	1aa4      	subls	r4, r4, r2
 8003d50:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8003d52:	441c      	add	r4, r3
 8003d54:	46c4      	mov	ip, r8
 8003d56:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8003d58:	bfc8      	it	gt
 8003d5a:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8003d5e:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8003d62:	bfc8      	it	gt
 8003d64:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8003d66:	46be      	mov	lr, r7
 8003d68:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 8003d6c:	f8de 3000 	ldr.w	r3, [lr]
 8003d70:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8003d74:	f108 0804 	add.w	r8, r8, #4
 8003d78:	3704      	adds	r7, #4
 8003d7a:	f109 0901 	add.w	r9, r9, #1
 8003d7e:	e7aa      	b.n	8003cd6 <BSP_TS_GetState+0x2e>
 8003d80:	20001880 	.word	0x20001880
 8003d84:	2000188c 	.word	0x2000188c
 8003d88:	20001898 	.word	0x20001898
 8003d8c:	20001894 	.word	0x20001894
 8003d90:	20001884 	.word	0x20001884

08003d94 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003d94:	4b05      	ldr	r3, [pc, #20]	; (8003dac <SystemInit+0x18>)
 8003d96:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8003d9a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003d9e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003da2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003da6:	609a      	str	r2, [r3, #8]
#endif
}
 8003da8:	4770      	bx	lr
 8003daa:	bf00      	nop
 8003dac:	e000ed00 	.word	0xe000ed00

08003db0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003db0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003db2:	4b0b      	ldr	r3, [pc, #44]	; (8003de0 <HAL_Init+0x30>)
 8003db4:	681a      	ldr	r2, [r3, #0]
 8003db6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003dba:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003dbc:	681a      	ldr	r2, [r3, #0]
 8003dbe:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003dc2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003dc4:	681a      	ldr	r2, [r3, #0]
 8003dc6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003dca:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003dcc:	2003      	movs	r0, #3
 8003dce:	f000 f82f 	bl	8003e30 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003dd2:	2000      	movs	r0, #0
 8003dd4:	f7fe f894 	bl	8001f00 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003dd8:	f7fd fe36 	bl	8001a48 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003ddc:	2000      	movs	r0, #0
 8003dde:	bd08      	pop	{r3, pc}
 8003de0:	40023c00 	.word	0x40023c00

08003de4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003de4:	4a03      	ldr	r2, [pc, #12]	; (8003df4 <HAL_IncTick+0x10>)
 8003de6:	4b04      	ldr	r3, [pc, #16]	; (8003df8 <HAL_IncTick+0x14>)
 8003de8:	6811      	ldr	r1, [r2, #0]
 8003dea:	781b      	ldrb	r3, [r3, #0]
 8003dec:	440b      	add	r3, r1
 8003dee:	6013      	str	r3, [r2, #0]
}
 8003df0:	4770      	bx	lr
 8003df2:	bf00      	nop
 8003df4:	2000189c 	.word	0x2000189c
 8003df8:	20000054 	.word	0x20000054

08003dfc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003dfc:	4b01      	ldr	r3, [pc, #4]	; (8003e04 <HAL_GetTick+0x8>)
 8003dfe:	6818      	ldr	r0, [r3, #0]
}
 8003e00:	4770      	bx	lr
 8003e02:	bf00      	nop
 8003e04:	2000189c 	.word	0x2000189c

08003e08 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003e08:	b538      	push	{r3, r4, r5, lr}
 8003e0a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003e0c:	f7ff fff6 	bl	8003dfc <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003e10:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003e12:	bf1c      	itt	ne
 8003e14:	4b05      	ldrne	r3, [pc, #20]	; (8003e2c <HAL_Delay+0x24>)
 8003e16:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003e18:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003e1a:	bf18      	it	ne
 8003e1c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003e1e:	f7ff ffed 	bl	8003dfc <HAL_GetTick>
 8003e22:	1b43      	subs	r3, r0, r5
 8003e24:	42a3      	cmp	r3, r4
 8003e26:	d3fa      	bcc.n	8003e1e <HAL_Delay+0x16>
  {
  }
}
 8003e28:	bd38      	pop	{r3, r4, r5, pc}
 8003e2a:	bf00      	nop
 8003e2c:	20000054 	.word	0x20000054

08003e30 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003e30:	4907      	ldr	r1, [pc, #28]	; (8003e50 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003e32:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003e34:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003e38:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003e3a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003e3c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003e40:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003e42:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003e44:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003e48:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8003e4c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003e4e:	4770      	bx	lr
 8003e50:	e000ed00 	.word	0xe000ed00

08003e54 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003e54:	4b16      	ldr	r3, [pc, #88]	; (8003eb0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003e56:	b530      	push	{r4, r5, lr}
 8003e58:	68dc      	ldr	r4, [r3, #12]
 8003e5a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003e5e:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003e62:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003e64:	2d04      	cmp	r5, #4
 8003e66:	bf28      	it	cs
 8003e68:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003e6a:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003e6c:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003e70:	bf8c      	ite	hi
 8003e72:	3c03      	subhi	r4, #3
 8003e74:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003e76:	fa03 f505 	lsl.w	r5, r3, r5
 8003e7a:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003e7e:	40a3      	lsls	r3, r4
 8003e80:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003e84:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8003e86:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003e88:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003e8c:	bfac      	ite	ge
 8003e8e:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003e92:	4a08      	ldrlt	r2, [pc, #32]	; (8003eb4 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003e94:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003e98:	bfb8      	it	lt
 8003e9a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003e9e:	b2db      	uxtb	r3, r3
 8003ea0:	bfaa      	itet	ge
 8003ea2:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003ea6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003ea8:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003eac:	bd30      	pop	{r4, r5, pc}
 8003eae:	bf00      	nop
 8003eb0:	e000ed00 	.word	0xe000ed00
 8003eb4:	e000ed14 	.word	0xe000ed14

08003eb8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003eb8:	2800      	cmp	r0, #0
 8003eba:	db08      	blt.n	8003ece <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003ebc:	0942      	lsrs	r2, r0, #5
 8003ebe:	2301      	movs	r3, #1
 8003ec0:	f000 001f 	and.w	r0, r0, #31
 8003ec4:	fa03 f000 	lsl.w	r0, r3, r0
 8003ec8:	4b01      	ldr	r3, [pc, #4]	; (8003ed0 <HAL_NVIC_EnableIRQ+0x18>)
 8003eca:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003ece:	4770      	bx	lr
 8003ed0:	e000e100 	.word	0xe000e100

08003ed4 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003ed4:	2800      	cmp	r0, #0
 8003ed6:	db0d      	blt.n	8003ef4 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003ed8:	0943      	lsrs	r3, r0, #5
 8003eda:	2201      	movs	r2, #1
 8003edc:	f000 001f 	and.w	r0, r0, #31
 8003ee0:	fa02 f000 	lsl.w	r0, r2, r0
 8003ee4:	3320      	adds	r3, #32
 8003ee6:	4a04      	ldr	r2, [pc, #16]	; (8003ef8 <HAL_NVIC_DisableIRQ+0x24>)
 8003ee8:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003eec:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003ef0:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003ef4:	4770      	bx	lr
 8003ef6:	bf00      	nop
 8003ef8:	e000e100 	.word	0xe000e100

08003efc <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003efc:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003efe:	4604      	mov	r4, r0
 8003f00:	b150      	cbz	r0, 8003f18 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003f02:	7943      	ldrb	r3, [r0, #5]
 8003f04:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003f08:	b913      	cbnz	r3, 8003f10 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003f0a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003f0c:	f7fd fdbc 	bl	8001a88 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003f10:	2301      	movs	r3, #1
 8003f12:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003f14:	2000      	movs	r0, #0
}
 8003f16:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003f18:	2001      	movs	r0, #1
 8003f1a:	e7fc      	b.n	8003f16 <HAL_CRC_Init+0x1a>

08003f1c <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003f1c:	6803      	ldr	r3, [r0, #0]
{
 8003f1e:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003f20:	4c08      	ldr	r4, [pc, #32]	; (8003f44 <DMA_CalcBaseAndBitshift+0x28>)
{
 8003f22:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003f24:	b2d9      	uxtb	r1, r3
 8003f26:	3910      	subs	r1, #16
 8003f28:	2018      	movs	r0, #24
 8003f2a:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003f2e:	5c20      	ldrb	r0, [r4, r0]
 8003f30:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003f32:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8003f36:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 8003f3a:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003f3c:	bf88      	it	hi
 8003f3e:	3004      	addhi	r0, #4
 8003f40:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8003f42:	bd10      	pop	{r4, pc}
 8003f44:	0801e049 	.word	0x0801e049

08003f48 <HAL_DMA_Init>:
{
 8003f48:	b570      	push	{r4, r5, r6, lr}
 8003f4a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003f4c:	f7ff ff56 	bl	8003dfc <HAL_GetTick>
 8003f50:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003f52:	2c00      	cmp	r4, #0
 8003f54:	d073      	beq.n	800403e <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8003f56:	2302      	movs	r3, #2
 8003f58:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003f5c:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8003f5e:	2300      	movs	r3, #0
 8003f60:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003f64:	6813      	ldr	r3, [r2, #0]
 8003f66:	f023 0301 	bic.w	r3, r3, #1
 8003f6a:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003f6c:	6821      	ldr	r1, [r4, #0]
 8003f6e:	680b      	ldr	r3, [r1, #0]
 8003f70:	07d8      	lsls	r0, r3, #31
 8003f72:	d42f      	bmi.n	8003fd4 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8003f74:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003f76:	4d33      	ldr	r5, [pc, #204]	; (8004044 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003f78:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003f7a:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003f7c:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8003f80:	4313      	orrs	r3, r2
 8003f82:	68e2      	ldr	r2, [r4, #12]
 8003f84:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003f86:	6922      	ldr	r2, [r4, #16]
 8003f88:	4313      	orrs	r3, r2
 8003f8a:	6962      	ldr	r2, [r4, #20]
 8003f8c:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003f8e:	69e2      	ldr	r2, [r4, #28]
 8003f90:	4303      	orrs	r3, r0
 8003f92:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003f94:	6a22      	ldr	r2, [r4, #32]
 8003f96:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003f98:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003f9a:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003f9c:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003fa0:	bf02      	ittt	eq
 8003fa2:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003fa6:	4335      	orreq	r5, r6
 8003fa8:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003faa:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003fac:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003fae:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003fb0:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003fb4:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003fb8:	d133      	bne.n	8004022 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8003fba:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003fbc:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8003fbe:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003fc0:	b37d      	cbz	r5, 8004022 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003fc2:	b990      	cbnz	r0, 8003fea <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8003fc4:	2a01      	cmp	r2, #1
 8003fc6:	d021      	beq.n	800400c <HAL_DMA_Init+0xc4>
 8003fc8:	f032 0202 	bics.w	r2, r2, #2
 8003fcc:	d129      	bne.n	8004022 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003fce:	01ea      	lsls	r2, r5, #7
 8003fd0:	d527      	bpl.n	8004022 <HAL_DMA_Init+0xda>
 8003fd2:	e01e      	b.n	8004012 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003fd4:	f7ff ff12 	bl	8003dfc <HAL_GetTick>
 8003fd8:	1b40      	subs	r0, r0, r5
 8003fda:	2805      	cmp	r0, #5
 8003fdc:	d9c6      	bls.n	8003f6c <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003fde:	2320      	movs	r3, #32
 8003fe0:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003fe2:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8003fe4:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8003fe8:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003fea:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8003fee:	d114      	bne.n	800401a <HAL_DMA_Init+0xd2>
    switch (tmp)
 8003ff0:	2a03      	cmp	r2, #3
 8003ff2:	d816      	bhi.n	8004022 <HAL_DMA_Init+0xda>
 8003ff4:	a001      	add	r0, pc, #4	; (adr r0, 8003ffc <HAL_DMA_Init+0xb4>)
 8003ff6:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8003ffa:	bf00      	nop
 8003ffc:	08004013 	.word	0x08004013
 8004000:	08003fcf 	.word	0x08003fcf
 8004004:	08004013 	.word	0x08004013
 8004008:	0800400d 	.word	0x0800400d
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800400c:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8004010:	d107      	bne.n	8004022 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8004012:	2340      	movs	r3, #64	; 0x40
 8004014:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8004016:	2001      	movs	r0, #1
 8004018:	e7e4      	b.n	8003fe4 <HAL_DMA_Init+0x9c>
    switch (tmp)
 800401a:	2a02      	cmp	r2, #2
 800401c:	d9f9      	bls.n	8004012 <HAL_DMA_Init+0xca>
 800401e:	2a03      	cmp	r2, #3
 8004020:	d0d5      	beq.n	8003fce <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8004022:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004024:	4620      	mov	r0, r4
 8004026:	f7ff ff79 	bl	8003f1c <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800402a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800402c:	233f      	movs	r3, #63	; 0x3f
 800402e:	4093      	lsls	r3, r2
 8004030:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004032:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8004034:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004036:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8004038:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800403c:	e7d4      	b.n	8003fe8 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 800403e:	2001      	movs	r0, #1
 8004040:	e7d2      	b.n	8003fe8 <HAL_DMA_Init+0xa0>
 8004042:	bf00      	nop
 8004044:	f010803f 	.word	0xf010803f

08004048 <HAL_DMA_DeInit>:
{
 8004048:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 800404a:	4605      	mov	r5, r0
 800404c:	b320      	cbz	r0, 8004098 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 800404e:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8004052:	2b02      	cmp	r3, #2
 8004054:	b2dc      	uxtb	r4, r3
 8004056:	d01d      	beq.n	8004094 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8004058:	6803      	ldr	r3, [r0, #0]
 800405a:	681a      	ldr	r2, [r3, #0]
 800405c:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8004060:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8004062:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8004064:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8004066:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8004068:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 800406a:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 800406c:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 800406e:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8004070:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004072:	f7ff ff53 	bl	8003f1c <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004076:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8004078:	233f      	movs	r3, #63	; 0x3f
 800407a:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 800407c:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8004080:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8004084:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004088:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800408a:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 800408c:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8004090:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8004094:	4620      	mov	r0, r4
 8004096:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004098:	2401      	movs	r4, #1
 800409a:	e7fb      	b.n	8004094 <HAL_DMA_DeInit+0x4c>

0800409c <HAL_DMA_Abort>:
{
 800409c:	b570      	push	{r4, r5, r6, lr}
 800409e:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80040a0:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 80040a2:	f7ff feab 	bl	8003dfc <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80040a6:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 80040aa:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 80040ac:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80040ae:	d006      	beq.n	80040be <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80040b0:	2380      	movs	r3, #128	; 0x80
 80040b2:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 80040b4:	2300      	movs	r3, #0
 80040b6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 80040ba:	2001      	movs	r0, #1
}
 80040bc:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80040be:	6823      	ldr	r3, [r4, #0]
 80040c0:	681a      	ldr	r2, [r3, #0]
 80040c2:	f022 0216 	bic.w	r2, r2, #22
 80040c6:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 80040c8:	695a      	ldr	r2, [r3, #20]
 80040ca:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80040ce:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80040d0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80040d2:	b90a      	cbnz	r2, 80040d8 <HAL_DMA_Abort+0x3c>
 80040d4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80040d6:	b11a      	cbz	r2, 80040e0 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 80040d8:	681a      	ldr	r2, [r3, #0]
 80040da:	f022 0208 	bic.w	r2, r2, #8
 80040de:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 80040e0:	681a      	ldr	r2, [r3, #0]
 80040e2:	f022 0201 	bic.w	r2, r2, #1
 80040e6:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80040e8:	6823      	ldr	r3, [r4, #0]
 80040ea:	681b      	ldr	r3, [r3, #0]
 80040ec:	f013 0301 	ands.w	r3, r3, #1
 80040f0:	d10a      	bne.n	8004108 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80040f2:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 80040f4:	223f      	movs	r2, #63	; 0x3f
 80040f6:	408a      	lsls	r2, r1
 80040f8:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 80040fa:	2201      	movs	r2, #1
 80040fc:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8004100:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8004104:	4618      	mov	r0, r3
 8004106:	e7d9      	b.n	80040bc <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004108:	f7ff fe78 	bl	8003dfc <HAL_GetTick>
 800410c:	1b40      	subs	r0, r0, r5
 800410e:	2805      	cmp	r0, #5
 8004110:	d9ea      	bls.n	80040e8 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8004112:	2320      	movs	r3, #32
 8004114:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8004116:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8004118:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800411a:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800411e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8004122:	e7cb      	b.n	80040bc <HAL_DMA_Abort+0x20>

08004124 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004124:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004126:	4604      	mov	r4, r0
 8004128:	b330      	cbz	r0, 8004178 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800412a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800412e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004132:	b91b      	cbnz	r3, 800413c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004134:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004138:	f7fd fcbe 	bl	8001ab8 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800413c:	6822      	ldr	r2, [r4, #0]
 800413e:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004140:	2302      	movs	r3, #2
 8004142:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004146:	6813      	ldr	r3, [r2, #0]
 8004148:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800414c:	430b      	orrs	r3, r1
 800414e:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004150:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004152:	68a1      	ldr	r1, [r4, #8]
 8004154:	f023 0307 	bic.w	r3, r3, #7
 8004158:	430b      	orrs	r3, r1
 800415a:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800415c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800415e:	68e1      	ldr	r1, [r4, #12]
 8004160:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8004164:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004168:	430b      	orrs	r3, r1
 800416a:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800416c:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800416e:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004170:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004172:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8004176:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004178:	2001      	movs	r0, #1
 800417a:	e7fc      	b.n	8004176 <HAL_DMA2D_Init+0x52>

0800417c <HAL_DMA2D_LineEventCallback>:
 800417c:	4770      	bx	lr

0800417e <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800417e:	4770      	bx	lr

08004180 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004180:	6803      	ldr	r3, [r0, #0]
{
 8004182:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004184:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004186:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004188:	07f2      	lsls	r2, r6, #31
{
 800418a:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800418c:	d514      	bpl.n	80041b8 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800418e:	05e9      	lsls	r1, r5, #23
 8004190:	d512      	bpl.n	80041b8 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004192:	681a      	ldr	r2, [r3, #0]
 8004194:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004198:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800419a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800419c:	f042 0201 	orr.w	r2, r2, #1
 80041a0:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80041a2:	2201      	movs	r2, #1
 80041a4:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80041a6:	2304      	movs	r3, #4
 80041a8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80041ac:	2300      	movs	r3, #0
 80041ae:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80041b2:	6943      	ldr	r3, [r0, #20]
 80041b4:	b103      	cbz	r3, 80041b8 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80041b6:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80041b8:	06b2      	lsls	r2, r6, #26
 80041ba:	d516      	bpl.n	80041ea <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80041bc:	04ab      	lsls	r3, r5, #18
 80041be:	d514      	bpl.n	80041ea <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80041c0:	6823      	ldr	r3, [r4, #0]
 80041c2:	681a      	ldr	r2, [r3, #0]
 80041c4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80041c8:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80041ca:	2220      	movs	r2, #32
 80041cc:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80041ce:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80041d0:	f043 0302 	orr.w	r3, r3, #2
 80041d4:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80041d6:	2304      	movs	r3, #4
 80041d8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80041dc:	2300      	movs	r3, #0
 80041de:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80041e2:	6963      	ldr	r3, [r4, #20]
 80041e4:	b10b      	cbz	r3, 80041ea <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80041e6:	4620      	mov	r0, r4
 80041e8:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80041ea:	0730      	lsls	r0, r6, #28
 80041ec:	d516      	bpl.n	800421c <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80041ee:	0529      	lsls	r1, r5, #20
 80041f0:	d514      	bpl.n	800421c <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80041f2:	6823      	ldr	r3, [r4, #0]
 80041f4:	681a      	ldr	r2, [r3, #0]
 80041f6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80041fa:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80041fc:	2208      	movs	r2, #8
 80041fe:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004200:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004202:	f043 0304 	orr.w	r3, r3, #4
 8004206:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004208:	2304      	movs	r3, #4
 800420a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800420e:	2300      	movs	r3, #0
 8004210:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004214:	6963      	ldr	r3, [r4, #20]
 8004216:	b10b      	cbz	r3, 800421c <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004218:	4620      	mov	r0, r4
 800421a:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800421c:	0772      	lsls	r2, r6, #29
 800421e:	d50b      	bpl.n	8004238 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004220:	056b      	lsls	r3, r5, #21
 8004222:	d509      	bpl.n	8004238 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004224:	6823      	ldr	r3, [r4, #0]
 8004226:	681a      	ldr	r2, [r3, #0]
 8004228:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800422c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800422e:	2204      	movs	r2, #4
 8004230:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004232:	4620      	mov	r0, r4
 8004234:	f7ff ffa2 	bl	800417c <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004238:	07b0      	lsls	r0, r6, #30
 800423a:	d514      	bpl.n	8004266 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800423c:	05a9      	lsls	r1, r5, #22
 800423e:	d512      	bpl.n	8004266 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004240:	6823      	ldr	r3, [r4, #0]
 8004242:	681a      	ldr	r2, [r3, #0]
 8004244:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004248:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800424a:	2202      	movs	r2, #2
 800424c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800424e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004250:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004252:	2301      	movs	r3, #1
 8004254:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004258:	2300      	movs	r3, #0
 800425a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800425e:	6923      	ldr	r3, [r4, #16]
 8004260:	b10b      	cbz	r3, 8004266 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8004262:	4620      	mov	r0, r4
 8004264:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004266:	06f2      	lsls	r2, r6, #27
 8004268:	d513      	bpl.n	8004292 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800426a:	04eb      	lsls	r3, r5, #19
 800426c:	d511      	bpl.n	8004292 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800426e:	6823      	ldr	r3, [r4, #0]
 8004270:	681a      	ldr	r2, [r3, #0]
 8004272:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004276:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004278:	2210      	movs	r2, #16
 800427a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800427c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800427e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004280:	2301      	movs	r3, #1
 8004282:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004286:	2300      	movs	r3, #0
 8004288:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800428c:	4620      	mov	r0, r4
 800428e:	f7ff ff76 	bl	800417e <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8004292:	bd70      	pop	{r4, r5, r6, pc}

08004294 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004294:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004296:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800429a:	2b01      	cmp	r3, #1
 800429c:	f04f 0302 	mov.w	r3, #2
 80042a0:	d02b      	beq.n	80042fa <HAL_DMA2D_ConfigLayer+0x66>
 80042a2:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80042a4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80042a8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80042ac:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80042b0:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80042b4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80042b6:	4f18      	ldr	r7, [pc, #96]	; (8004318 <HAL_DMA2D_ConfigLayer+0x84>)
 80042b8:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80042bc:	3c09      	subs	r4, #9
 80042be:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80042c0:	bf9c      	itt	ls
 80042c2:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80042c6:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80042c8:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80042cc:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80042ce:	bf88      	it	hi
 80042d0:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80042d4:	b999      	cbnz	r1, 80042fe <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80042d6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80042d8:	4039      	ands	r1, r7
 80042da:	430a      	orrs	r2, r1
 80042dc:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80042de:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80042e0:	6982      	ldr	r2, [r0, #24]
 80042e2:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80042e4:	d803      	bhi.n	80042ee <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80042e6:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80042e8:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80042ec:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80042ee:	2301      	movs	r3, #1
 80042f0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80042f4:	2300      	movs	r3, #0
 80042f6:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 80042fa:	4618      	mov	r0, r3

  return HAL_OK;
}
 80042fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80042fe:	69d9      	ldr	r1, [r3, #28]
 8004300:	4039      	ands	r1, r7
 8004302:	430a      	orrs	r2, r1
 8004304:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004306:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004308:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800430a:	6992      	ldr	r2, [r2, #24]
 800430c:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800430e:	bf9c      	itt	ls
 8004310:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8004314:	621d      	strls	r5, [r3, #32]
 8004316:	e7ea      	b.n	80042ee <HAL_DMA2D_ConfigLayer+0x5a>
 8004318:	00fcfff0 	.word	0x00fcfff0

0800431c <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800431c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004320:	4607      	mov	r7, r0
 8004322:	460d      	mov	r5, r1
 8004324:	4614      	mov	r4, r2
 8004326:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8004328:	f7ff fd68 	bl	8003dfc <HAL_GetTick>
 800432c:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800432e:	683b      	ldr	r3, [r7, #0]
 8004330:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8004332:	07d2      	lsls	r2, r2, #31
 8004334:	d50a      	bpl.n	800434c <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8004336:	9906      	ldr	r1, [sp, #24]
 8004338:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 800433c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8004340:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8004344:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 8004346:	2000      	movs	r0, #0
}
 8004348:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800434c:	f7ff fd56 	bl	8003dfc <HAL_GetTick>
 8004350:	eba0 0008 	sub.w	r0, r0, r8
 8004354:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004358:	d9e9      	bls.n	800432e <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800435a:	2003      	movs	r0, #3
 800435c:	e7f4      	b.n	8004348 <DSI_ShortWrite+0x2c>

0800435e <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800435e:	7c03      	ldrb	r3, [r0, #16]
 8004360:	2b01      	cmp	r3, #1
 8004362:	d05d      	beq.n	8004420 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8004364:	6803      	ldr	r3, [r0, #0]
 8004366:	2200      	movs	r2, #0
 8004368:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800436c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8004370:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8004372:	bf48      	it	mi
 8004374:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8004378:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800437a:	bf42      	ittt	mi
 800437c:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8004380:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8004384:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8004388:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800438a:	bf42      	ittt	mi
 800438c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8004390:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8004394:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8004398:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800439a:	bf42      	ittt	mi
 800439c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043a0:	f042 0201 	orrmi.w	r2, r2, #1
 80043a4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 80043a8:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 80043aa:	bf42      	ittt	mi
 80043ac:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043b0:	f042 0202 	orrmi.w	r2, r2, #2
 80043b4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 80043b8:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 80043ba:	bf42      	ittt	mi
 80043bc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043c0:	f042 020c 	orrmi.w	r2, r2, #12
 80043c4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 80043c8:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 80043ca:	bf42      	ittt	mi
 80043cc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043d0:	f042 0210 	orrmi.w	r2, r2, #16
 80043d4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 80043d8:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 80043da:	bf42      	ittt	mi
 80043dc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043e0:	f042 0220 	orrmi.w	r2, r2, #32
 80043e4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 80043e8:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 80043ea:	bf42      	ittt	mi
 80043ec:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043f0:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 80043f4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 80043f8:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 80043fa:	bf42      	ittt	mi
 80043fc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004400:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004404:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8004408:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800440a:	bf42      	ittt	mi
 800440c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004410:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8004414:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8004418:	2300      	movs	r3, #0
 800441a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800441c:	4618      	mov	r0, r3
 800441e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004420:	2002      	movs	r0, #2
}
 8004422:	4770      	bx	lr

08004424 <HAL_DSI_Init>:
{
 8004424:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004426:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8004428:	4604      	mov	r4, r0
 800442a:	2800      	cmp	r0, #0
 800442c:	f000 80a9 	beq.w	8004582 <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8004430:	7c43      	ldrb	r3, [r0, #17]
 8004432:	b90b      	cbnz	r3, 8004438 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8004434:	f7fd fb62 	bl	8001afc <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8004438:	2303      	movs	r3, #3
 800443a:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800443c:	2300      	movs	r3, #0
 800443e:	9300      	str	r3, [sp, #0]
 8004440:	6823      	ldr	r3, [r4, #0]
 8004442:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8004446:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800444a:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800444e:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8004452:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004456:	9300      	str	r3, [sp, #0]
 8004458:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800445a:	f7ff fccf 	bl	8003dfc <HAL_GetTick>
 800445e:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8004460:	6822      	ldr	r2, [r4, #0]
 8004462:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8004466:	04d9      	lsls	r1, r3, #19
 8004468:	d57a      	bpl.n	8004560 <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800446a:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800446e:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8004472:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 8004476:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800447a:	e9d5 0300 	ldrd	r0, r3, [r5]
 800447e:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8004480:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 8004484:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8004486:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800448a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800448e:	430b      	orrs	r3, r1
 8004490:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8004494:	2300      	movs	r3, #0
 8004496:	9301      	str	r3, [sp, #4]
 8004498:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800449c:	f043 0301 	orr.w	r3, r3, #1
 80044a0:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 80044a4:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80044a8:	f003 0301 	and.w	r3, r3, #1
 80044ac:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 80044ae:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 80044b0:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 80044b2:	f7ff fca9 	bl	8003e08 <HAL_Delay>
  tickstart = HAL_GetTick();
 80044b6:	f7ff fca1 	bl	8003dfc <HAL_GetTick>
 80044ba:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 80044bc:	6823      	ldr	r3, [r4, #0]
 80044be:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80044c2:	05d2      	lsls	r2, r2, #23
 80044c4:	d556      	bpl.n	8004574 <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 80044c6:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 80044ca:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 80044cc:	f042 0206 	orr.w	r2, r2, #6
 80044d0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 80044d4:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80044d8:	f022 0203 	bic.w	r2, r2, #3
 80044dc:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 80044e0:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80044e4:	430a      	orrs	r2, r1
 80044e6:	f042 0201 	orr.w	r2, r2, #1
 80044ea:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 80044ee:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 80044f2:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 80044f4:	f022 0203 	bic.w	r2, r2, #3
 80044f8:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 80044fc:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004500:	430a      	orrs	r2, r1
 8004502:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004506:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004508:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800450a:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800450e:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004510:	689a      	ldr	r2, [r3, #8]
 8004512:	430a      	orrs	r2, r1
 8004514:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8004516:	686a      	ldr	r2, [r5, #4]
 8004518:	491b      	ldr	r1, [pc, #108]	; (8004588 <HAL_DSI_Init+0x164>)
 800451a:	2a01      	cmp	r2, #1
 800451c:	bf38      	it	cc
 800451e:	2201      	movcc	r2, #1
 8004520:	434a      	muls	r2, r1
 8004522:	68a9      	ldr	r1, [r5, #8]
 8004524:	f001 0103 	and.w	r1, r1, #3
 8004528:	408a      	lsls	r2, r1
 800452a:	6829      	ldr	r1, [r5, #0]
 800452c:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 8004530:	4341      	muls	r1, r0
 8004532:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8004536:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800453a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800453e:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004542:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004546:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004548:	430a      	orrs	r2, r1
 800454a:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800454e:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8004552:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8004556:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8004558:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800455a:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800455c:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800455e:	e007      	b.n	8004570 <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004560:	f7ff fc4c 	bl	8003dfc <HAL_GetTick>
 8004564:	1b80      	subs	r0, r0, r6
 8004566:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800456a:	f67f af79 	bls.w	8004460 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800456e:	2003      	movs	r0, #3
}
 8004570:	b002      	add	sp, #8
 8004572:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004574:	f7ff fc42 	bl	8003dfc <HAL_GetTick>
 8004578:	1b80      	subs	r0, r0, r6
 800457a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800457e:	d99d      	bls.n	80044bc <HAL_DSI_Init+0x98>
 8004580:	e7f5      	b.n	800456e <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 8004582:	2001      	movs	r0, #1
 8004584:	e7f4      	b.n	8004570 <HAL_DSI_Init+0x14c>
 8004586:	bf00      	nop
 8004588:	003d0900 	.word	0x003d0900

0800458c <HAL_DSI_ErrorCallback>:
 800458c:	4770      	bx	lr

0800458e <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800458e:	6803      	ldr	r3, [r0, #0]
 8004590:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004594:	07d1      	lsls	r1, r2, #31
{
 8004596:	b510      	push	{r4, lr}
 8004598:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800459a:	d508      	bpl.n	80045ae <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800459c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80045a0:	07d2      	lsls	r2, r2, #31
 80045a2:	d504      	bpl.n	80045ae <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 80045a4:	2201      	movs	r2, #1
 80045a6:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 80045aa:	f7fc fac9 	bl	8000b40 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 80045ae:	6823      	ldr	r3, [r4, #0]
 80045b0:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80045b4:	0791      	lsls	r1, r2, #30
 80045b6:	d509      	bpl.n	80045cc <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 80045b8:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80045bc:	0792      	lsls	r2, r2, #30
 80045be:	d505      	bpl.n	80045cc <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 80045c0:	2202      	movs	r2, #2
 80045c2:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 80045c6:	4620      	mov	r0, r4
 80045c8:	f7fc faee 	bl	8000ba8 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 80045cc:	69a3      	ldr	r3, [r4, #24]
 80045ce:	2b00      	cmp	r3, #0
 80045d0:	d04e      	beq.n	8004670 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 80045d2:	6821      	ldr	r1, [r4, #0]
 80045d4:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80045d8:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 80045dc:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80045e0:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80045e2:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80045e6:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80045e8:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80045ea:	b119      	cbz	r1, 80045f4 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 80045ec:	6961      	ldr	r1, [r4, #20]
 80045ee:	f041 0101 	orr.w	r1, r1, #1
 80045f2:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 80045f4:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 80045f8:	bf1e      	ittt	ne
 80045fa:	6962      	ldrne	r2, [r4, #20]
 80045fc:	f042 0202 	orrne.w	r2, r2, #2
 8004600:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8004602:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8004604:	bf42      	ittt	mi
 8004606:	6962      	ldrmi	r2, [r4, #20]
 8004608:	f042 0204 	orrmi.w	r2, r2, #4
 800460c:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800460e:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8004610:	bf42      	ittt	mi
 8004612:	6962      	ldrmi	r2, [r4, #20]
 8004614:	f042 0208 	orrmi.w	r2, r2, #8
 8004618:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800461a:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800461e:	bf1e      	ittt	ne
 8004620:	6962      	ldrne	r2, [r4, #20]
 8004622:	f042 0210 	orrne.w	r2, r2, #16
 8004626:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8004628:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800462a:	bf42      	ittt	mi
 800462c:	6962      	ldrmi	r2, [r4, #20]
 800462e:	f042 0220 	orrmi.w	r2, r2, #32
 8004632:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8004634:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8004636:	bf42      	ittt	mi
 8004638:	6962      	ldrmi	r2, [r4, #20]
 800463a:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800463e:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8004640:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 8004642:	bf42      	ittt	mi
 8004644:	6962      	ldrmi	r2, [r4, #20]
 8004646:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800464a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800464c:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800464e:	bf42      	ittt	mi
 8004650:	6962      	ldrmi	r2, [r4, #20]
 8004652:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 8004656:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8004658:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800465c:	bf1e      	ittt	ne
 800465e:	6963      	ldrne	r3, [r4, #20]
 8004660:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8004664:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8004666:	6963      	ldr	r3, [r4, #20]
 8004668:	b113      	cbz	r3, 8004670 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800466a:	4620      	mov	r0, r4
 800466c:	f7ff ff8e 	bl	800458c <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8004670:	bd10      	pop	{r4, pc}

08004672 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004672:	7c03      	ldrb	r3, [r0, #16]
 8004674:	2b01      	cmp	r3, #1
 8004676:	d00b      	beq.n	8004690 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8004678:	6803      	ldr	r3, [r0, #0]
 800467a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800467c:	f022 0203 	bic.w	r2, r2, #3
 8004680:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8004682:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004684:	4311      	orrs	r1, r2
 8004686:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004688:	2300      	movs	r3, #0
 800468a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800468c:	4618      	mov	r0, r3
 800468e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004690:	2002      	movs	r0, #2
}
 8004692:	4770      	bx	lr

08004694 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8004694:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004696:	7c03      	ldrb	r3, [r0, #16]
 8004698:	2b01      	cmp	r3, #1
 800469a:	d06a      	beq.n	8004772 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800469c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800469e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 80046a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80046a2:	f042 0201 	orr.w	r2, r2, #1
 80046a6:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 80046a8:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80046ac:	f022 0201 	bic.w	r2, r2, #1
 80046b0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 80046b4:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80046b8:	f042 0201 	orr.w	r2, r2, #1
 80046bc:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 80046c0:	68da      	ldr	r2, [r3, #12]
 80046c2:	f022 0203 	bic.w	r2, r2, #3
 80046c6:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80046c8:	68da      	ldr	r2, [r3, #12]
 80046ca:	4322      	orrs	r2, r4
 80046cc:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 80046ce:	695a      	ldr	r2, [r3, #20]
 80046d0:	f022 0207 	bic.w	r2, r2, #7
 80046d4:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 80046d6:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 80046da:	432a      	orrs	r2, r5
 80046dc:	694d      	ldr	r5, [r1, #20]
 80046de:	695c      	ldr	r4, [r3, #20]
 80046e0:	432a      	orrs	r2, r5
 80046e2:	4322      	orrs	r2, r4
 80046e4:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80046e6:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80046e8:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80046ea:	f022 020f 	bic.w	r2, r2, #15
 80046ee:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80046f0:	691c      	ldr	r4, [r3, #16]
 80046f2:	432c      	orrs	r4, r5
 80046f4:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 80046f6:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80046fa:	f024 040e 	bic.w	r4, r4, #14
 80046fe:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004702:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004706:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004708:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800470c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8004710:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8004712:	0c12      	lsrs	r2, r2, #16
 8004714:	0412      	lsls	r2, r2, #16
 8004716:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004718:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800471a:	4322      	orrs	r2, r4
 800471c:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800471e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004722:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8004726:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800472a:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800472e:	432a      	orrs	r2, r5
 8004730:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8004732:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8004736:	432a      	orrs	r2, r5
 8004738:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800473a:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800473c:	432a      	orrs	r2, r5
 800473e:	4322      	orrs	r2, r4
 8004740:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8004744:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8004746:	f022 0201 	bic.w	r2, r2, #1
 800474a:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800474c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800474e:	430a      	orrs	r2, r1
 8004750:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 8004752:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004756:	f042 0201 	orr.w	r2, r2, #1
 800475a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800475e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004762:	f042 0202 	orr.w	r2, r2, #2
 8004766:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800476a:	2300      	movs	r3, #0
 800476c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800476e:	4618      	mov	r0, r3
}
 8004770:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004772:	2002      	movs	r0, #2
 8004774:	e7fc      	b.n	8004770 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08004778 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8004778:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800477a:	7c03      	ldrb	r3, [r0, #16]
 800477c:	2b01      	cmp	r3, #1
 800477e:	d02a      	beq.n	80047d6 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8004780:	6802      	ldr	r2, [r0, #0]
 8004782:	4b16      	ldr	r3, [pc, #88]	; (80047dc <HAL_DSI_ConfigCommand+0x64>)
 8004784:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8004786:	4023      	ands	r3, r4
 8004788:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800478a:	e9d1 3500 	ldrd	r3, r5, [r1]
 800478e:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8004790:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004792:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8004794:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 8004796:	68cd      	ldr	r5, [r1, #12]
 8004798:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800479a:	690d      	ldr	r5, [r1, #16]
 800479c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800479e:	694d      	ldr	r5, [r1, #20]
 80047a0:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 80047a2:	698d      	ldr	r5, [r1, #24]
 80047a4:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 80047a6:	69cd      	ldr	r5, [r1, #28]
 80047a8:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 80047aa:	6a0d      	ldr	r5, [r1, #32]
 80047ac:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 80047ae:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80047b0:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 80047b2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80047b4:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 80047b6:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80047b8:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 80047ba:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80047bc:	4323      	orrs	r3, r4
 80047be:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 80047c0:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80047c2:	f023 0302 	bic.w	r3, r3, #2
 80047c6:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80047c8:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80047ca:	430b      	orrs	r3, r1
 80047cc:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80047ce:	2300      	movs	r3, #0
 80047d0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80047d2:	4618      	mov	r0, r3
}
 80047d4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80047d6:	2002      	movs	r0, #2
 80047d8:	e7fc      	b.n	80047d4 <HAL_DSI_ConfigCommand+0x5c>
 80047da:	bf00      	nop
 80047dc:	fef080ff 	.word	0xfef080ff

080047e0 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80047e0:	7c03      	ldrb	r3, [r0, #16]
 80047e2:	2b01      	cmp	r3, #1
 80047e4:	d00b      	beq.n	80047fe <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 80047e6:	6803      	ldr	r3, [r0, #0]
 80047e8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80047ea:	f022 021f 	bic.w	r2, r2, #31
 80047ee:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 80047f0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80047f2:	4311      	orrs	r1, r2
 80047f4:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80047f6:	2300      	movs	r3, #0
 80047f8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80047fa:	4618      	mov	r0, r3
 80047fc:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80047fe:	2002      	movs	r0, #2
}
 8004800:	4770      	bx	lr

08004802 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8004802:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004804:	7c03      	ldrb	r3, [r0, #16]
 8004806:	2b01      	cmp	r3, #1
 8004808:	d035      	beq.n	8004876 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800480a:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800480e:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8004810:	4294      	cmp	r4, r2
 8004812:	bf38      	it	cc
 8004814:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8004816:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800481a:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800481e:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 8004822:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8004826:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800482a:	4322      	orrs	r2, r4
 800482c:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8004830:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8004834:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8004838:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800483c:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8004840:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8004842:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8004846:	690d      	ldr	r5, [r1, #16]
 8004848:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800484c:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800484e:	432a      	orrs	r2, r5
 8004850:	4322      	orrs	r2, r4
 8004852:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8004856:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800485a:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800485e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8004862:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004866:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800486a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800486e:	2300      	movs	r3, #0
 8004870:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004872:	4618      	mov	r0, r3
}
 8004874:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004876:	2002      	movs	r0, #2
 8004878:	e7fc      	b.n	8004874 <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800487c <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800487c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800487e:	7c03      	ldrb	r3, [r0, #16]
 8004880:	2b01      	cmp	r3, #1
 8004882:	d05c      	beq.n	800493e <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004884:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004886:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004888:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800488a:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800488c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8004890:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8004892:	689a      	ldr	r2, [r3, #8]
 8004894:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8004898:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800489a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800489c:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800489e:	b292      	uxth	r2, r2
 80048a0:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 80048a2:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 80048a4:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80048a8:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 80048aa:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80048ac:	4a25      	ldr	r2, [pc, #148]	; (8004944 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 80048ae:	4014      	ands	r4, r2
 80048b0:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 80048b2:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80048b4:	432c      	orrs	r4, r5
 80048b6:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80048b8:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80048ba:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80048bc:	4014      	ands	r4, r2
 80048be:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80048c0:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 80048c2:	432c      	orrs	r4, r5
 80048c4:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80048c6:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80048ca:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80048cc:	4014      	ands	r4, r2
 80048ce:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80048d2:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 80048d6:	432c      	orrs	r4, r5
 80048d8:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80048dc:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80048e0:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80048e2:	4014      	ands	r4, r2
 80048e4:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80048e8:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80048ec:	432c      	orrs	r4, r5
 80048ee:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 80048f2:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80048f6:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 80048fa:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 80048fe:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004902:	698d      	ldr	r5, [r1, #24]
 8004904:	432c      	orrs	r4, r5
 8004906:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800490a:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800490e:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004910:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8004912:	4014      	ands	r4, r2
 8004914:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8004918:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 800491c:	432c      	orrs	r4, r5
 800491e:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 8004922:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 8004926:	4022      	ands	r2, r4
 8004928:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800492c:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8004930:	430a      	orrs	r2, r1
 8004932:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004936:	2300      	movs	r3, #0
 8004938:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800493a:	4618      	mov	r0, r3
}
 800493c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800493e:	2002      	movs	r0, #2
 8004940:	e7fc      	b.n	800493c <HAL_DSI_ConfigHostTimeouts+0xc0>
 8004942:	bf00      	nop
 8004944:	ffff0000 	.word	0xffff0000

08004948 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004948:	7c03      	ldrb	r3, [r0, #16]
 800494a:	2b01      	cmp	r3, #1
{
 800494c:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800494e:	d01c      	beq.n	800498a <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8004950:	6802      	ldr	r2, [r0, #0]
 8004952:	2300      	movs	r3, #0
 8004954:	9300      	str	r3, [sp, #0]
 8004956:	6851      	ldr	r1, [r2, #4]
 8004958:	f041 0101 	orr.w	r1, r1, #1
 800495c:	6051      	str	r1, [r2, #4]
 800495e:	6851      	ldr	r1, [r2, #4]
 8004960:	f001 0101 	and.w	r1, r1, #1
 8004964:	9100      	str	r1, [sp, #0]
 8004966:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004968:	9301      	str	r3, [sp, #4]
 800496a:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800496e:	f041 0108 	orr.w	r1, r1, #8
 8004972:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8004976:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800497a:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800497c:	f002 0208 	and.w	r2, r2, #8
 8004980:	9201      	str	r2, [sp, #4]
 8004982:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8004984:	4618      	mov	r0, r3
}
 8004986:	b002      	add	sp, #8
 8004988:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800498a:	2002      	movs	r0, #2
 800498c:	e7fb      	b.n	8004986 <HAL_DSI_Start+0x3e>

0800498e <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800498e:	7c03      	ldrb	r3, [r0, #16]
 8004990:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 8004992:	bf1f      	itttt	ne
 8004994:	6802      	ldrne	r2, [r0, #0]
 8004996:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800499a:	f043 0304 	orrne.w	r3, r3, #4
 800499e:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80049a2:	bf1d      	ittte	ne
 80049a4:	2300      	movne	r3, #0
 80049a6:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 80049a8:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 80049aa:	2002      	moveq	r0, #2
}
 80049ac:	4770      	bx	lr

080049ae <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 80049ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 80049b0:	7c05      	ldrb	r5, [r0, #16]
 80049b2:	2d01      	cmp	r5, #1
{
 80049b4:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 80049b6:	d009      	beq.n	80049cc <HAL_DSI_ShortWrite+0x1e>
 80049b8:	2501      	movs	r5, #1
 80049ba:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 80049bc:	9d06      	ldr	r5, [sp, #24]
 80049be:	9500      	str	r5, [sp, #0]
 80049c0:	f7ff fcac 	bl	800431c <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80049c4:	2300      	movs	r3, #0
 80049c6:	7423      	strb	r3, [r4, #16]

  return status;
}
 80049c8:	b003      	add	sp, #12
 80049ca:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80049cc:	2002      	movs	r0, #2
 80049ce:	e7fb      	b.n	80049c8 <HAL_DSI_ShortWrite+0x1a>

080049d0 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 80049d0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049d4:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 80049d6:	7c03      	ldrb	r3, [r0, #16]
 80049d8:	2b01      	cmp	r3, #1
{
 80049da:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 80049de:	4606      	mov	r6, r0
 80049e0:	460f      	mov	r7, r1
 80049e2:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 80049e4:	d053      	beq.n	8004a8e <HAL_DSI_LongWrite+0xbe>
 80049e6:	2301      	movs	r3, #1
 80049e8:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 80049ea:	f7ff fa07 	bl	8003dfc <HAL_GetTick>
 80049ee:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80049f0:	6831      	ldr	r1, [r6, #0]
 80049f2:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 80049f4:	f013 0a01 	ands.w	sl, r3, #1
 80049f8:	d01a      	beq.n	8004a30 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80049fa:	2c03      	cmp	r4, #3
 80049fc:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 80049fe:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004a02:	bf28      	it	cs
 8004a04:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 8004a06:	4282      	cmp	r2, r0
 8004a08:	d11e      	bne.n	8004a48 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8004a0a:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 8004a0c:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 8004a10:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 8004a12:	bb1b      	cbnz	r3, 8004a5c <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8004a14:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8004a16:	0222      	lsls	r2, r4, #8
 8004a18:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 8004a1c:	b292      	uxth	r2, r2
 8004a1e:	0224      	lsls	r4, r4, #8
 8004a20:	4315      	orrs	r5, r2
 8004a22:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8004a26:	432c      	orrs	r4, r5
 8004a28:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 8004a2a:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8004a2c:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 8004a2e:	e009      	b.n	8004a44 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004a30:	f7ff f9e4 	bl	8003dfc <HAL_GetTick>
 8004a34:	eba0 000b 	sub.w	r0, r0, fp
 8004a38:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004a3c:	d9d8      	bls.n	80049f0 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 8004a3e:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 8004a42:	2003      	movs	r0, #3
}
 8004a44:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8004a48:	f818 3002 	ldrb.w	r3, [r8, r2]
 8004a4c:	3201      	adds	r2, #1
 8004a4e:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 8004a52:	fa03 f30c 	lsl.w	r3, r3, ip
 8004a56:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8004a5a:	e7d4      	b.n	8004a06 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004a5c:	2b04      	cmp	r3, #4
    fifoword = 0U;
 8004a5e:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004a62:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8004a64:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004a66:	bf28      	it	cs
 8004a68:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004a6c:	f812 8000 	ldrb.w	r8, [r2, r0]
 8004a70:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8004a74:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004a76:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8004a7a:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004a7c:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8004a80:	d1f4      	bne.n	8004a6c <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 8004a82:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 8004a86:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8004a8a:	4472      	add	r2, lr
 8004a8c:	e7c1      	b.n	8004a12 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8004a8e:	2002      	movs	r0, #2
 8004a90:	e7d8      	b.n	8004a44 <HAL_DSI_LongWrite+0x74>

08004a92 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004a92:	7c03      	ldrb	r3, [r0, #16]
 8004a94:	2b01      	cmp	r3, #1
 8004a96:	d010      	beq.n	8004aba <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8004a98:	6803      	ldr	r3, [r0, #0]
 8004a9a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004a9e:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8004aa2:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 8004aa6:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004aaa:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8004aae:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004ab2:	2300      	movs	r3, #0
 8004ab4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004ab6:	4618      	mov	r0, r3
 8004ab8:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004aba:	2002      	movs	r0, #2
}
 8004abc:	4770      	bx	lr
	...

08004ac0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004ac0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004ac4:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8004c88 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004ac8:	4a6d      	ldr	r2, [pc, #436]	; (8004c80 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004aca:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004acc:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004ace:	2401      	movs	r4, #1
 8004ad0:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004ad2:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8004ad6:	43ac      	bics	r4, r5
 8004ad8:	f040 80b9 	bne.w	8004c4e <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004adc:	684d      	ldr	r5, [r1, #4]
 8004ade:	f005 0403 	and.w	r4, r5, #3
 8004ae2:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004ae6:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004ae8:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004aea:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004aee:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004af0:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004af4:	d834      	bhi.n	8004b60 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8004af6:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004af8:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004afc:	68cf      	ldr	r7, [r1, #12]
 8004afe:	fa07 f708 	lsl.w	r7, r7, r8
 8004b02:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8004b06:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004b08:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004b0a:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004b0e:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004b12:	409f      	lsls	r7, r3
 8004b14:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8004b18:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8004b1a:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004b1c:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004b20:	688f      	ldr	r7, [r1, #8]
 8004b22:	fa07 f708 	lsl.w	r7, r7, r8
 8004b26:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004b2a:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8004b2c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004b2e:	d119      	bne.n	8004b64 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004b30:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004b34:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004b38:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004b3c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004b40:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004b44:	f04f 0e0f 	mov.w	lr, #15
 8004b48:	fa0e fe0b 	lsl.w	lr, lr, fp
 8004b4c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004b50:	690f      	ldr	r7, [r1, #16]
 8004b52:	fa07 f70b 	lsl.w	r7, r7, fp
 8004b56:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8004b5a:	f8ca 7020 	str.w	r7, [sl, #32]
 8004b5e:	e001      	b.n	8004b64 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004b60:	2c03      	cmp	r4, #3
 8004b62:	d1da      	bne.n	8004b1a <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8004b64:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004b66:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004b6a:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004b6c:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004b6e:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8004b72:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004b74:	d06b      	beq.n	8004c4e <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004b76:	f04f 0a00 	mov.w	sl, #0
 8004b7a:	f8cd a004 	str.w	sl, [sp, #4]
 8004b7e:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004b82:	4c40      	ldr	r4, [pc, #256]	; (8004c84 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004b84:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8004b88:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8004b8c:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8004b90:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8004b94:	9601      	str	r6, [sp, #4]
 8004b96:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004b98:	f023 0603 	bic.w	r6, r3, #3
 8004b9c:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8004ba0:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004ba4:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004ba8:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004bac:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004bb0:	270f      	movs	r7, #15
 8004bb2:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004bb6:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004bb8:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004bbc:	d04e      	beq.n	8004c5c <HAL_GPIO_Init+0x19c>
 8004bbe:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004bc2:	42a0      	cmp	r0, r4
 8004bc4:	d04c      	beq.n	8004c60 <HAL_GPIO_Init+0x1a0>
 8004bc6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004bca:	42a0      	cmp	r0, r4
 8004bcc:	d04a      	beq.n	8004c64 <HAL_GPIO_Init+0x1a4>
 8004bce:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004bd2:	42a0      	cmp	r0, r4
 8004bd4:	d048      	beq.n	8004c68 <HAL_GPIO_Init+0x1a8>
 8004bd6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004bda:	42a0      	cmp	r0, r4
 8004bdc:	d046      	beq.n	8004c6c <HAL_GPIO_Init+0x1ac>
 8004bde:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004be2:	42a0      	cmp	r0, r4
 8004be4:	d044      	beq.n	8004c70 <HAL_GPIO_Init+0x1b0>
 8004be6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004bea:	42a0      	cmp	r0, r4
 8004bec:	d042      	beq.n	8004c74 <HAL_GPIO_Init+0x1b4>
 8004bee:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004bf2:	42a0      	cmp	r0, r4
 8004bf4:	d040      	beq.n	8004c78 <HAL_GPIO_Init+0x1b8>
 8004bf6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004bfa:	42a0      	cmp	r0, r4
 8004bfc:	d03e      	beq.n	8004c7c <HAL_GPIO_Init+0x1bc>
 8004bfe:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004c02:	42a0      	cmp	r0, r4
 8004c04:	bf0c      	ite	eq
 8004c06:	2409      	moveq	r4, #9
 8004c08:	240a      	movne	r4, #10
 8004c0a:	fa04 f40e 	lsl.w	r4, r4, lr
 8004c0e:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004c10:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 8004c12:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8004c14:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8004c18:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8004c1a:	bf54      	ite	pl
 8004c1c:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004c1e:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8004c22:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8004c24:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8004c26:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8004c28:	bf54      	ite	pl
 8004c2a:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004c2c:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8004c30:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8004c32:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004c34:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8004c36:	bf54      	ite	pl
 8004c38:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004c3a:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8004c3e:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004c40:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004c42:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8004c44:	bf54      	ite	pl
 8004c46:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004c48:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8004c4c:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004c4e:	3301      	adds	r3, #1
 8004c50:	2b10      	cmp	r3, #16
 8004c52:	f47f af3b 	bne.w	8004acc <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8004c56:	b003      	add	sp, #12
 8004c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004c5c:	4654      	mov	r4, sl
 8004c5e:	e7d4      	b.n	8004c0a <HAL_GPIO_Init+0x14a>
 8004c60:	2401      	movs	r4, #1
 8004c62:	e7d2      	b.n	8004c0a <HAL_GPIO_Init+0x14a>
 8004c64:	2402      	movs	r4, #2
 8004c66:	e7d0      	b.n	8004c0a <HAL_GPIO_Init+0x14a>
 8004c68:	2403      	movs	r4, #3
 8004c6a:	e7ce      	b.n	8004c0a <HAL_GPIO_Init+0x14a>
 8004c6c:	2404      	movs	r4, #4
 8004c6e:	e7cc      	b.n	8004c0a <HAL_GPIO_Init+0x14a>
 8004c70:	2405      	movs	r4, #5
 8004c72:	e7ca      	b.n	8004c0a <HAL_GPIO_Init+0x14a>
 8004c74:	2406      	movs	r4, #6
 8004c76:	e7c8      	b.n	8004c0a <HAL_GPIO_Init+0x14a>
 8004c78:	2407      	movs	r4, #7
 8004c7a:	e7c6      	b.n	8004c0a <HAL_GPIO_Init+0x14a>
 8004c7c:	2408      	movs	r4, #8
 8004c7e:	e7c4      	b.n	8004c0a <HAL_GPIO_Init+0x14a>
 8004c80:	40013c00 	.word	0x40013c00
 8004c84:	40020000 	.word	0x40020000
 8004c88:	40023800 	.word	0x40023800

08004c8c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004c8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004c90:	4c4a      	ldr	r4, [pc, #296]	; (8004dbc <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004c92:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8004dc4 <HAL_GPIO_DeInit+0x138>
 8004c96:	f8df a130 	ldr.w	sl, [pc, #304]	; 8004dc8 <HAL_GPIO_DeInit+0x13c>
 8004c9a:	f8df b130 	ldr.w	fp, [pc, #304]	; 8004dcc <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004c9e:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8004ca0:	2301      	movs	r3, #1
 8004ca2:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8004ca6:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8004caa:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8004cae:	d16e      	bne.n	8004d8e <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004cb0:	f022 0503 	bic.w	r5, r2, #3
 8004cb4:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8004cb8:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004cbc:	4b40      	ldr	r3, [pc, #256]	; (8004dc0 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004cbe:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004cc2:	f002 0c03 	and.w	ip, r2, #3
 8004cc6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004cca:	260f      	movs	r6, #15
 8004ccc:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004cd0:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004cd2:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004cd6:	d05f      	beq.n	8004d98 <HAL_GPIO_DeInit+0x10c>
 8004cd8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004cdc:	4298      	cmp	r0, r3
 8004cde:	d05d      	beq.n	8004d9c <HAL_GPIO_DeInit+0x110>
 8004ce0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004ce4:	4298      	cmp	r0, r3
 8004ce6:	d05b      	beq.n	8004da0 <HAL_GPIO_DeInit+0x114>
 8004ce8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004cec:	4298      	cmp	r0, r3
 8004cee:	d059      	beq.n	8004da4 <HAL_GPIO_DeInit+0x118>
 8004cf0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004cf4:	4298      	cmp	r0, r3
 8004cf6:	d057      	beq.n	8004da8 <HAL_GPIO_DeInit+0x11c>
 8004cf8:	4548      	cmp	r0, r9
 8004cfa:	d057      	beq.n	8004dac <HAL_GPIO_DeInit+0x120>
 8004cfc:	4550      	cmp	r0, sl
 8004cfe:	d057      	beq.n	8004db0 <HAL_GPIO_DeInit+0x124>
 8004d00:	4558      	cmp	r0, fp
 8004d02:	d057      	beq.n	8004db4 <HAL_GPIO_DeInit+0x128>
 8004d04:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8004d08:	4298      	cmp	r0, r3
 8004d0a:	d055      	beq.n	8004db8 <HAL_GPIO_DeInit+0x12c>
 8004d0c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004d10:	4298      	cmp	r0, r3
 8004d12:	bf0c      	ite	eq
 8004d14:	2309      	moveq	r3, #9
 8004d16:	230a      	movne	r3, #10
 8004d18:	fa03 f30c 	lsl.w	r3, r3, ip
 8004d1c:	4543      	cmp	r3, r8
 8004d1e:	d113      	bne.n	8004d48 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004d20:	6823      	ldr	r3, [r4, #0]
 8004d22:	ea23 0307 	bic.w	r3, r3, r7
 8004d26:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8004d28:	6863      	ldr	r3, [r4, #4]
 8004d2a:	ea23 0307 	bic.w	r3, r3, r7
 8004d2e:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8004d30:	68e3      	ldr	r3, [r4, #12]
 8004d32:	ea23 0307 	bic.w	r3, r3, r7
 8004d36:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8004d38:	68a3      	ldr	r3, [r4, #8]
 8004d3a:	ea23 0307 	bic.w	r3, r3, r7
 8004d3e:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8004d40:	68ab      	ldr	r3, [r5, #8]
 8004d42:	ea23 0306 	bic.w	r3, r3, r6
 8004d46:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004d48:	6805      	ldr	r5, [r0, #0]
 8004d4a:	2603      	movs	r6, #3
 8004d4c:	0053      	lsls	r3, r2, #1
 8004d4e:	fa06 f303 	lsl.w	r3, r6, r3
 8004d52:	ea25 0503 	bic.w	r5, r5, r3
 8004d56:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004d58:	fa22 f506 	lsr.w	r5, r2, r6
 8004d5c:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8004d60:	f002 0c07 	and.w	ip, r2, #7
 8004d64:	6a2e      	ldr	r6, [r5, #32]
 8004d66:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004d6a:	270f      	movs	r7, #15
 8004d6c:	fa07 f70c 	lsl.w	r7, r7, ip
 8004d70:	ea26 0707 	bic.w	r7, r6, r7
 8004d74:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004d76:	68c5      	ldr	r5, [r0, #12]
 8004d78:	ea25 0503 	bic.w	r5, r5, r3
 8004d7c:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004d7e:	6845      	ldr	r5, [r0, #4]
 8004d80:	ea25 050e 	bic.w	r5, r5, lr
 8004d84:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004d86:	6885      	ldr	r5, [r0, #8]
 8004d88:	ea25 0303 	bic.w	r3, r5, r3
 8004d8c:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004d8e:	3201      	adds	r2, #1
 8004d90:	2a10      	cmp	r2, #16
 8004d92:	d185      	bne.n	8004ca0 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8004d94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004d98:	2300      	movs	r3, #0
 8004d9a:	e7bd      	b.n	8004d18 <HAL_GPIO_DeInit+0x8c>
 8004d9c:	2301      	movs	r3, #1
 8004d9e:	e7bb      	b.n	8004d18 <HAL_GPIO_DeInit+0x8c>
 8004da0:	2302      	movs	r3, #2
 8004da2:	e7b9      	b.n	8004d18 <HAL_GPIO_DeInit+0x8c>
 8004da4:	2303      	movs	r3, #3
 8004da6:	e7b7      	b.n	8004d18 <HAL_GPIO_DeInit+0x8c>
 8004da8:	2304      	movs	r3, #4
 8004daa:	e7b5      	b.n	8004d18 <HAL_GPIO_DeInit+0x8c>
 8004dac:	2305      	movs	r3, #5
 8004dae:	e7b3      	b.n	8004d18 <HAL_GPIO_DeInit+0x8c>
 8004db0:	2306      	movs	r3, #6
 8004db2:	e7b1      	b.n	8004d18 <HAL_GPIO_DeInit+0x8c>
 8004db4:	2307      	movs	r3, #7
 8004db6:	e7af      	b.n	8004d18 <HAL_GPIO_DeInit+0x8c>
 8004db8:	2308      	movs	r3, #8
 8004dba:	e7ad      	b.n	8004d18 <HAL_GPIO_DeInit+0x8c>
 8004dbc:	40013c00 	.word	0x40013c00
 8004dc0:	40020000 	.word	0x40020000
 8004dc4:	40021400 	.word	0x40021400
 8004dc8:	40021800 	.word	0x40021800
 8004dcc:	40021c00 	.word	0x40021c00

08004dd0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004dd0:	6903      	ldr	r3, [r0, #16]
 8004dd2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004dd4:	bf14      	ite	ne
 8004dd6:	2001      	movne	r0, #1
 8004dd8:	2000      	moveq	r0, #0
 8004dda:	4770      	bx	lr

08004ddc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004ddc:	b10a      	cbz	r2, 8004de2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004dde:	6181      	str	r1, [r0, #24]
  }
}
 8004de0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004de2:	0409      	lsls	r1, r1, #16
 8004de4:	e7fb      	b.n	8004dde <HAL_GPIO_WritePin+0x2>

08004de6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004de6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004de8:	ea01 0203 	and.w	r2, r1, r3
 8004dec:	ea21 0103 	bic.w	r1, r1, r3
 8004df0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004df4:	6181      	str	r1, [r0, #24]
}
 8004df6:	4770      	bx	lr

08004df8 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004df8:	6801      	ldr	r1, [r0, #0]
 8004dfa:	694b      	ldr	r3, [r1, #20]
 8004dfc:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004e00:	f04f 0200 	mov.w	r2, #0
 8004e04:	d010      	beq.n	8004e28 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004e06:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004e0a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8004e0c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8004e0e:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004e10:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004e14:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004e18:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004e1a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004e1e:	f043 0304 	orr.w	r3, r3, #4
 8004e22:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8004e24:	2001      	movs	r0, #1
 8004e26:	4770      	bx	lr
  }
  return HAL_OK;
 8004e28:	4618      	mov	r0, r3
}
 8004e2a:	4770      	bx	lr

08004e2c <I2C_WaitOnFlagUntilTimeout>:
{
 8004e2c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004e30:	4606      	mov	r6, r0
 8004e32:	460f      	mov	r7, r1
 8004e34:	4691      	mov	r9, r2
 8004e36:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004e38:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004e3c:	6833      	ldr	r3, [r6, #0]
 8004e3e:	f1ba 0f01 	cmp.w	sl, #1
 8004e42:	bf0c      	ite	eq
 8004e44:	695c      	ldreq	r4, [r3, #20]
 8004e46:	699c      	ldrne	r4, [r3, #24]
 8004e48:	ea27 0404 	bic.w	r4, r7, r4
 8004e4c:	b2a4      	uxth	r4, r4
 8004e4e:	fab4 f484 	clz	r4, r4
 8004e52:	0964      	lsrs	r4, r4, #5
 8004e54:	45a1      	cmp	r9, r4
 8004e56:	d001      	beq.n	8004e5c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004e58:	2000      	movs	r0, #0
 8004e5a:	e017      	b.n	8004e8c <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8004e5c:	1c6a      	adds	r2, r5, #1
 8004e5e:	d0ee      	beq.n	8004e3e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004e60:	f7fe ffcc 	bl	8003dfc <HAL_GetTick>
 8004e64:	9b08      	ldr	r3, [sp, #32]
 8004e66:	1ac0      	subs	r0, r0, r3
 8004e68:	42a8      	cmp	r0, r5
 8004e6a:	d801      	bhi.n	8004e70 <I2C_WaitOnFlagUntilTimeout+0x44>
 8004e6c:	2d00      	cmp	r5, #0
 8004e6e:	d1e5      	bne.n	8004e3c <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004e70:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004e72:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004e74:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004e76:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004e7a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004e7e:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004e80:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004e84:	f042 0220 	orr.w	r2, r2, #32
 8004e88:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8004e8a:	2001      	movs	r0, #1
}
 8004e8c:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004e90 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e94:	4604      	mov	r4, r0
 8004e96:	460f      	mov	r7, r1
 8004e98:	4616      	mov	r6, r2
 8004e9a:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004e9c:	6825      	ldr	r5, [r4, #0]
 8004e9e:	6968      	ldr	r0, [r5, #20]
 8004ea0:	ea27 0000 	bic.w	r0, r7, r0
 8004ea4:	b280      	uxth	r0, r0
 8004ea6:	b1b8      	cbz	r0, 8004ed8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004ea8:	696b      	ldr	r3, [r5, #20]
 8004eaa:	055a      	lsls	r2, r3, #21
 8004eac:	d516      	bpl.n	8004edc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004eae:	682b      	ldr	r3, [r5, #0]
 8004eb0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004eb4:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004eb6:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004eba:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004ebc:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004ebe:	2300      	movs	r3, #0
 8004ec0:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004ec2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004ec6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004eca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004ecc:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004ed0:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004ed2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004ed6:	2001      	movs	r0, #1
}
 8004ed8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004edc:	1c73      	adds	r3, r6, #1
 8004ede:	d0de      	beq.n	8004e9e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004ee0:	f7fe ff8c 	bl	8003dfc <HAL_GetTick>
 8004ee4:	eba0 0008 	sub.w	r0, r0, r8
 8004ee8:	42b0      	cmp	r0, r6
 8004eea:	d801      	bhi.n	8004ef0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8004eec:	2e00      	cmp	r6, #0
 8004eee:	d1d5      	bne.n	8004e9c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004ef0:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004ef2:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004ef4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004ef6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004efa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004efe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004f00:	f042 0220 	orr.w	r2, r2, #32
 8004f04:	e7e4      	b.n	8004ed0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08004f06 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004f06:	b570      	push	{r4, r5, r6, lr}
 8004f08:	4604      	mov	r4, r0
 8004f0a:	460d      	mov	r5, r1
 8004f0c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004f0e:	6821      	ldr	r1, [r4, #0]
 8004f10:	694b      	ldr	r3, [r1, #20]
 8004f12:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004f16:	d001      	beq.n	8004f1c <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004f18:	2000      	movs	r0, #0
 8004f1a:	e010      	b.n	8004f3e <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004f1c:	694a      	ldr	r2, [r1, #20]
 8004f1e:	06d2      	lsls	r2, r2, #27
 8004f20:	d50e      	bpl.n	8004f40 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004f22:	f06f 0210 	mvn.w	r2, #16
 8004f26:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f28:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004f2a:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f2c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f30:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004f34:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f36:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8004f38:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8004f3c:	2001      	movs	r0, #1
}
 8004f3e:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f40:	f7fe ff5c 	bl	8003dfc <HAL_GetTick>
 8004f44:	1b80      	subs	r0, r0, r6
 8004f46:	42a8      	cmp	r0, r5
 8004f48:	d801      	bhi.n	8004f4e <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004f4a:	2d00      	cmp	r5, #0
 8004f4c:	d1df      	bne.n	8004f0e <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004f4e:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f50:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004f52:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f54:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f58:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f5c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004f5e:	f042 0220 	orr.w	r2, r2, #32
 8004f62:	e7e8      	b.n	8004f36 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004f64 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004f64:	b570      	push	{r4, r5, r6, lr}
 8004f66:	4604      	mov	r4, r0
 8004f68:	460d      	mov	r5, r1
 8004f6a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004f6c:	6823      	ldr	r3, [r4, #0]
 8004f6e:	695b      	ldr	r3, [r3, #20]
 8004f70:	075b      	lsls	r3, r3, #29
 8004f72:	d501      	bpl.n	8004f78 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004f74:	2000      	movs	r0, #0
}
 8004f76:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004f78:	4620      	mov	r0, r4
 8004f7a:	f7ff ff3d 	bl	8004df8 <I2C_IsAcknowledgeFailed>
 8004f7e:	b9a8      	cbnz	r0, 8004fac <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004f80:	1c6a      	adds	r2, r5, #1
 8004f82:	d0f3      	beq.n	8004f6c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f84:	f7fe ff3a 	bl	8003dfc <HAL_GetTick>
 8004f88:	1b80      	subs	r0, r0, r6
 8004f8a:	42a8      	cmp	r0, r5
 8004f8c:	d801      	bhi.n	8004f92 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004f8e:	2d00      	cmp	r5, #0
 8004f90:	d1ec      	bne.n	8004f6c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004f92:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004f94:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004f96:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004f98:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f9c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004fa0:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004fa2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004fa6:	f042 0220 	orr.w	r2, r2, #32
 8004faa:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004fac:	2001      	movs	r0, #1
 8004fae:	e7e2      	b.n	8004f76 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004fb0 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004fb0:	b570      	push	{r4, r5, r6, lr}
 8004fb2:	4604      	mov	r4, r0
 8004fb4:	460d      	mov	r5, r1
 8004fb6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004fb8:	6823      	ldr	r3, [r4, #0]
 8004fba:	695b      	ldr	r3, [r3, #20]
 8004fbc:	061b      	lsls	r3, r3, #24
 8004fbe:	d501      	bpl.n	8004fc4 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004fc0:	2000      	movs	r0, #0
}
 8004fc2:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004fc4:	4620      	mov	r0, r4
 8004fc6:	f7ff ff17 	bl	8004df8 <I2C_IsAcknowledgeFailed>
 8004fca:	b9a8      	cbnz	r0, 8004ff8 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004fcc:	1c6a      	adds	r2, r5, #1
 8004fce:	d0f3      	beq.n	8004fb8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004fd0:	f7fe ff14 	bl	8003dfc <HAL_GetTick>
 8004fd4:	1b80      	subs	r0, r0, r6
 8004fd6:	42a8      	cmp	r0, r5
 8004fd8:	d801      	bhi.n	8004fde <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004fda:	2d00      	cmp	r5, #0
 8004fdc:	d1ec      	bne.n	8004fb8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004fde:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004fe0:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004fe2:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004fe4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004fe8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004fec:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004fee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004ff2:	f042 0220 	orr.w	r2, r2, #32
 8004ff6:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004ff8:	2001      	movs	r0, #1
 8004ffa:	e7e2      	b.n	8004fc2 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08004ffc <I2C_RequestMemoryWrite>:
{
 8004ffc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005000:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005002:	6802      	ldr	r2, [r0, #0]
{
 8005004:	b085      	sub	sp, #20
 8005006:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800500a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800500c:	6813      	ldr	r3, [r2, #0]
 800500e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005012:	6013      	str	r3, [r2, #0]
{
 8005014:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005016:	463b      	mov	r3, r7
 8005018:	f8cd 8000 	str.w	r8, [sp]
 800501c:	2200      	movs	r2, #0
 800501e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005022:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005024:	f7ff ff02 	bl	8004e2c <I2C_WaitOnFlagUntilTimeout>
 8005028:	6823      	ldr	r3, [r4, #0]
 800502a:	b138      	cbz	r0, 800503c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800502c:	681b      	ldr	r3, [r3, #0]
 800502e:	05db      	lsls	r3, r3, #23
 8005030:	d502      	bpl.n	8005038 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005032:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005036:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005038:	2003      	movs	r0, #3
 800503a:	e00a      	b.n	8005052 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800503c:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005040:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005042:	4919      	ldr	r1, [pc, #100]	; (80050a8 <I2C_RequestMemoryWrite+0xac>)
 8005044:	4643      	mov	r3, r8
 8005046:	463a      	mov	r2, r7
 8005048:	4620      	mov	r0, r4
 800504a:	f7ff ff21 	bl	8004e90 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800504e:	b118      	cbz	r0, 8005058 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8005050:	2001      	movs	r0, #1
}
 8005052:	b005      	add	sp, #20
 8005054:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005058:	6823      	ldr	r3, [r4, #0]
 800505a:	9003      	str	r0, [sp, #12]
 800505c:	695a      	ldr	r2, [r3, #20]
 800505e:	9203      	str	r2, [sp, #12]
 8005060:	699b      	ldr	r3, [r3, #24]
 8005062:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005064:	4642      	mov	r2, r8
 8005066:	4639      	mov	r1, r7
 8005068:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800506a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800506c:	f7ff ffa0 	bl	8004fb0 <I2C_WaitOnTXEFlagUntilTimeout>
 8005070:	b140      	cbz	r0, 8005084 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005072:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005074:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005076:	bf01      	itttt	eq
 8005078:	6822      	ldreq	r2, [r4, #0]
 800507a:	6813      	ldreq	r3, [r2, #0]
 800507c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005080:	6013      	streq	r3, [r2, #0]
 8005082:	e7e5      	b.n	8005050 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005084:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005088:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800508a:	d102      	bne.n	8005092 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800508c:	b2ed      	uxtb	r5, r5
 800508e:	611d      	str	r5, [r3, #16]
 8005090:	e7df      	b.n	8005052 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005092:	0a2a      	lsrs	r2, r5, #8
 8005094:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005096:	4639      	mov	r1, r7
 8005098:	4642      	mov	r2, r8
 800509a:	4620      	mov	r0, r4
 800509c:	f7ff ff88 	bl	8004fb0 <I2C_WaitOnTXEFlagUntilTimeout>
 80050a0:	2800      	cmp	r0, #0
 80050a2:	d1e6      	bne.n	8005072 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80050a4:	6823      	ldr	r3, [r4, #0]
 80050a6:	e7f1      	b.n	800508c <I2C_RequestMemoryWrite+0x90>
 80050a8:	00010002 	.word	0x00010002

080050ac <I2C_RequestMemoryRead>:
{
 80050ac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80050b0:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80050b2:	6803      	ldr	r3, [r0, #0]
{
 80050b4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80050b6:	681a      	ldr	r2, [r3, #0]
 80050b8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80050bc:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80050be:	681a      	ldr	r2, [r3, #0]
{
 80050c0:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80050c4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80050c8:	601a      	str	r2, [r3, #0]
{
 80050ca:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80050cc:	463b      	mov	r3, r7
 80050ce:	f8cd 8000 	str.w	r8, [sp]
 80050d2:	2200      	movs	r2, #0
 80050d4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80050d8:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80050da:	f7ff fea7 	bl	8004e2c <I2C_WaitOnFlagUntilTimeout>
 80050de:	6823      	ldr	r3, [r4, #0]
 80050e0:	b148      	cbz	r0, 80050f6 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80050e2:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80050e4:	05db      	lsls	r3, r3, #23
 80050e6:	d502      	bpl.n	80050ee <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80050e8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80050ec:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80050ee:	2003      	movs	r0, #3
}
 80050f0:	b004      	add	sp, #16
 80050f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80050f6:	fa5f f986 	uxtb.w	r9, r6
 80050fa:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80050fe:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005100:	492a      	ldr	r1, [pc, #168]	; (80051ac <I2C_RequestMemoryRead+0x100>)
 8005102:	4643      	mov	r3, r8
 8005104:	463a      	mov	r2, r7
 8005106:	4620      	mov	r0, r4
 8005108:	f7ff fec2 	bl	8004e90 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800510c:	b108      	cbz	r0, 8005112 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800510e:	2001      	movs	r0, #1
 8005110:	e7ee      	b.n	80050f0 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005112:	6823      	ldr	r3, [r4, #0]
 8005114:	9003      	str	r0, [sp, #12]
 8005116:	695a      	ldr	r2, [r3, #20]
 8005118:	9203      	str	r2, [sp, #12]
 800511a:	699b      	ldr	r3, [r3, #24]
 800511c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800511e:	4642      	mov	r2, r8
 8005120:	4639      	mov	r1, r7
 8005122:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005124:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005126:	f7ff ff43 	bl	8004fb0 <I2C_WaitOnTXEFlagUntilTimeout>
 800512a:	b140      	cbz	r0, 800513e <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800512c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800512e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005130:	bf01      	itttt	eq
 8005132:	6822      	ldreq	r2, [r4, #0]
 8005134:	6813      	ldreq	r3, [r2, #0]
 8005136:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800513a:	6013      	streq	r3, [r2, #0]
 800513c:	e7e7      	b.n	800510e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800513e:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005142:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005144:	d11a      	bne.n	800517c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005146:	b2ed      	uxtb	r5, r5
 8005148:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800514a:	4642      	mov	r2, r8
 800514c:	4639      	mov	r1, r7
 800514e:	4620      	mov	r0, r4
 8005150:	f7ff ff2e 	bl	8004fb0 <I2C_WaitOnTXEFlagUntilTimeout>
 8005154:	2800      	cmp	r0, #0
 8005156:	d1e9      	bne.n	800512c <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005158:	6822      	ldr	r2, [r4, #0]
 800515a:	6813      	ldr	r3, [r2, #0]
 800515c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005160:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005162:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005166:	4602      	mov	r2, r0
 8005168:	f8cd 8000 	str.w	r8, [sp]
 800516c:	463b      	mov	r3, r7
 800516e:	4620      	mov	r0, r4
 8005170:	f7ff fe5c 	bl	8004e2c <I2C_WaitOnFlagUntilTimeout>
 8005174:	6822      	ldr	r2, [r4, #0]
 8005176:	b160      	cbz	r0, 8005192 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005178:	6813      	ldr	r3, [r2, #0]
 800517a:	e7b3      	b.n	80050e4 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800517c:	0a2a      	lsrs	r2, r5, #8
 800517e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005180:	4639      	mov	r1, r7
 8005182:	4642      	mov	r2, r8
 8005184:	4620      	mov	r0, r4
 8005186:	f7ff ff13 	bl	8004fb0 <I2C_WaitOnTXEFlagUntilTimeout>
 800518a:	2800      	cmp	r0, #0
 800518c:	d1ce      	bne.n	800512c <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800518e:	6823      	ldr	r3, [r4, #0]
 8005190:	e7d9      	b.n	8005146 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005192:	f049 0301 	orr.w	r3, r9, #1
 8005196:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005198:	4904      	ldr	r1, [pc, #16]	; (80051ac <I2C_RequestMemoryRead+0x100>)
 800519a:	4643      	mov	r3, r8
 800519c:	463a      	mov	r2, r7
 800519e:	4620      	mov	r0, r4
 80051a0:	f7ff fe76 	bl	8004e90 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80051a4:	3800      	subs	r0, #0
 80051a6:	bf18      	it	ne
 80051a8:	2001      	movne	r0, #1
 80051aa:	e7a1      	b.n	80050f0 <I2C_RequestMemoryRead+0x44>
 80051ac:	00010002 	.word	0x00010002

080051b0 <HAL_I2C_Init>:
{
 80051b0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80051b2:	4604      	mov	r4, r0
 80051b4:	b908      	cbnz	r0, 80051ba <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80051b6:	2001      	movs	r0, #1
}
 80051b8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80051ba:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80051be:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80051c2:	b91b      	cbnz	r3, 80051cc <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80051c4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80051c8:	f7fc fcd4 	bl	8001b74 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80051cc:	2324      	movs	r3, #36	; 0x24
 80051ce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80051d2:	6823      	ldr	r3, [r4, #0]
 80051d4:	681a      	ldr	r2, [r3, #0]
 80051d6:	f022 0201 	bic.w	r2, r2, #1
 80051da:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80051dc:	681a      	ldr	r2, [r3, #0]
 80051de:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80051e2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80051e4:	681a      	ldr	r2, [r3, #0]
 80051e6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80051ea:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80051ec:	f001 f814 	bl	8006218 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80051f0:	4b3f      	ldr	r3, [pc, #252]	; (80052f0 <HAL_I2C_Init+0x140>)
 80051f2:	6865      	ldr	r5, [r4, #4]
 80051f4:	429d      	cmp	r5, r3
 80051f6:	bf94      	ite	ls
 80051f8:	4b3e      	ldrls	r3, [pc, #248]	; (80052f4 <HAL_I2C_Init+0x144>)
 80051fa:	4b3f      	ldrhi	r3, [pc, #252]	; (80052f8 <HAL_I2C_Init+0x148>)
 80051fc:	4298      	cmp	r0, r3
 80051fe:	bf8c      	ite	hi
 8005200:	2300      	movhi	r3, #0
 8005202:	2301      	movls	r3, #1
 8005204:	2b00      	cmp	r3, #0
 8005206:	d1d6      	bne.n	80051b6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005208:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800520a:	4e39      	ldr	r6, [pc, #228]	; (80052f0 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800520c:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800520e:	493b      	ldr	r1, [pc, #236]	; (80052fc <HAL_I2C_Init+0x14c>)
 8005210:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005214:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005218:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800521a:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800521c:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800521e:	bf88      	it	hi
 8005220:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8005224:	6a13      	ldr	r3, [r2, #32]
 8005226:	bf88      	it	hi
 8005228:	4371      	mulhi	r1, r6
 800522a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800522e:	bf84      	itt	hi
 8005230:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8005234:	fbb1 f1f6 	udivhi	r1, r1, r6
 8005238:	3101      	adds	r1, #1
 800523a:	4319      	orrs	r1, r3
 800523c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800523e:	69d1      	ldr	r1, [r2, #28]
 8005240:	1e43      	subs	r3, r0, #1
 8005242:	482b      	ldr	r0, [pc, #172]	; (80052f0 <HAL_I2C_Init+0x140>)
 8005244:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005248:	4285      	cmp	r5, r0
 800524a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800524e:	d832      	bhi.n	80052b6 <HAL_I2C_Init+0x106>
 8005250:	006d      	lsls	r5, r5, #1
 8005252:	f640 70fc 	movw	r0, #4092	; 0xffc
 8005256:	fbb3 f3f5 	udiv	r3, r3, r5
 800525a:	3301      	adds	r3, #1
 800525c:	4203      	tst	r3, r0
 800525e:	d042      	beq.n	80052e6 <HAL_I2C_Init+0x136>
 8005260:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005264:	430b      	orrs	r3, r1
 8005266:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005268:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800526c:	6811      	ldr	r1, [r2, #0]
 800526e:	4303      	orrs	r3, r0
 8005270:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8005274:	430b      	orrs	r3, r1
 8005276:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005278:	6891      	ldr	r1, [r2, #8]
 800527a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800527e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8005282:	4303      	orrs	r3, r0
 8005284:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005288:	430b      	orrs	r3, r1
 800528a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800528c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005290:	68d1      	ldr	r1, [r2, #12]
 8005292:	4303      	orrs	r3, r0
 8005294:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005298:	430b      	orrs	r3, r1
 800529a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800529c:	6813      	ldr	r3, [r2, #0]
 800529e:	f043 0301 	orr.w	r3, r3, #1
 80052a2:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80052a4:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80052a6:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80052a8:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80052aa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80052ae:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80052b0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80052b4:	e780      	b.n	80051b8 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80052b6:	68a0      	ldr	r0, [r4, #8]
 80052b8:	b950      	cbnz	r0, 80052d0 <HAL_I2C_Init+0x120>
 80052ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80052be:	fbb3 f3f5 	udiv	r3, r3, r5
 80052c2:	3301      	adds	r3, #1
 80052c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80052c8:	b17b      	cbz	r3, 80052ea <HAL_I2C_Init+0x13a>
 80052ca:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80052ce:	e7c9      	b.n	8005264 <HAL_I2C_Init+0xb4>
 80052d0:	2019      	movs	r0, #25
 80052d2:	4345      	muls	r5, r0
 80052d4:	fbb3 f3f5 	udiv	r3, r3, r5
 80052d8:	3301      	adds	r3, #1
 80052da:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80052de:	b123      	cbz	r3, 80052ea <HAL_I2C_Init+0x13a>
 80052e0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80052e4:	e7be      	b.n	8005264 <HAL_I2C_Init+0xb4>
 80052e6:	2304      	movs	r3, #4
 80052e8:	e7bc      	b.n	8005264 <HAL_I2C_Init+0xb4>
 80052ea:	2301      	movs	r3, #1
 80052ec:	e7ba      	b.n	8005264 <HAL_I2C_Init+0xb4>
 80052ee:	bf00      	nop
 80052f0:	000186a0 	.word	0x000186a0
 80052f4:	001e847f 	.word	0x001e847f
 80052f8:	003d08ff 	.word	0x003d08ff
 80052fc:	000f4240 	.word	0x000f4240

08005300 <HAL_I2C_DeInit>:
{
 8005300:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005302:	4604      	mov	r4, r0
 8005304:	b198      	cbz	r0, 800532e <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8005306:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005308:	2324      	movs	r3, #36	; 0x24
 800530a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800530e:	6813      	ldr	r3, [r2, #0]
 8005310:	f023 0301 	bic.w	r3, r3, #1
 8005314:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8005316:	f7fc fc71 	bl	8001bfc <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800531a:	2000      	movs	r0, #0
 800531c:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800531e:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8005322:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005326:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8005328:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 800532c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800532e:	2001      	movs	r0, #1
 8005330:	e7fc      	b.n	800532c <HAL_I2C_DeInit+0x2c>
	...

08005334 <HAL_I2C_Mem_Write>:
{
 8005334:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005338:	4604      	mov	r4, r0
 800533a:	4699      	mov	r9, r3
 800533c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800533e:	460f      	mov	r7, r1
 8005340:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005342:	f7fe fd5b 	bl	8003dfc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005346:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800534a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800534c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800534e:	d003      	beq.n	8005358 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8005350:	2002      	movs	r0, #2
}
 8005352:	b003      	add	sp, #12
 8005354:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005358:	9000      	str	r0, [sp, #0]
 800535a:	493c      	ldr	r1, [pc, #240]	; (800544c <HAL_I2C_Mem_Write+0x118>)
 800535c:	2319      	movs	r3, #25
 800535e:	2201      	movs	r2, #1
 8005360:	4620      	mov	r0, r4
 8005362:	f7ff fd63 	bl	8004e2c <I2C_WaitOnFlagUntilTimeout>
 8005366:	2800      	cmp	r0, #0
 8005368:	d1f2      	bne.n	8005350 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800536a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800536e:	2b01      	cmp	r3, #1
 8005370:	d0ee      	beq.n	8005350 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005372:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005374:	2301      	movs	r3, #1
 8005376:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800537a:	6803      	ldr	r3, [r0, #0]
 800537c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800537e:	bf5e      	ittt	pl
 8005380:	6803      	ldrpl	r3, [r0, #0]
 8005382:	f043 0301 	orrpl.w	r3, r3, #1
 8005386:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005388:	6803      	ldr	r3, [r0, #0]
 800538a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800538e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005390:	2321      	movs	r3, #33	; 0x21
 8005392:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005396:	2340      	movs	r3, #64	; 0x40
 8005398:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800539c:	2300      	movs	r3, #0
 800539e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80053a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80053a2:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80053a4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80053a8:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80053aa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80053ac:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80053ae:	4b28      	ldr	r3, [pc, #160]	; (8005450 <HAL_I2C_Mem_Write+0x11c>)
 80053b0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80053b2:	e9cd 6500 	strd	r6, r5, [sp]
 80053b6:	464b      	mov	r3, r9
 80053b8:	4642      	mov	r2, r8
 80053ba:	4639      	mov	r1, r7
 80053bc:	4620      	mov	r0, r4
 80053be:	f7ff fe1d 	bl	8004ffc <I2C_RequestMemoryWrite>
 80053c2:	2800      	cmp	r0, #0
 80053c4:	d02a      	beq.n	800541c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80053c6:	2001      	movs	r0, #1
 80053c8:	e7c3      	b.n	8005352 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80053ca:	f7ff fdf1 	bl	8004fb0 <I2C_WaitOnTXEFlagUntilTimeout>
 80053ce:	b140      	cbz	r0, 80053e2 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80053d0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80053d2:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80053d4:	bf01      	itttt	eq
 80053d6:	6822      	ldreq	r2, [r4, #0]
 80053d8:	6813      	ldreq	r3, [r2, #0]
 80053da:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80053de:	6013      	streq	r3, [r2, #0]
 80053e0:	e7f1      	b.n	80053c6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80053e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80053e4:	6827      	ldr	r7, [r4, #0]
 80053e6:	461a      	mov	r2, r3
 80053e8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80053ec:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80053ee:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80053f0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80053f2:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80053f4:	3a01      	subs	r2, #1
 80053f6:	b292      	uxth	r2, r2
 80053f8:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80053fa:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80053fc:	1e48      	subs	r0, r1, #1
 80053fe:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005400:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005402:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005404:	d50a      	bpl.n	800541c <HAL_I2C_Mem_Write+0xe8>
 8005406:	b148      	cbz	r0, 800541c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005408:	785a      	ldrb	r2, [r3, #1]
 800540a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800540c:	3302      	adds	r3, #2
 800540e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005410:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005412:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005414:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005416:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005418:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800541a:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800541c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800541e:	462a      	mov	r2, r5
 8005420:	4631      	mov	r1, r6
 8005422:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005424:	2b00      	cmp	r3, #0
 8005426:	d1d0      	bne.n	80053ca <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005428:	f7ff fd9c 	bl	8004f64 <I2C_WaitOnBTFFlagUntilTimeout>
 800542c:	2800      	cmp	r0, #0
 800542e:	d1cf      	bne.n	80053d0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005430:	6822      	ldr	r2, [r4, #0]
 8005432:	6813      	ldr	r3, [r2, #0]
 8005434:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005438:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800543a:	2320      	movs	r3, #32
 800543c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005440:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005444:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8005448:	e783      	b.n	8005352 <HAL_I2C_Mem_Write+0x1e>
 800544a:	bf00      	nop
 800544c:	00100002 	.word	0x00100002
 8005450:	ffff0000 	.word	0xffff0000

08005454 <HAL_I2C_Mem_Read>:
{
 8005454:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005458:	4604      	mov	r4, r0
 800545a:	b087      	sub	sp, #28
 800545c:	4699      	mov	r9, r3
 800545e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8005460:	460d      	mov	r5, r1
 8005462:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005464:	f7fe fcca 	bl	8003dfc <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005468:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800546c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800546e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005470:	d004      	beq.n	800547c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8005472:	2502      	movs	r5, #2
}
 8005474:	4628      	mov	r0, r5
 8005476:	b007      	add	sp, #28
 8005478:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800547c:	9000      	str	r0, [sp, #0]
 800547e:	4976      	ldr	r1, [pc, #472]	; (8005658 <HAL_I2C_Mem_Read+0x204>)
 8005480:	2319      	movs	r3, #25
 8005482:	2201      	movs	r2, #1
 8005484:	4620      	mov	r0, r4
 8005486:	f7ff fcd1 	bl	8004e2c <I2C_WaitOnFlagUntilTimeout>
 800548a:	2800      	cmp	r0, #0
 800548c:	d1f1      	bne.n	8005472 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800548e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005492:	2b01      	cmp	r3, #1
 8005494:	d0ed      	beq.n	8005472 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005496:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005498:	2301      	movs	r3, #1
 800549a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800549e:	6803      	ldr	r3, [r0, #0]
 80054a0:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80054a2:	bf5e      	ittt	pl
 80054a4:	6803      	ldrpl	r3, [r0, #0]
 80054a6:	f043 0301 	orrpl.w	r3, r3, #1
 80054aa:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80054ac:	6803      	ldr	r3, [r0, #0]
 80054ae:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80054b2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80054b4:	2322      	movs	r3, #34	; 0x22
 80054b6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80054ba:	2340      	movs	r3, #64	; 0x40
 80054bc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80054c0:	2300      	movs	r3, #0
 80054c2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80054c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80054c6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80054c8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80054cc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80054ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80054d0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80054d2:	4b62      	ldr	r3, [pc, #392]	; (800565c <HAL_I2C_Mem_Read+0x208>)
 80054d4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80054d6:	4629      	mov	r1, r5
 80054d8:	e9cd 7600 	strd	r7, r6, [sp]
 80054dc:	464b      	mov	r3, r9
 80054de:	4642      	mov	r2, r8
 80054e0:	4620      	mov	r0, r4
 80054e2:	f7ff fde3 	bl	80050ac <I2C_RequestMemoryRead>
 80054e6:	4605      	mov	r5, r0
 80054e8:	b108      	cbz	r0, 80054ee <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80054ea:	2501      	movs	r5, #1
 80054ec:	e7c2      	b.n	8005474 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80054ee:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80054f0:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80054f2:	b9b2      	cbnz	r2, 8005522 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80054f4:	9002      	str	r0, [sp, #8]
 80054f6:	695a      	ldr	r2, [r3, #20]
 80054f8:	9202      	str	r2, [sp, #8]
 80054fa:	699a      	ldr	r2, [r3, #24]
 80054fc:	9202      	str	r2, [sp, #8]
 80054fe:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005500:	681a      	ldr	r2, [r3, #0]
 8005502:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005506:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005508:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8005660 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800550c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800550e:	2b00      	cmp	r3, #0
 8005510:	d12c      	bne.n	800556c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005512:	2220      	movs	r2, #32
 8005514:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005518:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800551c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8005520:	e7a8      	b.n	8005474 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005522:	2a01      	cmp	r2, #1
 8005524:	d10a      	bne.n	800553c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005526:	681a      	ldr	r2, [r3, #0]
 8005528:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800552c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800552e:	9003      	str	r0, [sp, #12]
 8005530:	695a      	ldr	r2, [r3, #20]
 8005532:	9203      	str	r2, [sp, #12]
 8005534:	699a      	ldr	r2, [r3, #24]
 8005536:	9203      	str	r2, [sp, #12]
 8005538:	9a03      	ldr	r2, [sp, #12]
 800553a:	e7e1      	b.n	8005500 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800553c:	2a02      	cmp	r2, #2
 800553e:	d10e      	bne.n	800555e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005540:	681a      	ldr	r2, [r3, #0]
 8005542:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005546:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005548:	681a      	ldr	r2, [r3, #0]
 800554a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800554e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005550:	9004      	str	r0, [sp, #16]
 8005552:	695a      	ldr	r2, [r3, #20]
 8005554:	9204      	str	r2, [sp, #16]
 8005556:	699b      	ldr	r3, [r3, #24]
 8005558:	9304      	str	r3, [sp, #16]
 800555a:	9b04      	ldr	r3, [sp, #16]
 800555c:	e7d4      	b.n	8005508 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800555e:	9005      	str	r0, [sp, #20]
 8005560:	695a      	ldr	r2, [r3, #20]
 8005562:	9205      	str	r2, [sp, #20]
 8005564:	699b      	ldr	r3, [r3, #24]
 8005566:	9305      	str	r3, [sp, #20]
 8005568:	9b05      	ldr	r3, [sp, #20]
 800556a:	e7cd      	b.n	8005508 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800556c:	2b03      	cmp	r3, #3
 800556e:	d856      	bhi.n	800561e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005570:	2b01      	cmp	r3, #1
 8005572:	d115      	bne.n	80055a0 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005574:	4632      	mov	r2, r6
 8005576:	4639      	mov	r1, r7
 8005578:	4620      	mov	r0, r4
 800557a:	f7ff fcc4 	bl	8004f06 <I2C_WaitOnRXNEFlagUntilTimeout>
 800557e:	2800      	cmp	r0, #0
 8005580:	d1b3      	bne.n	80054ea <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005582:	6823      	ldr	r3, [r4, #0]
 8005584:	691a      	ldr	r2, [r3, #16]
 8005586:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005588:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800558a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800558c:	3301      	adds	r3, #1
 800558e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005590:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005592:	3b01      	subs	r3, #1
 8005594:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005596:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005598:	3b01      	subs	r3, #1
 800559a:	b29b      	uxth	r3, r3
 800559c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800559e:	e7b5      	b.n	800550c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80055a0:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055a2:	9600      	str	r6, [sp, #0]
 80055a4:	463b      	mov	r3, r7
 80055a6:	f04f 0200 	mov.w	r2, #0
 80055aa:	4641      	mov	r1, r8
 80055ac:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80055ae:	d119      	bne.n	80055e4 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055b0:	f7ff fc3c 	bl	8004e2c <I2C_WaitOnFlagUntilTimeout>
 80055b4:	2800      	cmp	r0, #0
 80055b6:	d198      	bne.n	80054ea <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80055b8:	6823      	ldr	r3, [r4, #0]
 80055ba:	681a      	ldr	r2, [r3, #0]
 80055bc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80055c0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055c2:	691a      	ldr	r2, [r3, #16]
 80055c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80055c6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80055c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80055ca:	1c53      	adds	r3, r2, #1
 80055cc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80055ce:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80055d0:	3b01      	subs	r3, #1
 80055d2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80055d4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80055d6:	3b01      	subs	r3, #1
 80055d8:	b29b      	uxth	r3, r3
 80055da:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055dc:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055de:	691b      	ldr	r3, [r3, #16]
 80055e0:	7053      	strb	r3, [r2, #1]
 80055e2:	e7d2      	b.n	800558a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055e4:	f7ff fc22 	bl	8004e2c <I2C_WaitOnFlagUntilTimeout>
 80055e8:	2800      	cmp	r0, #0
 80055ea:	f47f af7e 	bne.w	80054ea <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80055ee:	6823      	ldr	r3, [r4, #0]
 80055f0:	681a      	ldr	r2, [r3, #0]
 80055f2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80055f6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055f8:	691a      	ldr	r2, [r3, #16]
 80055fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80055fc:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80055fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005600:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005602:	3301      	adds	r3, #1
 8005604:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005606:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005608:	3b01      	subs	r3, #1
 800560a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800560c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800560e:	3b01      	subs	r3, #1
 8005610:	b29b      	uxth	r3, r3
 8005612:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005614:	4602      	mov	r2, r0
 8005616:	463b      	mov	r3, r7
 8005618:	4641      	mov	r1, r8
 800561a:	4620      	mov	r0, r4
 800561c:	e7c8      	b.n	80055b0 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800561e:	4632      	mov	r2, r6
 8005620:	4639      	mov	r1, r7
 8005622:	4620      	mov	r0, r4
 8005624:	f7ff fc6f 	bl	8004f06 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005628:	2800      	cmp	r0, #0
 800562a:	f47f af5e 	bne.w	80054ea <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800562e:	6823      	ldr	r3, [r4, #0]
 8005630:	691a      	ldr	r2, [r3, #16]
 8005632:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005634:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8005636:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005638:	1c53      	adds	r3, r2, #1
 800563a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800563c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800563e:	3b01      	subs	r3, #1
 8005640:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005642:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005644:	3b01      	subs	r3, #1
 8005646:	b29b      	uxth	r3, r3
 8005648:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800564a:	6823      	ldr	r3, [r4, #0]
 800564c:	6959      	ldr	r1, [r3, #20]
 800564e:	0749      	lsls	r1, r1, #29
 8005650:	f57f af5c 	bpl.w	800550c <HAL_I2C_Mem_Read+0xb8>
 8005654:	e7c3      	b.n	80055de <HAL_I2C_Mem_Read+0x18a>
 8005656:	bf00      	nop
 8005658:	00100002 	.word	0x00100002
 800565c:	ffff0000 	.word	0xffff0000
 8005660:	00010004 	.word	0x00010004

08005664 <HAL_I2C_GetState>:
  return hi2c->State;
 8005664:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8005668:	4770      	bx	lr

0800566a <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800566a:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800566c:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005670:	01d2      	lsls	r2, r2, #7
 8005672:	3284      	adds	r2, #132	; 0x84
 8005674:	1883      	adds	r3, r0, r2
{
 8005676:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800567a:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800567c:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800567e:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005680:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005684:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005688:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800568a:	68c5      	ldr	r5, [r0, #12]
 800568c:	f10c 0701 	add.w	r7, ip, #1
 8005690:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005694:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005698:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800569a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800569c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80056a0:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80056a2:	68c5      	ldr	r5, [r0, #12]
 80056a4:	68ce      	ldr	r6, [r1, #12]
 80056a6:	f3c5 050a 	ubfx	r5, r5, #0, #11
 80056aa:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80056ac:	689d      	ldr	r5, [r3, #8]
 80056ae:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80056b2:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80056b4:	68c7      	ldr	r7, [r0, #12]
 80056b6:	688d      	ldr	r5, [r1, #8]
 80056b8:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80056bc:	3501      	adds	r5, #1
 80056be:	443d      	add	r5, r7
 80056c0:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80056c4:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80056c6:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80056c8:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80056ca:	f025 0507 	bic.w	r5, r5, #7
 80056ce:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80056d0:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80056d4:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80056d6:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80056d8:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80056dc:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80056e0:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80056e4:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80056e8:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80056ec:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80056f0:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80056f4:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80056f6:	695d      	ldr	r5, [r3, #20]
 80056f8:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80056fc:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80056fe:	694d      	ldr	r5, [r1, #20]
 8005700:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005702:	69dd      	ldr	r5, [r3, #28]
 8005704:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8005708:	f025 0507 	bic.w	r5, r5, #7
 800570c:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800570e:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005712:	433d      	orrs	r5, r7
 8005714:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005716:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005718:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800571a:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800571e:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005720:	b31e      	cbz	r6, 800576a <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005722:	2e01      	cmp	r6, #1
 8005724:	d023      	beq.n	800576e <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005726:	1eb5      	subs	r5, r6, #2
 8005728:	2d02      	cmp	r5, #2
 800572a:	d922      	bls.n	8005772 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800572c:	2e07      	cmp	r6, #7
 800572e:	bf0c      	ite	eq
 8005730:	2502      	moveq	r5, #2
 8005732:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005734:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8005736:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800573a:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800573c:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005740:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005742:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005744:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005746:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005748:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800574a:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800574e:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005750:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8005752:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8005756:	f024 0407 	bic.w	r4, r4, #7
 800575a:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800575c:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800575e:	5883      	ldr	r3, [r0, r2]
 8005760:	f043 0301 	orr.w	r3, r3, #1
 8005764:	5083      	str	r3, [r0, r2]
}
 8005766:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800576a:	2504      	movs	r5, #4
 800576c:	e7e2      	b.n	8005734 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800576e:	2503      	movs	r5, #3
 8005770:	e7e0      	b.n	8005734 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005772:	2502      	movs	r5, #2
 8005774:	e7de      	b.n	8005734 <LTDC_SetConfig+0xca>
	...

08005778 <HAL_LTDC_Init>:
{
 8005778:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800577a:	4604      	mov	r4, r0
 800577c:	2800      	cmp	r0, #0
 800577e:	d063      	beq.n	8005848 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005780:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005784:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005788:	b91b      	cbnz	r3, 8005792 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800578a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800578e:	f7fc fa53 	bl	8001c38 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005792:	2302      	movs	r3, #2
 8005794:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005798:	6823      	ldr	r3, [r4, #0]
 800579a:	699a      	ldr	r2, [r3, #24]
 800579c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80057a0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80057a2:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80057a6:	4302      	orrs	r2, r0
 80057a8:	68e0      	ldr	r0, [r4, #12]
 80057aa:	6999      	ldr	r1, [r3, #24]
 80057ac:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80057ae:	6920      	ldr	r0, [r4, #16]
 80057b0:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80057b2:	430a      	orrs	r2, r1
 80057b4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80057b6:	689a      	ldr	r2, [r3, #8]
 80057b8:	4924      	ldr	r1, [pc, #144]	; (800584c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80057ba:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80057bc:	400a      	ands	r2, r1
 80057be:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80057c0:	689a      	ldr	r2, [r3, #8]
 80057c2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80057c6:	69a0      	ldr	r0, [r4, #24]
 80057c8:	4302      	orrs	r2, r0
 80057ca:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80057cc:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80057ce:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80057d0:	400a      	ands	r2, r1
 80057d2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80057d4:	68da      	ldr	r2, [r3, #12]
 80057d6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80057da:	6a20      	ldr	r0, [r4, #32]
 80057dc:	4302      	orrs	r2, r0
 80057de:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80057e0:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80057e2:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80057e4:	400a      	ands	r2, r1
 80057e6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80057e8:	691a      	ldr	r2, [r3, #16]
 80057ea:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80057ee:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80057f0:	4302      	orrs	r2, r0
 80057f2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80057f4:	695a      	ldr	r2, [r3, #20]
 80057f6:	4011      	ands	r1, r2
 80057f8:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80057fa:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80057fc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80057fe:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005802:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005804:	430a      	orrs	r2, r1
 8005806:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005808:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800580a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800580e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005812:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8005816:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005818:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800581a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800581e:	430a      	orrs	r2, r1
 8005820:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005824:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005828:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800582a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800582c:	f042 0206 	orr.w	r2, r2, #6
 8005830:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005832:	699a      	ldr	r2, [r3, #24]
 8005834:	f042 0201 	orr.w	r2, r2, #1
 8005838:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800583a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800583c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800583e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005842:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005846:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005848:	2001      	movs	r0, #1
 800584a:	e7fc      	b.n	8005846 <HAL_LTDC_Init+0xce>
 800584c:	f000f800 	.word	0xf000f800

08005850 <HAL_LTDC_ErrorCallback>:
 8005850:	4770      	bx	lr

08005852 <HAL_LTDC_LineEventCallback>:
 8005852:	4770      	bx	lr

08005854 <HAL_LTDC_ReloadEventCallback>:
 8005854:	4770      	bx	lr

08005856 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005856:	6803      	ldr	r3, [r0, #0]
{
 8005858:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800585a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800585c:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800585e:	0772      	lsls	r2, r6, #29
{
 8005860:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005862:	d514      	bpl.n	800588e <HAL_LTDC_IRQHandler+0x38>
 8005864:	0769      	lsls	r1, r5, #29
 8005866:	d512      	bpl.n	800588e <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005868:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800586a:	f022 0204 	bic.w	r2, r2, #4
 800586e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005870:	2204      	movs	r2, #4
 8005872:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005874:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005878:	f043 0301 	orr.w	r3, r3, #1
 800587c:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005880:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005882:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005886:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800588a:	f7ff ffe1 	bl	8005850 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800588e:	07b2      	lsls	r2, r6, #30
 8005890:	d516      	bpl.n	80058c0 <HAL_LTDC_IRQHandler+0x6a>
 8005892:	07ab      	lsls	r3, r5, #30
 8005894:	d514      	bpl.n	80058c0 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005896:	6823      	ldr	r3, [r4, #0]
 8005898:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800589a:	f022 0202 	bic.w	r2, r2, #2
 800589e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80058a0:	2202      	movs	r2, #2
 80058a2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80058a4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80058a8:	4313      	orrs	r3, r2
 80058aa:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80058ae:	2304      	movs	r3, #4
 80058b0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80058b4:	2300      	movs	r3, #0
 80058b6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80058ba:	4620      	mov	r0, r4
 80058bc:	f7ff ffc8 	bl	8005850 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80058c0:	07f0      	lsls	r0, r6, #31
 80058c2:	d510      	bpl.n	80058e6 <HAL_LTDC_IRQHandler+0x90>
 80058c4:	07e9      	lsls	r1, r5, #31
 80058c6:	d50e      	bpl.n	80058e6 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80058c8:	6823      	ldr	r3, [r4, #0]
 80058ca:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80058cc:	f022 0201 	bic.w	r2, r2, #1
 80058d0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80058d2:	2201      	movs	r2, #1
 80058d4:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80058d6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80058d8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80058dc:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80058e0:	4620      	mov	r0, r4
 80058e2:	f7ff ffb6 	bl	8005852 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80058e6:	0732      	lsls	r2, r6, #28
 80058e8:	d511      	bpl.n	800590e <HAL_LTDC_IRQHandler+0xb8>
 80058ea:	072b      	lsls	r3, r5, #28
 80058ec:	d50f      	bpl.n	800590e <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80058ee:	6823      	ldr	r3, [r4, #0]
 80058f0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80058f2:	f022 0208 	bic.w	r2, r2, #8
 80058f6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80058f8:	2208      	movs	r2, #8
 80058fa:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80058fc:	2301      	movs	r3, #1
 80058fe:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005902:	2300      	movs	r3, #0
 8005904:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005908:	4620      	mov	r0, r4
 800590a:	f7ff ffa3 	bl	8005854 <HAL_LTDC_ReloadEventCallback>
}
 800590e:	bd70      	pop	{r4, r5, r6, pc}

08005910 <HAL_LTDC_ConfigLayer>:
{
 8005910:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005914:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005918:	2b01      	cmp	r3, #1
{
 800591a:	4606      	mov	r6, r0
 800591c:	460f      	mov	r7, r1
 800591e:	4694      	mov	ip, r2
 8005920:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005924:	d01f      	beq.n	8005966 <HAL_LTDC_ConfigLayer+0x56>
 8005926:	f04f 0801 	mov.w	r8, #1
 800592a:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800592e:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005932:	2434      	movs	r4, #52	; 0x34
 8005934:	460d      	mov	r5, r1
 8005936:	fb04 6402 	mla	r4, r4, r2, r6
 800593a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800593c:	3438      	adds	r4, #56	; 0x38
 800593e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005940:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005942:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005944:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005946:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005948:	682b      	ldr	r3, [r5, #0]
 800594a:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800594c:	4630      	mov	r0, r6
 800594e:	4662      	mov	r2, ip
 8005950:	4639      	mov	r1, r7
 8005952:	f7ff fe8a 	bl	800566a <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005956:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005958:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800595a:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800595e:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005962:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005966:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800596c <HAL_LTDC_SetPitch>:
{
 800596c:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800596e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005972:	2b01      	cmp	r3, #1
 8005974:	f04f 0302 	mov.w	r3, #2
 8005978:	d02c      	beq.n	80059d4 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800597a:	2434      	movs	r4, #52	; 0x34
 800597c:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005980:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005984:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005986:	b33c      	cbz	r4, 80059d8 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005988:	2c01      	cmp	r4, #1
 800598a:	d027      	beq.n	80059dc <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800598c:	1ea5      	subs	r5, r4, #2
 800598e:	429d      	cmp	r5, r3
 8005990:	d902      	bls.n	8005998 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 8005992:	2c07      	cmp	r4, #7
 8005994:	bf18      	it	ne
 8005996:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005998:	6804      	ldr	r4, [r0, #0]
 800599a:	01d2      	lsls	r2, r2, #7
 800599c:	3284      	adds	r2, #132	; 0x84
 800599e:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 80059a0:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80059a2:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 80059a4:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 80059a8:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 80059ac:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80059ae:	4c0c      	ldr	r4, [pc, #48]	; (80059e0 <HAL_LTDC_SetPitch+0x74>)
 80059b0:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80059b2:	f045 0501 	orr.w	r5, r5, #1
 80059b6:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 80059b8:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 80059ba:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80059be:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80059c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80059c2:	f043 0301 	orr.w	r3, r3, #1
 80059c6:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 80059c8:	2301      	movs	r3, #1
 80059ca:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80059ce:	2300      	movs	r3, #0
 80059d0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 80059d4:	4618      	mov	r0, r3
 80059d6:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 80059d8:	2304      	movs	r3, #4
 80059da:	e7dd      	b.n	8005998 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 80059dc:	2303      	movs	r3, #3
 80059de:	e7db      	b.n	8005998 <HAL_LTDC_SetPitch+0x2c>
 80059e0:	40016800 	.word	0x40016800

080059e4 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80059e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 80059e6:	2300      	movs	r3, #0
 80059e8:	9301      	str	r3, [sp, #4]
 80059ea:	4b18      	ldr	r3, [pc, #96]	; (8005a4c <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80059ec:	4d18      	ldr	r5, [pc, #96]	; (8005a50 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80059ee:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80059f0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80059f4:	641a      	str	r2, [r3, #64]	; 0x40
 80059f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059f8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80059fc:	9301      	str	r3, [sp, #4]
 80059fe:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005a00:	4b14      	ldr	r3, [pc, #80]	; (8005a54 <HAL_PWREx_EnableOverDrive+0x70>)
 8005a02:	2201      	movs	r2, #1
 8005a04:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 8005a06:	f7fe f9f9 	bl	8003dfc <HAL_GetTick>
 8005a0a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005a0c:	686b      	ldr	r3, [r5, #4]
 8005a0e:	03da      	lsls	r2, r3, #15
 8005a10:	d50b      	bpl.n	8005a2a <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005a12:	4b10      	ldr	r3, [pc, #64]	; (8005a54 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005a14:	4d0e      	ldr	r5, [pc, #56]	; (8005a50 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005a16:	2201      	movs	r2, #1
 8005a18:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 8005a1a:	f7fe f9ef 	bl	8003dfc <HAL_GetTick>
 8005a1e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005a20:	686b      	ldr	r3, [r5, #4]
 8005a22:	039b      	lsls	r3, r3, #14
 8005a24:	d50a      	bpl.n	8005a3c <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8005a26:	2000      	movs	r0, #0
 8005a28:	e006      	b.n	8005a38 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005a2a:	f7fe f9e7 	bl	8003dfc <HAL_GetTick>
 8005a2e:	1b00      	subs	r0, r0, r4
 8005a30:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005a34:	d9ea      	bls.n	8005a0c <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8005a36:	2003      	movs	r0, #3
}
 8005a38:	b003      	add	sp, #12
 8005a3a:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005a3c:	f7fe f9de 	bl	8003dfc <HAL_GetTick>
 8005a40:	1b00      	subs	r0, r0, r4
 8005a42:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005a46:	d9eb      	bls.n	8005a20 <HAL_PWREx_EnableOverDrive+0x3c>
 8005a48:	e7f5      	b.n	8005a36 <HAL_PWREx_EnableOverDrive+0x52>
 8005a4a:	bf00      	nop
 8005a4c:	40023800 	.word	0x40023800
 8005a50:	40007000 	.word	0x40007000
 8005a54:	420e0000 	.word	0x420e0000

08005a58 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8005a58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005a5c:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8005a5e:	b13e      	cbz	r6, 8005a70 <QSPI_Config+0x18>
 8005a60:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005a64:	bf1f      	itttt	ne
 8005a66:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8005a68:	6804      	ldrne	r4, [r0, #0]
 8005a6a:	f103 33ff 	addne.w	r3, r3, #4294967295
 8005a6e:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005a70:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005a74:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005a78:	f1b9 0f00 	cmp.w	r9, #0
 8005a7c:	d04f      	beq.n	8005b1e <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a7e:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005a80:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a82:	f8d1 a000 	ldr.w	sl, [r1]
 8005a86:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 8005a8a:	ea46 0909 	orr.w	r9, r6, r9
 8005a8e:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 8005a92:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 8005a96:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005a9a:	b335      	cbz	r5, 8005aea <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005a9c:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a9e:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005aa0:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005aa2:	ea49 0505 	orr.w	r5, r9, r5
 8005aa6:	b19f      	cbz	r7, 8005ad0 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005aa8:	ea4a 0307 	orr.w	r3, sl, r7
 8005aac:	4323      	orrs	r3, r4
 8005aae:	ea43 0308 	orr.w	r3, r3, r8
 8005ab2:	68cc      	ldr	r4, [r1, #12]
 8005ab4:	ea43 030e 	orr.w	r3, r3, lr
 8005ab8:	4333      	orrs	r3, r6
 8005aba:	4323      	orrs	r3, r4
 8005abc:	ea43 030c 	orr.w	r3, r3, ip
 8005ac0:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005ac2:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005ac6:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005ac8:	d00d      	beq.n	8005ae6 <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005aca:	684b      	ldr	r3, [r1, #4]
 8005acc:	6183      	str	r3, [r0, #24]
 8005ace:	e00a      	b.n	8005ae6 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005ad0:	ea4a 0304 	orr.w	r3, sl, r4
 8005ad4:	ea43 0308 	orr.w	r3, r3, r8
 8005ad8:	ea43 030e 	orr.w	r3, r3, lr
 8005adc:	4333      	orrs	r3, r6
 8005ade:	ea43 030c 	orr.w	r3, r3, ip
 8005ae2:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005ae4:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8005ae6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005aea:	b16f      	cbz	r7, 8005b08 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005aec:	ea4a 0307 	orr.w	r3, sl, r7
 8005af0:	4323      	orrs	r3, r4
 8005af2:	ea43 0308 	orr.w	r3, r3, r8
 8005af6:	68cc      	ldr	r4, [r1, #12]
 8005af8:	ea43 030e 	orr.w	r3, r3, lr
 8005afc:	4323      	orrs	r3, r4
 8005afe:	ea43 030c 	orr.w	r3, r3, ip
 8005b02:	ea43 0309 	orr.w	r3, r3, r9
 8005b06:	e7dc      	b.n	8005ac2 <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b08:	ea4a 0304 	orr.w	r3, sl, r4
 8005b0c:	ea43 0308 	orr.w	r3, r3, r8
 8005b10:	ea43 030e 	orr.w	r3, r3, lr
 8005b14:	ea43 030c 	orr.w	r3, r3, ip
 8005b18:	ea43 0309 	orr.w	r3, r3, r9
 8005b1c:	e7e2      	b.n	8005ae4 <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005b1e:	b345      	cbz	r5, 8005b72 <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005b20:	6804      	ldr	r4, [r0, #0]
 8005b22:	688b      	ldr	r3, [r1, #8]
 8005b24:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005b26:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b2a:	694e      	ldr	r6, [r1, #20]
 8005b2c:	6908      	ldr	r0, [r1, #16]
 8005b2e:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8005b32:	ea43 0502 	orr.w	r5, r3, r2
 8005b36:	04b6      	lsls	r6, r6, #18
 8005b38:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005b3c:	b187      	cbz	r7, 8005b60 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b3e:	4338      	orrs	r0, r7
 8005b40:	ea40 0008 	orr.w	r0, r0, r8
 8005b44:	4303      	orrs	r3, r0
 8005b46:	68c8      	ldr	r0, [r1, #12]
 8005b48:	ea43 030c 	orr.w	r3, r3, ip
 8005b4c:	4303      	orrs	r3, r0
 8005b4e:	4333      	orrs	r3, r6
 8005b50:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005b52:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b56:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005b58:	d0c5      	beq.n	8005ae6 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005b5a:	684b      	ldr	r3, [r1, #4]
 8005b5c:	61a3      	str	r3, [r4, #24]
 8005b5e:	e7c2      	b.n	8005ae6 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b60:	ea40 0008 	orr.w	r0, r0, r8
 8005b64:	4303      	orrs	r3, r0
 8005b66:	ea43 030c 	orr.w	r3, r3, ip
 8005b6a:	4333      	orrs	r3, r6
 8005b6c:	432b      	orrs	r3, r5
 8005b6e:	6163      	str	r3, [r4, #20]
 8005b70:	e7b9      	b.n	8005ae6 <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005b72:	b17f      	cbz	r7, 8005b94 <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b74:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8005b76:	6800      	ldr	r0, [r0, #0]
 8005b78:	ea46 0307 	orr.w	r3, r6, r7
 8005b7c:	4313      	orrs	r3, r2
 8005b7e:	4323      	orrs	r3, r4
 8005b80:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8005b82:	4323      	orrs	r3, r4
 8005b84:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8005b86:	4323      	orrs	r3, r4
 8005b88:	68cc      	ldr	r4, [r1, #12]
 8005b8a:	4323      	orrs	r3, r4
 8005b8c:	694c      	ldr	r4, [r1, #20]
 8005b8e:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8005b92:	e796      	b.n	8005ac2 <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8005b94:	2e00      	cmp	r6, #0
 8005b96:	d0a6      	beq.n	8005ae6 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b98:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005b9a:	6800      	ldr	r0, [r0, #0]
 8005b9c:	4333      	orrs	r3, r6
 8005b9e:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8005ba0:	431a      	orrs	r2, r3
 8005ba2:	4332      	orrs	r2, r6
 8005ba4:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8005ba6:	694b      	ldr	r3, [r1, #20]
 8005ba8:	4332      	orrs	r2, r6
 8005baa:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8005bae:	6142      	str	r2, [r0, #20]
}
 8005bb0:	e799      	b.n	8005ae6 <QSPI_Config+0x8e>

08005bb2 <QSPI_WaitFlagStateUntilTimeout>:
{
 8005bb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005bb6:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005bba:	4604      	mov	r4, r0
 8005bbc:	460e      	mov	r6, r1
 8005bbe:	4615      	mov	r5, r2
 8005bc0:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005bc2:	6822      	ldr	r2, [r4, #0]
 8005bc4:	6893      	ldr	r3, [r2, #8]
 8005bc6:	4233      	tst	r3, r6
 8005bc8:	bf14      	ite	ne
 8005bca:	2301      	movne	r3, #1
 8005bcc:	2300      	moveq	r3, #0
 8005bce:	42ab      	cmp	r3, r5
 8005bd0:	d101      	bne.n	8005bd6 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8005bd2:	2000      	movs	r0, #0
 8005bd4:	e012      	b.n	8005bfc <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005bd6:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005bda:	d0f3      	beq.n	8005bc4 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005bdc:	f7fe f90e 	bl	8003dfc <HAL_GetTick>
 8005be0:	1bc0      	subs	r0, r0, r7
 8005be2:	4540      	cmp	r0, r8
 8005be4:	d802      	bhi.n	8005bec <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8005be6:	f1b8 0f00 	cmp.w	r8, #0
 8005bea:	d1ea      	bne.n	8005bc2 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005bec:	2304      	movs	r3, #4
 8005bee:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005bf2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005bf4:	f043 0301 	orr.w	r3, r3, #1
 8005bf8:	6463      	str	r3, [r4, #68]	; 0x44
 8005bfa:	2001      	movs	r0, #1
}
 8005bfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005c00 <HAL_QSPI_Init>:
{
 8005c00:	b530      	push	{r4, r5, lr}
 8005c02:	b085      	sub	sp, #20
 8005c04:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005c06:	f7fe f8f9 	bl	8003dfc <HAL_GetTick>
 8005c0a:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8005c0c:	2c00      	cmp	r4, #0
 8005c0e:	d047      	beq.n	8005ca0 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8005c10:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005c14:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8005c18:	b94a      	cbnz	r2, 8005c2e <HAL_QSPI_Init+0x2e>
 8005c1a:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8005c1c:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8005c20:	4620      	mov	r0, r4
 8005c22:	f7fc f83b 	bl	8001c9c <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8005c26:	f241 3288 	movw	r2, #5000	; 0x1388
 8005c2a:	9b03      	ldr	r3, [sp, #12]
 8005c2c:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005c2e:	6820      	ldr	r0, [r4, #0]
 8005c30:	68a1      	ldr	r1, [r4, #8]
 8005c32:	6802      	ldr	r2, [r0, #0]
 8005c34:	3901      	subs	r1, #1
 8005c36:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8005c3a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005c3e:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005c40:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005c42:	9200      	str	r2, [sp, #0]
 8005c44:	2120      	movs	r1, #32
 8005c46:	2200      	movs	r2, #0
 8005c48:	4620      	mov	r0, r4
 8005c4a:	f7ff ffb2 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8005c4e:	bb10      	cbnz	r0, 8005c96 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8005c50:	69e5      	ldr	r5, [r4, #28]
 8005c52:	68e3      	ldr	r3, [r4, #12]
 8005c54:	6822      	ldr	r2, [r4, #0]
 8005c56:	432b      	orrs	r3, r5
 8005c58:	6a25      	ldr	r5, [r4, #32]
 8005c5a:	6811      	ldr	r1, [r2, #0]
 8005c5c:	432b      	orrs	r3, r5
 8005c5e:	6865      	ldr	r5, [r4, #4]
 8005c60:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8005c64:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005c68:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8005c6c:	430b      	orrs	r3, r1
 8005c6e:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005c70:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005c74:	430b      	orrs	r3, r1
 8005c76:	6921      	ldr	r1, [r4, #16]
 8005c78:	6855      	ldr	r5, [r2, #4]
 8005c7a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005c7e:	4909      	ldr	r1, [pc, #36]	; (8005ca4 <HAL_QSPI_Init+0xa4>)
 8005c80:	4029      	ands	r1, r5
 8005c82:	430b      	orrs	r3, r1
 8005c84:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8005c86:	6813      	ldr	r3, [r2, #0]
 8005c88:	f043 0301 	orr.w	r3, r3, #1
 8005c8c:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8005c8e:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005c90:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8005c92:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005c96:	2300      	movs	r3, #0
 8005c98:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005c9c:	b005      	add	sp, #20
 8005c9e:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8005ca0:	2001      	movs	r0, #1
 8005ca2:	e7fb      	b.n	8005c9c <HAL_QSPI_Init+0x9c>
 8005ca4:	ffe0f8fe 	.word	0xffe0f8fe

08005ca8 <HAL_QSPI_DeInit>:
{
 8005ca8:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8005caa:	4604      	mov	r4, r0
 8005cac:	b168      	cbz	r0, 8005cca <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8005cae:	6802      	ldr	r2, [r0, #0]
 8005cb0:	6813      	ldr	r3, [r2, #0]
 8005cb2:	f023 0301 	bic.w	r3, r3, #1
 8005cb6:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8005cb8:	f7fc f84a 	bl	8001d50 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005cbc:	2000      	movs	r0, #0
 8005cbe:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8005cc0:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005cc4:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8005cc8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005cca:	2001      	movs	r0, #1
 8005ccc:	e7fc      	b.n	8005cc8 <HAL_QSPI_DeInit+0x20>

08005cce <HAL_QSPI_Command>:
{
 8005cce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005cd2:	4604      	mov	r4, r0
 8005cd4:	b085      	sub	sp, #20
 8005cd6:	4617      	mov	r7, r2
 8005cd8:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8005cda:	f7fe f88f 	bl	8003dfc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005cde:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005ce2:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005ce4:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005ce6:	d034      	beq.n	8005d52 <HAL_QSPI_Command+0x84>
 8005ce8:	2201      	movs	r2, #1
 8005cea:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005cee:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005cf2:	2a01      	cmp	r2, #1
 8005cf4:	fa5f f882 	uxtb.w	r8, r2
 8005cf8:	f04f 0602 	mov.w	r6, #2
 8005cfc:	d127      	bne.n	8005d4e <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005cfe:	2200      	movs	r2, #0
 8005d00:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005d02:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8005d04:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005d08:	9700      	str	r7, [sp, #0]
 8005d0a:	2120      	movs	r1, #32
 8005d0c:	4620      	mov	r0, r4
 8005d0e:	f7ff ff50 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005d12:	4605      	mov	r5, r0
 8005d14:	b9a0      	cbnz	r0, 8005d40 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005d16:	4602      	mov	r2, r0
 8005d18:	4649      	mov	r1, r9
 8005d1a:	4620      	mov	r0, r4
 8005d1c:	f7ff fe9c 	bl	8005a58 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8005d20:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8005d24:	9b03      	ldr	r3, [sp, #12]
 8005d26:	b94a      	cbnz	r2, 8005d3c <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005d28:	9700      	str	r7, [sp, #0]
 8005d2a:	4642      	mov	r2, r8
 8005d2c:	4631      	mov	r1, r6
 8005d2e:	4620      	mov	r0, r4
 8005d30:	f7ff ff3f 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005d34:	4605      	mov	r5, r0
 8005d36:	b918      	cbnz	r0, 8005d40 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005d38:	6823      	ldr	r3, [r4, #0]
 8005d3a:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005d3c:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005d40:	2300      	movs	r3, #0
 8005d42:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005d46:	4628      	mov	r0, r5
 8005d48:	b005      	add	sp, #20
 8005d4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8005d4e:	4635      	mov	r5, r6
 8005d50:	e7f6      	b.n	8005d40 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 8005d52:	2502      	movs	r5, #2
 8005d54:	e7f7      	b.n	8005d46 <HAL_QSPI_Command+0x78>

08005d56 <HAL_QSPI_AutoPolling>:
{
 8005d56:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005d5a:	4604      	mov	r4, r0
 8005d5c:	4615      	mov	r5, r2
 8005d5e:	461e      	mov	r6, r3
 8005d60:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8005d62:	f7fe f84b 	bl	8003dfc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005d66:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005d6a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005d6c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005d6e:	d040      	beq.n	8005df2 <HAL_QSPI_AutoPolling+0x9c>
 8005d70:	2201      	movs	r2, #1
 8005d72:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005d76:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005d7a:	2a01      	cmp	r2, #1
 8005d7c:	b2d7      	uxtb	r7, r2
 8005d7e:	d136      	bne.n	8005dee <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005d80:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005d82:	2200      	movs	r2, #0
 8005d84:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005d86:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005d88:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005d8c:	9600      	str	r6, [sp, #0]
 8005d8e:	2120      	movs	r1, #32
 8005d90:	4620      	mov	r0, r4
 8005d92:	f7ff ff0e 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005d96:	bb20      	cbnz	r0, 8005de2 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005d98:	6821      	ldr	r1, [r4, #0]
 8005d9a:	682a      	ldr	r2, [r5, #0]
 8005d9c:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8005d9e:	686a      	ldr	r2, [r5, #4]
 8005da0:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8005da2:	68aa      	ldr	r2, [r5, #8]
 8005da4:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005da6:	680a      	ldr	r2, [r1, #0]
 8005da8:	6928      	ldr	r0, [r5, #16]
 8005daa:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8005dae:	4302      	orrs	r2, r0
 8005db0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005db4:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8005db6:	68ea      	ldr	r2, [r5, #12]
 8005db8:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005dbc:	4641      	mov	r1, r8
 8005dbe:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005dc2:	4620      	mov	r0, r4
 8005dc4:	f7ff fe48 	bl	8005a58 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8005dc8:	9b03      	ldr	r3, [sp, #12]
 8005dca:	9600      	str	r6, [sp, #0]
 8005dcc:	463a      	mov	r2, r7
 8005dce:	2108      	movs	r1, #8
 8005dd0:	4620      	mov	r0, r4
 8005dd2:	f7ff feee 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005dd6:	b920      	cbnz	r0, 8005de2 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8005dd8:	6823      	ldr	r3, [r4, #0]
 8005dda:	2208      	movs	r2, #8
 8005ddc:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005dde:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005de2:	2300      	movs	r3, #0
 8005de4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005de8:	b004      	add	sp, #16
 8005dea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8005dee:	2002      	movs	r0, #2
 8005df0:	e7f7      	b.n	8005de2 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8005df2:	2002      	movs	r0, #2
 8005df4:	e7f8      	b.n	8005de8 <HAL_QSPI_AutoPolling+0x92>

08005df6 <HAL_QSPI_MemoryMapped>:
{
 8005df6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005df8:	4604      	mov	r4, r0
 8005dfa:	4616      	mov	r6, r2
 8005dfc:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005dfe:	f7fd fffd 	bl	8003dfc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005e02:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005e06:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005e08:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005e0a:	d032      	beq.n	8005e72 <HAL_QSPI_MemoryMapped+0x7c>
 8005e0c:	2201      	movs	r2, #1
 8005e0e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005e12:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005e16:	2a01      	cmp	r2, #1
 8005e18:	d129      	bne.n	8005e6e <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005e1a:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005e1c:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005e1e:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005e20:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005e24:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8005e26:	9100      	str	r1, [sp, #0]
 8005e28:	4620      	mov	r0, r4
 8005e2a:	2120      	movs	r1, #32
 8005e2c:	f7ff fec1 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005e30:	4605      	mov	r5, r0
 8005e32:	b9b0      	cbnz	r0, 8005e62 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005e34:	6823      	ldr	r3, [r4, #0]
 8005e36:	6872      	ldr	r2, [r6, #4]
 8005e38:	6818      	ldr	r0, [r3, #0]
 8005e3a:	f020 0008 	bic.w	r0, r0, #8
 8005e3e:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005e40:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005e42:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005e44:	d107      	bne.n	8005e56 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8005e46:	6832      	ldr	r2, [r6, #0]
 8005e48:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8005e4a:	2210      	movs	r2, #16
 8005e4c:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8005e4e:	681a      	ldr	r2, [r3, #0]
 8005e50:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8005e54:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8005e56:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8005e5a:	4639      	mov	r1, r7
 8005e5c:	4620      	mov	r0, r4
 8005e5e:	f7ff fdfb 	bl	8005a58 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8005e62:	2300      	movs	r3, #0
 8005e64:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005e68:	4628      	mov	r0, r5
 8005e6a:	b003      	add	sp, #12
 8005e6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8005e6e:	2502      	movs	r5, #2
 8005e70:	e7f7      	b.n	8005e62 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8005e72:	2502      	movs	r5, #2
 8005e74:	e7f8      	b.n	8005e68 <HAL_QSPI_MemoryMapped+0x72>

08005e76 <HAL_QSPI_Abort>:
{
 8005e76:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005e78:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005e7a:	f7fd ffbf 	bl	8003dfc <HAL_GetTick>
 8005e7e:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005e80:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 8005e84:	f010 0002 	ands.w	r0, r0, #2
 8005e88:	d03a      	beq.n	8005f00 <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 8005e8a:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005e8c:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 8005e8e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005e92:	680a      	ldr	r2, [r1, #0]
 8005e94:	f012 0204 	ands.w	r2, r2, #4
 8005e98:	d034      	beq.n	8005f04 <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005e9a:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005e9c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8005e9e:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005ea0:	f022 0204 	bic.w	r2, r2, #4
 8005ea4:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005ea6:	f7fe f8f9 	bl	800409c <HAL_DMA_Abort>
      if(status != HAL_OK)
 8005eaa:	9b03      	ldr	r3, [sp, #12]
 8005eac:	b118      	cbz	r0, 8005eb6 <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8005eae:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8005eb0:	f042 0204 	orr.w	r2, r2, #4
 8005eb4:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 8005eb6:	6822      	ldr	r2, [r4, #0]
 8005eb8:	6891      	ldr	r1, [r2, #8]
 8005eba:	0689      	lsls	r1, r1, #26
 8005ebc:	d51d      	bpl.n	8005efa <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005ebe:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005ec0:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005ec2:	f041 0102 	orr.w	r1, r1, #2
 8005ec6:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005ec8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005eca:	9200      	str	r2, [sp, #0]
 8005ecc:	2102      	movs	r1, #2
 8005ece:	2201      	movs	r2, #1
 8005ed0:	4620      	mov	r0, r4
 8005ed2:	f7ff fe6e 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005ed6:	9b03      	ldr	r3, [sp, #12]
 8005ed8:	b990      	cbnz	r0, 8005f00 <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005eda:	6822      	ldr	r2, [r4, #0]
 8005edc:	2102      	movs	r1, #2
 8005ede:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005ee0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005ee2:	9200      	str	r2, [sp, #0]
 8005ee4:	2120      	movs	r1, #32
 8005ee6:	4602      	mov	r2, r0
 8005ee8:	4620      	mov	r0, r4
 8005eea:	f7ff fe62 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005eee:	b938      	cbnz	r0, 8005f00 <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8005ef0:	6822      	ldr	r2, [r4, #0]
 8005ef2:	6953      	ldr	r3, [r2, #20]
 8005ef4:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8005ef8:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8005efa:	2301      	movs	r3, #1
 8005efc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8005f00:	b004      	add	sp, #16
 8005f02:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 8005f04:	4610      	mov	r0, r2
 8005f06:	e7d6      	b.n	8005eb6 <HAL_QSPI_Abort+0x40>

08005f08 <HAL_QSPI_Transmit>:
{
 8005f08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005f0a:	4604      	mov	r4, r0
 8005f0c:	b085      	sub	sp, #20
 8005f0e:	4616      	mov	r6, r2
 8005f10:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005f12:	f7fd ff73 	bl	8003dfc <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005f16:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8005f1a:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8005f1c:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005f1e:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005f20:	d04c      	beq.n	8005fbc <HAL_QSPI_Transmit+0xb4>
 8005f22:	2201      	movs	r2, #1
 8005f24:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005f28:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005f2c:	2a01      	cmp	r2, #1
 8005f2e:	b2d0      	uxtb	r0, r2
 8005f30:	d142      	bne.n	8005fb8 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005f32:	2200      	movs	r2, #0
 8005f34:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005f36:	2f00      	cmp	r7, #0
 8005f38:	d039      	beq.n	8005fae <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8005f3a:	2212      	movs	r2, #18
 8005f3c:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005f40:	692a      	ldr	r2, [r5, #16]
 8005f42:	3201      	adds	r2, #1
 8005f44:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005f46:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8005f48:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005f4a:	3201      	adds	r2, #1
 8005f4c:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005f4e:	696a      	ldr	r2, [r5, #20]
 8005f50:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8005f54:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8005f56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005f58:	b9a2      	cbnz	r2, 8005f84 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005f5a:	9600      	str	r6, [sp, #0]
 8005f5c:	2201      	movs	r2, #1
 8005f5e:	2102      	movs	r1, #2
 8005f60:	4620      	mov	r0, r4
 8005f62:	f7ff fe26 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005f66:	b928      	cbnz	r0, 8005f74 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005f68:	6823      	ldr	r3, [r4, #0]
 8005f6a:	2202      	movs	r2, #2
 8005f6c:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005f6e:	4620      	mov	r0, r4
 8005f70:	f7ff ff81 	bl	8005e76 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005f74:	2301      	movs	r3, #1
 8005f76:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005f7a:	2300      	movs	r3, #0
 8005f7c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005f80:	b005      	add	sp, #20
 8005f82:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005f84:	9600      	str	r6, [sp, #0]
 8005f86:	2201      	movs	r2, #1
 8005f88:	2104      	movs	r1, #4
 8005f8a:	4620      	mov	r0, r4
 8005f8c:	9303      	str	r3, [sp, #12]
 8005f8e:	f7ff fe10 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005f92:	2800      	cmp	r0, #0
 8005f94:	d1ee      	bne.n	8005f74 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005f96:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005f98:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005f9a:	7812      	ldrb	r2, [r2, #0]
 8005f9c:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8005fa0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005fa2:	3201      	adds	r2, #1
 8005fa4:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005fa6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005fa8:	3a01      	subs	r2, #1
 8005faa:	62e2      	str	r2, [r4, #44]	; 0x2c
 8005fac:	e7d3      	b.n	8005f56 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005fae:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005fb0:	f043 0308 	orr.w	r3, r3, #8
 8005fb4:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005fb6:	e7e0      	b.n	8005f7a <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8005fb8:	2002      	movs	r0, #2
 8005fba:	e7de      	b.n	8005f7a <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8005fbc:	2002      	movs	r0, #2
 8005fbe:	e7df      	b.n	8005f80 <HAL_QSPI_Transmit+0x78>

08005fc0 <HAL_QSPI_Receive>:
{
 8005fc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005fc2:	4604      	mov	r4, r0
 8005fc4:	b085      	sub	sp, #20
 8005fc6:	4616      	mov	r6, r2
 8005fc8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005fca:	f7fd ff17 	bl	8003dfc <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8005fce:	6825      	ldr	r5, [r4, #0]
 8005fd0:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8005fd4:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005fd8:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005fda:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005fdc:	d050      	beq.n	8006080 <HAL_QSPI_Receive+0xc0>
 8005fde:	2201      	movs	r2, #1
 8005fe0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005fe4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005fe8:	2a01      	cmp	r2, #1
 8005fea:	b2d0      	uxtb	r0, r2
 8005fec:	d146      	bne.n	800607c <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005fee:	2200      	movs	r2, #0
 8005ff0:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005ff2:	2f00      	cmp	r7, #0
 8005ff4:	d03d      	beq.n	8006072 <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8005ff6:	2222      	movs	r2, #34	; 0x22
 8005ff8:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005ffc:	692a      	ldr	r2, [r5, #16]
 8005ffe:	3201      	adds	r2, #1
 8006000:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006002:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8006004:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006006:	3201      	adds	r2, #1
 8006008:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800600a:	6969      	ldr	r1, [r5, #20]
 800600c:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8006010:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8006014:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8006016:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800601a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800601c:	b9a2      	cbnz	r2, 8006048 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800601e:	9600      	str	r6, [sp, #0]
 8006020:	2201      	movs	r2, #1
 8006022:	2102      	movs	r1, #2
 8006024:	4620      	mov	r0, r4
 8006026:	f7ff fdc4 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800602a:	b928      	cbnz	r0, 8006038 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800602c:	6823      	ldr	r3, [r4, #0]
 800602e:	2202      	movs	r2, #2
 8006030:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8006032:	4620      	mov	r0, r4
 8006034:	f7ff ff1f 	bl	8005e76 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8006038:	2301      	movs	r3, #1
 800603a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800603e:	2300      	movs	r3, #0
 8006040:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006044:	b005      	add	sp, #20
 8006046:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8006048:	9600      	str	r6, [sp, #0]
 800604a:	2201      	movs	r2, #1
 800604c:	2106      	movs	r1, #6
 800604e:	4620      	mov	r0, r4
 8006050:	9303      	str	r3, [sp, #12]
 8006052:	f7ff fdae 	bl	8005bb2 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8006056:	2800      	cmp	r0, #0
 8006058:	d1ee      	bne.n	8006038 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800605a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800605c:	f895 1020 	ldrb.w	r1, [r5, #32]
 8006060:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8006062:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006064:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8006066:	3201      	adds	r2, #1
 8006068:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800606a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800606c:	3a01      	subs	r2, #1
 800606e:	63a2      	str	r2, [r4, #56]	; 0x38
 8006070:	e7d3      	b.n	800601a <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006072:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006074:	f043 0308 	orr.w	r3, r3, #8
 8006078:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800607a:	e7e0      	b.n	800603e <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 800607c:	2002      	movs	r0, #2
 800607e:	e7de      	b.n	800603e <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8006080:	2002      	movs	r0, #2
 8006082:	e7df      	b.n	8006044 <HAL_QSPI_Receive+0x84>

08006084 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006084:	4913      	ldr	r1, [pc, #76]	; (80060d4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006086:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006088:	688b      	ldr	r3, [r1, #8]
 800608a:	f003 030c 	and.w	r3, r3, #12
 800608e:	2b04      	cmp	r3, #4
 8006090:	d01c      	beq.n	80060cc <HAL_RCC_GetSysClockFreq+0x48>
 8006092:	2b08      	cmp	r3, #8
 8006094:	d11c      	bne.n	80060d0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006096:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006098:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800609a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800609c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80060a0:	bf14      	ite	ne
 80060a2:	480d      	ldrne	r0, [pc, #52]	; (80060d8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80060a4:	480d      	ldreq	r0, [pc, #52]	; (80060dc <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80060a6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80060aa:	bf18      	it	ne
 80060ac:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80060ae:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80060b2:	fba1 0100 	umull	r0, r1, r1, r0
 80060b6:	f7fa f8f3 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80060ba:	4b06      	ldr	r3, [pc, #24]	; (80060d4 <HAL_RCC_GetSysClockFreq+0x50>)
 80060bc:	685b      	ldr	r3, [r3, #4]
 80060be:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80060c2:	3301      	adds	r3, #1
 80060c4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80060c6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80060ca:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80060cc:	4802      	ldr	r0, [pc, #8]	; (80060d8 <HAL_RCC_GetSysClockFreq+0x54>)
 80060ce:	e7fc      	b.n	80060ca <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80060d0:	4802      	ldr	r0, [pc, #8]	; (80060dc <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80060d2:	e7fa      	b.n	80060ca <HAL_RCC_GetSysClockFreq+0x46>
 80060d4:	40023800 	.word	0x40023800
 80060d8:	007a1200 	.word	0x007a1200
 80060dc:	00f42400 	.word	0x00f42400

080060e0 <HAL_RCC_ClockConfig>:
{
 80060e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80060e4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80060e6:	4604      	mov	r4, r0
 80060e8:	b910      	cbnz	r0, 80060f0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80060ea:	2001      	movs	r0, #1
}
 80060ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80060f0:	4b44      	ldr	r3, [pc, #272]	; (8006204 <HAL_RCC_ClockConfig+0x124>)
 80060f2:	681a      	ldr	r2, [r3, #0]
 80060f4:	f002 020f 	and.w	r2, r2, #15
 80060f8:	428a      	cmp	r2, r1
 80060fa:	d328      	bcc.n	800614e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80060fc:	6822      	ldr	r2, [r4, #0]
 80060fe:	0797      	lsls	r7, r2, #30
 8006100:	d42d      	bmi.n	800615e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006102:	07d0      	lsls	r0, r2, #31
 8006104:	d441      	bmi.n	800618a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006106:	4b3f      	ldr	r3, [pc, #252]	; (8006204 <HAL_RCC_ClockConfig+0x124>)
 8006108:	681a      	ldr	r2, [r3, #0]
 800610a:	f002 020f 	and.w	r2, r2, #15
 800610e:	42aa      	cmp	r2, r5
 8006110:	d866      	bhi.n	80061e0 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006112:	6822      	ldr	r2, [r4, #0]
 8006114:	0751      	lsls	r1, r2, #29
 8006116:	d46c      	bmi.n	80061f2 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006118:	0713      	lsls	r3, r2, #28
 800611a:	d507      	bpl.n	800612c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800611c:	4a3a      	ldr	r2, [pc, #232]	; (8006208 <HAL_RCC_ClockConfig+0x128>)
 800611e:	6921      	ldr	r1, [r4, #16]
 8006120:	6893      	ldr	r3, [r2, #8]
 8006122:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8006126:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800612a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800612c:	f7ff ffaa 	bl	8006084 <HAL_RCC_GetSysClockFreq>
 8006130:	4b35      	ldr	r3, [pc, #212]	; (8006208 <HAL_RCC_ClockConfig+0x128>)
 8006132:	4a36      	ldr	r2, [pc, #216]	; (800620c <HAL_RCC_ClockConfig+0x12c>)
 8006134:	689b      	ldr	r3, [r3, #8]
 8006136:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800613a:	5cd3      	ldrb	r3, [r2, r3]
 800613c:	40d8      	lsrs	r0, r3
 800613e:	4b34      	ldr	r3, [pc, #208]	; (8006210 <HAL_RCC_ClockConfig+0x130>)
 8006140:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8006142:	4b34      	ldr	r3, [pc, #208]	; (8006214 <HAL_RCC_ClockConfig+0x134>)
 8006144:	6818      	ldr	r0, [r3, #0]
 8006146:	f7fb fedb 	bl	8001f00 <HAL_InitTick>
  return HAL_OK;
 800614a:	2000      	movs	r0, #0
 800614c:	e7ce      	b.n	80060ec <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800614e:	b2ca      	uxtb	r2, r1
 8006150:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006152:	681b      	ldr	r3, [r3, #0]
 8006154:	f003 030f 	and.w	r3, r3, #15
 8006158:	428b      	cmp	r3, r1
 800615a:	d1c6      	bne.n	80060ea <HAL_RCC_ClockConfig+0xa>
 800615c:	e7ce      	b.n	80060fc <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800615e:	4b2a      	ldr	r3, [pc, #168]	; (8006208 <HAL_RCC_ClockConfig+0x128>)
 8006160:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006164:	bf1e      	ittt	ne
 8006166:	6899      	ldrne	r1, [r3, #8]
 8006168:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800616c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800616e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006170:	bf42      	ittt	mi
 8006172:	6899      	ldrmi	r1, [r3, #8]
 8006174:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8006178:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800617a:	4923      	ldr	r1, [pc, #140]	; (8006208 <HAL_RCC_ClockConfig+0x128>)
 800617c:	68a0      	ldr	r0, [r4, #8]
 800617e:	688b      	ldr	r3, [r1, #8]
 8006180:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006184:	4303      	orrs	r3, r0
 8006186:	608b      	str	r3, [r1, #8]
 8006188:	e7bb      	b.n	8006102 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800618a:	6862      	ldr	r2, [r4, #4]
 800618c:	4b1e      	ldr	r3, [pc, #120]	; (8006208 <HAL_RCC_ClockConfig+0x128>)
 800618e:	2a01      	cmp	r2, #1
 8006190:	d11c      	bne.n	80061cc <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006192:	681b      	ldr	r3, [r3, #0]
 8006194:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006198:	d0a7      	beq.n	80060ea <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800619a:	4e1b      	ldr	r6, [pc, #108]	; (8006208 <HAL_RCC_ClockConfig+0x128>)
 800619c:	68b3      	ldr	r3, [r6, #8]
 800619e:	f023 0303 	bic.w	r3, r3, #3
 80061a2:	4313      	orrs	r3, r2
 80061a4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 80061a6:	f7fd fe29 	bl	8003dfc <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80061aa:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80061ae:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80061b0:	68b3      	ldr	r3, [r6, #8]
 80061b2:	6862      	ldr	r2, [r4, #4]
 80061b4:	f003 030c 	and.w	r3, r3, #12
 80061b8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80061bc:	d0a3      	beq.n	8006106 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80061be:	f7fd fe1d 	bl	8003dfc <HAL_GetTick>
 80061c2:	1bc0      	subs	r0, r0, r7
 80061c4:	4540      	cmp	r0, r8
 80061c6:	d9f3      	bls.n	80061b0 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80061c8:	2003      	movs	r0, #3
 80061ca:	e78f      	b.n	80060ec <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80061cc:	1e91      	subs	r1, r2, #2
 80061ce:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80061d0:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80061d2:	d802      	bhi.n	80061da <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80061d4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80061d8:	e7de      	b.n	8006198 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80061da:	f013 0f02 	tst.w	r3, #2
 80061de:	e7db      	b.n	8006198 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80061e0:	b2ea      	uxtb	r2, r5
 80061e2:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80061e4:	681b      	ldr	r3, [r3, #0]
 80061e6:	f003 030f 	and.w	r3, r3, #15
 80061ea:	42ab      	cmp	r3, r5
 80061ec:	f47f af7d 	bne.w	80060ea <HAL_RCC_ClockConfig+0xa>
 80061f0:	e78f      	b.n	8006112 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80061f2:	4905      	ldr	r1, [pc, #20]	; (8006208 <HAL_RCC_ClockConfig+0x128>)
 80061f4:	68e0      	ldr	r0, [r4, #12]
 80061f6:	688b      	ldr	r3, [r1, #8]
 80061f8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80061fc:	4303      	orrs	r3, r0
 80061fe:	608b      	str	r3, [r1, #8]
 8006200:	e78a      	b.n	8006118 <HAL_RCC_ClockConfig+0x38>
 8006202:	bf00      	nop
 8006204:	40023c00 	.word	0x40023c00
 8006208:	40023800 	.word	0x40023800
 800620c:	0801e031 	.word	0x0801e031
 8006210:	20000050 	.word	0x20000050
 8006214:	20000058 	.word	0x20000058

08006218 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006218:	4b04      	ldr	r3, [pc, #16]	; (800622c <HAL_RCC_GetPCLK1Freq+0x14>)
 800621a:	4a05      	ldr	r2, [pc, #20]	; (8006230 <HAL_RCC_GetPCLK1Freq+0x18>)
 800621c:	689b      	ldr	r3, [r3, #8]
 800621e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006222:	5cd3      	ldrb	r3, [r2, r3]
 8006224:	4a03      	ldr	r2, [pc, #12]	; (8006234 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006226:	6810      	ldr	r0, [r2, #0]
}
 8006228:	40d8      	lsrs	r0, r3
 800622a:	4770      	bx	lr
 800622c:	40023800 	.word	0x40023800
 8006230:	0801e041 	.word	0x0801e041
 8006234:	20000050 	.word	0x20000050

08006238 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006238:	230f      	movs	r3, #15
 800623a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800623c:	4b0b      	ldr	r3, [pc, #44]	; (800626c <HAL_RCC_GetClockConfig+0x34>)
 800623e:	689a      	ldr	r2, [r3, #8]
 8006240:	f002 0203 	and.w	r2, r2, #3
 8006244:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006246:	689a      	ldr	r2, [r3, #8]
 8006248:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800624c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800624e:	689a      	ldr	r2, [r3, #8]
 8006250:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8006254:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006256:	689b      	ldr	r3, [r3, #8]
 8006258:	08db      	lsrs	r3, r3, #3
 800625a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800625e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006260:	4b03      	ldr	r3, [pc, #12]	; (8006270 <HAL_RCC_GetClockConfig+0x38>)
 8006262:	681b      	ldr	r3, [r3, #0]
 8006264:	f003 030f 	and.w	r3, r3, #15
 8006268:	600b      	str	r3, [r1, #0]
}
 800626a:	4770      	bx	lr
 800626c:	40023800 	.word	0x40023800
 8006270:	40023c00 	.word	0x40023c00

08006274 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8006274:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006276:	6802      	ldr	r2, [r0, #0]
{
 8006278:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800627a:	0610      	lsls	r0, r2, #24
 800627c:	d508      	bpl.n	8006290 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800627e:	49aa      	ldr	r1, [pc, #680]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006280:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8006282:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006286:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800628a:	4303      	orrs	r3, r0
 800628c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8006290:	05d1      	lsls	r1, r2, #23
 8006292:	d508      	bpl.n	80062a6 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8006294:	49a4      	ldr	r1, [pc, #656]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006296:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8006298:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800629c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80062a0:	4303      	orrs	r3, r0
 80062a2:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80062a6:	f012 0f43 	tst.w	r2, #67	; 0x43
 80062aa:	d173      	bne.n	8006394 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80062ac:	6823      	ldr	r3, [r4, #0]
 80062ae:	f013 0f0c 	tst.w	r3, #12
 80062b2:	f000 80c1 	beq.w	8006438 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80062b6:	4b9d      	ldr	r3, [pc, #628]	; (800652c <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80062b8:	4d9b      	ldr	r5, [pc, #620]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 80062ba:	2200      	movs	r2, #0
 80062bc:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80062be:	f7fd fd9d 	bl	8003dfc <HAL_GetTick>
 80062c2:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80062c4:	682b      	ldr	r3, [r5, #0]
 80062c6:	009b      	lsls	r3, r3, #2
 80062c8:	f100 80fc 	bmi.w	80064c4 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80062cc:	6821      	ldr	r1, [r4, #0]
 80062ce:	074f      	lsls	r7, r1, #29
 80062d0:	d51a      	bpl.n	8006308 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 80062d2:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80062d6:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 80062da:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80062de:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80062e2:	4313      	orrs	r3, r2
 80062e4:	6922      	ldr	r2, [r4, #16]
 80062e6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80062ea:	69a2      	ldr	r2, [r4, #24]
 80062ec:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80062f0:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80062f4:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 80062f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80062fa:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80062fe:	3a01      	subs	r2, #1
 8006300:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006304:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006308:	070e      	lsls	r6, r1, #28
 800630a:	d519      	bpl.n	8006340 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800630c:	4a86      	ldr	r2, [pc, #536]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800630e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006312:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8006316:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800631a:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800631e:	4303      	orrs	r3, r0
 8006320:	6920      	ldr	r0, [r4, #16]
 8006322:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006326:	69e0      	ldr	r0, [r4, #28]
 8006328:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800632c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006330:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8006334:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006336:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800633a:	4303      	orrs	r3, r0
 800633c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8006340:	060d      	lsls	r5, r1, #24
 8006342:	d517      	bpl.n	8006374 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8006344:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006346:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800634a:	d113      	bne.n	8006374 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800634c:	4976      	ldr	r1, [pc, #472]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800634e:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006352:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8006356:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800635a:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800635e:	4313      	orrs	r3, r2
 8006360:	6922      	ldr	r2, [r4, #16]
 8006362:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006366:	6962      	ldr	r2, [r4, #20]
 8006368:	0852      	lsrs	r2, r2, #1
 800636a:	3a01      	subs	r2, #1
 800636c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006370:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006374:	4b6d      	ldr	r3, [pc, #436]	; (800652c <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006376:	4e6c      	ldr	r6, [pc, #432]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006378:	2201      	movs	r2, #1
 800637a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800637c:	f7fd fd3e 	bl	8003dfc <HAL_GetTick>
 8006380:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006382:	6833      	ldr	r3, [r6, #0]
 8006384:	0098      	lsls	r0, r3, #2
 8006386:	d459      	bmi.n	800643c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006388:	f7fd fd38 	bl	8003dfc <HAL_GetTick>
 800638c:	1b40      	subs	r0, r0, r5
 800638e:	2802      	cmp	r0, #2
 8006390:	d9f7      	bls.n	8006382 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8006392:	e04e      	b.n	8006432 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8006394:	4b65      	ldr	r3, [pc, #404]	; (800652c <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006396:	4e64      	ldr	r6, [pc, #400]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006398:	2200      	movs	r2, #0
 800639a:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800639c:	f7fd fd2e 	bl	8003dfc <HAL_GetTick>
 80063a0:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80063a2:	6833      	ldr	r3, [r6, #0]
 80063a4:	011b      	lsls	r3, r3, #4
 80063a6:	d43f      	bmi.n	8006428 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80063a8:	6821      	ldr	r1, [r4, #0]
 80063aa:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80063ac:	bf41      	itttt	mi
 80063ae:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80063b2:	071b      	lslmi	r3, r3, #28
 80063b4:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80063b8:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80063bc:	078e      	lsls	r6, r1, #30
 80063be:	d515      	bpl.n	80063ec <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80063c0:	4a59      	ldr	r2, [pc, #356]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80063c2:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80063c4:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80063c8:	6865      	ldr	r5, [r4, #4]
 80063ca:	061b      	lsls	r3, r3, #24
 80063cc:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80063d0:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80063d4:	4303      	orrs	r3, r0
 80063d6:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80063da:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80063de:	6a23      	ldr	r3, [r4, #32]
 80063e0:	f020 001f 	bic.w	r0, r0, #31
 80063e4:	3b01      	subs	r3, #1
 80063e6:	4303      	orrs	r3, r0
 80063e8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80063ec:	064d      	lsls	r5, r1, #25
 80063ee:	d50a      	bpl.n	8006406 <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80063f0:	68e3      	ldr	r3, [r4, #12]
 80063f2:	6862      	ldr	r2, [r4, #4]
 80063f4:	061b      	lsls	r3, r3, #24
 80063f6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80063fa:	68a2      	ldr	r2, [r4, #8]
 80063fc:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006400:	4a49      	ldr	r2, [pc, #292]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006402:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006406:	4b49      	ldr	r3, [pc, #292]	; (800652c <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006408:	4e47      	ldr	r6, [pc, #284]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 800640a:	2201      	movs	r2, #1
 800640c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800640e:	f7fd fcf5 	bl	8003dfc <HAL_GetTick>
 8006412:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006414:	6833      	ldr	r3, [r6, #0]
 8006416:	0118      	lsls	r0, r3, #4
 8006418:	f53f af48 	bmi.w	80062ac <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800641c:	f7fd fcee 	bl	8003dfc <HAL_GetTick>
 8006420:	1b40      	subs	r0, r0, r5
 8006422:	2802      	cmp	r0, #2
 8006424:	d9f6      	bls.n	8006414 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8006426:	e004      	b.n	8006432 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006428:	f7fd fce8 	bl	8003dfc <HAL_GetTick>
 800642c:	1b40      	subs	r0, r0, r5
 800642e:	2802      	cmp	r0, #2
 8006430:	d9b7      	bls.n	80063a2 <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 8006432:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8006434:	b003      	add	sp, #12
 8006436:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8006438:	0619      	lsls	r1, r3, #24
 800643a:	d43e      	bmi.n	80064ba <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800643c:	6823      	ldr	r3, [r4, #0]
 800643e:	069a      	lsls	r2, r3, #26
 8006440:	d530      	bpl.n	80064a4 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 8006442:	2300      	movs	r3, #0
 8006444:	9301      	str	r3, [sp, #4]
 8006446:	4b38      	ldr	r3, [pc, #224]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 8006448:	4d39      	ldr	r5, [pc, #228]	; (8006530 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800644a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800644c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006450:	641a      	str	r2, [r3, #64]	; 0x40
 8006452:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006454:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006458:	9301      	str	r3, [sp, #4]
 800645a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800645c:	682b      	ldr	r3, [r5, #0]
 800645e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006462:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006464:	f7fd fcca 	bl	8003dfc <HAL_GetTick>
 8006468:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800646a:	682b      	ldr	r3, [r5, #0]
 800646c:	05d9      	lsls	r1, r3, #23
 800646e:	d530      	bpl.n	80064d2 <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006470:	4d2d      	ldr	r5, [pc, #180]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006472:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006474:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8006478:	d131      	bne.n	80064de <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800647a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800647c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8006480:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006484:	4a28      	ldr	r2, [pc, #160]	; (8006528 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006486:	d14b      	bne.n	8006520 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8006488:	6891      	ldr	r1, [r2, #8]
 800648a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800648e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006492:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8006496:	4301      	orrs	r1, r0
 8006498:	6091      	str	r1, [r2, #8]
 800649a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800649c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80064a0:	430b      	orrs	r3, r1
 80064a2:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 80064a4:	6820      	ldr	r0, [r4, #0]
 80064a6:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 80064aa:	bf1f      	itttt	ne
 80064ac:	4b21      	ldrne	r3, [pc, #132]	; (8006534 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 80064ae:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 80064b2:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 80064b6:	2000      	movne	r0, #0
 80064b8:	e7bc      	b.n	8006434 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 80064ba:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80064bc:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80064c0:	d1bc      	bne.n	800643c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 80064c2:	e6f8      	b.n	80062b6 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80064c4:	f7fd fc9a 	bl	8003dfc <HAL_GetTick>
 80064c8:	1b80      	subs	r0, r0, r6
 80064ca:	2802      	cmp	r0, #2
 80064cc:	f67f aefa 	bls.w	80062c4 <HAL_RCCEx_PeriphCLKConfig+0x50>
 80064d0:	e7af      	b.n	8006432 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80064d2:	f7fd fc93 	bl	8003dfc <HAL_GetTick>
 80064d6:	1b80      	subs	r0, r0, r6
 80064d8:	2802      	cmp	r0, #2
 80064da:	d9c6      	bls.n	800646a <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 80064dc:	e7a9      	b.n	8006432 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80064de:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80064e0:	f402 7240 	and.w	r2, r2, #768	; 0x300
 80064e4:	4293      	cmp	r3, r2
 80064e6:	d0c8      	beq.n	800647a <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80064e8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80064ea:	4a10      	ldr	r2, [pc, #64]	; (800652c <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 80064ec:	2101      	movs	r1, #1
 80064ee:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80064f2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80064f6:	2100      	movs	r1, #0
 80064f8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 80064fc:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80064fe:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006500:	07da      	lsls	r2, r3, #31
 8006502:	d5ba      	bpl.n	800647a <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 8006504:	f7fd fc7a 	bl	8003dfc <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006508:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800650c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800650e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006510:	079b      	lsls	r3, r3, #30
 8006512:	d4b2      	bmi.n	800647a <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006514:	f7fd fc72 	bl	8003dfc <HAL_GetTick>
 8006518:	1b80      	subs	r0, r0, r6
 800651a:	42b8      	cmp	r0, r7
 800651c:	d9f7      	bls.n	800650e <HAL_RCCEx_PeriphCLKConfig+0x29a>
 800651e:	e788      	b.n	8006432 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006520:	6891      	ldr	r1, [r2, #8]
 8006522:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006526:	e7b7      	b.n	8006498 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8006528:	40023800 	.word	0x40023800
 800652c:	42470000 	.word	0x42470000
 8006530:	40007000 	.word	0x40007000
 8006534:	42471000 	.word	0x42471000

08006538 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006538:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800653c:	4604      	mov	r4, r0
 800653e:	b340      	cbz	r0, 8006592 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006540:	6803      	ldr	r3, [r0, #0]
 8006542:	07dd      	lsls	r5, r3, #31
 8006544:	d410      	bmi.n	8006568 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006546:	6823      	ldr	r3, [r4, #0]
 8006548:	0798      	lsls	r0, r3, #30
 800654a:	d45e      	bmi.n	800660a <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800654c:	6823      	ldr	r3, [r4, #0]
 800654e:	071a      	lsls	r2, r3, #28
 8006550:	f100 80a0 	bmi.w	8006694 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006554:	6823      	ldr	r3, [r4, #0]
 8006556:	075b      	lsls	r3, r3, #29
 8006558:	f100 80c0 	bmi.w	80066dc <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800655c:	69a0      	ldr	r0, [r4, #24]
 800655e:	2800      	cmp	r0, #0
 8006560:	f040 8128 	bne.w	80067b4 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8006564:	2000      	movs	r0, #0
 8006566:	e02b      	b.n	80065c0 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006568:	4b8f      	ldr	r3, [pc, #572]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
 800656a:	689a      	ldr	r2, [r3, #8]
 800656c:	f002 020c 	and.w	r2, r2, #12
 8006570:	2a04      	cmp	r2, #4
 8006572:	d007      	beq.n	8006584 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006574:	689a      	ldr	r2, [r3, #8]
 8006576:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800657a:	2a08      	cmp	r2, #8
 800657c:	d10b      	bne.n	8006596 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800657e:	685a      	ldr	r2, [r3, #4]
 8006580:	0251      	lsls	r1, r2, #9
 8006582:	d508      	bpl.n	8006596 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006584:	4b88      	ldr	r3, [pc, #544]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
 8006586:	681b      	ldr	r3, [r3, #0]
 8006588:	039a      	lsls	r2, r3, #14
 800658a:	d5dc      	bpl.n	8006546 <HAL_RCC_OscConfig+0xe>
 800658c:	6863      	ldr	r3, [r4, #4]
 800658e:	2b00      	cmp	r3, #0
 8006590:	d1d9      	bne.n	8006546 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8006592:	2001      	movs	r0, #1
 8006594:	e014      	b.n	80065c0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006596:	6862      	ldr	r2, [r4, #4]
 8006598:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800659c:	d113      	bne.n	80065c6 <HAL_RCC_OscConfig+0x8e>
 800659e:	681a      	ldr	r2, [r3, #0]
 80065a0:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80065a4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80065a6:	f7fd fc29 	bl	8003dfc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80065aa:	4e7f      	ldr	r6, [pc, #508]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80065ac:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80065ae:	6833      	ldr	r3, [r6, #0]
 80065b0:	039b      	lsls	r3, r3, #14
 80065b2:	d4c8      	bmi.n	8006546 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80065b4:	f7fd fc22 	bl	8003dfc <HAL_GetTick>
 80065b8:	1b40      	subs	r0, r0, r5
 80065ba:	2864      	cmp	r0, #100	; 0x64
 80065bc:	d9f7      	bls.n	80065ae <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80065be:	2003      	movs	r0, #3
}
 80065c0:	b002      	add	sp, #8
 80065c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80065c6:	4d78      	ldr	r5, [pc, #480]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
 80065c8:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80065cc:	682b      	ldr	r3, [r5, #0]
 80065ce:	d107      	bne.n	80065e0 <HAL_RCC_OscConfig+0xa8>
 80065d0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80065d4:	602b      	str	r3, [r5, #0]
 80065d6:	682b      	ldr	r3, [r5, #0]
 80065d8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80065dc:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80065de:	e7e2      	b.n	80065a6 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80065e0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80065e4:	602b      	str	r3, [r5, #0]
 80065e6:	682b      	ldr	r3, [r5, #0]
 80065e8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80065ec:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80065ee:	2a00      	cmp	r2, #0
 80065f0:	d1d9      	bne.n	80065a6 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80065f2:	f7fd fc03 	bl	8003dfc <HAL_GetTick>
 80065f6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80065f8:	682b      	ldr	r3, [r5, #0]
 80065fa:	039f      	lsls	r7, r3, #14
 80065fc:	d5a3      	bpl.n	8006546 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80065fe:	f7fd fbfd 	bl	8003dfc <HAL_GetTick>
 8006602:	1b80      	subs	r0, r0, r6
 8006604:	2864      	cmp	r0, #100	; 0x64
 8006606:	d9f7      	bls.n	80065f8 <HAL_RCC_OscConfig+0xc0>
 8006608:	e7d9      	b.n	80065be <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800660a:	4b67      	ldr	r3, [pc, #412]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
 800660c:	689a      	ldr	r2, [r3, #8]
 800660e:	f012 0f0c 	tst.w	r2, #12
 8006612:	d007      	beq.n	8006624 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006614:	689a      	ldr	r2, [r3, #8]
 8006616:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800661a:	2a08      	cmp	r2, #8
 800661c:	d111      	bne.n	8006642 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800661e:	685b      	ldr	r3, [r3, #4]
 8006620:	025e      	lsls	r6, r3, #9
 8006622:	d40e      	bmi.n	8006642 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006624:	4a60      	ldr	r2, [pc, #384]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
 8006626:	6813      	ldr	r3, [r2, #0]
 8006628:	079d      	lsls	r5, r3, #30
 800662a:	d502      	bpl.n	8006632 <HAL_RCC_OscConfig+0xfa>
 800662c:	68e3      	ldr	r3, [r4, #12]
 800662e:	2b01      	cmp	r3, #1
 8006630:	d1af      	bne.n	8006592 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006632:	6813      	ldr	r3, [r2, #0]
 8006634:	6921      	ldr	r1, [r4, #16]
 8006636:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800663a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800663e:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006640:	e784      	b.n	800654c <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006642:	68e2      	ldr	r2, [r4, #12]
 8006644:	4b59      	ldr	r3, [pc, #356]	; (80067ac <HAL_RCC_OscConfig+0x274>)
 8006646:	b1b2      	cbz	r2, 8006676 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8006648:	2201      	movs	r2, #1
 800664a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800664c:	f7fd fbd6 	bl	8003dfc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006650:	4d55      	ldr	r5, [pc, #340]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006652:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006654:	682b      	ldr	r3, [r5, #0]
 8006656:	0798      	lsls	r0, r3, #30
 8006658:	d507      	bpl.n	800666a <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800665a:	682b      	ldr	r3, [r5, #0]
 800665c:	6922      	ldr	r2, [r4, #16]
 800665e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006662:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006666:	602b      	str	r3, [r5, #0]
 8006668:	e770      	b.n	800654c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800666a:	f7fd fbc7 	bl	8003dfc <HAL_GetTick>
 800666e:	1b80      	subs	r0, r0, r6
 8006670:	2802      	cmp	r0, #2
 8006672:	d9ef      	bls.n	8006654 <HAL_RCC_OscConfig+0x11c>
 8006674:	e7a3      	b.n	80065be <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8006676:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006678:	f7fd fbc0 	bl	8003dfc <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800667c:	4e4a      	ldr	r6, [pc, #296]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800667e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006680:	6833      	ldr	r3, [r6, #0]
 8006682:	0799      	lsls	r1, r3, #30
 8006684:	f57f af62 	bpl.w	800654c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006688:	f7fd fbb8 	bl	8003dfc <HAL_GetTick>
 800668c:	1b40      	subs	r0, r0, r5
 800668e:	2802      	cmp	r0, #2
 8006690:	d9f6      	bls.n	8006680 <HAL_RCC_OscConfig+0x148>
 8006692:	e794      	b.n	80065be <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8006694:	6962      	ldr	r2, [r4, #20]
 8006696:	4b45      	ldr	r3, [pc, #276]	; (80067ac <HAL_RCC_OscConfig+0x274>)
 8006698:	b182      	cbz	r2, 80066bc <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800669a:	2201      	movs	r2, #1
 800669c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80066a0:	f7fd fbac 	bl	8003dfc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80066a4:	4e40      	ldr	r6, [pc, #256]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80066a6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80066a8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80066aa:	079f      	lsls	r7, r3, #30
 80066ac:	f53f af52 	bmi.w	8006554 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80066b0:	f7fd fba4 	bl	8003dfc <HAL_GetTick>
 80066b4:	1b40      	subs	r0, r0, r5
 80066b6:	2802      	cmp	r0, #2
 80066b8:	d9f6      	bls.n	80066a8 <HAL_RCC_OscConfig+0x170>
 80066ba:	e780      	b.n	80065be <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80066bc:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80066c0:	f7fd fb9c 	bl	8003dfc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80066c4:	4e38      	ldr	r6, [pc, #224]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80066c6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80066c8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80066ca:	0798      	lsls	r0, r3, #30
 80066cc:	f57f af42 	bpl.w	8006554 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80066d0:	f7fd fb94 	bl	8003dfc <HAL_GetTick>
 80066d4:	1b40      	subs	r0, r0, r5
 80066d6:	2802      	cmp	r0, #2
 80066d8:	d9f6      	bls.n	80066c8 <HAL_RCC_OscConfig+0x190>
 80066da:	e770      	b.n	80065be <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80066dc:	4b32      	ldr	r3, [pc, #200]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
 80066de:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80066e0:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80066e4:	d128      	bne.n	8006738 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80066e6:	9201      	str	r2, [sp, #4]
 80066e8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80066ea:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80066ee:	641a      	str	r2, [r3, #64]	; 0x40
 80066f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066f2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80066f6:	9301      	str	r3, [sp, #4]
 80066f8:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80066fa:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80066fc:	4d2c      	ldr	r5, [pc, #176]	; (80067b0 <HAL_RCC_OscConfig+0x278>)
 80066fe:	682b      	ldr	r3, [r5, #0]
 8006700:	05d9      	lsls	r1, r3, #23
 8006702:	d51b      	bpl.n	800673c <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006704:	68a3      	ldr	r3, [r4, #8]
 8006706:	4d28      	ldr	r5, [pc, #160]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
 8006708:	2b01      	cmp	r3, #1
 800670a:	d127      	bne.n	800675c <HAL_RCC_OscConfig+0x224>
 800670c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800670e:	f043 0301 	orr.w	r3, r3, #1
 8006712:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006714:	f7fd fb72 	bl	8003dfc <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006718:	4e23      	ldr	r6, [pc, #140]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800671a:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800671c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006720:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006722:	079b      	lsls	r3, r3, #30
 8006724:	d539      	bpl.n	800679a <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8006726:	2f00      	cmp	r7, #0
 8006728:	f43f af18 	beq.w	800655c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800672c:	4a1e      	ldr	r2, [pc, #120]	; (80067a8 <HAL_RCC_OscConfig+0x270>)
 800672e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006730:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006734:	6413      	str	r3, [r2, #64]	; 0x40
 8006736:	e711      	b.n	800655c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8006738:	2700      	movs	r7, #0
 800673a:	e7df      	b.n	80066fc <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800673c:	682b      	ldr	r3, [r5, #0]
 800673e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006742:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006744:	f7fd fb5a 	bl	8003dfc <HAL_GetTick>
 8006748:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800674a:	682b      	ldr	r3, [r5, #0]
 800674c:	05da      	lsls	r2, r3, #23
 800674e:	d4d9      	bmi.n	8006704 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006750:	f7fd fb54 	bl	8003dfc <HAL_GetTick>
 8006754:	1b80      	subs	r0, r0, r6
 8006756:	2802      	cmp	r0, #2
 8006758:	d9f7      	bls.n	800674a <HAL_RCC_OscConfig+0x212>
 800675a:	e730      	b.n	80065be <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800675c:	2b05      	cmp	r3, #5
 800675e:	d104      	bne.n	800676a <HAL_RCC_OscConfig+0x232>
 8006760:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006762:	f043 0304 	orr.w	r3, r3, #4
 8006766:	672b      	str	r3, [r5, #112]	; 0x70
 8006768:	e7d0      	b.n	800670c <HAL_RCC_OscConfig+0x1d4>
 800676a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800676c:	f022 0201 	bic.w	r2, r2, #1
 8006770:	672a      	str	r2, [r5, #112]	; 0x70
 8006772:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006774:	f022 0204 	bic.w	r2, r2, #4
 8006778:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800677a:	2b00      	cmp	r3, #0
 800677c:	d1ca      	bne.n	8006714 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800677e:	f7fd fb3d 	bl	8003dfc <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006782:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006786:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006788:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800678a:	0798      	lsls	r0, r3, #30
 800678c:	d5cb      	bpl.n	8006726 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800678e:	f7fd fb35 	bl	8003dfc <HAL_GetTick>
 8006792:	1b80      	subs	r0, r0, r6
 8006794:	4540      	cmp	r0, r8
 8006796:	d9f7      	bls.n	8006788 <HAL_RCC_OscConfig+0x250>
 8006798:	e711      	b.n	80065be <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800679a:	f7fd fb2f 	bl	8003dfc <HAL_GetTick>
 800679e:	1b40      	subs	r0, r0, r5
 80067a0:	4540      	cmp	r0, r8
 80067a2:	d9bd      	bls.n	8006720 <HAL_RCC_OscConfig+0x1e8>
 80067a4:	e70b      	b.n	80065be <HAL_RCC_OscConfig+0x86>
 80067a6:	bf00      	nop
 80067a8:	40023800 	.word	0x40023800
 80067ac:	42470000 	.word	0x42470000
 80067b0:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80067b4:	4d3b      	ldr	r5, [pc, #236]	; (80068a4 <HAL_RCC_OscConfig+0x36c>)
 80067b6:	68ab      	ldr	r3, [r5, #8]
 80067b8:	f003 030c 	and.w	r3, r3, #12
 80067bc:	2b08      	cmp	r3, #8
 80067be:	d040      	beq.n	8006842 <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80067c0:	4b39      	ldr	r3, [pc, #228]	; (80068a8 <HAL_RCC_OscConfig+0x370>)
 80067c2:	2200      	movs	r2, #0
 80067c4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80067c6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80067c8:	d12e      	bne.n	8006828 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 80067ca:	f7fd fb17 	bl	8003dfc <HAL_GetTick>
 80067ce:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80067d0:	682b      	ldr	r3, [r5, #0]
 80067d2:	0199      	lsls	r1, r3, #6
 80067d4:	d422      	bmi.n	800681c <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80067d6:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80067da:	4313      	orrs	r3, r2
 80067dc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80067de:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80067e2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80067e4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80067e8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80067ea:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80067ee:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80067f0:	0852      	lsrs	r2, r2, #1
 80067f2:	3a01      	subs	r2, #1
 80067f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80067f8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80067fa:	4b2b      	ldr	r3, [pc, #172]	; (80068a8 <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80067fc:	4d29      	ldr	r5, [pc, #164]	; (80068a4 <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 80067fe:	2201      	movs	r2, #1
 8006800:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8006802:	f7fd fafb 	bl	8003dfc <HAL_GetTick>
 8006806:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006808:	682b      	ldr	r3, [r5, #0]
 800680a:	019a      	lsls	r2, r3, #6
 800680c:	f53f aeaa 	bmi.w	8006564 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006810:	f7fd faf4 	bl	8003dfc <HAL_GetTick>
 8006814:	1b00      	subs	r0, r0, r4
 8006816:	2802      	cmp	r0, #2
 8006818:	d9f6      	bls.n	8006808 <HAL_RCC_OscConfig+0x2d0>
 800681a:	e6d0      	b.n	80065be <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800681c:	f7fd faee 	bl	8003dfc <HAL_GetTick>
 8006820:	1b80      	subs	r0, r0, r6
 8006822:	2802      	cmp	r0, #2
 8006824:	d9d4      	bls.n	80067d0 <HAL_RCC_OscConfig+0x298>
 8006826:	e6ca      	b.n	80065be <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8006828:	f7fd fae8 	bl	8003dfc <HAL_GetTick>
 800682c:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800682e:	682b      	ldr	r3, [r5, #0]
 8006830:	019b      	lsls	r3, r3, #6
 8006832:	f57f ae97 	bpl.w	8006564 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006836:	f7fd fae1 	bl	8003dfc <HAL_GetTick>
 800683a:	1b00      	subs	r0, r0, r4
 800683c:	2802      	cmp	r0, #2
 800683e:	d9f6      	bls.n	800682e <HAL_RCC_OscConfig+0x2f6>
 8006840:	e6bd      	b.n	80065be <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8006842:	2801      	cmp	r0, #1
 8006844:	f43f aebc 	beq.w	80065c0 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8006848:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800684a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800684c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8006850:	4291      	cmp	r1, r2
 8006852:	f47f ae9e 	bne.w	8006592 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006856:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006858:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800685c:	428a      	cmp	r2, r1
 800685e:	f47f ae98 	bne.w	8006592 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006862:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006864:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006868:	401a      	ands	r2, r3
 800686a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800686e:	f47f ae90 	bne.w	8006592 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006872:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006874:	0852      	lsrs	r2, r2, #1
 8006876:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800687a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800687c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006880:	f47f ae87 	bne.w	8006592 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006884:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006886:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800688a:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800688e:	f47f ae80 	bne.w	8006592 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8006892:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006894:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006898:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800689c:	f43f ae62 	beq.w	8006564 <HAL_RCC_OscConfig+0x2c>
 80068a0:	e677      	b.n	8006592 <HAL_RCC_OscConfig+0x5a>
 80068a2:	bf00      	nop
 80068a4:	40023800 	.word	0x40023800
 80068a8:	42470000 	.word	0x42470000

080068ac <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80068ac:	b538      	push	{r3, r4, r5, lr}
 80068ae:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80068b0:	4604      	mov	r4, r0
 80068b2:	b1c8      	cbz	r0, 80068e8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 80068b4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80068b8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80068bc:	b91b      	cbnz	r3, 80068c6 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80068be:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80068c2:	f7fb fa63 	bl	8001d8c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80068c6:	2302      	movs	r3, #2
 80068c8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80068cc:	1d21      	adds	r1, r4, #4
 80068ce:	6820      	ldr	r0, [r4, #0]
 80068d0:	f000 f9c6 	bl	8006c60 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 80068d4:	6862      	ldr	r2, [r4, #4]
 80068d6:	6820      	ldr	r0, [r4, #0]
 80068d8:	4629      	mov	r1, r5
 80068da:	f000 f9fc 	bl	8006cd6 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80068de:	2301      	movs	r3, #1
 80068e0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 80068e4:	2000      	movs	r0, #0
}
 80068e6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80068e8:	2001      	movs	r0, #1
 80068ea:	e7fc      	b.n	80068e6 <HAL_SDRAM_Init+0x3a>

080068ec <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 80068ec:	b510      	push	{r4, lr}
 80068ee:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 80068f0:	f7fb fac4 	bl	8001e7c <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 80068f4:	e9d4 0100 	ldrd	r0, r1, [r4]
 80068f8:	f000 fa23 	bl	8006d42 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 80068fc:	2000      	movs	r0, #0
 80068fe:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 8006902:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8006906:	bd10      	pop	{r4, pc}

08006908 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006908:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800690a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800690e:	2b02      	cmp	r3, #2
{
 8006910:	4605      	mov	r5, r0
 8006912:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006914:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8006916:	d012      	beq.n	800693e <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006918:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800691c:	2c01      	cmp	r4, #1
 800691e:	d10f      	bne.n	8006940 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006920:	2302      	movs	r3, #2
 8006922:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006926:	6828      	ldr	r0, [r5, #0]
 8006928:	f000 fa1a 	bl	8006d60 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800692c:	6833      	ldr	r3, [r6, #0]
 800692e:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006930:	bf06      	itte	eq
 8006932:	2305      	moveq	r3, #5
 8006934:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006938:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800693c:	2000      	movs	r0, #0
}
 800693e:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8006940:	2001      	movs	r0, #1
 8006942:	e7fc      	b.n	800693e <HAL_SDRAM_SendCommand+0x36>

08006944 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006944:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006946:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800694a:	2b02      	cmp	r3, #2
{
 800694c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800694e:	b2d8      	uxtb	r0, r3
 8006950:	d00d      	beq.n	800696e <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006952:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8006956:	2b01      	cmp	r3, #1
 8006958:	b2dd      	uxtb	r5, r3
 800695a:	d109      	bne.n	8006970 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800695c:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800695e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006960:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006964:	f000 fa22 	bl	8006dac <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006968:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800696c:	2000      	movs	r0, #0
}
 800696e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006970:	2001      	movs	r0, #1
 8006972:	e7fc      	b.n	800696e <HAL_SDRAM_ProgramRefreshRate+0x2a>

08006974 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006974:	4770      	bx	lr
	...

08006978 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006978:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800697c:	2b01      	cmp	r3, #1
 800697e:	d130      	bne.n	80069e2 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006980:	2302      	movs	r3, #2
 8006982:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006986:	6803      	ldr	r3, [r0, #0]
 8006988:	68da      	ldr	r2, [r3, #12]
 800698a:	f042 0201 	orr.w	r2, r2, #1
 800698e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006990:	4a15      	ldr	r2, [pc, #84]	; (80069e8 <HAL_TIM_Base_Start_IT+0x70>)
 8006992:	4293      	cmp	r3, r2
 8006994:	d01a      	beq.n	80069cc <HAL_TIM_Base_Start_IT+0x54>
 8006996:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800699a:	d017      	beq.n	80069cc <HAL_TIM_Base_Start_IT+0x54>
 800699c:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80069a0:	4293      	cmp	r3, r2
 80069a2:	d013      	beq.n	80069cc <HAL_TIM_Base_Start_IT+0x54>
 80069a4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80069a8:	4293      	cmp	r3, r2
 80069aa:	d00f      	beq.n	80069cc <HAL_TIM_Base_Start_IT+0x54>
 80069ac:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80069b0:	4293      	cmp	r3, r2
 80069b2:	d00b      	beq.n	80069cc <HAL_TIM_Base_Start_IT+0x54>
 80069b4:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80069b8:	4293      	cmp	r3, r2
 80069ba:	d007      	beq.n	80069cc <HAL_TIM_Base_Start_IT+0x54>
 80069bc:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 80069c0:	4293      	cmp	r3, r2
 80069c2:	d003      	beq.n	80069cc <HAL_TIM_Base_Start_IT+0x54>
 80069c4:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80069c8:	4293      	cmp	r3, r2
 80069ca:	d104      	bne.n	80069d6 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80069cc:	689a      	ldr	r2, [r3, #8]
 80069ce:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80069d2:	2a06      	cmp	r2, #6
 80069d4:	d003      	beq.n	80069de <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80069d6:	681a      	ldr	r2, [r3, #0]
 80069d8:	f042 0201 	orr.w	r2, r2, #1
 80069dc:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80069de:	2000      	movs	r0, #0
}
 80069e0:	4770      	bx	lr
    return HAL_ERROR;
 80069e2:	2001      	movs	r0, #1
 80069e4:	4770      	bx	lr
 80069e6:	bf00      	nop
 80069e8:	40010000 	.word	0x40010000

080069ec <HAL_TIM_OC_DelayElapsedCallback>:
 80069ec:	4770      	bx	lr

080069ee <HAL_TIM_IC_CaptureCallback>:
 80069ee:	4770      	bx	lr

080069f0 <HAL_TIM_PWM_PulseFinishedCallback>:
 80069f0:	4770      	bx	lr

080069f2 <HAL_TIM_TriggerCallback>:
 80069f2:	4770      	bx	lr

080069f4 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80069f4:	6803      	ldr	r3, [r0, #0]
 80069f6:	691a      	ldr	r2, [r3, #16]
 80069f8:	0791      	lsls	r1, r2, #30
{
 80069fa:	b510      	push	{r4, lr}
 80069fc:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80069fe:	d50e      	bpl.n	8006a1e <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006a00:	68da      	ldr	r2, [r3, #12]
 8006a02:	0792      	lsls	r2, r2, #30
 8006a04:	d50b      	bpl.n	8006a1e <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006a06:	f06f 0202 	mvn.w	r2, #2
 8006a0a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006a0c:	2201      	movs	r2, #1
 8006a0e:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006a10:	699b      	ldr	r3, [r3, #24]
 8006a12:	079b      	lsls	r3, r3, #30
 8006a14:	d077      	beq.n	8006b06 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006a16:	f7ff ffea 	bl	80069ee <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006a1a:	2300      	movs	r3, #0
 8006a1c:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006a1e:	6823      	ldr	r3, [r4, #0]
 8006a20:	691a      	ldr	r2, [r3, #16]
 8006a22:	0750      	lsls	r0, r2, #29
 8006a24:	d510      	bpl.n	8006a48 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006a26:	68da      	ldr	r2, [r3, #12]
 8006a28:	0751      	lsls	r1, r2, #29
 8006a2a:	d50d      	bpl.n	8006a48 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006a2c:	f06f 0204 	mvn.w	r2, #4
 8006a30:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006a32:	2202      	movs	r2, #2
 8006a34:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006a36:	699b      	ldr	r3, [r3, #24]
 8006a38:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006a3c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006a3e:	d068      	beq.n	8006b12 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8006a40:	f7ff ffd5 	bl	80069ee <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006a44:	2300      	movs	r3, #0
 8006a46:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006a48:	6823      	ldr	r3, [r4, #0]
 8006a4a:	691a      	ldr	r2, [r3, #16]
 8006a4c:	0712      	lsls	r2, r2, #28
 8006a4e:	d50f      	bpl.n	8006a70 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006a50:	68da      	ldr	r2, [r3, #12]
 8006a52:	0710      	lsls	r0, r2, #28
 8006a54:	d50c      	bpl.n	8006a70 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006a56:	f06f 0208 	mvn.w	r2, #8
 8006a5a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006a5c:	2204      	movs	r2, #4
 8006a5e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006a60:	69db      	ldr	r3, [r3, #28]
 8006a62:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006a64:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006a66:	d05a      	beq.n	8006b1e <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006a68:	f7ff ffc1 	bl	80069ee <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006a6c:	2300      	movs	r3, #0
 8006a6e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006a70:	6823      	ldr	r3, [r4, #0]
 8006a72:	691a      	ldr	r2, [r3, #16]
 8006a74:	06d2      	lsls	r2, r2, #27
 8006a76:	d510      	bpl.n	8006a9a <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006a78:	68da      	ldr	r2, [r3, #12]
 8006a7a:	06d0      	lsls	r0, r2, #27
 8006a7c:	d50d      	bpl.n	8006a9a <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006a7e:	f06f 0210 	mvn.w	r2, #16
 8006a82:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006a84:	2208      	movs	r2, #8
 8006a86:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006a88:	69db      	ldr	r3, [r3, #28]
 8006a8a:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006a8e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006a90:	d04b      	beq.n	8006b2a <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006a92:	f7ff ffac 	bl	80069ee <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006a96:	2300      	movs	r3, #0
 8006a98:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006a9a:	6823      	ldr	r3, [r4, #0]
 8006a9c:	691a      	ldr	r2, [r3, #16]
 8006a9e:	07d1      	lsls	r1, r2, #31
 8006aa0:	d508      	bpl.n	8006ab4 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006aa2:	68da      	ldr	r2, [r3, #12]
 8006aa4:	07d2      	lsls	r2, r2, #31
 8006aa6:	d505      	bpl.n	8006ab4 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006aa8:	f06f 0201 	mvn.w	r2, #1
 8006aac:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006aae:	4620      	mov	r0, r4
 8006ab0:	f7fa ffbe 	bl	8001a30 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006ab4:	6823      	ldr	r3, [r4, #0]
 8006ab6:	691a      	ldr	r2, [r3, #16]
 8006ab8:	0610      	lsls	r0, r2, #24
 8006aba:	d508      	bpl.n	8006ace <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006abc:	68da      	ldr	r2, [r3, #12]
 8006abe:	0611      	lsls	r1, r2, #24
 8006ac0:	d505      	bpl.n	8006ace <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006ac2:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006ac6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006ac8:	4620      	mov	r0, r4
 8006aca:	f000 f8c8 	bl	8006c5e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006ace:	6823      	ldr	r3, [r4, #0]
 8006ad0:	691a      	ldr	r2, [r3, #16]
 8006ad2:	0652      	lsls	r2, r2, #25
 8006ad4:	d508      	bpl.n	8006ae8 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006ad6:	68da      	ldr	r2, [r3, #12]
 8006ad8:	0650      	lsls	r0, r2, #25
 8006ada:	d505      	bpl.n	8006ae8 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006adc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006ae0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006ae2:	4620      	mov	r0, r4
 8006ae4:	f7ff ff85 	bl	80069f2 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006ae8:	6823      	ldr	r3, [r4, #0]
 8006aea:	691a      	ldr	r2, [r3, #16]
 8006aec:	0691      	lsls	r1, r2, #26
 8006aee:	d522      	bpl.n	8006b36 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006af0:	68da      	ldr	r2, [r3, #12]
 8006af2:	0692      	lsls	r2, r2, #26
 8006af4:	d51f      	bpl.n	8006b36 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006af6:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006afa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006afc:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006afe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006b02:	f000 b8ab 	b.w	8006c5c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006b06:	f7ff ff71 	bl	80069ec <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006b0a:	4620      	mov	r0, r4
 8006b0c:	f7ff ff70 	bl	80069f0 <HAL_TIM_PWM_PulseFinishedCallback>
 8006b10:	e783      	b.n	8006a1a <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006b12:	f7ff ff6b 	bl	80069ec <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006b16:	4620      	mov	r0, r4
 8006b18:	f7ff ff6a 	bl	80069f0 <HAL_TIM_PWM_PulseFinishedCallback>
 8006b1c:	e792      	b.n	8006a44 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006b1e:	f7ff ff65 	bl	80069ec <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006b22:	4620      	mov	r0, r4
 8006b24:	f7ff ff64 	bl	80069f0 <HAL_TIM_PWM_PulseFinishedCallback>
 8006b28:	e7a0      	b.n	8006a6c <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006b2a:	f7ff ff5f 	bl	80069ec <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006b2e:	4620      	mov	r0, r4
 8006b30:	f7ff ff5e 	bl	80069f0 <HAL_TIM_PWM_PulseFinishedCallback>
 8006b34:	e7af      	b.n	8006a96 <HAL_TIM_IRQHandler+0xa2>
}
 8006b36:	bd10      	pop	{r4, pc}

08006b38 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006b38:	4a30      	ldr	r2, [pc, #192]	; (8006bfc <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8006b3a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006b3c:	4290      	cmp	r0, r2
 8006b3e:	d012      	beq.n	8006b66 <TIM_Base_SetConfig+0x2e>
 8006b40:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006b44:	d00f      	beq.n	8006b66 <TIM_Base_SetConfig+0x2e>
 8006b46:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006b4a:	4290      	cmp	r0, r2
 8006b4c:	d00b      	beq.n	8006b66 <TIM_Base_SetConfig+0x2e>
 8006b4e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006b52:	4290      	cmp	r0, r2
 8006b54:	d007      	beq.n	8006b66 <TIM_Base_SetConfig+0x2e>
 8006b56:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006b5a:	4290      	cmp	r0, r2
 8006b5c:	d003      	beq.n	8006b66 <TIM_Base_SetConfig+0x2e>
 8006b5e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006b62:	4290      	cmp	r0, r2
 8006b64:	d119      	bne.n	8006b9a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006b66:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006b68:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8006b6c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006b6e:	4a23      	ldr	r2, [pc, #140]	; (8006bfc <TIM_Base_SetConfig+0xc4>)
 8006b70:	4290      	cmp	r0, r2
 8006b72:	d029      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006b74:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006b78:	d026      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006b7a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006b7e:	4290      	cmp	r0, r2
 8006b80:	d022      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006b82:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006b86:	4290      	cmp	r0, r2
 8006b88:	d01e      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006b8a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006b8e:	4290      	cmp	r0, r2
 8006b90:	d01a      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006b92:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006b96:	4290      	cmp	r0, r2
 8006b98:	d016      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006b9a:	4a19      	ldr	r2, [pc, #100]	; (8006c00 <TIM_Base_SetConfig+0xc8>)
 8006b9c:	4290      	cmp	r0, r2
 8006b9e:	d013      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006ba0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ba4:	4290      	cmp	r0, r2
 8006ba6:	d00f      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006ba8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006bac:	4290      	cmp	r0, r2
 8006bae:	d00b      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006bb0:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006bb4:	4290      	cmp	r0, r2
 8006bb6:	d007      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006bb8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006bbc:	4290      	cmp	r0, r2
 8006bbe:	d003      	beq.n	8006bc8 <TIM_Base_SetConfig+0x90>
 8006bc0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006bc4:	4290      	cmp	r0, r2
 8006bc6:	d103      	bne.n	8006bd0 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006bc8:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006bca:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006bce:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006bd0:	694a      	ldr	r2, [r1, #20]
 8006bd2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006bd6:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006bd8:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006bda:	688b      	ldr	r3, [r1, #8]
 8006bdc:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006bde:	680b      	ldr	r3, [r1, #0]
 8006be0:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006be2:	4b06      	ldr	r3, [pc, #24]	; (8006bfc <TIM_Base_SetConfig+0xc4>)
 8006be4:	4298      	cmp	r0, r3
 8006be6:	d003      	beq.n	8006bf0 <TIM_Base_SetConfig+0xb8>
 8006be8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006bec:	4298      	cmp	r0, r3
 8006bee:	d101      	bne.n	8006bf4 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006bf0:	690b      	ldr	r3, [r1, #16]
 8006bf2:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006bf4:	2301      	movs	r3, #1
 8006bf6:	6143      	str	r3, [r0, #20]
}
 8006bf8:	4770      	bx	lr
 8006bfa:	bf00      	nop
 8006bfc:	40010000 	.word	0x40010000
 8006c00:	40014000 	.word	0x40014000

08006c04 <HAL_TIM_Base_Init>:
{
 8006c04:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006c06:	4604      	mov	r4, r0
 8006c08:	b330      	cbz	r0, 8006c58 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006c0a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006c0e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006c12:	b91b      	cbnz	r3, 8006c1c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006c14:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006c18:	f7ff feac 	bl	8006974 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006c1c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006c1e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006c20:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006c24:	1d21      	adds	r1, r4, #4
 8006c26:	f7ff ff87 	bl	8006b38 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006c2a:	2301      	movs	r3, #1
 8006c2c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8006c30:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006c32:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8006c36:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8006c3a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8006c3e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006c42:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006c46:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8006c4a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8006c4e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006c52:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8006c56:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006c58:	2001      	movs	r0, #1
 8006c5a:	e7fc      	b.n	8006c56 <HAL_TIM_Base_Init+0x52>

08006c5c <HAL_TIMEx_CommutCallback>:
 8006c5c:	4770      	bx	lr

08006c5e <HAL_TIMEx_BreakCallback>:
 8006c5e:	4770      	bx	lr

08006c60 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006c60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006c64:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006c68:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006c6a:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 8006c6e:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8006c72:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8006c76:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 8006c7a:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8006c7c:	b9a2      	cbnz	r2, 8006ca8 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006c7e:	ea43 0209 	orr.w	r2, r3, r9
 8006c82:	432a      	orrs	r2, r5
 8006c84:	ea42 0308 	orr.w	r3, r2, r8
 8006c88:	6801      	ldr	r1, [r0, #0]
 8006c8a:	ea43 030e 	orr.w	r3, r3, lr
 8006c8e:	ea43 030c 	orr.w	r3, r3, ip
 8006c92:	433b      	orrs	r3, r7
 8006c94:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8006c98:	4333      	orrs	r3, r6
 8006c9a:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8006c9e:	430b      	orrs	r3, r1
 8006ca0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006ca2:	2000      	movs	r0, #0
 8006ca4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8006ca8:	6802      	ldr	r2, [r0, #0]
 8006caa:	ea43 0309 	orr.w	r3, r3, r9
 8006cae:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006cb2:	4313      	orrs	r3, r2
 8006cb4:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8006cb6:	ea45 0308 	orr.w	r3, r5, r8
 8006cba:	6842      	ldr	r2, [r0, #4]
 8006cbc:	ea43 030e 	orr.w	r3, r3, lr
 8006cc0:	ea43 030c 	orr.w	r3, r3, ip
 8006cc4:	433b      	orrs	r3, r7
 8006cc6:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8006cca:	4333      	orrs	r3, r6
 8006ccc:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8006cd0:	4313      	orrs	r3, r2
 8006cd2:	6043      	str	r3, [r0, #4]
 8006cd4:	e7e5      	b.n	8006ca2 <FMC_SDRAM_Init+0x42>

08006cd6 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006cd6:	68cb      	ldr	r3, [r1, #12]
 8006cd8:	f103 3cff 	add.w	ip, r3, #4294967295
 8006cdc:	694b      	ldr	r3, [r1, #20]
{
 8006cde:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006ce0:	680f      	ldr	r7, [r1, #0]
 8006ce2:	684c      	ldr	r4, [r1, #4]
 8006ce4:	688e      	ldr	r6, [r1, #8]
 8006ce6:	690d      	ldr	r5, [r1, #16]
 8006ce8:	6989      	ldr	r1, [r1, #24]
 8006cea:	3b01      	subs	r3, #1
 8006cec:	051b      	lsls	r3, r3, #20
 8006cee:	3c01      	subs	r4, #1
 8006cf0:	3e01      	subs	r6, #1
 8006cf2:	3d01      	subs	r5, #1
 8006cf4:	3901      	subs	r1, #1
 8006cf6:	3f01      	subs	r7, #1
 8006cf8:	0124      	lsls	r4, r4, #4
 8006cfa:	0236      	lsls	r6, r6, #8
 8006cfc:	042d      	lsls	r5, r5, #16
 8006cfe:	0609      	lsls	r1, r1, #24
 8006d00:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8006d04:	b95a      	cbnz	r2, 8006d1e <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006d06:	433b      	orrs	r3, r7
 8006d08:	4323      	orrs	r3, r4
 8006d0a:	6882      	ldr	r2, [r0, #8]
 8006d0c:	4333      	orrs	r3, r6
 8006d0e:	432b      	orrs	r3, r5
 8006d10:	430b      	orrs	r3, r1
 8006d12:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8006d16:	4313      	orrs	r3, r2
 8006d18:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8006d1a:	2000      	movs	r0, #0
 8006d1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006d1e:	6882      	ldr	r2, [r0, #8]
 8006d20:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8006d24:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8006d28:	431a      	orrs	r2, r3
 8006d2a:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8006d2c:	ea44 0306 	orr.w	r3, r4, r6
 8006d30:	68c2      	ldr	r2, [r0, #12]
 8006d32:	433b      	orrs	r3, r7
 8006d34:	432b      	orrs	r3, r5
 8006d36:	430b      	orrs	r3, r1
 8006d38:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8006d3c:	4313      	orrs	r3, r2
 8006d3e:	60c3      	str	r3, [r0, #12]
 8006d40:	e7eb      	b.n	8006d1a <FMC_SDRAM_Timing_Init+0x44>

08006d42 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8006d42:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8006d46:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8006d4a:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 8006d4e:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8006d52:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8006d54:	2300      	movs	r3, #0
 8006d56:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8006d58:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8006d5a:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8006d5c:	4618      	mov	r0, r3
 8006d5e:	4770      	bx	lr

08006d60 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006d60:	b570      	push	{r4, r5, r6, lr}
 8006d62:	4604      	mov	r4, r0
 8006d64:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8006d66:	6902      	ldr	r2, [r0, #16]
 8006d68:	e9d1 3000 	ldrd	r3, r0, [r1]
 8006d6c:	4303      	orrs	r3, r0
 8006d6e:	68c8      	ldr	r0, [r1, #12]
 8006d70:	0d92      	lsrs	r2, r2, #22
 8006d72:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8006d76:	0592      	lsls	r2, r2, #22
 8006d78:	4313      	orrs	r3, r2
 8006d7a:	688a      	ldr	r2, [r1, #8]
 8006d7c:	3a01      	subs	r2, #1
 8006d7e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006d82:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8006d84:	f7fd f83a 	bl	8003dfc <HAL_GetTick>
 8006d88:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006d8a:	69a3      	ldr	r3, [r4, #24]
 8006d8c:	f013 0320 	ands.w	r3, r3, #32
 8006d90:	d101      	bne.n	8006d96 <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8006d92:	4618      	mov	r0, r3
 8006d94:	e003      	b.n	8006d9e <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 8006d96:	1c6b      	adds	r3, r5, #1
 8006d98:	d0f7      	beq.n	8006d8a <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006d9a:	b90d      	cbnz	r5, 8006da0 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8006d9c:	2003      	movs	r0, #3
}
 8006d9e:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006da0:	f7fd f82c 	bl	8003dfc <HAL_GetTick>
 8006da4:	1b80      	subs	r0, r0, r6
 8006da6:	42a8      	cmp	r0, r5
 8006da8:	d9ef      	bls.n	8006d8a <FMC_SDRAM_SendCommand+0x2a>
 8006daa:	e7f7      	b.n	8006d9c <FMC_SDRAM_SendCommand+0x3c>

08006dac <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8006dac:	6943      	ldr	r3, [r0, #20]
 8006dae:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8006db2:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8006db6:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006dba:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8006dbc:	2000      	movs	r0, #0
 8006dbe:	4770      	bx	lr

08006dc0 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8006dc0:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8006dc2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006dc6:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8006dc8:	f001 fe3c 	bl	8008a44 <xTaskGetSchedulerState>
 8006dcc:	2801      	cmp	r0, #1
 8006dce:	d003      	beq.n	8006dd8 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8006dd0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8006dd4:	f000 bbde 	b.w	8007594 <xPortSysTickHandler>
}
 8006dd8:	bd08      	pop	{r3, pc}
	...

08006ddc <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006ddc:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006de0:	b92b      	cbnz	r3, 8006dee <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8006de2:	4b06      	ldr	r3, [pc, #24]	; (8006dfc <osKernelInitialize+0x20>)
 8006de4:	6818      	ldr	r0, [r3, #0]
 8006de6:	b928      	cbnz	r0, 8006df4 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006de8:	2201      	movs	r2, #1
 8006dea:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8006dec:	4770      	bx	lr
    stat = osErrorISR;
 8006dee:	f06f 0005 	mvn.w	r0, #5
 8006df2:	4770      	bx	lr
    } else {
      stat = osError;
 8006df4:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006df8:	4770      	bx	lr
 8006dfa:	bf00      	nop
 8006dfc:	20001b00 	.word	0x20001b00

08006e00 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006e00:	b510      	push	{r4, lr}
 8006e02:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006e06:	b95c      	cbnz	r4, 8006e20 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8006e08:	4b08      	ldr	r3, [pc, #32]	; (8006e2c <osKernelStart+0x2c>)
 8006e0a:	681a      	ldr	r2, [r3, #0]
 8006e0c:	2a01      	cmp	r2, #1
 8006e0e:	d10a      	bne.n	8006e26 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006e10:	4a07      	ldr	r2, [pc, #28]	; (8006e30 <osKernelStart+0x30>)
 8006e12:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8006e14:	2202      	movs	r2, #2
 8006e16:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8006e18:	f001 fcb8 	bl	800878c <vTaskStartScheduler>
      stat = osOK;
 8006e1c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8006e1e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006e20:	f06f 0005 	mvn.w	r0, #5
 8006e24:	e7fb      	b.n	8006e1e <osKernelStart+0x1e>
      stat = osError;
 8006e26:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006e2a:	e7f8      	b.n	8006e1e <osKernelStart+0x1e>
 8006e2c:	20001b00 	.word	0x20001b00
 8006e30:	e000ed00 	.word	0xe000ed00

08006e34 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006e34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006e36:	b087      	sub	sp, #28
 8006e38:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006e3a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006e3c:	460b      	mov	r3, r1
  hTask = NULL;
 8006e3e:	9205      	str	r2, [sp, #20]
 8006e40:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006e44:	b9d2      	cbnz	r2, 8006e7c <osThreadNew+0x48>
 8006e46:	b1c8      	cbz	r0, 8006e7c <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006e48:	2c00      	cmp	r4, #0
 8006e4a:	d02f      	beq.n	8006eac <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006e4c:	69a5      	ldr	r5, [r4, #24]
 8006e4e:	2d00      	cmp	r5, #0
 8006e50:	bf08      	it	eq
 8006e52:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006e54:	1e69      	subs	r1, r5, #1
 8006e56:	2937      	cmp	r1, #55	; 0x37
 8006e58:	46ac      	mov	ip, r5
 8006e5a:	d82b      	bhi.n	8006eb4 <osThreadNew+0x80>
 8006e5c:	6861      	ldr	r1, [r4, #4]
 8006e5e:	07c9      	lsls	r1, r1, #31
 8006e60:	d428      	bmi.n	8006eb4 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006e62:	6966      	ldr	r6, [r4, #20]
 8006e64:	b16e      	cbz	r6, 8006e82 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006e66:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006e68:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8006e6c:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006e6e:	b157      	cbz	r7, 8006e86 <osThreadNew+0x52>
 8006e70:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006e74:	d902      	bls.n	8006e7c <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006e76:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006e78:	b104      	cbz	r4, 8006e7c <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006e7a:	b9ee      	cbnz	r6, 8006eb8 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006e7c:	9805      	ldr	r0, [sp, #20]
}
 8006e7e:	b007      	add	sp, #28
 8006e80:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006e82:	2280      	movs	r2, #128	; 0x80
 8006e84:	e7f0      	b.n	8006e68 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006e86:	f1be 0f00 	cmp.w	lr, #0
 8006e8a:	d1f7      	bne.n	8006e7c <osThreadNew+0x48>
      if (mem == 0) {
 8006e8c:	6924      	ldr	r4, [r4, #16]
 8006e8e:	2c00      	cmp	r4, #0
 8006e90:	d1f4      	bne.n	8006e7c <osThreadNew+0x48>
 8006e92:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006e94:	a905      	add	r1, sp, #20
 8006e96:	e9cd c100 	strd	ip, r1, [sp]
 8006e9a:	b292      	uxth	r2, r2
 8006e9c:	4621      	mov	r1, r4
 8006e9e:	f001 faf0 	bl	8008482 <xTaskCreate>
 8006ea2:	2801      	cmp	r0, #1
            hTask = NULL;
 8006ea4:	bf1c      	itt	ne
 8006ea6:	2300      	movne	r3, #0
 8006ea8:	9305      	strne	r3, [sp, #20]
 8006eaa:	e7e7      	b.n	8006e7c <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8006eac:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8006eb0:	2280      	movs	r2, #128	; 0x80
 8006eb2:	e7ef      	b.n	8006e94 <osThreadNew+0x60>
        return (NULL);
 8006eb4:	4610      	mov	r0, r2
 8006eb6:	e7e2      	b.n	8006e7e <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006eb8:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006ebc:	9500      	str	r5, [sp, #0]
 8006ebe:	f001 faa8 	bl	8008412 <xTaskCreateStatic>
 8006ec2:	9005      	str	r0, [sp, #20]
 8006ec4:	e7da      	b.n	8006e7c <osThreadNew+0x48>

08006ec6 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8006ec6:	b510      	push	{r4, lr}
 8006ec8:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006ecc:	b924      	cbnz	r4, 8006ed8 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8006ece:	b110      	cbz	r0, 8006ed6 <osDelay+0x10>
      vTaskDelay(ticks);
 8006ed0:	f001 fc1c 	bl	800870c <vTaskDelay>
    stat = osOK;
 8006ed4:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8006ed6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006ed8:	f06f 0005 	mvn.w	r0, #5
 8006edc:	e7fb      	b.n	8006ed6 <osDelay+0x10>

08006ede <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006ede:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006ee0:	4604      	mov	r4, r0
 8006ee2:	460e      	mov	r6, r1
 8006ee4:	4615      	mov	r5, r2
 8006ee6:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006eea:	b11a      	cbz	r2, 8006ef4 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006eec:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006eee:	4620      	mov	r0, r4
 8006ef0:	b003      	add	sp, #12
 8006ef2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006ef4:	2800      	cmp	r0, #0
 8006ef6:	d0f9      	beq.n	8006eec <osSemaphoreNew+0xe>
 8006ef8:	4288      	cmp	r0, r1
 8006efa:	d3f7      	bcc.n	8006eec <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8006efc:	b1e5      	cbz	r5, 8006f38 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006efe:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8006f02:	b1bb      	cbz	r3, 8006f34 <osSemaphoreNew+0x56>
 8006f04:	2f4f      	cmp	r7, #79	; 0x4f
 8006f06:	d9f1      	bls.n	8006eec <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006f08:	2801      	cmp	r0, #1
 8006f0a:	d12a      	bne.n	8006f62 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006f0c:	2103      	movs	r1, #3
 8006f0e:	9100      	str	r1, [sp, #0]
 8006f10:	4611      	mov	r1, r2
 8006f12:	f000 fce8 	bl	80078e6 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8006f16:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006f18:	2800      	cmp	r0, #0
 8006f1a:	d0e7      	beq.n	8006eec <osSemaphoreNew+0xe>
 8006f1c:	b1de      	cbz	r6, 8006f56 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006f1e:	2300      	movs	r3, #0
 8006f20:	461a      	mov	r2, r3
 8006f22:	4619      	mov	r1, r3
 8006f24:	f000 fd94 	bl	8007a50 <xQueueGenericSend>
 8006f28:	2801      	cmp	r0, #1
 8006f2a:	d014      	beq.n	8006f56 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8006f2c:	4620      	mov	r0, r4
 8006f2e:	f001 f8cf 	bl	80080d0 <vQueueDelete>
 8006f32:	e7db      	b.n	8006eec <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006f34:	2f00      	cmp	r7, #0
 8006f36:	d1d9      	bne.n	8006eec <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006f38:	2c01      	cmp	r4, #1
 8006f3a:	d105      	bne.n	8006f48 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8006f3c:	2203      	movs	r2, #3
 8006f3e:	2100      	movs	r1, #0
 8006f40:	4620      	mov	r0, r4
 8006f42:	f000 fd1e 	bl	8007982 <xQueueGenericCreate>
 8006f46:	e7e6      	b.n	8006f16 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006f48:	4620      	mov	r0, r4
 8006f4a:	4631      	mov	r1, r6
 8006f4c:	f000 fd62 	bl	8007a14 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006f50:	4604      	mov	r4, r0
 8006f52:	2800      	cmp	r0, #0
 8006f54:	d0ca      	beq.n	8006eec <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8006f56:	b955      	cbnz	r5, 8006f6e <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8006f58:	4629      	mov	r1, r5
 8006f5a:	4620      	mov	r0, r4
 8006f5c:	f001 f892 	bl	8008084 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006f60:	e7c5      	b.n	8006eee <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006f62:	461a      	mov	r2, r3
 8006f64:	f000 fd34 	bl	80079d0 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006f68:	4604      	mov	r4, r0
 8006f6a:	2800      	cmp	r0, #0
 8006f6c:	d0be      	beq.n	8006eec <osSemaphoreNew+0xe>
          name = attr->name;
 8006f6e:	682d      	ldr	r5, [r5, #0]
 8006f70:	e7f2      	b.n	8006f58 <osSemaphoreNew+0x7a>

08006f72 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006f72:	b513      	push	{r0, r1, r4, lr}
 8006f74:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006f76:	b308      	cbz	r0, 8006fbc <osSemaphoreAcquire+0x4a>
 8006f78:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006f7c:	b1b3      	cbz	r3, 8006fac <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8006f7e:	b9e9      	cbnz	r1, 8006fbc <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006f80:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006f82:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006f84:	f001 f82f 	bl	8007fe6 <xQueueReceiveFromISR>
 8006f88:	2801      	cmp	r0, #1
 8006f8a:	d114      	bne.n	8006fb6 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006f8c:	9b01      	ldr	r3, [sp, #4]
 8006f8e:	b913      	cbnz	r3, 8006f96 <osSemaphoreAcquire+0x24>
  stat = osOK;
 8006f90:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006f92:	b002      	add	sp, #8
 8006f94:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8006f96:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006f9a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006f9e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006fa2:	f3bf 8f4f 	dsb	sy
 8006fa6:	f3bf 8f6f 	isb	sy
 8006faa:	e7f1      	b.n	8006f90 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006fac:	f000 ff58 	bl	8007e60 <xQueueSemaphoreTake>
 8006fb0:	2801      	cmp	r0, #1
 8006fb2:	d0ed      	beq.n	8006f90 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8006fb4:	b92c      	cbnz	r4, 8006fc2 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8006fb6:	f06f 0002 	mvn.w	r0, #2
 8006fba:	e7ea      	b.n	8006f92 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8006fbc:	f06f 0003 	mvn.w	r0, #3
 8006fc0:	e7e7      	b.n	8006f92 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8006fc2:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006fc6:	e7e4      	b.n	8006f92 <osSemaphoreAcquire+0x20>

08006fc8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006fc8:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006fca:	b310      	cbz	r0, 8007012 <osSemaphoreRelease+0x4a>
 8006fcc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006fd0:	b1b3      	cbz	r3, 8007000 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8006fd2:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006fd4:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006fd6:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006fd8:	f000 fe4f 	bl	8007c7a <xQueueGiveFromISR>
 8006fdc:	2801      	cmp	r0, #1
 8006fde:	d115      	bne.n	800700c <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8006fe0:	9b01      	ldr	r3, [sp, #4]
 8006fe2:	b913      	cbnz	r3, 8006fea <osSemaphoreRelease+0x22>
  stat = osOK;
 8006fe4:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8006fe6:	b002      	add	sp, #8
 8006fe8:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006fea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006fee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006ff2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006ff6:	f3bf 8f4f 	dsb	sy
 8006ffa:	f3bf 8f6f 	isb	sy
 8006ffe:	e7f1      	b.n	8006fe4 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8007000:	461a      	mov	r2, r3
 8007002:	4619      	mov	r1, r3
 8007004:	f000 fd24 	bl	8007a50 <xQueueGenericSend>
 8007008:	2801      	cmp	r0, #1
 800700a:	d0eb      	beq.n	8006fe4 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800700c:	f06f 0002 	mvn.w	r0, #2
 8007010:	e7e9      	b.n	8006fe6 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8007012:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8007016:	e7e6      	b.n	8006fe6 <osSemaphoreRelease+0x1e>

08007018 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007018:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800701a:	4605      	mov	r5, r0
 800701c:	460e      	mov	r6, r1
 800701e:	4614      	mov	r4, r2
 8007020:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8007024:	b11f      	cbz	r7, 800702e <osMessageQueueNew+0x16>
  hQueue = NULL;
 8007026:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007028:	4628      	mov	r0, r5
 800702a:	b003      	add	sp, #12
 800702c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800702e:	2800      	cmp	r0, #0
 8007030:	d0f9      	beq.n	8007026 <osMessageQueueNew+0xe>
 8007032:	2900      	cmp	r1, #0
 8007034:	d0f7      	beq.n	8007026 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8007036:	b1da      	cbz	r2, 8007070 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007038:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800703c:	b183      	cbz	r3, 8007060 <osMessageQueueNew+0x48>
 800703e:	2a4f      	cmp	r2, #79	; 0x4f
 8007040:	d9f1      	bls.n	8007026 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007042:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007044:	2a00      	cmp	r2, #0
 8007046:	d0ee      	beq.n	8007026 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007048:	6966      	ldr	r6, [r4, #20]
 800704a:	434d      	muls	r5, r1
 800704c:	42ae      	cmp	r6, r5
 800704e:	d3ea      	bcc.n	8007026 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8007050:	9700      	str	r7, [sp, #0]
 8007052:	f000 fc48 	bl	80078e6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007056:	4605      	mov	r5, r0
 8007058:	2800      	cmp	r0, #0
 800705a:	d0e4      	beq.n	8007026 <osMessageQueueNew+0xe>
        name = attr->name;
 800705c:	6824      	ldr	r4, [r4, #0]
 800705e:	e011      	b.n	8007084 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007060:	2a00      	cmp	r2, #0
 8007062:	d1e0      	bne.n	8007026 <osMessageQueueNew+0xe>
 8007064:	6923      	ldr	r3, [r4, #16]
 8007066:	2b00      	cmp	r3, #0
 8007068:	d1dd      	bne.n	8007026 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800706a:	6963      	ldr	r3, [r4, #20]
 800706c:	2b00      	cmp	r3, #0
 800706e:	d1da      	bne.n	8007026 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8007070:	4628      	mov	r0, r5
 8007072:	2200      	movs	r2, #0
 8007074:	4631      	mov	r1, r6
 8007076:	f000 fc84 	bl	8007982 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800707a:	4605      	mov	r5, r0
 800707c:	2800      	cmp	r0, #0
 800707e:	d0d2      	beq.n	8007026 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8007080:	2c00      	cmp	r4, #0
 8007082:	d1eb      	bne.n	800705c <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8007084:	4621      	mov	r1, r4
 8007086:	4628      	mov	r0, r5
 8007088:	f000 fffc 	bl	8008084 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800708c:	e7cc      	b.n	8007028 <osMessageQueueNew+0x10>

0800708e <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800708e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007090:	461c      	mov	r4, r3
 8007092:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007096:	b1c6      	cbz	r6, 80070ca <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007098:	b318      	cbz	r0, 80070e2 <osMessageQueuePut+0x54>
 800709a:	b311      	cbz	r1, 80070e2 <osMessageQueuePut+0x54>
 800709c:	bb0b      	cbnz	r3, 80070e2 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800709e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80070a0:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80070a2:	f000 fd88 	bl	8007bb6 <xQueueGenericSendFromISR>
 80070a6:	2801      	cmp	r0, #1
 80070a8:	d118      	bne.n	80070dc <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80070aa:	9b01      	ldr	r3, [sp, #4]
 80070ac:	b913      	cbnz	r3, 80070b4 <osMessageQueuePut+0x26>
  stat = osOK;
 80070ae:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80070b0:	b002      	add	sp, #8
 80070b2:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 80070b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80070b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80070bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80070c0:	f3bf 8f4f 	dsb	sy
 80070c4:	f3bf 8f6f 	isb	sy
 80070c8:	e7f1      	b.n	80070ae <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80070ca:	b150      	cbz	r0, 80070e2 <osMessageQueuePut+0x54>
 80070cc:	b149      	cbz	r1, 80070e2 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80070ce:	4633      	mov	r3, r6
 80070d0:	4622      	mov	r2, r4
 80070d2:	f000 fcbd 	bl	8007a50 <xQueueGenericSend>
 80070d6:	2801      	cmp	r0, #1
 80070d8:	d0e9      	beq.n	80070ae <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 80070da:	b92c      	cbnz	r4, 80070e8 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 80070dc:	f06f 0002 	mvn.w	r0, #2
 80070e0:	e7e6      	b.n	80070b0 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 80070e2:	f06f 0003 	mvn.w	r0, #3
 80070e6:	e7e3      	b.n	80070b0 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 80070e8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80070ec:	e7e0      	b.n	80070b0 <osMessageQueuePut+0x22>

080070ee <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80070ee:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80070f0:	461c      	mov	r4, r3
 80070f2:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80070f6:	b1c3      	cbz	r3, 800712a <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80070f8:	b310      	cbz	r0, 8007140 <osMessageQueueGet+0x52>
 80070fa:	b309      	cbz	r1, 8007140 <osMessageQueueGet+0x52>
 80070fc:	bb04      	cbnz	r4, 8007140 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80070fe:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007100:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007102:	f000 ff70 	bl	8007fe6 <xQueueReceiveFromISR>
 8007106:	2801      	cmp	r0, #1
 8007108:	d117      	bne.n	800713a <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800710a:	9b01      	ldr	r3, [sp, #4]
 800710c:	b913      	cbnz	r3, 8007114 <osMessageQueueGet+0x26>
  stat = osOK;
 800710e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007110:	b003      	add	sp, #12
 8007112:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8007114:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007118:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800711c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007120:	f3bf 8f4f 	dsb	sy
 8007124:	f3bf 8f6f 	isb	sy
 8007128:	e7f1      	b.n	800710e <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800712a:	b148      	cbz	r0, 8007140 <osMessageQueueGet+0x52>
 800712c:	b141      	cbz	r1, 8007140 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800712e:	4622      	mov	r2, r4
 8007130:	f000 fdf7 	bl	8007d22 <xQueueReceive>
 8007134:	2801      	cmp	r0, #1
 8007136:	d0ea      	beq.n	800710e <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8007138:	b92c      	cbnz	r4, 8007146 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 800713a:	f06f 0002 	mvn.w	r0, #2
 800713e:	e7e7      	b.n	8007110 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8007140:	f06f 0003 	mvn.w	r0, #3
 8007144:	e7e4      	b.n	8007110 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8007146:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800714a:	e7e1      	b.n	8007110 <osMessageQueueGet+0x22>

0800714c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800714c:	4b03      	ldr	r3, [pc, #12]	; (800715c <vApplicationGetIdleTaskMemory+0x10>)
 800714e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007150:	4b03      	ldr	r3, [pc, #12]	; (8007160 <vApplicationGetIdleTaskMemory+0x14>)
 8007152:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007154:	2380      	movs	r3, #128	; 0x80
 8007156:	6013      	str	r3, [r2, #0]
}
 8007158:	4770      	bx	lr
 800715a:	bf00      	nop
 800715c:	20001aa0 	.word	0x20001aa0
 8007160:	200018a0 	.word	0x200018a0

08007164 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007164:	4b03      	ldr	r3, [pc, #12]	; (8007174 <vApplicationGetTimerTaskMemory+0x10>)
 8007166:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007168:	4b03      	ldr	r3, [pc, #12]	; (8007178 <vApplicationGetTimerTaskMemory+0x14>)
 800716a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800716c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007170:	6013      	str	r3, [r2, #0]
}
 8007172:	4770      	bx	lr
 8007174:	20001f04 	.word	0x20001f04
 8007178:	20001b04 	.word	0x20001b04

0800717c <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800717c:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800717e:	4b0f      	ldr	r3, [pc, #60]	; (80071bc <prvInsertBlockIntoFreeList+0x40>)
 8007180:	461a      	mov	r2, r3
 8007182:	681b      	ldr	r3, [r3, #0]
 8007184:	4283      	cmp	r3, r0
 8007186:	d3fb      	bcc.n	8007180 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007188:	6854      	ldr	r4, [r2, #4]
 800718a:	1911      	adds	r1, r2, r4
 800718c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800718e:	bf01      	itttt	eq
 8007190:	6841      	ldreq	r1, [r0, #4]
 8007192:	4610      	moveq	r0, r2
 8007194:	1909      	addeq	r1, r1, r4
 8007196:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007198:	6844      	ldr	r4, [r0, #4]
 800719a:	1901      	adds	r1, r0, r4
 800719c:	428b      	cmp	r3, r1
 800719e:	d107      	bne.n	80071b0 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80071a0:	4907      	ldr	r1, [pc, #28]	; (80071c0 <prvInsertBlockIntoFreeList+0x44>)
 80071a2:	6809      	ldr	r1, [r1, #0]
 80071a4:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80071a6:	bf1f      	itttt	ne
 80071a8:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80071aa:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80071ac:	1909      	addne	r1, r1, r4
 80071ae:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80071b0:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80071b2:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80071b4:	bf18      	it	ne
 80071b6:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80071b8:	bd10      	pop	{r4, pc}
 80071ba:	bf00      	nop
 80071bc:	20009f7c 	.word	0x20009f7c
 80071c0:	20001f64 	.word	0x20001f64

080071c4 <pvPortMalloc>:
{
 80071c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071c8:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80071ca:	f001 f987 	bl	80084dc <vTaskSuspendAll>
		if( pxEnd == NULL )
 80071ce:	4842      	ldr	r0, [pc, #264]	; (80072d8 <pvPortMalloc+0x114>)
 80071d0:	4d42      	ldr	r5, [pc, #264]	; (80072dc <pvPortMalloc+0x118>)
 80071d2:	6803      	ldr	r3, [r0, #0]
 80071d4:	bb0b      	cbnz	r3, 800721a <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 80071d6:	4942      	ldr	r1, [pc, #264]	; (80072e0 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 80071d8:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 80071da:	bf1f      	itttt	ne
 80071dc:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80071de:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 80071e2:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 80071e6:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80071e8:	bf14      	ite	ne
 80071ea:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 80071ec:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 80071f0:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80071f2:	4e3c      	ldr	r6, [pc, #240]	; (80072e4 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 80071f4:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 80071f6:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 80071fa:	2300      	movs	r3, #0
 80071fc:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80071fe:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007200:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007204:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007206:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800720a:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800720c:	4a36      	ldr	r2, [pc, #216]	; (80072e8 <pvPortMalloc+0x124>)
 800720e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007210:	4a36      	ldr	r2, [pc, #216]	; (80072ec <pvPortMalloc+0x128>)
 8007212:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007214:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007218:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800721a:	682f      	ldr	r7, [r5, #0]
 800721c:	4227      	tst	r7, r4
 800721e:	d155      	bne.n	80072cc <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8007220:	2c00      	cmp	r4, #0
 8007222:	d046      	beq.n	80072b2 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8007224:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007228:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800722a:	bf1c      	itt	ne
 800722c:	f023 0307 	bicne.w	r3, r3, #7
 8007230:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007232:	2b00      	cmp	r3, #0
 8007234:	d04a      	beq.n	80072cc <pvPortMalloc+0x108>
 8007236:	4c2d      	ldr	r4, [pc, #180]	; (80072ec <pvPortMalloc+0x128>)
 8007238:	6826      	ldr	r6, [r4, #0]
 800723a:	429e      	cmp	r6, r3
 800723c:	d346      	bcc.n	80072cc <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800723e:	4a29      	ldr	r2, [pc, #164]	; (80072e4 <pvPortMalloc+0x120>)
 8007240:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007242:	6869      	ldr	r1, [r5, #4]
 8007244:	4299      	cmp	r1, r3
 8007246:	d204      	bcs.n	8007252 <pvPortMalloc+0x8e>
 8007248:	f8d5 c000 	ldr.w	ip, [r5]
 800724c:	f1bc 0f00 	cmp.w	ip, #0
 8007250:	d115      	bne.n	800727e <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8007252:	6800      	ldr	r0, [r0, #0]
 8007254:	42a8      	cmp	r0, r5
 8007256:	d039      	beq.n	80072cc <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007258:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800725a:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800725c:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007260:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007262:	2910      	cmp	r1, #16
 8007264:	d912      	bls.n	800728c <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007266:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007268:	0742      	lsls	r2, r0, #29
 800726a:	d00b      	beq.n	8007284 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800726c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007270:	f383 8811 	msr	BASEPRI, r3
 8007274:	f3bf 8f6f 	isb	sy
 8007278:	f3bf 8f4f 	dsb	sy
 800727c:	e7fe      	b.n	800727c <pvPortMalloc+0xb8>
 800727e:	462a      	mov	r2, r5
 8007280:	4665      	mov	r5, ip
 8007282:	e7de      	b.n	8007242 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007284:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007286:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007288:	f7ff ff78 	bl	800717c <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800728c:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800728e:	4916      	ldr	r1, [pc, #88]	; (80072e8 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 8007290:	4a17      	ldr	r2, [pc, #92]	; (80072f0 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007292:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007294:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007296:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8007298:	2300      	movs	r3, #0
 800729a:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800729c:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800729e:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80072a0:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 80072a2:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80072a6:	bf38      	it	cc
 80072a8:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80072aa:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80072ae:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 80072b0:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 80072b2:	f001 f9b7 	bl	8008624 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80072b6:	0763      	lsls	r3, r4, #29
 80072b8:	d00a      	beq.n	80072d0 <pvPortMalloc+0x10c>
 80072ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072be:	f383 8811 	msr	BASEPRI, r3
 80072c2:	f3bf 8f6f 	isb	sy
 80072c6:	f3bf 8f4f 	dsb	sy
 80072ca:	e7fe      	b.n	80072ca <pvPortMalloc+0x106>
void *pvReturn = NULL;
 80072cc:	2400      	movs	r4, #0
 80072ce:	e7f0      	b.n	80072b2 <pvPortMalloc+0xee>
}
 80072d0:	4620      	mov	r0, r4
 80072d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80072d6:	bf00      	nop
 80072d8:	20001f64 	.word	0x20001f64
 80072dc:	20009f68 	.word	0x20009f68
 80072e0:	20001f68 	.word	0x20001f68
 80072e4:	20009f7c 	.word	0x20009f7c
 80072e8:	20009f70 	.word	0x20009f70
 80072ec:	20009f6c 	.word	0x20009f6c
 80072f0:	20009f74 	.word	0x20009f74

080072f4 <vPortFree>:
{
 80072f4:	b510      	push	{r4, lr}
	if( pv != NULL )
 80072f6:	4604      	mov	r4, r0
 80072f8:	b390      	cbz	r0, 8007360 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 80072fa:	4a1a      	ldr	r2, [pc, #104]	; (8007364 <vPortFree+0x70>)
 80072fc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007300:	6812      	ldr	r2, [r2, #0]
 8007302:	4213      	tst	r3, r2
 8007304:	d108      	bne.n	8007318 <vPortFree+0x24>
 8007306:	f04f 0350 	mov.w	r3, #80	; 0x50
 800730a:	f383 8811 	msr	BASEPRI, r3
 800730e:	f3bf 8f6f 	isb	sy
 8007312:	f3bf 8f4f 	dsb	sy
 8007316:	e7fe      	b.n	8007316 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007318:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800731c:	b141      	cbz	r1, 8007330 <vPortFree+0x3c>
 800731e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007322:	f383 8811 	msr	BASEPRI, r3
 8007326:	f3bf 8f6f 	isb	sy
 800732a:	f3bf 8f4f 	dsb	sy
 800732e:	e7fe      	b.n	800732e <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007330:	ea23 0302 	bic.w	r3, r3, r2
 8007334:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007338:	f001 f8d0 	bl	80084dc <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800733c:	4a0a      	ldr	r2, [pc, #40]	; (8007368 <vPortFree+0x74>)
 800733e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007342:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007344:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007348:	440b      	add	r3, r1
 800734a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800734c:	f7ff ff16 	bl	800717c <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8007350:	4a06      	ldr	r2, [pc, #24]	; (800736c <vPortFree+0x78>)
 8007352:	6813      	ldr	r3, [r2, #0]
}
 8007354:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8007358:	3301      	adds	r3, #1
 800735a:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800735c:	f001 b962 	b.w	8008624 <xTaskResumeAll>
}
 8007360:	bd10      	pop	{r4, pc}
 8007362:	bf00      	nop
 8007364:	20009f68 	.word	0x20009f68
 8007368:	20009f6c 	.word	0x20009f6c
 800736c:	20009f78 	.word	0x20009f78

08007370 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007370:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007374:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007378:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800737c:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800737e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007380:	2300      	movs	r3, #0
 8007382:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007384:	4770      	bx	lr

08007386 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007386:	2300      	movs	r3, #0
 8007388:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800738a:	4770      	bx	lr

0800738c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800738c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800738e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007390:	689a      	ldr	r2, [r3, #8]
 8007392:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007394:	689a      	ldr	r2, [r3, #8]
 8007396:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007398:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800739a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800739c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800739e:	3301      	adds	r3, #1
 80073a0:	6003      	str	r3, [r0, #0]
}
 80073a2:	4770      	bx	lr

080073a4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80073a4:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80073a6:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80073a8:	1c63      	adds	r3, r4, #1
 80073aa:	d10a      	bne.n	80073c2 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80073ac:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80073ae:	685a      	ldr	r2, [r3, #4]
 80073b0:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80073b2:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80073b4:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80073b6:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80073b8:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80073ba:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80073bc:	3301      	adds	r3, #1
 80073be:	6003      	str	r3, [r0, #0]
}
 80073c0:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80073c2:	f100 0208 	add.w	r2, r0, #8
 80073c6:	4613      	mov	r3, r2
 80073c8:	6852      	ldr	r2, [r2, #4]
 80073ca:	6815      	ldr	r5, [r2, #0]
 80073cc:	42a5      	cmp	r5, r4
 80073ce:	d9fa      	bls.n	80073c6 <vListInsert+0x22>
 80073d0:	e7ed      	b.n	80073ae <vListInsert+0xa>

080073d2 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80073d2:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 80073d6:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 80073d8:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 80073da:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 80073dc:	6859      	ldr	r1, [r3, #4]
 80073de:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 80073e0:	bf08      	it	eq
 80073e2:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 80073e4:	2200      	movs	r2, #0
 80073e6:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 80073e8:	681a      	ldr	r2, [r3, #0]
 80073ea:	3a01      	subs	r2, #1
 80073ec:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80073ee:	6818      	ldr	r0, [r3, #0]
}
 80073f0:	4770      	bx	lr
	...

080073f4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80073f4:	4808      	ldr	r0, [pc, #32]	; (8007418 <prvPortStartFirstTask+0x24>)
 80073f6:	6800      	ldr	r0, [r0, #0]
 80073f8:	6800      	ldr	r0, [r0, #0]
 80073fa:	f380 8808 	msr	MSP, r0
 80073fe:	f04f 0000 	mov.w	r0, #0
 8007402:	f380 8814 	msr	CONTROL, r0
 8007406:	b662      	cpsie	i
 8007408:	b661      	cpsie	f
 800740a:	f3bf 8f4f 	dsb	sy
 800740e:	f3bf 8f6f 	isb	sy
 8007412:	df00      	svc	0
 8007414:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007416:	0000      	.short	0x0000
 8007418:	e000ed08 	.word	0xe000ed08

0800741c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800741c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800742c <vPortEnableVFP+0x10>
 8007420:	6801      	ldr	r1, [r0, #0]
 8007422:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007426:	6001      	str	r1, [r0, #0]
 8007428:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800742a:	0000      	.short	0x0000
 800742c:	e000ed88 	.word	0xe000ed88

08007430 <prvTaskExitError>:
{
 8007430:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007432:	2300      	movs	r3, #0
 8007434:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007436:	4b0d      	ldr	r3, [pc, #52]	; (800746c <prvTaskExitError+0x3c>)
 8007438:	681b      	ldr	r3, [r3, #0]
 800743a:	3301      	adds	r3, #1
 800743c:	d008      	beq.n	8007450 <prvTaskExitError+0x20>
 800743e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007442:	f383 8811 	msr	BASEPRI, r3
 8007446:	f3bf 8f6f 	isb	sy
 800744a:	f3bf 8f4f 	dsb	sy
 800744e:	e7fe      	b.n	800744e <prvTaskExitError+0x1e>
 8007450:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007454:	f383 8811 	msr	BASEPRI, r3
 8007458:	f3bf 8f6f 	isb	sy
 800745c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007460:	9b01      	ldr	r3, [sp, #4]
 8007462:	2b00      	cmp	r3, #0
 8007464:	d0fc      	beq.n	8007460 <prvTaskExitError+0x30>
}
 8007466:	b002      	add	sp, #8
 8007468:	4770      	bx	lr
 800746a:	bf00      	nop
 800746c:	2000005c 	.word	0x2000005c

08007470 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007470:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8007474:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007478:	4b07      	ldr	r3, [pc, #28]	; (8007498 <pxPortInitialiseStack+0x28>)
 800747a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800747e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007482:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007486:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800748a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800748e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007492:	3844      	subs	r0, #68	; 0x44
 8007494:	4770      	bx	lr
 8007496:	bf00      	nop
 8007498:	08007431 	.word	0x08007431
 800749c:	00000000 	.word	0x00000000

080074a0 <SVC_Handler>:
	__asm volatile (
 80074a0:	4b07      	ldr	r3, [pc, #28]	; (80074c0 <pxCurrentTCBConst2>)
 80074a2:	6819      	ldr	r1, [r3, #0]
 80074a4:	6808      	ldr	r0, [r1, #0]
 80074a6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074aa:	f380 8809 	msr	PSP, r0
 80074ae:	f3bf 8f6f 	isb	sy
 80074b2:	f04f 0000 	mov.w	r0, #0
 80074b6:	f380 8811 	msr	BASEPRI, r0
 80074ba:	4770      	bx	lr
 80074bc:	f3af 8000 	nop.w

080074c0 <pxCurrentTCBConst2>:
 80074c0:	20009fcc 	.word	0x20009fcc

080074c4 <vPortEnterCritical>:
 80074c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074c8:	f383 8811 	msr	BASEPRI, r3
 80074cc:	f3bf 8f6f 	isb	sy
 80074d0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 80074d4:	4a0a      	ldr	r2, [pc, #40]	; (8007500 <vPortEnterCritical+0x3c>)
 80074d6:	6813      	ldr	r3, [r2, #0]
 80074d8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 80074da:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 80074dc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 80074de:	d10e      	bne.n	80074fe <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 80074e0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80074e4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 80074e8:	b2db      	uxtb	r3, r3
 80074ea:	b143      	cbz	r3, 80074fe <vPortEnterCritical+0x3a>
 80074ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074f0:	f383 8811 	msr	BASEPRI, r3
 80074f4:	f3bf 8f6f 	isb	sy
 80074f8:	f3bf 8f4f 	dsb	sy
 80074fc:	e7fe      	b.n	80074fc <vPortEnterCritical+0x38>
}
 80074fe:	4770      	bx	lr
 8007500:	2000005c 	.word	0x2000005c

08007504 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007504:	4a08      	ldr	r2, [pc, #32]	; (8007528 <vPortExitCritical+0x24>)
 8007506:	6813      	ldr	r3, [r2, #0]
 8007508:	b943      	cbnz	r3, 800751c <vPortExitCritical+0x18>
 800750a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800750e:	f383 8811 	msr	BASEPRI, r3
 8007512:	f3bf 8f6f 	isb	sy
 8007516:	f3bf 8f4f 	dsb	sy
 800751a:	e7fe      	b.n	800751a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800751c:	3b01      	subs	r3, #1
 800751e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007520:	b90b      	cbnz	r3, 8007526 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007522:	f383 8811 	msr	BASEPRI, r3
}
 8007526:	4770      	bx	lr
 8007528:	2000005c 	.word	0x2000005c
 800752c:	00000000 	.word	0x00000000

08007530 <PendSV_Handler>:
	__asm volatile
 8007530:	f3ef 8009 	mrs	r0, PSP
 8007534:	f3bf 8f6f 	isb	sy
 8007538:	4b15      	ldr	r3, [pc, #84]	; (8007590 <pxCurrentTCBConst>)
 800753a:	681a      	ldr	r2, [r3, #0]
 800753c:	f01e 0f10 	tst.w	lr, #16
 8007540:	bf08      	it	eq
 8007542:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007546:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800754a:	6010      	str	r0, [r2, #0]
 800754c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007550:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007554:	f380 8811 	msr	BASEPRI, r0
 8007558:	f3bf 8f4f 	dsb	sy
 800755c:	f3bf 8f6f 	isb	sy
 8007560:	f001 f962 	bl	8008828 <vTaskSwitchContext>
 8007564:	f04f 0000 	mov.w	r0, #0
 8007568:	f380 8811 	msr	BASEPRI, r0
 800756c:	bc09      	pop	{r0, r3}
 800756e:	6819      	ldr	r1, [r3, #0]
 8007570:	6808      	ldr	r0, [r1, #0]
 8007572:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007576:	f01e 0f10 	tst.w	lr, #16
 800757a:	bf08      	it	eq
 800757c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007580:	f380 8809 	msr	PSP, r0
 8007584:	f3bf 8f6f 	isb	sy
 8007588:	4770      	bx	lr
 800758a:	bf00      	nop
 800758c:	f3af 8000 	nop.w

08007590 <pxCurrentTCBConst>:
 8007590:	20009fcc 	.word	0x20009fcc

08007594 <xPortSysTickHandler>:
{
 8007594:	b508      	push	{r3, lr}
	__asm volatile
 8007596:	f04f 0350 	mov.w	r3, #80	; 0x50
 800759a:	f383 8811 	msr	BASEPRI, r3
 800759e:	f3bf 8f6f 	isb	sy
 80075a2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80075a6:	f000 ffa7 	bl	80084f8 <xTaskIncrementTick>
 80075aa:	b128      	cbz	r0, 80075b8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80075ac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80075b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80075b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 80075b8:	2300      	movs	r3, #0
 80075ba:	f383 8811 	msr	BASEPRI, r3
}
 80075be:	bd08      	pop	{r3, pc}

080075c0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80075c0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80075c4:	2300      	movs	r3, #0
 80075c6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80075c8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80075ca:	4b05      	ldr	r3, [pc, #20]	; (80075e0 <vPortSetupTimerInterrupt+0x20>)
 80075cc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80075d0:	681b      	ldr	r3, [r3, #0]
 80075d2:	fbb3 f3f1 	udiv	r3, r3, r1
 80075d6:	3b01      	subs	r3, #1
 80075d8:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80075da:	2307      	movs	r3, #7
 80075dc:	6113      	str	r3, [r2, #16]
}
 80075de:	4770      	bx	lr
 80075e0:	20000050 	.word	0x20000050

080075e4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80075e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 80075e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80075ea:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 80075ee:	4a3a      	ldr	r2, [pc, #232]	; (80076d8 <xPortStartScheduler+0xf4>)
 80075f0:	4291      	cmp	r1, r2
 80075f2:	d108      	bne.n	8007606 <xPortStartScheduler+0x22>
	__asm volatile
 80075f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075f8:	f383 8811 	msr	BASEPRI, r3
 80075fc:	f3bf 8f6f 	isb	sy
 8007600:	f3bf 8f4f 	dsb	sy
 8007604:	e7fe      	b.n	8007604 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007606:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800760a:	4b34      	ldr	r3, [pc, #208]	; (80076dc <xPortStartScheduler+0xf8>)
 800760c:	429a      	cmp	r2, r3
 800760e:	d108      	bne.n	8007622 <xPortStartScheduler+0x3e>
 8007610:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007614:	f383 8811 	msr	BASEPRI, r3
 8007618:	f3bf 8f6f 	isb	sy
 800761c:	f3bf 8f4f 	dsb	sy
 8007620:	e7fe      	b.n	8007620 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007622:	4b2f      	ldr	r3, [pc, #188]	; (80076e0 <xPortStartScheduler+0xfc>)
 8007624:	781a      	ldrb	r2, [r3, #0]
 8007626:	b2d2      	uxtb	r2, r2
 8007628:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800762a:	22ff      	movs	r2, #255	; 0xff
 800762c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800762e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007630:	4a2c      	ldr	r2, [pc, #176]	; (80076e4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007632:	b2db      	uxtb	r3, r3
 8007634:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007638:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800763c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007640:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007642:	4a29      	ldr	r2, [pc, #164]	; (80076e8 <xPortStartScheduler+0x104>)
 8007644:	2307      	movs	r3, #7
 8007646:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007648:	2100      	movs	r1, #0
 800764a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800764e:	0600      	lsls	r0, r0, #24
 8007650:	f103 34ff 	add.w	r4, r3, #4294967295
 8007654:	d40c      	bmi.n	8007670 <xPortStartScheduler+0x8c>
 8007656:	b111      	cbz	r1, 800765e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007658:	2b03      	cmp	r3, #3
 800765a:	6013      	str	r3, [r2, #0]
 800765c:	d011      	beq.n	8007682 <xPortStartScheduler+0x9e>
 800765e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007662:	f383 8811 	msr	BASEPRI, r3
 8007666:	f3bf 8f6f 	isb	sy
 800766a:	f3bf 8f4f 	dsb	sy
 800766e:	e7fe      	b.n	800766e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007670:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007674:	005b      	lsls	r3, r3, #1
 8007676:	b2db      	uxtb	r3, r3
 8007678:	f88d 3003 	strb.w	r3, [sp, #3]
 800767c:	2101      	movs	r1, #1
 800767e:	4623      	mov	r3, r4
 8007680:	e7e3      	b.n	800764a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007682:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007686:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007688:	9b01      	ldr	r3, [sp, #4]
 800768a:	4a15      	ldr	r2, [pc, #84]	; (80076e0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800768c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007690:	b2db      	uxtb	r3, r3
 8007692:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007694:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007698:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800769c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80076a0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 80076a4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80076a8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 80076ac:	f7ff ff88 	bl	80075c0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80076b0:	4b0e      	ldr	r3, [pc, #56]	; (80076ec <xPortStartScheduler+0x108>)
 80076b2:	2500      	movs	r5, #0
 80076b4:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 80076b6:	f7ff feb1 	bl	800741c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80076ba:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 80076be:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80076c2:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 80076c6:	f7ff fe95 	bl	80073f4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80076ca:	f001 f8ad 	bl	8008828 <vTaskSwitchContext>
	prvTaskExitError();
 80076ce:	f7ff feaf 	bl	8007430 <prvTaskExitError>
}
 80076d2:	4628      	mov	r0, r5
 80076d4:	b003      	add	sp, #12
 80076d6:	bd30      	pop	{r4, r5, pc}
 80076d8:	410fc271 	.word	0x410fc271
 80076dc:	410fc270 	.word	0x410fc270
 80076e0:	e000e400 	.word	0xe000e400
 80076e4:	20009f84 	.word	0x20009f84
 80076e8:	20009f88 	.word	0x20009f88
 80076ec:	2000005c 	.word	0x2000005c

080076f0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80076f0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80076f4:	2b0f      	cmp	r3, #15
 80076f6:	d90e      	bls.n	8007716 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80076f8:	4a11      	ldr	r2, [pc, #68]	; (8007740 <vPortValidateInterruptPriority+0x50>)
 80076fa:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80076fc:	4a11      	ldr	r2, [pc, #68]	; (8007744 <vPortValidateInterruptPriority+0x54>)
 80076fe:	7812      	ldrb	r2, [r2, #0]
 8007700:	429a      	cmp	r2, r3
 8007702:	d908      	bls.n	8007716 <vPortValidateInterruptPriority+0x26>
 8007704:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007708:	f383 8811 	msr	BASEPRI, r3
 800770c:	f3bf 8f6f 	isb	sy
 8007710:	f3bf 8f4f 	dsb	sy
 8007714:	e7fe      	b.n	8007714 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007716:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800771a:	4a0b      	ldr	r2, [pc, #44]	; (8007748 <vPortValidateInterruptPriority+0x58>)
 800771c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8007720:	6812      	ldr	r2, [r2, #0]
 8007722:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007726:	4293      	cmp	r3, r2
 8007728:	d908      	bls.n	800773c <vPortValidateInterruptPriority+0x4c>
 800772a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800772e:	f383 8811 	msr	BASEPRI, r3
 8007732:	f3bf 8f6f 	isb	sy
 8007736:	f3bf 8f4f 	dsb	sy
 800773a:	e7fe      	b.n	800773a <vPortValidateInterruptPriority+0x4a>
	}
 800773c:	4770      	bx	lr
 800773e:	bf00      	nop
 8007740:	e000e3f0 	.word	0xe000e3f0
 8007744:	20009f84 	.word	0x20009f84
 8007748:	20009f88 	.word	0x20009f88

0800774c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800774c:	b510      	push	{r4, lr}
 800774e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007750:	f7ff feb8 	bl	80074c4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007754:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007756:	f7ff fed5 	bl	8007504 <vPortExitCritical>

	return xReturn;
}
 800775a:	fab4 f084 	clz	r0, r4
 800775e:	0940      	lsrs	r0, r0, #5
 8007760:	bd10      	pop	{r4, pc}

08007762 <prvCopyDataToQueue>:
{
 8007762:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007764:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007766:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007768:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800776a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800776c:	b952      	cbnz	r2, 8007784 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800776e:	6807      	ldr	r7, [r0, #0]
 8007770:	bb47      	cbnz	r7, 80077c4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007772:	6880      	ldr	r0, [r0, #8]
 8007774:	f001 f9b8 	bl	8008ae8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007778:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800777a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800777c:	3601      	adds	r6, #1
 800777e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007780:	4628      	mov	r0, r5
 8007782:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007784:	b965      	cbnz	r5, 80077a0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007786:	6840      	ldr	r0, [r0, #4]
 8007788:	f014 fb32 	bl	801bdf0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800778c:	6863      	ldr	r3, [r4, #4]
 800778e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007790:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007792:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007794:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007796:	4293      	cmp	r3, r2
 8007798:	d3f0      	bcc.n	800777c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800779a:	6823      	ldr	r3, [r4, #0]
 800779c:	6063      	str	r3, [r4, #4]
 800779e:	e7ed      	b.n	800777c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80077a0:	68c0      	ldr	r0, [r0, #12]
 80077a2:	f014 fb25 	bl	801bdf0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80077a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80077a8:	68e3      	ldr	r3, [r4, #12]
 80077aa:	4251      	negs	r1, r2
 80077ac:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80077ae:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80077b0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80077b2:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80077b4:	bf3e      	ittt	cc
 80077b6:	68a3      	ldrcc	r3, [r4, #8]
 80077b8:	185b      	addcc	r3, r3, r1
 80077ba:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80077bc:	2d02      	cmp	r5, #2
 80077be:	d101      	bne.n	80077c4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80077c0:	b116      	cbz	r6, 80077c8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 80077c2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 80077c4:	2500      	movs	r5, #0
 80077c6:	e7d9      	b.n	800777c <prvCopyDataToQueue+0x1a>
 80077c8:	4635      	mov	r5, r6
 80077ca:	e7d7      	b.n	800777c <prvCopyDataToQueue+0x1a>

080077cc <prvCopyDataFromQueue>:
{
 80077cc:	4603      	mov	r3, r0
 80077ce:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80077d0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 80077d2:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80077d4:	b16a      	cbz	r2, 80077f2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80077d6:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80077d8:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80077da:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80077dc:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80077de:	bf28      	it	cs
 80077e0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80077e2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80077e4:	bf28      	it	cs
 80077e6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80077e8:	68d9      	ldr	r1, [r3, #12]
}
 80077ea:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80077ee:	f014 baff 	b.w	801bdf0 <memcpy>
}
 80077f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80077f6:	4770      	bx	lr

080077f8 <prvUnlockQueue>:
{
 80077f8:	b570      	push	{r4, r5, r6, lr}
 80077fa:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80077fc:	f7ff fe62 	bl	80074c4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007800:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007804:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007808:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800780a:	2d00      	cmp	r5, #0
 800780c:	dc14      	bgt.n	8007838 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800780e:	23ff      	movs	r3, #255	; 0xff
 8007810:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007814:	f7ff fe76 	bl	8007504 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007818:	f7ff fe54 	bl	80074c4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800781c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007820:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007824:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007826:	2d00      	cmp	r5, #0
 8007828:	dc12      	bgt.n	8007850 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800782a:	23ff      	movs	r3, #255	; 0xff
 800782c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8007830:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007834:	f7ff be66 	b.w	8007504 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007838:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800783a:	2b00      	cmp	r3, #0
 800783c:	d0e7      	beq.n	800780e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800783e:	4630      	mov	r0, r6
 8007840:	f001 f86e 	bl	8008920 <xTaskRemoveFromEventList>
 8007844:	b108      	cbz	r0, 800784a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007846:	f001 f8f7 	bl	8008a38 <vTaskMissedYield>
			--cTxLock;
 800784a:	3d01      	subs	r5, #1
 800784c:	b26d      	sxtb	r5, r5
 800784e:	e7dc      	b.n	800780a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007850:	6923      	ldr	r3, [r4, #16]
 8007852:	2b00      	cmp	r3, #0
 8007854:	d0e9      	beq.n	800782a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007856:	4630      	mov	r0, r6
 8007858:	f001 f862 	bl	8008920 <xTaskRemoveFromEventList>
 800785c:	b108      	cbz	r0, 8007862 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800785e:	f001 f8eb 	bl	8008a38 <vTaskMissedYield>
				--cRxLock;
 8007862:	3d01      	subs	r5, #1
 8007864:	b26d      	sxtb	r5, r5
 8007866:	e7de      	b.n	8007826 <prvUnlockQueue+0x2e>

08007868 <xQueueGenericReset>:
{
 8007868:	b538      	push	{r3, r4, r5, lr}
 800786a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800786c:	4604      	mov	r4, r0
 800786e:	b940      	cbnz	r0, 8007882 <xQueueGenericReset+0x1a>
 8007870:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007874:	f383 8811 	msr	BASEPRI, r3
 8007878:	f3bf 8f6f 	isb	sy
 800787c:	f3bf 8f4f 	dsb	sy
 8007880:	e7fe      	b.n	8007880 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007882:	f7ff fe1f 	bl	80074c4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007886:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800788a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800788c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800788e:	434b      	muls	r3, r1
 8007890:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007892:	1a5b      	subs	r3, r3, r1
 8007894:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007896:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007898:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800789a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800789c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800789e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80078a0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80078a4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 80078a8:	b9a5      	cbnz	r5, 80078d4 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80078aa:	6923      	ldr	r3, [r4, #16]
 80078ac:	b173      	cbz	r3, 80078cc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80078ae:	f104 0010 	add.w	r0, r4, #16
 80078b2:	f001 f835 	bl	8008920 <xTaskRemoveFromEventList>
 80078b6:	b148      	cbz	r0, 80078cc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 80078b8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80078bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80078c0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80078c4:	f3bf 8f4f 	dsb	sy
 80078c8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80078cc:	f7ff fe1a 	bl	8007504 <vPortExitCritical>
}
 80078d0:	2001      	movs	r0, #1
 80078d2:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80078d4:	f104 0010 	add.w	r0, r4, #16
 80078d8:	f7ff fd4a 	bl	8007370 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80078dc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80078e0:	f7ff fd46 	bl	8007370 <vListInitialise>
 80078e4:	e7f2      	b.n	80078cc <xQueueGenericReset+0x64>

080078e6 <xQueueGenericCreateStatic>:
	{
 80078e6:	b513      	push	{r0, r1, r4, lr}
 80078e8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80078ea:	b940      	cbnz	r0, 80078fe <xQueueGenericCreateStatic+0x18>
 80078ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078f0:	f383 8811 	msr	BASEPRI, r3
 80078f4:	f3bf 8f6f 	isb	sy
 80078f8:	f3bf 8f4f 	dsb	sy
 80078fc:	e7fe      	b.n	80078fc <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80078fe:	b943      	cbnz	r3, 8007912 <xQueueGenericCreateStatic+0x2c>
 8007900:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007904:	f383 8811 	msr	BASEPRI, r3
 8007908:	f3bf 8f6f 	isb	sy
 800790c:	f3bf 8f4f 	dsb	sy
 8007910:	e7fe      	b.n	8007910 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007912:	b14a      	cbz	r2, 8007928 <xQueueGenericCreateStatic+0x42>
 8007914:	b991      	cbnz	r1, 800793c <xQueueGenericCreateStatic+0x56>
 8007916:	f04f 0350 	mov.w	r3, #80	; 0x50
 800791a:	f383 8811 	msr	BASEPRI, r3
 800791e:	f3bf 8f6f 	isb	sy
 8007922:	f3bf 8f4f 	dsb	sy
 8007926:	e7fe      	b.n	8007926 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007928:	b141      	cbz	r1, 800793c <xQueueGenericCreateStatic+0x56>
 800792a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800792e:	f383 8811 	msr	BASEPRI, r3
 8007932:	f3bf 8f6f 	isb	sy
 8007936:	f3bf 8f4f 	dsb	sy
 800793a:	e7fe      	b.n	800793a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800793c:	2350      	movs	r3, #80	; 0x50
 800793e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007940:	9b01      	ldr	r3, [sp, #4]
 8007942:	2b50      	cmp	r3, #80	; 0x50
 8007944:	d008      	beq.n	8007958 <xQueueGenericCreateStatic+0x72>
 8007946:	f04f 0350 	mov.w	r3, #80	; 0x50
 800794a:	f383 8811 	msr	BASEPRI, r3
 800794e:	f3bf 8f6f 	isb	sy
 8007952:	f3bf 8f4f 	dsb	sy
 8007956:	e7fe      	b.n	8007956 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007958:	2900      	cmp	r1, #0
 800795a:	bf08      	it	eq
 800795c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800795e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007960:	6022      	str	r2, [r4, #0]
 8007962:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8007964:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007968:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800796c:	4619      	mov	r1, r3
 800796e:	4620      	mov	r0, r4
 8007970:	f7ff ff7a 	bl	8007868 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007974:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007978:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800797c:	4620      	mov	r0, r4
 800797e:	b002      	add	sp, #8
 8007980:	bd10      	pop	{r4, pc}

08007982 <xQueueGenericCreate>:
	{
 8007982:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007984:	460d      	mov	r5, r1
 8007986:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007988:	4606      	mov	r6, r0
 800798a:	b940      	cbnz	r0, 800799e <xQueueGenericCreate+0x1c>
 800798c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007990:	f383 8811 	msr	BASEPRI, r3
 8007994:	f3bf 8f6f 	isb	sy
 8007998:	f3bf 8f4f 	dsb	sy
 800799c:	e7fe      	b.n	800799c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800799e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80079a0:	3050      	adds	r0, #80	; 0x50
 80079a2:	f7ff fc0f 	bl	80071c4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80079a6:	4604      	mov	r4, r0
 80079a8:	b170      	cbz	r0, 80079c8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80079aa:	2300      	movs	r3, #0
 80079ac:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80079b0:	b165      	cbz	r5, 80079cc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80079b2:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 80079b6:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 80079ba:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80079bc:	2101      	movs	r1, #1
 80079be:	4620      	mov	r0, r4
 80079c0:	f7ff ff52 	bl	8007868 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80079c4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 80079c8:	4620      	mov	r0, r4
 80079ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80079cc:	4603      	mov	r3, r0
 80079ce:	e7f2      	b.n	80079b6 <xQueueGenericCreate+0x34>

080079d0 <xQueueCreateCountingSemaphoreStatic>:
	{
 80079d0:	b513      	push	{r0, r1, r4, lr}
 80079d2:	4613      	mov	r3, r2
 80079d4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80079d6:	b940      	cbnz	r0, 80079ea <xQueueCreateCountingSemaphoreStatic+0x1a>
 80079d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079dc:	f383 8811 	msr	BASEPRI, r3
 80079e0:	f3bf 8f6f 	isb	sy
 80079e4:	f3bf 8f4f 	dsb	sy
 80079e8:	e7fe      	b.n	80079e8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80079ea:	4288      	cmp	r0, r1
 80079ec:	d208      	bcs.n	8007a00 <xQueueCreateCountingSemaphoreStatic+0x30>
 80079ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079f2:	f383 8811 	msr	BASEPRI, r3
 80079f6:	f3bf 8f6f 	isb	sy
 80079fa:	f3bf 8f4f 	dsb	sy
 80079fe:	e7fe      	b.n	80079fe <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007a00:	2202      	movs	r2, #2
 8007a02:	9200      	str	r2, [sp, #0]
 8007a04:	2200      	movs	r2, #0
 8007a06:	4611      	mov	r1, r2
 8007a08:	f7ff ff6d 	bl	80078e6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8007a0c:	b100      	cbz	r0, 8007a10 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007a0e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007a10:	b002      	add	sp, #8
 8007a12:	bd10      	pop	{r4, pc}

08007a14 <xQueueCreateCountingSemaphore>:
	{
 8007a14:	b510      	push	{r4, lr}
 8007a16:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007a18:	b940      	cbnz	r0, 8007a2c <xQueueCreateCountingSemaphore+0x18>
 8007a1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a1e:	f383 8811 	msr	BASEPRI, r3
 8007a22:	f3bf 8f6f 	isb	sy
 8007a26:	f3bf 8f4f 	dsb	sy
 8007a2a:	e7fe      	b.n	8007a2a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007a2c:	4288      	cmp	r0, r1
 8007a2e:	d208      	bcs.n	8007a42 <xQueueCreateCountingSemaphore+0x2e>
 8007a30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a34:	f383 8811 	msr	BASEPRI, r3
 8007a38:	f3bf 8f6f 	isb	sy
 8007a3c:	f3bf 8f4f 	dsb	sy
 8007a40:	e7fe      	b.n	8007a40 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007a42:	2202      	movs	r2, #2
 8007a44:	2100      	movs	r1, #0
 8007a46:	f7ff ff9c 	bl	8007982 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007a4a:	b100      	cbz	r0, 8007a4e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8007a4c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007a4e:	bd10      	pop	{r4, pc}

08007a50 <xQueueGenericSend>:
{
 8007a50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007a54:	b085      	sub	sp, #20
 8007a56:	4688      	mov	r8, r1
 8007a58:	9201      	str	r2, [sp, #4]
 8007a5a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007a5c:	4604      	mov	r4, r0
 8007a5e:	b940      	cbnz	r0, 8007a72 <xQueueGenericSend+0x22>
 8007a60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a64:	f383 8811 	msr	BASEPRI, r3
 8007a68:	f3bf 8f6f 	isb	sy
 8007a6c:	f3bf 8f4f 	dsb	sy
 8007a70:	e7fe      	b.n	8007a70 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007a72:	b951      	cbnz	r1, 8007a8a <xQueueGenericSend+0x3a>
 8007a74:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007a76:	b143      	cbz	r3, 8007a8a <xQueueGenericSend+0x3a>
 8007a78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a7c:	f383 8811 	msr	BASEPRI, r3
 8007a80:	f3bf 8f6f 	isb	sy
 8007a84:	f3bf 8f4f 	dsb	sy
 8007a88:	e7fe      	b.n	8007a88 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007a8a:	2f02      	cmp	r7, #2
 8007a8c:	d10b      	bne.n	8007aa6 <xQueueGenericSend+0x56>
 8007a8e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007a90:	2b01      	cmp	r3, #1
 8007a92:	d008      	beq.n	8007aa6 <xQueueGenericSend+0x56>
 8007a94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a98:	f383 8811 	msr	BASEPRI, r3
 8007a9c:	f3bf 8f6f 	isb	sy
 8007aa0:	f3bf 8f4f 	dsb	sy
 8007aa4:	e7fe      	b.n	8007aa4 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007aa6:	f000 ffcd 	bl	8008a44 <xTaskGetSchedulerState>
 8007aaa:	4606      	mov	r6, r0
 8007aac:	b950      	cbnz	r0, 8007ac4 <xQueueGenericSend+0x74>
 8007aae:	9b01      	ldr	r3, [sp, #4]
 8007ab0:	b14b      	cbz	r3, 8007ac6 <xQueueGenericSend+0x76>
 8007ab2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ab6:	f383 8811 	msr	BASEPRI, r3
 8007aba:	f3bf 8f6f 	isb	sy
 8007abe:	f3bf 8f4f 	dsb	sy
 8007ac2:	e7fe      	b.n	8007ac2 <xQueueGenericSend+0x72>
 8007ac4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007ac6:	f04f 0900 	mov.w	r9, #0
 8007aca:	e037      	b.n	8007b3c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007acc:	9d01      	ldr	r5, [sp, #4]
 8007ace:	b91d      	cbnz	r5, 8007ad8 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007ad0:	f7ff fd18 	bl	8007504 <vPortExitCritical>
			return errQUEUE_FULL;
 8007ad4:	2000      	movs	r0, #0
 8007ad6:	e052      	b.n	8007b7e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8007ad8:	b916      	cbnz	r6, 8007ae0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007ada:	a802      	add	r0, sp, #8
 8007adc:	f000 ff64 	bl	80089a8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007ae0:	f7ff fd10 	bl	8007504 <vPortExitCritical>
		vTaskSuspendAll();
 8007ae4:	f000 fcfa 	bl	80084dc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007ae8:	f7ff fcec 	bl	80074c4 <vPortEnterCritical>
 8007aec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007af0:	2bff      	cmp	r3, #255	; 0xff
 8007af2:	bf08      	it	eq
 8007af4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007af8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007afc:	2bff      	cmp	r3, #255	; 0xff
 8007afe:	bf08      	it	eq
 8007b00:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007b04:	f7ff fcfe 	bl	8007504 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007b08:	a901      	add	r1, sp, #4
 8007b0a:	a802      	add	r0, sp, #8
 8007b0c:	f000 ff58 	bl	80089c0 <xTaskCheckForTimeOut>
 8007b10:	2800      	cmp	r0, #0
 8007b12:	d14a      	bne.n	8007baa <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007b14:	f7ff fcd6 	bl	80074c4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007b18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007b1a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007b1c:	429a      	cmp	r2, r3
 8007b1e:	d131      	bne.n	8007b84 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007b20:	f7ff fcf0 	bl	8007504 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007b24:	9901      	ldr	r1, [sp, #4]
 8007b26:	f104 0010 	add.w	r0, r4, #16
 8007b2a:	f000 fec1 	bl	80088b0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007b2e:	4620      	mov	r0, r4
 8007b30:	f7ff fe62 	bl	80077f8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007b34:	f000 fd76 	bl	8008624 <xTaskResumeAll>
 8007b38:	b360      	cbz	r0, 8007b94 <xQueueGenericSend+0x144>
 8007b3a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007b3c:	f7ff fcc2 	bl	80074c4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007b40:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007b42:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007b44:	429a      	cmp	r2, r3
 8007b46:	d301      	bcc.n	8007b4c <xQueueGenericSend+0xfc>
 8007b48:	2f02      	cmp	r7, #2
 8007b4a:	d1bf      	bne.n	8007acc <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007b4c:	463a      	mov	r2, r7
 8007b4e:	4641      	mov	r1, r8
 8007b50:	4620      	mov	r0, r4
 8007b52:	f7ff fe06 	bl	8007762 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007b56:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b58:	b11b      	cbz	r3, 8007b62 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007b5a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007b5e:	f000 fedf 	bl	8008920 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007b62:	b148      	cbz	r0, 8007b78 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8007b64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007b68:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b6c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007b70:	f3bf 8f4f 	dsb	sy
 8007b74:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007b78:	f7ff fcc4 	bl	8007504 <vPortExitCritical>
				return pdPASS;
 8007b7c:	2001      	movs	r0, #1
}
 8007b7e:	b005      	add	sp, #20
 8007b80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8007b84:	f7ff fcbe 	bl	8007504 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007b88:	4620      	mov	r0, r4
 8007b8a:	f7ff fe35 	bl	80077f8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007b8e:	f000 fd49 	bl	8008624 <xTaskResumeAll>
 8007b92:	e7d2      	b.n	8007b3a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8007b94:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007b98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b9c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007ba0:	f3bf 8f4f 	dsb	sy
 8007ba4:	f3bf 8f6f 	isb	sy
 8007ba8:	e7c7      	b.n	8007b3a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8007baa:	4620      	mov	r0, r4
 8007bac:	f7ff fe24 	bl	80077f8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007bb0:	f000 fd38 	bl	8008624 <xTaskResumeAll>
 8007bb4:	e78e      	b.n	8007ad4 <xQueueGenericSend+0x84>

08007bb6 <xQueueGenericSendFromISR>:
{
 8007bb6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007bba:	4689      	mov	r9, r1
 8007bbc:	4690      	mov	r8, r2
 8007bbe:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007bc0:	4604      	mov	r4, r0
 8007bc2:	b940      	cbnz	r0, 8007bd6 <xQueueGenericSendFromISR+0x20>
 8007bc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bc8:	f383 8811 	msr	BASEPRI, r3
 8007bcc:	f3bf 8f6f 	isb	sy
 8007bd0:	f3bf 8f4f 	dsb	sy
 8007bd4:	e7fe      	b.n	8007bd4 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007bd6:	b951      	cbnz	r1, 8007bee <xQueueGenericSendFromISR+0x38>
 8007bd8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007bda:	b143      	cbz	r3, 8007bee <xQueueGenericSendFromISR+0x38>
 8007bdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007be0:	f383 8811 	msr	BASEPRI, r3
 8007be4:	f3bf 8f6f 	isb	sy
 8007be8:	f3bf 8f4f 	dsb	sy
 8007bec:	e7fe      	b.n	8007bec <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007bee:	2f02      	cmp	r7, #2
 8007bf0:	d10b      	bne.n	8007c0a <xQueueGenericSendFromISR+0x54>
 8007bf2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007bf4:	2b01      	cmp	r3, #1
 8007bf6:	d008      	beq.n	8007c0a <xQueueGenericSendFromISR+0x54>
 8007bf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bfc:	f383 8811 	msr	BASEPRI, r3
 8007c00:	f3bf 8f6f 	isb	sy
 8007c04:	f3bf 8f4f 	dsb	sy
 8007c08:	e7fe      	b.n	8007c08 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007c0a:	f7ff fd71 	bl	80076f0 <vPortValidateInterruptPriority>
	__asm volatile
 8007c0e:	f3ef 8611 	mrs	r6, BASEPRI
 8007c12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c16:	f383 8811 	msr	BASEPRI, r3
 8007c1a:	f3bf 8f6f 	isb	sy
 8007c1e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007c22:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007c24:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007c26:	429a      	cmp	r2, r3
 8007c28:	d301      	bcc.n	8007c2e <xQueueGenericSendFromISR+0x78>
 8007c2a:	2f02      	cmp	r7, #2
 8007c2c:	d123      	bne.n	8007c76 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007c2e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007c32:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007c34:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007c36:	463a      	mov	r2, r7
 8007c38:	4649      	mov	r1, r9
 8007c3a:	4620      	mov	r0, r4
 8007c3c:	f7ff fd91 	bl	8007762 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007c40:	1c6b      	adds	r3, r5, #1
 8007c42:	d113      	bne.n	8007c6c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007c44:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007c46:	b90b      	cbnz	r3, 8007c4c <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8007c48:	2001      	movs	r0, #1
 8007c4a:	e00b      	b.n	8007c64 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007c4c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007c50:	f000 fe66 	bl	8008920 <xTaskRemoveFromEventList>
 8007c54:	2800      	cmp	r0, #0
 8007c56:	d0f7      	beq.n	8007c48 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8007c58:	f1b8 0f00 	cmp.w	r8, #0
 8007c5c:	d0f4      	beq.n	8007c48 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007c5e:	2001      	movs	r0, #1
 8007c60:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007c64:	f386 8811 	msr	BASEPRI, r6
}
 8007c68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007c6c:	3501      	adds	r5, #1
 8007c6e:	b26d      	sxtb	r5, r5
 8007c70:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007c74:	e7e8      	b.n	8007c48 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8007c76:	2000      	movs	r0, #0
 8007c78:	e7f4      	b.n	8007c64 <xQueueGenericSendFromISR+0xae>

08007c7a <xQueueGiveFromISR>:
{
 8007c7a:	b570      	push	{r4, r5, r6, lr}
 8007c7c:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007c7e:	4604      	mov	r4, r0
 8007c80:	b940      	cbnz	r0, 8007c94 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007c82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c86:	f383 8811 	msr	BASEPRI, r3
 8007c8a:	f3bf 8f6f 	isb	sy
 8007c8e:	f3bf 8f4f 	dsb	sy
 8007c92:	e7fe      	b.n	8007c92 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007c94:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007c96:	b143      	cbz	r3, 8007caa <xQueueGiveFromISR+0x30>
 8007c98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c9c:	f383 8811 	msr	BASEPRI, r3
 8007ca0:	f3bf 8f6f 	isb	sy
 8007ca4:	f3bf 8f4f 	dsb	sy
 8007ca8:	e7fe      	b.n	8007ca8 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007caa:	6803      	ldr	r3, [r0, #0]
 8007cac:	b953      	cbnz	r3, 8007cc4 <xQueueGiveFromISR+0x4a>
 8007cae:	6883      	ldr	r3, [r0, #8]
 8007cb0:	b143      	cbz	r3, 8007cc4 <xQueueGiveFromISR+0x4a>
 8007cb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cb6:	f383 8811 	msr	BASEPRI, r3
 8007cba:	f3bf 8f6f 	isb	sy
 8007cbe:	f3bf 8f4f 	dsb	sy
 8007cc2:	e7fe      	b.n	8007cc2 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007cc4:	f7ff fd14 	bl	80076f0 <vPortValidateInterruptPriority>
	__asm volatile
 8007cc8:	f3ef 8611 	mrs	r6, BASEPRI
 8007ccc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cd0:	f383 8811 	msr	BASEPRI, r3
 8007cd4:	f3bf 8f6f 	isb	sy
 8007cd8:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007cdc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007cde:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007ce0:	4293      	cmp	r3, r2
 8007ce2:	d91c      	bls.n	8007d1e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007ce4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007ce8:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007cea:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8007cec:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007cee:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8007cf0:	d110      	bne.n	8007d14 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007cf2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007cf4:	b90b      	cbnz	r3, 8007cfa <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007cf6:	2001      	movs	r0, #1
 8007cf8:	e009      	b.n	8007d0e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007cfa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007cfe:	f000 fe0f 	bl	8008920 <xTaskRemoveFromEventList>
 8007d02:	2800      	cmp	r0, #0
 8007d04:	d0f7      	beq.n	8007cf6 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007d06:	2d00      	cmp	r5, #0
 8007d08:	d0f5      	beq.n	8007cf6 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007d0a:	2001      	movs	r0, #1
 8007d0c:	6028      	str	r0, [r5, #0]
	__asm volatile
 8007d0e:	f386 8811 	msr	BASEPRI, r6
}
 8007d12:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007d14:	3301      	adds	r3, #1
 8007d16:	b25b      	sxtb	r3, r3
 8007d18:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007d1c:	e7eb      	b.n	8007cf6 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8007d1e:	2000      	movs	r0, #0
 8007d20:	e7f5      	b.n	8007d0e <xQueueGiveFromISR+0x94>

08007d22 <xQueueReceive>:
{
 8007d22:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007d26:	460f      	mov	r7, r1
 8007d28:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007d2a:	4604      	mov	r4, r0
 8007d2c:	b940      	cbnz	r0, 8007d40 <xQueueReceive+0x1e>
	__asm volatile
 8007d2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d32:	f383 8811 	msr	BASEPRI, r3
 8007d36:	f3bf 8f6f 	isb	sy
 8007d3a:	f3bf 8f4f 	dsb	sy
 8007d3e:	e7fe      	b.n	8007d3e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007d40:	b951      	cbnz	r1, 8007d58 <xQueueReceive+0x36>
 8007d42:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007d44:	b143      	cbz	r3, 8007d58 <xQueueReceive+0x36>
 8007d46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d4a:	f383 8811 	msr	BASEPRI, r3
 8007d4e:	f3bf 8f6f 	isb	sy
 8007d52:	f3bf 8f4f 	dsb	sy
 8007d56:	e7fe      	b.n	8007d56 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007d58:	f000 fe74 	bl	8008a44 <xTaskGetSchedulerState>
 8007d5c:	4606      	mov	r6, r0
 8007d5e:	b950      	cbnz	r0, 8007d76 <xQueueReceive+0x54>
 8007d60:	9b01      	ldr	r3, [sp, #4]
 8007d62:	b14b      	cbz	r3, 8007d78 <xQueueReceive+0x56>
 8007d64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d68:	f383 8811 	msr	BASEPRI, r3
 8007d6c:	f3bf 8f6f 	isb	sy
 8007d70:	f3bf 8f4f 	dsb	sy
 8007d74:	e7fe      	b.n	8007d74 <xQueueReceive+0x52>
 8007d76:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007d78:	f04f 0800 	mov.w	r8, #0
 8007d7c:	e03d      	b.n	8007dfa <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007d7e:	9d01      	ldr	r5, [sp, #4]
 8007d80:	b91d      	cbnz	r5, 8007d8a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8007d82:	f7ff fbbf 	bl	8007504 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8007d86:	2000      	movs	r0, #0
 8007d88:	e056      	b.n	8007e38 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8007d8a:	b916      	cbnz	r6, 8007d92 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007d8c:	a802      	add	r0, sp, #8
 8007d8e:	f000 fe0b 	bl	80089a8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007d92:	f7ff fbb7 	bl	8007504 <vPortExitCritical>
		vTaskSuspendAll();
 8007d96:	f000 fba1 	bl	80084dc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007d9a:	f7ff fb93 	bl	80074c4 <vPortEnterCritical>
 8007d9e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007da2:	2bff      	cmp	r3, #255	; 0xff
 8007da4:	bf08      	it	eq
 8007da6:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8007daa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007dae:	2bff      	cmp	r3, #255	; 0xff
 8007db0:	bf08      	it	eq
 8007db2:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8007db6:	f7ff fba5 	bl	8007504 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007dba:	a901      	add	r1, sp, #4
 8007dbc:	a802      	add	r0, sp, #8
 8007dbe:	f000 fdff 	bl	80089c0 <xTaskCheckForTimeOut>
 8007dc2:	2800      	cmp	r0, #0
 8007dc4:	d141      	bne.n	8007e4a <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007dc6:	4620      	mov	r0, r4
 8007dc8:	f7ff fcc0 	bl	800774c <prvIsQueueEmpty>
 8007dcc:	b3b8      	cbz	r0, 8007e3e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007dce:	9901      	ldr	r1, [sp, #4]
 8007dd0:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007dd4:	f000 fd6c 	bl	80088b0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007dd8:	4620      	mov	r0, r4
 8007dda:	f7ff fd0d 	bl	80077f8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007dde:	f000 fc21 	bl	8008624 <xTaskResumeAll>
 8007de2:	b948      	cbnz	r0, 8007df8 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8007de4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007de8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007dec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007df0:	f3bf 8f4f 	dsb	sy
 8007df4:	f3bf 8f6f 	isb	sy
 8007df8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007dfa:	f7ff fb63 	bl	80074c4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007dfe:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007e00:	2d00      	cmp	r5, #0
 8007e02:	d0bc      	beq.n	8007d7e <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007e04:	4639      	mov	r1, r7
 8007e06:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007e08:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007e0a:	f7ff fcdf 	bl	80077cc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007e0e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007e10:	6923      	ldr	r3, [r4, #16]
 8007e12:	b173      	cbz	r3, 8007e32 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007e14:	f104 0010 	add.w	r0, r4, #16
 8007e18:	f000 fd82 	bl	8008920 <xTaskRemoveFromEventList>
 8007e1c:	b148      	cbz	r0, 8007e32 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8007e1e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007e22:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007e26:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007e2a:	f3bf 8f4f 	dsb	sy
 8007e2e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007e32:	f7ff fb67 	bl	8007504 <vPortExitCritical>
				return pdPASS;
 8007e36:	2001      	movs	r0, #1
}
 8007e38:	b004      	add	sp, #16
 8007e3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007e3e:	4620      	mov	r0, r4
 8007e40:	f7ff fcda 	bl	80077f8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007e44:	f000 fbee 	bl	8008624 <xTaskResumeAll>
 8007e48:	e7d6      	b.n	8007df8 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8007e4a:	4620      	mov	r0, r4
 8007e4c:	f7ff fcd4 	bl	80077f8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007e50:	f000 fbe8 	bl	8008624 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007e54:	4620      	mov	r0, r4
 8007e56:	f7ff fc79 	bl	800774c <prvIsQueueEmpty>
 8007e5a:	2800      	cmp	r0, #0
 8007e5c:	d0cc      	beq.n	8007df8 <xQueueReceive+0xd6>
 8007e5e:	e792      	b.n	8007d86 <xQueueReceive+0x64>

08007e60 <xQueueSemaphoreTake>:
{
 8007e60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e62:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8007e64:	4604      	mov	r4, r0
{
 8007e66:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007e68:	b940      	cbnz	r0, 8007e7c <xQueueSemaphoreTake+0x1c>
 8007e6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e6e:	f383 8811 	msr	BASEPRI, r3
 8007e72:	f3bf 8f6f 	isb	sy
 8007e76:	f3bf 8f4f 	dsb	sy
 8007e7a:	e7fe      	b.n	8007e7a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007e7c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007e7e:	b145      	cbz	r5, 8007e92 <xQueueSemaphoreTake+0x32>
 8007e80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e84:	f383 8811 	msr	BASEPRI, r3
 8007e88:	f3bf 8f6f 	isb	sy
 8007e8c:	f3bf 8f4f 	dsb	sy
 8007e90:	e7fe      	b.n	8007e90 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007e92:	f000 fdd7 	bl	8008a44 <xTaskGetSchedulerState>
 8007e96:	4606      	mov	r6, r0
 8007e98:	b950      	cbnz	r0, 8007eb0 <xQueueSemaphoreTake+0x50>
 8007e9a:	9b01      	ldr	r3, [sp, #4]
 8007e9c:	b15b      	cbz	r3, 8007eb6 <xQueueSemaphoreTake+0x56>
 8007e9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ea2:	f383 8811 	msr	BASEPRI, r3
 8007ea6:	f3bf 8f6f 	isb	sy
 8007eaa:	f3bf 8f4f 	dsb	sy
 8007eae:	e7fe      	b.n	8007eae <xQueueSemaphoreTake+0x4e>
 8007eb0:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007eb2:	2700      	movs	r7, #0
 8007eb4:	e053      	b.n	8007f5e <xQueueSemaphoreTake+0xfe>
 8007eb6:	4605      	mov	r5, r0
 8007eb8:	e7fb      	b.n	8007eb2 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007eba:	9b01      	ldr	r3, [sp, #4]
 8007ebc:	b963      	cbnz	r3, 8007ed8 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007ebe:	b145      	cbz	r5, 8007ed2 <xQueueSemaphoreTake+0x72>
 8007ec0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ec4:	f383 8811 	msr	BASEPRI, r3
 8007ec8:	f3bf 8f6f 	isb	sy
 8007ecc:	f3bf 8f4f 	dsb	sy
 8007ed0:	e7fe      	b.n	8007ed0 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8007ed2:	f7ff fb17 	bl	8007504 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007ed6:	e062      	b.n	8007f9e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8007ed8:	b916      	cbnz	r6, 8007ee0 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007eda:	a802      	add	r0, sp, #8
 8007edc:	f000 fd64 	bl	80089a8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007ee0:	f7ff fb10 	bl	8007504 <vPortExitCritical>
		vTaskSuspendAll();
 8007ee4:	f000 fafa 	bl	80084dc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007ee8:	f7ff faec 	bl	80074c4 <vPortEnterCritical>
 8007eec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007ef0:	2bff      	cmp	r3, #255	; 0xff
 8007ef2:	bf08      	it	eq
 8007ef4:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007ef8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007efc:	2bff      	cmp	r3, #255	; 0xff
 8007efe:	bf08      	it	eq
 8007f00:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007f04:	f7ff fafe 	bl	8007504 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007f08:	a901      	add	r1, sp, #4
 8007f0a:	a802      	add	r0, sp, #8
 8007f0c:	f000 fd58 	bl	80089c0 <xTaskCheckForTimeOut>
 8007f10:	2800      	cmp	r0, #0
 8007f12:	d14d      	bne.n	8007fb0 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007f14:	4620      	mov	r0, r4
 8007f16:	f7ff fc19 	bl	800774c <prvIsQueueEmpty>
 8007f1a:	2800      	cmp	r0, #0
 8007f1c:	d042      	beq.n	8007fa4 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007f1e:	6823      	ldr	r3, [r4, #0]
 8007f20:	b93b      	cbnz	r3, 8007f32 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8007f22:	f7ff facf 	bl	80074c4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007f26:	68a0      	ldr	r0, [r4, #8]
 8007f28:	f000 fd9c 	bl	8008a64 <xTaskPriorityInherit>
 8007f2c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007f2e:	f7ff fae9 	bl	8007504 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007f32:	9901      	ldr	r1, [sp, #4]
 8007f34:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007f38:	f000 fcba 	bl	80088b0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007f3c:	4620      	mov	r0, r4
 8007f3e:	f7ff fc5b 	bl	80077f8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007f42:	f000 fb6f 	bl	8008624 <xTaskResumeAll>
 8007f46:	b948      	cbnz	r0, 8007f5c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8007f48:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007f4c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f50:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007f54:	f3bf 8f4f 	dsb	sy
 8007f58:	f3bf 8f6f 	isb	sy
 8007f5c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007f5e:	f7ff fab1 	bl	80074c4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007f62:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007f64:	2b00      	cmp	r3, #0
 8007f66:	d0a8      	beq.n	8007eba <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007f68:	3b01      	subs	r3, #1
 8007f6a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007f6c:	6823      	ldr	r3, [r4, #0]
 8007f6e:	b913      	cbnz	r3, 8007f76 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007f70:	f000 fe50 	bl	8008c14 <pvTaskIncrementMutexHeldCount>
 8007f74:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007f76:	6923      	ldr	r3, [r4, #16]
 8007f78:	b173      	cbz	r3, 8007f98 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007f7a:	f104 0010 	add.w	r0, r4, #16
 8007f7e:	f000 fccf 	bl	8008920 <xTaskRemoveFromEventList>
 8007f82:	b148      	cbz	r0, 8007f98 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8007f84:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007f88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f8c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007f90:	f3bf 8f4f 	dsb	sy
 8007f94:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007f98:	f7ff fab4 	bl	8007504 <vPortExitCritical>
				return pdPASS;
 8007f9c:	2501      	movs	r5, #1
}
 8007f9e:	4628      	mov	r0, r5
 8007fa0:	b005      	add	sp, #20
 8007fa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8007fa4:	4620      	mov	r0, r4
 8007fa6:	f7ff fc27 	bl	80077f8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007faa:	f000 fb3b 	bl	8008624 <xTaskResumeAll>
 8007fae:	e7d5      	b.n	8007f5c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8007fb0:	4620      	mov	r0, r4
 8007fb2:	f7ff fc21 	bl	80077f8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007fb6:	f000 fb35 	bl	8008624 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007fba:	4620      	mov	r0, r4
 8007fbc:	f7ff fbc6 	bl	800774c <prvIsQueueEmpty>
 8007fc0:	2800      	cmp	r0, #0
 8007fc2:	d0cb      	beq.n	8007f5c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8007fc4:	2d00      	cmp	r5, #0
 8007fc6:	d0ea      	beq.n	8007f9e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8007fc8:	f7ff fa7c 	bl	80074c4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007fcc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007fce:	b119      	cbz	r1, 8007fd8 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007fd0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007fd2:	6819      	ldr	r1, [r3, #0]
 8007fd4:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007fd8:	68a0      	ldr	r0, [r4, #8]
 8007fda:	f000 fdc9 	bl	8008b70 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007fde:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007fe0:	f7ff fa90 	bl	8007504 <vPortExitCritical>
 8007fe4:	e7db      	b.n	8007f9e <xQueueSemaphoreTake+0x13e>

08007fe6 <xQueueReceiveFromISR>:
{
 8007fe6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007fea:	4689      	mov	r9, r1
 8007fec:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007fee:	4605      	mov	r5, r0
 8007ff0:	b940      	cbnz	r0, 8008004 <xQueueReceiveFromISR+0x1e>
 8007ff2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ff6:	f383 8811 	msr	BASEPRI, r3
 8007ffa:	f3bf 8f6f 	isb	sy
 8007ffe:	f3bf 8f4f 	dsb	sy
 8008002:	e7fe      	b.n	8008002 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008004:	b951      	cbnz	r1, 800801c <xQueueReceiveFromISR+0x36>
 8008006:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008008:	b143      	cbz	r3, 800801c <xQueueReceiveFromISR+0x36>
 800800a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800800e:	f383 8811 	msr	BASEPRI, r3
 8008012:	f3bf 8f6f 	isb	sy
 8008016:	f3bf 8f4f 	dsb	sy
 800801a:	e7fe      	b.n	800801a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800801c:	f7ff fb68 	bl	80076f0 <vPortValidateInterruptPriority>
	__asm volatile
 8008020:	f3ef 8711 	mrs	r7, BASEPRI
 8008024:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008028:	f383 8811 	msr	BASEPRI, r3
 800802c:	f3bf 8f6f 	isb	sy
 8008030:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008034:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008036:	b31c      	cbz	r4, 8008080 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008038:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800803c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800803e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008040:	4628      	mov	r0, r5
 8008042:	f7ff fbc3 	bl	80077cc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008046:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8008048:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800804a:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800804c:	d113      	bne.n	8008076 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800804e:	692b      	ldr	r3, [r5, #16]
 8008050:	b90b      	cbnz	r3, 8008056 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8008052:	2001      	movs	r0, #1
 8008054:	e00b      	b.n	800806e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008056:	f105 0010 	add.w	r0, r5, #16
 800805a:	f000 fc61 	bl	8008920 <xTaskRemoveFromEventList>
 800805e:	2800      	cmp	r0, #0
 8008060:	d0f7      	beq.n	8008052 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8008062:	f1b8 0f00 	cmp.w	r8, #0
 8008066:	d0f4      	beq.n	8008052 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8008068:	2001      	movs	r0, #1
 800806a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800806e:	f387 8811 	msr	BASEPRI, r7
}
 8008072:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008076:	3601      	adds	r6, #1
 8008078:	b276      	sxtb	r6, r6
 800807a:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800807e:	e7e8      	b.n	8008052 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8008080:	4620      	mov	r0, r4
 8008082:	e7f4      	b.n	800806e <xQueueReceiveFromISR+0x88>

08008084 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008084:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008086:	4a07      	ldr	r2, [pc, #28]	; (80080a4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008088:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800808a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800808e:	b92c      	cbnz	r4, 800809c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008090:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008094:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8008098:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800809a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800809c:	3301      	adds	r3, #1
 800809e:	2b08      	cmp	r3, #8
 80080a0:	d1f3      	bne.n	800808a <vQueueAddToRegistry+0x6>
 80080a2:	e7fa      	b.n	800809a <vQueueAddToRegistry+0x16>
 80080a4:	20009f8c 	.word	0x20009f8c

080080a8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80080a8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80080aa:	4a08      	ldr	r2, [pc, #32]	; (80080cc <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80080ac:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80080ae:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 80080b2:	684c      	ldr	r4, [r1, #4]
 80080b4:	4284      	cmp	r4, r0
 80080b6:	d104      	bne.n	80080c2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80080b8:	2000      	movs	r0, #0
 80080ba:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80080be:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80080c0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80080c2:	3301      	adds	r3, #1
 80080c4:	2b08      	cmp	r3, #8
 80080c6:	d1f2      	bne.n	80080ae <vQueueUnregisterQueue+0x6>
 80080c8:	e7fa      	b.n	80080c0 <vQueueUnregisterQueue+0x18>
 80080ca:	bf00      	nop
 80080cc:	20009f8c 	.word	0x20009f8c

080080d0 <vQueueDelete>:
{
 80080d0:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 80080d2:	4604      	mov	r4, r0
 80080d4:	b940      	cbnz	r0, 80080e8 <vQueueDelete+0x18>
	__asm volatile
 80080d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080da:	f383 8811 	msr	BASEPRI, r3
 80080de:	f3bf 8f6f 	isb	sy
 80080e2:	f3bf 8f4f 	dsb	sy
 80080e6:	e7fe      	b.n	80080e6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 80080e8:	f7ff ffde 	bl	80080a8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80080ec:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80080f0:	b923      	cbnz	r3, 80080fc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 80080f2:	4620      	mov	r0, r4
}
 80080f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80080f8:	f7ff b8fc 	b.w	80072f4 <vPortFree>
}
 80080fc:	bd10      	pop	{r4, pc}

080080fe <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80080fe:	b570      	push	{r4, r5, r6, lr}
 8008100:	4604      	mov	r4, r0
 8008102:	460d      	mov	r5, r1
 8008104:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008106:	f7ff f9dd 	bl	80074c4 <vPortEnterCritical>
 800810a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800810e:	2bff      	cmp	r3, #255	; 0xff
 8008110:	bf04      	itt	eq
 8008112:	2300      	moveq	r3, #0
 8008114:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008118:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800811c:	2bff      	cmp	r3, #255	; 0xff
 800811e:	bf04      	itt	eq
 8008120:	2300      	moveq	r3, #0
 8008122:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8008126:	f7ff f9ed 	bl	8007504 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800812a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800812c:	b92b      	cbnz	r3, 800813a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800812e:	4632      	mov	r2, r6
 8008130:	4629      	mov	r1, r5
 8008132:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008136:	f000 fbd5 	bl	80088e4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800813a:	4620      	mov	r0, r4
	}
 800813c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008140:	f7ff bb5a 	b.w	80077f8 <prvUnlockQueue>

08008144 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008148:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800814a:	f7ff f9bb 	bl	80074c4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800814e:	4b30      	ldr	r3, [pc, #192]	; (8008210 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008150:	4e30      	ldr	r6, [pc, #192]	; (8008214 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008152:	681a      	ldr	r2, [r3, #0]
 8008154:	4f30      	ldr	r7, [pc, #192]	; (8008218 <prvAddNewTaskToReadyList+0xd4>)
 8008156:	3201      	adds	r2, #1
 8008158:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800815a:	6835      	ldr	r5, [r6, #0]
 800815c:	2d00      	cmp	r5, #0
 800815e:	d14b      	bne.n	80081f8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008160:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008162:	681b      	ldr	r3, [r3, #0]
 8008164:	2b01      	cmp	r3, #1
 8008166:	d11f      	bne.n	80081a8 <prvAddNewTaskToReadyList+0x64>
 8008168:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800816a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800816c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800816e:	f7ff f8ff 	bl	8007370 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008172:	2d38      	cmp	r5, #56	; 0x38
 8008174:	f108 0814 	add.w	r8, r8, #20
 8008178:	d1f7      	bne.n	800816a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800817a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8008240 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800817e:	4d27      	ldr	r5, [pc, #156]	; (800821c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008180:	4640      	mov	r0, r8
 8008182:	f7ff f8f5 	bl	8007370 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008186:	4628      	mov	r0, r5
 8008188:	f7ff f8f2 	bl	8007370 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800818c:	4824      	ldr	r0, [pc, #144]	; (8008220 <prvAddNewTaskToReadyList+0xdc>)
 800818e:	f7ff f8ef 	bl	8007370 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008192:	4824      	ldr	r0, [pc, #144]	; (8008224 <prvAddNewTaskToReadyList+0xe0>)
 8008194:	f7ff f8ec 	bl	8007370 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008198:	4823      	ldr	r0, [pc, #140]	; (8008228 <prvAddNewTaskToReadyList+0xe4>)
 800819a:	f7ff f8e9 	bl	8007370 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800819e:	4b23      	ldr	r3, [pc, #140]	; (800822c <prvAddNewTaskToReadyList+0xe8>)
 80081a0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80081a4:	4b22      	ldr	r3, [pc, #136]	; (8008230 <prvAddNewTaskToReadyList+0xec>)
 80081a6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80081a8:	4a22      	ldr	r2, [pc, #136]	; (8008234 <prvAddNewTaskToReadyList+0xf0>)
 80081aa:	6813      	ldr	r3, [r2, #0]
 80081ac:	3301      	adds	r3, #1
 80081ae:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80081b0:	4a21      	ldr	r2, [pc, #132]	; (8008238 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80081b2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80081b4:	6811      	ldr	r1, [r2, #0]
 80081b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80081b8:	2014      	movs	r0, #20
 80081ba:	428b      	cmp	r3, r1
 80081bc:	fb00 7003 	mla	r0, r0, r3, r7
 80081c0:	f104 0104 	add.w	r1, r4, #4
 80081c4:	bf88      	it	hi
 80081c6:	6013      	strhi	r3, [r2, #0]
 80081c8:	f7ff f8e0 	bl	800738c <vListInsertEnd>
	taskEXIT_CRITICAL();
 80081cc:	f7ff f99a 	bl	8007504 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80081d0:	4b1a      	ldr	r3, [pc, #104]	; (800823c <prvAddNewTaskToReadyList+0xf8>)
 80081d2:	681b      	ldr	r3, [r3, #0]
 80081d4:	b173      	cbz	r3, 80081f4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80081d6:	6833      	ldr	r3, [r6, #0]
 80081d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80081da:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80081dc:	429a      	cmp	r2, r3
 80081de:	d209      	bcs.n	80081f4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 80081e0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80081e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80081e8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80081ec:	f3bf 8f4f 	dsb	sy
 80081f0:	f3bf 8f6f 	isb	sy
}
 80081f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 80081f8:	4b10      	ldr	r3, [pc, #64]	; (800823c <prvAddNewTaskToReadyList+0xf8>)
 80081fa:	681b      	ldr	r3, [r3, #0]
 80081fc:	2b00      	cmp	r3, #0
 80081fe:	d1d3      	bne.n	80081a8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008200:	6833      	ldr	r3, [r6, #0]
 8008202:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008204:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008206:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008208:	bf98      	it	ls
 800820a:	6034      	strls	r4, [r6, #0]
 800820c:	e7cc      	b.n	80081a8 <prvAddNewTaskToReadyList+0x64>
 800820e:	bf00      	nop
 8008210:	2000a438 	.word	0x2000a438
 8008214:	20009fcc 	.word	0x20009fcc
 8008218:	20009fd8 	.word	0x20009fd8
 800821c:	2000a460 	.word	0x2000a460
 8008220:	2000a480 	.word	0x2000a480
 8008224:	2000a4ac 	.word	0x2000a4ac
 8008228:	2000a498 	.word	0x2000a498
 800822c:	20009fd0 	.word	0x20009fd0
 8008230:	20009fd4 	.word	0x20009fd4
 8008234:	2000a444 	.word	0x2000a444
 8008238:	2000a448 	.word	0x2000a448
 800823c:	2000a494 	.word	0x2000a494
 8008240:	2000a44c 	.word	0x2000a44c

08008244 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008246:	4b15      	ldr	r3, [pc, #84]	; (800829c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008248:	4e15      	ldr	r6, [pc, #84]	; (80082a0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800824a:	681d      	ldr	r5, [r3, #0]
{
 800824c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800824e:	6830      	ldr	r0, [r6, #0]
 8008250:	3004      	adds	r0, #4
{
 8008252:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008254:	f7ff f8bd 	bl	80073d2 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008258:	1c63      	adds	r3, r4, #1
 800825a:	d107      	bne.n	800826c <prvAddCurrentTaskToDelayedList+0x28>
 800825c:	b137      	cbz	r7, 800826c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800825e:	6831      	ldr	r1, [r6, #0]
 8008260:	4810      	ldr	r0, [pc, #64]	; (80082a4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008262:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008266:	3104      	adds	r1, #4
 8008268:	f7ff b890 	b.w	800738c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800826c:	6833      	ldr	r3, [r6, #0]
 800826e:	192c      	adds	r4, r5, r4
 8008270:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008272:	d307      	bcc.n	8008284 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008274:	4b0c      	ldr	r3, [pc, #48]	; (80082a8 <prvAddCurrentTaskToDelayedList+0x64>)
 8008276:	6818      	ldr	r0, [r3, #0]
 8008278:	6831      	ldr	r1, [r6, #0]
}
 800827a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800827e:	3104      	adds	r1, #4
 8008280:	f7ff b890 	b.w	80073a4 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008284:	4b09      	ldr	r3, [pc, #36]	; (80082ac <prvAddCurrentTaskToDelayedList+0x68>)
 8008286:	6818      	ldr	r0, [r3, #0]
 8008288:	6831      	ldr	r1, [r6, #0]
 800828a:	3104      	adds	r1, #4
 800828c:	f7ff f88a 	bl	80073a4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008290:	4b07      	ldr	r3, [pc, #28]	; (80082b0 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008292:	681a      	ldr	r2, [r3, #0]
 8008294:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008296:	bf88      	it	hi
 8008298:	601c      	strhi	r4, [r3, #0]
}
 800829a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800829c:	2000a4c0 	.word	0x2000a4c0
 80082a0:	20009fcc 	.word	0x20009fcc
 80082a4:	2000a498 	.word	0x2000a498
 80082a8:	20009fd4 	.word	0x20009fd4
 80082ac:	20009fd0 	.word	0x20009fd0
 80082b0:	2000a474 	.word	0x2000a474

080082b4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80082b4:	4a06      	ldr	r2, [pc, #24]	; (80082d0 <prvResetNextTaskUnblockTime+0x1c>)
 80082b6:	6813      	ldr	r3, [r2, #0]
 80082b8:	6819      	ldr	r1, [r3, #0]
 80082ba:	4b06      	ldr	r3, [pc, #24]	; (80082d4 <prvResetNextTaskUnblockTime+0x20>)
 80082bc:	b919      	cbnz	r1, 80082c6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80082be:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80082c2:	601a      	str	r2, [r3, #0]
}
 80082c4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80082c6:	6812      	ldr	r2, [r2, #0]
 80082c8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80082ca:	68d2      	ldr	r2, [r2, #12]
 80082cc:	6852      	ldr	r2, [r2, #4]
 80082ce:	e7f8      	b.n	80082c2 <prvResetNextTaskUnblockTime+0xe>
 80082d0:	20009fd0 	.word	0x20009fd0
 80082d4:	2000a474 	.word	0x2000a474

080082d8 <prvDeleteTCB>:
	{
 80082d8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80082da:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 80082de:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80082e0:	b93b      	cbnz	r3, 80082f2 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 80082e2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80082e4:	f7ff f806 	bl	80072f4 <vPortFree>
				vPortFree( pxTCB );
 80082e8:	4620      	mov	r0, r4
	}
 80082ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 80082ee:	f7ff b801 	b.w	80072f4 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80082f2:	2b01      	cmp	r3, #1
 80082f4:	d0f9      	beq.n	80082ea <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80082f6:	2b02      	cmp	r3, #2
 80082f8:	d008      	beq.n	800830c <prvDeleteTCB+0x34>
 80082fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082fe:	f383 8811 	msr	BASEPRI, r3
 8008302:	f3bf 8f6f 	isb	sy
 8008306:	f3bf 8f4f 	dsb	sy
 800830a:	e7fe      	b.n	800830a <prvDeleteTCB+0x32>
	}
 800830c:	bd10      	pop	{r4, pc}
	...

08008310 <prvIdleTask>:
{
 8008310:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008312:	4c14      	ldr	r4, [pc, #80]	; (8008364 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008314:	4f14      	ldr	r7, [pc, #80]	; (8008368 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8008316:	4d15      	ldr	r5, [pc, #84]	; (800836c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008318:	6823      	ldr	r3, [r4, #0]
 800831a:	b983      	cbnz	r3, 800833e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800831c:	4b14      	ldr	r3, [pc, #80]	; (8008370 <prvIdleTask+0x60>)
 800831e:	681b      	ldr	r3, [r3, #0]
 8008320:	2b01      	cmp	r3, #1
 8008322:	d909      	bls.n	8008338 <prvIdleTask+0x28>
				taskYIELD();
 8008324:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008328:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800832c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008330:	f3bf 8f4f 	dsb	sy
 8008334:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8008338:	f7f9 f870 	bl	800141c <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800833c:	e7eb      	b.n	8008316 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800833e:	f7ff f8c1 	bl	80074c4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008342:	68fb      	ldr	r3, [r7, #12]
 8008344:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008346:	1d30      	adds	r0, r6, #4
 8008348:	f7ff f843 	bl	80073d2 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800834c:	682b      	ldr	r3, [r5, #0]
 800834e:	3b01      	subs	r3, #1
 8008350:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008352:	6823      	ldr	r3, [r4, #0]
 8008354:	3b01      	subs	r3, #1
 8008356:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008358:	f7ff f8d4 	bl	8007504 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800835c:	4630      	mov	r0, r6
 800835e:	f7ff ffbb 	bl	80082d8 <prvDeleteTCB>
 8008362:	e7d9      	b.n	8008318 <prvIdleTask+0x8>
 8008364:	2000a43c 	.word	0x2000a43c
 8008368:	2000a4ac 	.word	0x2000a4ac
 800836c:	2000a438 	.word	0x2000a438
 8008370:	20009fd8 	.word	0x20009fd8

08008374 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008374:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008378:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800837c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8008380:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008382:	4606      	mov	r6, r0
 8008384:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008386:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008388:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800838a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800838c:	f013 fd3e 	bl	801be0c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008390:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008392:	f1a9 0904 	sub.w	r9, r9, #4
 8008396:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008398:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800839c:	b3b5      	cbz	r5, 800840c <prvInitialiseNewTask.constprop.0+0x98>
 800839e:	1e6b      	subs	r3, r5, #1
 80083a0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 80083a4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80083a6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80083aa:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 80083ae:	b108      	cbz	r0, 80083b4 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80083b0:	42ab      	cmp	r3, r5
 80083b2:	d1f8      	bne.n	80083a6 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80083b4:	2300      	movs	r3, #0
 80083b6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80083ba:	9d08      	ldr	r5, [sp, #32]
 80083bc:	2d37      	cmp	r5, #55	; 0x37
 80083be:	bf28      	it	cs
 80083c0:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80083c2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80083c6:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80083c8:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80083ca:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80083cc:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80083d0:	f7fe ffd9 	bl	8007386 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80083d4:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80083d8:	f104 0018 	add.w	r0, r4, #24
 80083dc:	f7fe ffd3 	bl	8007386 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80083e0:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80083e4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80083e6:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80083e8:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80083ea:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80083ee:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 80083f2:	463a      	mov	r2, r7
 80083f4:	4631      	mov	r1, r6
 80083f6:	4648      	mov	r0, r9
 80083f8:	f7ff f83a 	bl	8007470 <pxPortInitialiseStack>
 80083fc:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 80083fe:	f1b8 0f00 	cmp.w	r8, #0
 8008402:	d001      	beq.n	8008408 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008404:	f8c8 4000 	str.w	r4, [r8]
}
 8008408:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800840c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008410:	e7d3      	b.n	80083ba <prvInitialiseNewTask.constprop.0+0x46>

08008412 <xTaskCreateStatic>:
	{
 8008412:	b570      	push	{r4, r5, r6, lr}
 8008414:	b086      	sub	sp, #24
 8008416:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800841a:	b945      	cbnz	r5, 800842e <xTaskCreateStatic+0x1c>
 800841c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008420:	f383 8811 	msr	BASEPRI, r3
 8008424:	f3bf 8f6f 	isb	sy
 8008428:	f3bf 8f4f 	dsb	sy
 800842c:	e7fe      	b.n	800842c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800842e:	b944      	cbnz	r4, 8008442 <xTaskCreateStatic+0x30>
 8008430:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008434:	f383 8811 	msr	BASEPRI, r3
 8008438:	f3bf 8f6f 	isb	sy
 800843c:	f3bf 8f4f 	dsb	sy
 8008440:	e7fe      	b.n	8008440 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008442:	2660      	movs	r6, #96	; 0x60
 8008444:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008446:	9e05      	ldr	r6, [sp, #20]
 8008448:	2e60      	cmp	r6, #96	; 0x60
 800844a:	d008      	beq.n	800845e <xTaskCreateStatic+0x4c>
 800844c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008450:	f383 8811 	msr	BASEPRI, r3
 8008454:	f3bf 8f6f 	isb	sy
 8008458:	f3bf 8f4f 	dsb	sy
 800845c:	e7fe      	b.n	800845c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800845e:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008460:	2502      	movs	r5, #2
 8008462:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008466:	ad04      	add	r5, sp, #16
 8008468:	9501      	str	r5, [sp, #4]
 800846a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800846c:	9402      	str	r4, [sp, #8]
 800846e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008470:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008472:	f7ff ff7f 	bl	8008374 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008476:	4620      	mov	r0, r4
 8008478:	f7ff fe64 	bl	8008144 <prvAddNewTaskToReadyList>
	}
 800847c:	9804      	ldr	r0, [sp, #16]
 800847e:	b006      	add	sp, #24
 8008480:	bd70      	pop	{r4, r5, r6, pc}

08008482 <xTaskCreate>:
	{
 8008482:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008486:	4607      	mov	r7, r0
 8008488:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800848a:	0090      	lsls	r0, r2, #2
	{
 800848c:	4688      	mov	r8, r1
 800848e:	4616      	mov	r6, r2
 8008490:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008492:	f7fe fe97 	bl	80071c4 <pvPortMalloc>
			if( pxStack != NULL )
 8008496:	4605      	mov	r5, r0
 8008498:	b1e8      	cbz	r0, 80084d6 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800849a:	2060      	movs	r0, #96	; 0x60
 800849c:	f7fe fe92 	bl	80071c4 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80084a0:	4604      	mov	r4, r0
 80084a2:	b1a8      	cbz	r0, 80084d0 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80084a4:	2300      	movs	r3, #0
 80084a6:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80084aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 80084ac:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80084ae:	9301      	str	r3, [sp, #4]
 80084b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80084b2:	9002      	str	r0, [sp, #8]
 80084b4:	9300      	str	r3, [sp, #0]
 80084b6:	4632      	mov	r2, r6
 80084b8:	464b      	mov	r3, r9
 80084ba:	4641      	mov	r1, r8
 80084bc:	4638      	mov	r0, r7
 80084be:	f7ff ff59 	bl	8008374 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80084c2:	4620      	mov	r0, r4
 80084c4:	f7ff fe3e 	bl	8008144 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80084c8:	2001      	movs	r0, #1
	}
 80084ca:	b005      	add	sp, #20
 80084cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80084d0:	4628      	mov	r0, r5
 80084d2:	f7fe ff0f 	bl	80072f4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80084d6:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 80084da:	e7f6      	b.n	80084ca <xTaskCreate+0x48>

080084dc <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80084dc:	4a02      	ldr	r2, [pc, #8]	; (80084e8 <vTaskSuspendAll+0xc>)
 80084de:	6813      	ldr	r3, [r2, #0]
 80084e0:	3301      	adds	r3, #1
 80084e2:	6013      	str	r3, [r2, #0]
}
 80084e4:	4770      	bx	lr
 80084e6:	bf00      	nop
 80084e8:	2000a440 	.word	0x2000a440

080084ec <xTaskGetTickCount>:
		xTicks = xTickCount;
 80084ec:	4b01      	ldr	r3, [pc, #4]	; (80084f4 <xTaskGetTickCount+0x8>)
 80084ee:	6818      	ldr	r0, [r3, #0]
}
 80084f0:	4770      	bx	lr
 80084f2:	bf00      	nop
 80084f4:	2000a4c0 	.word	0x2000a4c0

080084f8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80084f8:	4b3f      	ldr	r3, [pc, #252]	; (80085f8 <xTaskIncrementTick+0x100>)
 80084fa:	681b      	ldr	r3, [r3, #0]
{
 80084fc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008500:	2b00      	cmp	r3, #0
 8008502:	d173      	bne.n	80085ec <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008504:	4b3d      	ldr	r3, [pc, #244]	; (80085fc <xTaskIncrementTick+0x104>)
 8008506:	681d      	ldr	r5, [r3, #0]
 8008508:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800850a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800850c:	b9bd      	cbnz	r5, 800853e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800850e:	4b3c      	ldr	r3, [pc, #240]	; (8008600 <xTaskIncrementTick+0x108>)
 8008510:	681a      	ldr	r2, [r3, #0]
 8008512:	6812      	ldr	r2, [r2, #0]
 8008514:	b142      	cbz	r2, 8008528 <xTaskIncrementTick+0x30>
 8008516:	f04f 0350 	mov.w	r3, #80	; 0x50
 800851a:	f383 8811 	msr	BASEPRI, r3
 800851e:	f3bf 8f6f 	isb	sy
 8008522:	f3bf 8f4f 	dsb	sy
 8008526:	e7fe      	b.n	8008526 <xTaskIncrementTick+0x2e>
 8008528:	4a36      	ldr	r2, [pc, #216]	; (8008604 <xTaskIncrementTick+0x10c>)
 800852a:	6819      	ldr	r1, [r3, #0]
 800852c:	6810      	ldr	r0, [r2, #0]
 800852e:	6018      	str	r0, [r3, #0]
 8008530:	6011      	str	r1, [r2, #0]
 8008532:	4a35      	ldr	r2, [pc, #212]	; (8008608 <xTaskIncrementTick+0x110>)
 8008534:	6813      	ldr	r3, [r2, #0]
 8008536:	3301      	adds	r3, #1
 8008538:	6013      	str	r3, [r2, #0]
 800853a:	f7ff febb 	bl	80082b4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800853e:	4e33      	ldr	r6, [pc, #204]	; (800860c <xTaskIncrementTick+0x114>)
 8008540:	4f33      	ldr	r7, [pc, #204]	; (8008610 <xTaskIncrementTick+0x118>)
 8008542:	6833      	ldr	r3, [r6, #0]
 8008544:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800861c <xTaskIncrementTick+0x124>
 8008548:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800854a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800854e:	d211      	bcs.n	8008574 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008550:	f8d8 3000 	ldr.w	r3, [r8]
 8008554:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008556:	2214      	movs	r2, #20
 8008558:	4353      	muls	r3, r2
 800855a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800855c:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800855e:	4b2d      	ldr	r3, [pc, #180]	; (8008614 <xTaskIncrementTick+0x11c>)
 8008560:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8008562:	bf28      	it	cs
 8008564:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8008566:	2b00      	cmp	r3, #0
 8008568:	bf18      	it	ne
 800856a:	2401      	movne	r4, #1
}
 800856c:	4620      	mov	r0, r4
 800856e:	b003      	add	sp, #12
 8008570:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008574:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008600 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008578:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008620 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800857c:	f8d9 3000 	ldr.w	r3, [r9]
 8008580:	681b      	ldr	r3, [r3, #0]
 8008582:	b91b      	cbnz	r3, 800858c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008584:	f04f 33ff 	mov.w	r3, #4294967295
 8008588:	6033      	str	r3, [r6, #0]
					break;
 800858a:	e7e1      	b.n	8008550 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800858c:	f8d9 3000 	ldr.w	r3, [r9]
 8008590:	68db      	ldr	r3, [r3, #12]
 8008592:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008596:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800859a:	4295      	cmp	r5, r2
 800859c:	d201      	bcs.n	80085a2 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800859e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80085a0:	e7d6      	b.n	8008550 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80085a2:	f10b 0104 	add.w	r1, fp, #4
 80085a6:	4608      	mov	r0, r1
 80085a8:	9101      	str	r1, [sp, #4]
 80085aa:	f7fe ff12 	bl	80073d2 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80085ae:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 80085b2:	9901      	ldr	r1, [sp, #4]
 80085b4:	b122      	cbz	r2, 80085c0 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80085b6:	f10b 0018 	add.w	r0, fp, #24
 80085ba:	f7fe ff0a 	bl	80073d2 <uxListRemove>
 80085be:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80085c0:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 80085c4:	f8da 2000 	ldr.w	r2, [sl]
 80085c8:	2314      	movs	r3, #20
 80085ca:	4290      	cmp	r0, r2
 80085cc:	bf88      	it	hi
 80085ce:	f8ca 0000 	strhi.w	r0, [sl]
 80085d2:	fb03 7000 	mla	r0, r3, r0, r7
 80085d6:	f7fe fed9 	bl	800738c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80085da:	f8d8 1000 	ldr.w	r1, [r8]
 80085de:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 80085e2:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80085e4:	429a      	cmp	r2, r3
 80085e6:	bf28      	it	cs
 80085e8:	2401      	movcs	r4, #1
 80085ea:	e7c7      	b.n	800857c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 80085ec:	4a0a      	ldr	r2, [pc, #40]	; (8008618 <xTaskIncrementTick+0x120>)
 80085ee:	6813      	ldr	r3, [r2, #0]
 80085f0:	3301      	adds	r3, #1
 80085f2:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 80085f4:	2400      	movs	r4, #0
	return xSwitchRequired;
 80085f6:	e7b9      	b.n	800856c <xTaskIncrementTick+0x74>
 80085f8:	2000a440 	.word	0x2000a440
 80085fc:	2000a4c0 	.word	0x2000a4c0
 8008600:	20009fd0 	.word	0x20009fd0
 8008604:	20009fd4 	.word	0x20009fd4
 8008608:	2000a478 	.word	0x2000a478
 800860c:	2000a474 	.word	0x2000a474
 8008610:	20009fd8 	.word	0x20009fd8
 8008614:	2000a4c4 	.word	0x2000a4c4
 8008618:	2000a47c 	.word	0x2000a47c
 800861c:	20009fcc 	.word	0x20009fcc
 8008620:	2000a448 	.word	0x2000a448

08008624 <xTaskResumeAll>:
{
 8008624:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8008626:	4c31      	ldr	r4, [pc, #196]	; (80086ec <xTaskResumeAll+0xc8>)
 8008628:	6823      	ldr	r3, [r4, #0]
 800862a:	b943      	cbnz	r3, 800863e <xTaskResumeAll+0x1a>
 800862c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008630:	f383 8811 	msr	BASEPRI, r3
 8008634:	f3bf 8f6f 	isb	sy
 8008638:	f3bf 8f4f 	dsb	sy
 800863c:	e7fe      	b.n	800863c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800863e:	f7fe ff41 	bl	80074c4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008642:	6823      	ldr	r3, [r4, #0]
 8008644:	3b01      	subs	r3, #1
 8008646:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008648:	6824      	ldr	r4, [r4, #0]
 800864a:	b12c      	cbz	r4, 8008658 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800864c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800864e:	f7fe ff59 	bl	8007504 <vPortExitCritical>
}
 8008652:	4620      	mov	r0, r4
 8008654:	b003      	add	sp, #12
 8008656:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008658:	4b25      	ldr	r3, [pc, #148]	; (80086f0 <xTaskResumeAll+0xcc>)
 800865a:	681b      	ldr	r3, [r3, #0]
 800865c:	2b00      	cmp	r3, #0
 800865e:	d0f5      	beq.n	800864c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008660:	4d24      	ldr	r5, [pc, #144]	; (80086f4 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008662:	4e25      	ldr	r6, [pc, #148]	; (80086f8 <xTaskResumeAll+0xd4>)
 8008664:	4f25      	ldr	r7, [pc, #148]	; (80086fc <xTaskResumeAll+0xd8>)
 8008666:	e01e      	b.n	80086a6 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008668:	68eb      	ldr	r3, [r5, #12]
 800866a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800866c:	f104 0018 	add.w	r0, r4, #24
 8008670:	f7fe feaf 	bl	80073d2 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008674:	1d21      	adds	r1, r4, #4
 8008676:	4608      	mov	r0, r1
 8008678:	9101      	str	r1, [sp, #4]
 800867a:	f7fe feaa 	bl	80073d2 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800867e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008680:	6832      	ldr	r2, [r6, #0]
 8008682:	9901      	ldr	r1, [sp, #4]
 8008684:	2014      	movs	r0, #20
 8008686:	4293      	cmp	r3, r2
 8008688:	fb00 7003 	mla	r0, r0, r3, r7
 800868c:	bf88      	it	hi
 800868e:	6033      	strhi	r3, [r6, #0]
 8008690:	f7fe fe7c 	bl	800738c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008694:	4b1a      	ldr	r3, [pc, #104]	; (8008700 <xTaskResumeAll+0xdc>)
 8008696:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008698:	681b      	ldr	r3, [r3, #0]
 800869a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800869c:	429a      	cmp	r2, r3
 800869e:	d302      	bcc.n	80086a6 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 80086a0:	4b18      	ldr	r3, [pc, #96]	; (8008704 <xTaskResumeAll+0xe0>)
 80086a2:	2201      	movs	r2, #1
 80086a4:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80086a6:	682b      	ldr	r3, [r5, #0]
 80086a8:	2b00      	cmp	r3, #0
 80086aa:	d1dd      	bne.n	8008668 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 80086ac:	b10c      	cbz	r4, 80086b2 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 80086ae:	f7ff fe01 	bl	80082b4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 80086b2:	4d15      	ldr	r5, [pc, #84]	; (8008708 <xTaskResumeAll+0xe4>)
 80086b4:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 80086b6:	b144      	cbz	r4, 80086ca <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 80086b8:	4e12      	ldr	r6, [pc, #72]	; (8008704 <xTaskResumeAll+0xe0>)
 80086ba:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 80086bc:	f7ff ff1c 	bl	80084f8 <xTaskIncrementTick>
 80086c0:	b100      	cbz	r0, 80086c4 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 80086c2:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80086c4:	3c01      	subs	r4, #1
 80086c6:	d1f9      	bne.n	80086bc <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 80086c8:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 80086ca:	4b0e      	ldr	r3, [pc, #56]	; (8008704 <xTaskResumeAll+0xe0>)
 80086cc:	681b      	ldr	r3, [r3, #0]
 80086ce:	2b00      	cmp	r3, #0
 80086d0:	d0bc      	beq.n	800864c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 80086d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80086d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80086de:	f3bf 8f4f 	dsb	sy
 80086e2:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80086e6:	2401      	movs	r4, #1
 80086e8:	e7b1      	b.n	800864e <xTaskResumeAll+0x2a>
 80086ea:	bf00      	nop
 80086ec:	2000a440 	.word	0x2000a440
 80086f0:	2000a438 	.word	0x2000a438
 80086f4:	2000a480 	.word	0x2000a480
 80086f8:	2000a448 	.word	0x2000a448
 80086fc:	20009fd8 	.word	0x20009fd8
 8008700:	20009fcc 	.word	0x20009fcc
 8008704:	2000a4c4 	.word	0x2000a4c4
 8008708:	2000a47c 	.word	0x2000a47c

0800870c <vTaskDelay>:
	{
 800870c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800870e:	b950      	cbnz	r0, 8008726 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008710:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008714:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008718:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800871c:	f3bf 8f4f 	dsb	sy
 8008720:	f3bf 8f6f 	isb	sy
	}
 8008724:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008726:	4b0a      	ldr	r3, [pc, #40]	; (8008750 <vTaskDelay+0x44>)
 8008728:	6819      	ldr	r1, [r3, #0]
 800872a:	b141      	cbz	r1, 800873e <vTaskDelay+0x32>
 800872c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008730:	f383 8811 	msr	BASEPRI, r3
 8008734:	f3bf 8f6f 	isb	sy
 8008738:	f3bf 8f4f 	dsb	sy
 800873c:	e7fe      	b.n	800873c <vTaskDelay+0x30>
			vTaskSuspendAll();
 800873e:	f7ff fecd 	bl	80084dc <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8008742:	f7ff fd7f 	bl	8008244 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8008746:	f7ff ff6d 	bl	8008624 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800874a:	2800      	cmp	r0, #0
 800874c:	d0e0      	beq.n	8008710 <vTaskDelay+0x4>
 800874e:	e7e9      	b.n	8008724 <vTaskDelay+0x18>
 8008750:	2000a440 	.word	0x2000a440

08008754 <vTaskSetApplicationTaskTag>:
	{
 8008754:	b538      	push	{r3, r4, r5, lr}
 8008756:	460d      	mov	r5, r1
		if( xTask == NULL )
 8008758:	4604      	mov	r4, r0
 800875a:	b908      	cbnz	r0, 8008760 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800875c:	4b04      	ldr	r3, [pc, #16]	; (8008770 <vTaskSetApplicationTaskTag+0x1c>)
 800875e:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8008760:	f7fe feb0 	bl	80074c4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8008764:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8008766:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800876a:	f7fe becb 	b.w	8007504 <vPortExitCritical>
 800876e:	bf00      	nop
 8008770:	20009fcc 	.word	0x20009fcc

08008774 <xTaskCallApplicationTaskHook>:
	{
 8008774:	4603      	mov	r3, r0
 8008776:	4608      	mov	r0, r1
		if( xTask == NULL )
 8008778:	b90b      	cbnz	r3, 800877e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800877a:	4b03      	ldr	r3, [pc, #12]	; (8008788 <xTaskCallApplicationTaskHook+0x14>)
 800877c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800877e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008780:	b103      	cbz	r3, 8008784 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8008782:	4718      	bx	r3
	}
 8008784:	4618      	mov	r0, r3
 8008786:	4770      	bx	lr
 8008788:	20009fcc 	.word	0x20009fcc

0800878c <vTaskStartScheduler>:
{
 800878c:	b510      	push	{r4, lr}
 800878e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008790:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008792:	aa07      	add	r2, sp, #28
 8008794:	a906      	add	r1, sp, #24
 8008796:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008798:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800879c:	f7fe fcd6 	bl	800714c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80087a0:	9b05      	ldr	r3, [sp, #20]
 80087a2:	9302      	str	r3, [sp, #8]
 80087a4:	9b06      	ldr	r3, [sp, #24]
 80087a6:	9a07      	ldr	r2, [sp, #28]
 80087a8:	4919      	ldr	r1, [pc, #100]	; (8008810 <vTaskStartScheduler+0x84>)
 80087aa:	481a      	ldr	r0, [pc, #104]	; (8008814 <vTaskStartScheduler+0x88>)
 80087ac:	e9cd 4300 	strd	r4, r3, [sp]
 80087b0:	4623      	mov	r3, r4
 80087b2:	f7ff fe2e 	bl	8008412 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80087b6:	b340      	cbz	r0, 800880a <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 80087b8:	f000 fa8a 	bl	8008cd0 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80087bc:	2801      	cmp	r0, #1
 80087be:	d119      	bne.n	80087f4 <vTaskStartScheduler+0x68>
 80087c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087c4:	f383 8811 	msr	BASEPRI, r3
 80087c8:	f3bf 8f6f 	isb	sy
 80087cc:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 80087d0:	4b11      	ldr	r3, [pc, #68]	; (8008818 <vTaskStartScheduler+0x8c>)
 80087d2:	f04f 32ff 	mov.w	r2, #4294967295
 80087d6:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80087d8:	4b10      	ldr	r3, [pc, #64]	; (800881c <vTaskStartScheduler+0x90>)
 80087da:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80087dc:	4b10      	ldr	r3, [pc, #64]	; (8008820 <vTaskStartScheduler+0x94>)
 80087de:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 80087e0:	4b10      	ldr	r3, [pc, #64]	; (8008824 <vTaskStartScheduler+0x98>)
 80087e2:	4621      	mov	r1, r4
 80087e4:	6818      	ldr	r0, [r3, #0]
 80087e6:	f7ff ffc5 	bl	8008774 <xTaskCallApplicationTaskHook>
}
 80087ea:	b008      	add	sp, #32
 80087ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 80087f0:	f7fe bef8 	b.w	80075e4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80087f4:	3001      	adds	r0, #1
 80087f6:	d108      	bne.n	800880a <vTaskStartScheduler+0x7e>
 80087f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087fc:	f383 8811 	msr	BASEPRI, r3
 8008800:	f3bf 8f6f 	isb	sy
 8008804:	f3bf 8f4f 	dsb	sy
 8008808:	e7fe      	b.n	8008808 <vTaskStartScheduler+0x7c>
}
 800880a:	b008      	add	sp, #32
 800880c:	bd10      	pop	{r4, pc}
 800880e:	bf00      	nop
 8008810:	0801e051 	.word	0x0801e051
 8008814:	08008311 	.word	0x08008311
 8008818:	2000a474 	.word	0x2000a474
 800881c:	2000a494 	.word	0x2000a494
 8008820:	2000a4c0 	.word	0x2000a4c0
 8008824:	20009fcc 	.word	0x20009fcc

08008828 <vTaskSwitchContext>:
{
 8008828:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800882a:	4b1c      	ldr	r3, [pc, #112]	; (800889c <vTaskSwitchContext+0x74>)
 800882c:	681a      	ldr	r2, [r3, #0]
 800882e:	4b1c      	ldr	r3, [pc, #112]	; (80088a0 <vTaskSwitchContext+0x78>)
 8008830:	b112      	cbz	r2, 8008838 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008832:	2201      	movs	r2, #1
 8008834:	601a      	str	r2, [r3, #0]
}
 8008836:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8008838:	4c1a      	ldr	r4, [pc, #104]	; (80088a4 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 800883a:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800883c:	4e1a      	ldr	r6, [pc, #104]	; (80088a8 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 800883e:	6820      	ldr	r0, [r4, #0]
 8008840:	2101      	movs	r1, #1
 8008842:	f7ff ff97 	bl	8008774 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008846:	6832      	ldr	r2, [r6, #0]
 8008848:	4918      	ldr	r1, [pc, #96]	; (80088ac <vTaskSwitchContext+0x84>)
 800884a:	2714      	movs	r7, #20
 800884c:	fb07 f302 	mul.w	r3, r7, r2
 8008850:	18c8      	adds	r0, r1, r3
 8008852:	58cd      	ldr	r5, [r1, r3]
 8008854:	b1ad      	cbz	r5, 8008882 <vTaskSwitchContext+0x5a>
 8008856:	6845      	ldr	r5, [r0, #4]
 8008858:	3308      	adds	r3, #8
 800885a:	686d      	ldr	r5, [r5, #4]
 800885c:	6045      	str	r5, [r0, #4]
 800885e:	440b      	add	r3, r1
 8008860:	429d      	cmp	r5, r3
 8008862:	bf04      	itt	eq
 8008864:	686b      	ldreq	r3, [r5, #4]
 8008866:	6043      	streq	r3, [r0, #4]
 8008868:	2314      	movs	r3, #20
 800886a:	fb03 1102 	mla	r1, r3, r2, r1
 800886e:	684b      	ldr	r3, [r1, #4]
 8008870:	68db      	ldr	r3, [r3, #12]
 8008872:	6023      	str	r3, [r4, #0]
 8008874:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8008876:	6820      	ldr	r0, [r4, #0]
 8008878:	2100      	movs	r1, #0
}
 800887a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800887e:	f7ff bf79 	b.w	8008774 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008882:	b942      	cbnz	r2, 8008896 <vTaskSwitchContext+0x6e>
 8008884:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008888:	f383 8811 	msr	BASEPRI, r3
 800888c:	f3bf 8f6f 	isb	sy
 8008890:	f3bf 8f4f 	dsb	sy
 8008894:	e7fe      	b.n	8008894 <vTaskSwitchContext+0x6c>
 8008896:	3a01      	subs	r2, #1
 8008898:	e7d8      	b.n	800884c <vTaskSwitchContext+0x24>
 800889a:	bf00      	nop
 800889c:	2000a440 	.word	0x2000a440
 80088a0:	2000a4c4 	.word	0x2000a4c4
 80088a4:	20009fcc 	.word	0x20009fcc
 80088a8:	2000a448 	.word	0x2000a448
 80088ac:	20009fd8 	.word	0x20009fd8

080088b0 <vTaskPlaceOnEventList>:
{
 80088b0:	b510      	push	{r4, lr}
 80088b2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80088b4:	b940      	cbnz	r0, 80088c8 <vTaskPlaceOnEventList+0x18>
 80088b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088ba:	f383 8811 	msr	BASEPRI, r3
 80088be:	f3bf 8f6f 	isb	sy
 80088c2:	f3bf 8f4f 	dsb	sy
 80088c6:	e7fe      	b.n	80088c6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80088c8:	4b05      	ldr	r3, [pc, #20]	; (80088e0 <vTaskPlaceOnEventList+0x30>)
 80088ca:	6819      	ldr	r1, [r3, #0]
 80088cc:	3118      	adds	r1, #24
 80088ce:	f7fe fd69 	bl	80073a4 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80088d2:	4620      	mov	r0, r4
 80088d4:	2101      	movs	r1, #1
}
 80088d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80088da:	f7ff bcb3 	b.w	8008244 <prvAddCurrentTaskToDelayedList>
 80088de:	bf00      	nop
 80088e0:	20009fcc 	.word	0x20009fcc

080088e4 <vTaskPlaceOnEventListRestricted>:
	{
 80088e4:	b538      	push	{r3, r4, r5, lr}
 80088e6:	460d      	mov	r5, r1
 80088e8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 80088ea:	b940      	cbnz	r0, 80088fe <vTaskPlaceOnEventListRestricted+0x1a>
 80088ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088f0:	f383 8811 	msr	BASEPRI, r3
 80088f4:	f3bf 8f6f 	isb	sy
 80088f8:	f3bf 8f4f 	dsb	sy
 80088fc:	e7fe      	b.n	80088fc <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80088fe:	4b07      	ldr	r3, [pc, #28]	; (800891c <vTaskPlaceOnEventListRestricted+0x38>)
 8008900:	6819      	ldr	r1, [r3, #0]
 8008902:	3118      	adds	r1, #24
 8008904:	f7fe fd42 	bl	800738c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008908:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800890a:	4621      	mov	r1, r4
 800890c:	bf0c      	ite	eq
 800890e:	4628      	moveq	r0, r5
 8008910:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008914:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008918:	f7ff bc94 	b.w	8008244 <prvAddCurrentTaskToDelayedList>
 800891c:	20009fcc 	.word	0x20009fcc

08008920 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008920:	68c3      	ldr	r3, [r0, #12]
{
 8008922:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008924:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008926:	b944      	cbnz	r4, 800893a <xTaskRemoveFromEventList+0x1a>
 8008928:	f04f 0350 	mov.w	r3, #80	; 0x50
 800892c:	f383 8811 	msr	BASEPRI, r3
 8008930:	f3bf 8f6f 	isb	sy
 8008934:	f3bf 8f4f 	dsb	sy
 8008938:	e7fe      	b.n	8008938 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800893a:	f104 0118 	add.w	r1, r4, #24
 800893e:	4608      	mov	r0, r1
 8008940:	9101      	str	r1, [sp, #4]
 8008942:	f7fe fd46 	bl	80073d2 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008946:	4b12      	ldr	r3, [pc, #72]	; (8008990 <xTaskRemoveFromEventList+0x70>)
 8008948:	9901      	ldr	r1, [sp, #4]
 800894a:	681b      	ldr	r3, [r3, #0]
 800894c:	b9eb      	cbnz	r3, 800898a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800894e:	1d21      	adds	r1, r4, #4
 8008950:	4608      	mov	r0, r1
 8008952:	9101      	str	r1, [sp, #4]
 8008954:	f7fe fd3d 	bl	80073d2 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008958:	4a0e      	ldr	r2, [pc, #56]	; (8008994 <xTaskRemoveFromEventList+0x74>)
 800895a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800895c:	6810      	ldr	r0, [r2, #0]
 800895e:	9901      	ldr	r1, [sp, #4]
 8008960:	4283      	cmp	r3, r0
 8008962:	bf88      	it	hi
 8008964:	6013      	strhi	r3, [r2, #0]
 8008966:	4a0c      	ldr	r2, [pc, #48]	; (8008998 <xTaskRemoveFromEventList+0x78>)
 8008968:	2014      	movs	r0, #20
 800896a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800896e:	f7fe fd0d 	bl	800738c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008972:	4b0a      	ldr	r3, [pc, #40]	; (800899c <xTaskRemoveFromEventList+0x7c>)
 8008974:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008976:	681b      	ldr	r3, [r3, #0]
 8008978:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800897a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800897c:	bf85      	ittet	hi
 800897e:	4b08      	ldrhi	r3, [pc, #32]	; (80089a0 <xTaskRemoveFromEventList+0x80>)
 8008980:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008982:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008984:	6018      	strhi	r0, [r3, #0]
}
 8008986:	b002      	add	sp, #8
 8008988:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800898a:	4806      	ldr	r0, [pc, #24]	; (80089a4 <xTaskRemoveFromEventList+0x84>)
 800898c:	e7ef      	b.n	800896e <xTaskRemoveFromEventList+0x4e>
 800898e:	bf00      	nop
 8008990:	2000a440 	.word	0x2000a440
 8008994:	2000a448 	.word	0x2000a448
 8008998:	20009fd8 	.word	0x20009fd8
 800899c:	20009fcc 	.word	0x20009fcc
 80089a0:	2000a4c4 	.word	0x2000a4c4
 80089a4:	2000a480 	.word	0x2000a480

080089a8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80089a8:	4b03      	ldr	r3, [pc, #12]	; (80089b8 <vTaskInternalSetTimeOutState+0x10>)
 80089aa:	681b      	ldr	r3, [r3, #0]
 80089ac:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80089ae:	4b03      	ldr	r3, [pc, #12]	; (80089bc <vTaskInternalSetTimeOutState+0x14>)
 80089b0:	681b      	ldr	r3, [r3, #0]
 80089b2:	6043      	str	r3, [r0, #4]
}
 80089b4:	4770      	bx	lr
 80089b6:	bf00      	nop
 80089b8:	2000a478 	.word	0x2000a478
 80089bc:	2000a4c0 	.word	0x2000a4c0

080089c0 <xTaskCheckForTimeOut>:
{
 80089c0:	b570      	push	{r4, r5, r6, lr}
 80089c2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80089c4:	4605      	mov	r5, r0
 80089c6:	b940      	cbnz	r0, 80089da <xTaskCheckForTimeOut+0x1a>
 80089c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089cc:	f383 8811 	msr	BASEPRI, r3
 80089d0:	f3bf 8f6f 	isb	sy
 80089d4:	f3bf 8f4f 	dsb	sy
 80089d8:	e7fe      	b.n	80089d8 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80089da:	b941      	cbnz	r1, 80089ee <xTaskCheckForTimeOut+0x2e>
 80089dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089e0:	f383 8811 	msr	BASEPRI, r3
 80089e4:	f3bf 8f6f 	isb	sy
 80089e8:	f3bf 8f4f 	dsb	sy
 80089ec:	e7fe      	b.n	80089ec <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80089ee:	f7fe fd69 	bl	80074c4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80089f2:	4b0f      	ldr	r3, [pc, #60]	; (8008a30 <xTaskCheckForTimeOut+0x70>)
 80089f4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80089f6:	6823      	ldr	r3, [r4, #0]
 80089f8:	1c5a      	adds	r2, r3, #1
 80089fa:	d010      	beq.n	8008a1e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80089fc:	480d      	ldr	r0, [pc, #52]	; (8008a34 <xTaskCheckForTimeOut+0x74>)
 80089fe:	682e      	ldr	r6, [r5, #0]
 8008a00:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008a02:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008a04:	4286      	cmp	r6, r0
 8008a06:	d001      	beq.n	8008a0c <xTaskCheckForTimeOut+0x4c>
 8008a08:	428a      	cmp	r2, r1
 8008a0a:	d90f      	bls.n	8008a2c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008a0c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008a0e:	4283      	cmp	r3, r0
 8008a10:	d90a      	bls.n	8008a28 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008a12:	1a5b      	subs	r3, r3, r1
 8008a14:	4413      	add	r3, r2
 8008a16:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008a18:	4628      	mov	r0, r5
 8008a1a:	f7ff ffc5 	bl	80089a8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008a1e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008a20:	f7fe fd70 	bl	8007504 <vPortExitCritical>
}
 8008a24:	4620      	mov	r0, r4
 8008a26:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008a28:	2300      	movs	r3, #0
 8008a2a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008a2c:	2401      	movs	r4, #1
 8008a2e:	e7f7      	b.n	8008a20 <xTaskCheckForTimeOut+0x60>
 8008a30:	2000a4c0 	.word	0x2000a4c0
 8008a34:	2000a478 	.word	0x2000a478

08008a38 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008a38:	4b01      	ldr	r3, [pc, #4]	; (8008a40 <vTaskMissedYield+0x8>)
 8008a3a:	2201      	movs	r2, #1
 8008a3c:	601a      	str	r2, [r3, #0]
}
 8008a3e:	4770      	bx	lr
 8008a40:	2000a4c4 	.word	0x2000a4c4

08008a44 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008a44:	4b05      	ldr	r3, [pc, #20]	; (8008a5c <xTaskGetSchedulerState+0x18>)
 8008a46:	681b      	ldr	r3, [r3, #0]
 8008a48:	b133      	cbz	r3, 8008a58 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008a4a:	4b05      	ldr	r3, [pc, #20]	; (8008a60 <xTaskGetSchedulerState+0x1c>)
 8008a4c:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8008a4e:	2b00      	cmp	r3, #0
 8008a50:	bf0c      	ite	eq
 8008a52:	2002      	moveq	r0, #2
 8008a54:	2000      	movne	r0, #0
 8008a56:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008a58:	2001      	movs	r0, #1
	}
 8008a5a:	4770      	bx	lr
 8008a5c:	2000a494 	.word	0x2000a494
 8008a60:	2000a440 	.word	0x2000a440

08008a64 <xTaskPriorityInherit>:
	{
 8008a64:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008a66:	4604      	mov	r4, r0
 8008a68:	b348      	cbz	r0, 8008abe <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008a6a:	4d1c      	ldr	r5, [pc, #112]	; (8008adc <xTaskPriorityInherit+0x78>)
 8008a6c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008a6e:	682a      	ldr	r2, [r5, #0]
 8008a70:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8008a72:	4293      	cmp	r3, r2
 8008a74:	d229      	bcs.n	8008aca <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008a76:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008a78:	4e19      	ldr	r6, [pc, #100]	; (8008ae0 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008a7a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008a7c:	bfa1      	itttt	ge
 8008a7e:	682a      	ldrge	r2, [r5, #0]
 8008a80:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008a82:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008a86:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008a88:	2214      	movs	r2, #20
 8008a8a:	fb02 6303 	mla	r3, r2, r3, r6
 8008a8e:	6942      	ldr	r2, [r0, #20]
 8008a90:	429a      	cmp	r2, r3
 8008a92:	d116      	bne.n	8008ac2 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008a94:	1d01      	adds	r1, r0, #4
 8008a96:	4608      	mov	r0, r1
 8008a98:	9101      	str	r1, [sp, #4]
 8008a9a:	f7fe fc9a 	bl	80073d2 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008a9e:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008aa0:	4a10      	ldr	r2, [pc, #64]	; (8008ae4 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008aa2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008aa4:	6810      	ldr	r0, [r2, #0]
 8008aa6:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008aa8:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008aaa:	4283      	cmp	r3, r0
 8008aac:	f04f 0014 	mov.w	r0, #20
 8008ab0:	fb00 6003 	mla	r0, r0, r3, r6
 8008ab4:	bf88      	it	hi
 8008ab6:	6013      	strhi	r3, [r2, #0]
 8008ab8:	f7fe fc68 	bl	800738c <vListInsertEnd>
				xReturn = pdTRUE;
 8008abc:	2001      	movs	r0, #1
	}
 8008abe:	b002      	add	sp, #8
 8008ac0:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008ac2:	682b      	ldr	r3, [r5, #0]
 8008ac4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ac6:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008ac8:	e7f8      	b.n	8008abc <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008aca:	682b      	ldr	r3, [r5, #0]
 8008acc:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008ace:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008ad0:	42a0      	cmp	r0, r4
 8008ad2:	bf2c      	ite	cs
 8008ad4:	2000      	movcs	r0, #0
 8008ad6:	2001      	movcc	r0, #1
 8008ad8:	e7f1      	b.n	8008abe <xTaskPriorityInherit+0x5a>
 8008ada:	bf00      	nop
 8008adc:	20009fcc 	.word	0x20009fcc
 8008ae0:	20009fd8 	.word	0x20009fd8
 8008ae4:	2000a448 	.word	0x2000a448

08008ae8 <xTaskPriorityDisinherit>:
	{
 8008ae8:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8008aea:	b910      	cbnz	r0, 8008af2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8008aec:	2000      	movs	r0, #0
	}
 8008aee:	b002      	add	sp, #8
 8008af0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008af2:	4b1c      	ldr	r3, [pc, #112]	; (8008b64 <xTaskPriorityDisinherit+0x7c>)
 8008af4:	681c      	ldr	r4, [r3, #0]
 8008af6:	4284      	cmp	r4, r0
 8008af8:	d008      	beq.n	8008b0c <xTaskPriorityDisinherit+0x24>
 8008afa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008afe:	f383 8811 	msr	BASEPRI, r3
 8008b02:	f3bf 8f6f 	isb	sy
 8008b06:	f3bf 8f4f 	dsb	sy
 8008b0a:	e7fe      	b.n	8008b0a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8008b0c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008b0e:	b943      	cbnz	r3, 8008b22 <xTaskPriorityDisinherit+0x3a>
 8008b10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b14:	f383 8811 	msr	BASEPRI, r3
 8008b18:	f3bf 8f6f 	isb	sy
 8008b1c:	f3bf 8f4f 	dsb	sy
 8008b20:	e7fe      	b.n	8008b20 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008b22:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008b24:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008b26:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008b28:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008b2a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008b2c:	d0de      	beq.n	8008aec <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008b2e:	2b00      	cmp	r3, #0
 8008b30:	d1dc      	bne.n	8008aec <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008b32:	1d21      	adds	r1, r4, #4
 8008b34:	4608      	mov	r0, r1
 8008b36:	9101      	str	r1, [sp, #4]
 8008b38:	f7fe fc4b 	bl	80073d2 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008b3c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8008b3e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008b40:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b42:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008b46:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008b48:	4a07      	ldr	r2, [pc, #28]	; (8008b68 <xTaskPriorityDisinherit+0x80>)
 8008b4a:	6810      	ldr	r0, [r2, #0]
 8008b4c:	4283      	cmp	r3, r0
 8008b4e:	bf88      	it	hi
 8008b50:	6013      	strhi	r3, [r2, #0]
 8008b52:	4a06      	ldr	r2, [pc, #24]	; (8008b6c <xTaskPriorityDisinherit+0x84>)
 8008b54:	2014      	movs	r0, #20
 8008b56:	fb00 2003 	mla	r0, r0, r3, r2
 8008b5a:	f7fe fc17 	bl	800738c <vListInsertEnd>
					xReturn = pdTRUE;
 8008b5e:	2001      	movs	r0, #1
		return xReturn;
 8008b60:	e7c5      	b.n	8008aee <xTaskPriorityDisinherit+0x6>
 8008b62:	bf00      	nop
 8008b64:	20009fcc 	.word	0x20009fcc
 8008b68:	2000a448 	.word	0x2000a448
 8008b6c:	20009fd8 	.word	0x20009fd8

08008b70 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008b70:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008b72:	4604      	mov	r4, r0
 8008b74:	2800      	cmp	r0, #0
 8008b76:	d044      	beq.n	8008c02 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008b78:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008b7a:	b942      	cbnz	r2, 8008b8e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008b7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b80:	f383 8811 	msr	BASEPRI, r3
 8008b84:	f3bf 8f6f 	isb	sy
 8008b88:	f3bf 8f4f 	dsb	sy
 8008b8c:	e7fe      	b.n	8008b8c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008b8e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008b90:	4299      	cmp	r1, r3
 8008b92:	bf38      	it	cc
 8008b94:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008b96:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008b98:	428b      	cmp	r3, r1
 8008b9a:	d032      	beq.n	8008c02 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008b9c:	2a01      	cmp	r2, #1
 8008b9e:	d130      	bne.n	8008c02 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008ba0:	4a19      	ldr	r2, [pc, #100]	; (8008c08 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008ba2:	6812      	ldr	r2, [r2, #0]
 8008ba4:	4282      	cmp	r2, r0
 8008ba6:	d108      	bne.n	8008bba <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008ba8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bac:	f383 8811 	msr	BASEPRI, r3
 8008bb0:	f3bf 8f6f 	isb	sy
 8008bb4:	f3bf 8f4f 	dsb	sy
 8008bb8:	e7fe      	b.n	8008bb8 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008bba:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008bbc:	4d13      	ldr	r5, [pc, #76]	; (8008c0c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008bbe:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008bc0:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008bc2:	f04f 0214 	mov.w	r2, #20
 8008bc6:	fb02 5303 	mla	r3, r2, r3, r5
 8008bca:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008bcc:	bfa4      	itt	ge
 8008bce:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008bd2:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008bd4:	429a      	cmp	r2, r3
 8008bd6:	d114      	bne.n	8008c02 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008bd8:	1d01      	adds	r1, r0, #4
 8008bda:	4608      	mov	r0, r1
 8008bdc:	9101      	str	r1, [sp, #4]
 8008bde:	f7fe fbf8 	bl	80073d2 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008be2:	4a0b      	ldr	r2, [pc, #44]	; (8008c10 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008be4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008be6:	6810      	ldr	r0, [r2, #0]
 8008be8:	9901      	ldr	r1, [sp, #4]
 8008bea:	4283      	cmp	r3, r0
 8008bec:	f04f 0014 	mov.w	r0, #20
 8008bf0:	fb00 5003 	mla	r0, r0, r3, r5
 8008bf4:	bf88      	it	hi
 8008bf6:	6013      	strhi	r3, [r2, #0]
	}
 8008bf8:	b003      	add	sp, #12
 8008bfa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8008bfe:	f7fe bbc5 	b.w	800738c <vListInsertEnd>
	}
 8008c02:	b003      	add	sp, #12
 8008c04:	bd30      	pop	{r4, r5, pc}
 8008c06:	bf00      	nop
 8008c08:	20009fcc 	.word	0x20009fcc
 8008c0c:	20009fd8 	.word	0x20009fd8
 8008c10:	2000a448 	.word	0x2000a448

08008c14 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008c14:	4b04      	ldr	r3, [pc, #16]	; (8008c28 <pvTaskIncrementMutexHeldCount+0x14>)
 8008c16:	681a      	ldr	r2, [r3, #0]
 8008c18:	b11a      	cbz	r2, 8008c22 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008c1a:	6819      	ldr	r1, [r3, #0]
 8008c1c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008c1e:	3201      	adds	r2, #1
 8008c20:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008c22:	6818      	ldr	r0, [r3, #0]
	}
 8008c24:	4770      	bx	lr
 8008c26:	bf00      	nop
 8008c28:	20009fcc 	.word	0x20009fcc

08008c2c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008c2c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008c2e:	4c11      	ldr	r4, [pc, #68]	; (8008c74 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008c30:	f7fe fc48 	bl	80074c4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008c34:	6825      	ldr	r5, [r4, #0]
 8008c36:	b9bd      	cbnz	r5, 8008c68 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008c38:	4f0f      	ldr	r7, [pc, #60]	; (8008c78 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008c3a:	4e10      	ldr	r6, [pc, #64]	; (8008c7c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008c3c:	4638      	mov	r0, r7
 8008c3e:	f7fe fb97 	bl	8007370 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008c42:	4630      	mov	r0, r6
 8008c44:	f7fe fb94 	bl	8007370 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008c48:	4b0d      	ldr	r3, [pc, #52]	; (8008c80 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008c4a:	4a0e      	ldr	r2, [pc, #56]	; (8008c84 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008c4c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008c4e:	4b0e      	ldr	r3, [pc, #56]	; (8008c88 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008c50:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008c52:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008c54:	200a      	movs	r0, #10
 8008c56:	4b0d      	ldr	r3, [pc, #52]	; (8008c8c <prvCheckForValidListAndQueue+0x60>)
 8008c58:	9500      	str	r5, [sp, #0]
 8008c5a:	f7fe fe44 	bl	80078e6 <xQueueGenericCreateStatic>
 8008c5e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008c60:	b110      	cbz	r0, 8008c68 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008c62:	490b      	ldr	r1, [pc, #44]	; (8008c90 <prvCheckForValidListAndQueue+0x64>)
 8008c64:	f7ff fa0e 	bl	8008084 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008c68:	b003      	add	sp, #12
 8008c6a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008c6e:	f7fe bc49 	b.w	8007504 <vPortExitCritical>
 8008c72:	bf00      	nop
 8008c74:	2000a5ec 	.word	0x2000a5ec
 8008c78:	2000a570 	.word	0x2000a570
 8008c7c:	2000a584 	.word	0x2000a584
 8008c80:	2000a4c8 	.word	0x2000a4c8
 8008c84:	2000a4d0 	.word	0x2000a4d0
 8008c88:	2000a4cc 	.word	0x2000a4cc
 8008c8c:	2000a59c 	.word	0x2000a59c
 8008c90:	0801e056 	.word	0x0801e056

08008c94 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008c94:	4291      	cmp	r1, r2
{
 8008c96:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008c98:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008c9a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008c9c:	d80a      	bhi.n	8008cb4 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008c9e:	1ad2      	subs	r2, r2, r3
 8008ca0:	6983      	ldr	r3, [r0, #24]
 8008ca2:	429a      	cmp	r2, r3
 8008ca4:	d20d      	bcs.n	8008cc2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008ca6:	4b08      	ldr	r3, [pc, #32]	; (8008cc8 <prvInsertTimerInActiveList+0x34>)
 8008ca8:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008caa:	6818      	ldr	r0, [r3, #0]
 8008cac:	f7fe fb7a 	bl	80073a4 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008cb0:	2000      	movs	r0, #0
}
 8008cb2:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008cb4:	429a      	cmp	r2, r3
 8008cb6:	d201      	bcs.n	8008cbc <prvInsertTimerInActiveList+0x28>
 8008cb8:	4299      	cmp	r1, r3
 8008cba:	d202      	bcs.n	8008cc2 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008cbc:	4b03      	ldr	r3, [pc, #12]	; (8008ccc <prvInsertTimerInActiveList+0x38>)
 8008cbe:	1d01      	adds	r1, r0, #4
 8008cc0:	e7f3      	b.n	8008caa <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008cc2:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008cc4:	e7f5      	b.n	8008cb2 <prvInsertTimerInActiveList+0x1e>
 8008cc6:	bf00      	nop
 8008cc8:	2000a4cc 	.word	0x2000a4cc
 8008ccc:	2000a4c8 	.word	0x2000a4c8

08008cd0 <xTimerCreateTimerTask>:
{
 8008cd0:	b510      	push	{r4, lr}
 8008cd2:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008cd4:	f7ff ffaa 	bl	8008c2c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008cd8:	4b12      	ldr	r3, [pc, #72]	; (8008d24 <xTimerCreateTimerTask+0x54>)
 8008cda:	681b      	ldr	r3, [r3, #0]
 8008cdc:	b1b3      	cbz	r3, 8008d0c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008cde:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008ce0:	aa07      	add	r2, sp, #28
 8008ce2:	a906      	add	r1, sp, #24
 8008ce4:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008ce6:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008cea:	f7fe fa3b 	bl	8007164 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8008cee:	9b05      	ldr	r3, [sp, #20]
 8008cf0:	9302      	str	r3, [sp, #8]
 8008cf2:	9b06      	ldr	r3, [sp, #24]
 8008cf4:	9301      	str	r3, [sp, #4]
 8008cf6:	2302      	movs	r3, #2
 8008cf8:	9300      	str	r3, [sp, #0]
 8008cfa:	9a07      	ldr	r2, [sp, #28]
 8008cfc:	490a      	ldr	r1, [pc, #40]	; (8008d28 <xTimerCreateTimerTask+0x58>)
 8008cfe:	480b      	ldr	r0, [pc, #44]	; (8008d2c <xTimerCreateTimerTask+0x5c>)
 8008d00:	4623      	mov	r3, r4
 8008d02:	f7ff fb86 	bl	8008412 <xTaskCreateStatic>
 8008d06:	4b0a      	ldr	r3, [pc, #40]	; (8008d30 <xTimerCreateTimerTask+0x60>)
 8008d08:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008d0a:	b940      	cbnz	r0, 8008d1e <xTimerCreateTimerTask+0x4e>
 8008d0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d10:	f383 8811 	msr	BASEPRI, r3
 8008d14:	f3bf 8f6f 	isb	sy
 8008d18:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8008d1c:	e7fe      	b.n	8008d1c <xTimerCreateTimerTask+0x4c>
}
 8008d1e:	2001      	movs	r0, #1
 8008d20:	b008      	add	sp, #32
 8008d22:	bd10      	pop	{r4, pc}
 8008d24:	2000a5ec 	.word	0x2000a5ec
 8008d28:	0801e05b 	.word	0x0801e05b
 8008d2c:	08008e39 	.word	0x08008e39
 8008d30:	2000a5f0 	.word	0x2000a5f0

08008d34 <xTimerGenericCommand>:
{
 8008d34:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008d36:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8008d38:	4604      	mov	r4, r0
{
 8008d3a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008d3c:	b940      	cbnz	r0, 8008d50 <xTimerGenericCommand+0x1c>
 8008d3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d42:	f383 8811 	msr	BASEPRI, r3
 8008d46:	f3bf 8f6f 	isb	sy
 8008d4a:	f3bf 8f4f 	dsb	sy
 8008d4e:	e7fe      	b.n	8008d4e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8008d50:	4d0d      	ldr	r5, [pc, #52]	; (8008d88 <xTimerGenericCommand+0x54>)
 8008d52:	6828      	ldr	r0, [r5, #0]
 8008d54:	b180      	cbz	r0, 8008d78 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008d56:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008d58:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008d5c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008d5e:	dc0d      	bgt.n	8008d7c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008d60:	f7ff fe70 	bl	8008a44 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008d64:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008d66:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008d68:	bf08      	it	eq
 8008d6a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008d6c:	6828      	ldr	r0, [r5, #0]
 8008d6e:	bf18      	it	ne
 8008d70:	461a      	movne	r2, r3
 8008d72:	4669      	mov	r1, sp
 8008d74:	f7fe fe6c 	bl	8007a50 <xQueueGenericSend>
}
 8008d78:	b004      	add	sp, #16
 8008d7a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008d7c:	2300      	movs	r3, #0
 8008d7e:	4669      	mov	r1, sp
 8008d80:	f7fe ff19 	bl	8007bb6 <xQueueGenericSendFromISR>
 8008d84:	e7f8      	b.n	8008d78 <xTimerGenericCommand+0x44>
 8008d86:	bf00      	nop
 8008d88:	2000a5ec 	.word	0x2000a5ec

08008d8c <prvSampleTimeNow>:
{
 8008d8c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8008d90:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8008e34 <prvSampleTimeNow+0xa8>
{
 8008d94:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8008d96:	f7ff fba9 	bl	80084ec <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008d9a:	f8d8 3000 	ldr.w	r3, [r8]
 8008d9e:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8008da0:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008da2:	d940      	bls.n	8008e26 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008da4:	4f21      	ldr	r7, [pc, #132]	; (8008e2c <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008da6:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008daa:	683b      	ldr	r3, [r7, #0]
 8008dac:	681a      	ldr	r2, [r3, #0]
 8008dae:	b95a      	cbnz	r2, 8008dc8 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8008db0:	4a1f      	ldr	r2, [pc, #124]	; (8008e30 <prvSampleTimeNow+0xa4>)
 8008db2:	6811      	ldr	r1, [r2, #0]
 8008db4:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8008db6:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8008db8:	2301      	movs	r3, #1
}
 8008dba:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8008dbc:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8008dbe:	f8c8 5000 	str.w	r5, [r8]
}
 8008dc2:	b004      	add	sp, #16
 8008dc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008dc8:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008dca:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008dcc:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008dd0:	1d21      	adds	r1, r4, #4
 8008dd2:	4608      	mov	r0, r1
 8008dd4:	9103      	str	r1, [sp, #12]
 8008dd6:	f7fe fafc 	bl	80073d2 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008dda:	6a23      	ldr	r3, [r4, #32]
 8008ddc:	4620      	mov	r0, r4
 8008dde:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008de0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008de4:	9903      	ldr	r1, [sp, #12]
 8008de6:	f013 0f04 	tst.w	r3, #4
 8008dea:	d0de      	beq.n	8008daa <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008dec:	69a3      	ldr	r3, [r4, #24]
 8008dee:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8008df0:	459a      	cmp	sl, r3
 8008df2:	d205      	bcs.n	8008e00 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008df4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008df6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008df8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008dfa:	f7fe fad3 	bl	80073a4 <vListInsert>
 8008dfe:	e7d4      	b.n	8008daa <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008e00:	2300      	movs	r3, #0
 8008e02:	f8cd 9000 	str.w	r9, [sp]
 8008e06:	4652      	mov	r2, sl
 8008e08:	4619      	mov	r1, r3
 8008e0a:	4620      	mov	r0, r4
 8008e0c:	f7ff ff92 	bl	8008d34 <xTimerGenericCommand>
				configASSERT( xResult );
 8008e10:	2800      	cmp	r0, #0
 8008e12:	d1ca      	bne.n	8008daa <prvSampleTimeNow+0x1e>
 8008e14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e18:	f383 8811 	msr	BASEPRI, r3
 8008e1c:	f3bf 8f6f 	isb	sy
 8008e20:	f3bf 8f4f 	dsb	sy
 8008e24:	e7fe      	b.n	8008e24 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8008e26:	2300      	movs	r3, #0
 8008e28:	e7c7      	b.n	8008dba <prvSampleTimeNow+0x2e>
 8008e2a:	bf00      	nop
 8008e2c:	2000a4c8 	.word	0x2000a4c8
 8008e30:	2000a4cc 	.word	0x2000a4cc
 8008e34:	2000a598 	.word	0x2000a598

08008e38 <prvTimerTask>:
{
 8008e38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008e3c:	4d6e      	ldr	r5, [pc, #440]	; (8008ff8 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008e3e:	4e6f      	ldr	r6, [pc, #444]	; (8008ffc <prvTimerTask+0x1c4>)
{
 8008e40:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008e42:	682b      	ldr	r3, [r5, #0]
 8008e44:	f8d3 8000 	ldr.w	r8, [r3]
 8008e48:	f1b8 0f00 	cmp.w	r8, #0
 8008e4c:	d035      	beq.n	8008eba <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008e4e:	68db      	ldr	r3, [r3, #12]
 8008e50:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008e54:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8008e56:	f7ff fb41 	bl	80084dc <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008e5a:	a804      	add	r0, sp, #16
 8008e5c:	f7ff ff96 	bl	8008d8c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8008e60:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008e62:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8008e64:	2b00      	cmp	r3, #0
 8008e66:	d169      	bne.n	8008f3c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008e68:	2c00      	cmp	r4, #0
 8008e6a:	d14c      	bne.n	8008f06 <prvTimerTask+0xce>
 8008e6c:	4540      	cmp	r0, r8
 8008e6e:	d350      	bcc.n	8008f12 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8008e70:	f7ff fbd8 	bl	8008624 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008e74:	682b      	ldr	r3, [r5, #0]
 8008e76:	68db      	ldr	r3, [r3, #12]
 8008e78:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008e7a:	1d38      	adds	r0, r7, #4
 8008e7c:	f7fe faa9 	bl	80073d2 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008e80:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8008e84:	0758      	lsls	r0, r3, #29
 8008e86:	d51a      	bpl.n	8008ebe <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008e88:	69b9      	ldr	r1, [r7, #24]
 8008e8a:	4643      	mov	r3, r8
 8008e8c:	464a      	mov	r2, r9
 8008e8e:	4441      	add	r1, r8
 8008e90:	4638      	mov	r0, r7
 8008e92:	f7ff feff 	bl	8008c94 <prvInsertTimerInActiveList>
 8008e96:	b1b0      	cbz	r0, 8008ec6 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008e98:	9400      	str	r4, [sp, #0]
 8008e9a:	4623      	mov	r3, r4
 8008e9c:	4642      	mov	r2, r8
 8008e9e:	4621      	mov	r1, r4
 8008ea0:	4638      	mov	r0, r7
 8008ea2:	f7ff ff47 	bl	8008d34 <xTimerGenericCommand>
			configASSERT( xResult );
 8008ea6:	b970      	cbnz	r0, 8008ec6 <prvTimerTask+0x8e>
 8008ea8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eac:	f383 8811 	msr	BASEPRI, r3
 8008eb0:	f3bf 8f6f 	isb	sy
 8008eb4:	f3bf 8f4f 	dsb	sy
 8008eb8:	e7fe      	b.n	8008eb8 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008eba:	2401      	movs	r4, #1
 8008ebc:	e7cb      	b.n	8008e56 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008ebe:	f023 0301 	bic.w	r3, r3, #1
 8008ec2:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008ec6:	6a3b      	ldr	r3, [r7, #32]
 8008ec8:	4638      	mov	r0, r7
 8008eca:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008ecc:	6830      	ldr	r0, [r6, #0]
 8008ece:	2200      	movs	r2, #0
 8008ed0:	a904      	add	r1, sp, #16
 8008ed2:	f7fe ff26 	bl	8007d22 <xQueueReceive>
 8008ed6:	2800      	cmp	r0, #0
 8008ed8:	d0b3      	beq.n	8008e42 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008eda:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008edc:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008ede:	2b00      	cmp	r3, #0
 8008ee0:	db2f      	blt.n	8008f42 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008ee2:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008ee4:	6963      	ldr	r3, [r4, #20]
 8008ee6:	2b00      	cmp	r3, #0
 8008ee8:	d132      	bne.n	8008f50 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008eea:	a803      	add	r0, sp, #12
 8008eec:	f7ff ff4e 	bl	8008d8c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8008ef0:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008ef2:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8008ef4:	2b09      	cmp	r3, #9
 8008ef6:	d8e9      	bhi.n	8008ecc <prvTimerTask+0x94>
 8008ef8:	e8df f003 	tbb	[pc, r3]
 8008efc:	572e2e2e 	.word	0x572e2e2e
 8008f00:	2e2e765e 	.word	0x2e2e765e
 8008f04:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8008f06:	4b3e      	ldr	r3, [pc, #248]	; (8009000 <prvTimerTask+0x1c8>)
 8008f08:	681b      	ldr	r3, [r3, #0]
 8008f0a:	681c      	ldr	r4, [r3, #0]
 8008f0c:	fab4 f484 	clz	r4, r4
 8008f10:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008f12:	6830      	ldr	r0, [r6, #0]
 8008f14:	4622      	mov	r2, r4
 8008f16:	eba8 0109 	sub.w	r1, r8, r9
 8008f1a:	f7ff f8f0 	bl	80080fe <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8008f1e:	f7ff fb81 	bl	8008624 <xTaskResumeAll>
 8008f22:	2800      	cmp	r0, #0
 8008f24:	d1d2      	bne.n	8008ecc <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8008f26:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008f2a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f2e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008f32:	f3bf 8f4f 	dsb	sy
 8008f36:	f3bf 8f6f 	isb	sy
 8008f3a:	e7c7      	b.n	8008ecc <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8008f3c:	f7ff fb72 	bl	8008624 <xTaskResumeAll>
}
 8008f40:	e7c4      	b.n	8008ecc <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008f42:	9b05      	ldr	r3, [sp, #20]
 8008f44:	9907      	ldr	r1, [sp, #28]
 8008f46:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008f48:	9b04      	ldr	r3, [sp, #16]
 8008f4a:	2b00      	cmp	r3, #0
 8008f4c:	dbbe      	blt.n	8008ecc <prvTimerTask+0x94>
 8008f4e:	e7c8      	b.n	8008ee2 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008f50:	1d20      	adds	r0, r4, #4
 8008f52:	f7fe fa3e 	bl	80073d2 <uxListRemove>
 8008f56:	e7c8      	b.n	8008eea <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008f58:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008f5c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008f5e:	f043 0301 	orr.w	r3, r3, #1
 8008f62:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008f66:	9b05      	ldr	r3, [sp, #20]
 8008f68:	4620      	mov	r0, r4
 8008f6a:	4419      	add	r1, r3
 8008f6c:	f7ff fe92 	bl	8008c94 <prvInsertTimerInActiveList>
 8008f70:	2800      	cmp	r0, #0
 8008f72:	d0ab      	beq.n	8008ecc <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008f74:	6a23      	ldr	r3, [r4, #32]
 8008f76:	4620      	mov	r0, r4
 8008f78:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008f7a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008f7e:	0759      	lsls	r1, r3, #29
 8008f80:	d5a4      	bpl.n	8008ecc <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008f82:	69a2      	ldr	r2, [r4, #24]
 8008f84:	9905      	ldr	r1, [sp, #20]
 8008f86:	2300      	movs	r3, #0
 8008f88:	440a      	add	r2, r1
 8008f8a:	9300      	str	r3, [sp, #0]
 8008f8c:	4619      	mov	r1, r3
 8008f8e:	4620      	mov	r0, r4
 8008f90:	f7ff fed0 	bl	8008d34 <xTimerGenericCommand>
							configASSERT( xResult );
 8008f94:	2800      	cmp	r0, #0
 8008f96:	d199      	bne.n	8008ecc <prvTimerTask+0x94>
 8008f98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f9c:	f383 8811 	msr	BASEPRI, r3
 8008fa0:	f3bf 8f6f 	isb	sy
 8008fa4:	f3bf 8f4f 	dsb	sy
 8008fa8:	e7fe      	b.n	8008fa8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008faa:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008fae:	f023 0301 	bic.w	r3, r3, #1
 8008fb2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008fb6:	e789      	b.n	8008ecc <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008fb8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008fbc:	f043 0301 	orr.w	r3, r3, #1
 8008fc0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008fc4:	9905      	ldr	r1, [sp, #20]
 8008fc6:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008fc8:	b941      	cbnz	r1, 8008fdc <prvTimerTask+0x1a4>
 8008fca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fce:	f383 8811 	msr	BASEPRI, r3
 8008fd2:	f3bf 8f6f 	isb	sy
 8008fd6:	f3bf 8f4f 	dsb	sy
 8008fda:	e7fe      	b.n	8008fda <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008fdc:	4603      	mov	r3, r0
 8008fde:	4401      	add	r1, r0
 8008fe0:	4620      	mov	r0, r4
 8008fe2:	f7ff fe57 	bl	8008c94 <prvInsertTimerInActiveList>
					break;
 8008fe6:	e771      	b.n	8008ecc <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008fe8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008fec:	079a      	lsls	r2, r3, #30
 8008fee:	d4de      	bmi.n	8008fae <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8008ff0:	4620      	mov	r0, r4
 8008ff2:	f7fe f97f 	bl	80072f4 <vPortFree>
 8008ff6:	e769      	b.n	8008ecc <prvTimerTask+0x94>
 8008ff8:	2000a4c8 	.word	0x2000a4c8
 8008ffc:	2000a5ec 	.word	0x2000a5ec
 8009000:	2000a4cc 	.word	0x2000a4cc

08009004 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009004:	8880      	ldrh	r0, [r0, #4]
 8009006:	4770      	bx	lr

08009008 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009008:	2300      	movs	r3, #0
 800900a:	8083      	strh	r3, [r0, #4]
 800900c:	4770      	bx	lr
	...

08009010 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009012:	6803      	ldr	r3, [r0, #0]
 8009014:	4605      	mov	r5, r0
 8009016:	460e      	mov	r6, r1
 8009018:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800901a:	2100      	movs	r1, #0
 800901c:	4798      	blx	r3
 800901e:	682b      	ldr	r3, [r5, #0]
 8009020:	4604      	mov	r4, r0
 8009022:	6a1b      	ldr	r3, [r3, #32]
 8009024:	4628      	mov	r0, r5
 8009026:	4798      	blx	r3
 8009028:	88ab      	ldrh	r3, [r5, #4]
 800902a:	1b34      	subs	r4, r6, r4
 800902c:	b2a4      	uxth	r4, r4
 800902e:	fbb4 f4f0 	udiv	r4, r4, r0
 8009032:	42a3      	cmp	r3, r4
 8009034:	d805      	bhi.n	8009042 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8009036:	4b0e      	ldr	r3, [pc, #56]	; (8009070 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8009038:	4a0e      	ldr	r2, [pc, #56]	; (8009074 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800903a:	211d      	movs	r1, #29
 800903c:	480e      	ldr	r0, [pc, #56]	; (8009078 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800903e:	f012 fe59 	bl	801bcf4 <__assert_func>
 8009042:	682b      	ldr	r3, [r5, #0]
 8009044:	2100      	movs	r1, #0
 8009046:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009048:	4628      	mov	r0, r5
 800904a:	4798      	blx	r3
 800904c:	682b      	ldr	r3, [r5, #0]
 800904e:	4607      	mov	r7, r0
 8009050:	6a1b      	ldr	r3, [r3, #32]
 8009052:	4628      	mov	r0, r5
 8009054:	4798      	blx	r3
 8009056:	1bf3      	subs	r3, r6, r7
 8009058:	b29b      	uxth	r3, r3
 800905a:	fbb3 f2f0 	udiv	r2, r3, r0
 800905e:	fb02 3010 	mls	r0, r2, r0, r3
 8009062:	b118      	cbz	r0, 800906c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8009064:	4b05      	ldr	r3, [pc, #20]	; (800907c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8009066:	4a03      	ldr	r2, [pc, #12]	; (8009074 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009068:	211e      	movs	r1, #30
 800906a:	e7e7      	b.n	800903c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800906c:	4620      	mov	r0, r4
 800906e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009070:	0801e063 	.word	0x0801e063
 8009074:	0801e1ce 	.word	0x0801e1ce
 8009078:	0801e078 	.word	0x0801e078
 800907c:	0801e0a6 	.word	0x0801e0a6

08009080 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009080:	b538      	push	{r3, r4, r5, lr}
 8009082:	6803      	ldr	r3, [r0, #0]
 8009084:	6a1b      	ldr	r3, [r3, #32]
 8009086:	460d      	mov	r5, r1
 8009088:	4604      	mov	r4, r0
 800908a:	4798      	blx	r3
 800908c:	4285      	cmp	r5, r0
 800908e:	d905      	bls.n	800909c <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8009090:	4b0c      	ldr	r3, [pc, #48]	; (80090c4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8009092:	4a0d      	ldr	r2, [pc, #52]	; (80090c8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8009094:	212f      	movs	r1, #47	; 0x2f
 8009096:	480d      	ldr	r0, [pc, #52]	; (80090cc <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8009098:	f012 fe2c 	bl	801bcf4 <__assert_func>
 800909c:	6823      	ldr	r3, [r4, #0]
 800909e:	88a5      	ldrh	r5, [r4, #4]
 80090a0:	69db      	ldr	r3, [r3, #28]
 80090a2:	4620      	mov	r0, r4
 80090a4:	4798      	blx	r3
 80090a6:	4285      	cmp	r5, r0
 80090a8:	d303      	bcc.n	80090b2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 80090aa:	4b09      	ldr	r3, [pc, #36]	; (80090d0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 80090ac:	4a06      	ldr	r2, [pc, #24]	; (80090c8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 80090ae:	2130      	movs	r1, #48	; 0x30
 80090b0:	e7f1      	b.n	8009096 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 80090b2:	6823      	ldr	r3, [r4, #0]
 80090b4:	88a1      	ldrh	r1, [r4, #4]
 80090b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80090b8:	4620      	mov	r0, r4
 80090ba:	4798      	blx	r3
 80090bc:	88a3      	ldrh	r3, [r4, #4]
 80090be:	3301      	adds	r3, #1
 80090c0:	80a3      	strh	r3, [r4, #4]
 80090c2:	bd38      	pop	{r3, r4, r5, pc}
 80090c4:	0801e120 	.word	0x0801e120
 80090c8:	0801e211 	.word	0x0801e211
 80090cc:	0801e078 	.word	0x0801e078
 80090d0:	0801e137 	.word	0x0801e137

080090d4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80090d4:	b570      	push	{r4, r5, r6, lr}
 80090d6:	6803      	ldr	r3, [r0, #0]
 80090d8:	6a1b      	ldr	r3, [r3, #32]
 80090da:	4616      	mov	r6, r2
 80090dc:	4604      	mov	r4, r0
 80090de:	460d      	mov	r5, r1
 80090e0:	4798      	blx	r3
 80090e2:	4286      	cmp	r6, r0
 80090e4:	d905      	bls.n	80090f2 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80090e6:	4b06      	ldr	r3, [pc, #24]	; (8009100 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 80090e8:	4a06      	ldr	r2, [pc, #24]	; (8009104 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 80090ea:	4807      	ldr	r0, [pc, #28]	; (8009108 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 80090ec:	2139      	movs	r1, #57	; 0x39
 80090ee:	f012 fe01 	bl	801bcf4 <__assert_func>
 80090f2:	6823      	ldr	r3, [r4, #0]
 80090f4:	4629      	mov	r1, r5
 80090f6:	4620      	mov	r0, r4
 80090f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80090fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80090fe:	4718      	bx	r3
 8009100:	0801e120 	.word	0x0801e120
 8009104:	0801e184 	.word	0x0801e184
 8009108:	0801e078 	.word	0x0801e078

0800910c <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800910c:	4770      	bx	lr
	...

08009110 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009110:	4a02      	ldr	r2, [pc, #8]	; (800911c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009112:	6002      	str	r2, [r0, #0]
 8009114:	2200      	movs	r2, #0
 8009116:	8082      	strh	r2, [r0, #4]
 8009118:	4770      	bx	lr
 800911a:	bf00      	nop
 800911c:	0801e158 	.word	0x0801e158

08009120 <_ZN8touchgfx9Container13getFirstChildEv>:
 8009120:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8009122:	4770      	bx	lr

08009124 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009124:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009126:	2000      	movs	r0, #0
 8009128:	b12b      	cbz	r3, 8009136 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800912a:	b920      	cbnz	r0, 8009136 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800912c:	1a5a      	subs	r2, r3, r1
 800912e:	4250      	negs	r0, r2
 8009130:	4150      	adcs	r0, r2
 8009132:	699b      	ldr	r3, [r3, #24]
 8009134:	e7f8      	b.n	8009128 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009136:	4770      	bx	lr

08009138 <_ZN8touchgfx9Container9removeAllEv>:
 8009138:	2200      	movs	r2, #0
 800913a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800913c:	b123      	cbz	r3, 8009148 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800913e:	6999      	ldr	r1, [r3, #24]
 8009140:	6281      	str	r1, [r0, #40]	; 0x28
 8009142:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009146:	e7f8      	b.n	800913a <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009148:	4770      	bx	lr

0800914a <_ZN8touchgfx9Container6unlinkEv>:
 800914a:	2300      	movs	r3, #0
 800914c:	6283      	str	r3, [r0, #40]	; 0x28
 800914e:	4770      	bx	lr

08009150 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009150:	2200      	movs	r2, #0
 8009152:	8002      	strh	r2, [r0, #0]
 8009154:	8042      	strh	r2, [r0, #2]
 8009156:	8082      	strh	r2, [r0, #4]
 8009158:	80c2      	strh	r2, [r0, #6]
 800915a:	4770      	bx	lr

0800915c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800915c:	b570      	push	{r4, r5, r6, lr}
 800915e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009160:	460d      	mov	r5, r1
 8009162:	4616      	mov	r6, r2
 8009164:	b13c      	cbz	r4, 8009176 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009166:	6823      	ldr	r3, [r4, #0]
 8009168:	4620      	mov	r0, r4
 800916a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800916c:	4632      	mov	r2, r6
 800916e:	4629      	mov	r1, r5
 8009170:	4798      	blx	r3
 8009172:	69a4      	ldr	r4, [r4, #24]
 8009174:	e7f6      	b.n	8009164 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009176:	bd70      	pop	{r4, r5, r6, pc}

08009178 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009178:	b538      	push	{r3, r4, r5, lr}
 800917a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800917c:	460d      	mov	r5, r1
 800917e:	b134      	cbz	r4, 800918e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009180:	682b      	ldr	r3, [r5, #0]
 8009182:	4621      	mov	r1, r4
 8009184:	689b      	ldr	r3, [r3, #8]
 8009186:	4628      	mov	r0, r5
 8009188:	4798      	blx	r3
 800918a:	69a4      	ldr	r4, [r4, #24]
 800918c:	e7f7      	b.n	800917e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800918e:	bd38      	pop	{r3, r4, r5, pc}

08009190 <_ZNK8touchgfx9Container17invalidateContentEv>:
 8009190:	b510      	push	{r4, lr}
 8009192:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009194:	b12c      	cbz	r4, 80091a2 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 8009196:	6823      	ldr	r3, [r4, #0]
 8009198:	4620      	mov	r0, r4
 800919a:	699b      	ldr	r3, [r3, #24]
 800919c:	4798      	blx	r3
 800919e:	69a4      	ldr	r4, [r4, #24]
 80091a0:	e7f8      	b.n	8009194 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 80091a2:	bd10      	pop	{r4, pc}

080091a4 <_ZN8touchgfx9ContainerD1Ev>:
 80091a4:	4770      	bx	lr

080091a6 <_ZN8touchgfx9ContainerD0Ev>:
 80091a6:	b510      	push	{r4, lr}
 80091a8:	212c      	movs	r1, #44	; 0x2c
 80091aa:	4604      	mov	r4, r0
 80091ac:	f012 fd74 	bl	801bc98 <_ZdlPvj>
 80091b0:	4620      	mov	r0, r4
 80091b2:	bd10      	pop	{r4, pc}

080091b4 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80091b4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80091b6:	b19b      	cbz	r3, 80091e0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80091b8:	428b      	cmp	r3, r1
 80091ba:	d109      	bne.n	80091d0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80091bc:	699a      	ldr	r2, [r3, #24]
 80091be:	2100      	movs	r1, #0
 80091c0:	6159      	str	r1, [r3, #20]
 80091c2:	6282      	str	r2, [r0, #40]	; 0x28
 80091c4:	b902      	cbnz	r2, 80091c8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80091c6:	4770      	bx	lr
 80091c8:	6199      	str	r1, [r3, #24]
 80091ca:	4770      	bx	lr
 80091cc:	4613      	mov	r3, r2
 80091ce:	b13a      	cbz	r2, 80091e0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80091d0:	699a      	ldr	r2, [r3, #24]
 80091d2:	428a      	cmp	r2, r1
 80091d4:	d1fa      	bne.n	80091cc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80091d6:	698a      	ldr	r2, [r1, #24]
 80091d8:	619a      	str	r2, [r3, #24]
 80091da:	2300      	movs	r3, #0
 80091dc:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80091e0:	4770      	bx	lr

080091e2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80091e2:	b410      	push	{r4}
 80091e4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80091e6:	4604      	mov	r4, r0
 80091e8:	b92b      	cbnz	r3, 80091f6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80091ea:	6803      	ldr	r3, [r0, #0]
 80091ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 80091f0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80091f2:	4611      	mov	r1, r2
 80091f4:	4718      	bx	r3
 80091f6:	b941      	cbnz	r1, 800920a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80091f8:	6193      	str	r3, [r2, #24]
 80091fa:	6282      	str	r2, [r0, #40]	; 0x28
 80091fc:	6154      	str	r4, [r2, #20]
 80091fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009202:	4770      	bx	lr
 8009204:	4603      	mov	r3, r0
 8009206:	2800      	cmp	r0, #0
 8009208:	d0f9      	beq.n	80091fe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800920a:	4299      	cmp	r1, r3
 800920c:	6998      	ldr	r0, [r3, #24]
 800920e:	d1f9      	bne.n	8009204 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009210:	6190      	str	r0, [r2, #24]
 8009212:	618a      	str	r2, [r1, #24]
 8009214:	e7f2      	b.n	80091fc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08009218 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009218:	4288      	cmp	r0, r1
 800921a:	b508      	push	{r3, lr}
 800921c:	d105      	bne.n	800922a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800921e:	4b11      	ldr	r3, [pc, #68]	; (8009264 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009220:	4a11      	ldr	r2, [pc, #68]	; (8009268 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009222:	2120      	movs	r1, #32
 8009224:	4811      	ldr	r0, [pc, #68]	; (800926c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8009226:	f012 fd65 	bl	801bcf4 <__assert_func>
 800922a:	694b      	ldr	r3, [r1, #20]
 800922c:	b11b      	cbz	r3, 8009236 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800922e:	4b10      	ldr	r3, [pc, #64]	; (8009270 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8009230:	4a0d      	ldr	r2, [pc, #52]	; (8009268 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009232:	2121      	movs	r1, #33	; 0x21
 8009234:	e7f6      	b.n	8009224 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009236:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800923a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800923c:	b913      	cbnz	r3, 8009244 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800923e:	6281      	str	r1, [r0, #40]	; 0x28
 8009240:	bd08      	pop	{r3, pc}
 8009242:	4613      	mov	r3, r2
 8009244:	699a      	ldr	r2, [r3, #24]
 8009246:	b12a      	cbz	r2, 8009254 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8009248:	428b      	cmp	r3, r1
 800924a:	d1fa      	bne.n	8009242 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800924c:	4b09      	ldr	r3, [pc, #36]	; (8009274 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800924e:	4a06      	ldr	r2, [pc, #24]	; (8009268 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009250:	2132      	movs	r1, #50	; 0x32
 8009252:	e7e7      	b.n	8009224 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009254:	428b      	cmp	r3, r1
 8009256:	d103      	bne.n	8009260 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8009258:	4b06      	ldr	r3, [pc, #24]	; (8009274 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800925a:	4a03      	ldr	r2, [pc, #12]	; (8009268 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800925c:	2135      	movs	r1, #53	; 0x35
 800925e:	e7e1      	b.n	8009224 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009260:	6199      	str	r1, [r3, #24]
 8009262:	e7ed      	b.n	8009240 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8009264:	0801e24f 	.word	0x0801e24f
 8009268:	0801e3a8 	.word	0x0801e3a8
 800926c:	0801e27b 	.word	0x0801e27b
 8009270:	0801e2ae 	.word	0x0801e2ae
 8009274:	0801e2e4 	.word	0x0801e2e4

08009278 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009278:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800927c:	461f      	mov	r7, r3
 800927e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8009282:	460d      	mov	r5, r1
 8009284:	4616      	mov	r6, r2
 8009286:	b103      	cbz	r3, 800928a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009288:	6038      	str	r0, [r7, #0]
 800928a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800928c:	b314      	cbz	r4, 80092d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800928e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009292:	b1eb      	cbz	r3, 80092d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009294:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009298:	428d      	cmp	r5, r1
 800929a:	db19      	blt.n	80092d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800929c:	8923      	ldrh	r3, [r4, #8]
 800929e:	b289      	uxth	r1, r1
 80092a0:	440b      	add	r3, r1
 80092a2:	b21b      	sxth	r3, r3
 80092a4:	429d      	cmp	r5, r3
 80092a6:	da13      	bge.n	80092d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80092a8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80092ac:	4296      	cmp	r6, r2
 80092ae:	db0f      	blt.n	80092d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80092b0:	8963      	ldrh	r3, [r4, #10]
 80092b2:	b292      	uxth	r2, r2
 80092b4:	4413      	add	r3, r2
 80092b6:	b21b      	sxth	r3, r3
 80092b8:	429e      	cmp	r6, r3
 80092ba:	da09      	bge.n	80092d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80092bc:	6823      	ldr	r3, [r4, #0]
 80092be:	1ab2      	subs	r2, r6, r2
 80092c0:	1a69      	subs	r1, r5, r1
 80092c2:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80092c6:	b212      	sxth	r2, r2
 80092c8:	463b      	mov	r3, r7
 80092ca:	b209      	sxth	r1, r1
 80092cc:	4620      	mov	r0, r4
 80092ce:	47c0      	blx	r8
 80092d0:	69a4      	ldr	r4, [r4, #24]
 80092d2:	e7db      	b.n	800928c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80092d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080092d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80092d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80092dc:	4c6e      	ldr	r4, [pc, #440]	; (8009498 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80092de:	b0a1      	sub	sp, #132	; 0x84
 80092e0:	6824      	ldr	r4, [r4, #0]
 80092e2:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80092e4:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80092e8:	9303      	str	r3, [sp, #12]
 80092ea:	2400      	movs	r4, #0
 80092ec:	802c      	strh	r4, [r5, #0]
 80092ee:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80092f0:	802c      	strh	r4, [r5, #0]
 80092f2:	601c      	str	r4, [r3, #0]
 80092f4:	4606      	mov	r6, r0
 80092f6:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80092fa:	f7ff ffbd 	bl	8009278 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80092fe:	f1b9 0f03 	cmp.w	r9, #3
 8009302:	f340 80c2 	ble.w	800948a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8009306:	4631      	mov	r1, r6
 8009308:	a80c      	add	r0, sp, #48	; 0x30
 800930a:	f004 ff2b 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800930e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8009312:	9306      	str	r3, [sp, #24]
 8009314:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8009318:	9307      	str	r3, [sp, #28]
 800931a:	9b03      	ldr	r3, [sp, #12]
 800931c:	f8d3 a000 	ldr.w	sl, [r3]
 8009320:	f1ba 0f00 	cmp.w	sl, #0
 8009324:	f000 80b4 	beq.w	8009490 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8009328:	4651      	mov	r1, sl
 800932a:	a810      	add	r0, sp, #64	; 0x40
 800932c:	f004 ff1a 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009330:	9b01      	ldr	r3, [sp, #4]
 8009332:	9a06      	ldr	r2, [sp, #24]
 8009334:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8009338:	189d      	adds	r5, r3, r2
 800933a:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800933e:	9a07      	ldr	r2, [sp, #28]
 8009340:	2002      	movs	r0, #2
 8009342:	fb91 f1f0 	sdiv	r1, r1, r0
 8009346:	4419      	add	r1, r3
 8009348:	1a6d      	subs	r5, r5, r1
 800934a:	9b02      	ldr	r3, [sp, #8]
 800934c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8009350:	4413      	add	r3, r2
 8009352:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8009356:	fb92 f2f0 	sdiv	r2, r2, r0
 800935a:	440a      	add	r2, r1
 800935c:	1a9b      	subs	r3, r3, r2
 800935e:	435b      	muls	r3, r3
 8009360:	fb05 3505 	mla	r5, r5, r5, r3
 8009364:	4f4d      	ldr	r7, [pc, #308]	; (800949c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8009366:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009368:	ac10      	add	r4, sp, #64	; 0x40
 800936a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800936c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800936e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009370:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009372:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009374:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8009378:	f1b9 0f0c 	cmp.w	r9, #12
 800937c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009380:	f04f 0303 	mov.w	r3, #3
 8009384:	bfc8      	it	gt
 8009386:	4698      	movgt	r8, r3
 8009388:	f8cd 9000 	str.w	r9, [sp]
 800938c:	f04f 0400 	mov.w	r4, #0
 8009390:	bfdc      	itt	le
 8009392:	f109 32ff 	addle.w	r2, r9, #4294967295
 8009396:	fb92 f8f3 	sdivle	r8, r2, r3
 800939a:	1c63      	adds	r3, r4, #1
 800939c:	aa10      	add	r2, sp, #64	; 0x40
 800939e:	f004 0401 	and.w	r4, r4, #1
 80093a2:	9308      	str	r3, [sp, #32]
 80093a4:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80093a8:	9b00      	ldr	r3, [sp, #0]
 80093aa:	fb93 f3f8 	sdiv	r3, r3, r8
 80093ae:	b29b      	uxth	r3, r3
 80093b0:	3404      	adds	r4, #4
 80093b2:	f04f 0b00 	mov.w	fp, #0
 80093b6:	9304      	str	r3, [sp, #16]
 80093b8:	9a04      	ldr	r2, [sp, #16]
 80093ba:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80093be:	fb13 f302 	smulbb	r3, r3, r2
 80093c2:	9a01      	ldr	r2, [sp, #4]
 80093c4:	b29b      	uxth	r3, r3
 80093c6:	1899      	adds	r1, r3, r2
 80093c8:	9305      	str	r3, [sp, #20]
 80093ca:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80093ce:	b209      	sxth	r1, r1
 80093d0:	4299      	cmp	r1, r3
 80093d2:	db4d      	blt.n	8009470 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80093d4:	8932      	ldrh	r2, [r6, #8]
 80093d6:	4413      	add	r3, r2
 80093d8:	b21b      	sxth	r3, r3
 80093da:	4299      	cmp	r1, r3
 80093dc:	da48      	bge.n	8009470 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80093de:	9b04      	ldr	r3, [sp, #16]
 80093e0:	6827      	ldr	r7, [r4, #0]
 80093e2:	fb17 f703 	smulbb	r7, r7, r3
 80093e6:	9b02      	ldr	r3, [sp, #8]
 80093e8:	b2bf      	uxth	r7, r7
 80093ea:	18fa      	adds	r2, r7, r3
 80093ec:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80093f0:	b212      	sxth	r2, r2
 80093f2:	429a      	cmp	r2, r3
 80093f4:	db3c      	blt.n	8009470 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80093f6:	8970      	ldrh	r0, [r6, #10]
 80093f8:	4403      	add	r3, r0
 80093fa:	b21b      	sxth	r3, r3
 80093fc:	429a      	cmp	r2, r3
 80093fe:	da37      	bge.n	8009470 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009400:	2300      	movs	r3, #0
 8009402:	930b      	str	r3, [sp, #44]	; 0x2c
 8009404:	4630      	mov	r0, r6
 8009406:	ab0b      	add	r3, sp, #44	; 0x2c
 8009408:	f7ff ff36 	bl	8009278 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800940c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800940e:	b37a      	cbz	r2, 8009470 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009410:	4552      	cmp	r2, sl
 8009412:	d02d      	beq.n	8009470 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009414:	4611      	mov	r1, r2
 8009416:	a80e      	add	r0, sp, #56	; 0x38
 8009418:	9209      	str	r2, [sp, #36]	; 0x24
 800941a:	f004 fea3 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800941e:	9a06      	ldr	r2, [sp, #24]
 8009420:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8009424:	9b01      	ldr	r3, [sp, #4]
 8009426:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800942a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800942e:	4413      	add	r3, r2
 8009430:	f04f 0e02 	mov.w	lr, #2
 8009434:	fb91 f1fe 	sdiv	r1, r1, lr
 8009438:	4401      	add	r1, r0
 800943a:	1a58      	subs	r0, r3, r1
 800943c:	9a07      	ldr	r2, [sp, #28]
 800943e:	9b02      	ldr	r3, [sp, #8]
 8009440:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8009444:	fb9c fcfe 	sdiv	ip, ip, lr
 8009448:	4413      	add	r3, r2
 800944a:	448c      	add	ip, r1
 800944c:	eba3 030c 	sub.w	r3, r3, ip
 8009450:	435b      	muls	r3, r3
 8009452:	fb00 3300 	mla	r3, r0, r0, r3
 8009456:	42ab      	cmp	r3, r5
 8009458:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800945a:	d208      	bcs.n	800946e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800945c:	9803      	ldr	r0, [sp, #12]
 800945e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009460:	6001      	str	r1, [r0, #0]
 8009462:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8009464:	9805      	ldr	r0, [sp, #20]
 8009466:	8008      	strh	r0, [r1, #0]
 8009468:	992b      	ldr	r1, [sp, #172]	; 0xac
 800946a:	461d      	mov	r5, r3
 800946c:	800f      	strh	r7, [r1, #0]
 800946e:	4692      	mov	sl, r2
 8009470:	f10b 0b01 	add.w	fp, fp, #1
 8009474:	f1bb 0f04 	cmp.w	fp, #4
 8009478:	f104 0408 	add.w	r4, r4, #8
 800947c:	d19c      	bne.n	80093b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800947e:	9b00      	ldr	r3, [sp, #0]
 8009480:	9c08      	ldr	r4, [sp, #32]
 8009482:	444b      	add	r3, r9
 8009484:	4544      	cmp	r4, r8
 8009486:	9300      	str	r3, [sp, #0]
 8009488:	d187      	bne.n	800939a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800948a:	b021      	add	sp, #132	; 0x84
 800948c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009490:	f04f 35ff 	mov.w	r5, #4294967295
 8009494:	e766      	b.n	8009364 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8009496:	bf00      	nop
 8009498:	2000a600 	.word	0x2000a600
 800949c:	0801ce6c 	.word	0x0801ce6c

080094a0 <_ZN8touchgfx4RectaNERKS0_>:
 80094a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80094a4:	f9b1 7000 	ldrsh.w	r7, [r1]
 80094a8:	888c      	ldrh	r4, [r1, #4]
 80094aa:	f9b0 9000 	ldrsh.w	r9, [r0]
 80094ae:	443c      	add	r4, r7
 80094b0:	b2a4      	uxth	r4, r4
 80094b2:	fa0f f884 	sxth.w	r8, r4
 80094b6:	45c1      	cmp	r9, r8
 80094b8:	da2f      	bge.n	800951a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80094ba:	8882      	ldrh	r2, [r0, #4]
 80094bc:	444a      	add	r2, r9
 80094be:	b292      	uxth	r2, r2
 80094c0:	fa0f fe82 	sxth.w	lr, r2
 80094c4:	4577      	cmp	r7, lr
 80094c6:	da28      	bge.n	800951a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80094c8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80094cc:	88cb      	ldrh	r3, [r1, #6]
 80094ce:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80094d2:	442b      	add	r3, r5
 80094d4:	b21b      	sxth	r3, r3
 80094d6:	429e      	cmp	r6, r3
 80094d8:	da1f      	bge.n	800951a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80094da:	88c3      	ldrh	r3, [r0, #6]
 80094dc:	4433      	add	r3, r6
 80094de:	b29b      	uxth	r3, r3
 80094e0:	fa0f fc83 	sxth.w	ip, r3
 80094e4:	4565      	cmp	r5, ip
 80094e6:	da18      	bge.n	800951a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80094e8:	454f      	cmp	r7, r9
 80094ea:	bfb8      	it	lt
 80094ec:	464f      	movlt	r7, r9
 80094ee:	42b5      	cmp	r5, r6
 80094f0:	bfb8      	it	lt
 80094f2:	4635      	movlt	r5, r6
 80094f4:	45f0      	cmp	r8, lr
 80094f6:	bfd8      	it	le
 80094f8:	4622      	movle	r2, r4
 80094fa:	1bd2      	subs	r2, r2, r7
 80094fc:	8082      	strh	r2, [r0, #4]
 80094fe:	884a      	ldrh	r2, [r1, #2]
 8009500:	88c9      	ldrh	r1, [r1, #6]
 8009502:	8007      	strh	r7, [r0, #0]
 8009504:	440a      	add	r2, r1
 8009506:	b292      	uxth	r2, r2
 8009508:	b211      	sxth	r1, r2
 800950a:	458c      	cmp	ip, r1
 800950c:	bfa8      	it	ge
 800950e:	4613      	movge	r3, r2
 8009510:	1b5b      	subs	r3, r3, r5
 8009512:	80c3      	strh	r3, [r0, #6]
 8009514:	8045      	strh	r5, [r0, #2]
 8009516:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800951a:	2300      	movs	r3, #0
 800951c:	8003      	strh	r3, [r0, #0]
 800951e:	8043      	strh	r3, [r0, #2]
 8009520:	8083      	strh	r3, [r0, #4]
 8009522:	80c3      	strh	r3, [r0, #6]
 8009524:	e7f7      	b.n	8009516 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009526 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009526:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800952a:	2b00      	cmp	r3, #0
 800952c:	dd06      	ble.n	800953c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800952e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009532:	2800      	cmp	r0, #0
 8009534:	bfcc      	ite	gt
 8009536:	2000      	movgt	r0, #0
 8009538:	2001      	movle	r0, #1
 800953a:	4770      	bx	lr
 800953c:	2001      	movs	r0, #1
 800953e:	4770      	bx	lr

08009540 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009540:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009544:	2300      	movs	r3, #0
 8009546:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009548:	8003      	strh	r3, [r0, #0]
 800954a:	4604      	mov	r4, r0
 800954c:	8043      	strh	r3, [r0, #2]
 800954e:	8083      	strh	r3, [r0, #4]
 8009550:	80c3      	strh	r3, [r0, #6]
 8009552:	2d00      	cmp	r5, #0
 8009554:	d040      	beq.n	80095d8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009556:	1d28      	adds	r0, r5, #4
 8009558:	f7ff ffe5 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800955c:	b988      	cbnz	r0, 8009582 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800955e:	4620      	mov	r0, r4
 8009560:	f7ff ffe1 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009564:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009568:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800956c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009570:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009574:	b138      	cbz	r0, 8009586 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009576:	8022      	strh	r2, [r4, #0]
 8009578:	8063      	strh	r3, [r4, #2]
 800957a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800957e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009582:	69ad      	ldr	r5, [r5, #24]
 8009584:	e7e5      	b.n	8009552 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009586:	f9b4 0000 	ldrsh.w	r0, [r4]
 800958a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800958e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009592:	4290      	cmp	r0, r2
 8009594:	4607      	mov	r7, r0
 8009596:	bfa8      	it	ge
 8009598:	4617      	movge	r7, r2
 800959a:	4472      	add	r2, lr
 800959c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80095a0:	8027      	strh	r7, [r4, #0]
 80095a2:	4299      	cmp	r1, r3
 80095a4:	460e      	mov	r6, r1
 80095a6:	4440      	add	r0, r8
 80095a8:	bfa8      	it	ge
 80095aa:	461e      	movge	r6, r3
 80095ac:	4471      	add	r1, lr
 80095ae:	4463      	add	r3, ip
 80095b0:	b200      	sxth	r0, r0
 80095b2:	b212      	sxth	r2, r2
 80095b4:	b209      	sxth	r1, r1
 80095b6:	b21b      	sxth	r3, r3
 80095b8:	4290      	cmp	r0, r2
 80095ba:	bfac      	ite	ge
 80095bc:	ebc7 0200 	rsbge	r2, r7, r0
 80095c0:	ebc7 0202 	rsblt	r2, r7, r2
 80095c4:	4299      	cmp	r1, r3
 80095c6:	bfac      	ite	ge
 80095c8:	ebc6 0301 	rsbge	r3, r6, r1
 80095cc:	ebc6 0303 	rsblt	r3, r6, r3
 80095d0:	8066      	strh	r6, [r4, #2]
 80095d2:	80a2      	strh	r2, [r4, #4]
 80095d4:	80e3      	strh	r3, [r4, #6]
 80095d6:	e7d4      	b.n	8009582 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80095d8:	4620      	mov	r0, r4
 80095da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080095de <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80095de:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80095e2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80095e6:	b383      	cbz	r3, 800964a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80095e8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80095ea:	b374      	cbz	r4, 800964a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80095ec:	f9b1 5000 	ldrsh.w	r5, [r1]
 80095f0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80095f4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80095f8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80095fc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009600:	b303      	cbz	r3, 8009644 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009602:	4668      	mov	r0, sp
 8009604:	1d21      	adds	r1, r4, #4
 8009606:	f8ad 5000 	strh.w	r5, [sp]
 800960a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800960e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009612:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009616:	f7ff ff43 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 800961a:	4668      	mov	r0, sp
 800961c:	f7ff ff83 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009620:	b980      	cbnz	r0, 8009644 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009622:	f8bd 3000 	ldrh.w	r3, [sp]
 8009626:	88a2      	ldrh	r2, [r4, #4]
 8009628:	1a9b      	subs	r3, r3, r2
 800962a:	f8ad 3000 	strh.w	r3, [sp]
 800962e:	88e2      	ldrh	r2, [r4, #6]
 8009630:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009634:	1a9b      	subs	r3, r3, r2
 8009636:	f8ad 3002 	strh.w	r3, [sp, #2]
 800963a:	6823      	ldr	r3, [r4, #0]
 800963c:	4669      	mov	r1, sp
 800963e:	689b      	ldr	r3, [r3, #8]
 8009640:	4620      	mov	r0, r4
 8009642:	4798      	blx	r3
 8009644:	69a4      	ldr	r4, [r4, #24]
 8009646:	2c00      	cmp	r4, #0
 8009648:	d1d8      	bne.n	80095fc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800964a:	b002      	add	sp, #8
 800964c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009650 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009650:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009652:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009656:	460d      	mov	r5, r1
 8009658:	4616      	mov	r6, r2
 800965a:	b323      	cbz	r3, 80096a6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800965c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800965e:	b314      	cbz	r4, 80096a6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009660:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009664:	b1eb      	cbz	r3, 80096a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009666:	6828      	ldr	r0, [r5, #0]
 8009668:	6869      	ldr	r1, [r5, #4]
 800966a:	466b      	mov	r3, sp
 800966c:	c303      	stmia	r3!, {r0, r1}
 800966e:	4668      	mov	r0, sp
 8009670:	1d21      	adds	r1, r4, #4
 8009672:	f7ff ff15 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 8009676:	4668      	mov	r0, sp
 8009678:	f7ff ff55 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800967c:	b988      	cbnz	r0, 80096a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800967e:	f8bd 3000 	ldrh.w	r3, [sp]
 8009682:	88a2      	ldrh	r2, [r4, #4]
 8009684:	1a9b      	subs	r3, r3, r2
 8009686:	f8ad 3000 	strh.w	r3, [sp]
 800968a:	88e2      	ldrh	r2, [r4, #6]
 800968c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009690:	1a9b      	subs	r3, r3, r2
 8009692:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009696:	6823      	ldr	r3, [r4, #0]
 8009698:	4632      	mov	r2, r6
 800969a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800969c:	4669      	mov	r1, sp
 800969e:	4620      	mov	r0, r4
 80096a0:	4798      	blx	r3
 80096a2:	69a4      	ldr	r4, [r4, #24]
 80096a4:	e7db      	b.n	800965e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80096a6:	b002      	add	sp, #8
 80096a8:	bd70      	pop	{r4, r5, r6, pc}

080096aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80096aa:	b513      	push	{r0, r1, r4, lr}
 80096ac:	6803      	ldr	r3, [r0, #0]
 80096ae:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80096b2:	2300      	movs	r3, #0
 80096b4:	e9cd 3300 	strd	r3, r3, [sp]
 80096b8:	466b      	mov	r3, sp
 80096ba:	47a0      	blx	r4
 80096bc:	b002      	add	sp, #8
 80096be:	bd10      	pop	{r4, pc}

080096c0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80096c0:	2301      	movs	r3, #1
 80096c2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80096c6:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80096ca:	4770      	bx	lr

080096cc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80096cc:	2301      	movs	r3, #1
 80096ce:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80096d2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80096d6:	4770      	bx	lr

080096d8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80096d8:	6843      	ldr	r3, [r0, #4]
 80096da:	2201      	movs	r2, #1
 80096dc:	725a      	strb	r2, [r3, #9]
 80096de:	6840      	ldr	r0, [r0, #4]
 80096e0:	6803      	ldr	r3, [r0, #0]
 80096e2:	691b      	ldr	r3, [r3, #16]
 80096e4:	4718      	bx	r3

080096e6 <_ZN8touchgfx3HAL8flushDMAEv>:
 80096e6:	6840      	ldr	r0, [r0, #4]
 80096e8:	6803      	ldr	r3, [r0, #0]
 80096ea:	689b      	ldr	r3, [r3, #8]
 80096ec:	4718      	bx	r3

080096ee <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80096ee:	b530      	push	{r4, r5, lr}
 80096f0:	b08b      	sub	sp, #44	; 0x2c
 80096f2:	6804      	ldr	r4, [r0, #0]
 80096f4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80096f8:	9509      	str	r5, [sp, #36]	; 0x24
 80096fa:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80096fe:	9508      	str	r5, [sp, #32]
 8009700:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8009704:	9507      	str	r5, [sp, #28]
 8009706:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800970a:	9506      	str	r5, [sp, #24]
 800970c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009710:	9505      	str	r5, [sp, #20]
 8009712:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009716:	9504      	str	r5, [sp, #16]
 8009718:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800971c:	9503      	str	r5, [sp, #12]
 800971e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009722:	9502      	str	r5, [sp, #8]
 8009724:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009728:	e9cd 3500 	strd	r3, r5, [sp]
 800972c:	4613      	mov	r3, r2
 800972e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8009730:	2200      	movs	r2, #0
 8009732:	47a0      	blx	r4
 8009734:	b00b      	add	sp, #44	; 0x2c
 8009736:	bd30      	pop	{r4, r5, pc}

08009738 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009738:	4b04      	ldr	r3, [pc, #16]	; (800974c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800973a:	781b      	ldrb	r3, [r3, #0]
 800973c:	b123      	cbz	r3, 8009748 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800973e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009742:	f080 0001 	eor.w	r0, r0, #1
 8009746:	4770      	bx	lr
 8009748:	2001      	movs	r0, #1
 800974a:	4770      	bx	lr
 800974c:	2000a5fe 	.word	0x2000a5fe

08009750 <_ZN8touchgfx3HAL8endFrameEv>:
 8009750:	b510      	push	{r4, lr}
 8009752:	4604      	mov	r4, r0
 8009754:	6840      	ldr	r0, [r0, #4]
 8009756:	6803      	ldr	r3, [r0, #0]
 8009758:	689b      	ldr	r3, [r3, #8]
 800975a:	4798      	blx	r3
 800975c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009760:	b113      	cbz	r3, 8009768 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009762:	2301      	movs	r3, #1
 8009764:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009768:	bd10      	pop	{r4, pc}

0800976a <_ZN8touchgfx3HAL10initializeEv>:
 800976a:	b510      	push	{r4, lr}
 800976c:	4604      	mov	r4, r0
 800976e:	f7f7 fab7 	bl	8000ce0 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009772:	6860      	ldr	r0, [r4, #4]
 8009774:	6803      	ldr	r3, [r0, #0]
 8009776:	68db      	ldr	r3, [r3, #12]
 8009778:	4798      	blx	r3
 800977a:	68e0      	ldr	r0, [r4, #12]
 800977c:	6803      	ldr	r3, [r0, #0]
 800977e:	689b      	ldr	r3, [r3, #8]
 8009780:	4798      	blx	r3
 8009782:	6823      	ldr	r3, [r4, #0]
 8009784:	4620      	mov	r0, r4
 8009786:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800978c:	4718      	bx	r3
	...

08009790 <_ZN8touchgfx3HAL4tickEv>:
 8009790:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009792:	6803      	ldr	r3, [r0, #0]
 8009794:	4d5b      	ldr	r5, [pc, #364]	; (8009904 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8009796:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800979a:	4604      	mov	r4, r0
 800979c:	4798      	blx	r3
 800979e:	2800      	cmp	r0, #0
 80097a0:	f000 8095 	beq.w	80098ce <_ZN8touchgfx3HAL4tickEv+0x13e>
 80097a4:	2001      	movs	r0, #1
 80097a6:	f7f6 ffdb 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80097aa:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80097ae:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80097b2:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80097b6:	2600      	movs	r6, #0
 80097b8:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80097bc:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80097c0:	b133      	cbz	r3, 80097d0 <_ZN8touchgfx3HAL4tickEv+0x40>
 80097c2:	6823      	ldr	r3, [r4, #0]
 80097c4:	4620      	mov	r0, r4
 80097c6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80097ca:	4798      	blx	r3
 80097cc:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 80097d0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80097d4:	6862      	ldr	r2, [r4, #4]
 80097d6:	f083 0301 	eor.w	r3, r3, #1
 80097da:	7253      	strb	r3, [r2, #9]
 80097dc:	2601      	movs	r6, #1
 80097de:	702e      	strb	r6, [r5, #0]
 80097e0:	f003 fc98 	bl	800d114 <_ZN8touchgfx11Application11getInstanceEv>
 80097e4:	6803      	ldr	r3, [r0, #0]
 80097e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80097e8:	4798      	blx	r3
 80097ea:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80097ee:	b90b      	cbnz	r3, 80097f4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80097f0:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 80097f4:	f003 fc8e 	bl	800d114 <_ZN8touchgfx11Application11getInstanceEv>
 80097f8:	6803      	ldr	r3, [r0, #0]
 80097fa:	695b      	ldr	r3, [r3, #20]
 80097fc:	4798      	blx	r3
 80097fe:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009800:	6803      	ldr	r3, [r0, #0]
 8009802:	691b      	ldr	r3, [r3, #16]
 8009804:	4798      	blx	r3
 8009806:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800980a:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800980e:	3b01      	subs	r3, #1
 8009810:	b2db      	uxtb	r3, r3
 8009812:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009816:	b10a      	cbz	r2, 800981c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009818:	2b00      	cmp	r3, #0
 800981a:	d1eb      	bne.n	80097f4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800981c:	4a3a      	ldr	r2, [pc, #232]	; (8009908 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800981e:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009822:	7813      	ldrb	r3, [r2, #0]
 8009824:	3301      	adds	r3, #1
 8009826:	b25b      	sxtb	r3, r3
 8009828:	4299      	cmp	r1, r3
 800982a:	7013      	strb	r3, [r2, #0]
 800982c:	dc10      	bgt.n	8009850 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800982e:	68e0      	ldr	r0, [r4, #12]
 8009830:	2300      	movs	r3, #0
 8009832:	7013      	strb	r3, [r2, #0]
 8009834:	6803      	ldr	r3, [r0, #0]
 8009836:	aa03      	add	r2, sp, #12
 8009838:	68db      	ldr	r3, [r3, #12]
 800983a:	a902      	add	r1, sp, #8
 800983c:	4798      	blx	r3
 800983e:	6823      	ldr	r3, [r4, #0]
 8009840:	2800      	cmp	r0, #0
 8009842:	d050      	beq.n	80098e6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8009844:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8009848:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800984c:	4620      	mov	r0, r4
 800984e:	4798      	blx	r3
 8009850:	6960      	ldr	r0, [r4, #20]
 8009852:	2300      	movs	r3, #0
 8009854:	f88d 3007 	strb.w	r3, [sp, #7]
 8009858:	b158      	cbz	r0, 8009872 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800985a:	6803      	ldr	r3, [r0, #0]
 800985c:	f10d 0107 	add.w	r1, sp, #7
 8009860:	68db      	ldr	r3, [r3, #12]
 8009862:	4798      	blx	r3
 8009864:	b128      	cbz	r0, 8009872 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8009866:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009868:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800986c:	6803      	ldr	r3, [r0, #0]
 800986e:	68db      	ldr	r3, [r3, #12]
 8009870:	4798      	blx	r3
 8009872:	f104 001c 	add.w	r0, r4, #28
 8009876:	f012 f93b 	bl	801baf0 <_ZN8touchgfx8Gestures4tickEv>
 800987a:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800987e:	b30b      	cbz	r3, 80098c4 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009880:	6920      	ldr	r0, [r4, #16]
 8009882:	6803      	ldr	r3, [r0, #0]
 8009884:	691b      	ldr	r3, [r3, #16]
 8009886:	4798      	blx	r3
 8009888:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800988a:	4606      	mov	r6, r0
 800988c:	b903      	cbnz	r3, 8009890 <_ZN8touchgfx3HAL4tickEv+0x100>
 800988e:	6720      	str	r0, [r4, #112]	; 0x70
 8009890:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009892:	4a1e      	ldr	r2, [pc, #120]	; (800990c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009894:	1af3      	subs	r3, r6, r3
 8009896:	4293      	cmp	r3, r2
 8009898:	d914      	bls.n	80098c4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800989a:	6920      	ldr	r0, [r4, #16]
 800989c:	6803      	ldr	r3, [r0, #0]
 800989e:	699b      	ldr	r3, [r3, #24]
 80098a0:	4798      	blx	r3
 80098a2:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80098a4:	2264      	movs	r2, #100	; 0x64
 80098a6:	1af3      	subs	r3, r6, r3
 80098a8:	fbb3 f3f2 	udiv	r3, r3, r2
 80098ac:	fbb0 f0f3 	udiv	r0, r0, r3
 80098b0:	2800      	cmp	r0, #0
 80098b2:	dc1d      	bgt.n	80098f0 <_ZN8touchgfx3HAL4tickEv+0x160>
 80098b4:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80098b8:	6920      	ldr	r0, [r4, #16]
 80098ba:	6803      	ldr	r3, [r0, #0]
 80098bc:	2100      	movs	r1, #0
 80098be:	69db      	ldr	r3, [r3, #28]
 80098c0:	4798      	blx	r3
 80098c2:	6726      	str	r6, [r4, #112]	; 0x70
 80098c4:	f003 fc26 	bl	800d114 <_ZN8touchgfx11Application11getInstanceEv>
 80098c8:	6803      	ldr	r3, [r0, #0]
 80098ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80098cc:	4798      	blx	r3
 80098ce:	6823      	ldr	r3, [r4, #0]
 80098d0:	4620      	mov	r0, r4
 80098d2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80098d6:	4798      	blx	r3
 80098d8:	2001      	movs	r0, #1
 80098da:	f7f6 ff67 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80098de:	2300      	movs	r3, #0
 80098e0:	702b      	strb	r3, [r5, #0]
 80098e2:	b004      	add	sp, #16
 80098e4:	bd70      	pop	{r4, r5, r6, pc}
 80098e6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80098ea:	4620      	mov	r0, r4
 80098ec:	4798      	blx	r3
 80098ee:	e7af      	b.n	8009850 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80098f0:	2863      	cmp	r0, #99	; 0x63
 80098f2:	bfcb      	itete	gt
 80098f4:	2300      	movgt	r3, #0
 80098f6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80098fa:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 80098fe:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009902:	e7d9      	b.n	80098b8 <_ZN8touchgfx3HAL4tickEv+0x128>
 8009904:	2000a604 	.word	0x2000a604
 8009908:	2000a605 	.word	0x2000a605
 800990c:	05f5e100 	.word	0x05f5e100

08009910 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009910:	f7f7 ba16 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009914 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009914:	6581      	str	r1, [r0, #88]	; 0x58
 8009916:	301c      	adds	r0, #28
 8009918:	f012 b8e8 	b.w	801baec <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800991c <_ZN8touchgfx3HAL5touchEll>:
 800991c:	b530      	push	{r4, r5, lr}
 800991e:	b087      	sub	sp, #28
 8009920:	4604      	mov	r4, r0
 8009922:	a804      	add	r0, sp, #16
 8009924:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009928:	f003 f952 	bl	800cbd0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800992c:	9b04      	ldr	r3, [sp, #16]
 800992e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009932:	a906      	add	r1, sp, #24
 8009934:	9b05      	ldr	r3, [sp, #20]
 8009936:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800993a:	a803      	add	r0, sp, #12
 800993c:	f003 f99a 	bl	800cc74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009940:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009944:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009948:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800994c:	f104 001c 	add.w	r0, r4, #28
 8009950:	b189      	cbz	r1, 8009976 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009952:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009956:	9300      	str	r3, [sp, #0]
 8009958:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800995c:	4613      	mov	r3, r2
 800995e:	462a      	mov	r2, r5
 8009960:	f012 f8d4 	bl	801bb0c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009964:	b128      	cbz	r0, 8009972 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009966:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800996a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800996c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009970:	6623      	str	r3, [r4, #96]	; 0x60
 8009972:	b007      	add	sp, #28
 8009974:	bd30      	pop	{r4, r5, pc}
 8009976:	f012 f909 	bl	801bb8c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800997a:	2301      	movs	r3, #1
 800997c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009980:	e7f1      	b.n	8009966 <_ZN8touchgfx3HAL5touchEll+0x4a>

08009982 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009982:	b510      	push	{r4, lr}
 8009984:	2b00      	cmp	r3, #0
 8009986:	d046      	beq.n	8009a16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009988:	ea81 0002 	eor.w	r0, r1, r2
 800998c:	07c4      	lsls	r4, r0, #31
 800998e:	d508      	bpl.n	80099a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009990:	440b      	add	r3, r1
 8009992:	3a01      	subs	r2, #1
 8009994:	428b      	cmp	r3, r1
 8009996:	d93e      	bls.n	8009a16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009998:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800999c:	f801 0b01 	strb.w	r0, [r1], #1
 80099a0:	e7f8      	b.n	8009994 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80099a2:	07d0      	lsls	r0, r2, #31
 80099a4:	bf42      	ittt	mi
 80099a6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80099aa:	f801 0b01 	strbmi.w	r0, [r1], #1
 80099ae:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80099b2:	2b01      	cmp	r3, #1
 80099b4:	d911      	bls.n	80099da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80099b6:	ea81 0402 	eor.w	r4, r1, r2
 80099ba:	07a4      	lsls	r4, r4, #30
 80099bc:	4610      	mov	r0, r2
 80099be:	d022      	beq.n	8009a06 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80099c0:	f023 0401 	bic.w	r4, r3, #1
 80099c4:	440c      	add	r4, r1
 80099c6:	428c      	cmp	r4, r1
 80099c8:	4602      	mov	r2, r0
 80099ca:	d904      	bls.n	80099d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80099cc:	8812      	ldrh	r2, [r2, #0]
 80099ce:	f821 2b02 	strh.w	r2, [r1], #2
 80099d2:	3002      	adds	r0, #2
 80099d4:	e7f7      	b.n	80099c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80099d6:	f003 0301 	and.w	r3, r3, #1
 80099da:	f023 0003 	bic.w	r0, r3, #3
 80099de:	4408      	add	r0, r1
 80099e0:	4288      	cmp	r0, r1
 80099e2:	4614      	mov	r4, r2
 80099e4:	d904      	bls.n	80099f0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80099e6:	6824      	ldr	r4, [r4, #0]
 80099e8:	f841 4b04 	str.w	r4, [r1], #4
 80099ec:	3204      	adds	r2, #4
 80099ee:	e7f7      	b.n	80099e0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80099f0:	f003 0303 	and.w	r3, r3, #3
 80099f4:	440b      	add	r3, r1
 80099f6:	3a01      	subs	r2, #1
 80099f8:	428b      	cmp	r3, r1
 80099fa:	d90c      	bls.n	8009a16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80099fc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009a00:	f801 0b01 	strb.w	r0, [r1], #1
 8009a04:	e7f8      	b.n	80099f8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009a06:	0790      	lsls	r0, r2, #30
 8009a08:	d0e7      	beq.n	80099da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009a0a:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009a0e:	f821 0b02 	strh.w	r0, [r1], #2
 8009a12:	3b02      	subs	r3, #2
 8009a14:	e7e1      	b.n	80099da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009a16:	2001      	movs	r0, #1
 8009a18:	bd10      	pop	{r4, pc}

08009a1a <_ZN8touchgfx3HAL7noTouchEv>:
 8009a1a:	b510      	push	{r4, lr}
 8009a1c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009a20:	4604      	mov	r4, r0
 8009a22:	b153      	cbz	r3, 8009a3a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009a24:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009a28:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009a2c:	2101      	movs	r1, #1
 8009a2e:	301c      	adds	r0, #28
 8009a30:	f012 f8ac 	bl	801bb8c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009a34:	2300      	movs	r3, #0
 8009a36:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009a3a:	bd10      	pop	{r4, pc}

08009a3c <_ZN8touchgfx3HAL3lcdEv>:
 8009a3c:	4b04      	ldr	r3, [pc, #16]	; (8009a50 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8009a3e:	681b      	ldr	r3, [r3, #0]
 8009a40:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009a44:	b10a      	cbz	r2, 8009a4a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009a46:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009a48:	b900      	cbnz	r0, 8009a4c <_ZN8touchgfx3HAL3lcdEv+0x10>
 8009a4a:	6898      	ldr	r0, [r3, #8]
 8009a4c:	4770      	bx	lr
 8009a4e:	bf00      	nop
 8009a50:	2000a600 	.word	0x2000a600

08009a54 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009a54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009a58:	4604      	mov	r4, r0
 8009a5a:	6980      	ldr	r0, [r0, #24]
 8009a5c:	b085      	sub	sp, #20
 8009a5e:	460f      	mov	r7, r1
 8009a60:	4690      	mov	r8, r2
 8009a62:	4699      	mov	r9, r3
 8009a64:	b930      	cbnz	r0, 8009a74 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009a66:	4b1c      	ldr	r3, [pc, #112]	; (8009ad8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8009a68:	4a1c      	ldr	r2, [pc, #112]	; (8009adc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009a6a:	f44f 719f 	mov.w	r1, #318	; 0x13e
 8009a6e:	481c      	ldr	r0, [pc, #112]	; (8009ae0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 8009a70:	f012 f940 	bl	801bcf4 <__assert_func>
 8009a74:	ad04      	add	r5, sp, #16
 8009a76:	2600      	movs	r6, #0
 8009a78:	f845 6d04 	str.w	r6, [r5, #-4]!
 8009a7c:	6806      	ldr	r6, [r0, #0]
 8009a7e:	9501      	str	r5, [sp, #4]
 8009a80:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009a84:	9500      	str	r5, [sp, #0]
 8009a86:	6835      	ldr	r5, [r6, #0]
 8009a88:	47a8      	blx	r5
 8009a8a:	4d16      	ldr	r5, [pc, #88]	; (8009ae4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8009a8c:	4606      	mov	r6, r0
 8009a8e:	f8a5 9000 	strh.w	r9, [r5]
 8009a92:	f7ff ffd3 	bl	8009a3c <_ZN8touchgfx3HAL3lcdEv>
 8009a96:	6803      	ldr	r3, [r0, #0]
 8009a98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009a9a:	4798      	blx	r3
 8009a9c:	2801      	cmp	r0, #1
 8009a9e:	d012      	beq.n	8009ac6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 8009aa0:	d306      	bcc.n	8009ab0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 8009aa2:	280d      	cmp	r0, #13
 8009aa4:	d80b      	bhi.n	8009abe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009aa6:	4b10      	ldr	r3, [pc, #64]	; (8009ae8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009aa8:	4a0c      	ldr	r2, [pc, #48]	; (8009adc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009aaa:	f240 115b 	movw	r1, #347	; 0x15b
 8009aae:	e7de      	b.n	8009a6e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009ab0:	882b      	ldrh	r3, [r5, #0]
 8009ab2:	fb08 7203 	mla	r2, r8, r3, r7
 8009ab6:	9b03      	ldr	r3, [sp, #12]
 8009ab8:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009abc:	63e3      	str	r3, [r4, #60]	; 0x3c
 8009abe:	4630      	mov	r0, r6
 8009ac0:	b005      	add	sp, #20
 8009ac2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ac6:	882a      	ldrh	r2, [r5, #0]
 8009ac8:	9b03      	ldr	r3, [sp, #12]
 8009aca:	fb08 7202 	mla	r2, r8, r2, r7
 8009ace:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009ad2:	1a9a      	subs	r2, r3, r2
 8009ad4:	63e2      	str	r2, [r4, #60]	; 0x3c
 8009ad6:	e7f2      	b.n	8009abe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009ad8:	0801e549 	.word	0x0801e549
 8009adc:	0801e807 	.word	0x0801e807
 8009ae0:	0801e58e 	.word	0x0801e58e
 8009ae4:	2000a5fa 	.word	0x2000a5fa
 8009ae8:	0801e5b4 	.word	0x0801e5b4

08009aec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8009aec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009aee:	b08b      	sub	sp, #44	; 0x2c
 8009af0:	4617      	mov	r7, r2
 8009af2:	4604      	mov	r4, r0
 8009af4:	460e      	mov	r6, r1
 8009af6:	461d      	mov	r5, r3
 8009af8:	f7ff ffa0 	bl	8009a3c <_ZN8touchgfx3HAL3lcdEv>
 8009afc:	6803      	ldr	r3, [r0, #0]
 8009afe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b00:	4798      	blx	r3
 8009b02:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009b06:	9007      	str	r0, [sp, #28]
 8009b08:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009b0c:	4b0d      	ldr	r3, [pc, #52]	; (8009b44 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8009b0e:	6822      	ldr	r2, [r4, #0]
 8009b10:	881b      	ldrh	r3, [r3, #0]
 8009b12:	9306      	str	r3, [sp, #24]
 8009b14:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009b18:	9305      	str	r3, [sp, #20]
 8009b1a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009b1e:	9304      	str	r3, [sp, #16]
 8009b20:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009b24:	9303      	str	r3, [sp, #12]
 8009b26:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009b2a:	9302      	str	r3, [sp, #8]
 8009b2c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009b30:	e9cd 5300 	strd	r5, r3, [sp]
 8009b34:	4631      	mov	r1, r6
 8009b36:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8009b38:	463b      	mov	r3, r7
 8009b3a:	2200      	movs	r2, #0
 8009b3c:	4620      	mov	r0, r4
 8009b3e:	47a8      	blx	r5
 8009b40:	b00b      	add	sp, #44	; 0x2c
 8009b42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009b44:	2000a5fa 	.word	0x2000a5fa

08009b48 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009b48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b4c:	4698      	mov	r8, r3
 8009b4e:	6803      	ldr	r3, [r0, #0]
 8009b50:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8009b52:	4b15      	ldr	r3, [pc, #84]	; (8009ba8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8009b54:	b08b      	sub	sp, #44	; 0x2c
 8009b56:	4617      	mov	r7, r2
 8009b58:	f8b3 9000 	ldrh.w	r9, [r3]
 8009b5c:	460e      	mov	r6, r1
 8009b5e:	4604      	mov	r4, r0
 8009b60:	f7ff ff6c 	bl	8009a3c <_ZN8touchgfx3HAL3lcdEv>
 8009b64:	6803      	ldr	r3, [r0, #0]
 8009b66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b68:	4798      	blx	r3
 8009b6a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009b6e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009b72:	2302      	movs	r3, #2
 8009b74:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009b78:	2301      	movs	r3, #1
 8009b7a:	9305      	str	r3, [sp, #20]
 8009b7c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009b80:	9304      	str	r3, [sp, #16]
 8009b82:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009b86:	9303      	str	r3, [sp, #12]
 8009b88:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009b8c:	9302      	str	r3, [sp, #8]
 8009b8e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009b92:	2200      	movs	r2, #0
 8009b94:	e9cd 8300 	strd	r8, r3, [sp]
 8009b98:	4631      	mov	r1, r6
 8009b9a:	463b      	mov	r3, r7
 8009b9c:	4620      	mov	r0, r4
 8009b9e:	47a8      	blx	r5
 8009ba0:	b00b      	add	sp, #44	; 0x2c
 8009ba2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ba6:	bf00      	nop
 8009ba8:	2000a5fa 	.word	0x2000a5fa

08009bac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8009bac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009bb0:	4698      	mov	r8, r3
 8009bb2:	6803      	ldr	r3, [r0, #0]
 8009bb4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8009bb6:	4b11      	ldr	r3, [pc, #68]	; (8009bfc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009bb8:	b087      	sub	sp, #28
 8009bba:	f8b3 9000 	ldrh.w	r9, [r3]
 8009bbe:	460e      	mov	r6, r1
 8009bc0:	4617      	mov	r7, r2
 8009bc2:	4604      	mov	r4, r0
 8009bc4:	f7ff ff3a 	bl	8009a3c <_ZN8touchgfx3HAL3lcdEv>
 8009bc8:	6803      	ldr	r3, [r0, #0]
 8009bca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009bcc:	4798      	blx	r3
 8009bce:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8009bd2:	f8cd 900c 	str.w	r9, [sp, #12]
 8009bd6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8009bda:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009bde:	9302      	str	r3, [sp, #8]
 8009be0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009be4:	9301      	str	r3, [sp, #4]
 8009be6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009bea:	9300      	str	r3, [sp, #0]
 8009bec:	463a      	mov	r2, r7
 8009bee:	4643      	mov	r3, r8
 8009bf0:	4631      	mov	r1, r6
 8009bf2:	4620      	mov	r0, r4
 8009bf4:	47a8      	blx	r5
 8009bf6:	b007      	add	sp, #28
 8009bf8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009bfc:	2000a5fa 	.word	0x2000a5fa

08009c00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009c00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c04:	4604      	mov	r4, r0
 8009c06:	b08f      	sub	sp, #60	; 0x3c
 8009c08:	4610      	mov	r0, r2
 8009c0a:	460d      	mov	r5, r1
 8009c0c:	4691      	mov	r9, r2
 8009c0e:	461e      	mov	r6, r3
 8009c10:	f005 fe5e 	bl	800f8d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009c14:	2800      	cmp	r0, #0
 8009c16:	f000 809c 	beq.w	8009d52 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 8009c1a:	6823      	ldr	r3, [r4, #0]
 8009c1c:	f8df b194 	ldr.w	fp, [pc, #404]	; 8009db4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8009c20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009c22:	f8df a194 	ldr.w	sl, [pc, #404]	; 8009db8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009c26:	4f60      	ldr	r7, [pc, #384]	; (8009da8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009c28:	4620      	mov	r0, r4
 8009c2a:	4798      	blx	r3
 8009c2c:	6823      	ldr	r3, [r4, #0]
 8009c2e:	4620      	mov	r0, r4
 8009c30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c32:	4798      	blx	r3
 8009c34:	f8bb 3000 	ldrh.w	r3, [fp]
 8009c38:	9301      	str	r3, [sp, #4]
 8009c3a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8009c3e:	f8ba 3000 	ldrh.w	r3, [sl]
 8009c42:	9302      	str	r3, [sp, #8]
 8009c44:	883b      	ldrh	r3, [r7, #0]
 8009c46:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009c4a:	9303      	str	r3, [sp, #12]
 8009c4c:	4b57      	ldr	r3, [pc, #348]	; (8009dac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009c4e:	9305      	str	r3, [sp, #20]
 8009c50:	881a      	ldrh	r2, [r3, #0]
 8009c52:	9204      	str	r2, [sp, #16]
 8009c54:	4640      	mov	r0, r8
 8009c56:	f005 feeb 	bl	800fa30 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009c5a:	8038      	strh	r0, [r7, #0]
 8009c5c:	4640      	mov	r0, r8
 8009c5e:	f005 ff2b 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009c62:	9b05      	ldr	r3, [sp, #20]
 8009c64:	8018      	strh	r0, [r3, #0]
 8009c66:	4b52      	ldr	r3, [pc, #328]	; (8009db0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009c68:	781b      	ldrb	r3, [r3, #0]
 8009c6a:	2b00      	cmp	r3, #0
 8009c6c:	d174      	bne.n	8009d58 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8009c6e:	883b      	ldrh	r3, [r7, #0]
 8009c70:	f8ab 3000 	strh.w	r3, [fp]
 8009c74:	f8aa 0000 	strh.w	r0, [sl]
 8009c78:	4648      	mov	r0, r9
 8009c7a:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8009c7e:	f005 fe27 	bl	800f8d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009c82:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009c86:	2200      	movs	r2, #0
 8009c88:	4611      	mov	r1, r2
 8009c8a:	4628      	mov	r0, r5
 8009c8c:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009c90:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009c94:	f7f8 fcdb 	bl	800264e <_ZN8touchgfx8Drawable5setXYEss>
 8009c98:	2301      	movs	r3, #1
 8009c9a:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8009c9e:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009ca2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009ca6:	2b00      	cmp	r3, #0
 8009ca8:	dd5c      	ble.n	8009d64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8009caa:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009cae:	2b00      	cmp	r3, #0
 8009cb0:	dd58      	ble.n	8009d64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8009cb2:	462a      	mov	r2, r5
 8009cb4:	ab0a      	add	r3, sp, #40	; 0x28
 8009cb6:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009cba:	6851      	ldr	r1, [r2, #4]
 8009cbc:	c303      	stmia	r3!, {r0, r1}
 8009cbe:	4631      	mov	r1, r6
 8009cc0:	a80a      	add	r0, sp, #40	; 0x28
 8009cc2:	f7ff fbed 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 8009cc6:	4b38      	ldr	r3, [pc, #224]	; (8009da8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009cc8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009ccc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8009cd0:	2100      	movs	r1, #0
 8009cd2:	aa0a      	add	r2, sp, #40	; 0x28
 8009cd4:	4b35      	ldr	r3, [pc, #212]	; (8009dac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009cd6:	910c      	str	r1, [sp, #48]	; 0x30
 8009cd8:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009cdc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009ce0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8009ce4:	ab08      	add	r3, sp, #32
 8009ce6:	e883 0003 	stmia.w	r3, {r0, r1}
 8009cea:	4618      	mov	r0, r3
 8009cec:	a90c      	add	r1, sp, #48	; 0x30
 8009cee:	f7ff fbd7 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 8009cf2:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009cf4:	2b00      	cmp	r3, #0
 8009cf6:	d13c      	bne.n	8009d72 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 8009cf8:	2000      	movs	r0, #0
 8009cfa:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8009cfe:	2600      	movs	r6, #0
 8009d00:	682a      	ldr	r2, [r5, #0]
 8009d02:	696b      	ldr	r3, [r5, #20]
 8009d04:	616e      	str	r6, [r5, #20]
 8009d06:	9305      	str	r3, [sp, #20]
 8009d08:	6892      	ldr	r2, [r2, #8]
 8009d0a:	a908      	add	r1, sp, #32
 8009d0c:	4628      	mov	r0, r5
 8009d0e:	4790      	blx	r2
 8009d10:	9b05      	ldr	r3, [sp, #20]
 8009d12:	616b      	str	r3, [r5, #20]
 8009d14:	4652      	mov	r2, sl
 8009d16:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8009d1a:	4649      	mov	r1, r9
 8009d1c:	4628      	mov	r0, r5
 8009d1e:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8009d22:	f7f8 fc94 	bl	800264e <_ZN8touchgfx8Drawable5setXYEss>
 8009d26:	4b23      	ldr	r3, [pc, #140]	; (8009db4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009d28:	9a01      	ldr	r2, [sp, #4]
 8009d2a:	801a      	strh	r2, [r3, #0]
 8009d2c:	4b22      	ldr	r3, [pc, #136]	; (8009db8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8009d2e:	9a02      	ldr	r2, [sp, #8]
 8009d30:	801a      	strh	r2, [r3, #0]
 8009d32:	4b1d      	ldr	r3, [pc, #116]	; (8009da8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009d34:	9a03      	ldr	r2, [sp, #12]
 8009d36:	801a      	strh	r2, [r3, #0]
 8009d38:	4b1c      	ldr	r3, [pc, #112]	; (8009dac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009d3a:	9a04      	ldr	r2, [sp, #16]
 8009d3c:	801a      	strh	r2, [r3, #0]
 8009d3e:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8009d42:	6823      	ldr	r3, [r4, #0]
 8009d44:	4620      	mov	r0, r4
 8009d46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d48:	4798      	blx	r3
 8009d4a:	6823      	ldr	r3, [r4, #0]
 8009d4c:	4620      	mov	r0, r4
 8009d4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d50:	4798      	blx	r3
 8009d52:	b00f      	add	sp, #60	; 0x3c
 8009d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d58:	883b      	ldrh	r3, [r7, #0]
 8009d5a:	f8ab 0000 	strh.w	r0, [fp]
 8009d5e:	f8aa 3000 	strh.w	r3, [sl]
 8009d62:	e789      	b.n	8009c78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 8009d64:	462a      	mov	r2, r5
 8009d66:	ab0a      	add	r3, sp, #40	; 0x28
 8009d68:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009d6c:	6851      	ldr	r1, [r2, #4]
 8009d6e:	c303      	stmia	r3!, {r0, r1}
 8009d70:	e7a9      	b.n	8009cc6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 8009d72:	a807      	add	r0, sp, #28
 8009d74:	f006 f802 	bl	800fd7c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009d78:	4606      	mov	r6, r0
 8009d7a:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009d7c:	6803      	ldr	r3, [r0, #0]
 8009d7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d80:	4798      	blx	r3
 8009d82:	4286      	cmp	r6, r0
 8009d84:	d1b8      	bne.n	8009cf8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 8009d86:	f7ff fe59 	bl	8009a3c <_ZN8touchgfx3HAL3lcdEv>
 8009d8a:	6803      	ldr	r3, [r0, #0]
 8009d8c:	4606      	mov	r6, r0
 8009d8e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009d90:	9305      	str	r3, [sp, #20]
 8009d92:	a807      	add	r0, sp, #28
 8009d94:	f005 fff2 	bl	800fd7c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009d98:	9b05      	ldr	r3, [sp, #20]
 8009d9a:	4601      	mov	r1, r0
 8009d9c:	4630      	mov	r0, r6
 8009d9e:	4798      	blx	r3
 8009da0:	f080 0001 	eor.w	r0, r0, #1
 8009da4:	b2c0      	uxtb	r0, r0
 8009da6:	e7a8      	b.n	8009cfa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8009da8:	2000a5f4 	.word	0x2000a5f4
 8009dac:	2000a5f6 	.word	0x2000a5f6
 8009db0:	2000a5f8 	.word	0x2000a5f8
 8009db4:	2000a5fa 	.word	0x2000a5fa
 8009db8:	2000a5fc 	.word	0x2000a5fc

08009dbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009dbc:	b510      	push	{r4, lr}
 8009dbe:	4b07      	ldr	r3, [pc, #28]	; (8009ddc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009dc0:	781b      	ldrb	r3, [r3, #0]
 8009dc2:	4604      	mov	r4, r0
 8009dc4:	b13b      	cbz	r3, 8009dd6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009dc6:	6803      	ldr	r3, [r0, #0]
 8009dc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009dca:	4798      	blx	r3
 8009dcc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009dce:	4283      	cmp	r3, r0
 8009dd0:	d101      	bne.n	8009dd6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009dd2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009dd4:	bd10      	pop	{r4, pc}
 8009dd6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009dd8:	e7fc      	b.n	8009dd4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009dda:	bf00      	nop
 8009ddc:	2000a5fe 	.word	0x2000a5fe

08009de0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8009de0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009de4:	b08a      	sub	sp, #40	; 0x28
 8009de6:	461d      	mov	r5, r3
 8009de8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009dec:	2400      	movs	r4, #0
 8009dee:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 8009df2:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8009df6:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 8009dfa:	9404      	str	r4, [sp, #16]
 8009dfc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009e00:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009e04:	f8ad 8018 	strh.w	r8, [sp, #24]
 8009e08:	4692      	mov	sl, r2
 8009e0a:	4606      	mov	r6, r0
 8009e0c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8009e10:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009e14:	f88d 4020 	strb.w	r4, [sp, #32]
 8009e18:	f7ff ffd0 	bl	8009dbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009e1c:	fb09 a505 	mla	r5, r9, r5, sl
 8009e20:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009e24:	9505      	str	r5, [sp, #20]
 8009e26:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009e2a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8009e2e:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8009e32:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8009e36:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8009e3a:	f1b8 0f00 	cmp.w	r8, #0
 8009e3e:	d000      	beq.n	8009e42 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 8009e40:	b937      	cbnz	r7, 8009e50 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 8009e42:	4b0d      	ldr	r3, [pc, #52]	; (8009e78 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8009e44:	4a0d      	ldr	r2, [pc, #52]	; (8009e7c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009e46:	f240 2102 	movw	r1, #514	; 0x202
 8009e4a:	480d      	ldr	r0, [pc, #52]	; (8009e80 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 8009e4c:	f011 ff52 	bl	801bcf4 <__assert_func>
 8009e50:	6833      	ldr	r3, [r6, #0]
 8009e52:	9c01      	ldr	r4, [sp, #4]
 8009e54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009e56:	4630      	mov	r0, r6
 8009e58:	4798      	blx	r3
 8009e5a:	4220      	tst	r0, r4
 8009e5c:	d104      	bne.n	8009e68 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 8009e5e:	4b09      	ldr	r3, [pc, #36]	; (8009e84 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 8009e60:	4a06      	ldr	r2, [pc, #24]	; (8009e7c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009e62:	f240 2103 	movw	r1, #515	; 0x203
 8009e66:	e7f0      	b.n	8009e4a <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 8009e68:	6870      	ldr	r0, [r6, #4]
 8009e6a:	6803      	ldr	r3, [r0, #0]
 8009e6c:	a901      	add	r1, sp, #4
 8009e6e:	685b      	ldr	r3, [r3, #4]
 8009e70:	4798      	blx	r3
 8009e72:	b00a      	add	sp, #40	; 0x28
 8009e74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009e78:	0801e3e3 	.word	0x0801e3e3
 8009e7c:	0801e63c 	.word	0x0801e63c
 8009e80:	0801e58e 	.word	0x0801e58e
 8009e84:	0801e41b 	.word	0x0801e41b

08009e88 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8009e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e8c:	b08b      	sub	sp, #44	; 0x2c
 8009e8e:	2400      	movs	r4, #0
 8009e90:	461d      	mov	r5, r3
 8009e92:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8009e96:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 8009e9a:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 8009e9e:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8009ea2:	9404      	str	r4, [sp, #16]
 8009ea4:	468a      	mov	sl, r1
 8009ea6:	4693      	mov	fp, r2
 8009ea8:	4606      	mov	r6, r0
 8009eaa:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8009eae:	f7ff ff85 	bl	8009dbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009eb2:	fb09 b505 	mla	r5, r9, r5, fp
 8009eb6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009eba:	9505      	str	r5, [sp, #20]
 8009ebc:	f8ad 8018 	strh.w	r8, [sp, #24]
 8009ec0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8009ec4:	f8ad 401c 	strh.w	r4, [sp, #28]
 8009ec8:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009ecc:	f8cd a010 	str.w	sl, [sp, #16]
 8009ed0:	f8ad 4020 	strh.w	r4, [sp, #32]
 8009ed4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8009ed8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8009edc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8009ee0:	f1b8 0f00 	cmp.w	r8, #0
 8009ee4:	d000      	beq.n	8009ee8 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 8009ee6:	b937      	cbnz	r7, 8009ef6 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 8009ee8:	4b0d      	ldr	r3, [pc, #52]	; (8009f20 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8009eea:	4a0e      	ldr	r2, [pc, #56]	; (8009f24 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8009eec:	f240 2119 	movw	r1, #537	; 0x219
 8009ef0:	480d      	ldr	r0, [pc, #52]	; (8009f28 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 8009ef2:	f011 feff 	bl	801bcf4 <__assert_func>
 8009ef6:	6833      	ldr	r3, [r6, #0]
 8009ef8:	9c01      	ldr	r4, [sp, #4]
 8009efa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009efc:	4630      	mov	r0, r6
 8009efe:	4798      	blx	r3
 8009f00:	4220      	tst	r0, r4
 8009f02:	d104      	bne.n	8009f0e <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 8009f04:	4b09      	ldr	r3, [pc, #36]	; (8009f2c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 8009f06:	4a07      	ldr	r2, [pc, #28]	; (8009f24 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8009f08:	f240 211a 	movw	r1, #538	; 0x21a
 8009f0c:	e7f0      	b.n	8009ef0 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 8009f0e:	6870      	ldr	r0, [r6, #4]
 8009f10:	6803      	ldr	r3, [r0, #0]
 8009f12:	a901      	add	r1, sp, #4
 8009f14:	685b      	ldr	r3, [r3, #4]
 8009f16:	4798      	blx	r3
 8009f18:	b00b      	add	sp, #44	; 0x2c
 8009f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f1e:	bf00      	nop
 8009f20:	0801e460 	.word	0x0801e460
 8009f24:	0801e6b2 	.word	0x0801e6b2
 8009f28:	0801e58e 	.word	0x0801e58e
 8009f2c:	0801e498 	.word	0x0801e498

08009f30 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009f30:	b508      	push	{r3, lr}
 8009f32:	290d      	cmp	r1, #13
 8009f34:	d817      	bhi.n	8009f66 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009f36:	e8df f001 	tbb	[pc, r1]
 8009f3a:	090b      	.short	0x090b
 8009f3c:	0d0d0d07 	.word	0x0d0d0d07
 8009f40:	1414140d 	.word	0x1414140d
 8009f44:	0d0d1414 	.word	0x0d0d1414
 8009f48:	2020      	movs	r0, #32
 8009f4a:	bd08      	pop	{r3, pc}
 8009f4c:	2018      	movs	r0, #24
 8009f4e:	e7fc      	b.n	8009f4a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009f50:	2010      	movs	r0, #16
 8009f52:	e7fa      	b.n	8009f4a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009f54:	4b05      	ldr	r3, [pc, #20]	; (8009f6c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009f56:	4a06      	ldr	r2, [pc, #24]	; (8009f70 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009f58:	4806      	ldr	r0, [pc, #24]	; (8009f74 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009f5a:	f240 2183 	movw	r1, #643	; 0x283
 8009f5e:	f011 fec9 	bl	801bcf4 <__assert_func>
 8009f62:	2008      	movs	r0, #8
 8009f64:	e7f1      	b.n	8009f4a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009f66:	2000      	movs	r0, #0
 8009f68:	e7ef      	b.n	8009f4a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009f6a:	bf00      	nop
 8009f6c:	0801e60a 	.word	0x0801e60a
 8009f70:	0801e9dd 	.word	0x0801e9dd
 8009f74:	0801e58e 	.word	0x0801e58e

08009f78 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009f78:	b570      	push	{r4, r5, r6, lr}
 8009f7a:	460d      	mov	r5, r1
 8009f7c:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8009f80:	4616      	mov	r6, r2
 8009f82:	461c      	mov	r4, r3
 8009f84:	f7ff ffd4 	bl	8009f30 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009f88:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8009f8c:	10c0      	asrs	r0, r0, #3
 8009f8e:	fb06 5101 	mla	r1, r6, r1, r5
 8009f92:	fb00 4001 	mla	r0, r0, r1, r4
 8009f96:	bd70      	pop	{r4, r5, r6, pc}

08009f98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8009f98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009f9c:	b08c      	sub	sp, #48	; 0x30
 8009f9e:	f04f 0c00 	mov.w	ip, #0
 8009fa2:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 8009fa6:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8009faa:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 8009fae:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 8009fb2:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 8009fb6:	f8cd c018 	str.w	ip, [sp, #24]
 8009fba:	2d0b      	cmp	r5, #11
 8009fbc:	4604      	mov	r4, r0
 8009fbe:	469a      	mov	sl, r3
 8009fc0:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 8009fc4:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8009fc8:	d130      	bne.n	800a02c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 8009fca:	2080      	movs	r0, #128	; 0x80
 8009fcc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8009fd0:	9205      	str	r2, [sp, #20]
 8009fd2:	4620      	mov	r0, r4
 8009fd4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8009fd8:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8009fdc:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8009fe0:	f8ad 7020 	strh.w	r7, [sp, #32]
 8009fe4:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 8009fe8:	f7ff fee8 	bl	8009dbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009fec:	e9cd 9800 	strd	r9, r8, [sp]
 8009ff0:	4603      	mov	r3, r0
 8009ff2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8009ff6:	4651      	mov	r1, sl
 8009ff8:	4620      	mov	r0, r4
 8009ffa:	f7ff ffbd 	bl	8009f78 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009ffe:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 800a002:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800a006:	2300      	movs	r3, #0
 800a008:	9007      	str	r0, [sp, #28]
 800a00a:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 800a00e:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 800a012:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 800a016:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800a01a:	b107      	cbz	r7, 800a01e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 800a01c:	b9d6      	cbnz	r6, 800a054 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 800a01e:	4b17      	ldr	r3, [pc, #92]	; (800a07c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 800a020:	4a17      	ldr	r2, [pc, #92]	; (800a080 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800a022:	f240 11c9 	movw	r1, #457	; 0x1c9
 800a026:	4817      	ldr	r0, [pc, #92]	; (800a084 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 800a028:	f011 fe64 	bl	801bcf4 <__assert_func>
 800a02c:	2d02      	cmp	r5, #2
 800a02e:	d108      	bne.n	800a042 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800a030:	2bff      	cmp	r3, #255	; 0xff
 800a032:	d104      	bne.n	800a03e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 800a034:	2800      	cmp	r0, #0
 800a036:	bf14      	ite	ne
 800a038:	2040      	movne	r0, #64	; 0x40
 800a03a:	2020      	moveq	r0, #32
 800a03c:	e7c6      	b.n	8009fcc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a03e:	2040      	movs	r0, #64	; 0x40
 800a040:	e7c4      	b.n	8009fcc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a042:	2bff      	cmp	r3, #255	; 0xff
 800a044:	d104      	bne.n	800a050 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 800a046:	2800      	cmp	r0, #0
 800a048:	bf14      	ite	ne
 800a04a:	2004      	movne	r0, #4
 800a04c:	2001      	moveq	r0, #1
 800a04e:	e7bd      	b.n	8009fcc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a050:	2004      	movs	r0, #4
 800a052:	e7bb      	b.n	8009fcc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 800a054:	6823      	ldr	r3, [r4, #0]
 800a056:	9d03      	ldr	r5, [sp, #12]
 800a058:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a05a:	4620      	mov	r0, r4
 800a05c:	4798      	blx	r3
 800a05e:	4228      	tst	r0, r5
 800a060:	d104      	bne.n	800a06c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 800a062:	4b09      	ldr	r3, [pc, #36]	; (800a088 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 800a064:	4a06      	ldr	r2, [pc, #24]	; (800a080 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 800a066:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800a06a:	e7dc      	b.n	800a026 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 800a06c:	6860      	ldr	r0, [r4, #4]
 800a06e:	6803      	ldr	r3, [r0, #0]
 800a070:	a903      	add	r1, sp, #12
 800a072:	685b      	ldr	r3, [r3, #4]
 800a074:	4798      	blx	r3
 800a076:	b00c      	add	sp, #48	; 0x30
 800a078:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a07c:	0801e3e3 	.word	0x0801e3e3
 800a080:	0801e86b 	.word	0x0801e86b
 800a084:	0801e58e 	.word	0x0801e58e
 800a088:	0801e41b 	.word	0x0801e41b

0800a08c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a08c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a090:	b08d      	sub	sp, #52	; 0x34
 800a092:	469b      	mov	fp, r3
 800a094:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 800a098:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 800a09c:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 800a0a0:	2fff      	cmp	r7, #255	; 0xff
 800a0a2:	bf14      	ite	ne
 800a0a4:	2308      	movne	r3, #8
 800a0a6:	2302      	moveq	r3, #2
 800a0a8:	2500      	movs	r5, #0
 800a0aa:	4604      	mov	r4, r0
 800a0ac:	4689      	mov	r9, r1
 800a0ae:	4692      	mov	sl, r2
 800a0b0:	e9cd 3503 	strd	r3, r5, [sp, #12]
 800a0b4:	9506      	str	r5, [sp, #24]
 800a0b6:	f7ff fe81 	bl	8009dbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a0ba:	465a      	mov	r2, fp
 800a0bc:	4603      	mov	r3, r0
 800a0be:	4651      	mov	r1, sl
 800a0c0:	e9cd 8600 	strd	r8, r6, [sp]
 800a0c4:	4620      	mov	r0, r4
 800a0c6:	f7ff ff57 	bl	8009f78 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a0ca:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 800a0ce:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a0d2:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800a0d6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a0da:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 800a0de:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800a0e2:	6823      	ldr	r3, [r4, #0]
 800a0e4:	9007      	str	r0, [sp, #28]
 800a0e6:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 800a0ea:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a0ee:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 800a0f2:	f8cd 9018 	str.w	r9, [sp, #24]
 800a0f6:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 800a0fa:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 800a0fe:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 800a102:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a104:	9d03      	ldr	r5, [sp, #12]
 800a106:	4620      	mov	r0, r4
 800a108:	4798      	blx	r3
 800a10a:	4228      	tst	r0, r5
 800a10c:	d106      	bne.n	800a11c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 800a10e:	4b07      	ldr	r3, [pc, #28]	; (800a12c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 800a110:	4a07      	ldr	r2, [pc, #28]	; (800a130 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 800a112:	4808      	ldr	r0, [pc, #32]	; (800a134 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 800a114:	f44f 710c 	mov.w	r1, #560	; 0x230
 800a118:	f011 fdec 	bl	801bcf4 <__assert_func>
 800a11c:	6860      	ldr	r0, [r4, #4]
 800a11e:	6803      	ldr	r3, [r0, #0]
 800a120:	a903      	add	r1, sp, #12
 800a122:	685b      	ldr	r3, [r3, #4]
 800a124:	4798      	blx	r3
 800a126:	b00d      	add	sp, #52	; 0x34
 800a128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a12c:	0801e41b 	.word	0x0801e41b
 800a130:	0801e942 	.word	0x0801e942
 800a134:	0801e58e 	.word	0x0801e58e

0800a138 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a138:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a13c:	461f      	mov	r7, r3
 800a13e:	4b0b      	ldr	r3, [pc, #44]	; (800a16c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a140:	460d      	mov	r5, r1
 800a142:	f8b3 8000 	ldrh.w	r8, [r3]
 800a146:	4616      	mov	r6, r2
 800a148:	4604      	mov	r4, r0
 800a14a:	f7ff fc77 	bl	8009a3c <_ZN8touchgfx3HAL3lcdEv>
 800a14e:	6803      	ldr	r3, [r0, #0]
 800a150:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a152:	4798      	blx	r3
 800a154:	463b      	mov	r3, r7
 800a156:	e9cd 8000 	strd	r8, r0, [sp]
 800a15a:	4632      	mov	r2, r6
 800a15c:	4629      	mov	r1, r5
 800a15e:	4620      	mov	r0, r4
 800a160:	f7ff ff0a 	bl	8009f78 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a164:	b002      	add	sp, #8
 800a166:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a16a:	bf00      	nop
 800a16c:	2000a5fa 	.word	0x2000a5fa

0800a170 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a170:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a174:	b08b      	sub	sp, #44	; 0x2c
 800a176:	4699      	mov	r9, r3
 800a178:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 800a17c:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 800a180:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800a184:	f8ad 7018 	strh.w	r7, [sp, #24]
 800a188:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a18c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a190:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a194:	2500      	movs	r5, #0
 800a196:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a19a:	f88d 3020 	strb.w	r3, [sp, #32]
 800a19e:	4690      	mov	r8, r2
 800a1a0:	4604      	mov	r4, r0
 800a1a2:	9504      	str	r5, [sp, #16]
 800a1a4:	f8ad 601a 	strh.w	r6, [sp, #26]
 800a1a8:	f7ff fe08 	bl	8009dbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a1ac:	464a      	mov	r2, r9
 800a1ae:	4603      	mov	r3, r0
 800a1b0:	4641      	mov	r1, r8
 800a1b2:	4620      	mov	r0, r4
 800a1b4:	f7ff ffc0 	bl	800a138 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a1b8:	4b19      	ldr	r3, [pc, #100]	; (800a220 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 800a1ba:	9005      	str	r0, [sp, #20]
 800a1bc:	881b      	ldrh	r3, [r3, #0]
 800a1be:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a1c2:	f7ff fc3b 	bl	8009a3c <_ZN8touchgfx3HAL3lcdEv>
 800a1c6:	6803      	ldr	r3, [r0, #0]
 800a1c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1ca:	4798      	blx	r3
 800a1cc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800a1d0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800a1d4:	b107      	cbz	r7, 800a1d8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 800a1d6:	b936      	cbnz	r6, 800a1e6 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 800a1d8:	4b12      	ldr	r3, [pc, #72]	; (800a224 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 800a1da:	4a13      	ldr	r2, [pc, #76]	; (800a228 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800a1dc:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 800a1e0:	4812      	ldr	r0, [pc, #72]	; (800a22c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 800a1e2:	f011 fd87 	bl	801bcf4 <__assert_func>
 800a1e6:	6823      	ldr	r3, [r4, #0]
 800a1e8:	9e01      	ldr	r6, [sp, #4]
 800a1ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a1ec:	4620      	mov	r0, r4
 800a1ee:	4798      	blx	r3
 800a1f0:	4230      	tst	r0, r6
 800a1f2:	d104      	bne.n	800a1fe <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 800a1f4:	4b0e      	ldr	r3, [pc, #56]	; (800a230 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 800a1f6:	4a0c      	ldr	r2, [pc, #48]	; (800a228 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 800a1f8:	f240 11e7 	movw	r1, #487	; 0x1e7
 800a1fc:	e7f0      	b.n	800a1e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 800a1fe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a200:	9304      	str	r3, [sp, #16]
 800a202:	6860      	ldr	r0, [r4, #4]
 800a204:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 800a208:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800a20c:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800a210:	6803      	ldr	r3, [r0, #0]
 800a212:	a901      	add	r1, sp, #4
 800a214:	685b      	ldr	r3, [r3, #4]
 800a216:	4798      	blx	r3
 800a218:	b00b      	add	sp, #44	; 0x2c
 800a21a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a21e:	bf00      	nop
 800a220:	2000a5fa 	.word	0x2000a5fa
 800a224:	0801e3e3 	.word	0x0801e3e3
 800a228:	0801e717 	.word	0x0801e717
 800a22c:	0801e58e 	.word	0x0801e58e
 800a230:	0801e41b 	.word	0x0801e41b

0800a234 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a234:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a236:	b08d      	sub	sp, #52	; 0x34
 800a238:	466b      	mov	r3, sp
 800a23a:	e883 0006 	stmia.w	r3, {r1, r2}
 800a23e:	4b22      	ldr	r3, [pc, #136]	; (800a2c8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a240:	781b      	ldrb	r3, [r3, #0]
 800a242:	4604      	mov	r4, r0
 800a244:	b933      	cbnz	r3, 800a254 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a246:	4b21      	ldr	r3, [pc, #132]	; (800a2cc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a248:	4a21      	ldr	r2, [pc, #132]	; (800a2d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a24a:	4822      	ldr	r0, [pc, #136]	; (800a2d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 800a24c:	f240 2141 	movw	r1, #577	; 0x241
 800a250:	f011 fd50 	bl	801bcf4 <__assert_func>
 800a254:	2300      	movs	r3, #0
 800a256:	9306      	str	r3, [sp, #24]
 800a258:	6803      	ldr	r3, [r0, #0]
 800a25a:	f8bd 6000 	ldrh.w	r6, [sp]
 800a25e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a260:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a264:	2501      	movs	r5, #1
 800a266:	9503      	str	r5, [sp, #12]
 800a268:	4798      	blx	r3
 800a26a:	463a      	mov	r2, r7
 800a26c:	4631      	mov	r1, r6
 800a26e:	4603      	mov	r3, r0
 800a270:	4620      	mov	r0, r4
 800a272:	f7ff ff61 	bl	800a138 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a276:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a278:	9307      	str	r3, [sp, #28]
 800a27a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a27e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a282:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a286:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a28a:	4b13      	ldr	r3, [pc, #76]	; (800a2d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 800a28c:	9004      	str	r0, [sp, #16]
 800a28e:	881b      	ldrh	r3, [r3, #0]
 800a290:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a294:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a298:	f7ff fbd0 	bl	8009a3c <_ZN8touchgfx3HAL3lcdEv>
 800a29c:	6803      	ldr	r3, [r0, #0]
 800a29e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a2a0:	4798      	blx	r3
 800a2a2:	23ff      	movs	r3, #255	; 0xff
 800a2a4:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a2a8:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a2ac:	6860      	ldr	r0, [r4, #4]
 800a2ae:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a2b2:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a2b6:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a2ba:	6803      	ldr	r3, [r0, #0]
 800a2bc:	a903      	add	r1, sp, #12
 800a2be:	685b      	ldr	r3, [r3, #4]
 800a2c0:	4798      	blx	r3
 800a2c2:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a2c4:	b00d      	add	sp, #52	; 0x34
 800a2c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a2c8:	2000a5ff 	.word	0x2000a5ff
 800a2cc:	0801e4e2 	.word	0x0801e4e2
 800a2d0:	0801e7c1 	.word	0x0801e7c1
 800a2d4:	0801e58e 	.word	0x0801e58e
 800a2d8:	2000a5fa 	.word	0x2000a5fa

0800a2dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a2dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2e0:	b08c      	sub	sp, #48	; 0x30
 800a2e2:	461e      	mov	r6, r3
 800a2e4:	466d      	mov	r5, sp
 800a2e6:	2300      	movs	r3, #0
 800a2e8:	e885 0006 	stmia.w	r5, {r1, r2}
 800a2ec:	9306      	str	r3, [sp, #24]
 800a2ee:	6803      	ldr	r3, [r0, #0]
 800a2f0:	f8bd 7000 	ldrh.w	r7, [sp]
 800a2f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a2f6:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a2fa:	2501      	movs	r5, #1
 800a2fc:	9503      	str	r5, [sp, #12]
 800a2fe:	4604      	mov	r4, r0
 800a300:	4798      	blx	r3
 800a302:	4642      	mov	r2, r8
 800a304:	4639      	mov	r1, r7
 800a306:	4603      	mov	r3, r0
 800a308:	4620      	mov	r0, r4
 800a30a:	f7ff ff15 	bl	800a138 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a30e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a312:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a316:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a31a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a31e:	4b11      	ldr	r3, [pc, #68]	; (800a364 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a320:	9004      	str	r0, [sp, #16]
 800a322:	881b      	ldrh	r3, [r3, #0]
 800a324:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a328:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a32a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a32e:	9607      	str	r6, [sp, #28]
 800a330:	f7ff fb84 	bl	8009a3c <_ZN8touchgfx3HAL3lcdEv>
 800a334:	6803      	ldr	r3, [r0, #0]
 800a336:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a338:	4798      	blx	r3
 800a33a:	23ff      	movs	r3, #255	; 0xff
 800a33c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a340:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a344:	6860      	ldr	r0, [r4, #4]
 800a346:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a34a:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a34e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a352:	6803      	ldr	r3, [r0, #0]
 800a354:	a903      	add	r1, sp, #12
 800a356:	685b      	ldr	r3, [r3, #4]
 800a358:	4798      	blx	r3
 800a35a:	4630      	mov	r0, r6
 800a35c:	b00c      	add	sp, #48	; 0x30
 800a35e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a362:	bf00      	nop
 800a364:	2000a5fa 	.word	0x2000a5fa

0800a368 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800a368:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a36a:	b085      	sub	sp, #20
 800a36c:	ac02      	add	r4, sp, #8
 800a36e:	e884 0006 	stmia.w	r4, {r1, r2}
 800a372:	4605      	mov	r5, r0
 800a374:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800a378:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800a37c:	f7ff fd1e 	bl	8009dbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a380:	463a      	mov	r2, r7
 800a382:	4603      	mov	r3, r0
 800a384:	4631      	mov	r1, r6
 800a386:	4628      	mov	r0, r5
 800a388:	f7ff fed6 	bl	800a138 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a38c:	4a05      	ldr	r2, [pc, #20]	; (800a3a4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800a38e:	682b      	ldr	r3, [r5, #0]
 800a390:	8812      	ldrh	r2, [r2, #0]
 800a392:	9200      	str	r2, [sp, #0]
 800a394:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800a396:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a39a:	4603      	mov	r3, r0
 800a39c:	4628      	mov	r0, r5
 800a39e:	47b0      	blx	r6
 800a3a0:	b005      	add	sp, #20
 800a3a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a3a4:	2000a5fa 	.word	0x2000a5fa

0800a3a8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a3a8:	b570      	push	{r4, r5, r6, lr}
 800a3aa:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a3ae:	4604      	mov	r4, r0
 800a3b0:	b19b      	cbz	r3, 800a3da <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a3b2:	2002      	movs	r0, #2
 800a3b4:	f7f6 fa20 	bl	80007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a3b8:	2300      	movs	r3, #0
 800a3ba:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a3be:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a3c2:	6823      	ldr	r3, [r4, #0]
 800a3c4:	4620      	mov	r0, r4
 800a3c6:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800a3ca:	f7ff fcf7 	bl	8009dbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a3ce:	462b      	mov	r3, r5
 800a3d0:	4601      	mov	r1, r0
 800a3d2:	4620      	mov	r0, r4
 800a3d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a3d8:	4718      	bx	r3
 800a3da:	bd70      	pop	{r4, r5, r6, pc}

0800a3dc <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800a3dc:	b570      	push	{r4, r5, r6, lr}
 800a3de:	4605      	mov	r5, r0
 800a3e0:	460c      	mov	r4, r1
 800a3e2:	2003      	movs	r0, #3
 800a3e4:	b149      	cbz	r1, 800a3fa <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800a3e6:	f7f6 f9bb 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a3ea:	6928      	ldr	r0, [r5, #16]
 800a3ec:	b168      	cbz	r0, 800a40a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a3ee:	6803      	ldr	r3, [r0, #0]
 800a3f0:	695b      	ldr	r3, [r3, #20]
 800a3f2:	2101      	movs	r1, #1
 800a3f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a3f8:	4718      	bx	r3
 800a3fa:	f7f6 f9d7 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a3fe:	6928      	ldr	r0, [r5, #16]
 800a400:	b118      	cbz	r0, 800a40a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a402:	6803      	ldr	r3, [r0, #0]
 800a404:	4621      	mov	r1, r4
 800a406:	695b      	ldr	r3, [r3, #20]
 800a408:	e7f4      	b.n	800a3f4 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800a40a:	bd70      	pop	{r4, r5, r6, pc}

0800a40c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a40c:	b538      	push	{r3, r4, r5, lr}
 800a40e:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800a412:	428b      	cmp	r3, r1
 800a414:	4604      	mov	r4, r0
 800a416:	460d      	mov	r5, r1
 800a418:	d006      	beq.n	800a428 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a41a:	6803      	ldr	r3, [r0, #0]
 800a41c:	b929      	cbnz	r1, 800a42a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a41e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800a422:	4798      	blx	r3
 800a424:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800a428:	bd38      	pop	{r3, r4, r5, pc}
 800a42a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800a42e:	e7f8      	b.n	800a422 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a430 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a430:	b510      	push	{r4, lr}
 800a432:	4b0d      	ldr	r3, [pc, #52]	; (800a468 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a434:	781b      	ldrb	r3, [r3, #0]
 800a436:	4604      	mov	r4, r0
 800a438:	b95b      	cbnz	r3, 800a452 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a43a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a43e:	2b02      	cmp	r3, #2
 800a440:	d007      	beq.n	800a452 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a442:	6840      	ldr	r0, [r0, #4]
 800a444:	f000 f93c 	bl	800a6c0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a448:	b118      	cbz	r0, 800a452 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a44a:	6862      	ldr	r2, [r4, #4]
 800a44c:	7a53      	ldrb	r3, [r2, #9]
 800a44e:	2b00      	cmp	r3, #0
 800a450:	d0fc      	beq.n	800a44c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a452:	f7f6 fc6d 	bl	8000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a456:	4620      	mov	r0, r4
 800a458:	2100      	movs	r1, #0
 800a45a:	f7ff ffd7 	bl	800a40c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a45e:	4620      	mov	r0, r4
 800a460:	f7ff fcac 	bl	8009dbc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a464:	bd10      	pop	{r4, pc}
 800a466:	bf00      	nop
 800a468:	2000a5fe 	.word	0x2000a5fe

0800a46c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a46c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a470:	1a13      	subs	r3, r2, r0
 800a472:	4258      	negs	r0, r3
 800a474:	4158      	adcs	r0, r3
 800a476:	4770      	bx	lr

0800a478 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a478:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a47c:	1a9b      	subs	r3, r3, r2
 800a47e:	2b00      	cmp	r3, #0
 800a480:	bfdc      	itt	le
 800a482:	6882      	ldrle	r2, [r0, #8]
 800a484:	189b      	addle	r3, r3, r2
 800a486:	2b01      	cmp	r3, #1
 800a488:	bfcc      	ite	gt
 800a48a:	2000      	movgt	r0, #0
 800a48c:	2001      	movle	r0, #1
 800a48e:	4770      	bx	lr

0800a490 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a490:	6902      	ldr	r2, [r0, #16]
 800a492:	6843      	ldr	r3, [r0, #4]
 800a494:	2024      	movs	r0, #36	; 0x24
 800a496:	fb00 3002 	mla	r0, r0, r2, r3
 800a49a:	4770      	bx	lr

0800a49c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a49c:	6803      	ldr	r3, [r0, #0]
 800a49e:	691b      	ldr	r3, [r3, #16]
 800a4a0:	4718      	bx	r3

0800a4a2 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a4a2:	4770      	bx	lr

0800a4a4 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a4a4:	4770      	bx	lr

0800a4a6 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a4a6:	4770      	bx	lr

0800a4a8 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a4a8:	b570      	push	{r4, r5, r6, lr}
 800a4aa:	2301      	movs	r3, #1
 800a4ac:	7203      	strb	r3, [r0, #8]
 800a4ae:	4604      	mov	r4, r0
 800a4b0:	6840      	ldr	r0, [r0, #4]
 800a4b2:	6803      	ldr	r3, [r0, #0]
 800a4b4:	699b      	ldr	r3, [r3, #24]
 800a4b6:	4798      	blx	r3
 800a4b8:	6803      	ldr	r3, [r0, #0]
 800a4ba:	2b40      	cmp	r3, #64	; 0x40
 800a4bc:	4605      	mov	r5, r0
 800a4be:	d039      	beq.n	800a534 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4c0:	d815      	bhi.n	800a4ee <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a4c2:	2b04      	cmp	r3, #4
 800a4c4:	d022      	beq.n	800a50c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a4c6:	d808      	bhi.n	800a4da <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a4c8:	2b01      	cmp	r3, #1
 800a4ca:	d033      	beq.n	800a534 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4cc:	2b02      	cmp	r3, #2
 800a4ce:	d108      	bne.n	800a4e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800a4d0:	6823      	ldr	r3, [r4, #0]
 800a4d2:	4620      	mov	r0, r4
 800a4d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a4d6:	4798      	blx	r3
 800a4d8:	e025      	b.n	800a526 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800a4da:	2b08      	cmp	r3, #8
 800a4dc:	d01e      	beq.n	800a51c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800a4de:	2b20      	cmp	r3, #32
 800a4e0:	d028      	beq.n	800a534 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4e2:	4b17      	ldr	r3, [pc, #92]	; (800a540 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800a4e4:	4a17      	ldr	r2, [pc, #92]	; (800a544 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800a4e6:	4818      	ldr	r0, [pc, #96]	; (800a548 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800a4e8:	2188      	movs	r1, #136	; 0x88
 800a4ea:	f011 fc03 	bl	801bcf4 <__assert_func>
 800a4ee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a4f2:	d01f      	beq.n	800a534 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4f4:	d804      	bhi.n	800a500 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800a4f6:	2b80      	cmp	r3, #128	; 0x80
 800a4f8:	d01c      	beq.n	800a534 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a4fa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a4fe:	e7ef      	b.n	800a4e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800a500:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a504:	d016      	beq.n	800a534 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a506:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a50a:	e7e0      	b.n	800a4ce <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a50c:	6823      	ldr	r3, [r4, #0]
 800a50e:	7f01      	ldrb	r1, [r0, #28]
 800a510:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a512:	4620      	mov	r0, r4
 800a514:	4798      	blx	r3
 800a516:	6823      	ldr	r3, [r4, #0]
 800a518:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a51a:	e006      	b.n	800a52a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a51c:	6823      	ldr	r3, [r4, #0]
 800a51e:	7f01      	ldrb	r1, [r0, #28]
 800a520:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a522:	4620      	mov	r0, r4
 800a524:	4798      	blx	r3
 800a526:	6823      	ldr	r3, [r4, #0]
 800a528:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a52a:	4629      	mov	r1, r5
 800a52c:	4620      	mov	r0, r4
 800a52e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a532:	4718      	bx	r3
 800a534:	6823      	ldr	r3, [r4, #0]
 800a536:	4620      	mov	r0, r4
 800a538:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a53a:	4798      	blx	r3
 800a53c:	e7eb      	b.n	800a516 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a53e:	bf00      	nop
 800a540:	0801ea26 	.word	0x0801ea26
 800a544:	0801eae8 	.word	0x0801eae8
 800a548:	0801ea4b 	.word	0x0801ea4b

0800a54c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a54c:	b570      	push	{r4, r5, r6, lr}
 800a54e:	4604      	mov	r4, r0
 800a550:	460e      	mov	r6, r1
 800a552:	6860      	ldr	r0, [r4, #4]
 800a554:	6803      	ldr	r3, [r0, #0]
 800a556:	685b      	ldr	r3, [r3, #4]
 800a558:	4798      	blx	r3
 800a55a:	2800      	cmp	r0, #0
 800a55c:	d1f9      	bne.n	800a552 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a55e:	4d0d      	ldr	r5, [pc, #52]	; (800a594 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a560:	6828      	ldr	r0, [r5, #0]
 800a562:	6803      	ldr	r3, [r0, #0]
 800a564:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a566:	4798      	blx	r3
 800a568:	f7f6 fbf0 	bl	8000d4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a56c:	6828      	ldr	r0, [r5, #0]
 800a56e:	2101      	movs	r1, #1
 800a570:	f7ff ff4c 	bl	800a40c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a574:	6860      	ldr	r0, [r4, #4]
 800a576:	6803      	ldr	r3, [r0, #0]
 800a578:	4631      	mov	r1, r6
 800a57a:	689b      	ldr	r3, [r3, #8]
 800a57c:	4798      	blx	r3
 800a57e:	6823      	ldr	r3, [r4, #0]
 800a580:	4620      	mov	r0, r4
 800a582:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a584:	4798      	blx	r3
 800a586:	6828      	ldr	r0, [r5, #0]
 800a588:	6803      	ldr	r3, [r0, #0]
 800a58a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a58e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a590:	4718      	bx	r3
 800a592:	bf00      	nop
 800a594:	2000a600 	.word	0x2000a600

0800a598 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a598:	b508      	push	{r3, lr}
 800a59a:	f7f6 fbc9 	bl	8000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a59e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a5a2:	f7f6 bbcd 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a5a6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a5a6:	b510      	push	{r4, lr}
 800a5a8:	2114      	movs	r1, #20
 800a5aa:	4604      	mov	r4, r0
 800a5ac:	f011 fb74 	bl	801bc98 <_ZdlPvj>
 800a5b0:	4620      	mov	r0, r4
 800a5b2:	bd10      	pop	{r4, pc}

0800a5b4 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a5b4:	b510      	push	{r4, lr}
 800a5b6:	4604      	mov	r4, r0
 800a5b8:	6840      	ldr	r0, [r0, #4]
 800a5ba:	6803      	ldr	r3, [r0, #0]
 800a5bc:	681b      	ldr	r3, [r3, #0]
 800a5be:	4798      	blx	r3
 800a5c0:	b948      	cbnz	r0, 800a5d6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a5c2:	7a63      	ldrb	r3, [r4, #9]
 800a5c4:	b13b      	cbz	r3, 800a5d6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a5c6:	7a23      	ldrb	r3, [r4, #8]
 800a5c8:	b92b      	cbnz	r3, 800a5d6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a5ca:	6823      	ldr	r3, [r4, #0]
 800a5cc:	4620      	mov	r0, r4
 800a5ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a5d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a5d4:	4718      	bx	r3
 800a5d6:	bd10      	pop	{r4, pc}

0800a5d8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a5d8:	b510      	push	{r4, lr}
 800a5da:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a5de:	1ad2      	subs	r2, r2, r3
 800a5e0:	2a00      	cmp	r2, #0
 800a5e2:	bfdc      	itt	le
 800a5e4:	6884      	ldrle	r4, [r0, #8]
 800a5e6:	1912      	addle	r2, r2, r4
 800a5e8:	2a01      	cmp	r2, #1
 800a5ea:	dd17      	ble.n	800a61c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 800a5ec:	6842      	ldr	r2, [r0, #4]
 800a5ee:	2424      	movs	r4, #36	; 0x24
 800a5f0:	fb04 2303 	mla	r3, r4, r3, r2
 800a5f4:	f101 0220 	add.w	r2, r1, #32
 800a5f8:	f851 4b04 	ldr.w	r4, [r1], #4
 800a5fc:	f843 4b04 	str.w	r4, [r3], #4
 800a600:	4291      	cmp	r1, r2
 800a602:	d1f9      	bne.n	800a5f8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a604:	780a      	ldrb	r2, [r1, #0]
 800a606:	701a      	strb	r2, [r3, #0]
 800a608:	68c3      	ldr	r3, [r0, #12]
 800a60a:	6882      	ldr	r2, [r0, #8]
 800a60c:	f3bf 8f5b 	dmb	ish
 800a610:	3301      	adds	r3, #1
 800a612:	429a      	cmp	r2, r3
 800a614:	bfd8      	it	le
 800a616:	1a9b      	suble	r3, r3, r2
 800a618:	60c3      	str	r3, [r0, #12]
 800a61a:	bd10      	pop	{r4, pc}
 800a61c:	4b02      	ldr	r3, [pc, #8]	; (800a628 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800a61e:	4a03      	ldr	r2, [pc, #12]	; (800a62c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a620:	4803      	ldr	r0, [pc, #12]	; (800a630 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a622:	2136      	movs	r1, #54	; 0x36
 800a624:	f011 fb66 	bl	801bcf4 <__assert_func>
 800a628:	0801ea71 	.word	0x0801ea71
 800a62c:	0801eb18 	.word	0x0801eb18
 800a630:	0801ea4b 	.word	0x0801ea4b

0800a634 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a634:	b510      	push	{r4, lr}
 800a636:	6803      	ldr	r3, [r0, #0]
 800a638:	681b      	ldr	r3, [r3, #0]
 800a63a:	4604      	mov	r4, r0
 800a63c:	4798      	blx	r3
 800a63e:	b128      	cbz	r0, 800a64c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a640:	4b07      	ldr	r3, [pc, #28]	; (800a660 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a642:	4a08      	ldr	r2, [pc, #32]	; (800a664 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a644:	4808      	ldr	r0, [pc, #32]	; (800a668 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a646:	213c      	movs	r1, #60	; 0x3c
 800a648:	f011 fb54 	bl	801bcf4 <__assert_func>
 800a64c:	6923      	ldr	r3, [r4, #16]
 800a64e:	68a2      	ldr	r2, [r4, #8]
 800a650:	f3bf 8f5b 	dmb	ish
 800a654:	3301      	adds	r3, #1
 800a656:	429a      	cmp	r2, r3
 800a658:	bfd8      	it	le
 800a65a:	1a9b      	suble	r3, r3, r2
 800a65c:	6123      	str	r3, [r4, #16]
 800a65e:	bd10      	pop	{r4, pc}
 800a660:	0801ea94 	.word	0x0801ea94
 800a664:	0801eb66 	.word	0x0801eb66
 800a668:	0801ea4b 	.word	0x0801ea4b

0800a66c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a66c:	b570      	push	{r4, r5, r6, lr}
 800a66e:	4604      	mov	r4, r0
 800a670:	6840      	ldr	r0, [r0, #4]
 800a672:	6803      	ldr	r3, [r0, #0]
 800a674:	681b      	ldr	r3, [r3, #0]
 800a676:	4798      	blx	r3
 800a678:	4605      	mov	r5, r0
 800a67a:	b930      	cbnz	r0, 800a68a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a67c:	7a23      	ldrb	r3, [r4, #8]
 800a67e:	b123      	cbz	r3, 800a68a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a680:	6860      	ldr	r0, [r4, #4]
 800a682:	6803      	ldr	r3, [r0, #0]
 800a684:	695b      	ldr	r3, [r3, #20]
 800a686:	4798      	blx	r3
 800a688:	7225      	strb	r5, [r4, #8]
 800a68a:	6860      	ldr	r0, [r4, #4]
 800a68c:	6803      	ldr	r3, [r0, #0]
 800a68e:	681b      	ldr	r3, [r3, #0]
 800a690:	4798      	blx	r3
 800a692:	b928      	cbnz	r0, 800a6a0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a694:	6823      	ldr	r3, [r4, #0]
 800a696:	4620      	mov	r0, r4
 800a698:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a69a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a69e:	4718      	bx	r3
 800a6a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6a4:	f7f6 bb5a 	b.w	8000d5c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a6a8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a6a8:	b510      	push	{r4, lr}
 800a6aa:	4c04      	ldr	r4, [pc, #16]	; (800a6bc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a6ac:	6082      	str	r2, [r0, #8]
 800a6ae:	2200      	movs	r2, #0
 800a6b0:	e9c0 4100 	strd	r4, r1, [r0]
 800a6b4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a6b8:	bd10      	pop	{r4, pc}
 800a6ba:	bf00      	nop
 800a6bc:	0801eacc 	.word	0x0801eacc

0800a6c0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a6c0:	6840      	ldr	r0, [r0, #4]
 800a6c2:	6803      	ldr	r3, [r0, #0]
 800a6c4:	681b      	ldr	r3, [r3, #0]
 800a6c6:	4718      	bx	r3

0800a6c8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800a6c8:	2000      	movs	r0, #0
 800a6ca:	4770      	bx	lr

0800a6cc <_ZN8touchgfx8TextAreaD1Ev>:
 800a6cc:	4770      	bx	lr
	...

0800a6d0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a6d0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a6d4:	4b1a      	ldr	r3, [pc, #104]	; (800a740 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a6d6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a6d8:	881b      	ldrh	r3, [r3, #0]
 800a6da:	428b      	cmp	r3, r1
 800a6dc:	4604      	mov	r4, r0
 800a6de:	d92d      	bls.n	800a73c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>
 800a6e0:	4b18      	ldr	r3, [pc, #96]	; (800a744 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800a6e2:	681b      	ldr	r3, [r3, #0]
 800a6e4:	b92b      	cbnz	r3, 800a6f2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x22>
 800a6e6:	4b18      	ldr	r3, [pc, #96]	; (800a748 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800a6e8:	4a18      	ldr	r2, [pc, #96]	; (800a74c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800a6ea:	4819      	ldr	r0, [pc, #100]	; (800a750 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800a6ec:	21ae      	movs	r1, #174	; 0xae
 800a6ee:	f011 fb01 	bl	801bcf4 <__assert_func>
 800a6f2:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a6f6:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a6fa:	4b16      	ldr	r3, [pc, #88]	; (800a754 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x84>)
 800a6fc:	7855      	ldrb	r5, [r2, #1]
 800a6fe:	681b      	ldr	r3, [r3, #0]
 800a700:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800a704:	6833      	ldr	r3, [r6, #0]
 800a706:	69df      	ldr	r7, [r3, #28]
 800a708:	4b13      	ldr	r3, [pc, #76]	; (800a758 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x88>)
 800a70a:	6818      	ldr	r0, [r3, #0]
 800a70c:	f7f8 faf6 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
 800a710:	6823      	ldr	r3, [r4, #0]
 800a712:	4680      	mov	r8, r0
 800a714:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a716:	4620      	mov	r0, r4
 800a718:	4798      	blx	r3
 800a71a:	6823      	ldr	r3, [r4, #0]
 800a71c:	4681      	mov	r9, r0
 800a71e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a722:	4620      	mov	r0, r4
 800a724:	4798      	blx	r3
 800a726:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800a72a:	9000      	str	r0, [sp, #0]
 800a72c:	464b      	mov	r3, r9
 800a72e:	4642      	mov	r2, r8
 800a730:	4629      	mov	r1, r5
 800a732:	4630      	mov	r0, r6
 800a734:	47b8      	blx	r7
 800a736:	b003      	add	sp, #12
 800a738:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a73c:	2000      	movs	r0, #0
 800a73e:	e7fa      	b.n	800a736 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x66>
 800a740:	2000a654 	.word	0x2000a654
 800a744:	2000a650 	.word	0x2000a650
 800a748:	0801da28 	.word	0x0801da28
 800a74c:	0801ec28 	.word	0x0801ec28
 800a750:	0801dab6 	.word	0x0801dab6
 800a754:	2000a658 	.word	0x2000a658
 800a758:	2000a65c 	.word	0x2000a65c

0800a75c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a75c:	b40e      	push	{r1, r2, r3}
 800a75e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a762:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 800a854 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf8>
 800a766:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a768:	f8b9 3000 	ldrh.w	r3, [r9]
 800a76c:	4293      	cmp	r3, r2
 800a76e:	b09c      	sub	sp, #112	; 0x70
 800a770:	4604      	mov	r4, r0
 800a772:	d965      	bls.n	800a840 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>
 800a774:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800a858 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xfc>
 800a778:	ab26      	add	r3, sp, #152	; 0x98
 800a77a:	9302      	str	r3, [sp, #8]
 800a77c:	f8da 3000 	ldr.w	r3, [sl]
 800a780:	b92b      	cbnz	r3, 800a78e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x32>
 800a782:	4b30      	ldr	r3, [pc, #192]	; (800a844 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800a784:	4a30      	ldr	r2, [pc, #192]	; (800a848 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800a786:	21ae      	movs	r1, #174	; 0xae
 800a788:	4830      	ldr	r0, [pc, #192]	; (800a84c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>)
 800a78a:	f011 fab3 	bl	801bcf4 <__assert_func>
 800a78e:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800a85c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x100>
 800a792:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a796:	f8d8 3000 	ldr.w	r3, [r8]
 800a79a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800a79e:	682b      	ldr	r3, [r5, #0]
 800a7a0:	4628      	mov	r0, r5
 800a7a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a7a4:	4798      	blx	r3
 800a7a6:	4606      	mov	r6, r0
 800a7a8:	b207      	sxth	r7, r0
 800a7aa:	a803      	add	r0, sp, #12
 800a7ac:	f004 f892 	bl	800e8d4 <_ZN8touchgfx12TextProviderC1Ev>
 800a7b0:	682b      	ldr	r3, [r5, #0]
 800a7b2:	4628      	mov	r0, r5
 800a7b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a7b6:	4798      	blx	r3
 800a7b8:	682b      	ldr	r3, [r5, #0]
 800a7ba:	4683      	mov	fp, r0
 800a7bc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a7be:	4628      	mov	r0, r5
 800a7c0:	4798      	blx	r3
 800a7c2:	465b      	mov	r3, fp
 800a7c4:	9000      	str	r0, [sp, #0]
 800a7c6:	9925      	ldr	r1, [sp, #148]	; 0x94
 800a7c8:	9a02      	ldr	r2, [sp, #8]
 800a7ca:	a803      	add	r0, sp, #12
 800a7cc:	f004 f8ee 	bl	800e9ac <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a7d0:	f8da 3000 	ldr.w	r3, [sl]
 800a7d4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800a7d8:	2b00      	cmp	r3, #0
 800a7da:	d0d2      	beq.n	800a782 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x26>
 800a7dc:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a7de:	f8b9 0000 	ldrh.w	r0, [r9]
 800a7e2:	4290      	cmp	r0, r2
 800a7e4:	d926      	bls.n	800a834 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800a7e6:	eb03 0542 	add.w	r5, r3, r2, lsl #1
 800a7ea:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a7ee:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800a7f2:	786a      	ldrb	r2, [r5, #1]
 800a7f4:	8925      	ldrh	r5, [r4, #8]
 800a7f6:	f8d8 3000 	ldr.w	r3, [r8]
 800a7fa:	eba5 050c 	sub.w	r5, r5, ip
 800a7fe:	b22d      	sxth	r5, r5
 800a800:	9500      	str	r5, [sp, #0]
 800a802:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a806:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a80a:	a803      	add	r0, sp, #12
 800a80c:	f001 ff7f 	bl	800c70e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a810:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800a814:	18b9      	adds	r1, r7, r2
 800a816:	2900      	cmp	r1, #0
 800a818:	b203      	sxth	r3, r0
 800a81a:	dd0f      	ble.n	800a83c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>
 800a81c:	3b01      	subs	r3, #1
 800a81e:	fb13 f302 	smulbb	r3, r3, r2
 800a822:	fb16 3300 	smlabb	r3, r6, r0, r3
 800a826:	b21f      	sxth	r7, r3
 800a828:	4638      	mov	r0, r7
 800a82a:	b01c      	add	sp, #112	; 0x70
 800a82c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a830:	b003      	add	sp, #12
 800a832:	4770      	bx	lr
 800a834:	4b06      	ldr	r3, [pc, #24]	; (800a850 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>)
 800a836:	4a04      	ldr	r2, [pc, #16]	; (800a848 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>)
 800a838:	21af      	movs	r1, #175	; 0xaf
 800a83a:	e7a5      	b.n	800a788 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2c>
 800a83c:	2b00      	cmp	r3, #0
 800a83e:	dcf3      	bgt.n	800a828 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800a840:	2700      	movs	r7, #0
 800a842:	e7f1      	b.n	800a828 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800a844:	0801da28 	.word	0x0801da28
 800a848:	0801ec28 	.word	0x0801ec28
 800a84c:	0801dab6 	.word	0x0801dab6
 800a850:	0801dadf 	.word	0x0801dadf
 800a854:	2000a654 	.word	0x2000a654
 800a858:	2000a650 	.word	0x2000a650
 800a85c:	2000a658 	.word	0x2000a658

0800a860 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800a860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a864:	4b6d      	ldr	r3, [pc, #436]	; (800aa1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1bc>)
 800a866:	460c      	mov	r4, r1
 800a868:	881a      	ldrh	r2, [r3, #0]
 800a86a:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800a86c:	b0b9      	sub	sp, #228	; 0xe4
 800a86e:	428a      	cmp	r2, r1
 800a870:	4681      	mov	r9, r0
 800a872:	9302      	str	r3, [sp, #8]
 800a874:	d809      	bhi.n	800a88a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2a>
 800a876:	2300      	movs	r3, #0
 800a878:	f04f 32ff 	mov.w	r2, #4294967295
 800a87c:	e9c0 3200 	strd	r3, r2, [r0]
 800a880:	6083      	str	r3, [r0, #8]
 800a882:	4648      	mov	r0, r9
 800a884:	b039      	add	sp, #228	; 0xe4
 800a886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a88a:	4a65      	ldr	r2, [pc, #404]	; (800aa20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c0>)
 800a88c:	6813      	ldr	r3, [r2, #0]
 800a88e:	4692      	mov	sl, r2
 800a890:	b92b      	cbnz	r3, 800a89e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x3e>
 800a892:	4b64      	ldr	r3, [pc, #400]	; (800aa24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c4>)
 800a894:	4a64      	ldr	r2, [pc, #400]	; (800aa28 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 800a896:	21ae      	movs	r1, #174	; 0xae
 800a898:	4864      	ldr	r0, [pc, #400]	; (800aa2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1cc>)
 800a89a:	f011 fa2b 	bl	801bcf4 <__assert_func>
 800a89e:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800a8a2:	4b63      	ldr	r3, [pc, #396]	; (800aa30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d0>)
 800a8a4:	f8df b190 	ldr.w	fp, [pc, #400]	; 800aa38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d8>
 800a8a8:	681b      	ldr	r3, [r3, #0]
 800a8aa:	f8db 0000 	ldr.w	r0, [fp]
 800a8ae:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800a8b2:	f7f8 fa23 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
 800a8b6:	682b      	ldr	r3, [r5, #0]
 800a8b8:	4680      	mov	r8, r0
 800a8ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a8bc:	4628      	mov	r0, r5
 800a8be:	4798      	blx	r3
 800a8c0:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800a8c2:	f894 7039 	ldrb.w	r7, [r4, #57]	; 0x39
 800a8c6:	f8cd b00c 	str.w	fp, [sp, #12]
 800a8ca:	4406      	add	r6, r0
 800a8cc:	b2b6      	uxth	r6, r6
 800a8ce:	2f00      	cmp	r7, #0
 800a8d0:	f040 80b4 	bne.w	800aa3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1dc>
 800a8d4:	a806      	add	r0, sp, #24
 800a8d6:	f003 fffd 	bl	800e8d4 <_ZN8touchgfx12TextProviderC1Ev>
 800a8da:	682b      	ldr	r3, [r5, #0]
 800a8dc:	4628      	mov	r0, r5
 800a8de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a8e0:	4798      	blx	r3
 800a8e2:	682b      	ldr	r3, [r5, #0]
 800a8e4:	4683      	mov	fp, r0
 800a8e6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a8e8:	4628      	mov	r0, r5
 800a8ea:	4798      	blx	r3
 800a8ec:	6822      	ldr	r2, [r4, #0]
 800a8ee:	9005      	str	r0, [sp, #20]
 800a8f0:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800a8f2:	4620      	mov	r0, r4
 800a8f4:	4790      	blx	r2
 800a8f6:	6821      	ldr	r1, [r4, #0]
 800a8f8:	9004      	str	r0, [sp, #16]
 800a8fa:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800a8fe:	4620      	mov	r0, r4
 800a900:	4788      	blx	r1
 800a902:	9a04      	ldr	r2, [sp, #16]
 800a904:	9001      	str	r0, [sp, #4]
 800a906:	9200      	str	r2, [sp, #0]
 800a908:	4641      	mov	r1, r8
 800a90a:	9b05      	ldr	r3, [sp, #20]
 800a90c:	465a      	mov	r2, fp
 800a90e:	a806      	add	r0, sp, #24
 800a910:	f004 f861 	bl	800e9d6 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800a914:	46b8      	mov	r8, r7
 800a916:	f8da 3000 	ldr.w	r3, [sl]
 800a91a:	2b00      	cmp	r3, #0
 800a91c:	d0b9      	beq.n	800a892 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800a91e:	9902      	ldr	r1, [sp, #8]
 800a920:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a922:	8809      	ldrh	r1, [r1, #0]
 800a924:	4291      	cmp	r1, r2
 800a926:	d803      	bhi.n	800a930 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xd0>
 800a928:	4b42      	ldr	r3, [pc, #264]	; (800aa34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1d4>)
 800a92a:	4a3f      	ldr	r2, [pc, #252]	; (800aa28 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1c8>)
 800a92c:	21af      	movs	r1, #175	; 0xaf
 800a92e:	e7b3      	b.n	800a898 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x38>
 800a930:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800a934:	4629      	mov	r1, r5
 800a936:	785b      	ldrb	r3, [r3, #1]
 800a938:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800a93c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a940:	a806      	add	r0, sp, #24
 800a942:	f001 fc39 	bl	800c1b8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800a946:	4580      	cmp	r8, r0
 800a948:	bfb8      	it	lt
 800a94a:	fa0f f880 	sxthlt.w	r8, r0
 800a94e:	3701      	adds	r7, #1
 800a950:	a806      	add	r0, sp, #24
 800a952:	b2bf      	uxth	r7, r7
 800a954:	f003 ffe6 	bl	800e924 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800a958:	2800      	cmp	r0, #0
 800a95a:	d0dc      	beq.n	800a916 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb6>
 800a95c:	fb16 f607 	smulbb	r6, r6, r7
 800a960:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800a962:	1bf6      	subs	r6, r6, r7
 800a964:	b2b6      	uxth	r6, r6
 800a966:	fa0f fb86 	sxth.w	fp, r6
 800a96a:	f1bb 0f00 	cmp.w	fp, #0
 800a96e:	dd06      	ble.n	800a97e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x11e>
 800a970:	682b      	ldr	r3, [r5, #0]
 800a972:	4628      	mov	r0, r5
 800a974:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a976:	4798      	blx	r3
 800a978:	4430      	add	r0, r6
 800a97a:	fa0f fb80 	sxth.w	fp, r0
 800a97e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a982:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a986:	6823      	ldr	r3, [r4, #0]
 800a988:	bf08      	it	eq
 800a98a:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800a98e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a990:	bf18      	it	ne
 800a992:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800a996:	4620      	mov	r0, r4
 800a998:	4798      	blx	r3
 800a99a:	2801      	cmp	r0, #1
 800a99c:	fa1f f288 	uxth.w	r2, r8
 800a9a0:	f000 80f7 	beq.w	800ab92 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800a9a4:	2802      	cmp	r0, #2
 800a9a6:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800a9aa:	f000 80f9 	beq.w	800aba0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x340>
 800a9ae:	7a29      	ldrb	r1, [r5, #8]
 800a9b0:	7a68      	ldrb	r0, [r5, #9]
 800a9b2:	b21b      	sxth	r3, r3
 800a9b4:	1a5b      	subs	r3, r3, r1
 800a9b6:	4401      	add	r1, r0
 800a9b8:	440a      	add	r2, r1
 800a9ba:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800a9be:	b29b      	uxth	r3, r3
 800a9c0:	b292      	uxth	r2, r2
 800a9c2:	2902      	cmp	r1, #2
 800a9c4:	b21e      	sxth	r6, r3
 800a9c6:	b217      	sxth	r7, r2
 800a9c8:	f000 80ed 	beq.w	800aba6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x346>
 800a9cc:	2903      	cmp	r1, #3
 800a9ce:	f000 80f3 	beq.w	800abb8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x358>
 800a9d2:	2901      	cmp	r1, #1
 800a9d4:	f040 80f9 	bne.w	800abca <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x36a>
 800a9d8:	8923      	ldrh	r3, [r4, #8]
 800a9da:	463a      	mov	r2, r7
 800a9dc:	eba3 030b 	sub.w	r3, r3, fp
 800a9e0:	465f      	mov	r7, fp
 800a9e2:	4635      	mov	r5, r6
 800a9e4:	4693      	mov	fp, r2
 800a9e6:	b21e      	sxth	r6, r3
 800a9e8:	f8da 3000 	ldr.w	r3, [sl]
 800a9ec:	2b00      	cmp	r3, #0
 800a9ee:	f43f af50 	beq.w	800a892 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800a9f2:	9b02      	ldr	r3, [sp, #8]
 800a9f4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a9f6:	881b      	ldrh	r3, [r3, #0]
 800a9f8:	428b      	cmp	r3, r1
 800a9fa:	d995      	bls.n	800a928 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800a9fc:	9b03      	ldr	r3, [sp, #12]
 800a9fe:	6818      	ldr	r0, [r3, #0]
 800aa00:	f7f8 f97c 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
 800aa04:	f8a9 6000 	strh.w	r6, [r9]
 800aa08:	f8a9 5002 	strh.w	r5, [r9, #2]
 800aa0c:	f8a9 7004 	strh.w	r7, [r9, #4]
 800aa10:	f8a9 b006 	strh.w	fp, [r9, #6]
 800aa14:	f8c9 0008 	str.w	r0, [r9, #8]
 800aa18:	e733      	b.n	800a882 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x22>
 800aa1a:	bf00      	nop
 800aa1c:	2000a654 	.word	0x2000a654
 800aa20:	2000a650 	.word	0x2000a650
 800aa24:	0801da28 	.word	0x0801da28
 800aa28:	0801ec28 	.word	0x0801ec28
 800aa2c:	0801dab6 	.word	0x0801dab6
 800aa30:	2000a658 	.word	0x2000a658
 800aa34:	0801dadf 	.word	0x0801dadf
 800aa38:	2000a65c 	.word	0x2000a65c
 800aa3c:	af1f      	add	r7, sp, #124	; 0x7c
 800aa3e:	4638      	mov	r0, r7
 800aa40:	f003 ff48 	bl	800e8d4 <_ZN8touchgfx12TextProviderC1Ev>
 800aa44:	682b      	ldr	r3, [r5, #0]
 800aa46:	4628      	mov	r0, r5
 800aa48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800aa4a:	4798      	blx	r3
 800aa4c:	682b      	ldr	r3, [r5, #0]
 800aa4e:	4683      	mov	fp, r0
 800aa50:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800aa52:	4628      	mov	r0, r5
 800aa54:	4798      	blx	r3
 800aa56:	6822      	ldr	r2, [r4, #0]
 800aa58:	9005      	str	r0, [sp, #20]
 800aa5a:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800aa5c:	4620      	mov	r0, r4
 800aa5e:	4790      	blx	r2
 800aa60:	6821      	ldr	r1, [r4, #0]
 800aa62:	9004      	str	r0, [sp, #16]
 800aa64:	f8d1 1080 	ldr.w	r1, [r1, #128]	; 0x80
 800aa68:	4620      	mov	r0, r4
 800aa6a:	4788      	blx	r1
 800aa6c:	9a04      	ldr	r2, [sp, #16]
 800aa6e:	9001      	str	r0, [sp, #4]
 800aa70:	9200      	str	r2, [sp, #0]
 800aa72:	9b05      	ldr	r3, [sp, #20]
 800aa74:	465a      	mov	r2, fp
 800aa76:	4641      	mov	r1, r8
 800aa78:	4638      	mov	r0, r7
 800aa7a:	f003 ffac 	bl	800e9d6 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800aa7e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800aa82:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800aa86:	f9b4 b008 	ldrsh.w	fp, [r4, #8]
 800aa8a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800aa8e:	bf0a      	itet	eq
 800aa90:	465b      	moveq	r3, fp
 800aa92:	4613      	movne	r3, r2
 800aa94:	4693      	moveq	fp, r2
 800aa96:	f894 2037 	ldrb.w	r2, [r4, #55]	; 0x37
 800aa9a:	1a9b      	subs	r3, r3, r2
 800aa9c:	b29a      	uxth	r2, r3
 800aa9e:	f8da 3000 	ldr.w	r3, [sl]
 800aaa2:	2b00      	cmp	r3, #0
 800aaa4:	f43f aef5 	beq.w	800a892 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x32>
 800aaa8:	9802      	ldr	r0, [sp, #8]
 800aaaa:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800aaac:	8800      	ldrh	r0, [r0, #0]
 800aaae:	4288      	cmp	r0, r1
 800aab0:	f67f af3a 	bls.w	800a928 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xc8>
 800aab4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800aab8:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800aabc:	7859      	ldrb	r1, [r3, #1]
 800aabe:	9707      	str	r7, [sp, #28]
 800aac0:	2300      	movs	r3, #0
 800aac2:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800aac6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800aaca:	f88d 1020 	strb.w	r1, [sp, #32]
 800aace:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800aad2:	9509      	str	r5, [sp, #36]	; 0x24
 800aad4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800aad8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800aadc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800aae0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800aae4:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800aae8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800aaec:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800aaf0:	f88d 3036 	strb.w	r3, [sp, #54]	; 0x36
 800aaf4:	b350      	cbz	r0, 800ab4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800aaf6:	682b      	ldr	r3, [r5, #0]
 800aaf8:	4628      	mov	r0, r5
 800aafa:	695b      	ldr	r3, [r3, #20]
 800aafc:	4798      	blx	r3
 800aafe:	4680      	mov	r8, r0
 800ab00:	b320      	cbz	r0, 800ab4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800ab02:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ab04:	6803      	ldr	r3, [r0, #0]
 800ab06:	4641      	mov	r1, r8
 800ab08:	68db      	ldr	r3, [r3, #12]
 800ab0a:	4798      	blx	r3
 800ab0c:	4607      	mov	r7, r0
 800ab0e:	b1e8      	cbz	r0, 800ab4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800ab10:	7b43      	ldrb	r3, [r0, #13]
 800ab12:	7a82      	ldrb	r2, [r0, #10]
 800ab14:	005b      	lsls	r3, r3, #1
 800ab16:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ab1a:	4313      	orrs	r3, r2
 800ab1c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800ab20:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800ab24:	2b04      	cmp	r3, #4
 800ab26:	d111      	bne.n	800ab4c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ec>
 800ab28:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ab2a:	6803      	ldr	r3, [r0, #0]
 800ab2c:	463a      	mov	r2, r7
 800ab2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ab30:	4641      	mov	r1, r8
 800ab32:	4798      	blx	r3
 800ab34:	7b7b      	ldrb	r3, [r7, #13]
 800ab36:	005b      	lsls	r3, r3, #1
 800ab38:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ab3c:	7abb      	ldrb	r3, [r7, #10]
 800ab3e:	4313      	orrs	r3, r2
 800ab40:	4418      	add	r0, r3
 800ab42:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 800ab46:	4418      	add	r0, r3
 800ab48:	f8ad 0034 	strh.w	r0, [sp, #52]	; 0x34
 800ab4c:	b233      	sxth	r3, r6
 800ab4e:	2700      	movs	r7, #0
 800ab50:	005a      	lsls	r2, r3, #1
 800ab52:	46b8      	mov	r8, r7
 800ab54:	455a      	cmp	r2, fp
 800ab56:	bfd4      	ite	le
 800ab58:	2100      	movle	r1, #0
 800ab5a:	2101      	movgt	r1, #1
 800ab5c:	a806      	add	r0, sp, #24
 800ab5e:	9305      	str	r3, [sp, #20]
 800ab60:	9204      	str	r2, [sp, #16]
 800ab62:	f001 fd05 	bl	800c570 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ab66:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800ab6a:	4588      	cmp	r8, r1
 800ab6c:	bfb8      	it	lt
 800ab6e:	fa0f f881 	sxthlt.w	r8, r1
 800ab72:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 800ab76:	3701      	adds	r7, #1
 800ab78:	ebab 0b06 	sub.w	fp, fp, r6
 800ab7c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800ab80:	b2bf      	uxth	r7, r7
 800ab82:	fa0f fb8b 	sxth.w	fp, fp
 800ab86:	2900      	cmp	r1, #0
 800ab88:	f43f aee8 	beq.w	800a95c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800ab8c:	455b      	cmp	r3, fp
 800ab8e:	dbe1      	blt.n	800ab54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>
 800ab90:	e6e4      	b.n	800a95c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
 800ab92:	eba6 0308 	sub.w	r3, r6, r8
 800ab96:	f04f 0802 	mov.w	r8, #2
 800ab9a:	fb93 f3f8 	sdiv	r3, r3, r8
 800ab9e:	e706      	b.n	800a9ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800aba0:	4413      	add	r3, r2
 800aba2:	1af3      	subs	r3, r6, r3
 800aba4:	e703      	b.n	800a9ae <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
 800aba6:	8926      	ldrh	r6, [r4, #8]
 800aba8:	8965      	ldrh	r5, [r4, #10]
 800abaa:	1ab2      	subs	r2, r6, r2
 800abac:	1ad3      	subs	r3, r2, r3
 800abae:	eba5 050b 	sub.w	r5, r5, fp
 800abb2:	b21e      	sxth	r6, r3
 800abb4:	b22d      	sxth	r5, r5
 800abb6:	e717      	b.n	800a9e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800abb8:	8965      	ldrh	r5, [r4, #10]
 800abba:	1aaa      	subs	r2, r5, r2
 800abbc:	1ad3      	subs	r3, r2, r3
 800abbe:	b21d      	sxth	r5, r3
 800abc0:	463b      	mov	r3, r7
 800abc2:	2600      	movs	r6, #0
 800abc4:	465f      	mov	r7, fp
 800abc6:	469b      	mov	fp, r3
 800abc8:	e70e      	b.n	800a9e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800abca:	2500      	movs	r5, #0
 800abcc:	e70c      	b.n	800a9e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x188>
 800abce:	bf00      	nop

0800abd0 <_ZN8touchgfx8TextAreaD0Ev>:
 800abd0:	b510      	push	{r4, lr}
 800abd2:	2148      	movs	r1, #72	; 0x48
 800abd4:	4604      	mov	r4, r0
 800abd6:	f011 f85f 	bl	801bc98 <_ZdlPvj>
 800abda:	4620      	mov	r0, r4
 800abdc:	bd10      	pop	{r4, pc}
	...

0800abe0 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800abe0:	b508      	push	{r3, lr}
 800abe2:	4b0b      	ldr	r3, [pc, #44]	; (800ac10 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x30>)
 800abe4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800abe6:	881b      	ldrh	r3, [r3, #0]
 800abe8:	4293      	cmp	r3, r2
 800abea:	d90e      	bls.n	800ac0a <_ZNK8touchgfx8TextArea12getAlignmentEv+0x2a>
 800abec:	4b09      	ldr	r3, [pc, #36]	; (800ac14 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x34>)
 800abee:	681b      	ldr	r3, [r3, #0]
 800abf0:	b92b      	cbnz	r3, 800abfe <_ZNK8touchgfx8TextArea12getAlignmentEv+0x1e>
 800abf2:	4b09      	ldr	r3, [pc, #36]	; (800ac18 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x38>)
 800abf4:	4a09      	ldr	r2, [pc, #36]	; (800ac1c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x3c>)
 800abf6:	480a      	ldr	r0, [pc, #40]	; (800ac20 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x40>)
 800abf8:	21ae      	movs	r1, #174	; 0xae
 800abfa:	f011 f87b 	bl	801bcf4 <__assert_func>
 800abfe:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ac02:	7858      	ldrb	r0, [r3, #1]
 800ac04:	f000 0003 	and.w	r0, r0, #3
 800ac08:	bd08      	pop	{r3, pc}
 800ac0a:	2000      	movs	r0, #0
 800ac0c:	e7fc      	b.n	800ac08 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x28>
 800ac0e:	bf00      	nop
 800ac10:	2000a654 	.word	0x2000a654
 800ac14:	2000a650 	.word	0x2000a650
 800ac18:	0801da28 	.word	0x0801da28
 800ac1c:	0801ec28 	.word	0x0801ec28
 800ac20:	0801dab6 	.word	0x0801dab6

0800ac24 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800ac24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac28:	4b15      	ldr	r3, [pc, #84]	; (800ac80 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800ac2a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ac2c:	881b      	ldrh	r3, [r3, #0]
 800ac2e:	428b      	cmp	r3, r1
 800ac30:	4604      	mov	r4, r0
 800ac32:	d921      	bls.n	800ac78 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x54>
 800ac34:	6803      	ldr	r3, [r0, #0]
 800ac36:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800ac38:	4b12      	ldr	r3, [pc, #72]	; (800ac84 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x60>)
 800ac3a:	681b      	ldr	r3, [r3, #0]
 800ac3c:	b92b      	cbnz	r3, 800ac4a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x26>
 800ac3e:	4b12      	ldr	r3, [pc, #72]	; (800ac88 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x64>)
 800ac40:	4a12      	ldr	r2, [pc, #72]	; (800ac8c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x68>)
 800ac42:	4813      	ldr	r0, [pc, #76]	; (800ac90 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x6c>)
 800ac44:	21ae      	movs	r1, #174	; 0xae
 800ac46:	f011 f855 	bl	801bcf4 <__assert_func>
 800ac4a:	4b12      	ldr	r3, [pc, #72]	; (800ac94 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x70>)
 800ac4c:	6818      	ldr	r0, [r3, #0]
 800ac4e:	f7f8 f855 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
 800ac52:	6823      	ldr	r3, [r4, #0]
 800ac54:	4606      	mov	r6, r0
 800ac56:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ac58:	4620      	mov	r0, r4
 800ac5a:	4798      	blx	r3
 800ac5c:	6823      	ldr	r3, [r4, #0]
 800ac5e:	4607      	mov	r7, r0
 800ac60:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ac64:	4620      	mov	r0, r4
 800ac66:	4798      	blx	r3
 800ac68:	463a      	mov	r2, r7
 800ac6a:	4603      	mov	r3, r0
 800ac6c:	4631      	mov	r1, r6
 800ac6e:	4620      	mov	r0, r4
 800ac70:	46ac      	mov	ip, r5
 800ac72:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ac76:	4760      	bx	ip
 800ac78:	2000      	movs	r0, #0
 800ac7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ac7e:	bf00      	nop
 800ac80:	2000a654 	.word	0x2000a654
 800ac84:	2000a650 	.word	0x2000a650
 800ac88:	0801da28 	.word	0x0801da28
 800ac8c:	0801ec28 	.word	0x0801ec28
 800ac90:	0801dab6 	.word	0x0801dab6
 800ac94:	2000a65c 	.word	0x2000a65c

0800ac98 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800ac98:	b513      	push	{r0, r1, r4, lr}
 800ac9a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800ac9e:	4604      	mov	r4, r0
 800aca0:	b343      	cbz	r3, 800acf4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800aca2:	4b1b      	ldr	r3, [pc, #108]	; (800ad10 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x78>)
 800aca4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800aca6:	881b      	ldrh	r3, [r3, #0]
 800aca8:	428b      	cmp	r3, r1
 800acaa:	d923      	bls.n	800acf4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800acac:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800acb0:	2b00      	cmp	r3, #0
 800acb2:	dd1f      	ble.n	800acf4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800acb4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800acb8:	2b00      	cmp	r3, #0
 800acba:	dd1b      	ble.n	800acf4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800acbc:	4b15      	ldr	r3, [pc, #84]	; (800ad14 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x7c>)
 800acbe:	681b      	ldr	r3, [r3, #0]
 800acc0:	b92b      	cbnz	r3, 800acce <_ZNK8touchgfx8TextArea17invalidateContentEv+0x36>
 800acc2:	4b15      	ldr	r3, [pc, #84]	; (800ad18 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x80>)
 800acc4:	4a15      	ldr	r2, [pc, #84]	; (800ad1c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x84>)
 800acc6:	4816      	ldr	r0, [pc, #88]	; (800ad20 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x88>)
 800acc8:	21ae      	movs	r1, #174	; 0xae
 800acca:	f011 f813 	bl	801bcf4 <__assert_func>
 800acce:	4b15      	ldr	r3, [pc, #84]	; (800ad24 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x8c>)
 800acd0:	6818      	ldr	r0, [r3, #0]
 800acd2:	f7f8 f813 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
 800acd6:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800acda:	6822      	ldr	r2, [r4, #0]
 800acdc:	2b00      	cmp	r3, #0
 800acde:	db06      	blt.n	800acee <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 800ace0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800ace4:	2b00      	cmp	r3, #0
 800ace6:	db02      	blt.n	800acee <_ZNK8touchgfx8TextArea17invalidateContentEv+0x56>
 800ace8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800acea:	4298      	cmp	r0, r3
 800acec:	d004      	beq.n	800acf8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x60>
 800acee:	6953      	ldr	r3, [r2, #20]
 800acf0:	4620      	mov	r0, r4
 800acf2:	4798      	blx	r3
 800acf4:	b002      	add	sp, #8
 800acf6:	bd10      	pop	{r4, pc}
 800acf8:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800acfc:	c903      	ldmia	r1, {r0, r1}
 800acfe:	466b      	mov	r3, sp
 800ad00:	e883 0003 	stmia.w	r3, {r0, r1}
 800ad04:	6912      	ldr	r2, [r2, #16]
 800ad06:	4619      	mov	r1, r3
 800ad08:	4620      	mov	r0, r4
 800ad0a:	4790      	blx	r2
 800ad0c:	e7f2      	b.n	800acf4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x5c>
 800ad0e:	bf00      	nop
 800ad10:	2000a654 	.word	0x2000a654
 800ad14:	2000a650 	.word	0x2000a650
 800ad18:	0801da28 	.word	0x0801da28
 800ad1c:	0801ec28 	.word	0x0801ec28
 800ad20:	0801dab6 	.word	0x0801dab6
 800ad24:	2000a65c 	.word	0x2000a65c

0800ad28 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800ad28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ad2c:	4d56      	ldr	r5, [pc, #344]	; (800ae88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x160>)
 800ad2e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ad30:	882b      	ldrh	r3, [r5, #0]
 800ad32:	4293      	cmp	r3, r2
 800ad34:	b08e      	sub	sp, #56	; 0x38
 800ad36:	4604      	mov	r4, r0
 800ad38:	f240 80a3 	bls.w	800ae82 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800ad3c:	6808      	ldr	r0, [r1, #0]
 800ad3e:	4e53      	ldr	r6, [pc, #332]	; (800ae8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x164>)
 800ad40:	6849      	ldr	r1, [r1, #4]
 800ad42:	ab05      	add	r3, sp, #20
 800ad44:	c303      	stmia	r3!, {r0, r1}
 800ad46:	6833      	ldr	r3, [r6, #0]
 800ad48:	b92b      	cbnz	r3, 800ad56 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800ad4a:	4b51      	ldr	r3, [pc, #324]	; (800ae90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x168>)
 800ad4c:	4a51      	ldr	r2, [pc, #324]	; (800ae94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 800ad4e:	21ae      	movs	r1, #174	; 0xae
 800ad50:	4851      	ldr	r0, [pc, #324]	; (800ae98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x170>)
 800ad52:	f010 ffcf 	bl	801bcf4 <__assert_func>
 800ad56:	4f51      	ldr	r7, [pc, #324]	; (800ae9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x174>)
 800ad58:	4611      	mov	r1, r2
 800ad5a:	6838      	ldr	r0, [r7, #0]
 800ad5c:	f7f7 ffce 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
 800ad60:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800ad64:	2b00      	cmp	r3, #0
 800ad66:	db11      	blt.n	800ad8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800ad68:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800ad6c:	2b00      	cmp	r3, #0
 800ad6e:	db0d      	blt.n	800ad8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800ad70:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ad72:	4298      	cmp	r0, r3
 800ad74:	d10a      	bne.n	800ad8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x64>
 800ad76:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800ad7a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ad7e:	ab09      	add	r3, sp, #36	; 0x24
 800ad80:	e883 0003 	stmia.w	r3, {r0, r1}
 800ad84:	4619      	mov	r1, r3
 800ad86:	a805      	add	r0, sp, #20
 800ad88:	f7fe fb8a 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 800ad8c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ad90:	2b00      	cmp	r3, #0
 800ad92:	dd76      	ble.n	800ae82 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800ad94:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800ad98:	2b00      	cmp	r3, #0
 800ad9a:	dd72      	ble.n	800ae82 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800ad9c:	6833      	ldr	r3, [r6, #0]
 800ad9e:	2b00      	cmp	r3, #0
 800ada0:	d0d3      	beq.n	800ad4a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800ada2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ada4:	8829      	ldrh	r1, [r5, #0]
 800ada6:	4291      	cmp	r1, r2
 800ada8:	d803      	bhi.n	800adb2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x8a>
 800adaa:	4b3d      	ldr	r3, [pc, #244]	; (800aea0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x178>)
 800adac:	4a39      	ldr	r2, [pc, #228]	; (800ae94 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x16c>)
 800adae:	21af      	movs	r1, #175	; 0xaf
 800adb0:	e7ce      	b.n	800ad50 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x28>
 800adb2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800adb6:	4b3b      	ldr	r3, [pc, #236]	; (800aea4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x17c>)
 800adb8:	681b      	ldr	r3, [r3, #0]
 800adba:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800adbe:	f1b8 0f00 	cmp.w	r8, #0
 800adc2:	d05e      	beq.n	800ae82 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x15a>
 800adc4:	6823      	ldr	r3, [r4, #0]
 800adc6:	f894 9036 	ldrb.w	r9, [r4, #54]	; 0x36
 800adca:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800adcc:	4620      	mov	r0, r4
 800adce:	4798      	blx	r3
 800add0:	6833      	ldr	r3, [r6, #0]
 800add2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800add6:	f894 c038 	ldrb.w	ip, [r4, #56]	; 0x38
 800adda:	2b00      	cmp	r3, #0
 800addc:	d0b5      	beq.n	800ad4a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800adde:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ade0:	f8b5 e000 	ldrh.w	lr, [r5]
 800ade4:	4596      	cmp	lr, r2
 800ade6:	d9e0      	bls.n	800adaa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800ade8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800adec:	f894 a037 	ldrb.w	sl, [r4, #55]	; 0x37
 800adf0:	785b      	ldrb	r3, [r3, #1]
 800adf2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800adf4:	f894 e039 	ldrb.w	lr, [r4, #57]	; 0x39
 800adf8:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800adfc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ae00:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800ae04:	4b28      	ldr	r3, [pc, #160]	; (800aea8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x180>)
 800ae06:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800ae0a:	681b      	ldr	r3, [r3, #0]
 800ae0c:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800ae10:	920b      	str	r2, [sp, #44]	; 0x2c
 800ae12:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800ae16:	f88d 9032 	strb.w	r9, [sp, #50]	; 0x32
 800ae1a:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800ae1e:	f88d e034 	strb.w	lr, [sp, #52]	; 0x34
 800ae22:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ae26:	b122      	cbz	r2, 800ae32 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10a>
 800ae28:	f8d3 804c 	ldr.w	r8, [r3, #76]	; 0x4c
 800ae2c:	f1b8 0f00 	cmp.w	r8, #0
 800ae30:	d101      	bne.n	800ae36 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x10e>
 800ae32:	f8d3 8008 	ldr.w	r8, [r3, #8]
 800ae36:	f10d 091c 	add.w	r9, sp, #28
 800ae3a:	4621      	mov	r1, r4
 800ae3c:	4648      	mov	r0, r9
 800ae3e:	f003 f991 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ae42:	6833      	ldr	r3, [r6, #0]
 800ae44:	2b00      	cmp	r3, #0
 800ae46:	d080      	beq.n	800ad4a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x22>
 800ae48:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ae4a:	882b      	ldrh	r3, [r5, #0]
 800ae4c:	428b      	cmp	r3, r1
 800ae4e:	d9ac      	bls.n	800adaa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800ae50:	6838      	ldr	r0, [r7, #0]
 800ae52:	f7f7 ff53 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
 800ae56:	6823      	ldr	r3, [r4, #0]
 800ae58:	4605      	mov	r5, r0
 800ae5a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ae5c:	4620      	mov	r0, r4
 800ae5e:	4798      	blx	r3
 800ae60:	6823      	ldr	r3, [r4, #0]
 800ae62:	4606      	mov	r6, r0
 800ae64:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ae68:	4620      	mov	r0, r4
 800ae6a:	4798      	blx	r3
 800ae6c:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800ae70:	ab09      	add	r3, sp, #36	; 0x24
 800ae72:	9300      	str	r3, [sp, #0]
 800ae74:	9501      	str	r5, [sp, #4]
 800ae76:	ab05      	add	r3, sp, #20
 800ae78:	e899 0006 	ldmia.w	r9, {r1, r2}
 800ae7c:	4640      	mov	r0, r8
 800ae7e:	f7f7 feef 	bl	8002c60 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ae82:	b00e      	add	sp, #56	; 0x38
 800ae84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ae88:	2000a654 	.word	0x2000a654
 800ae8c:	2000a650 	.word	0x2000a650
 800ae90:	0801da28 	.word	0x0801da28
 800ae94:	0801ec28 	.word	0x0801ec28
 800ae98:	0801dab6 	.word	0x0801dab6
 800ae9c:	2000a65c 	.word	0x2000a65c
 800aea0:	0801dadf 	.word	0x0801dadf
 800aea4:	2000a658 	.word	0x2000a658
 800aea8:	2000a600 	.word	0x2000a600

0800aeac <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800aeac:	b570      	push	{r4, r5, r6, lr}
 800aeae:	6803      	ldr	r3, [r0, #0]
 800aeb0:	4604      	mov	r4, r0
 800aeb2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aeb4:	4615      	mov	r5, r2
 800aeb6:	4798      	blx	r3
 800aeb8:	6823      	ldr	r3, [r4, #0]
 800aeba:	4629      	mov	r1, r5
 800aebc:	4620      	mov	r0, r4
 800aebe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aec0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aec4:	4718      	bx	r3
	...

0800aec8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800aec8:	b538      	push	{r3, r4, r5, lr}
 800aeca:	4b0e      	ldr	r3, [pc, #56]	; (800af04 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800aecc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800aece:	881b      	ldrh	r3, [r3, #0]
 800aed0:	429a      	cmp	r2, r3
 800aed2:	4604      	mov	r4, r0
 800aed4:	d214      	bcs.n	800af00 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800aed6:	6803      	ldr	r3, [r0, #0]
 800aed8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800aeda:	4798      	blx	r3
 800aedc:	6823      	ldr	r3, [r4, #0]
 800aede:	4605      	mov	r5, r0
 800aee0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800aee2:	4620      	mov	r0, r4
 800aee4:	4798      	blx	r3
 800aee6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800aeea:	b22d      	sxth	r5, r5
 800aeec:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800aef0:	4601      	mov	r1, r0
 800aef2:	bf06      	itte	eq
 800aef4:	4602      	moveq	r2, r0
 800aef6:	4629      	moveq	r1, r5
 800aef8:	462a      	movne	r2, r5
 800aefa:	4620      	mov	r0, r4
 800aefc:	f7ff ffd6 	bl	800aeac <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800af00:	bd38      	pop	{r3, r4, r5, pc}
 800af02:	bf00      	nop
 800af04:	2000a654 	.word	0x2000a654

0800af08 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800af08:	b530      	push	{r4, r5, lr}
 800af0a:	888b      	ldrh	r3, [r1, #4]
 800af0c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800af0e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800af12:	b085      	sub	sp, #20
 800af14:	4604      	mov	r4, r0
 800af16:	b923      	cbnz	r3, 800af22 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800af18:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800af1c:	b90b      	cbnz	r3, 800af22 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800af1e:	f7ff ffd3 	bl	800aec8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800af22:	6823      	ldr	r3, [r4, #0]
 800af24:	466d      	mov	r5, sp
 800af26:	4621      	mov	r1, r4
 800af28:	4628      	mov	r0, r5
 800af2a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800af2e:	4798      	blx	r3
 800af30:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800af34:	343c      	adds	r4, #60	; 0x3c
 800af36:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800af3a:	b005      	add	sp, #20
 800af3c:	bd30      	pop	{r4, r5, pc}

0800af3e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800af3e:	2300      	movs	r3, #0
 800af40:	8083      	strh	r3, [r0, #4]
 800af42:	80c3      	strh	r3, [r0, #6]
 800af44:	8003      	strh	r3, [r0, #0]
 800af46:	8043      	strh	r3, [r0, #2]
 800af48:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800af4c:	2bff      	cmp	r3, #255	; 0xff
 800af4e:	bf01      	itttt	eq
 800af50:	890b      	ldrheq	r3, [r1, #8]
 800af52:	8083      	strheq	r3, [r0, #4]
 800af54:	894b      	ldrheq	r3, [r1, #10]
 800af56:	80c3      	strheq	r3, [r0, #6]
 800af58:	4770      	bx	lr
	...

0800af5c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800af5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800af5e:	4604      	mov	r4, r0
 800af60:	6808      	ldr	r0, [r1, #0]
 800af62:	6849      	ldr	r1, [r1, #4]
 800af64:	466b      	mov	r3, sp
 800af66:	c303      	stmia	r3!, {r0, r1}
 800af68:	6823      	ldr	r3, [r4, #0]
 800af6a:	4669      	mov	r1, sp
 800af6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af6e:	4620      	mov	r0, r4
 800af70:	4798      	blx	r3
 800af72:	4b08      	ldr	r3, [pc, #32]	; (800af94 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800af74:	681b      	ldr	r3, [r3, #0]
 800af76:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800af7a:	b10a      	cbz	r2, 800af80 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800af7c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800af7e:	b900      	cbnz	r0, 800af82 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800af80:	6898      	ldr	r0, [r3, #8]
 800af82:	6803      	ldr	r3, [r0, #0]
 800af84:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800af86:	6a1d      	ldr	r5, [r3, #32]
 800af88:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800af8c:	4669      	mov	r1, sp
 800af8e:	47a8      	blx	r5
 800af90:	b003      	add	sp, #12
 800af92:	bd30      	pop	{r4, r5, pc}
 800af94:	2000a600 	.word	0x2000a600

0800af98 <_ZN8touchgfx3BoxD1Ev>:
 800af98:	4770      	bx	lr

0800af9a <_ZN8touchgfx3BoxD0Ev>:
 800af9a:	b510      	push	{r4, lr}
 800af9c:	212c      	movs	r1, #44	; 0x2c
 800af9e:	4604      	mov	r4, r0
 800afa0:	f010 fe7a 	bl	801bc98 <_ZdlPvj>
 800afa4:	4620      	mov	r0, r4
 800afa6:	bd10      	pop	{r4, pc}

0800afa8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800afa8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800afac:	b12a      	cbz	r2, 800afba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800afae:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800afb2:	b112      	cbz	r2, 800afba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800afb4:	6803      	ldr	r3, [r0, #0]
 800afb6:	695b      	ldr	r3, [r3, #20]
 800afb8:	4718      	bx	r3
 800afba:	4770      	bx	lr

0800afbc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800afbc:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800afc0:	4770      	bx	lr

0800afc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800afc2:	b570      	push	{r4, r5, r6, lr}
 800afc4:	880b      	ldrh	r3, [r1, #0]
 800afc6:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800afc8:	4605      	mov	r5, r0
 800afca:	8813      	ldrh	r3, [r2, #0]
 800afcc:	f825 3f30 	strh.w	r3, [r5, #48]!
 800afd0:	4604      	mov	r4, r0
 800afd2:	4628      	mov	r0, r5
 800afd4:	f004 fd2c 	bl	800fa30 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800afd8:	4606      	mov	r6, r0
 800afda:	4628      	mov	r0, r5
 800afdc:	f004 fd6c 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800afe0:	6823      	ldr	r3, [r4, #0]
 800afe2:	4605      	mov	r5, r0
 800afe4:	b231      	sxth	r1, r6
 800afe6:	4620      	mov	r0, r4
 800afe8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800afea:	4798      	blx	r3
 800afec:	6823      	ldr	r3, [r4, #0]
 800afee:	b229      	sxth	r1, r5
 800aff0:	4620      	mov	r0, r4
 800aff2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aff4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aff8:	4718      	bx	r3

0800affa <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800affa:	b510      	push	{r4, lr}
 800affc:	4604      	mov	r4, r0
 800affe:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800b000:	b150      	cbz	r0, 800b018 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b002:	6803      	ldr	r3, [r0, #0]
 800b004:	68db      	ldr	r3, [r3, #12]
 800b006:	4798      	blx	r3
 800b008:	b130      	cbz	r0, 800b018 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800b00a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b00c:	6803      	ldr	r3, [r0, #0]
 800b00e:	4621      	mov	r1, r4
 800b010:	689b      	ldr	r3, [r3, #8]
 800b012:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b016:	4718      	bx	r3
 800b018:	bd10      	pop	{r4, pc}

0800b01a <_ZNK8touchgfx6Button12getSolidRectEv>:
 800b01a:	b510      	push	{r4, lr}
 800b01c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800b020:	2bff      	cmp	r3, #255	; 0xff
 800b022:	4604      	mov	r4, r0
 800b024:	d006      	beq.n	800b034 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800b026:	2300      	movs	r3, #0
 800b028:	8003      	strh	r3, [r0, #0]
 800b02a:	8043      	strh	r3, [r0, #2]
 800b02c:	8083      	strh	r3, [r0, #4]
 800b02e:	80c3      	strh	r3, [r0, #6]
 800b030:	4620      	mov	r0, r4
 800b032:	bd10      	pop	{r4, pc}
 800b034:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800b038:	b11b      	cbz	r3, 800b042 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800b03a:	3130      	adds	r1, #48	; 0x30
 800b03c:	f004 fd80 	bl	800fb40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b040:	e7f6      	b.n	800b030 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800b042:	312e      	adds	r1, #46	; 0x2e
 800b044:	e7fa      	b.n	800b03c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800b048 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800b048:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b04c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b050:	b08a      	sub	sp, #40	; 0x28
 800b052:	4604      	mov	r4, r0
 800b054:	4688      	mov	r8, r1
 800b056:	2b00      	cmp	r3, #0
 800b058:	d044      	beq.n	800b0e4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800b05a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800b05c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b060:	a805      	add	r0, sp, #20
 800b062:	f004 fce5 	bl	800fa30 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b066:	4605      	mov	r5, r0
 800b068:	b206      	sxth	r6, r0
 800b06a:	a805      	add	r0, sp, #20
 800b06c:	f004 fd24 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b070:	f9b8 2000 	ldrsh.w	r2, [r8]
 800b074:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800b078:	4417      	add	r7, r2
 800b07a:	b2bf      	uxth	r7, r7
 800b07c:	2300      	movs	r3, #0
 800b07e:	fa0f fe87 	sxth.w	lr, r7
 800b082:	459e      	cmp	lr, r3
 800b084:	fa0f fc80 	sxth.w	ip, r0
 800b088:	9306      	str	r3, [sp, #24]
 800b08a:	dd2d      	ble.n	800b0e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b08c:	4296      	cmp	r6, r2
 800b08e:	dd2b      	ble.n	800b0e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b090:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800b094:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800b098:	4419      	add	r1, r3
 800b09a:	b289      	uxth	r1, r1
 800b09c:	fa0f f881 	sxth.w	r8, r1
 800b0a0:	f1b8 0f00 	cmp.w	r8, #0
 800b0a4:	dd20      	ble.n	800b0e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b0a6:	459c      	cmp	ip, r3
 800b0a8:	dd1e      	ble.n	800b0e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800b0aa:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800b0ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800b0b2:	4576      	cmp	r6, lr
 800b0b4:	bfa8      	it	ge
 800b0b6:	463d      	movge	r5, r7
 800b0b8:	45c4      	cmp	ip, r8
 800b0ba:	bfa8      	it	ge
 800b0bc:	4608      	movge	r0, r1
 800b0be:	1aad      	subs	r5, r5, r2
 800b0c0:	1ac0      	subs	r0, r0, r3
 800b0c2:	f8ad 501c 	strh.w	r5, [sp, #28]
 800b0c6:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b0ca:	f8ad 2018 	strh.w	r2, [sp, #24]
 800b0ce:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b0d2:	4b1f      	ldr	r3, [pc, #124]	; (800b150 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800b0d4:	681b      	ldr	r3, [r3, #0]
 800b0d6:	b953      	cbnz	r3, 800b0ee <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800b0d8:	4b1e      	ldr	r3, [pc, #120]	; (800b154 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800b0da:	4a1f      	ldr	r2, [pc, #124]	; (800b158 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800b0dc:	481f      	ldr	r0, [pc, #124]	; (800b15c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800b0de:	2187      	movs	r1, #135	; 0x87
 800b0e0:	f010 fe08 	bl	801bcf4 <__assert_func>
 800b0e4:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800b0e6:	e7b9      	b.n	800b05c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800b0e8:	2300      	movs	r3, #0
 800b0ea:	9307      	str	r3, [sp, #28]
 800b0ec:	e7f1      	b.n	800b0d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800b0ee:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800b0f2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b0f6:	429a      	cmp	r2, r3
 800b0f8:	d026      	beq.n	800b148 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b0fa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b0fe:	2b00      	cmp	r3, #0
 800b100:	dd22      	ble.n	800b148 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b102:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b106:	2b00      	cmp	r3, #0
 800b108:	dd1e      	ble.n	800b148 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800b10a:	2300      	movs	r3, #0
 800b10c:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800b110:	6823      	ldr	r3, [r4, #0]
 800b112:	a908      	add	r1, sp, #32
 800b114:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b116:	4620      	mov	r0, r4
 800b118:	4798      	blx	r3
 800b11a:	4b11      	ldr	r3, [pc, #68]	; (800b160 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800b11c:	681b      	ldr	r3, [r3, #0]
 800b11e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b122:	b10a      	cbz	r2, 800b128 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800b124:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b126:	b900      	cbnz	r0, 800b12a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800b128:	6898      	ldr	r0, [r3, #8]
 800b12a:	6801      	ldr	r1, [r0, #0]
 800b12c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800b130:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800b134:	2501      	movs	r5, #1
 800b136:	9502      	str	r5, [sp, #8]
 800b138:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800b13c:	9401      	str	r4, [sp, #4]
 800b13e:	ac06      	add	r4, sp, #24
 800b140:	9400      	str	r4, [sp, #0]
 800b142:	688c      	ldr	r4, [r1, #8]
 800b144:	a905      	add	r1, sp, #20
 800b146:	47a0      	blx	r4
 800b148:	b00a      	add	sp, #40	; 0x28
 800b14a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b14e:	bf00      	nop
 800b150:	2000a688 	.word	0x2000a688
 800b154:	0801ecc0 	.word	0x0801ecc0
 800b158:	0801ed22 	.word	0x0801ed22
 800b15c:	0801ecfc 	.word	0x0801ecfc
 800b160:	2000a600 	.word	0x2000a600

0800b164 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800b164:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800b168:	b12a      	cbz	r2, 800b176 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b16a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800b16e:	b112      	cbz	r2, 800b176 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800b170:	6803      	ldr	r3, [r0, #0]
 800b172:	695b      	ldr	r3, [r3, #20]
 800b174:	4718      	bx	r3
 800b176:	4770      	bx	lr

0800b178 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800b178:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b17c:	4d38      	ldr	r5, [pc, #224]	; (800b260 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe8>)
 800b17e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800b180:	882b      	ldrh	r3, [r5, #0]
 800b182:	4293      	cmp	r3, r2
 800b184:	b08c      	sub	sp, #48	; 0x30
 800b186:	4604      	mov	r4, r0
 800b188:	4689      	mov	r9, r1
 800b18a:	d965      	bls.n	800b258 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 800b18c:	4e35      	ldr	r6, [pc, #212]	; (800b264 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xec>)
 800b18e:	6833      	ldr	r3, [r6, #0]
 800b190:	b92b      	cbnz	r3, 800b19e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x26>
 800b192:	4b35      	ldr	r3, [pc, #212]	; (800b268 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf0>)
 800b194:	4a35      	ldr	r2, [pc, #212]	; (800b26c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 800b196:	21ae      	movs	r1, #174	; 0xae
 800b198:	4835      	ldr	r0, [pc, #212]	; (800b270 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf8>)
 800b19a:	f010 fdab 	bl	801bcf4 <__assert_func>
 800b19e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800b1a2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800b1a6:	4b33      	ldr	r3, [pc, #204]	; (800b274 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xfc>)
 800b1a8:	681b      	ldr	r3, [r3, #0]
 800b1aa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800b1ae:	2a00      	cmp	r2, #0
 800b1b0:	d052      	beq.n	800b258 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xe0>
 800b1b2:	784b      	ldrb	r3, [r1, #1]
 800b1b4:	9207      	str	r2, [sp, #28]
 800b1b6:	f3c3 0a01 	ubfx	sl, r3, #0, #2
 800b1ba:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800b1be:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800b1c2:	4b2d      	ldr	r3, [pc, #180]	; (800b278 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x100>)
 800b1c4:	f890 c036 	ldrb.w	ip, [r0, #54]	; 0x36
 800b1c8:	681b      	ldr	r3, [r3, #0]
 800b1ca:	f9b0 e034 	ldrsh.w	lr, [r0, #52]	; 0x34
 800b1ce:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b1d2:	f890 8038 	ldrb.w	r8, [r0, #56]	; 0x38
 800b1d6:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800b1da:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800b1de:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800b1e0:	f88d a020 	strb.w	sl, [sp, #32]
 800b1e4:	f88d 8022 	strb.w	r8, [sp, #34]	; 0x22
 800b1e8:	9009      	str	r0, [sp, #36]	; 0x24
 800b1ea:	f8ad e028 	strh.w	lr, [sp, #40]	; 0x28
 800b1ee:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800b1f2:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800b1f6:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800b1fa:	b10a      	cbz	r2, 800b200 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x88>
 800b1fc:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800b1fe:	b907      	cbnz	r7, 800b202 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x8a>
 800b200:	689f      	ldr	r7, [r3, #8]
 800b202:	f10d 0814 	add.w	r8, sp, #20
 800b206:	4621      	mov	r1, r4
 800b208:	4640      	mov	r0, r8
 800b20a:	f002 ffab 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b20e:	6833      	ldr	r3, [r6, #0]
 800b210:	2b00      	cmp	r3, #0
 800b212:	d0be      	beq.n	800b192 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x1a>
 800b214:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800b216:	882b      	ldrh	r3, [r5, #0]
 800b218:	428b      	cmp	r3, r1
 800b21a:	d803      	bhi.n	800b224 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xac>
 800b21c:	4b17      	ldr	r3, [pc, #92]	; (800b27c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x104>)
 800b21e:	4a13      	ldr	r2, [pc, #76]	; (800b26c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xf4>)
 800b220:	21af      	movs	r1, #175	; 0xaf
 800b222:	e7b9      	b.n	800b198 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x20>
 800b224:	4b16      	ldr	r3, [pc, #88]	; (800b280 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x108>)
 800b226:	6818      	ldr	r0, [r3, #0]
 800b228:	f7f7 fd68 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
 800b22c:	6823      	ldr	r3, [r4, #0]
 800b22e:	4605      	mov	r5, r0
 800b230:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b232:	4620      	mov	r0, r4
 800b234:	4798      	blx	r3
 800b236:	6823      	ldr	r3, [r4, #0]
 800b238:	4606      	mov	r6, r0
 800b23a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800b23e:	4620      	mov	r0, r4
 800b240:	4798      	blx	r3
 800b242:	e9cd 6002 	strd	r6, r0, [sp, #8]
 800b246:	ab07      	add	r3, sp, #28
 800b248:	9300      	str	r3, [sp, #0]
 800b24a:	9501      	str	r5, [sp, #4]
 800b24c:	464b      	mov	r3, r9
 800b24e:	e898 0006 	ldmia.w	r8, {r1, r2}
 800b252:	4638      	mov	r0, r7
 800b254:	f7f7 fd04 	bl	8002c60 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b258:	b00c      	add	sp, #48	; 0x30
 800b25a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b25e:	bf00      	nop
 800b260:	2000a654 	.word	0x2000a654
 800b264:	2000a650 	.word	0x2000a650
 800b268:	0801da28 	.word	0x0801da28
 800b26c:	0801ed55 	.word	0x0801ed55
 800b270:	0801dab6 	.word	0x0801dab6
 800b274:	2000a658 	.word	0x2000a658
 800b278:	2000a600 	.word	0x2000a600
 800b27c:	0801dadf 	.word	0x0801dadf
 800b280:	2000a65c 	.word	0x2000a65c

0800b284 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800b284:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b288:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800b28c:	b0a0      	sub	sp, #128	; 0x80
 800b28e:	4604      	mov	r4, r0
 800b290:	b193      	cbz	r3, 800b2b8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800b292:	4b33      	ldr	r3, [pc, #204]	; (800b360 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800b294:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800b296:	881b      	ldrh	r3, [r3, #0]
 800b298:	428b      	cmp	r3, r1
 800b29a:	d90d      	bls.n	800b2b8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800b29c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800b2a0:	2b00      	cmp	r3, #0
 800b2a2:	dd09      	ble.n	800b2b8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800b2a4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800b2a8:	2b00      	cmp	r3, #0
 800b2aa:	dd05      	ble.n	800b2b8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800b2ac:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800b2b0:	b12b      	cbz	r3, 800b2be <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800b2b2:	6803      	ldr	r3, [r0, #0]
 800b2b4:	695b      	ldr	r3, [r3, #20]
 800b2b6:	4798      	blx	r3
 800b2b8:	b020      	add	sp, #128	; 0x80
 800b2ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b2be:	4b29      	ldr	r3, [pc, #164]	; (800b364 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe0>)
 800b2c0:	681b      	ldr	r3, [r3, #0]
 800b2c2:	b92b      	cbnz	r3, 800b2d0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x4c>
 800b2c4:	4b28      	ldr	r3, [pc, #160]	; (800b368 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe4>)
 800b2c6:	4a29      	ldr	r2, [pc, #164]	; (800b36c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xe8>)
 800b2c8:	4829      	ldr	r0, [pc, #164]	; (800b370 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xec>)
 800b2ca:	21ae      	movs	r1, #174	; 0xae
 800b2cc:	f010 fd12 	bl	801bcf4 <__assert_func>
 800b2d0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800b2d4:	4b27      	ldr	r3, [pc, #156]	; (800b374 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf0>)
 800b2d6:	681b      	ldr	r3, [r3, #0]
 800b2d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800b2dc:	4b26      	ldr	r3, [pc, #152]	; (800b378 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xf4>)
 800b2de:	6818      	ldr	r0, [r3, #0]
 800b2e0:	f7f7 fd0c 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
 800b2e4:	4606      	mov	r6, r0
 800b2e6:	a807      	add	r0, sp, #28
 800b2e8:	f003 faf4 	bl	800e8d4 <_ZN8touchgfx12TextProviderC1Ev>
 800b2ec:	682b      	ldr	r3, [r5, #0]
 800b2ee:	4628      	mov	r0, r5
 800b2f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b2f2:	4798      	blx	r3
 800b2f4:	682b      	ldr	r3, [r5, #0]
 800b2f6:	4607      	mov	r7, r0
 800b2f8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800b2fa:	4628      	mov	r0, r5
 800b2fc:	4798      	blx	r3
 800b2fe:	6823      	ldr	r3, [r4, #0]
 800b300:	4605      	mov	r5, r0
 800b302:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800b304:	4620      	mov	r0, r4
 800b306:	4798      	blx	r3
 800b308:	6823      	ldr	r3, [r4, #0]
 800b30a:	4680      	mov	r8, r0
 800b30c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800b310:	4620      	mov	r0, r4
 800b312:	4798      	blx	r3
 800b314:	462b      	mov	r3, r5
 800b316:	e9cd 8000 	strd	r8, r0, [sp]
 800b31a:	463a      	mov	r2, r7
 800b31c:	a807      	add	r0, sp, #28
 800b31e:	4631      	mov	r1, r6
 800b320:	f003 fb59 	bl	800e9d6 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800b324:	a807      	add	r0, sp, #28
 800b326:	f003 ff4b 	bl	800f1c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b32a:	280a      	cmp	r0, #10
 800b32c:	d103      	bne.n	800b336 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xb2>
 800b32e:	6823      	ldr	r3, [r4, #0]
 800b330:	4620      	mov	r0, r4
 800b332:	695b      	ldr	r3, [r3, #20]
 800b334:	e7bf      	b.n	800b2b6 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800b336:	a807      	add	r0, sp, #28
 800b338:	f003 ff42 	bl	800f1c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b33c:	2800      	cmp	r0, #0
 800b33e:	d1f4      	bne.n	800b32a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa6>
 800b340:	ad04      	add	r5, sp, #16
 800b342:	4621      	mov	r1, r4
 800b344:	4628      	mov	r0, r5
 800b346:	f7ff fa8b 	bl	800a860 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800b34a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800b34e:	6822      	ldr	r2, [r4, #0]
 800b350:	ab02      	add	r3, sp, #8
 800b352:	e883 0003 	stmia.w	r3, {r0, r1}
 800b356:	6912      	ldr	r2, [r2, #16]
 800b358:	4619      	mov	r1, r3
 800b35a:	4620      	mov	r0, r4
 800b35c:	4790      	blx	r2
 800b35e:	e7ab      	b.n	800b2b8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800b360:	2000a654 	.word	0x2000a654
 800b364:	2000a650 	.word	0x2000a650
 800b368:	0801da28 	.word	0x0801da28
 800b36c:	0801ed55 	.word	0x0801ed55
 800b370:	0801dab6 	.word	0x0801dab6
 800b374:	2000a658 	.word	0x2000a658
 800b378:	2000a65c 	.word	0x2000a65c

0800b37c <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800b37c:	4770      	bx	lr

0800b37e <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800b37e:	b510      	push	{r4, lr}
 800b380:	213c      	movs	r1, #60	; 0x3c
 800b382:	4604      	mov	r4, r0
 800b384:	f010 fc88 	bl	801bc98 <_ZdlPvj>
 800b388:	4620      	mov	r0, r4
 800b38a:	bd10      	pop	{r4, pc}

0800b38c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800b38c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b390:	461c      	mov	r4, r3
 800b392:	4606      	mov	r6, r0
 800b394:	9f06      	ldr	r7, [sp, #24]
 800b396:	f7ff fe14 	bl	800afc2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800b39a:	8823      	ldrh	r3, [r4, #0]
 800b39c:	86b3      	strh	r3, [r6, #52]	; 0x34
 800b39e:	883b      	ldrh	r3, [r7, #0]
 800b3a0:	86f3      	strh	r3, [r6, #54]	; 0x36
 800b3a2:	4638      	mov	r0, r7
 800b3a4:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800b3a8:	f004 fb42 	bl	800fa30 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b3ac:	f04f 0802 	mov.w	r8, #2
 800b3b0:	fb95 f5f8 	sdiv	r5, r5, r8
 800b3b4:	b2ad      	uxth	r5, r5
 800b3b6:	eba5 0050 	sub.w	r0, r5, r0, lsr #1
 800b3ba:	8730      	strh	r0, [r6, #56]	; 0x38
 800b3bc:	4638      	mov	r0, r7
 800b3be:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800b3c2:	fb94 f4f8 	sdiv	r4, r4, r8
 800b3c6:	f004 fb77 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b3ca:	b2a4      	uxth	r4, r4
 800b3cc:	eba4 0050 	sub.w	r0, r4, r0, lsr #1
 800b3d0:	8770      	strh	r0, [r6, #58]	; 0x3a
 800b3d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800b3d8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800b3d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b3dc:	4604      	mov	r4, r0
 800b3de:	b08c      	sub	sp, #48	; 0x30
 800b3e0:	460d      	mov	r5, r1
 800b3e2:	f7ff fe31 	bl	800b048 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800b3e6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b3ea:	b33b      	cbz	r3, 800b43c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x64>
 800b3ec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800b3ee:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b3f2:	a805      	add	r0, sp, #20
 800b3f4:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 800b3f8:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 800b3fc:	f004 fb18 	bl	800fa30 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b400:	4606      	mov	r6, r0
 800b402:	a805      	add	r0, sp, #20
 800b404:	f004 fb58 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b408:	6869      	ldr	r1, [r5, #4]
 800b40a:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b40e:	6828      	ldr	r0, [r5, #0]
 800b410:	f8ad 8018 	strh.w	r8, [sp, #24]
 800b414:	ab08      	add	r3, sp, #32
 800b416:	ad08      	add	r5, sp, #32
 800b418:	c303      	stmia	r3!, {r0, r1}
 800b41a:	a906      	add	r1, sp, #24
 800b41c:	4628      	mov	r0, r5
 800b41e:	f8ad 701a 	strh.w	r7, [sp, #26]
 800b422:	f8ad 601c 	strh.w	r6, [sp, #28]
 800b426:	f7fe f83b 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 800b42a:	4b25      	ldr	r3, [pc, #148]	; (800b4c0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe8>)
 800b42c:	681b      	ldr	r3, [r3, #0]
 800b42e:	b93b      	cbnz	r3, 800b440 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x68>
 800b430:	4b24      	ldr	r3, [pc, #144]	; (800b4c4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xec>)
 800b432:	4a25      	ldr	r2, [pc, #148]	; (800b4c8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf0>)
 800b434:	4825      	ldr	r0, [pc, #148]	; (800b4cc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf4>)
 800b436:	2187      	movs	r1, #135	; 0x87
 800b438:	f010 fc5c 	bl	801bcf4 <__assert_func>
 800b43c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800b43e:	e7d6      	b.n	800b3ee <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x16>
 800b440:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800b444:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b448:	429a      	cmp	r2, r3
 800b44a:	d035      	beq.n	800b4b8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800b44c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 800b450:	2b00      	cmp	r3, #0
 800b452:	dd31      	ble.n	800b4b8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800b454:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800b458:	2b00      	cmp	r3, #0
 800b45a:	dd2d      	ble.n	800b4b8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xe0>
 800b45c:	2300      	movs	r3, #0
 800b45e:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800b462:	6823      	ldr	r3, [r4, #0]
 800b464:	a90a      	add	r1, sp, #40	; 0x28
 800b466:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b468:	4620      	mov	r0, r4
 800b46a:	4798      	blx	r3
 800b46c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800b470:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800b472:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800b476:	1a9b      	subs	r3, r3, r2
 800b478:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b47c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 800b47e:	1ac9      	subs	r1, r1, r3
 800b480:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800b484:	4912      	ldr	r1, [pc, #72]	; (800b4d0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xf8>)
 800b486:	6809      	ldr	r1, [r1, #0]
 800b488:	f891 0076 	ldrb.w	r0, [r1, #118]	; 0x76
 800b48c:	b108      	cbz	r0, 800b492 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xba>
 800b48e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800b490:	b900      	cbnz	r0, 800b494 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xbc>
 800b492:	6888      	ldr	r0, [r1, #8]
 800b494:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 800b498:	440b      	add	r3, r1
 800b49a:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 800b49e:	2601      	movs	r6, #1
 800b4a0:	440a      	add	r2, r1
 800b4a2:	6801      	ldr	r1, [r0, #0]
 800b4a4:	9602      	str	r6, [sp, #8]
 800b4a6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800b4aa:	e9cd 5400 	strd	r5, r4, [sp]
 800b4ae:	b21b      	sxth	r3, r3
 800b4b0:	688c      	ldr	r4, [r1, #8]
 800b4b2:	b212      	sxth	r2, r2
 800b4b4:	a905      	add	r1, sp, #20
 800b4b6:	47a0      	blx	r4
 800b4b8:	b00c      	add	sp, #48	; 0x30
 800b4ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b4be:	bf00      	nop
 800b4c0:	2000a688 	.word	0x2000a688
 800b4c4:	0801ecc0 	.word	0x0801ecc0
 800b4c8:	0801edfc 	.word	0x0801edfc
 800b4cc:	0801ecfc 	.word	0x0801ecfc
 800b4d0:	2000a600 	.word	0x2000a600

0800b4d4 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800b4d4:	b510      	push	{r4, lr}
 800b4d6:	2101      	movs	r1, #1
 800b4d8:	2200      	movs	r2, #0
 800b4da:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b4de:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800b4e2:	4c0e      	ldr	r4, [pc, #56]	; (800b51c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 800b4e4:	8082      	strh	r2, [r0, #4]
 800b4e6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b4ea:	80c2      	strh	r2, [r0, #6]
 800b4ec:	8102      	strh	r2, [r0, #8]
 800b4ee:	8142      	strh	r2, [r0, #10]
 800b4f0:	8182      	strh	r2, [r0, #12]
 800b4f2:	81c2      	strh	r2, [r0, #14]
 800b4f4:	8202      	strh	r2, [r0, #16]
 800b4f6:	8242      	strh	r2, [r0, #18]
 800b4f8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b4fc:	61c2      	str	r2, [r0, #28]
 800b4fe:	8402      	strh	r2, [r0, #32]
 800b500:	8442      	strh	r2, [r0, #34]	; 0x22
 800b502:	6282      	str	r2, [r0, #40]	; 0x28
 800b504:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800b508:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800b50a:	8601      	strh	r1, [r0, #48]	; 0x30
 800b50c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800b510:	6004      	str	r4, [r0, #0]
 800b512:	8681      	strh	r1, [r0, #52]	; 0x34
 800b514:	86c1      	strh	r1, [r0, #54]	; 0x36
 800b516:	8702      	strh	r2, [r0, #56]	; 0x38
 800b518:	8742      	strh	r2, [r0, #58]	; 0x3a
 800b51a:	bd10      	pop	{r4, pc}
 800b51c:	0801ed8c 	.word	0x0801ed8c

0800b520 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800b520:	4770      	bx	lr

0800b522 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800b522:	b510      	push	{r4, lr}
 800b524:	2148      	movs	r1, #72	; 0x48
 800b526:	4604      	mov	r4, r0
 800b528:	f010 fbb6 	bl	801bc98 <_ZdlPvj>
 800b52c:	4620      	mov	r0, r4
 800b52e:	bd10      	pop	{r4, pc}

0800b530 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800b530:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b534:	4604      	mov	r4, r0
 800b536:	4d57      	ldr	r5, [pc, #348]	; (800b694 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800b538:	b08c      	sub	sp, #48	; 0x30
 800b53a:	4688      	mov	r8, r1
 800b53c:	f7ff fd84 	bl	800b048 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800b540:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800b542:	882b      	ldrh	r3, [r5, #0]
 800b544:	4293      	cmp	r3, r2
 800b546:	f240 80a1 	bls.w	800b68c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800b54a:	4e53      	ldr	r6, [pc, #332]	; (800b698 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800b54c:	6833      	ldr	r3, [r6, #0]
 800b54e:	b92b      	cbnz	r3, 800b55c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 800b550:	4b52      	ldr	r3, [pc, #328]	; (800b69c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800b552:	4a53      	ldr	r2, [pc, #332]	; (800b6a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800b554:	21ae      	movs	r1, #174	; 0xae
 800b556:	4853      	ldr	r0, [pc, #332]	; (800b6a4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800b558:	f010 fbcc 	bl	801bcf4 <__assert_func>
 800b55c:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800b560:	4b51      	ldr	r3, [pc, #324]	; (800b6a8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 800b562:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 800b566:	681b      	ldr	r3, [r3, #0]
 800b568:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800b56c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800b570:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b574:	2300      	movs	r3, #0
 800b576:	f1be 0f01 	cmp.w	lr, #1
 800b57a:	9303      	str	r3, [sp, #12]
 800b57c:	b208      	sxth	r0, r1
 800b57e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b582:	f04f 0c02 	mov.w	ip, #2
 800b586:	d044      	beq.n	800b612 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 800b588:	f1be 0f03 	cmp.w	lr, #3
 800b58c:	d041      	beq.n	800b612 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 800b58e:	1a52      	subs	r2, r2, r1
 800b590:	f8ad 3010 	strh.w	r3, [sp, #16]
 800b594:	fb92 f2fc 	sdiv	r2, r2, ip
 800b598:	f8ad 0012 	strh.w	r0, [sp, #18]
 800b59c:	f8ad 200e 	strh.w	r2, [sp, #14]
 800b5a0:	f10d 090c 	add.w	r9, sp, #12
 800b5a4:	e899 0003 	ldmia.w	r9, {r0, r1}
 800b5a8:	f10d 0a14 	add.w	sl, sp, #20
 800b5ac:	e88a 0003 	stmia.w	sl, {r0, r1}
 800b5b0:	4641      	mov	r1, r8
 800b5b2:	4650      	mov	r0, sl
 800b5b4:	f7fd ff74 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 800b5b8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800b5bc:	2b00      	cmp	r3, #0
 800b5be:	dd65      	ble.n	800b68c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800b5c0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800b5c4:	2b00      	cmp	r3, #0
 800b5c6:	dd61      	ble.n	800b68c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800b5c8:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800b5cc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b5d0:	1a9b      	subs	r3, r3, r2
 800b5d2:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b5d6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800b5da:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b5de:	1a9b      	subs	r3, r3, r2
 800b5e0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b5e4:	6823      	ldr	r3, [r4, #0]
 800b5e6:	4649      	mov	r1, r9
 800b5e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5ea:	4620      	mov	r0, r4
 800b5ec:	4798      	blx	r3
 800b5ee:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b5f2:	b1c3      	cbz	r3, 800b626 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xf6>
 800b5f4:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800b5f8:	6833      	ldr	r3, [r6, #0]
 800b5fa:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800b5fe:	2b00      	cmp	r3, #0
 800b600:	d0a6      	beq.n	800b550 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 800b602:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800b604:	882d      	ldrh	r5, [r5, #0]
 800b606:	428d      	cmp	r5, r1
 800b608:	d810      	bhi.n	800b62c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xfc>
 800b60a:	4b28      	ldr	r3, [pc, #160]	; (800b6ac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 800b60c:	4a24      	ldr	r2, [pc, #144]	; (800b6a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800b60e:	21af      	movs	r1, #175	; 0xaf
 800b610:	e7a1      	b.n	800b556 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 800b612:	1a5b      	subs	r3, r3, r1
 800b614:	f8ad 0010 	strh.w	r0, [sp, #16]
 800b618:	fb93 f3fc 	sdiv	r3, r3, ip
 800b61c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800b620:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b624:	e7bc      	b.n	800b5a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x70>
 800b626:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800b62a:	e7e5      	b.n	800b5f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xc8>
 800b62c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800b630:	6812      	ldr	r2, [r2, #0]
 800b632:	785b      	ldrb	r3, [r3, #1]
 800b634:	9209      	str	r2, [sp, #36]	; 0x24
 800b636:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800b63a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800b63e:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800b642:	2300      	movs	r3, #0
 800b644:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800b648:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800b64c:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800b650:	4b17      	ldr	r3, [pc, #92]	; (800b6b0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 800b652:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800b656:	681b      	ldr	r3, [r3, #0]
 800b658:	9707      	str	r7, [sp, #28]
 800b65a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b65e:	f88d 5020 	strb.w	r5, [sp, #32]
 800b662:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b666:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b66a:	b10a      	cbz	r2, 800b670 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800b66c:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800b66e:	b904      	cbnz	r4, 800b672 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x142>
 800b670:	689c      	ldr	r4, [r3, #8]
 800b672:	4b10      	ldr	r3, [pc, #64]	; (800b6b4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 800b674:	6818      	ldr	r0, [r3, #0]
 800b676:	f7f7 fb41 	bl	8002cfc <_ZNK8touchgfx5Texts7getTextEt>
 800b67a:	ab07      	add	r3, sp, #28
 800b67c:	9001      	str	r0, [sp, #4]
 800b67e:	9300      	str	r3, [sp, #0]
 800b680:	e899 0006 	ldmia.w	r9, {r1, r2}
 800b684:	4653      	mov	r3, sl
 800b686:	4620      	mov	r0, r4
 800b688:	f7f7 faea 	bl	8002c60 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b68c:	b00c      	add	sp, #48	; 0x30
 800b68e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b692:	bf00      	nop
 800b694:	2000a654 	.word	0x2000a654
 800b698:	2000a650 	.word	0x2000a650
 800b69c:	0801da28 	.word	0x0801da28
 800b6a0:	0801eea4 	.word	0x0801eea4
 800b6a4:	0801dab6 	.word	0x0801dab6
 800b6a8:	2000a658 	.word	0x2000a658
 800b6ac:	0801dadf 	.word	0x0801dadf
 800b6b0:	2000a600 	.word	0x2000a600
 800b6b4:	2000a65c 	.word	0x2000a65c

0800b6b8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800b6b8:	b510      	push	{r4, lr}
 800b6ba:	2101      	movs	r1, #1
 800b6bc:	4c13      	ldr	r4, [pc, #76]	; (800b70c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800b6be:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b6c2:	2200      	movs	r2, #0
 800b6c4:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800b6c8:	6004      	str	r4, [r0, #0]
 800b6ca:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b6ce:	4c10      	ldr	r4, [pc, #64]	; (800b710 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800b6d0:	8082      	strh	r2, [r0, #4]
 800b6d2:	80c2      	strh	r2, [r0, #6]
 800b6d4:	8102      	strh	r2, [r0, #8]
 800b6d6:	8142      	strh	r2, [r0, #10]
 800b6d8:	8182      	strh	r2, [r0, #12]
 800b6da:	81c2      	strh	r2, [r0, #14]
 800b6dc:	8202      	strh	r2, [r0, #16]
 800b6de:	8242      	strh	r2, [r0, #18]
 800b6e0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b6e4:	61c2      	str	r2, [r0, #28]
 800b6e6:	8402      	strh	r2, [r0, #32]
 800b6e8:	8442      	strh	r2, [r0, #34]	; 0x22
 800b6ea:	6282      	str	r2, [r0, #40]	; 0x28
 800b6ec:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800b6f0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800b6f2:	8601      	strh	r1, [r0, #48]	; 0x30
 800b6f4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800b6f8:	6344      	str	r4, [r0, #52]	; 0x34
 800b6fa:	8701      	strh	r1, [r0, #56]	; 0x38
 800b6fc:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800b700:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800b704:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800b708:	bd10      	pop	{r4, pc}
 800b70a:	bf00      	nop
 800b70c:	0801ee38 	.word	0x0801ee38
 800b710:	0801d620 	.word	0x0801d620

0800b714 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800b714:	b510      	push	{r4, lr}
 800b716:	6803      	ldr	r3, [r0, #0]
 800b718:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b71a:	460c      	mov	r4, r1
 800b71c:	4798      	blx	r3
 800b71e:	1b03      	subs	r3, r0, r4
 800b720:	4258      	negs	r0, r3
 800b722:	4158      	adcs	r0, r3
 800b724:	bd10      	pop	{r4, pc}
	...

0800b728 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800b728:	4b01      	ldr	r3, [pc, #4]	; (800b730 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800b72a:	6019      	str	r1, [r3, #0]
 800b72c:	4770      	bx	lr
 800b72e:	bf00      	nop
 800b730:	2000a608 	.word	0x2000a608

0800b734 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b738:	4696      	mov	lr, r2
 800b73a:	4605      	mov	r5, r0
 800b73c:	4614      	mov	r4, r2
 800b73e:	460e      	mov	r6, r1
 800b740:	461f      	mov	r7, r3
 800b742:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b746:	b097      	sub	sp, #92	; 0x5c
 800b748:	f10d 0c1c 	add.w	ip, sp, #28
 800b74c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b750:	f8de 3000 	ldr.w	r3, [lr]
 800b754:	f8cc 3000 	str.w	r3, [ip]
 800b758:	f104 0e14 	add.w	lr, r4, #20
 800b75c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b760:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b764:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b768:	f8de 3000 	ldr.w	r3, [lr]
 800b76c:	f8cc 3000 	str.w	r3, [ip]
 800b770:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b774:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b778:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b77c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b780:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800b784:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800b788:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800b78c:	f8de 3000 	ldr.w	r3, [lr]
 800b790:	f8cc 3000 	str.w	r3, [ip]
 800b794:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b796:	682b      	ldr	r3, [r5, #0]
 800b798:	9201      	str	r2, [sp, #4]
 800b79a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b79e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b7a0:	9200      	str	r2, [sp, #0]
 800b7a2:	f8cd 8008 	str.w	r8, [sp, #8]
 800b7a6:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800b7aa:	aa07      	add	r2, sp, #28
 800b7ac:	463b      	mov	r3, r7
 800b7ae:	4631      	mov	r1, r6
 800b7b0:	4628      	mov	r0, r5
 800b7b2:	47d8      	blx	fp
 800b7b4:	46a6      	mov	lr, r4
 800b7b6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b7ba:	f10d 0c1c 	add.w	ip, sp, #28
 800b7be:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b7c2:	f8de 3000 	ldr.w	r3, [lr]
 800b7c6:	f8cc 3000 	str.w	r3, [ip]
 800b7ca:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b7ce:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b7d2:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b7d6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b7da:	343c      	adds	r4, #60	; 0x3c
 800b7dc:	f8de 3000 	ldr.w	r3, [lr]
 800b7e0:	f8cc 3000 	str.w	r3, [ip]
 800b7e4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b7e6:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b7ea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b7ee:	6823      	ldr	r3, [r4, #0]
 800b7f0:	f8cc 3000 	str.w	r3, [ip]
 800b7f4:	682b      	ldr	r3, [r5, #0]
 800b7f6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b7fa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b7fc:	9201      	str	r2, [sp, #4]
 800b7fe:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b800:	9200      	str	r2, [sp, #0]
 800b802:	f8cd 8008 	str.w	r8, [sp, #8]
 800b806:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800b808:	aa07      	add	r2, sp, #28
 800b80a:	463b      	mov	r3, r7
 800b80c:	4631      	mov	r1, r6
 800b80e:	4628      	mov	r0, r5
 800b810:	47a0      	blx	r4
 800b812:	b017      	add	sp, #92	; 0x5c
 800b814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b818 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b81c:	b08d      	sub	sp, #52	; 0x34
 800b81e:	4688      	mov	r8, r1
 800b820:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b822:	f8d3 c000 	ldr.w	ip, [r3]
 800b826:	680f      	ldr	r7, [r1, #0]
 800b828:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800b82c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800b830:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800b834:	edd3 6a07 	vldr	s13, [r3, #28]
 800b838:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b83a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800b83e:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b842:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b846:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800b84a:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800b84e:	eba7 070c 	sub.w	r7, r7, ip
 800b852:	42bc      	cmp	r4, r7
 800b854:	bfa8      	it	ge
 800b856:	463c      	movge	r4, r7
 800b858:	ee07 4a90 	vmov	s15, r4
 800b85c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b860:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800b864:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b868:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b86c:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b870:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b874:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b878:	eb09 0e0c 	add.w	lr, r9, ip
 800b87c:	4571      	cmp	r1, lr
 800b87e:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b882:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b886:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b88a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b88e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b892:	f340 808d 	ble.w	800b9b0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b896:	eba1 060e 	sub.w	r6, r1, lr
 800b89a:	fb96 f5f4 	sdiv	r5, r6, r4
 800b89e:	ee07 5a10 	vmov	s14, r5
 800b8a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b8a6:	2d00      	cmp	r5, #0
 800b8a8:	fb04 6615 	mls	r6, r4, r5, r6
 800b8ac:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b8b0:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b8b4:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b8b8:	dd13      	ble.n	800b8e2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b8ba:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b8be:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b8c2:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b8c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b8ca:	bf18      	it	ne
 800b8cc:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b8d0:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b8d4:	bf08      	it	eq
 800b8d6:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b8da:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b8de:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b8e2:	fb05 f204 	mul.w	r2, r5, r4
 800b8e6:	1abf      	subs	r7, r7, r2
 800b8e8:	4494      	add	ip, r2
 800b8ea:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b8ee:	4411      	add	r1, r2
 800b8f0:	eb09 020c 	add.w	r2, r9, ip
 800b8f4:	443a      	add	r2, r7
 800b8f6:	b209      	sxth	r1, r1
 800b8f8:	428a      	cmp	r2, r1
 800b8fa:	bfc4      	itt	gt
 800b8fc:	eba1 0209 	subgt.w	r2, r1, r9
 800b900:	eba2 070c 	subgt.w	r7, r2, ip
 800b904:	2f00      	cmp	r7, #0
 800b906:	dd50      	ble.n	800b9aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b908:	fb97 f1f4 	sdiv	r1, r7, r4
 800b90c:	fb04 7211 	mls	r2, r4, r1, r7
 800b910:	b90a      	cbnz	r2, 800b916 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b912:	3901      	subs	r1, #1
 800b914:	4622      	mov	r2, r4
 800b916:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b91a:	6840      	ldr	r0, [r0, #4]
 800b91c:	900b      	str	r0, [sp, #44]	; 0x2c
 800b91e:	f8d0 a000 	ldr.w	sl, [r0]
 800b922:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b924:	9008      	str	r0, [sp, #32]
 800b926:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800b92a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b92c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800b930:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b934:	695b      	ldr	r3, [r3, #20]
 800b936:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b938:	445b      	add	r3, fp
 800b93a:	eef0 6a42 	vmov.f32	s13, s4
 800b93e:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b942:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b946:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b94a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b94e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b952:	9307      	str	r3, [sp, #28]
 800b954:	ee17 7a90 	vmov	r7, s15
 800b958:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b95c:	eeb0 7a61 	vmov.f32	s14, s3
 800b960:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b964:	ee16 3a90 	vmov	r3, s13
 800b968:	fb97 f7f4 	sdiv	r7, r7, r4
 800b96c:	ee17 ca90 	vmov	ip, s15
 800b970:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b974:	fb9c fcf4 	sdiv	ip, ip, r4
 800b978:	fb0c 3306 	mla	r3, ip, r6, r3
 800b97c:	9302      	str	r3, [sp, #8]
 800b97e:	ee17 3a10 	vmov	r3, s14
 800b982:	44b6      	add	lr, r6
 800b984:	fb04 e505 	mla	r5, r4, r5, lr
 800b988:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b98c:	fb07 3706 	mla	r7, r7, r6, r3
 800b990:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b994:	e9cd 4700 	strd	r4, r7, [sp]
 800b998:	2900      	cmp	r1, #0
 800b99a:	bfcc      	ite	gt
 800b99c:	46a1      	movgt	r9, r4
 800b99e:	4691      	movle	r9, r2
 800b9a0:	eba9 0306 	sub.w	r3, r9, r6
 800b9a4:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b9a8:	47a0      	blx	r4
 800b9aa:	b00d      	add	sp, #52	; 0x34
 800b9ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b9b0:	2500      	movs	r5, #0
 800b9b2:	462e      	mov	r6, r5
 800b9b4:	e799      	b.n	800b8ea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b9b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b9b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9bc:	b0db      	sub	sp, #364	; 0x16c
 800b9be:	461d      	mov	r5, r3
 800b9c0:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800b9c4:	930a      	str	r3, [sp, #40]	; 0x28
 800b9c6:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800b9ca:	930b      	str	r3, [sp, #44]	; 0x2c
 800b9cc:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800b9d0:	9310      	str	r3, [sp, #64]	; 0x40
 800b9d2:	6803      	ldr	r3, [r0, #0]
 800b9d4:	910f      	str	r1, [sp, #60]	; 0x3c
 800b9d6:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800b9d8:	9009      	str	r0, [sp, #36]	; 0x24
 800b9da:	4614      	mov	r4, r2
 800b9dc:	4629      	mov	r1, r5
 800b9de:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b9e2:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800b9e6:	47b8      	blx	r7
 800b9e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b9ea:	6058      	str	r0, [r3, #4]
 800b9ec:	2800      	cmp	r0, #0
 800b9ee:	f000 83a1 	beq.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b9f2:	682b      	ldr	r3, [r5, #0]
 800b9f4:	9314      	str	r3, [sp, #80]	; 0x50
 800b9f6:	686b      	ldr	r3, [r5, #4]
 800b9f8:	9315      	str	r3, [sp, #84]	; 0x54
 800b9fa:	4bc4      	ldr	r3, [pc, #784]	; (800bd0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b9fc:	ed94 7a02 	vldr	s14, [r4, #8]
 800ba00:	7819      	ldrb	r1, [r3, #0]
 800ba02:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800ba06:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800ba0a:	2900      	cmp	r1, #0
 800ba0c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ba10:	bf16      	itet	ne
 800ba12:	4619      	movne	r1, r3
 800ba14:	4611      	moveq	r1, r2
 800ba16:	4613      	movne	r3, r2
 800ba18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ba1c:	9116      	str	r1, [sp, #88]	; 0x58
 800ba1e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800ba22:	f240 8387 	bls.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba26:	ed94 7a07 	vldr	s14, [r4, #28]
 800ba2a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ba2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ba32:	f240 837f 	bls.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba36:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800ba3a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800ba3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ba42:	f240 8377 	bls.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba46:	6822      	ldr	r2, [r4, #0]
 800ba48:	4bb1      	ldr	r3, [pc, #708]	; (800bd10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800ba4a:	429a      	cmp	r2, r3
 800ba4c:	f2c0 8372 	blt.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba50:	49b0      	ldr	r1, [pc, #704]	; (800bd14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800ba52:	6963      	ldr	r3, [r4, #20]
 800ba54:	428a      	cmp	r2, r1
 800ba56:	f300 836d 	bgt.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba5a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ba5e:	48ae      	ldr	r0, [pc, #696]	; (800bd18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800ba60:	33ff      	adds	r3, #255	; 0xff
 800ba62:	4283      	cmp	r3, r0
 800ba64:	f200 8366 	bhi.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba68:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ba6a:	4dac      	ldr	r5, [pc, #688]	; (800bd1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800ba6c:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ba70:	33ff      	adds	r3, #255	; 0xff
 800ba72:	42ab      	cmp	r3, r5
 800ba74:	f200 835e 	bhi.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba78:	6862      	ldr	r2, [r4, #4]
 800ba7a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800ba7e:	33ff      	adds	r3, #255	; 0xff
 800ba80:	4283      	cmp	r3, r0
 800ba82:	f200 8357 	bhi.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba86:	69a1      	ldr	r1, [r4, #24]
 800ba88:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800ba8c:	33ff      	adds	r3, #255	; 0xff
 800ba8e:	4283      	cmp	r3, r0
 800ba90:	f200 8350 	bhi.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ba94:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ba96:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800ba9a:	30ff      	adds	r0, #255	; 0xff
 800ba9c:	42a8      	cmp	r0, r5
 800ba9e:	f200 8349 	bhi.w	800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800baa2:	428a      	cmp	r2, r1
 800baa4:	f280 8110 	bge.w	800bcc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800baa8:	429a      	cmp	r2, r3
 800baaa:	f300 8119 	bgt.w	800bce0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800baae:	4299      	cmp	r1, r3
 800bab0:	f280 811d 	bge.w	800bcee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800bab4:	2502      	movs	r5, #2
 800bab6:	2701      	movs	r7, #1
 800bab8:	46a9      	mov	r9, r5
 800baba:	46b8      	mov	r8, r7
 800babc:	f04f 0a00 	mov.w	sl, #0
 800bac0:	4621      	mov	r1, r4
 800bac2:	a849      	add	r0, sp, #292	; 0x124
 800bac4:	f003 fcc6 	bl	800f454 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800bac8:	4622      	mov	r2, r4
 800baca:	4653      	mov	r3, sl
 800bacc:	a949      	add	r1, sp, #292	; 0x124
 800bace:	f8cd 9000 	str.w	r9, [sp]
 800bad2:	a819      	add	r0, sp, #100	; 0x64
 800bad4:	f003 fdee 	bl	800f6b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800bad8:	4622      	mov	r2, r4
 800bada:	4653      	mov	r3, sl
 800badc:	a949      	add	r1, sp, #292	; 0x124
 800bade:	f8cd 8000 	str.w	r8, [sp]
 800bae2:	a829      	add	r0, sp, #164	; 0xa4
 800bae4:	f003 fde6 	bl	800f6b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800bae8:	4643      	mov	r3, r8
 800baea:	4622      	mov	r2, r4
 800baec:	a949      	add	r1, sp, #292	; 0x124
 800baee:	f8cd 9000 	str.w	r9, [sp]
 800baf2:	a839      	add	r0, sp, #228	; 0xe4
 800baf4:	f003 fdde 	bl	800f6b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800baf8:	42af      	cmp	r7, r5
 800bafa:	bfb5      	itete	lt
 800bafc:	2300      	movlt	r3, #0
 800bafe:	2301      	movge	r3, #1
 800bb00:	930e      	strlt	r3, [sp, #56]	; 0x38
 800bb02:	930e      	strge	r3, [sp, #56]	; 0x38
 800bb04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bb06:	e893 0003 	ldmia.w	r3, {r0, r1}
 800bb0a:	af12      	add	r7, sp, #72	; 0x48
 800bb0c:	bfb9      	ittee	lt
 800bb0e:	ad29      	addlt	r5, sp, #164	; 0xa4
 800bb10:	ac19      	addlt	r4, sp, #100	; 0x64
 800bb12:	ad19      	addge	r5, sp, #100	; 0x64
 800bb14:	ac29      	addge	r4, sp, #164	; 0xa4
 800bb16:	e887 0003 	stmia.w	r7, {r0, r1}
 800bb1a:	b928      	cbnz	r0, 800bb28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800bb1c:	4b80      	ldr	r3, [pc, #512]	; (800bd20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800bb1e:	6818      	ldr	r0, [r3, #0]
 800bb20:	6803      	ldr	r3, [r0, #0]
 800bb22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bb24:	4798      	blx	r3
 800bb26:	6038      	str	r0, [r7, #0]
 800bb28:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800bb2a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800bb2e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800bb32:	930c      	str	r3, [sp, #48]	; 0x30
 800bb34:	990c      	ldr	r1, [sp, #48]	; 0x30
 800bb36:	6963      	ldr	r3, [r4, #20]
 800bb38:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800bb3a:	440b      	add	r3, r1
 800bb3c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800bb40:	4408      	add	r0, r1
 800bb42:	b200      	sxth	r0, r0
 800bb44:	4283      	cmp	r3, r0
 800bb46:	900d      	str	r0, [sp, #52]	; 0x34
 800bb48:	f280 80dd 	bge.w	800bd06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800bb4c:	428b      	cmp	r3, r1
 800bb4e:	da08      	bge.n	800bb62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800bb50:	2a00      	cmp	r2, #0
 800bb52:	dd06      	ble.n	800bb62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800bb54:	1acb      	subs	r3, r1, r3
 800bb56:	429a      	cmp	r2, r3
 800bb58:	f2c0 80e4 	blt.w	800bd24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800bb5c:	2b00      	cmp	r3, #0
 800bb5e:	f300 80e2 	bgt.w	800bd26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800bb62:	6967      	ldr	r7, [r4, #20]
 800bb64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bb66:	443b      	add	r3, r7
 800bb68:	461f      	mov	r7, r3
 800bb6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bb6c:	1bdf      	subs	r7, r3, r7
 800bb6e:	4297      	cmp	r7, r2
 800bb70:	bfa8      	it	ge
 800bb72:	4617      	movge	r7, r2
 800bb74:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800bb78:	2f00      	cmp	r7, #0
 800bb7a:	f340 8166 	ble.w	800be4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800bb7e:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800bb80:	6829      	ldr	r1, [r5, #0]
 800bb82:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bb86:	f9bb 3000 	ldrsh.w	r3, [fp]
 800bb8a:	6820      	ldr	r0, [r4, #0]
 800bb8c:	4411      	add	r1, r2
 800bb8e:	4299      	cmp	r1, r3
 800bb90:	dd1a      	ble.n	800bbc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800bb92:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800bb96:	440b      	add	r3, r1
 800bb98:	4402      	add	r2, r0
 800bb9a:	b21b      	sxth	r3, r3
 800bb9c:	429a      	cmp	r2, r3
 800bb9e:	dc13      	bgt.n	800bbc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800bba0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bba2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bba4:	681b      	ldr	r3, [r3, #0]
 800bba6:	9206      	str	r2, [sp, #24]
 800bba8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bbaa:	9205      	str	r2, [sp, #20]
 800bbac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bbae:	9500      	str	r5, [sp, #0]
 800bbb0:	e9cd b203 	strd	fp, r2, [sp, #12]
 800bbb4:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800bbb6:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bbb8:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800bbbc:	a912      	add	r1, sp, #72	; 0x48
 800bbbe:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800bbc2:	aa49      	add	r2, sp, #292	; 0x124
 800bbc4:	4623      	mov	r3, r4
 800bbc6:	47c8      	blx	r9
 800bbc8:	e9d4 2300 	ldrd	r2, r3, [r4]
 800bbcc:	441a      	add	r2, r3
 800bbce:	6963      	ldr	r3, [r4, #20]
 800bbd0:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800bbd4:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800bbd8:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800bbdc:	68a1      	ldr	r1, [r4, #8]
 800bbde:	ed94 6a08 	vldr	s12, [r4, #32]
 800bbe2:	6022      	str	r2, [r4, #0]
 800bbe4:	3301      	adds	r3, #1
 800bbe6:	6163      	str	r3, [r4, #20]
 800bbe8:	69a3      	ldr	r3, [r4, #24]
 800bbea:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bbee:	3b01      	subs	r3, #1
 800bbf0:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800bbf4:	61a3      	str	r3, [r4, #24]
 800bbf6:	6923      	ldr	r3, [r4, #16]
 800bbf8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bbfc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bc00:	edd4 6a07 	vldr	s13, [r4, #28]
 800bc04:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bc08:	440b      	add	r3, r1
 800bc0a:	68e1      	ldr	r1, [r4, #12]
 800bc0c:	6123      	str	r3, [r4, #16]
 800bc0e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bc12:	428b      	cmp	r3, r1
 800bc14:	edc4 6a07 	vstr	s13, [r4, #28]
 800bc18:	db15      	blt.n	800bc46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800bc1a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800bc1e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bc22:	3201      	adds	r2, #1
 800bc24:	edc4 6a07 	vstr	s13, [r4, #28]
 800bc28:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800bc2c:	6022      	str	r2, [r4, #0]
 800bc2e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bc32:	1a5b      	subs	r3, r3, r1
 800bc34:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bc38:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800bc3c:	6123      	str	r3, [r4, #16]
 800bc3e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bc42:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bc46:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bc4a:	441a      	add	r2, r3
 800bc4c:	696b      	ldr	r3, [r5, #20]
 800bc4e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800bc52:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800bc56:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800bc5a:	68a9      	ldr	r1, [r5, #8]
 800bc5c:	ed95 6a08 	vldr	s12, [r5, #32]
 800bc60:	602a      	str	r2, [r5, #0]
 800bc62:	3301      	adds	r3, #1
 800bc64:	616b      	str	r3, [r5, #20]
 800bc66:	69ab      	ldr	r3, [r5, #24]
 800bc68:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bc6c:	3b01      	subs	r3, #1
 800bc6e:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800bc72:	61ab      	str	r3, [r5, #24]
 800bc74:	692b      	ldr	r3, [r5, #16]
 800bc76:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bc7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bc7e:	edd5 6a07 	vldr	s13, [r5, #28]
 800bc82:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bc86:	440b      	add	r3, r1
 800bc88:	68e9      	ldr	r1, [r5, #12]
 800bc8a:	612b      	str	r3, [r5, #16]
 800bc8c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bc90:	428b      	cmp	r3, r1
 800bc92:	edc5 6a07 	vstr	s13, [r5, #28]
 800bc96:	db15      	blt.n	800bcc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800bc98:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800bc9c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bca0:	3201      	adds	r2, #1
 800bca2:	edc5 6a07 	vstr	s13, [r5, #28]
 800bca6:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800bcaa:	602a      	str	r2, [r5, #0]
 800bcac:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bcb0:	1a5b      	subs	r3, r3, r1
 800bcb2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bcb6:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800bcba:	612b      	str	r3, [r5, #16]
 800bcbc:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bcc0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bcc4:	3f01      	subs	r7, #1
 800bcc6:	e757      	b.n	800bb78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800bcc8:	4299      	cmp	r1, r3
 800bcca:	dc13      	bgt.n	800bcf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800bccc:	429a      	cmp	r2, r3
 800bcce:	da14      	bge.n	800bcfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800bcd0:	2502      	movs	r5, #2
 800bcd2:	2703      	movs	r7, #3
 800bcd4:	46a9      	mov	r9, r5
 800bcd6:	f04f 0800 	mov.w	r8, #0
 800bcda:	f04f 0a01 	mov.w	sl, #1
 800bcde:	e6ef      	b.n	800bac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800bce0:	2501      	movs	r5, #1
 800bce2:	2700      	movs	r7, #0
 800bce4:	46a9      	mov	r9, r5
 800bce6:	46b8      	mov	r8, r7
 800bce8:	f04f 0a02 	mov.w	sl, #2
 800bcec:	e6e8      	b.n	800bac0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800bcee:	2501      	movs	r5, #1
 800bcf0:	2702      	movs	r7, #2
 800bcf2:	e6e1      	b.n	800bab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800bcf4:	2500      	movs	r5, #0
 800bcf6:	2701      	movs	r7, #1
 800bcf8:	e7f4      	b.n	800bce4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800bcfa:	2702      	movs	r7, #2
 800bcfc:	2503      	movs	r5, #3
 800bcfe:	f04f 0900 	mov.w	r9, #0
 800bd02:	46b8      	mov	r8, r7
 800bd04:	e7e9      	b.n	800bcda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800bd06:	4613      	mov	r3, r2
 800bd08:	e728      	b.n	800bb5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800bd0a:	bf00      	nop
 800bd0c:	2000a5f8 	.word	0x2000a5f8
 800bd10:	fffd8f01 	.word	0xfffd8f01
 800bd14:	00027100 	.word	0x00027100
 800bd18:	0004e1ff 	.word	0x0004e1ff
 800bd1c:	0004e1fe 	.word	0x0004e1fe
 800bd20:	2000a600 	.word	0x2000a600
 800bd24:	4613      	mov	r3, r2
 800bd26:	992b      	ldr	r1, [sp, #172]	; 0xac
 800bd28:	9111      	str	r1, [sp, #68]	; 0x44
 800bd2a:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800bd2e:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800bd32:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800bd34:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800bd38:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800bd3c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800bd40:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800bd44:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800bd48:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800bd4c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800bd50:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800bd54:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800bd58:	469e      	mov	lr, r3
 800bd5a:	469c      	mov	ip, r3
 800bd5c:	f04f 0900 	mov.w	r9, #0
 800bd60:	f1bc 0f00 	cmp.w	ip, #0
 800bd64:	d147      	bne.n	800bdf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800bd66:	eb03 0c07 	add.w	ip, r3, r7
 800bd6a:	1ad7      	subs	r7, r2, r3
 800bd6c:	f1b9 0f00 	cmp.w	r9, #0
 800bd70:	d009      	beq.n	800bd86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800bd72:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800bd76:	9029      	str	r0, [sp, #164]	; 0xa4
 800bd78:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800bd7c:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800bd80:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800bd84:	912d      	str	r1, [sp, #180]	; 0xb4
 800bd86:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800bd88:	9111      	str	r1, [sp, #68]	; 0x44
 800bd8a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800bd8e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800bd92:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800bd96:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800bd9a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800bd9e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800bda2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800bda6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800bdaa:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800bdae:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800bdb2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800bdb6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800bdba:	f04f 0800 	mov.w	r8, #0
 800bdbe:	f1be 0f00 	cmp.w	lr, #0
 800bdc2:	d031      	beq.n	800be28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800bdc4:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800bdc6:	4431      	add	r1, r6
 800bdc8:	4549      	cmp	r1, r9
 800bdca:	4450      	add	r0, sl
 800bdcc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bdd0:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bdd4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bdd8:	db08      	blt.n	800bdec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800bdda:	ee77 7a85 	vadd.f32	s15, s15, s10
 800bdde:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800bde2:	ee37 7a06 	vadd.f32	s14, s14, s12
 800bde6:	3001      	adds	r0, #1
 800bde8:	eba1 0109 	sub.w	r1, r1, r9
 800bdec:	f10e 3eff 	add.w	lr, lr, #4294967295
 800bdf0:	f04f 0801 	mov.w	r8, #1
 800bdf4:	e7e3      	b.n	800bdbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800bdf6:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800bdf8:	4431      	add	r1, r6
 800bdfa:	4541      	cmp	r1, r8
 800bdfc:	4450      	add	r0, sl
 800bdfe:	ee37 7a24 	vadd.f32	s14, s14, s9
 800be02:	ee77 7a84 	vadd.f32	s15, s15, s8
 800be06:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800be0a:	db08      	blt.n	800be1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800be0c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800be10:	ee37 7a25 	vadd.f32	s14, s14, s11
 800be14:	ee77 7a86 	vadd.f32	s15, s15, s12
 800be18:	3001      	adds	r0, #1
 800be1a:	eba1 0108 	sub.w	r1, r1, r8
 800be1e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800be22:	f04f 0901 	mov.w	r9, #1
 800be26:	e79b      	b.n	800bd60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800be28:	449c      	add	ip, r3
 800be2a:	1aff      	subs	r7, r7, r3
 800be2c:	f1b8 0f00 	cmp.w	r8, #0
 800be30:	d009      	beq.n	800be46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800be32:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800be36:	9019      	str	r0, [sp, #100]	; 0x64
 800be38:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800be3c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800be40:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800be44:	911d      	str	r1, [sp, #116]	; 0x74
 800be46:	1ad2      	subs	r2, r2, r3
 800be48:	e68b      	b.n	800bb62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800be4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800be4c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800be4e:	2b00      	cmp	r3, #0
 800be50:	f000 80d1 	beq.w	800bff6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800be54:	ad19      	add	r5, sp, #100	; 0x64
 800be56:	ac39      	add	r4, sp, #228	; 0xe4
 800be58:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800be5a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800be5e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800be62:	930c      	str	r3, [sp, #48]	; 0x30
 800be64:	990c      	ldr	r1, [sp, #48]	; 0x30
 800be66:	6963      	ldr	r3, [r4, #20]
 800be68:	440b      	add	r3, r1
 800be6a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800be6e:	4408      	add	r0, r1
 800be70:	b200      	sxth	r0, r0
 800be72:	4283      	cmp	r3, r0
 800be74:	900d      	str	r0, [sp, #52]	; 0x34
 800be76:	f280 80c1 	bge.w	800bffc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800be7a:	428b      	cmp	r3, r1
 800be7c:	da08      	bge.n	800be90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800be7e:	2a00      	cmp	r2, #0
 800be80:	dd06      	ble.n	800be90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800be82:	1acb      	subs	r3, r1, r3
 800be84:	429a      	cmp	r2, r3
 800be86:	f2c0 80bb 	blt.w	800c000 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800be8a:	2b00      	cmp	r3, #0
 800be8c:	f300 80b9 	bgt.w	800c002 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800be90:	6967      	ldr	r7, [r4, #20]
 800be92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800be94:	443b      	add	r3, r7
 800be96:	461f      	mov	r7, r3
 800be98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800be9a:	1bdf      	subs	r7, r3, r7
 800be9c:	4297      	cmp	r7, r2
 800be9e:	bfa8      	it	ge
 800bea0:	4617      	movge	r7, r2
 800bea2:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800bea6:	2f00      	cmp	r7, #0
 800bea8:	f340 813c 	ble.w	800c124 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800beac:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800beae:	6829      	ldr	r1, [r5, #0]
 800beb0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800beb4:	f9bb 3000 	ldrsh.w	r3, [fp]
 800beb8:	6820      	ldr	r0, [r4, #0]
 800beba:	4411      	add	r1, r2
 800bebc:	4299      	cmp	r1, r3
 800bebe:	dd1a      	ble.n	800bef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800bec0:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800bec4:	440b      	add	r3, r1
 800bec6:	4402      	add	r2, r0
 800bec8:	b21b      	sxth	r3, r3
 800beca:	429a      	cmp	r2, r3
 800becc:	dc13      	bgt.n	800bef6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800bece:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bed0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bed2:	681b      	ldr	r3, [r3, #0]
 800bed4:	9206      	str	r2, [sp, #24]
 800bed6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bed8:	9205      	str	r2, [sp, #20]
 800beda:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bedc:	9500      	str	r5, [sp, #0]
 800bede:	e9cd b203 	strd	fp, r2, [sp, #12]
 800bee2:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800bee4:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bee6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800beea:	a912      	add	r1, sp, #72	; 0x48
 800beec:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800bef0:	aa49      	add	r2, sp, #292	; 0x124
 800bef2:	4623      	mov	r3, r4
 800bef4:	47c8      	blx	r9
 800bef6:	e9d4 2300 	ldrd	r2, r3, [r4]
 800befa:	441a      	add	r2, r3
 800befc:	6963      	ldr	r3, [r4, #20]
 800befe:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800bf02:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800bf06:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800bf0a:	68a1      	ldr	r1, [r4, #8]
 800bf0c:	ed94 6a08 	vldr	s12, [r4, #32]
 800bf10:	6022      	str	r2, [r4, #0]
 800bf12:	3301      	adds	r3, #1
 800bf14:	6163      	str	r3, [r4, #20]
 800bf16:	69a3      	ldr	r3, [r4, #24]
 800bf18:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bf1c:	3b01      	subs	r3, #1
 800bf1e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800bf22:	61a3      	str	r3, [r4, #24]
 800bf24:	6923      	ldr	r3, [r4, #16]
 800bf26:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bf2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bf2e:	edd4 6a07 	vldr	s13, [r4, #28]
 800bf32:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bf36:	440b      	add	r3, r1
 800bf38:	68e1      	ldr	r1, [r4, #12]
 800bf3a:	6123      	str	r3, [r4, #16]
 800bf3c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bf40:	428b      	cmp	r3, r1
 800bf42:	edc4 6a07 	vstr	s13, [r4, #28]
 800bf46:	db15      	blt.n	800bf74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800bf48:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800bf4c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bf50:	3201      	adds	r2, #1
 800bf52:	edc4 6a07 	vstr	s13, [r4, #28]
 800bf56:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800bf5a:	6022      	str	r2, [r4, #0]
 800bf5c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bf60:	1a5b      	subs	r3, r3, r1
 800bf62:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bf66:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800bf6a:	6123      	str	r3, [r4, #16]
 800bf6c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bf70:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bf74:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bf78:	441a      	add	r2, r3
 800bf7a:	696b      	ldr	r3, [r5, #20]
 800bf7c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800bf80:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800bf84:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800bf88:	68a9      	ldr	r1, [r5, #8]
 800bf8a:	ed95 6a08 	vldr	s12, [r5, #32]
 800bf8e:	602a      	str	r2, [r5, #0]
 800bf90:	3301      	adds	r3, #1
 800bf92:	616b      	str	r3, [r5, #20]
 800bf94:	69ab      	ldr	r3, [r5, #24]
 800bf96:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bf9a:	3b01      	subs	r3, #1
 800bf9c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800bfa0:	61ab      	str	r3, [r5, #24]
 800bfa2:	692b      	ldr	r3, [r5, #16]
 800bfa4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bfa8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bfac:	edd5 6a07 	vldr	s13, [r5, #28]
 800bfb0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bfb4:	440b      	add	r3, r1
 800bfb6:	68e9      	ldr	r1, [r5, #12]
 800bfb8:	612b      	str	r3, [r5, #16]
 800bfba:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bfbe:	428b      	cmp	r3, r1
 800bfc0:	edc5 6a07 	vstr	s13, [r5, #28]
 800bfc4:	db15      	blt.n	800bff2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800bfc6:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800bfca:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bfce:	3201      	adds	r2, #1
 800bfd0:	edc5 6a07 	vstr	s13, [r5, #28]
 800bfd4:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800bfd8:	602a      	str	r2, [r5, #0]
 800bfda:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bfde:	1a5b      	subs	r3, r3, r1
 800bfe0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bfe4:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800bfe8:	612b      	str	r3, [r5, #16]
 800bfea:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bfee:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bff2:	3f01      	subs	r7, #1
 800bff4:	e757      	b.n	800bea6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800bff6:	ad39      	add	r5, sp, #228	; 0xe4
 800bff8:	ac19      	add	r4, sp, #100	; 0x64
 800bffa:	e72d      	b.n	800be58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800bffc:	4613      	mov	r3, r2
 800bffe:	e744      	b.n	800be8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800c000:	4613      	mov	r3, r2
 800c002:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800c006:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800c008:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800c00c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800c010:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800c014:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800c018:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800c01c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800c020:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800c024:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800c026:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800c02a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800c02e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800c032:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800c036:	960e      	str	r6, [sp, #56]	; 0x38
 800c038:	469e      	mov	lr, r3
 800c03a:	461f      	mov	r7, r3
 800c03c:	f04f 0900 	mov.w	r9, #0
 800c040:	2f00      	cmp	r7, #0
 800c042:	d146      	bne.n	800c0d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800c044:	449c      	add	ip, r3
 800c046:	1ad7      	subs	r7, r2, r3
 800c048:	f1b9 0f00 	cmp.w	r9, #0
 800c04c:	d009      	beq.n	800c062 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800c04e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800c052:	9039      	str	r0, [sp, #228]	; 0xe4
 800c054:	913d      	str	r1, [sp, #244]	; 0xf4
 800c056:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800c05a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800c05e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800c062:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800c064:	910e      	str	r1, [sp, #56]	; 0x38
 800c066:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800c06a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800c06e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800c072:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800c076:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800c07a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800c07e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800c082:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800c086:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800c08a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800c08e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800c092:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800c096:	f04f 0800 	mov.w	r8, #0
 800c09a:	f1be 0f00 	cmp.w	lr, #0
 800c09e:	d030      	beq.n	800c102 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800c0a0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c0a2:	4431      	add	r1, r6
 800c0a4:	4549      	cmp	r1, r9
 800c0a6:	4450      	add	r0, sl
 800c0a8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800c0ac:	ee37 7a04 	vadd.f32	s14, s14, s8
 800c0b0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800c0b4:	db08      	blt.n	800c0c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800c0b6:	ee77 7a85 	vadd.f32	s15, s15, s10
 800c0ba:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800c0be:	ee37 7a06 	vadd.f32	s14, s14, s12
 800c0c2:	3001      	adds	r0, #1
 800c0c4:	eba1 0109 	sub.w	r1, r1, r9
 800c0c8:	f10e 3eff 	add.w	lr, lr, #4294967295
 800c0cc:	f04f 0801 	mov.w	r8, #1
 800c0d0:	e7e3      	b.n	800c09a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800c0d2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c0d4:	4431      	add	r1, r6
 800c0d6:	4541      	cmp	r1, r8
 800c0d8:	4450      	add	r0, sl
 800c0da:	ee37 7a24 	vadd.f32	s14, s14, s9
 800c0de:	ee77 7a84 	vadd.f32	s15, s15, s8
 800c0e2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800c0e6:	db08      	blt.n	800c0fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800c0e8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800c0ec:	ee37 7a25 	vadd.f32	s14, s14, s11
 800c0f0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800c0f4:	3001      	adds	r0, #1
 800c0f6:	eba1 0108 	sub.w	r1, r1, r8
 800c0fa:	3f01      	subs	r7, #1
 800c0fc:	f04f 0901 	mov.w	r9, #1
 800c100:	e79e      	b.n	800c040 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800c102:	449c      	add	ip, r3
 800c104:	1aff      	subs	r7, r7, r3
 800c106:	f1b8 0f00 	cmp.w	r8, #0
 800c10a:	d009      	beq.n	800c120 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800c10c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800c110:	9019      	str	r0, [sp, #100]	; 0x64
 800c112:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800c116:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800c11a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800c11e:	911d      	str	r1, [sp, #116]	; 0x74
 800c120:	1ad2      	subs	r2, r2, r3
 800c122:	e6b5      	b.n	800be90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800c124:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800c126:	681b      	ldr	r3, [r3, #0]
 800c128:	b923      	cbnz	r3, 800c134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c12a:	4b04      	ldr	r3, [pc, #16]	; (800c13c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800c12c:	6818      	ldr	r0, [r3, #0]
 800c12e:	6803      	ldr	r3, [r0, #0]
 800c130:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c132:	4798      	blx	r3
 800c134:	b05b      	add	sp, #364	; 0x16c
 800c136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c13a:	bf00      	nop
 800c13c:	2000a600 	.word	0x2000a600

0800c140 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800c140:	b570      	push	{r4, r5, r6, lr}
 800c142:	4604      	mov	r4, r0
 800c144:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800c148:	9804      	ldr	r0, [sp, #16]
 800c14a:	6061      	str	r1, [r4, #4]
 800c14c:	2500      	movs	r5, #0
 800c14e:	8025      	strh	r5, [r4, #0]
 800c150:	7223      	strb	r3, [r4, #8]
 800c152:	7266      	strb	r6, [r4, #9]
 800c154:	60e0      	str	r0, [r4, #12]
 800c156:	8222      	strh	r2, [r4, #16]
 800c158:	8265      	strh	r5, [r4, #18]
 800c15a:	82a5      	strh	r5, [r4, #20]
 800c15c:	82e5      	strh	r5, [r4, #22]
 800c15e:	8325      	strh	r5, [r4, #24]
 800c160:	8365      	strh	r5, [r4, #26]
 800c162:	83a5      	strh	r5, [r4, #28]
 800c164:	77a5      	strb	r5, [r4, #30]
 800c166:	b32e      	cbz	r6, 800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800c168:	6803      	ldr	r3, [r0, #0]
 800c16a:	695b      	ldr	r3, [r3, #20]
 800c16c:	4798      	blx	r3
 800c16e:	4606      	mov	r6, r0
 800c170:	b300      	cbz	r0, 800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800c172:	68e0      	ldr	r0, [r4, #12]
 800c174:	6803      	ldr	r3, [r0, #0]
 800c176:	4631      	mov	r1, r6
 800c178:	68db      	ldr	r3, [r3, #12]
 800c17a:	4798      	blx	r3
 800c17c:	4605      	mov	r5, r0
 800c17e:	b1c8      	cbz	r0, 800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800c180:	7b43      	ldrb	r3, [r0, #13]
 800c182:	7a82      	ldrb	r2, [r0, #10]
 800c184:	005b      	lsls	r3, r3, #1
 800c186:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c18a:	4313      	orrs	r3, r2
 800c18c:	83a3      	strh	r3, [r4, #28]
 800c18e:	7a63      	ldrb	r3, [r4, #9]
 800c190:	2b04      	cmp	r3, #4
 800c192:	d10f      	bne.n	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800c194:	68e0      	ldr	r0, [r4, #12]
 800c196:	6803      	ldr	r3, [r0, #0]
 800c198:	462a      	mov	r2, r5
 800c19a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c19c:	4631      	mov	r1, r6
 800c19e:	4798      	blx	r3
 800c1a0:	7b6b      	ldrb	r3, [r5, #13]
 800c1a2:	005b      	lsls	r3, r3, #1
 800c1a4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c1a8:	7aab      	ldrb	r3, [r5, #10]
 800c1aa:	4313      	orrs	r3, r2
 800c1ac:	4418      	add	r0, r3
 800c1ae:	8ba3      	ldrh	r3, [r4, #28]
 800c1b0:	4418      	add	r0, r3
 800c1b2:	83a0      	strh	r0, [r4, #28]
 800c1b4:	4620      	mov	r0, r4
 800c1b6:	bd70      	pop	{r4, r5, r6, pc}

0800c1b8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800c1b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1bc:	2400      	movs	r4, #0
 800c1be:	b085      	sub	sp, #20
 800c1c0:	4681      	mov	r9, r0
 800c1c2:	4688      	mov	r8, r1
 800c1c4:	4692      	mov	sl, r2
 800c1c6:	469b      	mov	fp, r3
 800c1c8:	4627      	mov	r7, r4
 800c1ca:	4625      	mov	r5, r4
 800c1cc:	4626      	mov	r6, r4
 800c1ce:	4554      	cmp	r4, sl
 800c1d0:	da2a      	bge.n	800c228 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c1d2:	2300      	movs	r3, #0
 800c1d4:	9303      	str	r3, [sp, #12]
 800c1d6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c1da:	429d      	cmp	r5, r3
 800c1dc:	d004      	beq.n	800c1e8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800c1de:	f242 030b 	movw	r3, #8203	; 0x200b
 800c1e2:	429d      	cmp	r5, r3
 800c1e4:	bf18      	it	ne
 800c1e6:	462f      	movne	r7, r5
 800c1e8:	ab03      	add	r3, sp, #12
 800c1ea:	4642      	mov	r2, r8
 800c1ec:	4659      	mov	r1, fp
 800c1ee:	4648      	mov	r0, r9
 800c1f0:	f002 feec 	bl	800efcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c1f4:	4605      	mov	r5, r0
 800c1f6:	b1b8      	cbz	r0, 800c228 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c1f8:	280a      	cmp	r0, #10
 800c1fa:	d015      	beq.n	800c228 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800c1fc:	9a03      	ldr	r2, [sp, #12]
 800c1fe:	b18a      	cbz	r2, 800c224 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800c200:	7b50      	ldrb	r0, [r2, #13]
 800c202:	7a93      	ldrb	r3, [r2, #10]
 800c204:	8895      	ldrh	r5, [r2, #4]
 800c206:	0040      	lsls	r0, r0, #1
 800c208:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c20c:	4303      	orrs	r3, r0
 800c20e:	9301      	str	r3, [sp, #4]
 800c210:	f8d8 3000 	ldr.w	r3, [r8]
 800c214:	4639      	mov	r1, r7
 800c216:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c218:	4640      	mov	r0, r8
 800c21a:	4798      	blx	r3
 800c21c:	9b01      	ldr	r3, [sp, #4]
 800c21e:	4418      	add	r0, r3
 800c220:	4406      	add	r6, r0
 800c222:	b2b6      	uxth	r6, r6
 800c224:	3401      	adds	r4, #1
 800c226:	e7d2      	b.n	800c1ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800c228:	4630      	mov	r0, r6
 800c22a:	b005      	add	sp, #20
 800c22c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c230 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800c230:	2a02      	cmp	r2, #2
 800c232:	b530      	push	{r4, r5, lr}
 800c234:	d011      	beq.n	800c25a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800c236:	2a03      	cmp	r2, #3
 800c238:	d01c      	beq.n	800c274 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800c23a:	2a01      	cmp	r2, #1
 800c23c:	d10c      	bne.n	800c258 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c23e:	888b      	ldrh	r3, [r1, #4]
 800c240:	8801      	ldrh	r1, [r0, #0]
 800c242:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800c246:	8844      	ldrh	r4, [r0, #2]
 800c248:	8004      	strh	r4, [r0, #0]
 800c24a:	1a5b      	subs	r3, r3, r1
 800c24c:	1a9b      	subs	r3, r3, r2
 800c24e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c252:	8043      	strh	r3, [r0, #2]
 800c254:	8081      	strh	r1, [r0, #4]
 800c256:	80c2      	strh	r2, [r0, #6]
 800c258:	bd30      	pop	{r4, r5, pc}
 800c25a:	88cb      	ldrh	r3, [r1, #6]
 800c25c:	8842      	ldrh	r2, [r0, #2]
 800c25e:	1a9b      	subs	r3, r3, r2
 800c260:	88c2      	ldrh	r2, [r0, #6]
 800c262:	1a9b      	subs	r3, r3, r2
 800c264:	888a      	ldrh	r2, [r1, #4]
 800c266:	8801      	ldrh	r1, [r0, #0]
 800c268:	8043      	strh	r3, [r0, #2]
 800c26a:	1a52      	subs	r2, r2, r1
 800c26c:	8881      	ldrh	r1, [r0, #4]
 800c26e:	1a52      	subs	r2, r2, r1
 800c270:	8002      	strh	r2, [r0, #0]
 800c272:	e7f1      	b.n	800c258 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c274:	88cb      	ldrh	r3, [r1, #6]
 800c276:	8841      	ldrh	r1, [r0, #2]
 800c278:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800c27c:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c280:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800c284:	8045      	strh	r5, [r0, #2]
 800c286:	1a5b      	subs	r3, r3, r1
 800c288:	1a9b      	subs	r3, r3, r2
 800c28a:	8003      	strh	r3, [r0, #0]
 800c28c:	8082      	strh	r2, [r0, #4]
 800c28e:	80c4      	strh	r4, [r0, #6]
 800c290:	e7e2      	b.n	800c258 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800c292 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800c292:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c296:	b09f      	sub	sp, #124	; 0x7c
 800c298:	9116      	str	r1, [sp, #88]	; 0x58
 800c29a:	9317      	str	r3, [sp, #92]	; 0x5c
 800c29c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c29e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c2a0:	8809      	ldrh	r1, [r1, #0]
 800c2a2:	889b      	ldrh	r3, [r3, #4]
 800c2a4:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800c2a8:	9212      	str	r2, [sp, #72]	; 0x48
 800c2aa:	440b      	add	r3, r1
 800c2ac:	b21b      	sxth	r3, r3
 800c2ae:	9310      	str	r3, [sp, #64]	; 0x40
 800c2b0:	f8d8 3000 	ldr.w	r3, [r8]
 800c2b4:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800c2b8:	7a59      	ldrb	r1, [r3, #9]
 800c2ba:	7a1b      	ldrb	r3, [r3, #8]
 800c2bc:	9011      	str	r0, [sp, #68]	; 0x44
 800c2be:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800c2c2:	9114      	str	r1, [sp, #80]	; 0x50
 800c2c4:	9315      	str	r3, [sp, #84]	; 0x54
 800c2c6:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800c2ca:	2a00      	cmp	r2, #0
 800c2cc:	d067      	beq.n	800c39e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 800c2ce:	f898 3010 	ldrb.w	r3, [r8, #16]
 800c2d2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800c2d4:	2b04      	cmp	r3, #4
 800c2d6:	bf14      	ite	ne
 800c2d8:	2301      	movne	r3, #1
 800c2da:	2302      	moveq	r3, #2
 800c2dc:	4413      	add	r3, r2
 800c2de:	f04f 0900 	mov.w	r9, #0
 800c2e2:	930f      	str	r3, [sp, #60]	; 0x3c
 800c2e4:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800c2e8:	464c      	mov	r4, r9
 800c2ea:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800c2ee:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800c2f2:	4293      	cmp	r3, r2
 800c2f4:	f280 808c 	bge.w	800c410 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800c2f8:	2300      	movs	r3, #0
 800c2fa:	931c      	str	r3, [sp, #112]	; 0x70
 800c2fc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c300:	429c      	cmp	r4, r3
 800c302:	d006      	beq.n	800c312 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 800c304:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c306:	f242 020b 	movw	r2, #8203	; 0x200b
 800c30a:	4294      	cmp	r4, r2
 800c30c:	bf18      	it	ne
 800c30e:	4623      	movne	r3, r4
 800c310:	930d      	str	r3, [sp, #52]	; 0x34
 800c312:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c314:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800c316:	f8d8 2000 	ldr.w	r2, [r8]
 800c31a:	428b      	cmp	r3, r1
 800c31c:	db41      	blt.n	800c3a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 800c31e:	6813      	ldr	r3, [r2, #0]
 800c320:	4610      	mov	r0, r2
 800c322:	695b      	ldr	r3, [r3, #20]
 800c324:	4798      	blx	r3
 800c326:	4604      	mov	r4, r0
 800c328:	f8d8 0000 	ldr.w	r0, [r8]
 800c32c:	6803      	ldr	r3, [r0, #0]
 800c32e:	aa1d      	add	r2, sp, #116	; 0x74
 800c330:	689e      	ldr	r6, [r3, #8]
 800c332:	4621      	mov	r1, r4
 800c334:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800c338:	47b0      	blx	r6
 800c33a:	901c      	str	r0, [sp, #112]	; 0x70
 800c33c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c340:	429c      	cmp	r4, r3
 800c342:	f000 80e9 	beq.w	800c518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800c346:	f242 030b 	movw	r3, #8203	; 0x200b
 800c34a:	429c      	cmp	r4, r3
 800c34c:	f000 80e4 	beq.w	800c518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800c350:	2c00      	cmp	r4, #0
 800c352:	f000 80f6 	beq.w	800c542 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800c356:	2c0a      	cmp	r4, #10
 800c358:	d060      	beq.n	800c41c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800c35a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c35c:	b36a      	cbz	r2, 800c3ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 800c35e:	8894      	ldrh	r4, [r2, #4]
 800c360:	f1bb 0f00 	cmp.w	fp, #0
 800c364:	d03b      	beq.n	800c3de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 800c366:	f892 900d 	ldrb.w	r9, [r2, #13]
 800c36a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800c36e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800c372:	f892 900a 	ldrb.w	r9, [r2, #10]
 800c376:	f1bb 0f01 	cmp.w	fp, #1
 800c37a:	ea49 0903 	orr.w	r9, r9, r3
 800c37e:	d134      	bne.n	800c3ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 800c380:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c382:	eba5 0509 	sub.w	r5, r5, r9
 800c386:	2b00      	cmp	r3, #0
 800c388:	d14f      	bne.n	800c42a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800c38a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800c38c:	eb09 0305 	add.w	r3, r9, r5
 800c390:	4413      	add	r3, r2
 800c392:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800c394:	f9b2 2000 	ldrsh.w	r2, [r2]
 800c398:	4293      	cmp	r3, r2
 800c39a:	da51      	bge.n	800c440 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800c39c:	e038      	b.n	800c410 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800c39e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c3a0:	e79d      	b.n	800c2de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800c3a2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800c3a6:	9301      	str	r3, [sp, #4]
 800c3a8:	ab1d      	add	r3, sp, #116	; 0x74
 800c3aa:	9300      	str	r3, [sp, #0]
 800c3ac:	4659      	mov	r1, fp
 800c3ae:	ab1c      	add	r3, sp, #112	; 0x70
 800c3b0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c3b2:	f002 fe63 	bl	800f07c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800c3b6:	4604      	mov	r4, r0
 800c3b8:	e7c0      	b.n	800c33c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 800c3ba:	f8d8 0000 	ldr.w	r0, [r8]
 800c3be:	6803      	ldr	r3, [r0, #0]
 800c3c0:	691b      	ldr	r3, [r3, #16]
 800c3c2:	4798      	blx	r3
 800c3c4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c3c8:	4298      	cmp	r0, r3
 800c3ca:	f000 80a5 	beq.w	800c518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800c3ce:	f242 030b 	movw	r3, #8203	; 0x200b
 800c3d2:	4298      	cmp	r0, r3
 800c3d4:	f000 80a0 	beq.w	800c518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800c3d8:	f1bb 0f00 	cmp.w	fp, #0
 800c3dc:	d100      	bne.n	800c3e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800c3de:	444d      	add	r5, r9
 800c3e0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800c3e2:	2a00      	cmp	r2, #0
 800c3e4:	d1bf      	bne.n	800c366 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 800c3e6:	4691      	mov	r9, r2
 800c3e8:	e096      	b.n	800c518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800c3ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c3ec:	2b00      	cmp	r3, #0
 800c3ee:	f000 80aa 	beq.w	800c546 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 800c3f2:	f1bb 0f00 	cmp.w	fp, #0
 800c3f6:	d118      	bne.n	800c42a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800c3f8:	f8d8 0000 	ldr.w	r0, [r8]
 800c3fc:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c3fe:	6803      	ldr	r3, [r0, #0]
 800c400:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c402:	4798      	blx	r3
 800c404:	4405      	add	r5, r0
 800c406:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800c408:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800c40a:	1aeb      	subs	r3, r5, r3
 800c40c:	4293      	cmp	r3, r2
 800c40e:	dd17      	ble.n	800c440 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800c410:	2c00      	cmp	r4, #0
 800c412:	f000 8096 	beq.w	800c542 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800c416:	2c0a      	cmp	r4, #10
 800c418:	f040 8084 	bne.w	800c524 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800c41c:	240a      	movs	r4, #10
 800c41e:	fab4 f084 	clz	r0, r4
 800c422:	0940      	lsrs	r0, r0, #5
 800c424:	b01f      	add	sp, #124	; 0x7c
 800c426:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c42a:	f8d8 0000 	ldr.w	r0, [r8]
 800c42e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c430:	6803      	ldr	r3, [r0, #0]
 800c432:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c434:	4798      	blx	r3
 800c436:	f1bb 0f01 	cmp.w	fp, #1
 800c43a:	eba5 0500 	sub.w	r5, r5, r0
 800c43e:	d0a4      	beq.n	800c38a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 800c440:	981c      	ldr	r0, [sp, #112]	; 0x70
 800c442:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c444:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800c448:	f9b3 6000 	ldrsh.w	r6, [r3]
 800c44c:	7b43      	ldrb	r3, [r0, #13]
 800c44e:	015b      	lsls	r3, r3, #5
 800c450:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c454:	7983      	ldrb	r3, [r0, #6]
 800c456:	4429      	add	r1, r5
 800c458:	4313      	orrs	r3, r2
 800c45a:	440b      	add	r3, r1
 800c45c:	42b3      	cmp	r3, r6
 800c45e:	db5b      	blt.n	800c518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800c460:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c462:	4299      	cmp	r1, r3
 800c464:	da58      	bge.n	800c518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800c466:	f8d8 0000 	ldr.w	r0, [r8]
 800c46a:	6803      	ldr	r3, [r0, #0]
 800c46c:	42ae      	cmp	r6, r5
 800c46e:	bfc8      	it	gt
 800c470:	1b76      	subgt	r6, r6, r5
 800c472:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c474:	bfcc      	ite	gt
 800c476:	b2b6      	uxthgt	r6, r6
 800c478:	2600      	movle	r6, #0
 800c47a:	4798      	blx	r3
 800c47c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c47e:	7b5a      	ldrb	r2, [r3, #13]
 800c480:	00d1      	lsls	r1, r2, #3
 800c482:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800c486:	7a19      	ldrb	r1, [r3, #8]
 800c488:	4339      	orrs	r1, r7
 800c48a:	0657      	lsls	r7, r2, #25
 800c48c:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800c48e:	bf44      	itt	mi
 800c490:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800c494:	b209      	sxthmi	r1, r1
 800c496:	19c7      	adds	r7, r0, r7
 800c498:	1a7f      	subs	r7, r7, r1
 800c49a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c49c:	b2bf      	uxth	r7, r7
 800c49e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c4a2:	fa0f fa87 	sxth.w	sl, r7
 800c4a6:	4551      	cmp	r1, sl
 800c4a8:	dd3a      	ble.n	800c520 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800c4aa:	0112      	lsls	r2, r2, #4
 800c4ac:	79d8      	ldrb	r0, [r3, #7]
 800c4ae:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800c4b2:	4302      	orrs	r2, r0
 800c4b4:	4492      	add	sl, r2
 800c4b6:	4551      	cmp	r1, sl
 800c4b8:	dc2e      	bgt.n	800c518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800c4ba:	1bcf      	subs	r7, r1, r7
 800c4bc:	b2bf      	uxth	r7, r7
 800c4be:	468a      	mov	sl, r1
 800c4c0:	9319      	str	r3, [sp, #100]	; 0x64
 800c4c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c4c4:	f8d8 0000 	ldr.w	r0, [r8]
 800c4c8:	681a      	ldr	r2, [r3, #0]
 800c4ca:	6801      	ldr	r1, [r0, #0]
 800c4cc:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800c4ce:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800c4d0:	9313      	str	r3, [sp, #76]	; 0x4c
 800c4d2:	9218      	str	r2, [sp, #96]	; 0x60
 800c4d4:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800c4d6:	4788      	blx	r1
 800c4d8:	f898 1006 	ldrb.w	r1, [r8, #6]
 800c4dc:	910b      	str	r1, [sp, #44]	; 0x2c
 800c4de:	f898 100e 	ldrb.w	r1, [r8, #14]
 800c4e2:	910a      	str	r1, [sp, #40]	; 0x28
 800c4e4:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800c4e8:	9109      	str	r1, [sp, #36]	; 0x24
 800c4ea:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c4ec:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800c4f0:	9305      	str	r3, [sp, #20]
 800c4f2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c4f4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800c4f6:	9206      	str	r2, [sp, #24]
 800c4f8:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800c4fc:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800c500:	e9cd a601 	strd	sl, r6, [sp, #4]
 800c504:	442e      	add	r6, r5
 800c506:	b236      	sxth	r6, r6
 800c508:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c50a:	9600      	str	r6, [sp, #0]
 800c50c:	681a      	ldr	r2, [r3, #0]
 800c50e:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c510:	685b      	ldr	r3, [r3, #4]
 800c512:	9811      	ldr	r0, [sp, #68]	; 0x44
 800c514:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800c516:	47b0      	blx	r6
 800c518:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c51a:	3301      	adds	r3, #1
 800c51c:	930e      	str	r3, [sp, #56]	; 0x38
 800c51e:	e6e6      	b.n	800c2ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800c520:	2700      	movs	r7, #0
 800c522:	e7cd      	b.n	800c4c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x22e>
 800c524:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800c526:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c528:	3501      	adds	r5, #1
 800c52a:	429d      	cmp	r5, r3
 800c52c:	f6bf af77 	bge.w	800c41e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800c530:	4659      	mov	r1, fp
 800c532:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c534:	f7f6 fb50 	bl	8002bd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c538:	4604      	mov	r4, r0
 800c53a:	b110      	cbz	r0, 800c542 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800c53c:	280a      	cmp	r0, #10
 800c53e:	d1f2      	bne.n	800c526 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800c540:	e76c      	b.n	800c41c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800c542:	2400      	movs	r4, #0
 800c544:	e76b      	b.n	800c41e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800c546:	f1bb 0f00 	cmp.w	fp, #0
 800c54a:	f43f af5c 	beq.w	800c406 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 800c54e:	e777      	b.n	800c440 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800c550 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800c550:	b530      	push	{r4, r5, lr}
 800c552:	8a44      	ldrh	r4, [r0, #18]
 800c554:	8ac5      	ldrh	r5, [r0, #22]
 800c556:	82c3      	strh	r3, [r0, #22]
 800c558:	442c      	add	r4, r5
 800c55a:	1ae4      	subs	r4, r4, r3
 800c55c:	8244      	strh	r4, [r0, #18]
 800c55e:	8b03      	ldrh	r3, [r0, #24]
 800c560:	8a84      	ldrh	r4, [r0, #20]
 800c562:	4422      	add	r2, r4
 800c564:	440c      	add	r4, r1
 800c566:	1a59      	subs	r1, r3, r1
 800c568:	8342      	strh	r2, [r0, #26]
 800c56a:	8284      	strh	r4, [r0, #20]
 800c56c:	8301      	strh	r1, [r0, #24]
 800c56e:	bd30      	pop	{r4, r5, pc}

0800c570 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800c570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c574:	7a43      	ldrb	r3, [r0, #9]
 800c576:	1eda      	subs	r2, r3, #3
 800c578:	b087      	sub	sp, #28
 800c57a:	4604      	mov	r4, r0
 800c57c:	b2d2      	uxtb	r2, r2
 800c57e:	460f      	mov	r7, r1
 800c580:	2900      	cmp	r1, #0
 800c582:	d036      	beq.n	800c5f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800c584:	2a01      	cmp	r2, #1
 800c586:	d932      	bls.n	800c5ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800c588:	1e58      	subs	r0, r3, #1
 800c58a:	f1d0 0b00 	rsbs	fp, r0, #0
 800c58e:	eb4b 0b00 	adc.w	fp, fp, r0
 800c592:	1e99      	subs	r1, r3, #2
 800c594:	424b      	negs	r3, r1
 800c596:	414b      	adcs	r3, r1
 800c598:	9303      	str	r3, [sp, #12]
 800c59a:	2300      	movs	r3, #0
 800c59c:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800c5a0:	2500      	movs	r5, #0
 800c5a2:	8265      	strh	r5, [r4, #18]
 800c5a4:	82a5      	strh	r5, [r4, #20]
 800c5a6:	46a9      	mov	r9, r5
 800c5a8:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800c5ac:	2300      	movs	r3, #0
 800c5ae:	9305      	str	r3, [sp, #20]
 800c5b0:	8823      	ldrh	r3, [r4, #0]
 800c5b2:	2b20      	cmp	r3, #32
 800c5b4:	d02b      	beq.n	800c60e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800c5b6:	eba3 020a 	sub.w	r2, r3, sl
 800c5ba:	4256      	negs	r6, r2
 800c5bc:	4156      	adcs	r6, r2
 800c5be:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c5c2:	4293      	cmp	r3, r2
 800c5c4:	d004      	beq.n	800c5d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800c5c6:	4553      	cmp	r3, sl
 800c5c8:	bf16      	itet	ne
 800c5ca:	4699      	movne	r9, r3
 800c5cc:	2601      	moveq	r6, #1
 800c5ce:	2600      	movne	r6, #0
 800c5d0:	ab05      	add	r3, sp, #20
 800c5d2:	68e2      	ldr	r2, [r4, #12]
 800c5d4:	7a21      	ldrb	r1, [r4, #8]
 800c5d6:	6860      	ldr	r0, [r4, #4]
 800c5d8:	f002 fcf8 	bl	800efcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c5dc:	8020      	strh	r0, [r4, #0]
 800c5de:	b9c8      	cbnz	r0, 800c614 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800c5e0:	8b22      	ldrh	r2, [r4, #24]
 800c5e2:	2300      	movs	r3, #0
 800c5e4:	4611      	mov	r1, r2
 800c5e6:	4620      	mov	r0, r4
 800c5e8:	f7ff ffb2 	bl	800c550 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c5ec:	e066      	b.n	800c6bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c5ee:	468b      	mov	fp, r1
 800c5f0:	e7cf      	b.n	800c592 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800c5f2:	3b01      	subs	r3, #1
 800c5f4:	2a01      	cmp	r2, #1
 800c5f6:	bf8c      	ite	hi
 800c5f8:	2200      	movhi	r2, #0
 800c5fa:	2201      	movls	r2, #1
 800c5fc:	2b01      	cmp	r3, #1
 800c5fe:	bf8c      	ite	hi
 800c600:	2300      	movhi	r3, #0
 800c602:	2301      	movls	r3, #1
 800c604:	9202      	str	r2, [sp, #8]
 800c606:	9301      	str	r3, [sp, #4]
 800c608:	9103      	str	r1, [sp, #12]
 800c60a:	468b      	mov	fp, r1
 800c60c:	e7c8      	b.n	800c5a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800c60e:	4699      	mov	r9, r3
 800c610:	2601      	movs	r6, #1
 800c612:	e7dd      	b.n	800c5d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800c614:	8ae3      	ldrh	r3, [r4, #22]
 800c616:	280a      	cmp	r0, #10
 800c618:	f103 0301 	add.w	r3, r3, #1
 800c61c:	82e3      	strh	r3, [r4, #22]
 800c61e:	d0df      	beq.n	800c5e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800c620:	9a05      	ldr	r2, [sp, #20]
 800c622:	bb42      	cbnz	r2, 800c676 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800c624:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c628:	4298      	cmp	r0, r3
 800c62a:	d001      	beq.n	800c630 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c62c:	4550      	cmp	r0, sl
 800c62e:	d1bd      	bne.n	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c630:	8823      	ldrh	r3, [r4, #0]
 800c632:	8b21      	ldrh	r1, [r4, #24]
 800c634:	2b20      	cmp	r3, #32
 800c636:	d001      	beq.n	800c63c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800c638:	4553      	cmp	r3, sl
 800c63a:	d131      	bne.n	800c6a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800c63c:	2e00      	cmp	r6, #0
 800c63e:	bf0a      	itet	eq
 800c640:	460d      	moveq	r5, r1
 800c642:	4630      	movne	r0, r6
 800c644:	2001      	moveq	r0, #1
 800c646:	440a      	add	r2, r1
 800c648:	8aa3      	ldrh	r3, [r4, #20]
 800c64a:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c64e:	b292      	uxth	r2, r2
 800c650:	8322      	strh	r2, [r4, #24]
 800c652:	4413      	add	r3, r2
 800c654:	2f00      	cmp	r7, #0
 800c656:	d03a      	beq.n	800c6ce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800c658:	f1bb 0f00 	cmp.w	fp, #0
 800c65c:	d102      	bne.n	800c664 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800c65e:	9903      	ldr	r1, [sp, #12]
 800c660:	b301      	cbz	r1, 800c6a4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c662:	b1f8      	cbz	r0, 800c6a4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800c664:	8ba1      	ldrh	r1, [r4, #28]
 800c666:	4419      	add	r1, r3
 800c668:	458c      	cmp	ip, r1
 800c66a:	da2a      	bge.n	800c6c2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c66c:	8a61      	ldrh	r1, [r4, #18]
 800c66e:	b341      	cbz	r1, 800c6c2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800c670:	4563      	cmp	r3, ip
 800c672:	dd9b      	ble.n	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c674:	e01c      	b.n	800c6b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800c676:	8893      	ldrh	r3, [r2, #4]
 800c678:	8023      	strh	r3, [r4, #0]
 800c67a:	f892 800d 	ldrb.w	r8, [r2, #13]
 800c67e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800c682:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800c686:	f892 800a 	ldrb.w	r8, [r2, #10]
 800c68a:	ea48 0800 	orr.w	r8, r8, r0
 800c68e:	68e0      	ldr	r0, [r4, #12]
 800c690:	6803      	ldr	r3, [r0, #0]
 800c692:	4649      	mov	r1, r9
 800c694:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c696:	4798      	blx	r3
 800c698:	eb08 0200 	add.w	r2, r8, r0
 800c69c:	b292      	uxth	r2, r2
 800c69e:	e7c7      	b.n	800c630 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800c6a0:	2000      	movs	r0, #0
 800c6a2:	e7d0      	b.n	800c646 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800c6a4:	4563      	cmp	r3, ip
 800c6a6:	dd81      	ble.n	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c6a8:	8a63      	ldrh	r3, [r4, #18]
 800c6aa:	2b00      	cmp	r3, #0
 800c6ac:	f43f af7e 	beq.w	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c6b0:	2301      	movs	r3, #1
 800c6b2:	77a3      	strb	r3, [r4, #30]
 800c6b4:	8ba2      	ldrh	r2, [r4, #28]
 800c6b6:	8b63      	ldrh	r3, [r4, #26]
 800c6b8:	4413      	add	r3, r2
 800c6ba:	8363      	strh	r3, [r4, #26]
 800c6bc:	b007      	add	sp, #28
 800c6be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6c2:	2300      	movs	r3, #0
 800c6c4:	4611      	mov	r1, r2
 800c6c6:	4620      	mov	r0, r4
 800c6c8:	f7ff ff42 	bl	800c550 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c6cc:	e76e      	b.n	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c6ce:	4563      	cmp	r3, ip
 800c6d0:	dd14      	ble.n	800c6fc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800c6d2:	9b02      	ldr	r3, [sp, #8]
 800c6d4:	b113      	cbz	r3, 800c6dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800c6d6:	2301      	movs	r3, #1
 800c6d8:	460a      	mov	r2, r1
 800c6da:	e783      	b.n	800c5e4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800c6dc:	9b01      	ldr	r3, [sp, #4]
 800c6de:	2b00      	cmp	r3, #0
 800c6e0:	f43f af64 	beq.w	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c6e4:	2800      	cmp	r0, #0
 800c6e6:	f47f af61 	bne.w	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c6ea:	b116      	cbz	r6, 800c6f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800c6ec:	2301      	movs	r3, #1
 800c6ee:	462a      	mov	r2, r5
 800c6f0:	e779      	b.n	800c5e6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800c6f2:	8a63      	ldrh	r3, [r4, #18]
 800c6f4:	2b00      	cmp	r3, #0
 800c6f6:	f43f af59 	beq.w	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c6fa:	e7df      	b.n	800c6bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800c6fc:	2800      	cmp	r0, #0
 800c6fe:	f47f af55 	bne.w	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c702:	2e00      	cmp	r6, #0
 800c704:	f43f af52 	beq.w	800c5ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800c708:	2301      	movs	r3, #1
 800c70a:	462a      	mov	r2, r5
 800c70c:	e7db      	b.n	800c6c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800c70e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c70e:	b530      	push	{r4, r5, lr}
 800c710:	4605      	mov	r5, r0
 800c712:	b08b      	sub	sp, #44	; 0x2c
 800c714:	b191      	cbz	r1, 800c73c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800c716:	e9cd 3100 	strd	r3, r1, [sp]
 800c71a:	4613      	mov	r3, r2
 800c71c:	4601      	mov	r1, r0
 800c71e:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800c722:	a802      	add	r0, sp, #8
 800c724:	f7ff fd0c 	bl	800c140 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c728:	2401      	movs	r4, #1
 800c72a:	2100      	movs	r1, #0
 800c72c:	a802      	add	r0, sp, #8
 800c72e:	f7ff ff1f 	bl	800c570 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c732:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800c736:	b163      	cbz	r3, 800c752 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c738:	3401      	adds	r4, #1
 800c73a:	e7f6      	b.n	800c72a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800c73c:	f002 fd40 	bl	800f1c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c740:	2401      	movs	r4, #1
 800c742:	280a      	cmp	r0, #10
 800c744:	4628      	mov	r0, r5
 800c746:	bf08      	it	eq
 800c748:	3401      	addeq	r4, #1
 800c74a:	f002 fd39 	bl	800f1c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c74e:	2800      	cmp	r0, #0
 800c750:	d1f7      	bne.n	800c742 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c752:	b2a0      	uxth	r0, r4
 800c754:	b00b      	add	sp, #44	; 0x2c
 800c756:	bd30      	pop	{r4, r5, pc}

0800c758 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c75c:	b0e5      	sub	sp, #404	; 0x194
 800c75e:	4689      	mov	r9, r1
 800c760:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800c764:	900a      	str	r0, [sp, #40]	; 0x28
 800c766:	461c      	mov	r4, r3
 800c768:	f1ba 0f00 	cmp.w	sl, #0
 800c76c:	f000 80b4 	beq.w	800c8d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c770:	681b      	ldr	r3, [r3, #0]
 800c772:	2b00      	cmp	r3, #0
 800c774:	f000 80b0 	beq.w	800c8d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c778:	7ba3      	ldrb	r3, [r4, #14]
 800c77a:	2b00      	cmp	r3, #0
 800c77c:	f000 80ac 	beq.w	800c8d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c780:	6810      	ldr	r0, [r2, #0]
 800c782:	6851      	ldr	r1, [r2, #4]
 800c784:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800c788:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800c78c:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800c790:	4643      	mov	r3, r8
 800c792:	c303      	stmia	r3!, {r0, r1}
 800c794:	2500      	movs	r5, #0
 800c796:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800c79a:	79a2      	ldrb	r2, [r4, #6]
 800c79c:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c7a0:	a90f      	add	r1, sp, #60	; 0x3c
 800c7a2:	4640      	mov	r0, r8
 800c7a4:	950f      	str	r5, [sp, #60]	; 0x3c
 800c7a6:	f7ff fd43 	bl	800c230 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c7aa:	a90f      	add	r1, sp, #60	; 0x3c
 800c7ac:	4608      	mov	r0, r1
 800c7ae:	79a2      	ldrb	r2, [r4, #6]
 800c7b0:	af19      	add	r7, sp, #100	; 0x64
 800c7b2:	f7ff fd3d 	bl	800c230 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c7b6:	4638      	mov	r0, r7
 800c7b8:	f002 f88c 	bl	800e8d4 <_ZN8touchgfx12TextProviderC1Ev>
 800c7bc:	6820      	ldr	r0, [r4, #0]
 800c7be:	6803      	ldr	r3, [r0, #0]
 800c7c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c7c2:	4798      	blx	r3
 800c7c4:	4606      	mov	r6, r0
 800c7c6:	6820      	ldr	r0, [r4, #0]
 800c7c8:	6803      	ldr	r3, [r0, #0]
 800c7ca:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c7cc:	4798      	blx	r3
 800c7ce:	4633      	mov	r3, r6
 800c7d0:	9000      	str	r0, [sp, #0]
 800c7d2:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800c7d4:	4651      	mov	r1, sl
 800c7d6:	4638      	mov	r0, r7
 800c7d8:	f002 f8e8 	bl	800e9ac <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c7dc:	6820      	ldr	r0, [r4, #0]
 800c7de:	7923      	ldrb	r3, [r4, #4]
 800c7e0:	9308      	str	r3, [sp, #32]
 800c7e2:	6803      	ldr	r3, [r0, #0]
 800c7e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c7e6:	4798      	blx	r3
 800c7e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c7ec:	181e      	adds	r6, r3, r0
 800c7ee:	42ae      	cmp	r6, r5
 800c7f0:	dd06      	ble.n	800c800 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800c7f2:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800c7f6:	4282      	cmp	r2, r0
 800c7f8:	bfa4      	itt	ge
 800c7fa:	189d      	addge	r5, r3, r2
 800c7fc:	fb95 f5f6 	sdivge	r5, r5, r6
 800c800:	a832      	add	r0, sp, #200	; 0xc8
 800c802:	f002 f867 	bl	800e8d4 <_ZN8touchgfx12TextProviderC1Ev>
 800c806:	7c23      	ldrb	r3, [r4, #16]
 800c808:	b17b      	cbz	r3, 800c82a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800c80a:	6820      	ldr	r0, [r4, #0]
 800c80c:	6803      	ldr	r3, [r0, #0]
 800c80e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c810:	4798      	blx	r3
 800c812:	4683      	mov	fp, r0
 800c814:	6820      	ldr	r0, [r4, #0]
 800c816:	6803      	ldr	r3, [r0, #0]
 800c818:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c81a:	4798      	blx	r3
 800c81c:	465b      	mov	r3, fp
 800c81e:	9000      	str	r0, [sp, #0]
 800c820:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800c822:	4651      	mov	r1, sl
 800c824:	a832      	add	r0, sp, #200	; 0xc8
 800c826:	f002 f8c1 	bl	800e9ac <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c82a:	7be1      	ldrb	r1, [r4, #15]
 800c82c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800c830:	7963      	ldrb	r3, [r4, #5]
 800c832:	1a52      	subs	r2, r2, r1
 800c834:	7c21      	ldrb	r1, [r4, #16]
 800c836:	9101      	str	r1, [sp, #4]
 800c838:	6821      	ldr	r1, [r4, #0]
 800c83a:	9100      	str	r1, [sp, #0]
 800c83c:	b292      	uxth	r2, r2
 800c83e:	a932      	add	r1, sp, #200	; 0xc8
 800c840:	a811      	add	r0, sp, #68	; 0x44
 800c842:	f7ff fc7d 	bl	800c140 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800c846:	7c23      	ldrb	r3, [r4, #16]
 800c848:	b9bb      	cbnz	r3, 800c87a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800c84a:	fa1f fa86 	uxth.w	sl, r6
 800c84e:	2d00      	cmp	r5, #0
 800c850:	dd45      	ble.n	800c8de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800c852:	4638      	mov	r0, r7
 800c854:	f002 fcb4 	bl	800f1c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c858:	2800      	cmp	r0, #0
 800c85a:	d03d      	beq.n	800c8d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c85c:	280a      	cmp	r0, #10
 800c85e:	d1f6      	bne.n	800c84e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800c860:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c864:	4453      	add	r3, sl
 800c866:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c86a:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800c86e:	eba3 030a 	sub.w	r3, r3, sl
 800c872:	3d01      	subs	r5, #1
 800c874:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c878:	e7e9      	b.n	800c84e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800c87a:	0073      	lsls	r3, r6, #1
 800c87c:	9309      	str	r3, [sp, #36]	; 0x24
 800c87e:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800c882:	fa1f fa86 	uxth.w	sl, r6
 800c886:	2d00      	cmp	r5, #0
 800c888:	dd29      	ble.n	800c8de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800c88a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c88e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c890:	428b      	cmp	r3, r1
 800c892:	bfd4      	ite	le
 800c894:	2100      	movle	r1, #0
 800c896:	2101      	movgt	r1, #1
 800c898:	a811      	add	r0, sp, #68	; 0x44
 800c89a:	f7ff fe69 	bl	800c570 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c89e:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800c8a2:	3b01      	subs	r3, #1
 800c8a4:	b29b      	uxth	r3, r3
 800c8a6:	455b      	cmp	r3, fp
 800c8a8:	930b      	str	r3, [sp, #44]	; 0x2c
 800c8aa:	d005      	beq.n	800c8b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800c8ac:	7961      	ldrb	r1, [r4, #5]
 800c8ae:	4638      	mov	r0, r7
 800c8b0:	f7f6 f992 	bl	8002bd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c8b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c8b6:	e7f4      	b.n	800c8a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800c8b8:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c8bc:	4453      	add	r3, sl
 800c8be:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c8c2:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800c8c6:	eba3 030a 	sub.w	r3, r3, sl
 800c8ca:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800c8ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c8d2:	3d01      	subs	r5, #1
 800c8d4:	2b00      	cmp	r3, #0
 800c8d6:	d1d6      	bne.n	800c886 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800c8d8:	b065      	add	sp, #404	; 0x194
 800c8da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8de:	0075      	lsls	r5, r6, #1
 800c8e0:	f04f 0a00 	mov.w	sl, #0
 800c8e4:	7c23      	ldrb	r3, [r4, #16]
 800c8e6:	2b00      	cmp	r3, #0
 800c8e8:	d066      	beq.n	800c9b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800c8ea:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800c8ee:	428d      	cmp	r5, r1
 800c8f0:	bfd4      	ite	le
 800c8f2:	2100      	movle	r1, #0
 800c8f4:	2101      	movgt	r1, #1
 800c8f6:	a811      	add	r0, sp, #68	; 0x44
 800c8f8:	f7ff fe3a 	bl	800c570 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c8fc:	9b08      	ldr	r3, [sp, #32]
 800c8fe:	2b00      	cmp	r3, #0
 800c900:	d055      	beq.n	800c9ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800c902:	f894 b010 	ldrb.w	fp, [r4, #16]
 800c906:	2264      	movs	r2, #100	; 0x64
 800c908:	4639      	mov	r1, r7
 800c90a:	a84b      	add	r0, sp, #300	; 0x12c
 800c90c:	f00f fa70 	bl	801bdf0 <memcpy>
 800c910:	f1bb 0f00 	cmp.w	fp, #0
 800c914:	d058      	beq.n	800c9c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800c916:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800c91a:	7922      	ldrb	r2, [r4, #4]
 800c91c:	2a01      	cmp	r2, #1
 800c91e:	d13c      	bne.n	800c99a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800c920:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800c924:	1ac0      	subs	r0, r0, r3
 800c926:	2302      	movs	r3, #2
 800c928:	fb90 f0f3 	sdiv	r0, r0, r3
 800c92c:	b200      	sxth	r0, r0
 800c92e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c932:	4418      	add	r0, r3
 800c934:	7c23      	ldrb	r3, [r4, #16]
 800c936:	b200      	sxth	r0, r0
 800c938:	2b00      	cmp	r3, #0
 800c93a:	d03a      	beq.n	800c9b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800c93c:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800c940:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800c944:	9000      	str	r0, [sp, #0]
 800c946:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c94a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800c94e:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c950:	e9cd a703 	strd	sl, r7, [sp, #12]
 800c954:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800c958:	464a      	mov	r2, r9
 800c95a:	2100      	movs	r1, #0
 800c95c:	f7ff fc99 	bl	800c292 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c960:	2800      	cmp	r0, #0
 800c962:	d1b9      	bne.n	800c8d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c964:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800c968:	b2b2      	uxth	r2, r6
 800c96a:	4611      	mov	r1, r2
 800c96c:	4413      	add	r3, r2
 800c96e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800c972:	1a52      	subs	r2, r2, r1
 800c974:	7c21      	ldrb	r1, [r4, #16]
 800c976:	b21b      	sxth	r3, r3
 800c978:	b212      	sxth	r2, r2
 800c97a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c97e:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800c982:	b109      	cbz	r1, 800c988 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800c984:	42b2      	cmp	r2, r6
 800c986:	dba7      	blt.n	800c8d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c988:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800c98c:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800c990:	440a      	add	r2, r1
 800c992:	b212      	sxth	r2, r2
 800c994:	4293      	cmp	r3, r2
 800c996:	dda5      	ble.n	800c8e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800c998:	e79e      	b.n	800c8d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800c99a:	2a02      	cmp	r2, #2
 800c99c:	d105      	bne.n	800c9aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800c99e:	7be2      	ldrb	r2, [r4, #15]
 800c9a0:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800c9a4:	1a80      	subs	r0, r0, r2
 800c9a6:	1ac0      	subs	r0, r0, r3
 800c9a8:	e7c0      	b.n	800c92c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800c9aa:	2000      	movs	r0, #0
 800c9ac:	e7bf      	b.n	800c92e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800c9ae:	7be0      	ldrb	r0, [r4, #15]
 800c9b0:	e7bd      	b.n	800c92e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800c9b2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c9b6:	e7c3      	b.n	800c940 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800c9b8:	9b08      	ldr	r3, [sp, #32]
 800c9ba:	2b00      	cmp	r3, #0
 800c9bc:	d0f7      	beq.n	800c9ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800c9be:	2264      	movs	r2, #100	; 0x64
 800c9c0:	4639      	mov	r1, r7
 800c9c2:	a84b      	add	r0, sp, #300	; 0x12c
 800c9c4:	f00f fa14 	bl	801bdf0 <memcpy>
 800c9c8:	2300      	movs	r3, #0
 800c9ca:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c9ce:	6821      	ldr	r1, [r4, #0]
 800c9d0:	a84b      	add	r0, sp, #300	; 0x12c
 800c9d2:	f7ff fbf1 	bl	800c1b8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c9d6:	b203      	sxth	r3, r0
 800c9d8:	e79f      	b.n	800c91a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0800c9da <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c9da:	b510      	push	{r4, lr}
 800c9dc:	2b02      	cmp	r3, #2
 800c9de:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c9e2:	d00b      	beq.n	800c9fc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800c9e4:	2b03      	cmp	r3, #3
 800c9e6:	d00e      	beq.n	800ca06 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800c9e8:	2b01      	cmp	r3, #1
 800c9ea:	d001      	beq.n	800c9f0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800c9ec:	1860      	adds	r0, r4, r1
 800c9ee:	bd10      	pop	{r4, pc}
 800c9f0:	8880      	ldrh	r0, [r0, #4]
 800c9f2:	4420      	add	r0, r4
 800c9f4:	b200      	sxth	r0, r0
 800c9f6:	1a80      	subs	r0, r0, r2
 800c9f8:	3801      	subs	r0, #1
 800c9fa:	e7f8      	b.n	800c9ee <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800c9fc:	8880      	ldrh	r0, [r0, #4]
 800c9fe:	4420      	add	r0, r4
 800ca00:	b200      	sxth	r0, r0
 800ca02:	1a40      	subs	r0, r0, r1
 800ca04:	e7f8      	b.n	800c9f8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ca06:	18a0      	adds	r0, r4, r2
 800ca08:	e7f1      	b.n	800c9ee <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800ca0a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ca0a:	b510      	push	{r4, lr}
 800ca0c:	2b02      	cmp	r3, #2
 800ca0e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800ca12:	d006      	beq.n	800ca22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800ca14:	2b03      	cmp	r3, #3
 800ca16:	d00a      	beq.n	800ca2e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ca18:	2b01      	cmp	r3, #1
 800ca1a:	bf14      	ite	ne
 800ca1c:	18a0      	addne	r0, r4, r2
 800ca1e:	1860      	addeq	r0, r4, r1
 800ca20:	bd10      	pop	{r4, pc}
 800ca22:	88c0      	ldrh	r0, [r0, #6]
 800ca24:	4420      	add	r0, r4
 800ca26:	b200      	sxth	r0, r0
 800ca28:	1a80      	subs	r0, r0, r2
 800ca2a:	3801      	subs	r0, #1
 800ca2c:	e7f8      	b.n	800ca20 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800ca2e:	88c0      	ldrh	r0, [r0, #6]
 800ca30:	4420      	add	r0, r4
 800ca32:	b200      	sxth	r0, r0
 800ca34:	1a40      	subs	r0, r0, r1
 800ca36:	e7f8      	b.n	800ca2a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800ca38 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800ca38:	4b01      	ldr	r3, [pc, #4]	; (800ca40 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800ca3a:	2200      	movs	r2, #0
 800ca3c:	601a      	str	r2, [r3, #0]
 800ca3e:	4770      	bx	lr
 800ca40:	2000a608 	.word	0x2000a608

0800ca44 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800ca44:	4603      	mov	r3, r0
 800ca46:	b1c8      	cbz	r0, 800ca7c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800ca48:	0c02      	lsrs	r2, r0, #16
 800ca4a:	0412      	lsls	r2, r2, #16
 800ca4c:	b9a2      	cbnz	r2, 800ca78 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800ca4e:	0403      	lsls	r3, r0, #16
 800ca50:	2010      	movs	r0, #16
 800ca52:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800ca56:	bf04      	itt	eq
 800ca58:	021b      	lsleq	r3, r3, #8
 800ca5a:	3008      	addeq	r0, #8
 800ca5c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800ca60:	bf04      	itt	eq
 800ca62:	011b      	lsleq	r3, r3, #4
 800ca64:	3004      	addeq	r0, #4
 800ca66:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800ca6a:	bf04      	itt	eq
 800ca6c:	009b      	lsleq	r3, r3, #2
 800ca6e:	3002      	addeq	r0, #2
 800ca70:	2b00      	cmp	r3, #0
 800ca72:	db04      	blt.n	800ca7e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800ca74:	3001      	adds	r0, #1
 800ca76:	4770      	bx	lr
 800ca78:	2000      	movs	r0, #0
 800ca7a:	e7ea      	b.n	800ca52 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800ca7c:	2020      	movs	r0, #32
 800ca7e:	4770      	bx	lr

0800ca80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800ca80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca84:	b087      	sub	sp, #28
 800ca86:	4681      	mov	r9, r0
 800ca88:	4698      	mov	r8, r3
 800ca8a:	4610      	mov	r0, r2
 800ca8c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800ca90:	460d      	mov	r5, r1
 800ca92:	b981      	cbnz	r1, 800cab6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800ca94:	b14b      	cbz	r3, 800caaa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800ca96:	460b      	mov	r3, r1
 800ca98:	e9cd 4700 	strd	r4, r7, [sp]
 800ca9c:	464a      	mov	r2, r9
 800ca9e:	4641      	mov	r1, r8
 800caa0:	f7ff ffee 	bl	800ca80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800caa4:	b007      	add	sp, #28
 800caa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800caaa:	f04f 33ff 	mov.w	r3, #4294967295
 800caae:	603b      	str	r3, [r7, #0]
 800cab0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800cab4:	e7f6      	b.n	800caa4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800cab6:	fa32 fa01 	lsrs.w	sl, r2, r1
 800caba:	d107      	bne.n	800cacc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800cabc:	fb09 f602 	mul.w	r6, r9, r2
 800cac0:	fbb6 f0f4 	udiv	r0, r6, r4
 800cac4:	fb04 6610 	mls	r6, r4, r0, r6
 800cac8:	603e      	str	r6, [r7, #0]
 800caca:	e7eb      	b.n	800caa4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800cacc:	2601      	movs	r6, #1
 800cace:	408e      	lsls	r6, r1
 800cad0:	3e01      	subs	r6, #1
 800cad2:	4016      	ands	r6, r2
 800cad4:	fa09 fb01 	lsl.w	fp, r9, r1
 800cad8:	4630      	mov	r0, r6
 800cada:	fbbb f3f4 	udiv	r3, fp, r4
 800cade:	9302      	str	r3, [sp, #8]
 800cae0:	fb0a f303 	mul.w	r3, sl, r3
 800cae4:	9303      	str	r3, [sp, #12]
 800cae6:	f7ff ffad 	bl	800ca44 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800caea:	464a      	mov	r2, r9
 800caec:	460b      	mov	r3, r1
 800caee:	e9cd 4700 	strd	r4, r7, [sp]
 800caf2:	4601      	mov	r1, r0
 800caf4:	4630      	mov	r0, r6
 800caf6:	f7ff ffc3 	bl	800ca80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cafa:	9b02      	ldr	r3, [sp, #8]
 800cafc:	fb04 bb13 	mls	fp, r4, r3, fp
 800cb00:	4606      	mov	r6, r0
 800cb02:	4658      	mov	r0, fp
 800cb04:	eb05 0108 	add.w	r1, r5, r8
 800cb08:	f7ff ff9c 	bl	800ca44 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb0c:	ab05      	add	r3, sp, #20
 800cb0e:	e9cd 4300 	strd	r4, r3, [sp]
 800cb12:	465a      	mov	r2, fp
 800cb14:	4603      	mov	r3, r0
 800cb16:	4650      	mov	r0, sl
 800cb18:	f7ff ffb2 	bl	800ca80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb1c:	6839      	ldr	r1, [r7, #0]
 800cb1e:	9a05      	ldr	r2, [sp, #20]
 800cb20:	9b03      	ldr	r3, [sp, #12]
 800cb22:	4411      	add	r1, r2
 800cb24:	fbb1 f2f4 	udiv	r2, r1, r4
 800cb28:	18d3      	adds	r3, r2, r3
 800cb2a:	441e      	add	r6, r3
 800cb2c:	fb04 1412 	mls	r4, r4, r2, r1
 800cb30:	4430      	add	r0, r6
 800cb32:	603c      	str	r4, [r7, #0]
 800cb34:	e7b6      	b.n	800caa4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800cb36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800cb36:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cb3a:	b085      	sub	sp, #20
 800cb3c:	f1b0 0900 	subs.w	r9, r0, #0
 800cb40:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800cb42:	461d      	mov	r5, r3
 800cb44:	bfbf      	itttt	lt
 800cb46:	6823      	ldrlt	r3, [r4, #0]
 800cb48:	425b      	neglt	r3, r3
 800cb4a:	f1c9 0900 	rsblt	r9, r9, #0
 800cb4e:	6023      	strlt	r3, [r4, #0]
 800cb50:	bfb4      	ite	lt
 800cb52:	f04f 36ff 	movlt.w	r6, #4294967295
 800cb56:	2601      	movge	r6, #1
 800cb58:	2a00      	cmp	r2, #0
 800cb5a:	4617      	mov	r7, r2
 800cb5c:	da04      	bge.n	800cb68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800cb5e:	6823      	ldr	r3, [r4, #0]
 800cb60:	425b      	negs	r3, r3
 800cb62:	4257      	negs	r7, r2
 800cb64:	4276      	negs	r6, r6
 800cb66:	6023      	str	r3, [r4, #0]
 800cb68:	2d00      	cmp	r5, #0
 800cb6a:	4638      	mov	r0, r7
 800cb6c:	bfba      	itte	lt
 800cb6e:	426d      	neglt	r5, r5
 800cb70:	f04f 38ff 	movlt.w	r8, #4294967295
 800cb74:	f04f 0801 	movge.w	r8, #1
 800cb78:	f7ff ff64 	bl	800ca44 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800cb7c:	ab03      	add	r3, sp, #12
 800cb7e:	e9cd 5300 	strd	r5, r3, [sp]
 800cb82:	463a      	mov	r2, r7
 800cb84:	4603      	mov	r3, r0
 800cb86:	4648      	mov	r0, r9
 800cb88:	f7ff ff7a 	bl	800ca80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800cb8c:	6823      	ldr	r3, [r4, #0]
 800cb8e:	9a03      	ldr	r2, [sp, #12]
 800cb90:	4546      	cmp	r6, r8
 800cb92:	441a      	add	r2, r3
 800cb94:	fb92 f3f5 	sdiv	r3, r2, r5
 800cb98:	4418      	add	r0, r3
 800cb9a:	bf18      	it	ne
 800cb9c:	4240      	negne	r0, r0
 800cb9e:	fb05 2313 	mls	r3, r5, r3, r2
 800cba2:	1c72      	adds	r2, r6, #1
 800cba4:	6023      	str	r3, [r4, #0]
 800cba6:	d105      	bne.n	800cbb4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800cba8:	2b00      	cmp	r3, #0
 800cbaa:	f1c3 0200 	rsb	r2, r3, #0
 800cbae:	db0b      	blt.n	800cbc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800cbb0:	6022      	str	r2, [r4, #0]
 800cbb2:	e006      	b.n	800cbc2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbb4:	2e01      	cmp	r6, #1
 800cbb6:	d104      	bne.n	800cbc2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbb8:	2b00      	cmp	r3, #0
 800cbba:	da02      	bge.n	800cbc2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800cbbc:	442b      	add	r3, r5
 800cbbe:	3801      	subs	r0, #1
 800cbc0:	6023      	str	r3, [r4, #0]
 800cbc2:	b005      	add	sp, #20
 800cbc4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cbc8:	3801      	subs	r0, #1
 800cbca:	1b52      	subs	r2, r2, r5
 800cbcc:	e7f0      	b.n	800cbb0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800cbd0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800cbd0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800cbd4:	4c1c      	ldr	r4, [pc, #112]	; (800cc48 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800cbd6:	6807      	ldr	r7, [r0, #0]
 800cbd8:	69a3      	ldr	r3, [r4, #24]
 800cbda:	4605      	mov	r5, r0
 800cbdc:	b92b      	cbnz	r3, 800cbea <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800cbde:	6840      	ldr	r0, [r0, #4]
 800cbe0:	e9c5 7000 	strd	r7, r0, [r5]
 800cbe4:	b004      	add	sp, #16
 800cbe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cbea:	68a2      	ldr	r2, [r4, #8]
 800cbec:	6820      	ldr	r0, [r4, #0]
 800cbee:	ae04      	add	r6, sp, #16
 800cbf0:	f04f 0802 	mov.w	r8, #2
 800cbf4:	fb93 f1f8 	sdiv	r1, r3, r8
 800cbf8:	440a      	add	r2, r1
 800cbfa:	f846 2d04 	str.w	r2, [r6, #-4]!
 800cbfe:	69e1      	ldr	r1, [r4, #28]
 800cc00:	9600      	str	r6, [sp, #0]
 800cc02:	463a      	mov	r2, r7
 800cc04:	f7ff ff97 	bl	800cb36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc08:	69a3      	ldr	r3, [r4, #24]
 800cc0a:	686a      	ldr	r2, [r5, #4]
 800cc0c:	6a21      	ldr	r1, [r4, #32]
 800cc0e:	9600      	str	r6, [sp, #0]
 800cc10:	4607      	mov	r7, r0
 800cc12:	6860      	ldr	r0, [r4, #4]
 800cc14:	f7ff ff8f 	bl	800cb36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc18:	6962      	ldr	r2, [r4, #20]
 800cc1a:	69a3      	ldr	r3, [r4, #24]
 800cc1c:	fb93 f8f8 	sdiv	r8, r3, r8
 800cc20:	4442      	add	r2, r8
 800cc22:	9203      	str	r2, [sp, #12]
 800cc24:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800cc26:	682a      	ldr	r2, [r5, #0]
 800cc28:	9600      	str	r6, [sp, #0]
 800cc2a:	4407      	add	r7, r0
 800cc2c:	68e0      	ldr	r0, [r4, #12]
 800cc2e:	f7ff ff82 	bl	800cb36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc32:	9600      	str	r6, [sp, #0]
 800cc34:	4680      	mov	r8, r0
 800cc36:	69a3      	ldr	r3, [r4, #24]
 800cc38:	686a      	ldr	r2, [r5, #4]
 800cc3a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800cc3c:	6920      	ldr	r0, [r4, #16]
 800cc3e:	f7ff ff7a 	bl	800cb36 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800cc42:	4440      	add	r0, r8
 800cc44:	e7cc      	b.n	800cbe0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800cc46:	bf00      	nop
 800cc48:	2000a60c 	.word	0x2000a60c

0800cc4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800cc4c:	4b07      	ldr	r3, [pc, #28]	; (800cc6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800cc4e:	781b      	ldrb	r3, [r3, #0]
 800cc50:	2b01      	cmp	r3, #1
 800cc52:	d109      	bne.n	800cc68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800cc54:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cc58:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cc5c:	8003      	strh	r3, [r0, #0]
 800cc5e:	4b04      	ldr	r3, [pc, #16]	; (800cc70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800cc60:	881b      	ldrh	r3, [r3, #0]
 800cc62:	3b01      	subs	r3, #1
 800cc64:	1a9b      	subs	r3, r3, r2
 800cc66:	800b      	strh	r3, [r1, #0]
 800cc68:	4770      	bx	lr
 800cc6a:	bf00      	nop
 800cc6c:	2000a5f8 	.word	0x2000a5f8
 800cc70:	2000a5f4 	.word	0x2000a5f4

0800cc74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800cc74:	b510      	push	{r4, lr}
 800cc76:	4b07      	ldr	r3, [pc, #28]	; (800cc94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800cc78:	781b      	ldrb	r3, [r3, #0]
 800cc7a:	2b01      	cmp	r3, #1
 800cc7c:	d108      	bne.n	800cc90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800cc7e:	4b06      	ldr	r3, [pc, #24]	; (800cc98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800cc80:	880c      	ldrh	r4, [r1, #0]
 800cc82:	881b      	ldrh	r3, [r3, #0]
 800cc84:	f9b0 2000 	ldrsh.w	r2, [r0]
 800cc88:	3b01      	subs	r3, #1
 800cc8a:	1b1b      	subs	r3, r3, r4
 800cc8c:	8003      	strh	r3, [r0, #0]
 800cc8e:	800a      	strh	r2, [r1, #0]
 800cc90:	bd10      	pop	{r4, pc}
 800cc92:	bf00      	nop
 800cc94:	2000a5f8 	.word	0x2000a5f8
 800cc98:	2000a5f4 	.word	0x2000a5f4

0800cc9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800cc9c:	b510      	push	{r4, lr}
 800cc9e:	4b0a      	ldr	r3, [pc, #40]	; (800ccc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800cca0:	781b      	ldrb	r3, [r3, #0]
 800cca2:	2b01      	cmp	r3, #1
 800cca4:	d10e      	bne.n	800ccc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800cca6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ccaa:	8843      	ldrh	r3, [r0, #2]
 800ccac:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ccb0:	8044      	strh	r4, [r0, #2]
 800ccb2:	18ca      	adds	r2, r1, r3
 800ccb4:	4b05      	ldr	r3, [pc, #20]	; (800cccc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800ccb6:	881b      	ldrh	r3, [r3, #0]
 800ccb8:	1a9b      	subs	r3, r3, r2
 800ccba:	8003      	strh	r3, [r0, #0]
 800ccbc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ccc0:	80c3      	strh	r3, [r0, #6]
 800ccc2:	8081      	strh	r1, [r0, #4]
 800ccc4:	bd10      	pop	{r4, pc}
 800ccc6:	bf00      	nop
 800ccc8:	2000a5f8 	.word	0x2000a5f8
 800cccc:	2000a5f4 	.word	0x2000a5f4

0800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800ccd0:	4b08      	ldr	r3, [pc, #32]	; (800ccf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800ccd2:	781b      	ldrb	r3, [r3, #0]
 800ccd4:	2b01      	cmp	r3, #1
 800ccd6:	d10c      	bne.n	800ccf2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800ccd8:	8803      	ldrh	r3, [r0, #0]
 800ccda:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800ccde:	8842      	ldrh	r2, [r0, #2]
 800cce0:	8002      	strh	r2, [r0, #0]
 800cce2:	185a      	adds	r2, r3, r1
 800cce4:	4b04      	ldr	r3, [pc, #16]	; (800ccf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cce6:	881b      	ldrh	r3, [r3, #0]
 800cce8:	1a9b      	subs	r3, r3, r2
 800ccea:	8043      	strh	r3, [r0, #2]
 800ccec:	88c3      	ldrh	r3, [r0, #6]
 800ccee:	8083      	strh	r3, [r0, #4]
 800ccf0:	80c1      	strh	r1, [r0, #6]
 800ccf2:	4770      	bx	lr
 800ccf4:	2000a5f8 	.word	0x2000a5f8
 800ccf8:	2000a5f4 	.word	0x2000a5f4

0800ccfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800ccfc:	b510      	push	{r4, lr}
 800ccfe:	4b07      	ldr	r3, [pc, #28]	; (800cd1c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800cd00:	781b      	ldrb	r3, [r3, #0]
 800cd02:	2b01      	cmp	r3, #1
 800cd04:	d108      	bne.n	800cd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800cd06:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cd0a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cd0e:	8003      	strh	r3, [r0, #0]
 800cd10:	8893      	ldrh	r3, [r2, #4]
 800cd12:	3b01      	subs	r3, #1
 800cd14:	1b1b      	subs	r3, r3, r4
 800cd16:	800b      	strh	r3, [r1, #0]
 800cd18:	bd10      	pop	{r4, pc}
 800cd1a:	bf00      	nop
 800cd1c:	2000a5f8 	.word	0x2000a5f8

0800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800cd20:	b510      	push	{r4, lr}
 800cd22:	4b0a      	ldr	r3, [pc, #40]	; (800cd4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800cd24:	781b      	ldrb	r3, [r3, #0]
 800cd26:	2b01      	cmp	r3, #1
 800cd28:	460a      	mov	r2, r1
 800cd2a:	d10d      	bne.n	800cd48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800cd2c:	8881      	ldrh	r1, [r0, #4]
 800cd2e:	8803      	ldrh	r3, [r0, #0]
 800cd30:	440b      	add	r3, r1
 800cd32:	4601      	mov	r1, r0
 800cd34:	3b01      	subs	r3, #1
 800cd36:	f821 3b02 	strh.w	r3, [r1], #2
 800cd3a:	f7ff ffdf 	bl	800ccfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cd3e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cd42:	88c2      	ldrh	r2, [r0, #6]
 800cd44:	8082      	strh	r2, [r0, #4]
 800cd46:	80c3      	strh	r3, [r0, #6]
 800cd48:	bd10      	pop	{r4, pc}
 800cd4a:	bf00      	nop
 800cd4c:	2000a5f8 	.word	0x2000a5f8

0800cd50 <_ZN8touchgfx11Application13requestRedrawEv>:
 800cd50:	4b06      	ldr	r3, [pc, #24]	; (800cd6c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800cd52:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd56:	4b06      	ldr	r3, [pc, #24]	; (800cd70 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800cd58:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800cd5c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cd60:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800cd64:	2100      	movs	r1, #0
 800cd66:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800cd6a:	4770      	bx	lr
 800cd6c:	2000a5f4 	.word	0x2000a5f4
 800cd70:	2000a5f6 	.word	0x2000a5f6

0800cd74 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800cd74:	4b03      	ldr	r3, [pc, #12]	; (800cd84 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800cd76:	6818      	ldr	r0, [r3, #0]
 800cd78:	b110      	cbz	r0, 800cd80 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800cd7a:	6803      	ldr	r3, [r0, #0]
 800cd7c:	699b      	ldr	r3, [r3, #24]
 800cd7e:	4718      	bx	r3
 800cd80:	4770      	bx	lr
 800cd82:	bf00      	nop
 800cd84:	2000a63c 	.word	0x2000a63c

0800cd88 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800cd88:	4770      	bx	lr
	...

0800cd8c <_ZN8touchgfx11Application4drawEv>:
 800cd8c:	b507      	push	{r0, r1, r2, lr}
 800cd8e:	4b09      	ldr	r3, [pc, #36]	; (800cdb4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800cd90:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cd94:	4b08      	ldr	r3, [pc, #32]	; (800cdb8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800cd96:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cd9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cd9e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cda2:	6803      	ldr	r3, [r0, #0]
 800cda4:	2100      	movs	r1, #0
 800cda6:	9100      	str	r1, [sp, #0]
 800cda8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cdaa:	4669      	mov	r1, sp
 800cdac:	4798      	blx	r3
 800cdae:	b003      	add	sp, #12
 800cdb0:	f85d fb04 	ldr.w	pc, [sp], #4
 800cdb4:	2000a5f4 	.word	0x2000a5f4
 800cdb8:	2000a5f6 	.word	0x2000a5f6

0800cdbc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800cdbc:	4b03      	ldr	r3, [pc, #12]	; (800cdcc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800cdbe:	6818      	ldr	r0, [r3, #0]
 800cdc0:	b110      	cbz	r0, 800cdc8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800cdc2:	6803      	ldr	r3, [r0, #0]
 800cdc4:	69db      	ldr	r3, [r3, #28]
 800cdc6:	4718      	bx	r3
 800cdc8:	4770      	bx	lr
 800cdca:	bf00      	nop
 800cdcc:	2000a63c 	.word	0x2000a63c

0800cdd0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800cdd0:	4b03      	ldr	r3, [pc, #12]	; (800cde0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800cdd2:	6818      	ldr	r0, [r3, #0]
 800cdd4:	b110      	cbz	r0, 800cddc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800cdd6:	6803      	ldr	r3, [r0, #0]
 800cdd8:	6a1b      	ldr	r3, [r3, #32]
 800cdda:	4718      	bx	r3
 800cddc:	4770      	bx	lr
 800cdde:	bf00      	nop
 800cde0:	2000a63c 	.word	0x2000a63c

0800cde4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800cde4:	2300      	movs	r3, #0
 800cde6:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800cdea:	4770      	bx	lr

0800cdec <_ZN8touchgfx11Application14handleKeyEventEh>:
 800cdec:	4b03      	ldr	r3, [pc, #12]	; (800cdfc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800cdee:	6818      	ldr	r0, [r3, #0]
 800cdf0:	b110      	cbz	r0, 800cdf8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800cdf2:	6803      	ldr	r3, [r0, #0]
 800cdf4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cdf6:	4718      	bx	r3
 800cdf8:	4770      	bx	lr
 800cdfa:	bf00      	nop
 800cdfc:	2000a63c 	.word	0x2000a63c

0800ce00 <_ZN8touchgfx11ApplicationD1Ev>:
 800ce00:	4770      	bx	lr

0800ce02 <_ZN8touchgfx11ApplicationD0Ev>:
 800ce02:	b510      	push	{r4, lr}
 800ce04:	f44f 719c 	mov.w	r1, #312	; 0x138
 800ce08:	4604      	mov	r4, r0
 800ce0a:	f00e ff45 	bl	801bc98 <_ZdlPvj>
 800ce0e:	4620      	mov	r0, r4
 800ce10:	bd10      	pop	{r4, pc}
	...

0800ce14 <_ZN8touchgfx11Application15handleTickEventEv>:
 800ce14:	b570      	push	{r4, r5, r6, lr}
 800ce16:	4d38      	ldr	r5, [pc, #224]	; (800cef8 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 800ce18:	4604      	mov	r4, r0
 800ce1a:	6828      	ldr	r0, [r5, #0]
 800ce1c:	b140      	cbz	r0, 800ce30 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ce1e:	7a03      	ldrb	r3, [r0, #8]
 800ce20:	b933      	cbnz	r3, 800ce30 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ce22:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800ce26:	6803      	ldr	r3, [r0, #0]
 800ce28:	689b      	ldr	r3, [r3, #8]
 800ce2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ce2e:	4718      	bx	r3
 800ce30:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800ce34:	b97b      	cbnz	r3, 800ce56 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ce36:	b170      	cbz	r0, 800ce56 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ce38:	7a03      	ldrb	r3, [r0, #8]
 800ce3a:	b163      	cbz	r3, 800ce56 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800ce3c:	4b2f      	ldr	r3, [pc, #188]	; (800cefc <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800ce3e:	6818      	ldr	r0, [r3, #0]
 800ce40:	b110      	cbz	r0, 800ce48 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800ce42:	6803      	ldr	r3, [r0, #0]
 800ce44:	691b      	ldr	r3, [r3, #16]
 800ce46:	4798      	blx	r3
 800ce48:	6828      	ldr	r0, [r5, #0]
 800ce4a:	6803      	ldr	r3, [r0, #0]
 800ce4c:	68db      	ldr	r3, [r3, #12]
 800ce4e:	4798      	blx	r3
 800ce50:	2301      	movs	r3, #1
 800ce52:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800ce56:	2500      	movs	r5, #0
 800ce58:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800ce5c:	42a8      	cmp	r0, r5
 800ce5e:	dd0c      	ble.n	800ce7a <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800ce60:	1963      	adds	r3, r4, r5
 800ce62:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800ce66:	b132      	cbz	r2, 800ce76 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800ce68:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800ce6c:	4413      	add	r3, r2
 800ce6e:	6858      	ldr	r0, [r3, #4]
 800ce70:	6803      	ldr	r3, [r0, #0]
 800ce72:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800ce74:	4798      	blx	r3
 800ce76:	3501      	adds	r5, #1
 800ce78:	e7ee      	b.n	800ce58 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800ce7a:	2300      	movs	r3, #0
 800ce7c:	461a      	mov	r2, r3
 800ce7e:	4298      	cmp	r0, r3
 800ce80:	d10f      	bne.n	800cea2 <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 800ce82:	1d25      	adds	r5, r4, #4
 800ce84:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800ce88:	4291      	cmp	r1, r2
 800ce8a:	dd2d      	ble.n	800cee8 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 800ce8c:	1e48      	subs	r0, r1, #1
 800ce8e:	b280      	uxth	r0, r0
 800ce90:	4288      	cmp	r0, r1
 800ce92:	d31a      	bcc.n	800ceca <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800ce94:	4b1a      	ldr	r3, [pc, #104]	; (800cf00 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 800ce96:	4a1b      	ldr	r2, [pc, #108]	; (800cf04 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800ce98:	481b      	ldr	r0, [pc, #108]	; (800cf08 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800ce9a:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800ce9e:	f00e ff29 	bl	801bcf4 <__assert_func>
 800cea2:	18e1      	adds	r1, r4, r3
 800cea4:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800cea8:	b16d      	cbz	r5, 800cec6 <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 800ceaa:	429a      	cmp	r2, r3
 800ceac:	d00a      	beq.n	800cec4 <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 800ceae:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800ceb2:	4431      	add	r1, r6
 800ceb4:	684e      	ldr	r6, [r1, #4]
 800ceb6:	b291      	uxth	r1, r2
 800ceb8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800cebc:	604e      	str	r6, [r1, #4]
 800cebe:	18a1      	adds	r1, r4, r2
 800cec0:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800cec4:	3201      	adds	r2, #1
 800cec6:	3301      	adds	r3, #1
 800cec8:	e7d9      	b.n	800ce7e <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800ceca:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800cece:	3304      	adds	r3, #4
 800ced0:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800ced4:	428b      	cmp	r3, r1
 800ced6:	d004      	beq.n	800cee2 <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 800ced8:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800cedc:	f843 6c04 	str.w	r6, [r3, #-4]
 800cee0:	e7f8      	b.n	800ced4 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800cee2:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800cee6:	e7cd      	b.n	800ce84 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800cee8:	4b04      	ldr	r3, [pc, #16]	; (800cefc <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800ceea:	6818      	ldr	r0, [r3, #0]
 800ceec:	b110      	cbz	r0, 800cef4 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800ceee:	6803      	ldr	r3, [r0, #0]
 800cef0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cef2:	e79a      	b.n	800ce2a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800cef4:	bd70      	pop	{r4, r5, r6, pc}
 800cef6:	bf00      	nop
 800cef8:	2000a640 	.word	0x2000a640
 800cefc:	2000a63c 	.word	0x2000a63c
 800cf00:	0801ef06 	.word	0x0801ef06
 800cf04:	0801f0f8 	.word	0x0801f0f8
 800cf08:	0801ef14 	.word	0x0801ef14

0800cf0c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800cf0c:	b570      	push	{r4, r5, r6, lr}
 800cf0e:	4606      	mov	r6, r0
 800cf10:	460c      	mov	r4, r1
 800cf12:	b929      	cbnz	r1, 800cf20 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800cf14:	4b0c      	ldr	r3, [pc, #48]	; (800cf48 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800cf16:	4a0d      	ldr	r2, [pc, #52]	; (800cf4c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800cf18:	480d      	ldr	r0, [pc, #52]	; (800cf50 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800cf1a:	215e      	movs	r1, #94	; 0x5e
 800cf1c:	f00e feea 	bl	801bcf4 <__assert_func>
 800cf20:	4d0c      	ldr	r5, [pc, #48]	; (800cf54 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800cf22:	2300      	movs	r3, #0
 800cf24:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800cf28:	6828      	ldr	r0, [r5, #0]
 800cf2a:	b110      	cbz	r0, 800cf32 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800cf2c:	6803      	ldr	r3, [r0, #0]
 800cf2e:	695b      	ldr	r3, [r3, #20]
 800cf30:	4798      	blx	r3
 800cf32:	602c      	str	r4, [r5, #0]
 800cf34:	6823      	ldr	r3, [r4, #0]
 800cf36:	4620      	mov	r0, r4
 800cf38:	68db      	ldr	r3, [r3, #12]
 800cf3a:	4798      	blx	r3
 800cf3c:	6833      	ldr	r3, [r6, #0]
 800cf3e:	4630      	mov	r0, r6
 800cf40:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cf42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cf46:	4718      	bx	r3
 800cf48:	0801eed2 	.word	0x0801eed2
 800cf4c:	0801efb8 	.word	0x0801efb8
 800cf50:	0801eedc 	.word	0x0801eedc
 800cf54:	2000a63c 	.word	0x2000a63c

0800cf58 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800cf58:	b510      	push	{r4, lr}
 800cf5a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cf5e:	888a      	ldrh	r2, [r1, #4]
 800cf60:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cf64:	4422      	add	r2, r4
 800cf66:	b212      	sxth	r2, r2
 800cf68:	4293      	cmp	r3, r2
 800cf6a:	da15      	bge.n	800cf98 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cf6c:	8882      	ldrh	r2, [r0, #4]
 800cf6e:	4413      	add	r3, r2
 800cf70:	b21b      	sxth	r3, r3
 800cf72:	429c      	cmp	r4, r3
 800cf74:	da10      	bge.n	800cf98 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cf76:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800cf7a:	88c9      	ldrh	r1, [r1, #6]
 800cf7c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800cf80:	4419      	add	r1, r3
 800cf82:	b209      	sxth	r1, r1
 800cf84:	428a      	cmp	r2, r1
 800cf86:	da07      	bge.n	800cf98 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cf88:	88c0      	ldrh	r0, [r0, #6]
 800cf8a:	4410      	add	r0, r2
 800cf8c:	b200      	sxth	r0, r0
 800cf8e:	4283      	cmp	r3, r0
 800cf90:	bfac      	ite	ge
 800cf92:	2000      	movge	r0, #0
 800cf94:	2001      	movlt	r0, #1
 800cf96:	bd10      	pop	{r4, pc}
 800cf98:	2000      	movs	r0, #0
 800cf9a:	e7fc      	b.n	800cf96 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cf9c <_ZN8touchgfx4Rect10restrictToEss>:
 800cf9c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cfa0:	2b00      	cmp	r3, #0
 800cfa2:	b510      	push	{r4, lr}
 800cfa4:	da04      	bge.n	800cfb0 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800cfa6:	8884      	ldrh	r4, [r0, #4]
 800cfa8:	4423      	add	r3, r4
 800cfaa:	8083      	strh	r3, [r0, #4]
 800cfac:	2300      	movs	r3, #0
 800cfae:	8003      	strh	r3, [r0, #0]
 800cfb0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cfb4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cfb8:	1b09      	subs	r1, r1, r4
 800cfba:	428b      	cmp	r3, r1
 800cfbc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cfc0:	bfc8      	it	gt
 800cfc2:	8081      	strhgt	r1, [r0, #4]
 800cfc4:	2b00      	cmp	r3, #0
 800cfc6:	da04      	bge.n	800cfd2 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800cfc8:	88c1      	ldrh	r1, [r0, #6]
 800cfca:	440b      	add	r3, r1
 800cfcc:	80c3      	strh	r3, [r0, #6]
 800cfce:	2300      	movs	r3, #0
 800cfd0:	8043      	strh	r3, [r0, #2]
 800cfd2:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800cfd6:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800cfda:	1a52      	subs	r2, r2, r1
 800cfdc:	4293      	cmp	r3, r2
 800cfde:	bfc8      	it	gt
 800cfe0:	80c2      	strhgt	r2, [r0, #6]
 800cfe2:	bd10      	pop	{r4, pc}

0800cfe4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800cfe4:	b510      	push	{r4, lr}
 800cfe6:	4b10      	ldr	r3, [pc, #64]	; (800d028 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800cfe8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cfec:	4b0f      	ldr	r3, [pc, #60]	; (800d02c <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800cfee:	460c      	mov	r4, r1
 800cff0:	4620      	mov	r0, r4
 800cff2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cff6:	f7ff ffd1 	bl	800cf9c <_ZN8touchgfx4Rect10restrictToEss>
 800cffa:	4b0d      	ldr	r3, [pc, #52]	; (800d030 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800cffc:	6818      	ldr	r0, [r3, #0]
 800cffe:	b190      	cbz	r0, 800d026 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800d000:	6803      	ldr	r3, [r0, #0]
 800d002:	4621      	mov	r1, r4
 800d004:	689b      	ldr	r3, [r3, #8]
 800d006:	4798      	blx	r3
 800d008:	4b0a      	ldr	r3, [pc, #40]	; (800d034 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800d00a:	6818      	ldr	r0, [r3, #0]
 800d00c:	b118      	cbz	r0, 800d016 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800d00e:	6803      	ldr	r3, [r0, #0]
 800d010:	4621      	mov	r1, r4
 800d012:	689b      	ldr	r3, [r3, #8]
 800d014:	4798      	blx	r3
 800d016:	4b08      	ldr	r3, [pc, #32]	; (800d038 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800d018:	6818      	ldr	r0, [r3, #0]
 800d01a:	6803      	ldr	r3, [r0, #0]
 800d01c:	4621      	mov	r1, r4
 800d01e:	69db      	ldr	r3, [r3, #28]
 800d020:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d024:	4718      	bx	r3
 800d026:	bd10      	pop	{r4, pc}
 800d028:	2000a5f6 	.word	0x2000a5f6
 800d02c:	2000a5f4 	.word	0x2000a5f4
 800d030:	2000a63c 	.word	0x2000a63c
 800d034:	2000a638 	.word	0x2000a638
 800d038:	2000a600 	.word	0x2000a600

0800d03c <_ZNK8touchgfx4Rect8includesERKS0_>:
 800d03c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d03e:	4606      	mov	r6, r0
 800d040:	4608      	mov	r0, r1
 800d042:	460f      	mov	r7, r1
 800d044:	f7fc fa6f 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d048:	b9e8      	cbnz	r0, 800d086 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800d04a:	f9b7 5000 	ldrsh.w	r5, [r7]
 800d04e:	f9b6 4000 	ldrsh.w	r4, [r6]
 800d052:	42a5      	cmp	r5, r4
 800d054:	db17      	blt.n	800d086 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800d056:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800d05a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800d05e:	429a      	cmp	r2, r3
 800d060:	db11      	blt.n	800d086 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800d062:	88b9      	ldrh	r1, [r7, #4]
 800d064:	440d      	add	r5, r1
 800d066:	88b1      	ldrh	r1, [r6, #4]
 800d068:	440c      	add	r4, r1
 800d06a:	b22d      	sxth	r5, r5
 800d06c:	b224      	sxth	r4, r4
 800d06e:	42a5      	cmp	r5, r4
 800d070:	dc09      	bgt.n	800d086 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800d072:	88f8      	ldrh	r0, [r7, #6]
 800d074:	4410      	add	r0, r2
 800d076:	88f2      	ldrh	r2, [r6, #6]
 800d078:	4413      	add	r3, r2
 800d07a:	b200      	sxth	r0, r0
 800d07c:	b21b      	sxth	r3, r3
 800d07e:	4298      	cmp	r0, r3
 800d080:	bfcc      	ite	gt
 800d082:	2000      	movgt	r0, #0
 800d084:	2001      	movle	r0, #1
 800d086:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d088 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800d088:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d08a:	4604      	mov	r4, r0
 800d08c:	4608      	mov	r0, r1
 800d08e:	460d      	mov	r5, r1
 800d090:	f7fc fa49 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d094:	b978      	cbnz	r0, 800d0b6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800d096:	4620      	mov	r0, r4
 800d098:	f7fc fa45 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d09c:	f9b5 6000 	ldrsh.w	r6, [r5]
 800d0a0:	b150      	cbz	r0, 800d0b8 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800d0a2:	8026      	strh	r6, [r4, #0]
 800d0a4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800d0a8:	8063      	strh	r3, [r4, #2]
 800d0aa:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800d0ae:	80a3      	strh	r3, [r4, #4]
 800d0b0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d0b4:	80e3      	strh	r3, [r4, #6]
 800d0b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d0b8:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d0bc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d0c0:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800d0c4:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800d0c8:	88ed      	ldrh	r5, [r5, #6]
 800d0ca:	42b1      	cmp	r1, r6
 800d0cc:	460f      	mov	r7, r1
 800d0ce:	bfa8      	it	ge
 800d0d0:	4637      	movge	r7, r6
 800d0d2:	4293      	cmp	r3, r2
 800d0d4:	4618      	mov	r0, r3
 800d0d6:	4466      	add	r6, ip
 800d0d8:	bfa8      	it	ge
 800d0da:	4610      	movge	r0, r2
 800d0dc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d0e0:	8027      	strh	r7, [r4, #0]
 800d0e2:	442a      	add	r2, r5
 800d0e4:	88e5      	ldrh	r5, [r4, #6]
 800d0e6:	8060      	strh	r0, [r4, #2]
 800d0e8:	4461      	add	r1, ip
 800d0ea:	442b      	add	r3, r5
 800d0ec:	b236      	sxth	r6, r6
 800d0ee:	b209      	sxth	r1, r1
 800d0f0:	b212      	sxth	r2, r2
 800d0f2:	b21b      	sxth	r3, r3
 800d0f4:	428e      	cmp	r6, r1
 800d0f6:	bfac      	ite	ge
 800d0f8:	ebc7 0106 	rsbge	r1, r7, r6
 800d0fc:	ebc7 0101 	rsblt	r1, r7, r1
 800d100:	429a      	cmp	r2, r3
 800d102:	bfac      	ite	ge
 800d104:	ebc0 0202 	rsbge	r2, r0, r2
 800d108:	ebc0 0203 	rsblt	r2, r0, r3
 800d10c:	80a1      	strh	r1, [r4, #4]
 800d10e:	80e2      	strh	r2, [r4, #6]
 800d110:	e7d1      	b.n	800d0b6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800d114 <_ZN8touchgfx11Application11getInstanceEv>:
 800d114:	4b01      	ldr	r3, [pc, #4]	; (800d11c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800d116:	6818      	ldr	r0, [r3, #0]
 800d118:	4770      	bx	lr
 800d11a:	bf00      	nop
 800d11c:	2000a64c 	.word	0x2000a64c

0800d120 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800d120:	2300      	movs	r3, #0
 800d122:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800d126:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800d12a:	30a8      	adds	r0, #168	; 0xa8
 800d12c:	f802 3b01 	strb.w	r3, [r2], #1
 800d130:	4282      	cmp	r2, r0
 800d132:	d1fb      	bne.n	800d12c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800d134:	4770      	bx	lr

0800d136 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d136:	4603      	mov	r3, r0
 800d138:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800d13c:	2200      	movs	r2, #0
 800d13e:	801a      	strh	r2, [r3, #0]
 800d140:	805a      	strh	r2, [r3, #2]
 800d142:	809a      	strh	r2, [r3, #4]
 800d144:	80da      	strh	r2, [r3, #6]
 800d146:	3308      	adds	r3, #8
 800d148:	428b      	cmp	r3, r1
 800d14a:	d1f8      	bne.n	800d13e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d14c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800d150:	4770      	bx	lr
	...

0800d154 <_ZN8touchgfx11ApplicationC1Ev>:
 800d154:	b570      	push	{r4, r5, r6, lr}
 800d156:	4b19      	ldr	r3, [pc, #100]	; (800d1bc <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800d158:	6003      	str	r3, [r0, #0]
 800d15a:	2500      	movs	r5, #0
 800d15c:	4604      	mov	r4, r0
 800d15e:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800d162:	30a8      	adds	r0, #168	; 0xa8
 800d164:	f7ff ffe7 	bl	800d136 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d168:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800d16c:	f7ff ffe3 	bl	800d136 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d170:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800d174:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800d178:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800d17c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800d180:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800d184:	490e      	ldr	r1, [pc, #56]	; (800d1c0 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800d186:	480f      	ldr	r0, [pc, #60]	; (800d1c4 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800d188:	4e0f      	ldr	r6, [pc, #60]	; (800d1c8 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800d18a:	f00e fc5d 	bl	801ba48 <CRC_Lock>
 800d18e:	4b0f      	ldr	r3, [pc, #60]	; (800d1cc <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800d190:	b158      	cbz	r0, 800d1aa <_ZN8touchgfx11ApplicationC1Ev+0x56>
 800d192:	801d      	strh	r5, [r3, #0]
 800d194:	4a0e      	ldr	r2, [pc, #56]	; (800d1d0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800d196:	2300      	movs	r3, #0
 800d198:	6013      	str	r3, [r2, #0]
 800d19a:	4a0e      	ldr	r2, [pc, #56]	; (800d1d4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800d19c:	6033      	str	r3, [r6, #0]
 800d19e:	4620      	mov	r0, r4
 800d1a0:	6013      	str	r3, [r2, #0]
 800d1a2:	f7ff ffbd 	bl	800d120 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800d1a6:	4620      	mov	r0, r4
 800d1a8:	bd70      	pop	{r4, r5, r6, pc}
 800d1aa:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d1ae:	2002      	movs	r0, #2
 800d1b0:	801a      	strh	r2, [r3, #0]
 800d1b2:	6030      	str	r0, [r6, #0]
 800d1b4:	f001 fa14 	bl	800e5e0 <_ZN8touchgfx6Screen4drawEv>
 800d1b8:	e7ec      	b.n	800d194 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 800d1ba:	bf00      	nop
 800d1bc:	0801ef74 	.word	0x0801ef74
 800d1c0:	b5e8b5cd 	.word	0xb5e8b5cd
 800d1c4:	f407a5c2 	.word	0xf407a5c2
 800d1c8:	2000a63c 	.word	0x2000a63c
 800d1cc:	20000060 	.word	0x20000060
 800d1d0:	2000a64c 	.word	0x2000a64c
 800d1d4:	2000a640 	.word	0x2000a640

0800d1d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d1d8:	b510      	push	{r4, lr}
 800d1da:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800d1de:	428b      	cmp	r3, r1
 800d1e0:	d806      	bhi.n	800d1f0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 800d1e2:	4b0b      	ldr	r3, [pc, #44]	; (800d210 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 800d1e4:	4a0b      	ldr	r2, [pc, #44]	; (800d214 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 800d1e6:	480c      	ldr	r0, [pc, #48]	; (800d218 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 800d1e8:	f240 11dd 	movw	r1, #477	; 0x1dd
 800d1ec:	f00e fd82 	bl	801bcf4 <__assert_func>
 800d1f0:	3b01      	subs	r3, #1
 800d1f2:	b29b      	uxth	r3, r3
 800d1f4:	428b      	cmp	r3, r1
 800d1f6:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800d1fa:	d908      	bls.n	800d20e <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 800d1fc:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800d200:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800d204:	681a      	ldr	r2, [r3, #0]
 800d206:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800d20a:	685a      	ldr	r2, [r3, #4]
 800d20c:	6062      	str	r2, [r4, #4]
 800d20e:	bd10      	pop	{r4, pc}
 800d210:	0801ef06 	.word	0x0801ef06
 800d214:	0801effc 	.word	0x0801effc
 800d218:	0801ef14 	.word	0x0801ef14

0800d21c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800d21c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d21e:	466b      	mov	r3, sp
 800d220:	e883 0006 	stmia.w	r3, {r1, r2}
 800d224:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800d228:	2a07      	cmp	r2, #7
 800d22a:	4604      	mov	r4, r0
 800d22c:	d906      	bls.n	800d23c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800d22e:	4b09      	ldr	r3, [pc, #36]	; (800d254 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800d230:	4a09      	ldr	r2, [pc, #36]	; (800d258 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800d232:	480a      	ldr	r0, [pc, #40]	; (800d25c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800d234:	f240 11a3 	movw	r1, #419	; 0x1a3
 800d238:	f00e fd5c 	bl	801bcf4 <__assert_func>
 800d23c:	1c51      	adds	r1, r2, #1
 800d23e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800d242:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800d246:	cb03      	ldmia	r3!, {r0, r1}
 800d248:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800d24c:	6069      	str	r1, [r5, #4]
 800d24e:	b003      	add	sp, #12
 800d250:	bd30      	pop	{r4, r5, pc}
 800d252:	bf00      	nop
 800d254:	0801ef3d 	.word	0x0801ef3d
 800d258:	0801f092 	.word	0x0801f092
 800d25c:	0801ef14 	.word	0x0801ef14

0800d260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d264:	4b94      	ldr	r3, [pc, #592]	; (800d4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800d266:	b08d      	sub	sp, #52	; 0x34
 800d268:	ac08      	add	r4, sp, #32
 800d26a:	e884 0006 	stmia.w	r4, {r1, r2}
 800d26e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d272:	4b92      	ldr	r3, [pc, #584]	; (800d4bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800d274:	4683      	mov	fp, r0
 800d276:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d27a:	4620      	mov	r0, r4
 800d27c:	f7ff fe8e 	bl	800cf9c <_ZN8touchgfx4Rect10restrictToEss>
 800d280:	4620      	mov	r0, r4
 800d282:	f7fc f950 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d286:	2800      	cmp	r0, #0
 800d288:	d16a      	bne.n	800d360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d28a:	9402      	str	r4, [sp, #8]
 800d28c:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800d290:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800d294:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800d298:	2400      	movs	r4, #0
 800d29a:	9301      	str	r3, [sp, #4]
 800d29c:	36a0      	adds	r6, #160	; 0xa0
 800d29e:	42a5      	cmp	r5, r4
 800d2a0:	d00d      	beq.n	800d2be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800d2a2:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800d2a6:	9802      	ldr	r0, [sp, #8]
 800d2a8:	f7ff fec8 	bl	800d03c <_ZNK8touchgfx4Rect8includesERKS0_>
 800d2ac:	b128      	cbz	r0, 800d2ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800d2ae:	1e69      	subs	r1, r5, #1
 800d2b0:	1b09      	subs	r1, r1, r4
 800d2b2:	b289      	uxth	r1, r1
 800d2b4:	9801      	ldr	r0, [sp, #4]
 800d2b6:	f7ff ff8f 	bl	800d1d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d2ba:	3401      	adds	r4, #1
 800d2bc:	e7ef      	b.n	800d29e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 800d2be:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800d2c2:	9703      	str	r7, [sp, #12]
 800d2c4:	1e7b      	subs	r3, r7, #1
 800d2c6:	9300      	str	r3, [sp, #0]
 800d2c8:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800d2cc:	2400      	movs	r4, #0
 800d2ce:	4655      	mov	r5, sl
 800d2d0:	9704      	str	r7, [sp, #16]
 800d2d2:	4626      	mov	r6, r4
 800d2d4:	9b04      	ldr	r3, [sp, #16]
 800d2d6:	2b00      	cmp	r3, #0
 800d2d8:	d078      	beq.n	800d3cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 800d2da:	9902      	ldr	r1, [sp, #8]
 800d2dc:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800d2e0:	f7ff fe3a 	bl	800cf58 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d2e4:	b360      	cbz	r0, 800d340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d2e6:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800d2ea:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800d2ee:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800d2f2:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800d2f6:	45e6      	cmp	lr, ip
 800d2f8:	db35      	blt.n	800d366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d2fa:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800d2fe:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800d302:	4472      	add	r2, lr
 800d304:	4463      	add	r3, ip
 800d306:	b212      	sxth	r2, r2
 800d308:	b21b      	sxth	r3, r3
 800d30a:	429a      	cmp	r2, r3
 800d30c:	dc2b      	bgt.n	800d366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800d30e:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800d312:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800d316:	fa1f f288 	uxth.w	r2, r8
 800d31a:	4413      	add	r3, r2
 800d31c:	b29b      	uxth	r3, r3
 800d31e:	45c1      	cmp	r9, r8
 800d320:	fa0f fe83 	sxth.w	lr, r3
 800d324:	fa1f fc89 	uxth.w	ip, r9
 800d328:	db0f      	blt.n	800d34a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800d32a:	eba3 030c 	sub.w	r3, r3, ip
 800d32e:	1ac9      	subs	r1, r1, r3
 800d330:	b209      	sxth	r1, r1
 800d332:	2900      	cmp	r1, #0
 800d334:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d338:	dd12      	ble.n	800d360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d33a:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800d33e:	4604      	mov	r4, r0
 800d340:	9b04      	ldr	r3, [sp, #16]
 800d342:	3b01      	subs	r3, #1
 800d344:	9304      	str	r3, [sp, #16]
 800d346:	3d08      	subs	r5, #8
 800d348:	e7c4      	b.n	800d2d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 800d34a:	4461      	add	r1, ip
 800d34c:	b209      	sxth	r1, r1
 800d34e:	4571      	cmp	r1, lr
 800d350:	dc3a      	bgt.n	800d3c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d352:	eba2 020c 	sub.w	r2, r2, ip
 800d356:	b212      	sxth	r2, r2
 800d358:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d35c:	2a00      	cmp	r2, #0
 800d35e:	dcee      	bgt.n	800d33e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d360:	b00d      	add	sp, #52	; 0x34
 800d362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d366:	45c1      	cmp	r9, r8
 800d368:	db2e      	blt.n	800d3c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d36a:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800d36e:	4499      	add	r9, r3
 800d370:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800d374:	4498      	add	r8, r3
 800d376:	fa0f f989 	sxth.w	r9, r9
 800d37a:	fa0f f888 	sxth.w	r8, r8
 800d37e:	45c1      	cmp	r9, r8
 800d380:	dc22      	bgt.n	800d3c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d382:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800d386:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800d38a:	fa1f f28c 	uxth.w	r2, ip
 800d38e:	4413      	add	r3, r2
 800d390:	b29b      	uxth	r3, r3
 800d392:	45e6      	cmp	lr, ip
 800d394:	fa1f f88e 	uxth.w	r8, lr
 800d398:	fa0f f983 	sxth.w	r9, r3
 800d39c:	db0a      	blt.n	800d3b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 800d39e:	eba3 0308 	sub.w	r3, r3, r8
 800d3a2:	1ac9      	subs	r1, r1, r3
 800d3a4:	b209      	sxth	r1, r1
 800d3a6:	2900      	cmp	r1, #0
 800d3a8:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800d3ac:	ddd8      	ble.n	800d360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d3ae:	f8ad 9020 	strh.w	r9, [sp, #32]
 800d3b2:	e7c4      	b.n	800d33e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800d3b4:	4441      	add	r1, r8
 800d3b6:	b209      	sxth	r1, r1
 800d3b8:	4549      	cmp	r1, r9
 800d3ba:	dc05      	bgt.n	800d3c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800d3bc:	eba2 0208 	sub.w	r2, r2, r8
 800d3c0:	b212      	sxth	r2, r2
 800d3c2:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800d3c6:	e7c9      	b.n	800d35c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800d3c8:	4606      	mov	r6, r0
 800d3ca:	e7b9      	b.n	800d340 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800d3cc:	2c00      	cmp	r4, #0
 800d3ce:	f47f af7d 	bne.w	800d2cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 800d3d2:	2e00      	cmp	r6, #0
 800d3d4:	f000 81e1 	beq.w	800d79a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800d3d8:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800d3dc:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800d3e0:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800d3e4:	b2b9      	uxth	r1, r7
 800d3e6:	9104      	str	r1, [sp, #16]
 800d3e8:	9804      	ldr	r0, [sp, #16]
 800d3ea:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800d3ee:	4401      	add	r1, r0
 800d3f0:	b2b3      	uxth	r3, r6
 800d3f2:	b289      	uxth	r1, r1
 800d3f4:	441a      	add	r2, r3
 800d3f6:	9105      	str	r1, [sp, #20]
 800d3f8:	b292      	uxth	r2, r2
 800d3fa:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800d3fe:	fa0f f882 	sxth.w	r8, r2
 800d402:	4655      	mov	r5, sl
 800d404:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800d408:	9b03      	ldr	r3, [sp, #12]
 800d40a:	2b00      	cmp	r3, #0
 800d40c:	d058      	beq.n	800d4c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 800d40e:	9902      	ldr	r1, [sp, #8]
 800d410:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800d414:	f7ff fda0 	bl	800cf58 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d418:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d41c:	b1d8      	cbz	r0, 800d456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800d41e:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800d422:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800d426:	4576      	cmp	r6, lr
 800d428:	dc26      	bgt.n	800d478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800d42a:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800d42e:	44f4      	add	ip, lr
 800d430:	fa0f fc8c 	sxth.w	ip, ip
 800d434:	45e0      	cmp	r8, ip
 800d436:	db1f      	blt.n	800d478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800d438:	428f      	cmp	r7, r1
 800d43a:	fa1f fc81 	uxth.w	ip, r1
 800d43e:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800d442:	dc0f      	bgt.n	800d464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 800d444:	9805      	ldr	r0, [sp, #20]
 800d446:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800d44a:	eba0 0c0c 	sub.w	ip, r0, ip
 800d44e:	eba1 010c 	sub.w	r1, r1, ip
 800d452:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800d456:	4620      	mov	r0, r4
 800d458:	9903      	ldr	r1, [sp, #12]
 800d45a:	3901      	subs	r1, #1
 800d45c:	9103      	str	r1, [sp, #12]
 800d45e:	3d08      	subs	r5, #8
 800d460:	4604      	mov	r4, r0
 800d462:	e7cf      	b.n	800d404 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 800d464:	4461      	add	r1, ip
 800d466:	b209      	sxth	r1, r1
 800d468:	4549      	cmp	r1, r9
 800d46a:	dcf5      	bgt.n	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800d46c:	9904      	ldr	r1, [sp, #16]
 800d46e:	eba1 0c0c 	sub.w	ip, r1, ip
 800d472:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800d476:	e7ee      	b.n	800d456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800d478:	428f      	cmp	r7, r1
 800d47a:	dced      	bgt.n	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800d47c:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800d480:	4461      	add	r1, ip
 800d482:	b209      	sxth	r1, r1
 800d484:	4589      	cmp	r9, r1
 800d486:	dbe7      	blt.n	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800d488:	4576      	cmp	r6, lr
 800d48a:	fa1f fc8e 	uxth.w	ip, lr
 800d48e:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800d492:	dc08      	bgt.n	800d4a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800d494:	eba2 0c0c 	sub.w	ip, r2, ip
 800d498:	eba1 010c 	sub.w	r1, r1, ip
 800d49c:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800d4a0:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800d4a4:	e7d7      	b.n	800d456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800d4a6:	4461      	add	r1, ip
 800d4a8:	b209      	sxth	r1, r1
 800d4aa:	4588      	cmp	r8, r1
 800d4ac:	dbd4      	blt.n	800d458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800d4ae:	eba3 0c0c 	sub.w	ip, r3, ip
 800d4b2:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800d4b6:	e7ce      	b.n	800d456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800d4b8:	2000a5f6 	.word	0x2000a5f6
 800d4bc:	2000a5f4 	.word	0x2000a5f4
 800d4c0:	2c00      	cmp	r4, #0
 800d4c2:	f000 816a 	beq.w	800d79a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800d4c6:	9b00      	ldr	r3, [sp, #0]
 800d4c8:	3301      	adds	r3, #1
 800d4ca:	f000 8166 	beq.w	800d79a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800d4ce:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800d4d2:	4621      	mov	r1, r4
 800d4d4:	9802      	ldr	r0, [sp, #8]
 800d4d6:	f7ff fdb1 	bl	800d03c <_ZNK8touchgfx4Rect8includesERKS0_>
 800d4da:	b120      	cbz	r0, 800d4e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 800d4dc:	f8bd 1000 	ldrh.w	r1, [sp]
 800d4e0:	9801      	ldr	r0, [sp, #4]
 800d4e2:	f7ff fe79 	bl	800d1d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d4e6:	9902      	ldr	r1, [sp, #8]
 800d4e8:	4620      	mov	r0, r4
 800d4ea:	f7ff fd35 	bl	800cf58 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d4ee:	2800      	cmp	r0, #0
 800d4f0:	f000 809b 	beq.w	800d62a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800d4f4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800d4f8:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800d4fc:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800d500:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800d504:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d508:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800d50c:	fa1f f288 	uxth.w	r2, r8
 800d510:	19d5      	adds	r5, r2, r7
 800d512:	fa1f f985 	uxth.w	r9, r5
 800d516:	fa0f f589 	sxth.w	r5, r9
 800d51a:	b2a1      	uxth	r1, r4
 800d51c:	440b      	add	r3, r1
 800d51e:	9503      	str	r5, [sp, #12]
 800d520:	45a0      	cmp	r8, r4
 800d522:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800d526:	9507      	str	r5, [sp, #28]
 800d528:	b29b      	uxth	r3, r3
 800d52a:	f340 809d 	ble.w	800d668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800d52e:	1a52      	subs	r2, r2, r1
 800d530:	b292      	uxth	r2, r2
 800d532:	4584      	cmp	ip, r0
 800d534:	fa0f fe83 	sxth.w	lr, r3
 800d538:	b215      	sxth	r5, r2
 800d53a:	dd2f      	ble.n	800d59c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 800d53c:	9e00      	ldr	r6, [sp, #0]
 800d53e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800d542:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800d546:	9e03      	ldr	r6, [sp, #12]
 800d548:	eba6 060e 	sub.w	r6, r6, lr
 800d54c:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800d550:	fa1f fc8c 	uxth.w	ip, ip
 800d554:	b280      	uxth	r0, r0
 800d556:	ebac 0300 	sub.w	r3, ip, r0
 800d55a:	448c      	add	ip, r1
 800d55c:	4470      	add	r0, lr
 800d55e:	b29b      	uxth	r3, r3
 800d560:	fa0f fc8c 	sxth.w	ip, ip
 800d564:	b200      	sxth	r0, r0
 800d566:	b21c      	sxth	r4, r3
 800d568:	ebac 0000 	sub.w	r0, ip, r0
 800d56c:	4366      	muls	r6, r4
 800d56e:	4368      	muls	r0, r5
 800d570:	4286      	cmp	r6, r0
 800d572:	db09      	blt.n	800d588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800d574:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800d578:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800d57c:	4417      	add	r7, r2
 800d57e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d582:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800d586:	e681      	b.n	800d28c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d588:	440b      	add	r3, r1
 800d58a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d58e:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800d592:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800d596:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d59a:	e677      	b.n	800d28c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d59c:	9e03      	ldr	r6, [sp, #12]
 800d59e:	45b6      	cmp	lr, r6
 800d5a0:	da28      	bge.n	800d5f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 800d5a2:	9b00      	ldr	r3, [sp, #0]
 800d5a4:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800d5a8:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800d5ac:	eb04 030c 	add.w	r3, r4, ip
 800d5b0:	fa1f f883 	uxth.w	r8, r3
 800d5b4:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800d5b8:	4403      	add	r3, r0
 800d5ba:	eba3 0308 	sub.w	r3, r3, r8
 800d5be:	b29b      	uxth	r3, r3
 800d5c0:	fa0f f988 	sxth.w	r9, r8
 800d5c4:	eba0 000c 	sub.w	r0, r0, ip
 800d5c8:	fa0f f883 	sxth.w	r8, r3
 800d5cc:	eba6 060e 	sub.w	r6, r6, lr
 800d5d0:	4368      	muls	r0, r5
 800d5d2:	fb08 f606 	mul.w	r6, r8, r6
 800d5d6:	42b0      	cmp	r0, r6
 800d5d8:	dc06      	bgt.n	800d5e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d5da:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800d5de:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800d5e2:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800d5e6:	e7c9      	b.n	800d57c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 800d5e8:	4423      	add	r3, r4
 800d5ea:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800d5ee:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800d5f2:	e64b      	b.n	800d28c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d5f4:	9807      	ldr	r0, [sp, #28]
 800d5f6:	eba3 0309 	sub.w	r3, r3, r9
 800d5fa:	b29b      	uxth	r3, r3
 800d5fc:	2806      	cmp	r0, #6
 800d5fe:	fa0f fc83 	sxth.w	ip, r3
 800d602:	d818      	bhi.n	800d636 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 800d604:	4652      	mov	r2, sl
 800d606:	ab0a      	add	r3, sp, #40	; 0x28
 800d608:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800d60c:	6851      	ldr	r1, [r2, #4]
 800d60e:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800d612:	c303      	stmia	r3!, {r0, r1}
 800d614:	9b03      	ldr	r3, [sp, #12]
 800d616:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800d61a:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800d61e:	ab0a      	add	r3, sp, #40	; 0x28
 800d620:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d624:	9801      	ldr	r0, [sp, #4]
 800d626:	f7ff fdf9 	bl	800d21c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d62a:	9b00      	ldr	r3, [sp, #0]
 800d62c:	3b01      	subs	r3, #1
 800d62e:	9300      	str	r3, [sp, #0]
 800d630:	f1aa 0a08 	sub.w	sl, sl, #8
 800d634:	e747      	b.n	800d4c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 800d636:	9800      	ldr	r0, [sp, #0]
 800d638:	45ac      	cmp	ip, r5
 800d63a:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800d63e:	db0c      	blt.n	800d65a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 800d640:	4417      	add	r7, r2
 800d642:	b2bf      	uxth	r7, r7
 800d644:	4458      	add	r0, fp
 800d646:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800d64a:	440f      	add	r7, r1
 800d64c:	f8ad 4020 	strh.w	r4, [sp, #32]
 800d650:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800d654:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800d658:	e618      	b.n	800d28c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d65a:	4458      	add	r0, fp
 800d65c:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800d660:	443b      	add	r3, r7
 800d662:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800d666:	e611      	b.n	800d28c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d668:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800d66c:	fa1f f18c 	uxth.w	r1, ip
 800d670:	eb01 0e05 	add.w	lr, r1, r5
 800d674:	b282      	uxth	r2, r0
 800d676:	fa1f fe8e 	uxth.w	lr, lr
 800d67a:	9204      	str	r2, [sp, #16]
 800d67c:	fa0f f28e 	sxth.w	r2, lr
 800d680:	9205      	str	r2, [sp, #20]
 800d682:	9e04      	ldr	r6, [sp, #16]
 800d684:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800d688:	4432      	add	r2, r6
 800d68a:	b292      	uxth	r2, r2
 800d68c:	4584      	cmp	ip, r0
 800d68e:	9206      	str	r2, [sp, #24]
 800d690:	da26      	bge.n	800d6e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 800d692:	eba3 0309 	sub.w	r3, r3, r9
 800d696:	eba2 020e 	sub.w	r2, r2, lr
 800d69a:	b29b      	uxth	r3, r3
 800d69c:	b292      	uxth	r2, r2
 800d69e:	fa0f fa83 	sxth.w	sl, r3
 800d6a2:	b211      	sxth	r1, r2
 800d6a4:	eba0 000c 	sub.w	r0, r0, ip
 800d6a8:	eba4 0408 	sub.w	r4, r4, r8
 800d6ac:	fb0a f000 	mul.w	r0, sl, r0
 800d6b0:	434c      	muls	r4, r1
 800d6b2:	42a0      	cmp	r0, r4
 800d6b4:	9800      	ldr	r0, [sp, #0]
 800d6b6:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800d6ba:	dc06      	bgt.n	800d6ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800d6bc:	4458      	add	r0, fp
 800d6be:	9a05      	ldr	r2, [sp, #20]
 800d6c0:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800d6c4:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800d6c8:	e7ca      	b.n	800d660 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800d6ca:	eb0b 0300 	add.w	r3, fp, r0
 800d6ce:	9903      	ldr	r1, [sp, #12]
 800d6d0:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800d6d4:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800d6d8:	442a      	add	r2, r5
 800d6da:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d6de:	e5d5      	b.n	800d28c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d6e0:	9e04      	ldr	r6, [sp, #16]
 800d6e2:	9a03      	ldr	r2, [sp, #12]
 800d6e4:	1b89      	subs	r1, r1, r6
 800d6e6:	b21e      	sxth	r6, r3
 800d6e8:	b289      	uxth	r1, r1
 800d6ea:	4296      	cmp	r6, r2
 800d6ec:	fa0f fc81 	sxth.w	ip, r1
 800d6f0:	dd26      	ble.n	800d740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4e0>
 800d6f2:	eba3 0309 	sub.w	r3, r3, r9
 800d6f6:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800d6fa:	9e05      	ldr	r6, [sp, #20]
 800d6fc:	b29b      	uxth	r3, r3
 800d6fe:	eba6 0902 	sub.w	r9, r6, r2
 800d702:	b218      	sxth	r0, r3
 800d704:	eba4 0408 	sub.w	r4, r4, r8
 800d708:	fb0c f404 	mul.w	r4, ip, r4
 800d70c:	fb00 f909 	mul.w	r9, r0, r9
 800d710:	9a00      	ldr	r2, [sp, #0]
 800d712:	454c      	cmp	r4, r9
 800d714:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d718:	db03      	blt.n	800d722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800d71a:	445a      	add	r2, fp
 800d71c:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800d720:	e79e      	b.n	800d660 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800d722:	eb0b 0302 	add.w	r3, fp, r2
 800d726:	9a03      	ldr	r2, [sp, #12]
 800d728:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800d72c:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800d730:	4429      	add	r1, r5
 800d732:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800d736:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d73a:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d73e:	e5a5      	b.n	800d28c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d740:	9b06      	ldr	r3, [sp, #24]
 800d742:	9c07      	ldr	r4, [sp, #28]
 800d744:	eba3 020e 	sub.w	r2, r3, lr
 800d748:	b292      	uxth	r2, r2
 800d74a:	2c06      	cmp	r4, #6
 800d74c:	b213      	sxth	r3, r2
 800d74e:	d80d      	bhi.n	800d76c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 800d750:	4651      	mov	r1, sl
 800d752:	aa0a      	add	r2, sp, #40	; 0x28
 800d754:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800d758:	6849      	ldr	r1, [r1, #4]
 800d75a:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800d75e:	9b05      	ldr	r3, [sp, #20]
 800d760:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800d764:	c203      	stmia	r2!, {r0, r1}
 800d766:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800d76a:	e758      	b.n	800d61e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d76c:	9c00      	ldr	r4, [sp, #0]
 800d76e:	4563      	cmp	r3, ip
 800d770:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d774:	db0d      	blt.n	800d792 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 800d776:	4429      	add	r1, r5
 800d778:	9a04      	ldr	r2, [sp, #16]
 800d77a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d77e:	b289      	uxth	r1, r1
 800d780:	445c      	add	r4, fp
 800d782:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800d786:	4411      	add	r1, r2
 800d788:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800d78c:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800d790:	e57c      	b.n	800d28c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d792:	445c      	add	r4, fp
 800d794:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800d798:	e79e      	b.n	800d6d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 800d79a:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800d79e:	2f07      	cmp	r7, #7
 800d7a0:	d806      	bhi.n	800d7b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x550>
 800d7a2:	ab08      	add	r3, sp, #32
 800d7a4:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d7a8:	9801      	ldr	r0, [sp, #4]
 800d7aa:	f7ff fd37 	bl	800d21c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d7ae:	e5d7      	b.n	800d360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d7b0:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800d7b4:	f107 39ff 	add.w	r9, r7, #4294967295
 800d7b8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800d7bc:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800d7c0:	f04f 35ff 	mov.w	r5, #4294967295
 800d7c4:	2400      	movs	r4, #0
 800d7c6:	9304      	str	r3, [sp, #16]
 800d7c8:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800d7cc:	9300      	str	r3, [sp, #0]
 800d7ce:	f109 32ff 	add.w	r2, r9, #4294967295
 800d7d2:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800d7d6:	9303      	str	r3, [sp, #12]
 800d7d8:	4690      	mov	r8, r2
 800d7da:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800d7de:	f1b8 3fff 	cmp.w	r8, #4294967295
 800d7e2:	bf14      	ite	ne
 800d7e4:	9904      	ldrne	r1, [sp, #16]
 800d7e6:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800d7ea:	6818      	ldr	r0, [r3, #0]
 800d7ec:	9206      	str	r2, [sp, #24]
 800d7ee:	bf18      	it	ne
 800d7f0:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800d7f4:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800d7f8:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d7fc:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800d800:	9305      	str	r3, [sp, #20]
 800d802:	fb16 f601 	smulbb	r6, r6, r1
 800d806:	6859      	ldr	r1, [r3, #4]
 800d808:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d80c:	4671      	mov	r1, lr
 800d80e:	a80a      	add	r0, sp, #40	; 0x28
 800d810:	f7ff fc3a 	bl	800d088 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d814:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800d818:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800d81c:	9b03      	ldr	r3, [sp, #12]
 800d81e:	9a00      	ldr	r2, [sp, #0]
 800d820:	fb11 f100 	smulbb	r1, r1, r0
 800d824:	fb02 6603 	mla	r6, r2, r3, r6
 800d828:	1b8e      	subs	r6, r1, r6
 800d82a:	2008      	movs	r0, #8
 800d82c:	fb91 f1f0 	sdiv	r1, r1, r0
 800d830:	42b1      	cmp	r1, r6
 800d832:	dc21      	bgt.n	800d878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800d834:	4556      	cmp	r6, sl
 800d836:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800d83a:	da03      	bge.n	800d844 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e4>
 800d83c:	b1e6      	cbz	r6, 800d878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800d83e:	46b2      	mov	sl, r6
 800d840:	4645      	mov	r5, r8
 800d842:	464c      	mov	r4, r9
 800d844:	f108 38ff 	add.w	r8, r8, #4294967295
 800d848:	f118 0f02 	cmn.w	r8, #2
 800d84c:	d1c7      	bne.n	800d7de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57e>
 800d84e:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d852:	f1a7 0708 	sub.w	r7, r7, #8
 800d856:	4691      	mov	r9, r2
 800d858:	d1b6      	bne.n	800d7c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x568>
 800d85a:	9b01      	ldr	r3, [sp, #4]
 800d85c:	b2a6      	uxth	r6, r4
 800d85e:	00e4      	lsls	r4, r4, #3
 800d860:	1918      	adds	r0, r3, r4
 800d862:	1c6b      	adds	r3, r5, #1
 800d864:	d10b      	bne.n	800d87e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61e>
 800d866:	4601      	mov	r1, r0
 800d868:	9802      	ldr	r0, [sp, #8]
 800d86a:	f7ff fc0d 	bl	800d088 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d86e:	4631      	mov	r1, r6
 800d870:	9801      	ldr	r0, [sp, #4]
 800d872:	f7ff fcb1 	bl	800d1d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d876:	e509      	b.n	800d28c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d878:	4645      	mov	r5, r8
 800d87a:	464c      	mov	r4, r9
 800d87c:	e7ed      	b.n	800d85a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 800d87e:	9b01      	ldr	r3, [sp, #4]
 800d880:	00ed      	lsls	r5, r5, #3
 800d882:	1959      	adds	r1, r3, r5
 800d884:	f7ff fc00 	bl	800d088 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d888:	9b02      	ldr	r3, [sp, #8]
 800d88a:	cb03      	ldmia	r3!, {r0, r1}
 800d88c:	445d      	add	r5, fp
 800d88e:	445c      	add	r4, fp
 800d890:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800d894:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800d898:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800d89c:	9b02      	ldr	r3, [sp, #8]
 800d89e:	6861      	ldr	r1, [r4, #4]
 800d8a0:	c303      	stmia	r3!, {r0, r1}
 800d8a2:	e7e4      	b.n	800d86e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>

0800d8a4 <_ZN8touchgfx11Application10invalidateEv>:
 800d8a4:	4b09      	ldr	r3, [pc, #36]	; (800d8cc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800d8a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d8aa:	4b09      	ldr	r3, [pc, #36]	; (800d8d0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800d8ac:	b082      	sub	sp, #8
 800d8ae:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d8b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d8b6:	2100      	movs	r1, #0
 800d8b8:	9100      	str	r1, [sp, #0]
 800d8ba:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d8be:	ab02      	add	r3, sp, #8
 800d8c0:	e913 0006 	ldmdb	r3, {r1, r2}
 800d8c4:	b002      	add	sp, #8
 800d8c6:	f7ff bccb 	b.w	800d260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d8ca:	bf00      	nop
 800d8cc:	2000a5f4 	.word	0x2000a5f4
 800d8d0:	2000a5f6 	.word	0x2000a5f6

0800d8d4 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d8d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8d8:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800d8dc:	b09b      	sub	sp, #108	; 0x6c
 800d8de:	4604      	mov	r4, r0
 800d8e0:	4630      	mov	r0, r6
 800d8e2:	f7fb fe20 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d8e6:	4605      	mov	r5, r0
 800d8e8:	b940      	cbnz	r0, 800d8fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800d8ea:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d8ee:	4620      	mov	r0, r4
 800d8f0:	f7ff fcb6 	bl	800d260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d8f4:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800d8f8:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d8fc:	4bc6      	ldr	r3, [pc, #792]	; (800dc18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800d8fe:	681b      	ldr	r3, [r3, #0]
 800d900:	b33b      	cbz	r3, 800d952 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800d902:	4dc6      	ldr	r5, [pc, #792]	; (800dc1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800d904:	4628      	mov	r0, r5
 800d906:	f7fb fe0e 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d90a:	4606      	mov	r6, r0
 800d90c:	bb08      	cbnz	r0, 800d952 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800d90e:	4628      	mov	r0, r5
 800d910:	f7ff f9c4 	bl	800cc9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d914:	6829      	ldr	r1, [r5, #0]
 800d916:	686a      	ldr	r2, [r5, #4]
 800d918:	4620      	mov	r0, r4
 800d91a:	f7ff fca1 	bl	800d260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d91e:	802e      	strh	r6, [r5, #0]
 800d920:	806e      	strh	r6, [r5, #2]
 800d922:	80ae      	strh	r6, [r5, #4]
 800d924:	80ee      	strh	r6, [r5, #6]
 800d926:	4dbe      	ldr	r5, [pc, #760]	; (800dc20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800d928:	a809      	add	r0, sp, #36	; 0x24
 800d92a:	f7ff fc04 	bl	800d136 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d92e:	882f      	ldrh	r7, [r5, #0]
 800d930:	463e      	mov	r6, r7
 800d932:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d936:	42b3      	cmp	r3, r6
 800d938:	d912      	bls.n	800d960 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 800d93a:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d93e:	a809      	add	r0, sp, #36	; 0x24
 800d940:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d944:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d948:	3601      	adds	r6, #1
 800d94a:	f7ff fc67 	bl	800d21c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d94e:	b2b6      	uxth	r6, r6
 800d950:	e7ef      	b.n	800d932 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 800d952:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d956:	2b00      	cmp	r3, #0
 800d958:	d1e5      	bne.n	800d926 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 800d95a:	b01b      	add	sp, #108	; 0x6c
 800d95c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d960:	463e      	mov	r6, r7
 800d962:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d966:	42b3      	cmp	r3, r6
 800d968:	d90b      	bls.n	800d982 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800d96a:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d96e:	4620      	mov	r0, r4
 800d970:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d974:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d978:	3601      	adds	r6, #1
 800d97a:	f7ff fc71 	bl	800d260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d97e:	b2b6      	uxth	r6, r6
 800d980:	e7ef      	b.n	800d962 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 800d982:	4ea8      	ldr	r6, [pc, #672]	; (800dc24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800d984:	6833      	ldr	r3, [r6, #0]
 800d986:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d98a:	2b01      	cmp	r3, #1
 800d98c:	f040 80d2 	bne.w	800db34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 800d990:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800d994:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 800d998:	4639      	mov	r1, r7
 800d99a:	33aa      	adds	r3, #170	; 0xaa
 800d99c:	2700      	movs	r7, #0
 800d99e:	458c      	cmp	ip, r1
 800d9a0:	f103 0308 	add.w	r3, r3, #8
 800d9a4:	dd0a      	ble.n	800d9bc <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 800d9a6:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d9aa:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800d9ae:	4402      	add	r2, r0
 800d9b0:	b212      	sxth	r2, r2
 800d9b2:	4297      	cmp	r7, r2
 800d9b4:	bfb8      	it	lt
 800d9b6:	4617      	movlt	r7, r2
 800d9b8:	3101      	adds	r1, #1
 800d9ba:	e7f0      	b.n	800d99e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800d9bc:	4b9a      	ldr	r3, [pc, #616]	; (800dc28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800d9be:	f8b3 9000 	ldrh.w	r9, [r3]
 800d9c2:	2300      	movs	r3, #0
 800d9c4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d9c8:	f1b9 0f0f 	cmp.w	r9, #15
 800d9cc:	bf8c      	ite	hi
 800d9ce:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 800d9d2:	f04f 0901 	movls.w	r9, #1
 800d9d6:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 800d9da:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800d9de:	4440      	add	r0, r8
 800d9e0:	fa0f f880 	sxth.w	r8, r0
 800d9e4:	6830      	ldr	r0, [r6, #0]
 800d9e6:	4547      	cmp	r7, r8
 800d9e8:	6803      	ldr	r3, [r0, #0]
 800d9ea:	f340 8086 	ble.w	800dafa <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 800d9ee:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800d9f2:	4798      	blx	r3
 800d9f4:	eb08 0309 	add.w	r3, r8, r9
 800d9f8:	4298      	cmp	r0, r3
 800d9fa:	da08      	bge.n	800da0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800d9fc:	4287      	cmp	r7, r0
 800d9fe:	dd06      	ble.n	800da0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800da00:	4580      	cmp	r8, r0
 800da02:	dd70      	ble.n	800dae6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800da04:	f1b8 0f00 	cmp.w	r8, #0
 800da08:	dd6d      	ble.n	800dae6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800da0a:	4638      	mov	r0, r7
 800da0c:	e004      	b.n	800da18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 800da0e:	4580      	cmp	r8, r0
 800da10:	dcfb      	bgt.n	800da0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 800da12:	42b8      	cmp	r0, r7
 800da14:	bfa8      	it	ge
 800da16:	4638      	movge	r0, r7
 800da18:	4b84      	ldr	r3, [pc, #528]	; (800dc2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800da1a:	f8ad 8016 	strh.w	r8, [sp, #22]
 800da1e:	eba0 0008 	sub.w	r0, r0, r8
 800da22:	f9b3 3000 	ldrsh.w	r3, [r3]
 800da26:	f8b5 8000 	ldrh.w	r8, [r5]
 800da2a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800da2e:	2200      	movs	r2, #0
 800da30:	f8ad 2014 	strh.w	r2, [sp, #20]
 800da34:	f8ad 001a 	strh.w	r0, [sp, #26]
 800da38:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800da3c:	4543      	cmp	r3, r8
 800da3e:	d9ca      	bls.n	800d9d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800da40:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 800da44:	ab07      	add	r3, sp, #28
 800da46:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800da4a:	6851      	ldr	r1, [r2, #4]
 800da4c:	c303      	stmia	r3!, {r0, r1}
 800da4e:	a905      	add	r1, sp, #20
 800da50:	a807      	add	r0, sp, #28
 800da52:	f7ff fa81 	bl	800cf58 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800da56:	2800      	cmp	r0, #0
 800da58:	d04c      	beq.n	800daf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 800da5a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800da5e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800da62:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800da66:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800da6a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800da6e:	4686      	mov	lr, r0
 800da70:	4290      	cmp	r0, r2
 800da72:	4450      	add	r0, sl
 800da74:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800da78:	bfb8      	it	lt
 800da7a:	4696      	movlt	lr, r2
 800da7c:	4452      	add	r2, sl
 800da7e:	b280      	uxth	r0, r0
 800da80:	b292      	uxth	r2, r2
 800da82:	4299      	cmp	r1, r3
 800da84:	fa0f fb80 	sxth.w	fp, r0
 800da88:	fa0f fa82 	sxth.w	sl, r2
 800da8c:	468c      	mov	ip, r1
 800da8e:	bfb8      	it	lt
 800da90:	469c      	movlt	ip, r3
 800da92:	45d3      	cmp	fp, sl
 800da94:	bfb8      	it	lt
 800da96:	4602      	movlt	r2, r0
 800da98:	eba2 020e 	sub.w	r2, r2, lr
 800da9c:	f8ad 2020 	strh.w	r2, [sp, #32]
 800daa0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800daa4:	f8ad e01c 	strh.w	lr, [sp, #28]
 800daa8:	4411      	add	r1, r2
 800daaa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800daae:	f8ad c01e 	strh.w	ip, [sp, #30]
 800dab2:	4413      	add	r3, r2
 800dab4:	b289      	uxth	r1, r1
 800dab6:	b29b      	uxth	r3, r3
 800dab8:	b208      	sxth	r0, r1
 800daba:	b21a      	sxth	r2, r3
 800dabc:	4290      	cmp	r0, r2
 800dabe:	bfb8      	it	lt
 800dac0:	460b      	movlt	r3, r1
 800dac2:	eba3 030c 	sub.w	r3, r3, ip
 800dac6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800daca:	a807      	add	r0, sp, #28
 800dacc:	f7fb fd2b 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dad0:	b920      	cbnz	r0, 800dadc <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 800dad2:	6823      	ldr	r3, [r4, #0]
 800dad4:	a907      	add	r1, sp, #28
 800dad6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dad8:	4620      	mov	r0, r4
 800dada:	4798      	blx	r3
 800dadc:	f108 0801 	add.w	r8, r8, #1
 800dae0:	fa1f f888 	uxth.w	r8, r8
 800dae4:	e7a8      	b.n	800da38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 800dae6:	6830      	ldr	r0, [r6, #0]
 800dae8:	6803      	ldr	r3, [r0, #0]
 800daea:	2101      	movs	r1, #1
 800daec:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800daf0:	4798      	blx	r3
 800daf2:	e770      	b.n	800d9d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800daf4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800daf8:	e7e7      	b.n	800daca <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 800dafa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800dafc:	4798      	blx	r3
 800dafe:	4b4c      	ldr	r3, [pc, #304]	; (800dc30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800db00:	781b      	ldrb	r3, [r3, #0]
 800db02:	2b00      	cmp	r3, #0
 800db04:	f43f af29 	beq.w	800d95a <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800db08:	2300      	movs	r3, #0
 800db0a:	882d      	ldrh	r5, [r5, #0]
 800db0c:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800db10:	34ea      	adds	r4, #234	; 0xea
 800db12:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800db16:	42ab      	cmp	r3, r5
 800db18:	f67f af1f 	bls.w	800d95a <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800db1c:	ab1a      	add	r3, sp, #104	; 0x68
 800db1e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800db22:	3b44      	subs	r3, #68	; 0x44
 800db24:	e893 0006 	ldmia.w	r3, {r1, r2}
 800db28:	4620      	mov	r0, r4
 800db2a:	3501      	adds	r5, #1
 800db2c:	f7ff fb76 	bl	800d21c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800db30:	b2ad      	uxth	r5, r5
 800db32:	e7ee      	b.n	800db12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800db34:	2b02      	cmp	r3, #2
 800db36:	f040 8136 	bne.w	800dda6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800db3a:	4b3e      	ldr	r3, [pc, #248]	; (800dc34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800db3c:	781b      	ldrb	r3, [r3, #0]
 800db3e:	2b01      	cmp	r3, #1
 800db40:	d02c      	beq.n	800db9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 800db42:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 800db46:	882a      	ldrh	r2, [r5, #0]
 800db48:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800db4c:	3201      	adds	r2, #1
 800db4e:	b292      	uxth	r2, r2
 800db50:	2900      	cmp	r1, #0
 800db52:	d0d4      	beq.n	800dafe <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800db54:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 800db58:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800db5c:	441f      	add	r7, r3
 800db5e:	b23f      	sxth	r7, r7
 800db60:	4610      	mov	r0, r2
 800db62:	f04f 0900 	mov.w	r9, #0
 800db66:	b283      	uxth	r3, r0
 800db68:	4299      	cmp	r1, r3
 800db6a:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 800db6e:	f240 80c5 	bls.w	800dcfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 800db72:	44a0      	add	r8, r4
 800db74:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 800db78:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 800db7c:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 800db80:	4573      	cmp	r3, lr
 800db82:	4684      	mov	ip, r0
 800db84:	f340 80a7 	ble.w	800dcd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 800db88:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 800db8c:	4477      	add	r7, lr
 800db8e:	b23f      	sxth	r7, r7
 800db90:	429f      	cmp	r7, r3
 800db92:	bfa8      	it	ge
 800db94:	461f      	movge	r7, r3
 800db96:	3001      	adds	r0, #1
 800db98:	46e1      	mov	r9, ip
 800db9a:	e7e4      	b.n	800db66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 800db9c:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800dba0:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800dba4:	f1bb 0f00 	cmp.w	fp, #0
 800dba8:	d0a9      	beq.n	800dafe <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800dbaa:	882b      	ldrh	r3, [r5, #0]
 800dbac:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800dbb0:	3301      	adds	r3, #1
 800dbb2:	b29b      	uxth	r3, r3
 800dbb4:	f04f 0800 	mov.w	r8, #0
 800dbb8:	b299      	uxth	r1, r3
 800dbba:	458b      	cmp	fp, r1
 800dbbc:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800dbc0:	d93a      	bls.n	800dc38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800dbc2:	4427      	add	r7, r4
 800dbc4:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800dbc8:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 800dbcc:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 800dbd0:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800dbd4:	4408      	add	r0, r1
 800dbd6:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800dbda:	4471      	add	r1, lr
 800dbdc:	b200      	sxth	r0, r0
 800dbde:	b209      	sxth	r1, r1
 800dbe0:	4288      	cmp	r0, r1
 800dbe2:	469c      	mov	ip, r3
 800dbe4:	da06      	bge.n	800dbf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 800dbe6:	4586      	cmp	lr, r0
 800dbe8:	4672      	mov	r2, lr
 800dbea:	bfb8      	it	lt
 800dbec:	4602      	movlt	r2, r0
 800dbee:	3301      	adds	r3, #1
 800dbf0:	46e0      	mov	r8, ip
 800dbf2:	e7e1      	b.n	800dbb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 800dbf4:	d10b      	bne.n	800dc0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800dbf6:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 800dbfa:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800dbfe:	458c      	cmp	ip, r1
 800dc00:	bfb4      	ite	lt
 800dc02:	469c      	movlt	ip, r3
 800dc04:	46c4      	movge	ip, r8
 800dc06:	4572      	cmp	r2, lr
 800dc08:	bfb8      	it	lt
 800dc0a:	4672      	movlt	r2, lr
 800dc0c:	e7ef      	b.n	800dbee <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800dc0e:	428a      	cmp	r2, r1
 800dc10:	bfb8      	it	lt
 800dc12:	460a      	movlt	r2, r1
 800dc14:	46c4      	mov	ip, r8
 800dc16:	e7ea      	b.n	800dbee <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800dc18:	2000a638 	.word	0x2000a638
 800dc1c:	2000a644 	.word	0x2000a644
 800dc20:	20000060 	.word	0x20000060
 800dc24:	2000a600 	.word	0x2000a600
 800dc28:	2000a5f6 	.word	0x2000a5f6
 800dc2c:	2000a5f4 	.word	0x2000a5f4
 800dc30:	2000a5fe 	.word	0x2000a5fe
 800dc34:	2000a5f8 	.word	0x2000a5f8
 800dc38:	19e1      	adds	r1, r4, r7
 800dc3a:	ab07      	add	r3, sp, #28
 800dc3c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800dc40:	6849      	ldr	r1, [r1, #4]
 800dc42:	c303      	stmia	r3!, {r0, r1}
 800dc44:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800dc48:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dc4c:	2b13      	cmp	r3, #19
 800dc4e:	bfd8      	it	le
 800dc50:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800dc54:	f8ad 201c 	strh.w	r2, [sp, #28]
 800dc58:	440b      	add	r3, r1
 800dc5a:	1a9b      	subs	r3, r3, r2
 800dc5c:	a807      	add	r0, sp, #28
 800dc5e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dc62:	f7ff f835 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800dc66:	a807      	add	r0, sp, #28
 800dc68:	f7fb fc5d 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dc6c:	2800      	cmp	r0, #0
 800dc6e:	d197      	bne.n	800dba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800dc70:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800dc74:	6830      	ldr	r0, [r6, #0]
 800dc76:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800dc7a:	f8d0 e000 	ldr.w	lr, [r0]
 800dc7e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800dc82:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800dc86:	f1bc 0f14 	cmp.w	ip, #20
 800dc8a:	bfa8      	it	ge
 800dc8c:	f04f 0c14 	movge.w	ip, #20
 800dc90:	fa1f fc8c 	uxth.w	ip, ip
 800dc94:	f8cd c000 	str.w	ip, [sp]
 800dc98:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800dc9c:	47d0      	blx	sl
 800dc9e:	4682      	mov	sl, r0
 800dca0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800dca4:	a807      	add	r0, sp, #28
 800dca6:	f7fe fff9 	bl	800cc9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dcaa:	6823      	ldr	r3, [r4, #0]
 800dcac:	4427      	add	r7, r4
 800dcae:	4620      	mov	r0, r4
 800dcb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dcb2:	a907      	add	r1, sp, #28
 800dcb4:	4798      	blx	r3
 800dcb6:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 800dcba:	eba0 000a 	sub.w	r0, r0, sl
 800dcbe:	b200      	sxth	r0, r0
 800dcc0:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 800dcc4:	2800      	cmp	r0, #0
 800dcc6:	f47f af6b 	bne.w	800dba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800dcca:	fa1f f188 	uxth.w	r1, r8
 800dcce:	4648      	mov	r0, r9
 800dcd0:	f7ff fa82 	bl	800d1d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dcd4:	e764      	b.n	800dba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800dcd6:	d10c      	bne.n	800dcf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 800dcd8:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 800dcdc:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 800dce0:	45e6      	cmp	lr, ip
 800dce2:	bfb4      	ite	lt
 800dce4:	4684      	movlt	ip, r0
 800dce6:	46cc      	movge	ip, r9
 800dce8:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 800dcec:	4473      	add	r3, lr
 800dcee:	b21b      	sxth	r3, r3
 800dcf0:	e74e      	b.n	800db90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 800dcf2:	4577      	cmp	r7, lr
 800dcf4:	bfa8      	it	ge
 800dcf6:	4677      	movge	r7, lr
 800dcf8:	46cc      	mov	ip, r9
 800dcfa:	e74c      	b.n	800db96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 800dcfc:	eb0a 0008 	add.w	r0, sl, r8
 800dd00:	44a0      	add	r8, r4
 800dd02:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800dd06:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 800dd0a:	f1bb 0f13 	cmp.w	fp, #19
 800dd0e:	bfde      	ittt	le
 800dd10:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 800dd14:	445f      	addle	r7, fp
 800dd16:	b23f      	sxthle	r7, r7
 800dd18:	f7fb fc05 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd1c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800dd20:	2800      	cmp	r0, #0
 800dd22:	f47f af15 	bne.w	800db50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 800dd26:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 800dd2a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800dd2e:	1abf      	subs	r7, r7, r2
 800dd30:	2f14      	cmp	r7, #20
 800dd32:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 800dd36:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 800dd3a:	6830      	ldr	r0, [r6, #0]
 800dd3c:	f8ad 101c 	strh.w	r1, [sp, #28]
 800dd40:	f8ad 201e 	strh.w	r2, [sp, #30]
 800dd44:	f8ad 3020 	strh.w	r3, [sp, #32]
 800dd48:	bfa8      	it	ge
 800dd4a:	2714      	movge	r7, #20
 800dd4c:	f8d0 c000 	ldr.w	ip, [r0]
 800dd50:	b2bf      	uxth	r7, r7
 800dd52:	fa1f fb8b 	uxth.w	fp, fp
 800dd56:	455f      	cmp	r7, fp
 800dd58:	bf94      	ite	ls
 800dd5a:	9700      	strls	r7, [sp, #0]
 800dd5c:	f8cd b000 	strhi.w	fp, [sp]
 800dd60:	b292      	uxth	r2, r2
 800dd62:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 800dd66:	b29b      	uxth	r3, r3
 800dd68:	b289      	uxth	r1, r1
 800dd6a:	47b8      	blx	r7
 800dd6c:	6823      	ldr	r3, [r4, #0]
 800dd6e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800dd72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dd74:	a907      	add	r1, sp, #28
 800dd76:	4620      	mov	r0, r4
 800dd78:	4798      	blx	r3
 800dd7a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800dd7e:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800dd82:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 800dd86:	1a5b      	subs	r3, r3, r1
 800dd88:	440a      	add	r2, r1
 800dd8a:	b21b      	sxth	r3, r3
 800dd8c:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 800dd90:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 800dd94:	2b00      	cmp	r3, #0
 800dd96:	f47f aed6 	bne.w	800db46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800dd9a:	fa1f f189 	uxth.w	r1, r9
 800dd9e:	4650      	mov	r0, sl
 800dda0:	f7ff fa1a 	bl	800d1d8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800dda4:	e6cf      	b.n	800db46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800dda6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800ddaa:	42bb      	cmp	r3, r7
 800ddac:	f67f aea7 	bls.w	800dafe <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800ddb0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800ddb4:	ab07      	add	r3, sp, #28
 800ddb6:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800ddba:	6851      	ldr	r1, [r2, #4]
 800ddbc:	c303      	stmia	r3!, {r0, r1}
 800ddbe:	a807      	add	r0, sp, #28
 800ddc0:	f7fb fbb1 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ddc4:	b920      	cbnz	r0, 800ddd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fc>
 800ddc6:	6823      	ldr	r3, [r4, #0]
 800ddc8:	a907      	add	r1, sp, #28
 800ddca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ddcc:	4620      	mov	r0, r4
 800ddce:	4798      	blx	r3
 800ddd0:	3701      	adds	r7, #1
 800ddd2:	b2bf      	uxth	r7, r7
 800ddd4:	e7e7      	b.n	800dda6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800ddd6:	bf00      	nop

0800ddd8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ddd8:	4b03      	ldr	r3, [pc, #12]	; (800dde8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ddda:	2200      	movs	r2, #0
 800dddc:	801a      	strh	r2, [r3, #0]
 800ddde:	805a      	strh	r2, [r3, #2]
 800dde0:	809a      	strh	r2, [r3, #4]
 800dde2:	80da      	strh	r2, [r3, #6]
 800dde4:	4770      	bx	lr
 800dde6:	bf00      	nop
 800dde8:	2000a644 	.word	0x2000a644

0800ddec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ddec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ddf0:	4606      	mov	r6, r0
 800ddf2:	b09d      	sub	sp, #116	; 0x74
 800ddf4:	a803      	add	r0, sp, #12
 800ddf6:	4614      	mov	r4, r2
 800ddf8:	468a      	mov	sl, r1
 800ddfa:	461d      	mov	r5, r3
 800ddfc:	f000 fd6a 	bl	800e8d4 <_ZN8touchgfx12TextProviderC1Ev>
 800de00:	6833      	ldr	r3, [r6, #0]
 800de02:	4630      	mov	r0, r6
 800de04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800de06:	4798      	blx	r3
 800de08:	6833      	ldr	r3, [r6, #0]
 800de0a:	4607      	mov	r7, r0
 800de0c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800de0e:	4630      	mov	r0, r6
 800de10:	4798      	blx	r3
 800de12:	462a      	mov	r2, r5
 800de14:	9000      	str	r0, [sp, #0]
 800de16:	4621      	mov	r1, r4
 800de18:	463b      	mov	r3, r7
 800de1a:	a803      	add	r0, sp, #12
 800de1c:	f000 fdc6 	bl	800e9ac <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800de20:	2500      	movs	r5, #0
 800de22:	462c      	mov	r4, r5
 800de24:	46a9      	mov	r9, r5
 800de26:	46a8      	mov	r8, r5
 800de28:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800de2c:	2300      	movs	r3, #0
 800de2e:	9302      	str	r3, [sp, #8]
 800de30:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800de34:	429c      	cmp	r4, r3
 800de36:	d002      	beq.n	800de3e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800de38:	455c      	cmp	r4, fp
 800de3a:	bf18      	it	ne
 800de3c:	4625      	movne	r5, r4
 800de3e:	ab02      	add	r3, sp, #8
 800de40:	4632      	mov	r2, r6
 800de42:	4651      	mov	r1, sl
 800de44:	a803      	add	r0, sp, #12
 800de46:	f001 f8c1 	bl	800efcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800de4a:	4604      	mov	r4, r0
 800de4c:	b108      	cbz	r0, 800de52 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800de4e:	280a      	cmp	r0, #10
 800de50:	d10a      	bne.n	800de68 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800de52:	45c1      	cmp	r9, r8
 800de54:	bf38      	it	cc
 800de56:	46c1      	movcc	r9, r8
 800de58:	f04f 0800 	mov.w	r8, #0
 800de5c:	2c00      	cmp	r4, #0
 800de5e:	d1e5      	bne.n	800de2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800de60:	4648      	mov	r0, r9
 800de62:	b01d      	add	sp, #116	; 0x74
 800de64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de68:	9a02      	ldr	r2, [sp, #8]
 800de6a:	2a00      	cmp	r2, #0
 800de6c:	d0de      	beq.n	800de2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800de6e:	7b57      	ldrb	r7, [r2, #13]
 800de70:	6833      	ldr	r3, [r6, #0]
 800de72:	8894      	ldrh	r4, [r2, #4]
 800de74:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800de76:	007f      	lsls	r7, r7, #1
 800de78:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800de7c:	7a97      	ldrb	r7, [r2, #10]
 800de7e:	4629      	mov	r1, r5
 800de80:	4307      	orrs	r7, r0
 800de82:	4630      	mov	r0, r6
 800de84:	4798      	blx	r3
 800de86:	4438      	add	r0, r7
 800de88:	4480      	add	r8, r0
 800de8a:	fa1f f888 	uxth.w	r8, r8
 800de8e:	e7e5      	b.n	800de5c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800de90 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800de90:	b508      	push	{r3, lr}
 800de92:	6803      	ldr	r3, [r0, #0]
 800de94:	68db      	ldr	r3, [r3, #12]
 800de96:	4798      	blx	r3
 800de98:	b128      	cbz	r0, 800dea6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800de9a:	7b43      	ldrb	r3, [r0, #13]
 800de9c:	7a80      	ldrb	r0, [r0, #10]
 800de9e:	005b      	lsls	r3, r3, #1
 800dea0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dea4:	4318      	orrs	r0, r3
 800dea6:	bd08      	pop	{r3, pc}

0800dea8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800dea8:	b40e      	push	{r1, r2, r3}
 800deaa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800deac:	b09e      	sub	sp, #120	; 0x78
 800deae:	ab23      	add	r3, sp, #140	; 0x8c
 800deb0:	4605      	mov	r5, r0
 800deb2:	f853 4b04 	ldr.w	r4, [r3], #4
 800deb6:	9303      	str	r3, [sp, #12]
 800deb8:	a805      	add	r0, sp, #20
 800deba:	f000 fd0b 	bl	800e8d4 <_ZN8touchgfx12TextProviderC1Ev>
 800debe:	682b      	ldr	r3, [r5, #0]
 800dec0:	4628      	mov	r0, r5
 800dec2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dec4:	4798      	blx	r3
 800dec6:	682b      	ldr	r3, [r5, #0]
 800dec8:	4606      	mov	r6, r0
 800deca:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800decc:	4628      	mov	r0, r5
 800dece:	4798      	blx	r3
 800ded0:	4633      	mov	r3, r6
 800ded2:	ae1e      	add	r6, sp, #120	; 0x78
 800ded4:	4621      	mov	r1, r4
 800ded6:	9000      	str	r0, [sp, #0]
 800ded8:	9a03      	ldr	r2, [sp, #12]
 800deda:	2400      	movs	r4, #0
 800dedc:	a805      	add	r0, sp, #20
 800dede:	f000 fd65 	bl	800e9ac <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dee2:	f846 4d68 	str.w	r4, [r6, #-104]!
 800dee6:	462a      	mov	r2, r5
 800dee8:	4633      	mov	r3, r6
 800deea:	4621      	mov	r1, r4
 800deec:	a805      	add	r0, sp, #20
 800deee:	f001 f86d 	bl	800efcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800def2:	b1f0      	cbz	r0, 800df32 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800def4:	280a      	cmp	r0, #10
 800def6:	d018      	beq.n	800df2a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800def8:	9f04      	ldr	r7, [sp, #16]
 800defa:	b1b7      	cbz	r7, 800df2a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800defc:	7b78      	ldrb	r0, [r7, #13]
 800defe:	7a3b      	ldrb	r3, [r7, #8]
 800df00:	88aa      	ldrh	r2, [r5, #4]
 800df02:	00c1      	lsls	r1, r0, #3
 800df04:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800df08:	4319      	orrs	r1, r3
 800df0a:	0643      	lsls	r3, r0, #25
 800df0c:	bf44      	itt	mi
 800df0e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800df12:	b219      	sxthmi	r1, r3
 800df14:	0100      	lsls	r0, r0, #4
 800df16:	79fb      	ldrb	r3, [r7, #7]
 800df18:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800df1c:	4303      	orrs	r3, r0
 800df1e:	4413      	add	r3, r2
 800df20:	1a5b      	subs	r3, r3, r1
 800df22:	b29b      	uxth	r3, r3
 800df24:	42a3      	cmp	r3, r4
 800df26:	bfc8      	it	gt
 800df28:	b21c      	sxthgt	r4, r3
 800df2a:	4633      	mov	r3, r6
 800df2c:	462a      	mov	r2, r5
 800df2e:	2100      	movs	r1, #0
 800df30:	e7dc      	b.n	800deec <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800df32:	b2a0      	uxth	r0, r4
 800df34:	b01e      	add	sp, #120	; 0x78
 800df36:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800df3a:	b003      	add	sp, #12
 800df3c:	4770      	bx	lr

0800df3e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800df3e:	b40e      	push	{r1, r2, r3}
 800df40:	b570      	push	{r4, r5, r6, lr}
 800df42:	b09d      	sub	sp, #116	; 0x74
 800df44:	ab21      	add	r3, sp, #132	; 0x84
 800df46:	4604      	mov	r4, r0
 800df48:	f853 5b04 	ldr.w	r5, [r3], #4
 800df4c:	9302      	str	r3, [sp, #8]
 800df4e:	a803      	add	r0, sp, #12
 800df50:	f000 fcc0 	bl	800e8d4 <_ZN8touchgfx12TextProviderC1Ev>
 800df54:	6823      	ldr	r3, [r4, #0]
 800df56:	4620      	mov	r0, r4
 800df58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800df5a:	4798      	blx	r3
 800df5c:	6823      	ldr	r3, [r4, #0]
 800df5e:	4606      	mov	r6, r0
 800df60:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800df62:	4620      	mov	r0, r4
 800df64:	4798      	blx	r3
 800df66:	4633      	mov	r3, r6
 800df68:	9000      	str	r0, [sp, #0]
 800df6a:	9a02      	ldr	r2, [sp, #8]
 800df6c:	4629      	mov	r1, r5
 800df6e:	a803      	add	r0, sp, #12
 800df70:	f000 fd1c 	bl	800e9ac <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800df74:	a803      	add	r0, sp, #12
 800df76:	f001 f923 	bl	800f1c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800df7a:	2401      	movs	r4, #1
 800df7c:	b2a3      	uxth	r3, r4
 800df7e:	b140      	cbz	r0, 800df92 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800df80:	280a      	cmp	r0, #10
 800df82:	bf08      	it	eq
 800df84:	3301      	addeq	r3, #1
 800df86:	a803      	add	r0, sp, #12
 800df88:	bf08      	it	eq
 800df8a:	b21c      	sxtheq	r4, r3
 800df8c:	f001 f918 	bl	800f1c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800df90:	e7f4      	b.n	800df7c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800df92:	4618      	mov	r0, r3
 800df94:	b01d      	add	sp, #116	; 0x74
 800df96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800df9a:	b003      	add	sp, #12
 800df9c:	4770      	bx	lr

0800df9e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800df9e:	b40e      	push	{r1, r2, r3}
 800dfa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfa2:	b09e      	sub	sp, #120	; 0x78
 800dfa4:	ab23      	add	r3, sp, #140	; 0x8c
 800dfa6:	4604      	mov	r4, r0
 800dfa8:	f853 5b04 	ldr.w	r5, [r3], #4
 800dfac:	9303      	str	r3, [sp, #12]
 800dfae:	a805      	add	r0, sp, #20
 800dfb0:	f000 fc90 	bl	800e8d4 <_ZN8touchgfx12TextProviderC1Ev>
 800dfb4:	6823      	ldr	r3, [r4, #0]
 800dfb6:	4620      	mov	r0, r4
 800dfb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dfba:	4798      	blx	r3
 800dfbc:	6823      	ldr	r3, [r4, #0]
 800dfbe:	4606      	mov	r6, r0
 800dfc0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dfc2:	4620      	mov	r0, r4
 800dfc4:	4798      	blx	r3
 800dfc6:	4633      	mov	r3, r6
 800dfc8:	4629      	mov	r1, r5
 800dfca:	9000      	str	r0, [sp, #0]
 800dfcc:	9a03      	ldr	r2, [sp, #12]
 800dfce:	a805      	add	r0, sp, #20
 800dfd0:	ad1e      	add	r5, sp, #120	; 0x78
 800dfd2:	f000 fceb 	bl	800e9ac <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dfd6:	2100      	movs	r1, #0
 800dfd8:	f845 1d68 	str.w	r1, [r5, #-104]!
 800dfdc:	4622      	mov	r2, r4
 800dfde:	462b      	mov	r3, r5
 800dfe0:	a805      	add	r0, sp, #20
 800dfe2:	f000 fff3 	bl	800efcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dfe6:	26ff      	movs	r6, #255	; 0xff
 800dfe8:	b1d8      	cbz	r0, 800e022 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800dfea:	280a      	cmp	r0, #10
 800dfec:	d012      	beq.n	800e014 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800dfee:	9804      	ldr	r0, [sp, #16]
 800dff0:	b180      	cbz	r0, 800e014 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800dff2:	7b47      	ldrb	r7, [r0, #13]
 800dff4:	7922      	ldrb	r2, [r4, #4]
 800dff6:	00fb      	lsls	r3, r7, #3
 800dff8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800dffc:	7a03      	ldrb	r3, [r0, #8]
 800dffe:	430b      	orrs	r3, r1
 800e000:	0679      	lsls	r1, r7, #25
 800e002:	bf44      	itt	mi
 800e004:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e008:	b21b      	sxthmi	r3, r3
 800e00a:	1ad3      	subs	r3, r2, r3
 800e00c:	b2db      	uxtb	r3, r3
 800e00e:	429e      	cmp	r6, r3
 800e010:	bf28      	it	cs
 800e012:	461e      	movcs	r6, r3
 800e014:	462b      	mov	r3, r5
 800e016:	4622      	mov	r2, r4
 800e018:	2100      	movs	r1, #0
 800e01a:	a805      	add	r0, sp, #20
 800e01c:	f000 ffd6 	bl	800efcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e020:	e7e2      	b.n	800dfe8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800e022:	4630      	mov	r0, r6
 800e024:	b01e      	add	sp, #120	; 0x78
 800e026:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e02a:	b003      	add	sp, #12
 800e02c:	4770      	bx	lr

0800e02e <_ZNK8touchgfx8Drawable10invalidateEv>:
 800e02e:	b513      	push	{r0, r1, r4, lr}
 800e030:	6803      	ldr	r3, [r0, #0]
 800e032:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e036:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e03a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e03e:	2400      	movs	r4, #0
 800e040:	9400      	str	r4, [sp, #0]
 800e042:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e046:	691b      	ldr	r3, [r3, #16]
 800e048:	4669      	mov	r1, sp
 800e04a:	4798      	blx	r3
 800e04c:	b002      	add	sp, #8
 800e04e:	bd10      	pop	{r4, pc}

0800e050 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800e050:	b538      	push	{r3, r4, r5, lr}
 800e052:	680b      	ldr	r3, [r1, #0]
 800e054:	460c      	mov	r4, r1
 800e056:	68db      	ldr	r3, [r3, #12]
 800e058:	4605      	mov	r5, r0
 800e05a:	4798      	blx	r3
 800e05c:	6823      	ldr	r3, [r4, #0]
 800e05e:	4620      	mov	r0, r4
 800e060:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e062:	4629      	mov	r1, r5
 800e064:	4798      	blx	r3
 800e066:	4628      	mov	r0, r5
 800e068:	bd38      	pop	{r3, r4, r5, pc}

0800e06a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800e06a:	b410      	push	{r4}
 800e06c:	880a      	ldrh	r2, [r1, #0]
 800e06e:	8884      	ldrh	r4, [r0, #4]
 800e070:	4422      	add	r2, r4
 800e072:	800a      	strh	r2, [r1, #0]
 800e074:	88c4      	ldrh	r4, [r0, #6]
 800e076:	884a      	ldrh	r2, [r1, #2]
 800e078:	4422      	add	r2, r4
 800e07a:	804a      	strh	r2, [r1, #2]
 800e07c:	6940      	ldr	r0, [r0, #20]
 800e07e:	b120      	cbz	r0, 800e08a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800e080:	6803      	ldr	r3, [r0, #0]
 800e082:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e086:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e088:	4718      	bx	r3
 800e08a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e08e:	4770      	bx	lr

0800e090 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800e090:	b570      	push	{r4, r5, r6, lr}
 800e092:	8882      	ldrh	r2, [r0, #4]
 800e094:	880b      	ldrh	r3, [r1, #0]
 800e096:	4413      	add	r3, r2
 800e098:	800b      	strh	r3, [r1, #0]
 800e09a:	88c2      	ldrh	r2, [r0, #6]
 800e09c:	884b      	ldrh	r3, [r1, #2]
 800e09e:	460c      	mov	r4, r1
 800e0a0:	4413      	add	r3, r2
 800e0a2:	804b      	strh	r3, [r1, #2]
 800e0a4:	4605      	mov	r5, r0
 800e0a6:	1d01      	adds	r1, r0, #4
 800e0a8:	4620      	mov	r0, r4
 800e0aa:	f7fb f9f9 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 800e0ae:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e0b2:	2b00      	cmp	r3, #0
 800e0b4:	dd0b      	ble.n	800e0ce <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e0b6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e0ba:	2b00      	cmp	r3, #0
 800e0bc:	dd07      	ble.n	800e0ce <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e0be:	6968      	ldr	r0, [r5, #20]
 800e0c0:	b128      	cbz	r0, 800e0ce <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800e0c2:	6803      	ldr	r3, [r0, #0]
 800e0c4:	4621      	mov	r1, r4
 800e0c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e0c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0cc:	4718      	bx	r3
 800e0ce:	bd70      	pop	{r4, r5, r6, pc}

0800e0d0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800e0d0:	b570      	push	{r4, r5, r6, lr}
 800e0d2:	8882      	ldrh	r2, [r0, #4]
 800e0d4:	880b      	ldrh	r3, [r1, #0]
 800e0d6:	4413      	add	r3, r2
 800e0d8:	800b      	strh	r3, [r1, #0]
 800e0da:	88c2      	ldrh	r2, [r0, #6]
 800e0dc:	884b      	ldrh	r3, [r1, #2]
 800e0de:	460c      	mov	r4, r1
 800e0e0:	4413      	add	r3, r2
 800e0e2:	804b      	strh	r3, [r1, #2]
 800e0e4:	4605      	mov	r5, r0
 800e0e6:	1d01      	adds	r1, r0, #4
 800e0e8:	4620      	mov	r0, r4
 800e0ea:	f7fb f9d9 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 800e0ee:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e0f2:	2b00      	cmp	r3, #0
 800e0f4:	dd18      	ble.n	800e128 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800e0f6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e0fa:	2b00      	cmp	r3, #0
 800e0fc:	dd14      	ble.n	800e128 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800e0fe:	6968      	ldr	r0, [r5, #20]
 800e100:	b128      	cbz	r0, 800e10e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800e102:	6803      	ldr	r3, [r0, #0]
 800e104:	4621      	mov	r1, r4
 800e106:	691b      	ldr	r3, [r3, #16]
 800e108:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e10c:	4718      	bx	r3
 800e10e:	4b07      	ldr	r3, [pc, #28]	; (800e12c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800e110:	681b      	ldr	r3, [r3, #0]
 800e112:	3304      	adds	r3, #4
 800e114:	429d      	cmp	r5, r3
 800e116:	d107      	bne.n	800e128 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800e118:	f7fe fffc 	bl	800d114 <_ZN8touchgfx11Application11getInstanceEv>
 800e11c:	6821      	ldr	r1, [r4, #0]
 800e11e:	6862      	ldr	r2, [r4, #4]
 800e120:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e124:	f7ff b89c 	b.w	800d260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e128:	bd70      	pop	{r4, r5, r6, pc}
 800e12a:	bf00      	nop
 800e12c:	2000a63c 	.word	0x2000a63c

0800e130 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800e130:	b570      	push	{r4, r5, r6, lr}
 800e132:	4604      	mov	r4, r0
 800e134:	4616      	mov	r6, r2
 800e136:	460d      	mov	r5, r1
 800e138:	b901      	cbnz	r1, 800e13c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800e13a:	b192      	cbz	r2, 800e162 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800e13c:	6823      	ldr	r3, [r4, #0]
 800e13e:	4620      	mov	r0, r4
 800e140:	699b      	ldr	r3, [r3, #24]
 800e142:	4798      	blx	r3
 800e144:	88e2      	ldrh	r2, [r4, #6]
 800e146:	88a1      	ldrh	r1, [r4, #4]
 800e148:	4432      	add	r2, r6
 800e14a:	4429      	add	r1, r5
 800e14c:	4620      	mov	r0, r4
 800e14e:	b212      	sxth	r2, r2
 800e150:	b209      	sxth	r1, r1
 800e152:	f7f4 fa7c 	bl	800264e <_ZN8touchgfx8Drawable5setXYEss>
 800e156:	6823      	ldr	r3, [r4, #0]
 800e158:	4620      	mov	r0, r4
 800e15a:	699b      	ldr	r3, [r3, #24]
 800e15c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e160:	4718      	bx	r3
 800e162:	bd70      	pop	{r4, r5, r6, pc}

0800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e164:	b510      	push	{r4, lr}
 800e166:	4604      	mov	r4, r0
 800e168:	4608      	mov	r0, r1
 800e16a:	2300      	movs	r3, #0
 800e16c:	8023      	strh	r3, [r4, #0]
 800e16e:	8063      	strh	r3, [r4, #2]
 800e170:	6803      	ldr	r3, [r0, #0]
 800e172:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e176:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e17a:	80a1      	strh	r1, [r4, #4]
 800e17c:	80e2      	strh	r2, [r4, #6]
 800e17e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e180:	4621      	mov	r1, r4
 800e182:	4798      	blx	r3
 800e184:	4620      	mov	r0, r4
 800e186:	bd10      	pop	{r4, pc}

0800e188 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800e188:	b530      	push	{r4, r5, lr}
 800e18a:	8083      	strh	r3, [r0, #4]
 800e18c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800e190:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800e194:	7183      	strb	r3, [r0, #6]
 800e196:	79c3      	ldrb	r3, [r0, #7]
 800e198:	6101      	str	r1, [r0, #16]
 800e19a:	f365 0306 	bfi	r3, r5, #0, #7
 800e19e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800e1a2:	8282      	strh	r2, [r0, #20]
 800e1a4:	f365 13c7 	bfi	r3, r5, #7, #1
 800e1a8:	71c3      	strb	r3, [r0, #7]
 800e1aa:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800e1ae:	7203      	strb	r3, [r0, #8]
 800e1b0:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800e1b4:	7243      	strb	r3, [r0, #9]
 800e1b6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800e1ba:	8143      	strh	r3, [r0, #10]
 800e1bc:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800e1c0:	8183      	strh	r3, [r0, #12]
 800e1c2:	4b01      	ldr	r3, [pc, #4]	; (800e1c8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800e1c4:	6003      	str	r3, [r0, #0]
 800e1c6:	bd30      	pop	{r4, r5, pc}
 800e1c8:	0801f194 	.word	0x0801f194

0800e1cc <_ZNK8touchgfx9ConstFont4findEt>:
 800e1cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e1ce:	6904      	ldr	r4, [r0, #16]
 800e1d0:	b3bc      	cbz	r4, 800e242 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e1d2:	88a3      	ldrh	r3, [r4, #4]
 800e1d4:	8a82      	ldrh	r2, [r0, #20]
 800e1d6:	1acb      	subs	r3, r1, r3
 800e1d8:	f102 32ff 	add.w	r2, r2, #4294967295
 800e1dc:	d431      	bmi.n	800e242 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e1de:	4293      	cmp	r3, r2
 800e1e0:	dd0c      	ble.n	800e1fc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800e1e2:	230e      	movs	r3, #14
 800e1e4:	fb03 4302 	mla	r3, r3, r2, r4
 800e1e8:	889b      	ldrh	r3, [r3, #4]
 800e1ea:	1a5b      	subs	r3, r3, r1
 800e1ec:	1ad3      	subs	r3, r2, r3
 800e1ee:	429a      	cmp	r2, r3
 800e1f0:	db27      	blt.n	800e242 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e1f2:	2b00      	cmp	r3, #0
 800e1f4:	bfbc      	itt	lt
 800e1f6:	2302      	movlt	r3, #2
 800e1f8:	fb92 f3f3 	sdivlt	r3, r2, r3
 800e1fc:	2500      	movs	r5, #0
 800e1fe:	260e      	movs	r6, #14
 800e200:	4295      	cmp	r5, r2
 800e202:	dc1e      	bgt.n	800e242 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e204:	fb06 4003 	mla	r0, r6, r3, r4
 800e208:	8887      	ldrh	r7, [r0, #4]
 800e20a:	42b9      	cmp	r1, r7
 800e20c:	d01a      	beq.n	800e244 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800e20e:	d20d      	bcs.n	800e22c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800e210:	1e5a      	subs	r2, r3, #1
 800e212:	4295      	cmp	r5, r2
 800e214:	dc15      	bgt.n	800e242 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e216:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800e21a:	1a5b      	subs	r3, r3, r1
 800e21c:	1ad3      	subs	r3, r2, r3
 800e21e:	429a      	cmp	r2, r3
 800e220:	db0f      	blt.n	800e242 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e222:	429d      	cmp	r5, r3
 800e224:	ddec      	ble.n	800e200 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e226:	1953      	adds	r3, r2, r5
 800e228:	105b      	asrs	r3, r3, #1
 800e22a:	e7e9      	b.n	800e200 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e22c:	1c5d      	adds	r5, r3, #1
 800e22e:	42aa      	cmp	r2, r5
 800e230:	db07      	blt.n	800e242 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e232:	8a43      	ldrh	r3, [r0, #18]
 800e234:	1acb      	subs	r3, r1, r3
 800e236:	442b      	add	r3, r5
 800e238:	429d      	cmp	r5, r3
 800e23a:	dc02      	bgt.n	800e242 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800e23c:	429a      	cmp	r2, r3
 800e23e:	dadf      	bge.n	800e200 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800e240:	e7f1      	b.n	800e226 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800e242:	2000      	movs	r0, #0
 800e244:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e246 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800e246:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e248:	4604      	mov	r4, r0
 800e24a:	4617      	mov	r7, r2
 800e24c:	461e      	mov	r6, r3
 800e24e:	b911      	cbnz	r1, 800e256 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e250:	2500      	movs	r5, #0
 800e252:	4628      	mov	r0, r5
 800e254:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e256:	290a      	cmp	r1, #10
 800e258:	d0fa      	beq.n	800e250 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e25a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800e25e:	4291      	cmp	r1, r2
 800e260:	d0f6      	beq.n	800e250 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e262:	f242 020b 	movw	r2, #8203	; 0x200b
 800e266:	4291      	cmp	r1, r2
 800e268:	d0f2      	beq.n	800e250 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e26a:	f7ff ffaf 	bl	800e1cc <_ZNK8touchgfx9ConstFont4findEt>
 800e26e:	4605      	mov	r5, r0
 800e270:	b950      	cbnz	r0, 800e288 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800e272:	6823      	ldr	r3, [r4, #0]
 800e274:	4620      	mov	r0, r4
 800e276:	691b      	ldr	r3, [r3, #16]
 800e278:	4798      	blx	r3
 800e27a:	4601      	mov	r1, r0
 800e27c:	4620      	mov	r0, r4
 800e27e:	f7ff ffa5 	bl	800e1cc <_ZNK8touchgfx9ConstFont4findEt>
 800e282:	4605      	mov	r5, r0
 800e284:	2800      	cmp	r0, #0
 800e286:	d0e3      	beq.n	800e250 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800e288:	6823      	ldr	r3, [r4, #0]
 800e28a:	4629      	mov	r1, r5
 800e28c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e28e:	4620      	mov	r0, r4
 800e290:	4798      	blx	r3
 800e292:	6038      	str	r0, [r7, #0]
 800e294:	6823      	ldr	r3, [r4, #0]
 800e296:	4620      	mov	r0, r4
 800e298:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e29a:	4798      	blx	r3
 800e29c:	7030      	strb	r0, [r6, #0]
 800e29e:	e7d8      	b.n	800e252 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800e2a0 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800e2a0:	2000      	movs	r0, #0
 800e2a2:	4770      	bx	lr

0800e2a4 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800e2a4:	2001      	movs	r0, #1
 800e2a6:	4770      	bx	lr

0800e2a8 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800e2a8:	2002      	movs	r0, #2
 800e2aa:	4770      	bx	lr

0800e2ac <_ZN8touchgfx6ScreenD1Ev>:
 800e2ac:	4770      	bx	lr

0800e2ae <_ZN8touchgfx12GestureEventD1Ev>:
 800e2ae:	4770      	bx	lr

0800e2b0 <_ZN8touchgfx9DragEventD1Ev>:
 800e2b0:	4770      	bx	lr

0800e2b2 <_ZN8touchgfx10ClickEventD1Ev>:
 800e2b2:	4770      	bx	lr

0800e2b4 <_ZN8touchgfx10ClickEventD0Ev>:
 800e2b4:	b510      	push	{r4, lr}
 800e2b6:	210c      	movs	r1, #12
 800e2b8:	4604      	mov	r4, r0
 800e2ba:	f00d fced 	bl	801bc98 <_ZdlPvj>
 800e2be:	4620      	mov	r0, r4
 800e2c0:	bd10      	pop	{r4, pc}

0800e2c2 <_ZN8touchgfx9DragEventD0Ev>:
 800e2c2:	b510      	push	{r4, lr}
 800e2c4:	2110      	movs	r1, #16
 800e2c6:	4604      	mov	r4, r0
 800e2c8:	f00d fce6 	bl	801bc98 <_ZdlPvj>
 800e2cc:	4620      	mov	r0, r4
 800e2ce:	bd10      	pop	{r4, pc}

0800e2d0 <_ZN8touchgfx12GestureEventD0Ev>:
 800e2d0:	b510      	push	{r4, lr}
 800e2d2:	210c      	movs	r1, #12
 800e2d4:	4604      	mov	r4, r0
 800e2d6:	f00d fcdf 	bl	801bc98 <_ZdlPvj>
 800e2da:	4620      	mov	r0, r4
 800e2dc:	bd10      	pop	{r4, pc}

0800e2de <_ZN8touchgfx6ScreenD0Ev>:
 800e2de:	b510      	push	{r4, lr}
 800e2e0:	213c      	movs	r1, #60	; 0x3c
 800e2e2:	4604      	mov	r4, r0
 800e2e4:	f00d fcd8 	bl	801bc98 <_ZdlPvj>
 800e2e8:	4620      	mov	r0, r4
 800e2ea:	bd10      	pop	{r4, pc}

0800e2ec <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800e2ec:	b530      	push	{r4, r5, lr}
 800e2ee:	460d      	mov	r5, r1
 800e2f0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e2f2:	b087      	sub	sp, #28
 800e2f4:	4604      	mov	r4, r0
 800e2f6:	b301      	cbz	r1, 800e33a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800e2f8:	a801      	add	r0, sp, #4
 800e2fa:	f7ff ff33 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e2fe:	892a      	ldrh	r2, [r5, #8]
 800e300:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e304:	7928      	ldrb	r0, [r5, #4]
 800e306:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e30a:	f88d 0010 	strb.w	r0, [sp, #16]
 800e30e:	1ad2      	subs	r2, r2, r3
 800e310:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e312:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e314:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e318:	441a      	add	r2, r3
 800e31a:	896b      	ldrh	r3, [r5, #10]
 800e31c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800e320:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e324:	1b5b      	subs	r3, r3, r5
 800e326:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800e328:	442b      	add	r3, r5
 800e32a:	4d05      	ldr	r5, [pc, #20]	; (800e340 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800e32c:	9503      	str	r5, [sp, #12]
 800e32e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e332:	6803      	ldr	r3, [r0, #0]
 800e334:	a903      	add	r1, sp, #12
 800e336:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e338:	4798      	blx	r3
 800e33a:	b007      	add	sp, #28
 800e33c:	bd30      	pop	{r4, r5, pc}
 800e33e:	bf00      	nop
 800e340:	0801f214 	.word	0x0801f214

0800e344 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e344:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e348:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800e34a:	b08a      	sub	sp, #40	; 0x28
 800e34c:	4604      	mov	r4, r0
 800e34e:	460d      	mov	r5, r1
 800e350:	b113      	cbz	r3, 800e358 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800e352:	790b      	ldrb	r3, [r1, #4]
 800e354:	2b00      	cmp	r3, #0
 800e356:	d044      	beq.n	800e3e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e358:	f104 0804 	add.w	r8, r4, #4
 800e35c:	4641      	mov	r1, r8
 800e35e:	a803      	add	r0, sp, #12
 800e360:	f7ff ff00 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e364:	792b      	ldrb	r3, [r5, #4]
 800e366:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800e36a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800e36e:	b983      	cbnz	r3, 800e392 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800e370:	892a      	ldrh	r2, [r5, #8]
 800e372:	88e9      	ldrh	r1, [r5, #6]
 800e374:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800e378:	1b92      	subs	r2, r2, r6
 800e37a:	1bc9      	subs	r1, r1, r7
 800e37c:	9301      	str	r3, [sp, #4]
 800e37e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800e382:	9300      	str	r3, [sp, #0]
 800e384:	b212      	sxth	r2, r2
 800e386:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800e38a:	b209      	sxth	r1, r1
 800e38c:	4640      	mov	r0, r8
 800e38e:	f7fa ffa3 	bl	80092d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800e392:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e394:	b329      	cbz	r1, 800e3e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e396:	a805      	add	r0, sp, #20
 800e398:	f7ff fee4 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e39c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e3a0:	792b      	ldrb	r3, [r5, #4]
 800e3a2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e3a4:	f88d 3020 	strb.w	r3, [sp, #32]
 800e3a8:	1abf      	subs	r7, r7, r2
 800e3aa:	88ea      	ldrh	r2, [r5, #6]
 800e3ac:	4417      	add	r7, r2
 800e3ae:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800e3b0:	4417      	add	r7, r2
 800e3b2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e3b6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e3ba:	1ab6      	subs	r6, r6, r2
 800e3bc:	892a      	ldrh	r2, [r5, #8]
 800e3be:	4416      	add	r6, r2
 800e3c0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e3c2:	4416      	add	r6, r2
 800e3c4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800e3c8:	4a07      	ldr	r2, [pc, #28]	; (800e3e8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800e3ca:	9207      	str	r2, [sp, #28]
 800e3cc:	2600      	movs	r6, #0
 800e3ce:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800e3d2:	6803      	ldr	r3, [r0, #0]
 800e3d4:	a907      	add	r1, sp, #28
 800e3d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e3d8:	4798      	blx	r3
 800e3da:	792b      	ldrb	r3, [r5, #4]
 800e3dc:	b10b      	cbz	r3, 800e3e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e3de:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800e3e2:	b00a      	add	sp, #40	; 0x28
 800e3e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e3e8:	0801f1ec 	.word	0x0801f1ec

0800e3ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800e3ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e3f0:	460c      	mov	r4, r1
 800e3f2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e3f4:	b088      	sub	sp, #32
 800e3f6:	4605      	mov	r5, r0
 800e3f8:	2900      	cmp	r1, #0
 800e3fa:	d06d      	beq.n	800e4d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800e3fc:	4668      	mov	r0, sp
 800e3fe:	f7ff feb1 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e402:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800e404:	88e3      	ldrh	r3, [r4, #6]
 800e406:	f9bd 8000 	ldrsh.w	r8, [sp]
 800e40a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800e40e:	440b      	add	r3, r1
 800e410:	b21b      	sxth	r3, r3
 800e412:	4543      	cmp	r3, r8
 800e414:	db31      	blt.n	800e47a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e416:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800e41a:	44c4      	add	ip, r8
 800e41c:	fa0f fc8c 	sxth.w	ip, ip
 800e420:	4563      	cmp	r3, ip
 800e422:	da2a      	bge.n	800e47a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e424:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800e426:	8926      	ldrh	r6, [r4, #8]
 800e428:	4416      	add	r6, r2
 800e42a:	b236      	sxth	r6, r6
 800e42c:	42be      	cmp	r6, r7
 800e42e:	db24      	blt.n	800e47a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e430:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e434:	4438      	add	r0, r7
 800e436:	b200      	sxth	r0, r0
 800e438:	4286      	cmp	r6, r0
 800e43a:	da1e      	bge.n	800e47a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e43c:	8963      	ldrh	r3, [r4, #10]
 800e43e:	4419      	add	r1, r3
 800e440:	b209      	sxth	r1, r1
 800e442:	4541      	cmp	r1, r8
 800e444:	db08      	blt.n	800e458 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e446:	4561      	cmp	r1, ip
 800e448:	da06      	bge.n	800e458 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e44a:	89a3      	ldrh	r3, [r4, #12]
 800e44c:	441a      	add	r2, r3
 800e44e:	b212      	sxth	r2, r2
 800e450:	42ba      	cmp	r2, r7
 800e452:	db01      	blt.n	800e458 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e454:	4282      	cmp	r2, r0
 800e456:	db10      	blt.n	800e47a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e458:	4b21      	ldr	r3, [pc, #132]	; (800e4e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800e45a:	9304      	str	r3, [sp, #16]
 800e45c:	2302      	movs	r3, #2
 800e45e:	f88d 3014 	strb.w	r3, [sp, #20]
 800e462:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e464:	2300      	movs	r3, #0
 800e466:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e46a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e46e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e472:	6803      	ldr	r3, [r0, #0]
 800e474:	a904      	add	r1, sp, #16
 800e476:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e478:	4798      	blx	r3
 800e47a:	1d29      	adds	r1, r5, #4
 800e47c:	a802      	add	r0, sp, #8
 800e47e:	f7ff fe71 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e482:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e486:	88e0      	ldrh	r0, [r4, #6]
 800e488:	7921      	ldrb	r1, [r4, #4]
 800e48a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800e48e:	8922      	ldrh	r2, [r4, #8]
 800e490:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800e492:	f88d 1014 	strb.w	r1, [sp, #20]
 800e496:	eba3 0808 	sub.w	r8, r3, r8
 800e49a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e49e:	1bdf      	subs	r7, r3, r7
 800e4a0:	b2bb      	uxth	r3, r7
 800e4a2:	fa1f f888 	uxth.w	r8, r8
 800e4a6:	8967      	ldrh	r7, [r4, #10]
 800e4a8:	89a4      	ldrh	r4, [r4, #12]
 800e4aa:	4440      	add	r0, r8
 800e4ac:	4460      	add	r0, ip
 800e4ae:	441a      	add	r2, r3
 800e4b0:	44b8      	add	r8, r7
 800e4b2:	4423      	add	r3, r4
 800e4b4:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e4b8:	4433      	add	r3, r6
 800e4ba:	4432      	add	r2, r6
 800e4bc:	44e0      	add	r8, ip
 800e4be:	4c09      	ldr	r4, [pc, #36]	; (800e4e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800e4c0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e4c2:	9404      	str	r4, [sp, #16]
 800e4c4:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e4c8:	f8ad 801a 	strh.w	r8, [sp, #26]
 800e4cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e4d0:	6803      	ldr	r3, [r0, #0]
 800e4d2:	a904      	add	r1, sp, #16
 800e4d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e4d6:	4798      	blx	r3
 800e4d8:	b008      	add	sp, #32
 800e4da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e4de:	bf00      	nop
 800e4e0:	0801f1ec 	.word	0x0801f1ec
 800e4e4:	0801f200 	.word	0x0801f200

0800e4e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e4e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e4ea:	4604      	mov	r4, r0
 800e4ec:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e4f0:	3201      	adds	r2, #1
 800e4f2:	d112      	bne.n	800e51a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e4f4:	6803      	ldr	r3, [r0, #0]
 800e4f6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e4fa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e4fe:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e502:	2500      	movs	r5, #0
 800e504:	9500      	str	r5, [sp, #0]
 800e506:	466d      	mov	r5, sp
 800e508:	4629      	mov	r1, r5
 800e50a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e50e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e510:	4798      	blx	r3
 800e512:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e516:	e884 0003 	stmia.w	r4, {r0, r1}
 800e51a:	4620      	mov	r0, r4
 800e51c:	b003      	add	sp, #12
 800e51e:	bd30      	pop	{r4, r5, pc}

0800e520 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e520:	b513      	push	{r0, r1, r4, lr}
 800e522:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e526:	3301      	adds	r3, #1
 800e528:	4604      	mov	r4, r0
 800e52a:	d109      	bne.n	800e540 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e52c:	4601      	mov	r1, r0
 800e52e:	4668      	mov	r0, sp
 800e530:	f7ff fe18 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e534:	f8bd 3000 	ldrh.w	r3, [sp]
 800e538:	8423      	strh	r3, [r4, #32]
 800e53a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e53e:	8463      	strh	r3, [r4, #34]	; 0x22
 800e540:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e544:	b002      	add	sp, #8
 800e546:	bd10      	pop	{r4, pc}

0800e548 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e548:	b513      	push	{r0, r1, r4, lr}
 800e54a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800e54e:	3301      	adds	r3, #1
 800e550:	4604      	mov	r4, r0
 800e552:	d109      	bne.n	800e568 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e554:	4601      	mov	r1, r0
 800e556:	4668      	mov	r0, sp
 800e558:	f7ff fe04 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e55c:	f8bd 3000 	ldrh.w	r3, [sp]
 800e560:	8423      	strh	r3, [r4, #32]
 800e562:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e566:	8463      	strh	r3, [r4, #34]	; 0x22
 800e568:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800e56c:	b002      	add	sp, #8
 800e56e:	bd10      	pop	{r4, pc}

0800e570 <_ZN8touchgfx6ScreenC1Ev>:
 800e570:	b570      	push	{r4, r5, r6, lr}
 800e572:	4605      	mov	r5, r0
 800e574:	4b16      	ldr	r3, [pc, #88]	; (800e5d0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800e576:	f845 3b04 	str.w	r3, [r5], #4
 800e57a:	2300      	movs	r3, #0
 800e57c:	8103      	strh	r3, [r0, #8]
 800e57e:	8143      	strh	r3, [r0, #10]
 800e580:	8183      	strh	r3, [r0, #12]
 800e582:	81c3      	strh	r3, [r0, #14]
 800e584:	8203      	strh	r3, [r0, #16]
 800e586:	8243      	strh	r3, [r0, #18]
 800e588:	8283      	strh	r3, [r0, #20]
 800e58a:	82c3      	strh	r3, [r0, #22]
 800e58c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800e590:	6203      	str	r3, [r0, #32]
 800e592:	8483      	strh	r3, [r0, #36]	; 0x24
 800e594:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e596:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800e59a:	4a0e      	ldr	r2, [pc, #56]	; (800e5d4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e59c:	6343      	str	r3, [r0, #52]	; 0x34
 800e59e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800e5a2:	4b0d      	ldr	r3, [pc, #52]	; (800e5d8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e5a4:	6042      	str	r2, [r0, #4]
 800e5a6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e5aa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800e5ac:	4a0b      	ldr	r2, [pc, #44]	; (800e5dc <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800e5ae:	4604      	mov	r4, r0
 800e5b0:	2101      	movs	r1, #1
 800e5b2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800e5b6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800e5ba:	f9b2 1000 	ldrsh.w	r1, [r2]
 800e5be:	4628      	mov	r0, r5
 800e5c0:	4798      	blx	r3
 800e5c2:	6863      	ldr	r3, [r4, #4]
 800e5c4:	4628      	mov	r0, r5
 800e5c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e5c8:	4631      	mov	r1, r6
 800e5ca:	4798      	blx	r3
 800e5cc:	4620      	mov	r0, r4
 800e5ce:	bd70      	pop	{r4, r5, r6, pc}
 800e5d0:	0801f228 	.word	0x0801f228
 800e5d4:	0801e320 	.word	0x0801e320
 800e5d8:	2000a5f6 	.word	0x2000a5f6
 800e5dc:	2000a5f4 	.word	0x2000a5f4

0800e5e0 <_ZN8touchgfx6Screen4drawEv>:
 800e5e0:	b507      	push	{r0, r1, r2, lr}
 800e5e2:	4b09      	ldr	r3, [pc, #36]	; (800e608 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e5e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e5e8:	4b08      	ldr	r3, [pc, #32]	; (800e60c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e5ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e5ee:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e5f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e5f6:	6803      	ldr	r3, [r0, #0]
 800e5f8:	2100      	movs	r1, #0
 800e5fa:	9100      	str	r1, [sp, #0]
 800e5fc:	689b      	ldr	r3, [r3, #8]
 800e5fe:	4669      	mov	r1, sp
 800e600:	4798      	blx	r3
 800e602:	b003      	add	sp, #12
 800e604:	f85d fb04 	ldr.w	pc, [sp], #4
 800e608:	2000a5f4 	.word	0x2000a5f4
 800e60c:	2000a5f6 	.word	0x2000a5f6

0800e610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e614:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e618:	2b00      	cmp	r3, #0
 800e61a:	b089      	sub	sp, #36	; 0x24
 800e61c:	4680      	mov	r8, r0
 800e61e:	460c      	mov	r4, r1
 800e620:	4615      	mov	r5, r2
 800e622:	dd0e      	ble.n	800e642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e624:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e628:	2b00      	cmp	r3, #0
 800e62a:	dd0a      	ble.n	800e642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e62c:	4628      	mov	r0, r5
 800e62e:	f7ff ff5b 	bl	800e4e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e632:	4621      	mov	r1, r4
 800e634:	f7fe fc90 	bl	800cf58 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e638:	69eb      	ldr	r3, [r5, #28]
 800e63a:	b928      	cbnz	r0, 800e648 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800e63c:	461d      	mov	r5, r3
 800e63e:	2b00      	cmp	r3, #0
 800e640:	d1f4      	bne.n	800e62c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800e642:	b009      	add	sp, #36	; 0x24
 800e644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e648:	ae04      	add	r6, sp, #16
 800e64a:	2b00      	cmp	r3, #0
 800e64c:	f000 80b5 	beq.w	800e7ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e650:	682b      	ldr	r3, [r5, #0]
 800e652:	4629      	mov	r1, r5
 800e654:	68db      	ldr	r3, [r3, #12]
 800e656:	a802      	add	r0, sp, #8
 800e658:	4798      	blx	r3
 800e65a:	4628      	mov	r0, r5
 800e65c:	f7ff ff60 	bl	800e520 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e660:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e664:	4407      	add	r7, r0
 800e666:	4628      	mov	r0, r5
 800e668:	f7ff ff6e 	bl	800e548 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e66c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e670:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e674:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e678:	4418      	add	r0, r3
 800e67a:	4621      	mov	r1, r4
 800e67c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e680:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e684:	b23f      	sxth	r7, r7
 800e686:	4630      	mov	r0, r6
 800e688:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e68c:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e690:	f7fa ff06 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 800e694:	4628      	mov	r0, r5
 800e696:	f7ff ff27 	bl	800e4e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e69a:	4602      	mov	r2, r0
 800e69c:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e6a0:	ab06      	add	r3, sp, #24
 800e6a2:	e883 0003 	stmia.w	r3, {r0, r1}
 800e6a6:	4611      	mov	r1, r2
 800e6a8:	4618      	mov	r0, r3
 800e6aa:	f7fa fef9 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 800e6ae:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e6b2:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e6b6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e6ba:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e6be:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e6c2:	4299      	cmp	r1, r3
 800e6c4:	d10b      	bne.n	800e6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e6c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e6ca:	4552      	cmp	r2, sl
 800e6cc:	d107      	bne.n	800e6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e6ce:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e6d2:	455a      	cmp	r2, fp
 800e6d4:	d103      	bne.n	800e6de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e6d6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e6da:	454a      	cmp	r2, r9
 800e6dc:	d06d      	beq.n	800e7ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e6de:	f1bb 0f00 	cmp.w	fp, #0
 800e6e2:	dd65      	ble.n	800e7b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e6e4:	f1b9 0f00 	cmp.w	r9, #0
 800e6e8:	dd62      	ble.n	800e7b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e6ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e6ee:	fa1f f08a 	uxth.w	r0, sl
 800e6f2:	4552      	cmp	r2, sl
 800e6f4:	9000      	str	r0, [sp, #0]
 800e6f6:	da12      	bge.n	800e71e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800e6f8:	9301      	str	r3, [sp, #4]
 800e6fa:	9b00      	ldr	r3, [sp, #0]
 800e6fc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e700:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e704:	1a9a      	subs	r2, r3, r2
 800e706:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e70a:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e70e:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e712:	69ea      	ldr	r2, [r5, #28]
 800e714:	4631      	mov	r1, r6
 800e716:	4640      	mov	r0, r8
 800e718:	f7ff ff7a 	bl	800e610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e71c:	9b01      	ldr	r3, [sp, #4]
 800e71e:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e722:	429a      	cmp	r2, r3
 800e724:	b29f      	uxth	r7, r3
 800e726:	da0d      	bge.n	800e744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800e728:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e72c:	1aba      	subs	r2, r7, r2
 800e72e:	f8ad a012 	strh.w	sl, [sp, #18]
 800e732:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e736:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e73a:	69ea      	ldr	r2, [r5, #28]
 800e73c:	4631      	mov	r1, r6
 800e73e:	4640      	mov	r0, r8
 800e740:	f7ff ff66 	bl	800e610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e744:	8822      	ldrh	r2, [r4, #0]
 800e746:	88a3      	ldrh	r3, [r4, #4]
 800e748:	445f      	add	r7, fp
 800e74a:	4413      	add	r3, r2
 800e74c:	b29b      	uxth	r3, r3
 800e74e:	b2bf      	uxth	r7, r7
 800e750:	b23a      	sxth	r2, r7
 800e752:	b219      	sxth	r1, r3
 800e754:	4291      	cmp	r1, r2
 800e756:	dd0d      	ble.n	800e774 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800e758:	1bdb      	subs	r3, r3, r7
 800e75a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e75e:	f8ad a012 	strh.w	sl, [sp, #18]
 800e762:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e766:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e76a:	69ea      	ldr	r2, [r5, #28]
 800e76c:	4631      	mov	r1, r6
 800e76e:	4640      	mov	r0, r8
 800e770:	f7ff ff4e 	bl	800e610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e774:	88e2      	ldrh	r2, [r4, #6]
 800e776:	8863      	ldrh	r3, [r4, #2]
 800e778:	4413      	add	r3, r2
 800e77a:	9a00      	ldr	r2, [sp, #0]
 800e77c:	444a      	add	r2, r9
 800e77e:	b29b      	uxth	r3, r3
 800e780:	fa1f f982 	uxth.w	r9, r2
 800e784:	fa0f f289 	sxth.w	r2, r9
 800e788:	b219      	sxth	r1, r3
 800e78a:	428a      	cmp	r2, r1
 800e78c:	da15      	bge.n	800e7ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e78e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e792:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e796:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e79a:	eba3 0309 	sub.w	r3, r3, r9
 800e79e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e7a2:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e7a6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e7aa:	69ea      	ldr	r2, [r5, #28]
 800e7ac:	4631      	mov	r1, r6
 800e7ae:	e001      	b.n	800e7b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e7b0:	69ea      	ldr	r2, [r5, #28]
 800e7b2:	4621      	mov	r1, r4
 800e7b4:	4640      	mov	r0, r8
 800e7b6:	f7ff ff2b 	bl	800e610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e7ba:	4628      	mov	r0, r5
 800e7bc:	f7ff fe94 	bl	800e4e8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e7c0:	6861      	ldr	r1, [r4, #4]
 800e7c2:	4602      	mov	r2, r0
 800e7c4:	6820      	ldr	r0, [r4, #0]
 800e7c6:	4633      	mov	r3, r6
 800e7c8:	c303      	stmia	r3!, {r0, r1}
 800e7ca:	4611      	mov	r1, r2
 800e7cc:	4630      	mov	r0, r6
 800e7ce:	f7fa fe67 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 800e7d2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e7d6:	2b00      	cmp	r3, #0
 800e7d8:	f77f af33 	ble.w	800e642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e7dc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e7e0:	2b00      	cmp	r3, #0
 800e7e2:	f77f af2e 	ble.w	800e642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e7e6:	4628      	mov	r0, r5
 800e7e8:	f7ff fe9a 	bl	800e520 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e7ec:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e7f0:	1a18      	subs	r0, r3, r0
 800e7f2:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e7f6:	4628      	mov	r0, r5
 800e7f8:	f7ff fea6 	bl	800e548 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e7fc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e800:	1a18      	subs	r0, r3, r0
 800e802:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e806:	682b      	ldr	r3, [r5, #0]
 800e808:	4631      	mov	r1, r6
 800e80a:	689b      	ldr	r3, [r3, #8]
 800e80c:	4628      	mov	r0, r5
 800e80e:	4798      	blx	r3
 800e810:	e717      	b.n	800e642 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e812 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e812:	b570      	push	{r4, r5, r6, lr}
 800e814:	460c      	mov	r4, r1
 800e816:	b086      	sub	sp, #24
 800e818:	1d06      	adds	r6, r0, #4
 800e81a:	2300      	movs	r3, #0
 800e81c:	4631      	mov	r1, r6
 800e81e:	4605      	mov	r5, r0
 800e820:	a802      	add	r0, sp, #8
 800e822:	9301      	str	r3, [sp, #4]
 800e824:	f7ff fc9e 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e828:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e82c:	8822      	ldrh	r2, [r4, #0]
 800e82e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e832:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e836:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e83a:	1ad2      	subs	r2, r2, r3
 800e83c:	8863      	ldrh	r3, [r4, #2]
 800e83e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e842:	1a5b      	subs	r3, r3, r1
 800e844:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800e848:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e84c:	aa01      	add	r2, sp, #4
 800e84e:	a904      	add	r1, sp, #16
 800e850:	4630      	mov	r0, r6
 800e852:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e856:	f7fa fefb 	bl	8009650 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e85a:	9a01      	ldr	r2, [sp, #4]
 800e85c:	b11a      	cbz	r2, 800e866 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800e85e:	4621      	mov	r1, r4
 800e860:	4628      	mov	r0, r5
 800e862:	f7ff fed5 	bl	800e610 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e866:	b006      	add	sp, #24
 800e868:	bd70      	pop	{r4, r5, r6, pc}

0800e86a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e86a:	b530      	push	{r4, r5, lr}
 800e86c:	4602      	mov	r2, r0
 800e86e:	4604      	mov	r4, r0
 800e870:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e874:	b085      	sub	sp, #20
 800e876:	460d      	mov	r5, r1
 800e878:	6851      	ldr	r1, [r2, #4]
 800e87a:	466b      	mov	r3, sp
 800e87c:	c303      	stmia	r3!, {r0, r1}
 800e87e:	4629      	mov	r1, r5
 800e880:	4668      	mov	r0, sp
 800e882:	f7fa fe0d 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 800e886:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e88a:	b12b      	cbz	r3, 800e898 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800e88c:	4669      	mov	r1, sp
 800e88e:	4620      	mov	r0, r4
 800e890:	f7ff ffbf 	bl	800e812 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e894:	b005      	add	sp, #20
 800e896:	bd30      	pop	{r4, r5, pc}
 800e898:	3404      	adds	r4, #4
 800e89a:	4621      	mov	r1, r4
 800e89c:	a802      	add	r0, sp, #8
 800e89e:	f7ff fc61 	bl	800e164 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e8a2:	f8bd 3000 	ldrh.w	r3, [sp]
 800e8a6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e8aa:	1a9b      	subs	r3, r3, r2
 800e8ac:	f8ad 3000 	strh.w	r3, [sp]
 800e8b0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e8b4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e8b8:	4669      	mov	r1, sp
 800e8ba:	1a9b      	subs	r3, r3, r2
 800e8bc:	4620      	mov	r0, r4
 800e8be:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e8c2:	f7fa fe8c 	bl	80095de <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e8c6:	e7e5      	b.n	800e894 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800e8c8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e8c8:	680a      	ldr	r2, [r1, #0]
 800e8ca:	460b      	mov	r3, r1
 800e8cc:	6992      	ldr	r2, [r2, #24]
 800e8ce:	1d01      	adds	r1, r0, #4
 800e8d0:	4618      	mov	r0, r3
 800e8d2:	4710      	bx	r2

0800e8d4 <_ZN8touchgfx12TextProviderC1Ev>:
 800e8d4:	b538      	push	{r3, r4, r5, lr}
 800e8d6:	2500      	movs	r5, #0
 800e8d8:	2302      	movs	r3, #2
 800e8da:	4604      	mov	r4, r0
 800e8dc:	e9c0 5500 	strd	r5, r5, [r0]
 800e8e0:	7403      	strb	r3, [r0, #16]
 800e8e2:	6145      	str	r5, [r0, #20]
 800e8e4:	7605      	strb	r5, [r0, #24]
 800e8e6:	83c5      	strh	r5, [r0, #30]
 800e8e8:	8405      	strh	r5, [r0, #32]
 800e8ea:	86c5      	strh	r5, [r0, #54]	; 0x36
 800e8ec:	8705      	strh	r5, [r0, #56]	; 0x38
 800e8ee:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800e8f0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800e8f4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800e8f8:	220e      	movs	r2, #14
 800e8fa:	4629      	mov	r1, r5
 800e8fc:	304c      	adds	r0, #76	; 0x4c
 800e8fe:	f00d fa85 	bl	801be0c <memset>
 800e902:	2301      	movs	r3, #1
 800e904:	4620      	mov	r0, r4
 800e906:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800e90a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e90e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800e912:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800e916:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800e91a:	f7f4 f99f 	bl	8002c5c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e91e:	4620      	mov	r0, r4
 800e920:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e924 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800e924:	b508      	push	{r3, lr}
 800e926:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e928:	b92b      	cbnz	r3, 800e936 <_ZN8touchgfx12TextProvider11endOfStringEv+0x12>
 800e92a:	4b07      	ldr	r3, [pc, #28]	; (800e948 <_ZN8touchgfx12TextProvider11endOfStringEv+0x24>)
 800e92c:	4a07      	ldr	r2, [pc, #28]	; (800e94c <_ZN8touchgfx12TextProvider11endOfStringEv+0x28>)
 800e92e:	4808      	ldr	r0, [pc, #32]	; (800e950 <_ZN8touchgfx12TextProvider11endOfStringEv+0x2c>)
 800e930:	21c0      	movs	r1, #192	; 0xc0
 800e932:	f00d f9df 	bl	801bcf4 <__assert_func>
 800e936:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e938:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800e93c:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 800e93e:	fab0 f080 	clz	r0, r0
 800e942:	0940      	lsrs	r0, r0, #5
 800e944:	bd08      	pop	{r3, pc}
 800e946:	bf00      	nop
 800e948:	0801dc08 	.word	0x0801dc08
 800e94c:	0801f483 	.word	0x0801f483
 800e950:	0801dcda 	.word	0x0801dcda

0800e954 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e954:	b530      	push	{r4, r5, lr}
 800e956:	2500      	movs	r5, #0
 800e958:	2401      	movs	r4, #1
 800e95a:	6843      	ldr	r3, [r0, #4]
 800e95c:	b913      	cbnz	r3, 800e964 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e95e:	6803      	ldr	r3, [r0, #0]
 800e960:	b313      	cbz	r3, 800e9a8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e962:	6043      	str	r3, [r0, #4]
 800e964:	7e03      	ldrb	r3, [r0, #24]
 800e966:	b143      	cbz	r3, 800e97a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e968:	6943      	ldr	r3, [r0, #20]
 800e96a:	b12b      	cbz	r3, 800e978 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e96c:	881a      	ldrh	r2, [r3, #0]
 800e96e:	b11a      	cbz	r2, 800e978 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e970:	1c9a      	adds	r2, r3, #2
 800e972:	6142      	str	r2, [r0, #20]
 800e974:	8818      	ldrh	r0, [r3, #0]
 800e976:	bd30      	pop	{r4, r5, pc}
 800e978:	7605      	strb	r5, [r0, #24]
 800e97a:	6843      	ldr	r3, [r0, #4]
 800e97c:	8819      	ldrh	r1, [r3, #0]
 800e97e:	b199      	cbz	r1, 800e9a8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e980:	1c9a      	adds	r2, r3, #2
 800e982:	2902      	cmp	r1, #2
 800e984:	6042      	str	r2, [r0, #4]
 800e986:	d1f5      	bne.n	800e974 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e988:	7c03      	ldrb	r3, [r0, #16]
 800e98a:	2b01      	cmp	r3, #1
 800e98c:	d8e5      	bhi.n	800e95a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e98e:	1c5a      	adds	r2, r3, #1
 800e990:	3302      	adds	r3, #2
 800e992:	7402      	strb	r2, [r0, #16]
 800e994:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e998:	6143      	str	r3, [r0, #20]
 800e99a:	2b00      	cmp	r3, #0
 800e99c:	d0dd      	beq.n	800e95a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e99e:	881b      	ldrh	r3, [r3, #0]
 800e9a0:	2b00      	cmp	r3, #0
 800e9a2:	d0da      	beq.n	800e95a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e9a4:	7604      	strb	r4, [r0, #24]
 800e9a6:	e7d8      	b.n	800e95a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e9a8:	2000      	movs	r0, #0
 800e9aa:	e7e4      	b.n	800e976 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e9ac <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e9ac:	b430      	push	{r4, r5}
 800e9ae:	6001      	str	r1, [r0, #0]
 800e9b0:	2100      	movs	r1, #0
 800e9b2:	6041      	str	r1, [r0, #4]
 800e9b4:	6815      	ldr	r5, [r2, #0]
 800e9b6:	6085      	str	r5, [r0, #8]
 800e9b8:	6852      	ldr	r2, [r2, #4]
 800e9ba:	6443      	str	r3, [r0, #68]	; 0x44
 800e9bc:	9b02      	ldr	r3, [sp, #8]
 800e9be:	60c2      	str	r2, [r0, #12]
 800e9c0:	7401      	strb	r1, [r0, #16]
 800e9c2:	6141      	str	r1, [r0, #20]
 800e9c4:	7601      	strb	r1, [r0, #24]
 800e9c6:	8701      	strh	r1, [r0, #56]	; 0x38
 800e9c8:	8401      	strh	r1, [r0, #32]
 800e9ca:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e9ce:	6483      	str	r3, [r0, #72]	; 0x48
 800e9d0:	bc30      	pop	{r4, r5}
 800e9d2:	f7f4 b943 	b.w	8002c5c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e9d6 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800e9d6:	b408      	push	{r3}
 800e9d8:	b510      	push	{r4, lr}
 800e9da:	b085      	sub	sp, #20
 800e9dc:	ac07      	add	r4, sp, #28
 800e9de:	f854 3b04 	ldr.w	r3, [r4], #4
 800e9e2:	9300      	str	r3, [sp, #0]
 800e9e4:	4613      	mov	r3, r2
 800e9e6:	4622      	mov	r2, r4
 800e9e8:	9403      	str	r4, [sp, #12]
 800e9ea:	f7ff ffdf 	bl	800e9ac <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e9ee:	b005      	add	sp, #20
 800e9f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e9f4:	b001      	add	sp, #4
 800e9f6:	4770      	bx	lr

0800e9f8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e9f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e9fa:	4605      	mov	r5, r0
 800e9fc:	4608      	mov	r0, r1
 800e9fe:	b1e9      	cbz	r1, 800ea3c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800ea00:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800ea04:	460b      	mov	r3, r1
 800ea06:	f101 0708 	add.w	r7, r1, #8
 800ea0a:	4622      	mov	r2, r4
 800ea0c:	6818      	ldr	r0, [r3, #0]
 800ea0e:	6859      	ldr	r1, [r3, #4]
 800ea10:	4626      	mov	r6, r4
 800ea12:	c603      	stmia	r6!, {r0, r1}
 800ea14:	3308      	adds	r3, #8
 800ea16:	42bb      	cmp	r3, r7
 800ea18:	4634      	mov	r4, r6
 800ea1a:	d1f7      	bne.n	800ea0c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800ea1c:	6818      	ldr	r0, [r3, #0]
 800ea1e:	6030      	str	r0, [r6, #0]
 800ea20:	889b      	ldrh	r3, [r3, #4]
 800ea22:	80b3      	strh	r3, [r6, #4]
 800ea24:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800ea28:	015b      	lsls	r3, r3, #5
 800ea2a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ea2e:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800ea32:	430b      	orrs	r3, r1
 800ea34:	425b      	negs	r3, r3
 800ea36:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800ea3a:	4610      	mov	r0, r2
 800ea3c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ea3e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800ea3e:	b538      	push	{r3, r4, r5, lr}
 800ea40:	460c      	mov	r4, r1
 800ea42:	6811      	ldr	r1, [r2, #0]
 800ea44:	4610      	mov	r0, r2
 800ea46:	68cd      	ldr	r5, [r1, #12]
 800ea48:	4619      	mov	r1, r3
 800ea4a:	47a8      	blx	r5
 800ea4c:	2800      	cmp	r0, #0
 800ea4e:	bf08      	it	eq
 800ea50:	4620      	moveq	r0, r4
 800ea52:	bd38      	pop	{r3, r4, r5, pc}

0800ea54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800ea54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea56:	4604      	mov	r4, r0
 800ea58:	4615      	mov	r5, r2
 800ea5a:	4608      	mov	r0, r1
 800ea5c:	b93a      	cbnz	r2, 800ea6e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800ea5e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800ea62:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800ea66:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800ea6a:	4628      	mov	r0, r5
 800ea6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ea6e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800ea72:	8893      	ldrh	r3, [r2, #4]
 800ea74:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800ea78:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800ea7c:	79ee      	ldrb	r6, [r5, #7]
 800ea7e:	4316      	orrs	r6, r2
 800ea80:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800ea84:	189a      	adds	r2, r3, r2
 800ea86:	b291      	uxth	r1, r2
 800ea88:	291d      	cmp	r1, #29
 800ea8a:	b2b7      	uxth	r7, r6
 800ea8c:	f200 8083 	bhi.w	800eb96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800ea90:	2201      	movs	r2, #1
 800ea92:	408a      	lsls	r2, r1
 800ea94:	4978      	ldr	r1, [pc, #480]	; (800ec78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800ea96:	420a      	tst	r2, r1
 800ea98:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800ea9c:	d12d      	bne.n	800eafa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800ea9e:	f412 7f60 	tst.w	r2, #896	; 0x380
 800eaa2:	d078      	beq.n	800eb96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800eaa4:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800eaa8:	462b      	mov	r3, r5
 800eaaa:	f105 0e08 	add.w	lr, r5, #8
 800eaae:	4615      	mov	r5, r2
 800eab0:	6818      	ldr	r0, [r3, #0]
 800eab2:	6859      	ldr	r1, [r3, #4]
 800eab4:	4694      	mov	ip, r2
 800eab6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800eaba:	3308      	adds	r3, #8
 800eabc:	4573      	cmp	r3, lr
 800eabe:	4662      	mov	r2, ip
 800eac0:	d1f6      	bne.n	800eab0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800eac2:	6818      	ldr	r0, [r3, #0]
 800eac4:	f8cc 0000 	str.w	r0, [ip]
 800eac8:	889b      	ldrh	r3, [r3, #4]
 800eaca:	f8ac 3004 	strh.w	r3, [ip, #4]
 800eace:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800ead2:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800ead6:	b2b3      	uxth	r3, r6
 800ead8:	1aca      	subs	r2, r1, r3
 800eada:	b292      	uxth	r2, r2
 800eadc:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800eae0:	10d2      	asrs	r2, r2, #3
 800eae2:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800eae6:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800eaea:	4302      	orrs	r2, r0
 800eaec:	1bcf      	subs	r7, r1, r7
 800eaee:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800eaf2:	1afb      	subs	r3, r7, r3
 800eaf4:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800eaf8:	e7b7      	b.n	800ea6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800eafa:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800eafc:	b92b      	cbnz	r3, 800eb0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800eafe:	4b5f      	ldr	r3, [pc, #380]	; (800ec7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800eb00:	4a5f      	ldr	r2, [pc, #380]	; (800ec80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800eb02:	4860      	ldr	r0, [pc, #384]	; (800ec84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800eb04:	21c0      	movs	r1, #192	; 0xc0
 800eb06:	f00d f8f5 	bl	801bcf4 <__assert_func>
 800eb0a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800eb0c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800eb10:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800eb12:	f640 6333 	movw	r3, #3635	; 0xe33
 800eb16:	4299      	cmp	r1, r3
 800eb18:	d110      	bne.n	800eb3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800eb1a:	6803      	ldr	r3, [r0, #0]
 800eb1c:	68db      	ldr	r3, [r3, #12]
 800eb1e:	4798      	blx	r3
 800eb20:	7b41      	ldrb	r1, [r0, #13]
 800eb22:	00cb      	lsls	r3, r1, #3
 800eb24:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eb28:	7a03      	ldrb	r3, [r0, #8]
 800eb2a:	0648      	lsls	r0, r1, #25
 800eb2c:	ea43 0302 	orr.w	r3, r3, r2
 800eb30:	bf44      	itt	mi
 800eb32:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eb36:	b21b      	sxthmi	r3, r3
 800eb38:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800eb3c:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800eb40:	443b      	add	r3, r7
 800eb42:	4433      	add	r3, r6
 800eb44:	b29b      	uxth	r3, r3
 800eb46:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800eb4a:	462a      	mov	r2, r5
 800eb4c:	f105 0c08 	add.w	ip, r5, #8
 800eb50:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800eb54:	4635      	mov	r5, r6
 800eb56:	6810      	ldr	r0, [r2, #0]
 800eb58:	6851      	ldr	r1, [r2, #4]
 800eb5a:	4637      	mov	r7, r6
 800eb5c:	c703      	stmia	r7!, {r0, r1}
 800eb5e:	3208      	adds	r2, #8
 800eb60:	4562      	cmp	r2, ip
 800eb62:	463e      	mov	r6, r7
 800eb64:	d1f7      	bne.n	800eb56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800eb66:	6810      	ldr	r0, [r2, #0]
 800eb68:	6038      	str	r0, [r7, #0]
 800eb6a:	8892      	ldrh	r2, [r2, #4]
 800eb6c:	80ba      	strh	r2, [r7, #4]
 800eb6e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800eb72:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800eb76:	10db      	asrs	r3, r3, #3
 800eb78:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800eb7c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800eb80:	4313      	orrs	r3, r2
 800eb82:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800eb86:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800eb8a:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800eb8e:	1a9b      	subs	r3, r3, r2
 800eb90:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800eb94:	e769      	b.n	800ea6a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800eb96:	f023 0204 	bic.w	r2, r3, #4
 800eb9a:	f640 611b 	movw	r1, #3611	; 0xe1b
 800eb9e:	428a      	cmp	r2, r1
 800eba0:	d003      	beq.n	800ebaa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800eba2:	f640 621d 	movw	r2, #3613	; 0xe1d
 800eba6:	4293      	cmp	r3, r2
 800eba8:	d120      	bne.n	800ebec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800ebaa:	3b01      	subs	r3, #1
 800ebac:	4602      	mov	r2, r0
 800ebae:	b29b      	uxth	r3, r3
 800ebb0:	4629      	mov	r1, r5
 800ebb2:	4620      	mov	r0, r4
 800ebb4:	f7ff ff43 	bl	800ea3e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800ebb8:	7b41      	ldrb	r1, [r0, #13]
 800ebba:	00cb      	lsls	r3, r1, #3
 800ebbc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ebc0:	7a03      	ldrb	r3, [r0, #8]
 800ebc2:	0649      	lsls	r1, r1, #25
 800ebc4:	ea43 0302 	orr.w	r3, r3, r2
 800ebc8:	bf44      	itt	mi
 800ebca:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ebce:	b21b      	sxthmi	r3, r3
 800ebd0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ebd4:	7b6b      	ldrb	r3, [r5, #13]
 800ebd6:	7aaa      	ldrb	r2, [r5, #10]
 800ebd8:	005b      	lsls	r3, r3, #1
 800ebda:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ebde:	4313      	orrs	r3, r2
 800ebe0:	115a      	asrs	r2, r3, #5
 800ebe2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800ebe6:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800ebea:	e036      	b.n	800ec5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800ebec:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800ebf0:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800ebf4:	7a2a      	ldrb	r2, [r5, #8]
 800ebf6:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800ebfa:	ea42 0201 	orr.w	r2, r2, r1
 800ebfe:	bf1c      	itt	ne
 800ec00:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800ec04:	b212      	sxthne	r2, r2
 800ec06:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800ec0a:	f640 6109 	movw	r1, #3593	; 0xe09
 800ec0e:	f023 0210 	bic.w	r2, r3, #16
 800ec12:	428a      	cmp	r2, r1
 800ec14:	d003      	beq.n	800ec1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800ec16:	f640 6213 	movw	r2, #3603	; 0xe13
 800ec1a:	4293      	cmp	r3, r2
 800ec1c:	d12a      	bne.n	800ec74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800ec1e:	7b6e      	ldrb	r6, [r5, #13]
 800ec20:	0076      	lsls	r6, r6, #1
 800ec22:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800ec26:	7aae      	ldrb	r6, [r5, #10]
 800ec28:	4316      	orrs	r6, r2
 800ec2a:	f640 6213 	movw	r2, #3603	; 0xe13
 800ec2e:	4293      	cmp	r3, r2
 800ec30:	bf18      	it	ne
 800ec32:	f103 33ff 	addne.w	r3, r3, #4294967295
 800ec36:	4602      	mov	r2, r0
 800ec38:	bf14      	ite	ne
 800ec3a:	b29b      	uxthne	r3, r3
 800ec3c:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800ec40:	4629      	mov	r1, r5
 800ec42:	4620      	mov	r0, r4
 800ec44:	f7ff fefb 	bl	800ea3e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800ec48:	7b43      	ldrb	r3, [r0, #13]
 800ec4a:	7a82      	ldrb	r2, [r0, #10]
 800ec4c:	005b      	lsls	r3, r3, #1
 800ec4e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ec52:	4313      	orrs	r3, r2
 800ec54:	1af6      	subs	r6, r6, r3
 800ec56:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800ec5a:	7b69      	ldrb	r1, [r5, #13]
 800ec5c:	00cb      	lsls	r3, r1, #3
 800ec5e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ec62:	7a2b      	ldrb	r3, [r5, #8]
 800ec64:	4313      	orrs	r3, r2
 800ec66:	064a      	lsls	r2, r1, #25
 800ec68:	bf44      	itt	mi
 800ec6a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ec6e:	b21b      	sxthmi	r3, r3
 800ec70:	1bdb      	subs	r3, r3, r7
 800ec72:	e73f      	b.n	800eaf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800ec74:	2300      	movs	r3, #0
 800ec76:	e7b6      	b.n	800ebe6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800ec78:	3fc00079 	.word	0x3fc00079
 800ec7c:	0801dc08 	.word	0x0801dc08
 800ec80:	0801f483 	.word	0x0801f483
 800ec84:	0801dcda 	.word	0x0801dcda

0800ec88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800ec88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ec8c:	4604      	mov	r4, r0
 800ec8e:	b942      	cbnz	r2, 800eca2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800ec90:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ec94:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800ec98:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800ec9c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800eca0:	e046      	b.n	800ed30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800eca2:	7b51      	ldrb	r1, [r2, #13]
 800eca4:	8893      	ldrh	r3, [r2, #4]
 800eca6:	010f      	lsls	r7, r1, #4
 800eca8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800ecac:	79d7      	ldrb	r7, [r2, #7]
 800ecae:	4307      	orrs	r7, r0
 800ecb0:	2f04      	cmp	r7, #4
 800ecb2:	b2bd      	uxth	r5, r7
 800ecb4:	bfcc      	ite	gt
 800ecb6:	08bf      	lsrgt	r7, r7, #2
 800ecb8:	2701      	movle	r7, #1
 800ecba:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800ecbe:	f200 80ab 	bhi.w	800ee18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800ecc2:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800ecc6:	4283      	cmp	r3, r0
 800ecc8:	d216      	bcs.n	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ecca:	f240 605b 	movw	r0, #1627	; 0x65b
 800ecce:	4283      	cmp	r3, r0
 800ecd0:	d859      	bhi.n	800ed86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800ecd2:	f240 6057 	movw	r0, #1623	; 0x657
 800ecd6:	4283      	cmp	r3, r0
 800ecd8:	d20e      	bcs.n	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ecda:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800ecde:	d24a      	bcs.n	800ed76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800ece0:	f240 604e 	movw	r0, #1614	; 0x64e
 800ece4:	4283      	cmp	r3, r0
 800ece6:	d207      	bcs.n	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ece8:	f240 601a 	movw	r0, #1562	; 0x61a
 800ecec:	4283      	cmp	r3, r0
 800ecee:	d02a      	beq.n	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ecf0:	d821      	bhi.n	800ed36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800ecf2:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800ecf6:	d35b      	bcc.n	800edb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ecf8:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800ecfc:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ed00:	f040 80d0 	bne.w	800eea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800ed04:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800ed08:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ed0c:	f040 80ca 	bne.w	800eea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800ed10:	00cb      	lsls	r3, r1, #3
 800ed12:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ed16:	7a13      	ldrb	r3, [r2, #8]
 800ed18:	0649      	lsls	r1, r1, #25
 800ed1a:	ea43 0300 	orr.w	r3, r3, r0
 800ed1e:	bf44      	itt	mi
 800ed20:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ed24:	b21b      	sxthmi	r3, r3
 800ed26:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ed2a:	1b5d      	subs	r5, r3, r5
 800ed2c:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ed30:	4610      	mov	r0, r2
 800ed32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ed36:	f240 604b 	movw	r0, #1611	; 0x64b
 800ed3a:	4283      	cmp	r3, r0
 800ed3c:	d338      	bcc.n	800edb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ed3e:	f240 604c 	movw	r0, #1612	; 0x64c
 800ed42:	4283      	cmp	r3, r0
 800ed44:	d9d8      	bls.n	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ed46:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800ed4a:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800ed4e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ed52:	f040 80f1 	bne.w	800ef38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800ed56:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ed5a:	f040 80ed 	bne.w	800ef38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800ed5e:	00cb      	lsls	r3, r1, #3
 800ed60:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ed64:	7a13      	ldrb	r3, [r2, #8]
 800ed66:	064e      	lsls	r6, r1, #25
 800ed68:	ea43 0300 	orr.w	r3, r3, r0
 800ed6c:	bf44      	itt	mi
 800ed6e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ed72:	b21b      	sxthmi	r3, r3
 800ed74:	e7d9      	b.n	800ed2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800ed76:	f240 6054 	movw	r0, #1620	; 0x654
 800ed7a:	4283      	cmp	r3, r0
 800ed7c:	d8e3      	bhi.n	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ed7e:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800ed82:	d9e0      	bls.n	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ed84:	e7b8      	b.n	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ed86:	f240 6074 	movw	r0, #1652	; 0x674
 800ed8a:	4283      	cmp	r3, r0
 800ed8c:	d0b4      	beq.n	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ed8e:	d82d      	bhi.n	800edec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800ed90:	f240 605e 	movw	r0, #1630	; 0x65e
 800ed94:	4283      	cmp	r3, r0
 800ed96:	d804      	bhi.n	800eda2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800ed98:	f240 605d 	movw	r0, #1629	; 0x65d
 800ed9c:	4283      	cmp	r3, r0
 800ed9e:	d3d2      	bcc.n	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800eda0:	e7aa      	b.n	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800eda2:	f240 605f 	movw	r0, #1631	; 0x65f
 800eda6:	4283      	cmp	r3, r0
 800eda8:	d0cd      	beq.n	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800edaa:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800edae:	d0a3      	beq.n	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800edb0:	00cb      	lsls	r3, r1, #3
 800edb2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800edb6:	7a13      	ldrb	r3, [r2, #8]
 800edb8:	0649      	lsls	r1, r1, #25
 800edba:	ea43 0300 	orr.w	r3, r3, r0
 800edbe:	bf44      	itt	mi
 800edc0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800edc4:	b21b      	sxthmi	r3, r3
 800edc6:	1b5d      	subs	r5, r3, r5
 800edc8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800edcc:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800edd0:	7b53      	ldrb	r3, [r2, #13]
 800edd2:	015b      	lsls	r3, r3, #5
 800edd4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800edd8:	7993      	ldrb	r3, [r2, #6]
 800edda:	430b      	orrs	r3, r1
 800eddc:	005b      	lsls	r3, r3, #1
 800edde:	2105      	movs	r1, #5
 800ede0:	fb93 f3f1 	sdiv	r3, r3, r1
 800ede4:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800ede8:	440b      	add	r3, r1
 800edea:	e757      	b.n	800ec9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800edec:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800edf0:	4283      	cmp	r3, r0
 800edf2:	d809      	bhi.n	800ee08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800edf4:	f240 60df 	movw	r0, #1759	; 0x6df
 800edf8:	4283      	cmp	r3, r0
 800edfa:	f4bf af7d 	bcs.w	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800edfe:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800ee02:	2b05      	cmp	r3, #5
 800ee04:	d8d4      	bhi.n	800edb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ee06:	e777      	b.n	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ee08:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800ee0c:	4283      	cmp	r3, r0
 800ee0e:	d09a      	beq.n	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ee10:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800ee14:	4283      	cmp	r3, r0
 800ee16:	e7ca      	b.n	800edae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800ee18:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800ee1c:	d22b      	bcs.n	800ee76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800ee1e:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800ee22:	4283      	cmp	r3, r0
 800ee24:	d28f      	bcs.n	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ee26:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800ee2a:	4283      	cmp	r3, r0
 800ee2c:	d816      	bhi.n	800ee5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800ee2e:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800ee32:	4283      	cmp	r3, r0
 800ee34:	f4bf af60 	bcs.w	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ee38:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800ee3c:	4283      	cmp	r3, r0
 800ee3e:	d80a      	bhi.n	800ee56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800ee40:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800ee44:	4283      	cmp	r3, r0
 800ee46:	f4bf af57 	bcs.w	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ee4a:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800ee4e:	4283      	cmp	r3, r0
 800ee50:	f43f af79 	beq.w	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ee54:	e7ac      	b.n	800edb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ee56:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800ee5a:	e7f8      	b.n	800ee4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800ee5c:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800ee60:	4283      	cmp	r3, r0
 800ee62:	d802      	bhi.n	800ee6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800ee64:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800ee68:	e798      	b.n	800ed9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800ee6a:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800ee6e:	4283      	cmp	r3, r0
 800ee70:	f47f af42 	bne.w	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ee74:	e767      	b.n	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ee76:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800ee7a:	4283      	cmp	r3, r0
 800ee7c:	f43f af63 	beq.w	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ee80:	d802      	bhi.n	800ee88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800ee82:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800ee86:	e7f2      	b.n	800ee6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800ee88:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800ee8c:	4283      	cmp	r3, r0
 800ee8e:	d805      	bhi.n	800ee9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800ee90:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800ee94:	4283      	cmp	r3, r0
 800ee96:	f4ff af2f 	bcc.w	800ecf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ee9a:	e754      	b.n	800ed46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ee9c:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800eea0:	4283      	cmp	r3, r0
 800eea2:	e7af      	b.n	800ee04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800eea4:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800eea8:	4617      	mov	r7, r2
 800eeaa:	f102 0808 	add.w	r8, r2, #8
 800eeae:	4666      	mov	r6, ip
 800eeb0:	6838      	ldr	r0, [r7, #0]
 800eeb2:	6879      	ldr	r1, [r7, #4]
 800eeb4:	46e6      	mov	lr, ip
 800eeb6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800eeba:	3708      	adds	r7, #8
 800eebc:	4547      	cmp	r7, r8
 800eebe:	46f4      	mov	ip, lr
 800eec0:	d1f6      	bne.n	800eeb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800eec2:	6838      	ldr	r0, [r7, #0]
 800eec4:	f8ce 0000 	str.w	r0, [lr]
 800eec8:	88b9      	ldrh	r1, [r7, #4]
 800eeca:	f8ae 1004 	strh.w	r1, [lr, #4]
 800eece:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800eed2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800eed6:	d009      	beq.n	800eeec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800eed8:	7b51      	ldrb	r1, [r2, #13]
 800eeda:	7992      	ldrb	r2, [r2, #6]
 800eedc:	0149      	lsls	r1, r1, #5
 800eede:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800eee2:	4311      	orrs	r1, r2
 800eee4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800eee8:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800eeec:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800eef0:	d00d      	beq.n	800ef0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800eef2:	442b      	add	r3, r5
 800eef4:	b29b      	uxth	r3, r3
 800eef6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800eefa:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800eefe:	10db      	asrs	r3, r3, #3
 800ef00:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ef04:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ef08:	4313      	orrs	r3, r2
 800ef0a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800ef0e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800ef12:	00cb      	lsls	r3, r1, #3
 800ef14:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ef18:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800ef1c:	064f      	lsls	r7, r1, #25
 800ef1e:	ea43 0302 	orr.w	r3, r3, r2
 800ef22:	bf44      	itt	mi
 800ef24:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ef28:	b21b      	sxthmi	r3, r3
 800ef2a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ef2e:	1b5d      	subs	r5, r3, r5
 800ef30:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ef34:	4632      	mov	r2, r6
 800ef36:	e6fb      	b.n	800ed30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800ef38:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 800ef3c:	4694      	mov	ip, r2
 800ef3e:	f102 0908 	add.w	r9, r2, #8
 800ef42:	4676      	mov	r6, lr
 800ef44:	f8dc 0000 	ldr.w	r0, [ip]
 800ef48:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800ef4c:	46f0      	mov	r8, lr
 800ef4e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800ef52:	f10c 0c08 	add.w	ip, ip, #8
 800ef56:	45cc      	cmp	ip, r9
 800ef58:	46c6      	mov	lr, r8
 800ef5a:	d1f3      	bne.n	800ef44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800ef5c:	f8dc 0000 	ldr.w	r0, [ip]
 800ef60:	f8c8 0000 	str.w	r0, [r8]
 800ef64:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800ef68:	f8a8 1004 	strh.w	r1, [r8, #4]
 800ef6c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800ef70:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ef74:	d009      	beq.n	800ef8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800ef76:	7b51      	ldrb	r1, [r2, #13]
 800ef78:	7992      	ldrb	r2, [r2, #6]
 800ef7a:	0149      	lsls	r1, r1, #5
 800ef7c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ef80:	4311      	orrs	r1, r2
 800ef82:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ef86:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800ef8a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ef8e:	d00d      	beq.n	800efac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800ef90:	1bdb      	subs	r3, r3, r7
 800ef92:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800ef96:	b29b      	uxth	r3, r3
 800ef98:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800ef9c:	10db      	asrs	r3, r3, #3
 800ef9e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800efa2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800efa6:	4313      	orrs	r3, r2
 800efa8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800efac:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800efb0:	00cb      	lsls	r3, r1, #3
 800efb2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800efb6:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800efba:	0648      	lsls	r0, r1, #25
 800efbc:	ea43 0302 	orr.w	r3, r3, r2
 800efc0:	bf44      	itt	mi
 800efc2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800efc6:	b21b      	sxthmi	r3, r3
 800efc8:	e7b1      	b.n	800ef2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800efcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800efcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efd0:	461e      	mov	r6, r3
 800efd2:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800efd4:	4604      	mov	r4, r0
 800efd6:	4617      	mov	r7, r2
 800efd8:	b92b      	cbnz	r3, 800efe6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800efda:	4b25      	ldr	r3, [pc, #148]	; (800f070 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800efdc:	4a25      	ldr	r2, [pc, #148]	; (800f074 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800efde:	4826      	ldr	r0, [pc, #152]	; (800f078 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800efe0:	21c0      	movs	r1, #192	; 0xc0
 800efe2:	f00c fe87 	bl	801bcf4 <__assert_func>
 800efe6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800efe8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800efec:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800eff0:	f7f3 fdf2 	bl	8002bd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800eff4:	4605      	mov	r5, r0
 800eff6:	b918      	cbnz	r0, 800f000 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800eff8:	6030      	str	r0, [r6, #0]
 800effa:	4628      	mov	r0, r5
 800effc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f000:	683b      	ldr	r3, [r7, #0]
 800f002:	4601      	mov	r1, r0
 800f004:	68db      	ldr	r3, [r3, #12]
 800f006:	4638      	mov	r0, r7
 800f008:	4798      	blx	r3
 800f00a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800f00e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800f012:	4602      	mov	r2, r0
 800f014:	6030      	str	r0, [r6, #0]
 800f016:	d213      	bcs.n	800f040 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800f018:	4643      	mov	r3, r8
 800f01a:	4639      	mov	r1, r7
 800f01c:	4620      	mov	r0, r4
 800f01e:	f7ff fe33 	bl	800ec88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f022:	6030      	str	r0, [r6, #0]
 800f024:	6833      	ldr	r3, [r6, #0]
 800f026:	b143      	cbz	r3, 800f03a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800f028:	7b5a      	ldrb	r2, [r3, #13]
 800f02a:	7a9b      	ldrb	r3, [r3, #10]
 800f02c:	0052      	lsls	r2, r2, #1
 800f02e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f032:	4313      	orrs	r3, r2
 800f034:	bf0c      	ite	eq
 800f036:	2301      	moveq	r3, #1
 800f038:	2300      	movne	r3, #0
 800f03a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800f03e:	e7dc      	b.n	800effa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800f040:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800f044:	b29b      	uxth	r3, r3
 800f046:	2b7f      	cmp	r3, #127	; 0x7f
 800f048:	d804      	bhi.n	800f054 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800f04a:	4639      	mov	r1, r7
 800f04c:	4620      	mov	r0, r4
 800f04e:	f7ff fd01 	bl	800ea54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f052:	e7e6      	b.n	800f022 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800f054:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800f058:	2b00      	cmp	r3, #0
 800f05a:	d0e3      	beq.n	800f024 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800f05c:	f640 1302 	movw	r3, #2306	; 0x902
 800f060:	429d      	cmp	r5, r3
 800f062:	d1df      	bne.n	800f024 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800f064:	4601      	mov	r1, r0
 800f066:	4620      	mov	r0, r4
 800f068:	f7ff fcc6 	bl	800e9f8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f06c:	e7d9      	b.n	800f022 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800f06e:	bf00      	nop
 800f070:	0801dc08 	.word	0x0801dc08
 800f074:	0801f483 	.word	0x0801f483
 800f078:	0801dcda 	.word	0x0801dcda

0800f07c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800f07c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f080:	461e      	mov	r6, r3
 800f082:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800f084:	4604      	mov	r4, r0
 800f086:	4617      	mov	r7, r2
 800f088:	b92b      	cbnz	r3, 800f096 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800f08a:	4b26      	ldr	r3, [pc, #152]	; (800f124 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800f08c:	4a26      	ldr	r2, [pc, #152]	; (800f128 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800f08e:	4827      	ldr	r0, [pc, #156]	; (800f12c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800f090:	21c0      	movs	r1, #192	; 0xc0
 800f092:	f00c fe2f 	bl	801bcf4 <__assert_func>
 800f096:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800f098:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800f09c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800f0a0:	f7f3 fd9a 	bl	8002bd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f0a4:	4605      	mov	r5, r0
 800f0a6:	b918      	cbnz	r0, 800f0b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800f0a8:	6030      	str	r0, [r6, #0]
 800f0aa:	4628      	mov	r0, r5
 800f0ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f0b0:	683b      	ldr	r3, [r7, #0]
 800f0b2:	4601      	mov	r1, r0
 800f0b4:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800f0b8:	4638      	mov	r0, r7
 800f0ba:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800f0be:	47c8      	blx	r9
 800f0c0:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800f0c4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800f0c8:	4602      	mov	r2, r0
 800f0ca:	6030      	str	r0, [r6, #0]
 800f0cc:	d213      	bcs.n	800f0f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800f0ce:	4643      	mov	r3, r8
 800f0d0:	4639      	mov	r1, r7
 800f0d2:	4620      	mov	r0, r4
 800f0d4:	f7ff fdd8 	bl	800ec88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800f0d8:	6030      	str	r0, [r6, #0]
 800f0da:	6833      	ldr	r3, [r6, #0]
 800f0dc:	b143      	cbz	r3, 800f0f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800f0de:	7b5a      	ldrb	r2, [r3, #13]
 800f0e0:	7a9b      	ldrb	r3, [r3, #10]
 800f0e2:	0052      	lsls	r2, r2, #1
 800f0e4:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f0e8:	4313      	orrs	r3, r2
 800f0ea:	bf0c      	ite	eq
 800f0ec:	2301      	moveq	r3, #1
 800f0ee:	2300      	movne	r3, #0
 800f0f0:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800f0f4:	e7d9      	b.n	800f0aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800f0f6:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800f0fa:	b29b      	uxth	r3, r3
 800f0fc:	2b7f      	cmp	r3, #127	; 0x7f
 800f0fe:	d804      	bhi.n	800f10a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800f100:	4639      	mov	r1, r7
 800f102:	4620      	mov	r0, r4
 800f104:	f7ff fca6 	bl	800ea54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f108:	e7e6      	b.n	800f0d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800f10a:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800f10e:	2b00      	cmp	r3, #0
 800f110:	d0e3      	beq.n	800f0da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800f112:	f640 1302 	movw	r3, #2306	; 0x902
 800f116:	429d      	cmp	r5, r3
 800f118:	d1df      	bne.n	800f0da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800f11a:	4601      	mov	r1, r0
 800f11c:	4620      	mov	r0, r4
 800f11e:	f7ff fc6b 	bl	800e9f8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f122:	e7d9      	b.n	800f0d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800f124:	0801dc08 	.word	0x0801dc08
 800f128:	0801f483 	.word	0x0801f483
 800f12c:	0801dcda 	.word	0x0801dcda

0800f130 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800f130:	b510      	push	{r4, lr}
 800f132:	4604      	mov	r4, r0
 800f134:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800f138:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800f13a:	b9d9      	cbnz	r1, 800f174 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 800f13c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800f13e:	2b0a      	cmp	r3, #10
 800f140:	d037      	beq.n	800f1b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800f142:	4620      	mov	r0, r4
 800f144:	f7ff fc06 	bl	800e954 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800f148:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800f14a:	2b09      	cmp	r3, #9
 800f14c:	d906      	bls.n	800f15c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800f14e:	4b19      	ldr	r3, [pc, #100]	; (800f1b4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800f150:	4a19      	ldr	r2, [pc, #100]	; (800f1b8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800f152:	481a      	ldr	r0, [pc, #104]	; (800f1bc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 800f154:	f44f 7182 	mov.w	r1, #260	; 0x104
 800f158:	f00c fdcc 	bl	801bcf4 <__assert_func>
 800f15c:	1c5a      	adds	r2, r3, #1
 800f15e:	8722      	strh	r2, [r4, #56]	; 0x38
 800f160:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800f162:	4413      	add	r3, r2
 800f164:	b29b      	uxth	r3, r3
 800f166:	2b09      	cmp	r3, #9
 800f168:	bf88      	it	hi
 800f16a:	3b0a      	subhi	r3, #10
 800f16c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f170:	8458      	strh	r0, [r3, #34]	; 0x22
 800f172:	e7e3      	b.n	800f13c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 800f174:	2b0a      	cmp	r3, #10
 800f176:	d01c      	beq.n	800f1b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800f178:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800f17a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800f17e:	3901      	subs	r1, #1
 800f180:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800f182:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800f186:	1c51      	adds	r1, r2, #1
 800f188:	b289      	uxth	r1, r1
 800f18a:	2901      	cmp	r1, #1
 800f18c:	bf8a      	itet	hi
 800f18e:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800f192:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800f194:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800f196:	2b09      	cmp	r3, #9
 800f198:	d8d9      	bhi.n	800f14e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 800f19a:	1c5a      	adds	r2, r3, #1
 800f19c:	8722      	strh	r2, [r4, #56]	; 0x38
 800f19e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800f1a0:	4413      	add	r3, r2
 800f1a2:	b29b      	uxth	r3, r3
 800f1a4:	2b09      	cmp	r3, #9
 800f1a6:	bf88      	it	hi
 800f1a8:	3b0a      	subhi	r3, #10
 800f1aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f1ae:	8458      	strh	r0, [r3, #34]	; 0x22
 800f1b0:	e7c0      	b.n	800f134 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800f1b2:	bd10      	pop	{r4, pc}
 800f1b4:	0801f254 	.word	0x0801f254
 800f1b8:	0801f5d9 	.word	0x0801f5d9
 800f1bc:	0801dcda 	.word	0x0801dcda

0800f1c0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800f1c0:	b538      	push	{r3, r4, r5, lr}
 800f1c2:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800f1c4:	4604      	mov	r4, r0
 800f1c6:	b92a      	cbnz	r2, 800f1d4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800f1c8:	4b13      	ldr	r3, [pc, #76]	; (800f218 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800f1ca:	4a14      	ldr	r2, [pc, #80]	; (800f21c <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800f1cc:	4814      	ldr	r0, [pc, #80]	; (800f220 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800f1ce:	21d5      	movs	r1, #213	; 0xd5
 800f1d0:	f00c fd90 	bl	801bcf4 <__assert_func>
 800f1d4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800f1d6:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800f1da:	3a01      	subs	r2, #1
 800f1dc:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 800f1de:	8702      	strh	r2, [r0, #56]	; 0x38
 800f1e0:	1c5a      	adds	r2, r3, #1
 800f1e2:	b292      	uxth	r2, r2
 800f1e4:	2a09      	cmp	r2, #9
 800f1e6:	bf86      	itte	hi
 800f1e8:	3b09      	subhi	r3, #9
 800f1ea:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800f1ec:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800f1ee:	f7ff ff9f 	bl	800f130 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f1f2:	8c23      	ldrh	r3, [r4, #32]
 800f1f4:	2b01      	cmp	r3, #1
 800f1f6:	bf9c      	itt	ls
 800f1f8:	3301      	addls	r3, #1
 800f1fa:	8423      	strhls	r3, [r4, #32]
 800f1fc:	8be3      	ldrh	r3, [r4, #30]
 800f1fe:	b90b      	cbnz	r3, 800f204 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800f200:	2302      	movs	r3, #2
 800f202:	83e3      	strh	r3, [r4, #30]
 800f204:	8be3      	ldrh	r3, [r4, #30]
 800f206:	3b01      	subs	r3, #1
 800f208:	b29b      	uxth	r3, r3
 800f20a:	83e3      	strh	r3, [r4, #30]
 800f20c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f210:	4628      	mov	r0, r5
 800f212:	8365      	strh	r5, [r4, #26]
 800f214:	bd38      	pop	{r3, r4, r5, pc}
 800f216:	bf00      	nop
 800f218:	0801dc08 	.word	0x0801dc08
 800f21c:	0801f52e 	.word	0x0801f52e
 800f220:	0801dcda 	.word	0x0801dcda

0800f224 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800f224:	b538      	push	{r3, r4, r5, lr}
 800f226:	428a      	cmp	r2, r1
 800f228:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800f22a:	d90c      	bls.n	800f246 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800f22c:	b92c      	cbnz	r4, 800f23a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800f22e:	4b1c      	ldr	r3, [pc, #112]	; (800f2a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800f230:	4a1c      	ldr	r2, [pc, #112]	; (800f2a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800f232:	21e1      	movs	r1, #225	; 0xe1
 800f234:	481c      	ldr	r0, [pc, #112]	; (800f2a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800f236:	f00c fd5d 	bl	801bcf4 <__assert_func>
 800f23a:	3c01      	subs	r4, #1
 800f23c:	8704      	strh	r4, [r0, #56]	; 0x38
 800f23e:	4b1b      	ldr	r3, [pc, #108]	; (800f2ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800f240:	4a1b      	ldr	r2, [pc, #108]	; (800f2b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800f242:	21c5      	movs	r1, #197	; 0xc5
 800f244:	e7f6      	b.n	800f234 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800f246:	428c      	cmp	r4, r1
 800f248:	d203      	bcs.n	800f252 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800f24a:	4b1a      	ldr	r3, [pc, #104]	; (800f2b4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800f24c:	4a1a      	ldr	r2, [pc, #104]	; (800f2b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800f24e:	21cb      	movs	r1, #203	; 0xcb
 800f250:	e7f0      	b.n	800f234 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800f252:	1a64      	subs	r4, r4, r1
 800f254:	8704      	strh	r4, [r0, #56]	; 0x38
 800f256:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 800f258:	4421      	add	r1, r4
 800f25a:	b289      	uxth	r1, r1
 800f25c:	2909      	cmp	r1, #9
 800f25e:	bf88      	it	hi
 800f260:	390a      	subhi	r1, #10
 800f262:	86c1      	strh	r1, [r0, #54]	; 0x36
 800f264:	250a      	movs	r5, #10
 800f266:	b1ba      	cbz	r2, 800f298 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800f268:	3a01      	subs	r2, #1
 800f26a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800f26c:	b292      	uxth	r2, r2
 800f26e:	2909      	cmp	r1, #9
 800f270:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800f274:	d903      	bls.n	800f27e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800f276:	4b11      	ldr	r3, [pc, #68]	; (800f2bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800f278:	4a11      	ldr	r2, [pc, #68]	; (800f2c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800f27a:	21e6      	movs	r1, #230	; 0xe6
 800f27c:	e7da      	b.n	800f234 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800f27e:	3101      	adds	r1, #1
 800f280:	8701      	strh	r1, [r0, #56]	; 0x38
 800f282:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800f284:	b901      	cbnz	r1, 800f288 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800f286:	86c5      	strh	r5, [r0, #54]	; 0x36
 800f288:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800f28a:	3901      	subs	r1, #1
 800f28c:	b289      	uxth	r1, r1
 800f28e:	86c1      	strh	r1, [r0, #54]	; 0x36
 800f290:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800f294:	844c      	strh	r4, [r1, #34]	; 0x22
 800f296:	e7e6      	b.n	800f266 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800f298:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f29c:	f7ff bf48 	b.w	800f130 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800f2a0:	0801dc08 	.word	0x0801dc08
 800f2a4:	0801f307 	.word	0x0801f307
 800f2a8:	0801dcda 	.word	0x0801dcda
 800f2ac:	0801dd06 	.word	0x0801dd06
 800f2b0:	0801f3b1 	.word	0x0801f3b1
 800f2b4:	0801f260 	.word	0x0801f260
 800f2b8:	0801f688 	.word	0x0801f688
 800f2bc:	0801f26c 	.word	0x0801f26c
 800f2c0:	0801f27f 	.word	0x0801f27f

0800f2c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800f2c4:	3a01      	subs	r2, #1
 800f2c6:	b570      	push	{r4, r5, r6, lr}
 800f2c8:	b292      	uxth	r2, r2
 800f2ca:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800f2ce:	42b2      	cmp	r2, r6
 800f2d0:	d019      	beq.n	800f306 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800f2d2:	8c04      	ldrh	r4, [r0, #32]
 800f2d4:	f831 5b02 	ldrh.w	r5, [r1], #2
 800f2d8:	4294      	cmp	r4, r2
 800f2da:	d805      	bhi.n	800f2e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800f2dc:	4b19      	ldr	r3, [pc, #100]	; (800f344 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800f2de:	4a1a      	ldr	r2, [pc, #104]	; (800f348 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800f2e0:	481a      	ldr	r0, [pc, #104]	; (800f34c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800f2e2:	21c5      	movs	r1, #197	; 0xc5
 800f2e4:	f00c fd06 	bl	801bcf4 <__assert_func>
 800f2e8:	8bc4      	ldrh	r4, [r0, #30]
 800f2ea:	4414      	add	r4, r2
 800f2ec:	b2a4      	uxth	r4, r4
 800f2ee:	2c01      	cmp	r4, #1
 800f2f0:	bf88      	it	hi
 800f2f2:	3c02      	subhi	r4, #2
 800f2f4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800f2f8:	3a01      	subs	r2, #1
 800f2fa:	8b64      	ldrh	r4, [r4, #26]
 800f2fc:	42ac      	cmp	r4, r5
 800f2fe:	b292      	uxth	r2, r2
 800f300:	d0e5      	beq.n	800f2ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800f302:	2000      	movs	r0, #0
 800f304:	bd70      	pop	{r4, r5, r6, pc}
 800f306:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800f30a:	2400      	movs	r4, #0
 800f30c:	4413      	add	r3, r2
 800f30e:	b2a2      	uxth	r2, r4
 800f310:	429a      	cmp	r2, r3
 800f312:	da14      	bge.n	800f33e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800f314:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 800f316:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800f31a:	4296      	cmp	r6, r2
 800f31c:	d802      	bhi.n	800f324 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800f31e:	4b09      	ldr	r3, [pc, #36]	; (800f344 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800f320:	4a0b      	ldr	r2, [pc, #44]	; (800f350 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800f322:	e7dd      	b.n	800f2e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800f324:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800f326:	4432      	add	r2, r6
 800f328:	b292      	uxth	r2, r2
 800f32a:	2a09      	cmp	r2, #9
 800f32c:	bf88      	it	hi
 800f32e:	3a0a      	subhi	r2, #10
 800f330:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800f334:	3401      	adds	r4, #1
 800f336:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800f338:	42aa      	cmp	r2, r5
 800f33a:	d0e8      	beq.n	800f30e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800f33c:	e7e1      	b.n	800f302 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800f33e:	2001      	movs	r0, #1
 800f340:	e7e0      	b.n	800f304 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800f342:	bf00      	nop
 800f344:	0801dd06 	.word	0x0801dd06
 800f348:	0801f70c 	.word	0x0801f70c
 800f34c:	0801dcda 	.word	0x0801dcda
 800f350:	0801f3b1 	.word	0x0801f3b1

0800f354 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800f354:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f358:	4605      	mov	r5, r0
 800f35a:	4616      	mov	r6, r2
 800f35c:	1c8c      	adds	r4, r1, #2
 800f35e:	8809      	ldrh	r1, [r1, #0]
 800f360:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800f364:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800f368:	42b3      	cmp	r3, r6
 800f36a:	d124      	bne.n	800f3b6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800f36c:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800f370:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800f374:	f001 070f 	and.w	r7, r1, #15
 800f378:	f8cd 8000 	str.w	r8, [sp]
 800f37c:	464b      	mov	r3, r9
 800f37e:	4652      	mov	r2, sl
 800f380:	4621      	mov	r1, r4
 800f382:	4628      	mov	r0, r5
 800f384:	f7ff ff9e 	bl	800f2c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800f388:	4683      	mov	fp, r0
 800f38a:	b168      	cbz	r0, 800f3a8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800f38c:	eb0a 0109 	add.w	r1, sl, r9
 800f390:	4441      	add	r1, r8
 800f392:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800f396:	463a      	mov	r2, r7
 800f398:	4649      	mov	r1, r9
 800f39a:	4628      	mov	r0, r5
 800f39c:	f7ff ff42 	bl	800f224 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800f3a0:	4658      	mov	r0, fp
 800f3a2:	b003      	add	sp, #12
 800f3a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3a8:	eb07 010a 	add.w	r1, r7, sl
 800f3ac:	4449      	add	r1, r9
 800f3ae:	4441      	add	r1, r8
 800f3b0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800f3b4:	e7d2      	b.n	800f35c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800f3b6:	f04f 0b00 	mov.w	fp, #0
 800f3ba:	e7f1      	b.n	800f3a0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800f3bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800f3bc:	b570      	push	{r4, r5, r6, lr}
 800f3be:	8810      	ldrh	r0, [r2, #0]
 800f3c0:	4298      	cmp	r0, r3
 800f3c2:	d817      	bhi.n	800f3f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f3c4:	1e48      	subs	r0, r1, #1
 800f3c6:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800f3ca:	4298      	cmp	r0, r3
 800f3cc:	d312      	bcc.n	800f3f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f3ce:	2400      	movs	r4, #0
 800f3d0:	428c      	cmp	r4, r1
 800f3d2:	d20f      	bcs.n	800f3f4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800f3d4:	1860      	adds	r0, r4, r1
 800f3d6:	1040      	asrs	r0, r0, #1
 800f3d8:	0085      	lsls	r5, r0, #2
 800f3da:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800f3de:	42b3      	cmp	r3, r6
 800f3e0:	d902      	bls.n	800f3e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800f3e2:	3001      	adds	r0, #1
 800f3e4:	b284      	uxth	r4, r0
 800f3e6:	e7f3      	b.n	800f3d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f3e8:	d201      	bcs.n	800f3ee <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800f3ea:	b281      	uxth	r1, r0
 800f3ec:	e7f0      	b.n	800f3d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800f3ee:	442a      	add	r2, r5
 800f3f0:	8850      	ldrh	r0, [r2, #2]
 800f3f2:	bd70      	pop	{r4, r5, r6, pc}
 800f3f4:	2000      	movs	r0, #0
 800f3f6:	e7fc      	b.n	800f3f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800f3f8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800f3f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f3fc:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800f3fe:	886f      	ldrh	r7, [r5, #2]
 800f400:	4604      	mov	r4, r0
 800f402:	087f      	lsrs	r7, r7, #1
 800f404:	260b      	movs	r6, #11
 800f406:	3e01      	subs	r6, #1
 800f408:	d01b      	beq.n	800f442 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800f40a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800f40c:	b92b      	cbnz	r3, 800f41a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800f40e:	4b0e      	ldr	r3, [pc, #56]	; (800f448 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800f410:	4a0e      	ldr	r2, [pc, #56]	; (800f44c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800f412:	480f      	ldr	r0, [pc, #60]	; (800f450 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800f414:	21c0      	movs	r1, #192	; 0xc0
 800f416:	f00c fc6d 	bl	801bcf4 <__assert_func>
 800f41a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800f41c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800f420:	462a      	mov	r2, r5
 800f422:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800f426:	4639      	mov	r1, r7
 800f428:	4643      	mov	r3, r8
 800f42a:	4620      	mov	r0, r4
 800f42c:	f7ff ffc6 	bl	800f3bc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800f430:	b138      	cbz	r0, 800f442 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800f432:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800f436:	4642      	mov	r2, r8
 800f438:	4620      	mov	r0, r4
 800f43a:	f7ff ff8b 	bl	800f354 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800f43e:	2800      	cmp	r0, #0
 800f440:	d1e1      	bne.n	800f406 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800f442:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f446:	bf00      	nop
 800f448:	0801dc08 	.word	0x0801dc08
 800f44c:	0801f483 	.word	0x0801f483
 800f450:	0801dcda 	.word	0x0801dcda

0800f454 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800f454:	b570      	push	{r4, r5, r6, lr}
 800f456:	694a      	ldr	r2, [r1, #20]
 800f458:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f45a:	684b      	ldr	r3, [r1, #4]
 800f45c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800f45e:	1b54      	subs	r4, r2, r5
 800f460:	f000 8106 	beq.w	800f670 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800f464:	1b9b      	subs	r3, r3, r6
 800f466:	d003      	beq.n	800f470 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f468:	4363      	muls	r3, r4
 800f46a:	2210      	movs	r2, #16
 800f46c:	fb93 f3f2 	sdiv	r3, r3, r2
 800f470:	680c      	ldr	r4, [r1, #0]
 800f472:	698a      	ldr	r2, [r1, #24]
 800f474:	1b65      	subs	r5, r4, r5
 800f476:	f000 80fd 	beq.w	800f674 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800f47a:	1b92      	subs	r2, r2, r6
 800f47c:	d003      	beq.n	800f486 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f47e:	436a      	muls	r2, r5
 800f480:	2410      	movs	r4, #16
 800f482:	fb92 f2f4 	sdiv	r2, r2, r4
 800f486:	1a9b      	subs	r3, r3, r2
 800f488:	ee07 3a90 	vmov	s15, r3
 800f48c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800f6b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800f490:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f494:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f498:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f49c:	460a      	mov	r2, r1
 800f49e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800f4a2:	4603      	mov	r3, r0
 800f4a4:	f100 040c 	add.w	r4, r0, #12
 800f4a8:	eeb1 6a43 	vneg.f32	s12, s6
 800f4ac:	edd2 7a02 	vldr	s15, [r2, #8]
 800f4b0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800f4b4:	3214      	adds	r2, #20
 800f4b6:	ece3 6a01 	vstmia	r3!, {s13}
 800f4ba:	ed52 7a02 	vldr	s15, [r2, #-8]
 800f4be:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f4c2:	429c      	cmp	r4, r3
 800f4c4:	edc3 7a02 	vstr	s15, [r3, #8]
 800f4c8:	ed52 7a01 	vldr	s15, [r2, #-4]
 800f4cc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f4d0:	edc3 7a05 	vstr	s15, [r3, #20]
 800f4d4:	d1ea      	bne.n	800f4ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800f4d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f4d8:	698b      	ldr	r3, [r1, #24]
 800f4da:	edd0 4a02 	vldr	s9, [r0, #8]
 800f4de:	edd0 3a00 	vldr	s7, [r0]
 800f4e2:	edd0 6a01 	vldr	s13, [r0, #4]
 800f4e6:	ed90 5a05 	vldr	s10, [r0, #20]
 800f4ea:	ed90 2a03 	vldr	s4, [r0, #12]
 800f4ee:	edd0 5a04 	vldr	s11, [r0, #16]
 800f4f2:	ed90 1a07 	vldr	s2, [r0, #28]
 800f4f6:	edd0 2a06 	vldr	s5, [r0, #24]
 800f4fa:	1a9b      	subs	r3, r3, r2
 800f4fc:	ee07 3a90 	vmov	s15, r3
 800f500:	684b      	ldr	r3, [r1, #4]
 800f502:	1a9b      	subs	r3, r3, r2
 800f504:	ee07 3a10 	vmov	s14, r3
 800f508:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f50c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800f510:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f514:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800f518:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f51c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800f520:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f524:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800f528:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f52c:	ee32 5a45 	vsub.f32	s10, s4, s10
 800f530:	ee67 7a83 	vmul.f32	s15, s15, s6
 800f534:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800f538:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f53a:	694a      	ldr	r2, [r1, #20]
 800f53c:	1b13      	subs	r3, r2, r4
 800f53e:	ee07 3a10 	vmov	s14, r3
 800f542:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f546:	680b      	ldr	r3, [r1, #0]
 800f548:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f54c:	1b1b      	subs	r3, r3, r4
 800f54e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800f552:	ee07 3a10 	vmov	s14, r3
 800f556:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f55a:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f55e:	eee6 4a87 	vfma.f32	s9, s13, s14
 800f562:	ee64 4a86 	vmul.f32	s9, s9, s12
 800f566:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800f56a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f56c:	698b      	ldr	r3, [r1, #24]
 800f56e:	1a9b      	subs	r3, r3, r2
 800f570:	ee06 3a90 	vmov	s13, r3
 800f574:	684b      	ldr	r3, [r1, #4]
 800f576:	1a9b      	subs	r3, r3, r2
 800f578:	ee07 3a10 	vmov	s14, r3
 800f57c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f580:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f584:	ee66 6a84 	vmul.f32	s13, s13, s8
 800f588:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f58c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800f590:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f594:	ee66 6a83 	vmul.f32	s13, s13, s6
 800f598:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800f59c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f59e:	694a      	ldr	r2, [r1, #20]
 800f5a0:	1b13      	subs	r3, r2, r4
 800f5a2:	ee07 3a10 	vmov	s14, r3
 800f5a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f5aa:	680b      	ldr	r3, [r1, #0]
 800f5ac:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f5b0:	1b1b      	subs	r3, r3, r4
 800f5b2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800f5b6:	ee07 3a10 	vmov	s14, r3
 800f5ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f5be:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f5c2:	eea5 5a87 	vfma.f32	s10, s11, s14
 800f5c6:	edd0 5a08 	vldr	s11, [r0, #32]
 800f5ca:	ee25 5a06 	vmul.f32	s10, s10, s12
 800f5ce:	ee31 1a65 	vsub.f32	s2, s2, s11
 800f5d2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800f5d6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f5d8:	698b      	ldr	r3, [r1, #24]
 800f5da:	1a9b      	subs	r3, r3, r2
 800f5dc:	ee07 3a10 	vmov	s14, r3
 800f5e0:	684b      	ldr	r3, [r1, #4]
 800f5e2:	1a9b      	subs	r3, r3, r2
 800f5e4:	ee01 3a90 	vmov	s3, r3
 800f5e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f5ec:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800f5f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f5f4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800f5f8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800f5fc:	ee61 1a84 	vmul.f32	s3, s3, s8
 800f600:	eea1 7a21 	vfma.f32	s14, s2, s3
 800f604:	ee27 7a03 	vmul.f32	s14, s14, s6
 800f608:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f60c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f60e:	694a      	ldr	r2, [r1, #20]
 800f610:	1b13      	subs	r3, r2, r4
 800f612:	ee03 3a10 	vmov	s6, r3
 800f616:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f61a:	680b      	ldr	r3, [r1, #0]
 800f61c:	ee23 3a04 	vmul.f32	s6, s6, s8
 800f620:	1b1b      	subs	r3, r3, r4
 800f622:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800f626:	ee03 3a10 	vmov	s6, r3
 800f62a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f62e:	ee23 4a04 	vmul.f32	s8, s6, s8
 800f632:	eee1 5a04 	vfma.f32	s11, s2, s8
 800f636:	ee25 6a86 	vmul.f32	s12, s11, s12
 800f63a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800f63e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800f642:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800f646:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800f64a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f64e:	dd13      	ble.n	800f678 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800f650:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f654:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800f658:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f65a:	eee3 7a87 	vfma.f32	s15, s7, s14
 800f65e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f662:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f666:	dd15      	ble.n	800f694 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800f668:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f66c:	6403      	str	r3, [r0, #64]	; 0x40
 800f66e:	bd70      	pop	{r4, r5, r6, pc}
 800f670:	4623      	mov	r3, r4
 800f672:	e6fd      	b.n	800f470 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f674:	462a      	mov	r2, r5
 800f676:	e706      	b.n	800f486 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f678:	d502      	bpl.n	800f680 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800f67a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f67e:	e7e9      	b.n	800f654 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800f680:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800f684:	eea3 2a85 	vfma.f32	s4, s7, s10
 800f688:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800f68c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f690:	dade      	bge.n	800f650 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800f692:	e7f2      	b.n	800f67a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800f694:	d502      	bpl.n	800f69c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800f696:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f69a:	e7e7      	b.n	800f66c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800f69c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800f6a0:	eee3 4a86 	vfma.f32	s9, s7, s12
 800f6a4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800f6a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f6ac:	dadc      	bge.n	800f668 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800f6ae:	e7f2      	b.n	800f696 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800f6b0:	3d800000 	.word	0x3d800000

0800f6b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800f6b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f6b8:	2714      	movs	r7, #20
 800f6ba:	435f      	muls	r7, r3
 800f6bc:	eb02 0c07 	add.w	ip, r2, r7
 800f6c0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800f6c4:	f115 0e0f 	adds.w	lr, r5, #15
 800f6c8:	d432      	bmi.n	800f730 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7c>
 800f6ca:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800f6ce:	9c08      	ldr	r4, [sp, #32]
 800f6d0:	f8c0 e014 	str.w	lr, [r0, #20]
 800f6d4:	2614      	movs	r6, #20
 800f6d6:	4366      	muls	r6, r4
 800f6d8:	eb02 0806 	add.w	r8, r2, r6
 800f6dc:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800f6e0:	f115 040f 	adds.w	r4, r5, #15
 800f6e4:	d430      	bmi.n	800f748 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800f6e6:	1124      	asrs	r4, r4, #4
 800f6e8:	eba4 040e 	sub.w	r4, r4, lr
 800f6ec:	6184      	str	r4, [r0, #24]
 800f6ee:	2c00      	cmp	r4, #0
 800f6f0:	f000 80a9 	beq.w	800f846 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x192>
 800f6f4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800f6f8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800f6fc:	5995      	ldr	r5, [r2, r6]
 800f6fe:	eba4 0809 	sub.w	r8, r4, r9
 800f702:	59d4      	ldr	r4, [r2, r7]
 800f704:	eba5 0a04 	sub.w	sl, r5, r4
 800f708:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800f70c:	fb0e fe05 	mul.w	lr, lr, r5
 800f710:	fb0a ee19 	mls	lr, sl, r9, lr
 800f714:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800f718:	fb08 e404 	mla	r4, r8, r4, lr
 800f71c:	3c01      	subs	r4, #1
 800f71e:	2e00      	cmp	r6, #0
 800f720:	4434      	add	r4, r6
 800f722:	dc1d      	bgt.n	800f760 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xac>
 800f724:	4b5a      	ldr	r3, [pc, #360]	; (800f890 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1dc>)
 800f726:	4a5b      	ldr	r2, [pc, #364]	; (800f894 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 800f728:	485b      	ldr	r0, [pc, #364]	; (800f898 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 800f72a:	21f7      	movs	r1, #247	; 0xf7
 800f72c:	f00c fae2 	bl	801bcf4 <__assert_func>
 800f730:	f1c5 0501 	rsb	r5, r5, #1
 800f734:	f015 050f 	ands.w	r5, r5, #15
 800f738:	bf18      	it	ne
 800f73a:	2501      	movne	r5, #1
 800f73c:	2410      	movs	r4, #16
 800f73e:	fb9e fef4 	sdiv	lr, lr, r4
 800f742:	ebae 0e05 	sub.w	lr, lr, r5
 800f746:	e7c2      	b.n	800f6ce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 800f748:	f1c5 0501 	rsb	r5, r5, #1
 800f74c:	f015 050f 	ands.w	r5, r5, #15
 800f750:	bf18      	it	ne
 800f752:	2501      	movne	r5, #1
 800f754:	f04f 0910 	mov.w	r9, #16
 800f758:	fb94 f4f9 	sdiv	r4, r4, r9
 800f75c:	1b64      	subs	r4, r4, r5
 800f75e:	e7c3      	b.n	800f6e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 800f760:	2c00      	cmp	r4, #0
 800f762:	db72      	blt.n	800f84a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x196>
 800f764:	fb94 fef6 	sdiv	lr, r4, r6
 800f768:	f8c0 e000 	str.w	lr, [r0]
 800f76c:	fb06 441e 	mls	r4, r6, lr, r4
 800f770:	6104      	str	r4, [r0, #16]
 800f772:	2d00      	cmp	r5, #0
 800f774:	db7b      	blt.n	800f86e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 800f776:	fb95 f4f6 	sdiv	r4, r5, r6
 800f77a:	6044      	str	r4, [r0, #4]
 800f77c:	fb06 5514 	mls	r5, r6, r4, r5
 800f780:	6085      	str	r5, [r0, #8]
 800f782:	60c6      	str	r6, [r0, #12]
 800f784:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800f788:	6945      	ldr	r5, [r0, #20]
 800f78a:	59d2      	ldr	r2, [r2, r7]
 800f78c:	eddf 6a43 	vldr	s13, [pc, #268]	; 800f89c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>
 800f790:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800f794:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800f798:	ee07 4a10 	vmov	s14, r4
 800f79c:	6804      	ldr	r4, [r0, #0]
 800f79e:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800f7a2:	ee07 2a90 	vmov	s15, r2
 800f7a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f7aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f7ae:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800f7b2:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f7b6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f7ba:	edd3 6a00 	vldr	s13, [r3]
 800f7be:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f7c2:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 800f7c6:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f7ca:	edc0 6a07 	vstr	s13, [r0, #28]
 800f7ce:	edd0 6a01 	vldr	s13, [r0, #4]
 800f7d2:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 800f7d6:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800f7da:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f7de:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f7e2:	ed80 6a08 	vstr	s12, [r0, #32]
 800f7e6:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f7e8:	6242      	str	r2, [r0, #36]	; 0x24
 800f7ea:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 800f7ee:	ed93 6a03 	vldr	s12, [r3, #12]
 800f7f2:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f7f6:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800f7fa:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f7fe:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 800f802:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800f806:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 800f80a:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f80e:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 800f812:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f814:	6302      	str	r2, [r0, #48]	; 0x30
 800f816:	ed93 6a06 	vldr	s12, [r3, #24]
 800f81a:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 800f81e:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f822:	eeb0 7a46 	vmov.f32	s14, s12
 800f826:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 800f82a:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f82e:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f832:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 800f836:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 800f83a:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f83e:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 800f842:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 800f844:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f846:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f84a:	4264      	negs	r4, r4
 800f84c:	fb94 fef6 	sdiv	lr, r4, r6
 800f850:	f1ce 0800 	rsb	r8, lr, #0
 800f854:	fb06 441e 	mls	r4, r6, lr, r4
 800f858:	f8c0 8000 	str.w	r8, [r0]
 800f85c:	6104      	str	r4, [r0, #16]
 800f85e:	2c00      	cmp	r4, #0
 800f860:	d087      	beq.n	800f772 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 800f862:	ea6f 0e0e 	mvn.w	lr, lr
 800f866:	f8c0 e000 	str.w	lr, [r0]
 800f86a:	1b34      	subs	r4, r6, r4
 800f86c:	e780      	b.n	800f770 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbc>
 800f86e:	426d      	negs	r5, r5
 800f870:	fb95 f4f6 	sdiv	r4, r5, r6
 800f874:	f1c4 0e00 	rsb	lr, r4, #0
 800f878:	fb06 5514 	mls	r5, r6, r4, r5
 800f87c:	f8c0 e004 	str.w	lr, [r0, #4]
 800f880:	6085      	str	r5, [r0, #8]
 800f882:	2d00      	cmp	r5, #0
 800f884:	f43f af7d 	beq.w	800f782 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 800f888:	43e4      	mvns	r4, r4
 800f88a:	6044      	str	r4, [r0, #4]
 800f88c:	1b75      	subs	r5, r6, r5
 800f88e:	e777      	b.n	800f780 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xcc>
 800f890:	0801f7dd 	.word	0x0801f7dd
 800f894:	0801f81c 	.word	0x0801f81c
 800f898:	0801f7ed 	.word	0x0801f7ed
 800f89c:	3d800000 	.word	0x3d800000

0800f8a0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f8a0:	4b01      	ldr	r3, [pc, #4]	; (800f8a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f8a2:	6018      	str	r0, [r3, #0]
 800f8a4:	4770      	bx	lr
 800f8a6:	bf00      	nop
 800f8a8:	2000a660 	.word	0x2000a660

0800f8ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800f8ac:	4b06      	ldr	r3, [pc, #24]	; (800f8c8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800f8ae:	881a      	ldrh	r2, [r3, #0]
 800f8b0:	4282      	cmp	r2, r0
 800f8b2:	d807      	bhi.n	800f8c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800f8b4:	4b05      	ldr	r3, [pc, #20]	; (800f8cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800f8b6:	881b      	ldrh	r3, [r3, #0]
 800f8b8:	4413      	add	r3, r2
 800f8ba:	4298      	cmp	r0, r3
 800f8bc:	bfac      	ite	ge
 800f8be:	2000      	movge	r0, #0
 800f8c0:	2001      	movlt	r0, #1
 800f8c2:	4770      	bx	lr
 800f8c4:	2000      	movs	r0, #0
 800f8c6:	4770      	bx	lr
 800f8c8:	2000a680 	.word	0x2000a680
 800f8cc:	2000a684 	.word	0x2000a684

0800f8d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f8d0:	b508      	push	{r3, lr}
 800f8d2:	4601      	mov	r1, r0
 800f8d4:	f7ff ffea 	bl	800f8ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800f8d8:	b118      	cbz	r0, 800f8e2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800f8da:	4b02      	ldr	r3, [pc, #8]	; (800f8e4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800f8dc:	681b      	ldr	r3, [r3, #0]
 800f8de:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800f8e2:	bd08      	pop	{r3, pc}
 800f8e4:	2000a664 	.word	0x2000a664

0800f8e8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f8e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8ea:	4c24      	ldr	r4, [pc, #144]	; (800f97c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800f8ec:	6823      	ldr	r3, [r4, #0]
 800f8ee:	2b00      	cmp	r3, #0
 800f8f0:	d042      	beq.n	800f978 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800f8f2:	4a23      	ldr	r2, [pc, #140]	; (800f980 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800f8f4:	4d23      	ldr	r5, [pc, #140]	; (800f984 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800f8f6:	8811      	ldrh	r1, [r2, #0]
 800f8f8:	f8b5 c000 	ldrh.w	ip, [r5]
 800f8fc:	4822      	ldr	r0, [pc, #136]	; (800f988 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800f8fe:	4461      	add	r1, ip
 800f900:	1c4a      	adds	r2, r1, #1
 800f902:	f022 0201 	bic.w	r2, r2, #1
 800f906:	008f      	lsls	r7, r1, #2
 800f908:	0412      	lsls	r2, r2, #16
 800f90a:	19de      	adds	r6, r3, r7
 800f90c:	0c12      	lsrs	r2, r2, #16
 800f90e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800f912:	6006      	str	r6, [r0, #0]
 800f914:	4e1d      	ldr	r6, [pc, #116]	; (800f98c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800f916:	19da      	adds	r2, r3, r7
 800f918:	6032      	str	r2, [r6, #0]
 800f91a:	220e      	movs	r2, #14
 800f91c:	fb02 f20c 	mul.w	r2, r2, ip
 800f920:	3203      	adds	r2, #3
 800f922:	f022 0203 	bic.w	r2, r2, #3
 800f926:	443a      	add	r2, r7
 800f928:	4f19      	ldr	r7, [pc, #100]	; (800f990 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f92a:	4413      	add	r3, r2
 800f92c:	603b      	str	r3, [r7, #0]
 800f92e:	4f19      	ldr	r7, [pc, #100]	; (800f994 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f930:	2300      	movs	r3, #0
 800f932:	803b      	strh	r3, [r7, #0]
 800f934:	4f18      	ldr	r7, [pc, #96]	; (800f998 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f936:	683f      	ldr	r7, [r7, #0]
 800f938:	1aba      	subs	r2, r7, r2
 800f93a:	4f18      	ldr	r7, [pc, #96]	; (800f99c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f93c:	603a      	str	r2, [r7, #0]
 800f93e:	4a18      	ldr	r2, [pc, #96]	; (800f9a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f940:	469c      	mov	ip, r3
 800f942:	8013      	strh	r3, [r2, #0]
 800f944:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f948:	428b      	cmp	r3, r1
 800f94a:	d10d      	bne.n	800f968 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800f94c:	882d      	ldrh	r5, [r5, #0]
 800f94e:	6830      	ldr	r0, [r6, #0]
 800f950:	2300      	movs	r3, #0
 800f952:	240e      	movs	r4, #14
 800f954:	429d      	cmp	r5, r3
 800f956:	d90f      	bls.n	800f978 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800f958:	fb04 0203 	mla	r2, r4, r3, r0
 800f95c:	3301      	adds	r3, #1
 800f95e:	7b11      	ldrb	r1, [r2, #12]
 800f960:	f36f 1145 	bfc	r1, #5, #1
 800f964:	7311      	strb	r1, [r2, #12]
 800f966:	e7f5      	b.n	800f954 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800f968:	6822      	ldr	r2, [r4, #0]
 800f96a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f96e:	6802      	ldr	r2, [r0, #0]
 800f970:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800f974:	3301      	adds	r3, #1
 800f976:	e7e7      	b.n	800f948 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800f978:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f97a:	bf00      	nop
 800f97c:	2000a664 	.word	0x2000a664
 800f980:	2000a680 	.word	0x2000a680
 800f984:	2000a684 	.word	0x2000a684
 800f988:	2000a678 	.word	0x2000a678
 800f98c:	2000a668 	.word	0x2000a668
 800f990:	2000a670 	.word	0x2000a670
 800f994:	2000a682 	.word	0x2000a682
 800f998:	2000a66c 	.word	0x2000a66c
 800f99c:	2000a67c 	.word	0x2000a67c
 800f9a0:	2000a674 	.word	0x2000a674

0800f9a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f9a4:	b510      	push	{r4, lr}
 800f9a6:	4b10      	ldr	r3, [pc, #64]	; (800f9e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f9a8:	681b      	ldr	r3, [r3, #0]
 800f9aa:	b9db      	cbnz	r3, 800f9e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f9ac:	b1d1      	cbz	r1, 800f9e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f9ae:	4b0f      	ldr	r3, [pc, #60]	; (800f9ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f9b0:	801a      	strh	r2, [r3, #0]
 800f9b2:	4b0f      	ldr	r3, [pc, #60]	; (800f9f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f9b4:	881b      	ldrh	r3, [r3, #0]
 800f9b6:	b292      	uxth	r2, r2
 800f9b8:	240e      	movs	r4, #14
 800f9ba:	4413      	add	r3, r2
 800f9bc:	4362      	muls	r2, r4
 800f9be:	2406      	movs	r4, #6
 800f9c0:	fb04 2203 	mla	r2, r4, r3, r2
 800f9c4:	428a      	cmp	r2, r1
 800f9c6:	d305      	bcc.n	800f9d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f9c8:	4b0a      	ldr	r3, [pc, #40]	; (800f9f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f9ca:	4a0b      	ldr	r2, [pc, #44]	; (800f9f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f9cc:	480b      	ldr	r0, [pc, #44]	; (800f9fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f9ce:	2134      	movs	r1, #52	; 0x34
 800f9d0:	f00c f990 	bl	801bcf4 <__assert_func>
 800f9d4:	4b0a      	ldr	r3, [pc, #40]	; (800fa00 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f9d6:	6019      	str	r1, [r3, #0]
 800f9d8:	4b0a      	ldr	r3, [pc, #40]	; (800fa04 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f9da:	6018      	str	r0, [r3, #0]
 800f9dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f9e0:	f7ff bf82 	b.w	800f8e8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f9e4:	bd10      	pop	{r4, pc}
 800f9e6:	bf00      	nop
 800f9e8:	2000a670 	.word	0x2000a670
 800f9ec:	2000a684 	.word	0x2000a684
 800f9f0:	2000a680 	.word	0x2000a680
 800f9f4:	0801f8ba 	.word	0x0801f8ba
 800f9f8:	0801f913 	.word	0x0801f913
 800f9fc:	0801f895 	.word	0x0801f895
 800fa00:	2000a66c 	.word	0x2000a66c
 800fa04:	2000a664 	.word	0x2000a664

0800fa08 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800fa08:	b470      	push	{r4, r5, r6}
 800fa0a:	4c07      	ldr	r4, [pc, #28]	; (800fa28 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800fa0c:	6826      	ldr	r6, [r4, #0]
 800fa0e:	4605      	mov	r5, r0
 800fa10:	4610      	mov	r0, r2
 800fa12:	9a03      	ldr	r2, [sp, #12]
 800fa14:	b936      	cbnz	r6, 800fa24 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800fa16:	6025      	str	r5, [r4, #0]
 800fa18:	4c04      	ldr	r4, [pc, #16]	; (800fa2c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800fa1a:	8021      	strh	r1, [r4, #0]
 800fa1c:	bc70      	pop	{r4, r5, r6}
 800fa1e:	4619      	mov	r1, r3
 800fa20:	f7ff bfc0 	b.w	800f9a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800fa24:	bc70      	pop	{r4, r5, r6}
 800fa26:	4770      	bx	lr
 800fa28:	2000a688 	.word	0x2000a688
 800fa2c:	2000a680 	.word	0x2000a680

0800fa30 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800fa30:	b508      	push	{r3, lr}
 800fa32:	4b17      	ldr	r3, [pc, #92]	; (800fa90 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800fa34:	6819      	ldr	r1, [r3, #0]
 800fa36:	b931      	cbnz	r1, 800fa46 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800fa38:	4b16      	ldr	r3, [pc, #88]	; (800fa94 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800fa3a:	4a17      	ldr	r2, [pc, #92]	; (800fa98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800fa3c:	4817      	ldr	r0, [pc, #92]	; (800fa9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800fa3e:	f240 4184 	movw	r1, #1156	; 0x484
 800fa42:	f00c f957 	bl	801bcf4 <__assert_func>
 800fa46:	4a16      	ldr	r2, [pc, #88]	; (800faa0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800fa48:	8803      	ldrh	r3, [r0, #0]
 800fa4a:	8812      	ldrh	r2, [r2, #0]
 800fa4c:	4293      	cmp	r3, r2
 800fa4e:	d204      	bcs.n	800fa5a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800fa50:	2214      	movs	r2, #20
 800fa52:	fb02 1303 	mla	r3, r2, r3, r1
 800fa56:	8918      	ldrh	r0, [r3, #8]
 800fa58:	bd08      	pop	{r3, pc}
 800fa5a:	4912      	ldr	r1, [pc, #72]	; (800faa4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 800fa5c:	8809      	ldrh	r1, [r1, #0]
 800fa5e:	4411      	add	r1, r2
 800fa60:	428b      	cmp	r3, r1
 800fa62:	da06      	bge.n	800fa72 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800fa64:	1a9b      	subs	r3, r3, r2
 800fa66:	4a10      	ldr	r2, [pc, #64]	; (800faa8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 800fa68:	6812      	ldr	r2, [r2, #0]
 800fa6a:	210e      	movs	r1, #14
 800fa6c:	fb01 2303 	mla	r3, r1, r3, r2
 800fa70:	e7f1      	b.n	800fa56 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800fa72:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa76:	4293      	cmp	r3, r2
 800fa78:	d107      	bne.n	800fa8a <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 800fa7a:	4b0c      	ldr	r3, [pc, #48]	; (800faac <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 800fa7c:	781b      	ldrb	r3, [r3, #0]
 800fa7e:	b913      	cbnz	r3, 800fa86 <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 800fa80:	4b0b      	ldr	r3, [pc, #44]	; (800fab0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 800fa82:	8818      	ldrh	r0, [r3, #0]
 800fa84:	e7e8      	b.n	800fa58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800fa86:	4b0b      	ldr	r3, [pc, #44]	; (800fab4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 800fa88:	e7fb      	b.n	800fa82 <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 800fa8a:	2000      	movs	r0, #0
 800fa8c:	e7e4      	b.n	800fa58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800fa8e:	bf00      	nop
 800fa90:	2000a688 	.word	0x2000a688
 800fa94:	0801ecc0 	.word	0x0801ecc0
 800fa98:	0801f9c0 	.word	0x0801f9c0
 800fa9c:	0801f895 	.word	0x0801f895
 800faa0:	2000a680 	.word	0x2000a680
 800faa4:	2000a684 	.word	0x2000a684
 800faa8:	2000a668 	.word	0x2000a668
 800faac:	2000a5f8 	.word	0x2000a5f8
 800fab0:	2000a5fa 	.word	0x2000a5fa
 800fab4:	2000a5fc 	.word	0x2000a5fc

0800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800fab8:	b508      	push	{r3, lr}
 800faba:	4b17      	ldr	r3, [pc, #92]	; (800fb18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800fabc:	6819      	ldr	r1, [r3, #0]
 800fabe:	b931      	cbnz	r1, 800face <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800fac0:	4b16      	ldr	r3, [pc, #88]	; (800fb1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800fac2:	4a17      	ldr	r2, [pc, #92]	; (800fb20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800fac4:	4817      	ldr	r0, [pc, #92]	; (800fb24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800fac6:	f44f 6193 	mov.w	r1, #1176	; 0x498
 800faca:	f00c f913 	bl	801bcf4 <__assert_func>
 800face:	4a16      	ldr	r2, [pc, #88]	; (800fb28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800fad0:	8803      	ldrh	r3, [r0, #0]
 800fad2:	8812      	ldrh	r2, [r2, #0]
 800fad4:	4293      	cmp	r3, r2
 800fad6:	d204      	bcs.n	800fae2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800fad8:	2214      	movs	r2, #20
 800fada:	fb02 1303 	mla	r3, r2, r3, r1
 800fade:	8958      	ldrh	r0, [r3, #10]
 800fae0:	bd08      	pop	{r3, pc}
 800fae2:	4912      	ldr	r1, [pc, #72]	; (800fb2c <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 800fae4:	8809      	ldrh	r1, [r1, #0]
 800fae6:	4411      	add	r1, r2
 800fae8:	428b      	cmp	r3, r1
 800faea:	da06      	bge.n	800fafa <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800faec:	1a9b      	subs	r3, r3, r2
 800faee:	4a10      	ldr	r2, [pc, #64]	; (800fb30 <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 800faf0:	6812      	ldr	r2, [r2, #0]
 800faf2:	210e      	movs	r1, #14
 800faf4:	fb01 2303 	mla	r3, r1, r3, r2
 800faf8:	e7f1      	b.n	800fade <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800fafa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fafe:	4293      	cmp	r3, r2
 800fb00:	d107      	bne.n	800fb12 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 800fb02:	4b0c      	ldr	r3, [pc, #48]	; (800fb34 <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 800fb04:	781b      	ldrb	r3, [r3, #0]
 800fb06:	b913      	cbnz	r3, 800fb0e <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 800fb08:	4b0b      	ldr	r3, [pc, #44]	; (800fb38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 800fb0a:	8818      	ldrh	r0, [r3, #0]
 800fb0c:	e7e8      	b.n	800fae0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800fb0e:	4b0b      	ldr	r3, [pc, #44]	; (800fb3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 800fb10:	e7fb      	b.n	800fb0a <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 800fb12:	2000      	movs	r0, #0
 800fb14:	e7e4      	b.n	800fae0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800fb16:	bf00      	nop
 800fb18:	2000a688 	.word	0x2000a688
 800fb1c:	0801ecc0 	.word	0x0801ecc0
 800fb20:	0801f9ec 	.word	0x0801f9ec
 800fb24:	0801f895 	.word	0x0801f895
 800fb28:	2000a680 	.word	0x2000a680
 800fb2c:	2000a684 	.word	0x2000a684
 800fb30:	2000a668 	.word	0x2000a668
 800fb34:	2000a5f8 	.word	0x2000a5f8
 800fb38:	2000a5fc 	.word	0x2000a5fc
 800fb3c:	2000a5fa 	.word	0x2000a5fa

0800fb40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800fb40:	b510      	push	{r4, lr}
 800fb42:	4b23      	ldr	r3, [pc, #140]	; (800fbd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800fb44:	681c      	ldr	r4, [r3, #0]
 800fb46:	b934      	cbnz	r4, 800fb56 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800fb48:	4b22      	ldr	r3, [pc, #136]	; (800fbd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800fb4a:	4a23      	ldr	r2, [pc, #140]	; (800fbd8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800fb4c:	4823      	ldr	r0, [pc, #140]	; (800fbdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800fb4e:	f240 41ac 	movw	r1, #1196	; 0x4ac
 800fb52:	f00c f8cf 	bl	801bcf4 <__assert_func>
 800fb56:	4a22      	ldr	r2, [pc, #136]	; (800fbe0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800fb58:	880b      	ldrh	r3, [r1, #0]
 800fb5a:	8812      	ldrh	r2, [r2, #0]
 800fb5c:	4293      	cmp	r3, r2
 800fb5e:	d211      	bcs.n	800fb84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800fb60:	2214      	movs	r2, #20
 800fb62:	fb02 4303 	mla	r3, r2, r3, r4
 800fb66:	8a1a      	ldrh	r2, [r3, #16]
 800fb68:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800fb6c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800fb70:	8a5b      	ldrh	r3, [r3, #18]
 800fb72:	8004      	strh	r4, [r0, #0]
 800fb74:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fb78:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800fb7c:	8041      	strh	r1, [r0, #2]
 800fb7e:	8082      	strh	r2, [r0, #4]
 800fb80:	80c3      	strh	r3, [r0, #6]
 800fb82:	e00e      	b.n	800fba2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fb84:	4917      	ldr	r1, [pc, #92]	; (800fbe4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800fb86:	8809      	ldrh	r1, [r1, #0]
 800fb88:	4411      	add	r1, r2
 800fb8a:	428b      	cmp	r3, r1
 800fb8c:	da0a      	bge.n	800fba4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800fb8e:	1a9b      	subs	r3, r3, r2
 800fb90:	4a15      	ldr	r2, [pc, #84]	; (800fbe8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800fb92:	6812      	ldr	r2, [r2, #0]
 800fb94:	210e      	movs	r1, #14
 800fb96:	fb01 2303 	mla	r3, r1, r3, r2
 800fb9a:	681a      	ldr	r2, [r3, #0]
 800fb9c:	6002      	str	r2, [r0, #0]
 800fb9e:	685a      	ldr	r2, [r3, #4]
 800fba0:	6042      	str	r2, [r0, #4]
 800fba2:	bd10      	pop	{r4, pc}
 800fba4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fba8:	4293      	cmp	r3, r2
 800fbaa:	d10b      	bne.n	800fbc4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800fbac:	4b0f      	ldr	r3, [pc, #60]	; (800fbec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800fbae:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fbb2:	4b0f      	ldr	r3, [pc, #60]	; (800fbf0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800fbb4:	8081      	strh	r1, [r0, #4]
 800fbb6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fbba:	80c2      	strh	r2, [r0, #6]
 800fbbc:	2300      	movs	r3, #0
 800fbbe:	8003      	strh	r3, [r0, #0]
 800fbc0:	8043      	strh	r3, [r0, #2]
 800fbc2:	e7ee      	b.n	800fba2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800fbc4:	2300      	movs	r3, #0
 800fbc6:	8003      	strh	r3, [r0, #0]
 800fbc8:	8043      	strh	r3, [r0, #2]
 800fbca:	8083      	strh	r3, [r0, #4]
 800fbcc:	e7d8      	b.n	800fb80 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800fbce:	bf00      	nop
 800fbd0:	2000a688 	.word	0x2000a688
 800fbd4:	0801ecc0 	.word	0x0801ecc0
 800fbd8:	0801f959 	.word	0x0801f959
 800fbdc:	0801f895 	.word	0x0801f895
 800fbe0:	2000a680 	.word	0x2000a680
 800fbe4:	2000a684 	.word	0x2000a684
 800fbe8:	2000a668 	.word	0x2000a668
 800fbec:	2000a5f4 	.word	0x2000a5f4
 800fbf0:	2000a5f6 	.word	0x2000a5f6

0800fbf4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800fbf4:	4b18      	ldr	r3, [pc, #96]	; (800fc58 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800fbf6:	681b      	ldr	r3, [r3, #0]
 800fbf8:	b34b      	cbz	r3, 800fc4e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fbfa:	4a18      	ldr	r2, [pc, #96]	; (800fc5c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800fbfc:	8800      	ldrh	r0, [r0, #0]
 800fbfe:	8812      	ldrh	r2, [r2, #0]
 800fc00:	4290      	cmp	r0, r2
 800fc02:	d211      	bcs.n	800fc28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800fc04:	2214      	movs	r2, #20
 800fc06:	fb02 3300 	mla	r3, r2, r0, r3
 800fc0a:	8a1a      	ldrh	r2, [r3, #16]
 800fc0c:	8919      	ldrh	r1, [r3, #8]
 800fc0e:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fc12:	428a      	cmp	r2, r1
 800fc14:	db1d      	blt.n	800fc52 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fc16:	8a58      	ldrh	r0, [r3, #18]
 800fc18:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800fc1c:	895b      	ldrh	r3, [r3, #10]
 800fc1e:	4298      	cmp	r0, r3
 800fc20:	bfac      	ite	ge
 800fc22:	2000      	movge	r0, #0
 800fc24:	2001      	movlt	r0, #1
 800fc26:	4770      	bx	lr
 800fc28:	4b0d      	ldr	r3, [pc, #52]	; (800fc60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800fc2a:	881b      	ldrh	r3, [r3, #0]
 800fc2c:	4413      	add	r3, r2
 800fc2e:	4298      	cmp	r0, r3
 800fc30:	da0d      	bge.n	800fc4e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fc32:	4b0c      	ldr	r3, [pc, #48]	; (800fc64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800fc34:	681b      	ldr	r3, [r3, #0]
 800fc36:	1a80      	subs	r0, r0, r2
 800fc38:	220e      	movs	r2, #14
 800fc3a:	fb02 3300 	mla	r3, r2, r0, r3
 800fc3e:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800fc42:	891a      	ldrh	r2, [r3, #8]
 800fc44:	4291      	cmp	r1, r2
 800fc46:	db04      	blt.n	800fc52 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fc48:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800fc4c:	e7e6      	b.n	800fc1c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800fc4e:	2000      	movs	r0, #0
 800fc50:	4770      	bx	lr
 800fc52:	2001      	movs	r0, #1
 800fc54:	4770      	bx	lr
 800fc56:	bf00      	nop
 800fc58:	2000a688 	.word	0x2000a688
 800fc5c:	2000a680 	.word	0x2000a680
 800fc60:	2000a684 	.word	0x2000a684
 800fc64:	2000a668 	.word	0x2000a668

0800fc68 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800fc68:	b508      	push	{r3, lr}
 800fc6a:	4b12      	ldr	r3, [pc, #72]	; (800fcb4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800fc6c:	6819      	ldr	r1, [r3, #0]
 800fc6e:	b931      	cbnz	r1, 800fc7e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800fc70:	4b11      	ldr	r3, [pc, #68]	; (800fcb8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800fc72:	4a12      	ldr	r2, [pc, #72]	; (800fcbc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800fc74:	4812      	ldr	r0, [pc, #72]	; (800fcc0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800fc76:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 800fc7a:	f00c f83b 	bl	801bcf4 <__assert_func>
 800fc7e:	8803      	ldrh	r3, [r0, #0]
 800fc80:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fc84:	4293      	cmp	r3, r2
 800fc86:	d012      	beq.n	800fcae <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800fc88:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fc8c:	4293      	cmp	r3, r2
 800fc8e:	d103      	bne.n	800fc98 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800fc90:	4b0c      	ldr	r3, [pc, #48]	; (800fcc4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fc92:	681b      	ldr	r3, [r3, #0]
 800fc94:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800fc96:	bd08      	pop	{r3, pc}
 800fc98:	4a0b      	ldr	r2, [pc, #44]	; (800fcc8 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800fc9a:	6812      	ldr	r2, [r2, #0]
 800fc9c:	b11a      	cbz	r2, 800fca6 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800fc9e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fca2:	2800      	cmp	r0, #0
 800fca4:	d1f7      	bne.n	800fc96 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fca6:	2214      	movs	r2, #20
 800fca8:	4353      	muls	r3, r2
 800fcaa:	58c8      	ldr	r0, [r1, r3]
 800fcac:	e7f3      	b.n	800fc96 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fcae:	2000      	movs	r0, #0
 800fcb0:	e7f1      	b.n	800fc96 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fcb2:	bf00      	nop
 800fcb4:	2000a688 	.word	0x2000a688
 800fcb8:	0801ecc0 	.word	0x0801ecc0
 800fcbc:	0801f98f 	.word	0x0801f98f
 800fcc0:	0801f895 	.word	0x0801f895
 800fcc4:	2000a600 	.word	0x2000a600
 800fcc8:	2000a664 	.word	0x2000a664

0800fccc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800fccc:	8802      	ldrh	r2, [r0, #0]
 800fcce:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800fcd2:	429a      	cmp	r2, r3
 800fcd4:	d845      	bhi.n	800fd62 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fcd6:	4b24      	ldr	r3, [pc, #144]	; (800fd68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fcd8:	8818      	ldrh	r0, [r3, #0]
 800fcda:	4282      	cmp	r2, r0
 800fcdc:	d221      	bcs.n	800fd22 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800fcde:	4b23      	ldr	r3, [pc, #140]	; (800fd6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800fce0:	6819      	ldr	r1, [r3, #0]
 800fce2:	2314      	movs	r3, #20
 800fce4:	fb03 1302 	mla	r3, r3, r2, r1
 800fce8:	6858      	ldr	r0, [r3, #4]
 800fcea:	2800      	cmp	r0, #0
 800fcec:	d03a      	beq.n	800fd64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fcee:	4920      	ldr	r1, [pc, #128]	; (800fd70 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fcf0:	6809      	ldr	r1, [r1, #0]
 800fcf2:	2900      	cmp	r1, #0
 800fcf4:	d036      	beq.n	800fd64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fcf6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800fcfa:	2900      	cmp	r1, #0
 800fcfc:	d032      	beq.n	800fd64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800fcfe:	891a      	ldrh	r2, [r3, #8]
 800fd00:	8958      	ldrh	r0, [r3, #10]
 800fd02:	4350      	muls	r0, r2
 800fd04:	7c5a      	ldrb	r2, [r3, #17]
 800fd06:	7cdb      	ldrb	r3, [r3, #19]
 800fd08:	0952      	lsrs	r2, r2, #5
 800fd0a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800fd0e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800fd12:	2b0b      	cmp	r3, #11
 800fd14:	bf18      	it	ne
 800fd16:	0040      	lslne	r0, r0, #1
 800fd18:	3003      	adds	r0, #3
 800fd1a:	f020 0003 	bic.w	r0, r0, #3
 800fd1e:	4408      	add	r0, r1
 800fd20:	4770      	bx	lr
 800fd22:	4b14      	ldr	r3, [pc, #80]	; (800fd74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800fd24:	881b      	ldrh	r3, [r3, #0]
 800fd26:	4403      	add	r3, r0
 800fd28:	429a      	cmp	r2, r3
 800fd2a:	da1a      	bge.n	800fd62 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fd2c:	4b12      	ldr	r3, [pc, #72]	; (800fd78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800fd2e:	681b      	ldr	r3, [r3, #0]
 800fd30:	1a10      	subs	r0, r2, r0
 800fd32:	210e      	movs	r1, #14
 800fd34:	fb01 3000 	mla	r0, r1, r0, r3
 800fd38:	7b03      	ldrb	r3, [r0, #12]
 800fd3a:	f003 031f 	and.w	r3, r3, #31
 800fd3e:	2b0b      	cmp	r3, #11
 800fd40:	d10b      	bne.n	800fd5a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fd42:	8903      	ldrh	r3, [r0, #8]
 800fd44:	8940      	ldrh	r0, [r0, #10]
 800fd46:	4358      	muls	r0, r3
 800fd48:	4b09      	ldr	r3, [pc, #36]	; (800fd70 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800fd4a:	6819      	ldr	r1, [r3, #0]
 800fd4c:	3003      	adds	r0, #3
 800fd4e:	f020 0303 	bic.w	r3, r0, #3
 800fd52:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fd56:	4418      	add	r0, r3
 800fd58:	4770      	bx	lr
 800fd5a:	2b0d      	cmp	r3, #13
 800fd5c:	d101      	bne.n	800fd62 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800fd5e:	300d      	adds	r0, #13
 800fd60:	4770      	bx	lr
 800fd62:	2000      	movs	r0, #0
 800fd64:	4770      	bx	lr
 800fd66:	bf00      	nop
 800fd68:	2000a680 	.word	0x2000a680
 800fd6c:	2000a688 	.word	0x2000a688
 800fd70:	2000a664 	.word	0x2000a664
 800fd74:	2000a684 	.word	0x2000a684
 800fd78:	2000a668 	.word	0x2000a668

0800fd7c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fd7c:	b510      	push	{r4, lr}
 800fd7e:	4b17      	ldr	r3, [pc, #92]	; (800fddc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800fd80:	6819      	ldr	r1, [r3, #0]
 800fd82:	8803      	ldrh	r3, [r0, #0]
 800fd84:	b1e9      	cbz	r1, 800fdc2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fd86:	4a16      	ldr	r2, [pc, #88]	; (800fde0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800fd88:	8812      	ldrh	r2, [r2, #0]
 800fd8a:	429a      	cmp	r2, r3
 800fd8c:	d90a      	bls.n	800fda4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800fd8e:	2214      	movs	r2, #20
 800fd90:	fb02 1303 	mla	r3, r2, r3, r1
 800fd94:	7c58      	ldrb	r0, [r3, #17]
 800fd96:	0942      	lsrs	r2, r0, #5
 800fd98:	7cd8      	ldrb	r0, [r3, #19]
 800fd9a:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fd9e:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fda2:	bd10      	pop	{r4, pc}
 800fda4:	490f      	ldr	r1, [pc, #60]	; (800fde4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fda6:	8809      	ldrh	r1, [r1, #0]
 800fda8:	4411      	add	r1, r2
 800fdaa:	428b      	cmp	r3, r1
 800fdac:	da09      	bge.n	800fdc2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800fdae:	1a9b      	subs	r3, r3, r2
 800fdb0:	4a0d      	ldr	r2, [pc, #52]	; (800fde8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fdb2:	6812      	ldr	r2, [r2, #0]
 800fdb4:	210e      	movs	r1, #14
 800fdb6:	fb01 2303 	mla	r3, r1, r3, r2
 800fdba:	7b18      	ldrb	r0, [r3, #12]
 800fdbc:	f000 001f 	and.w	r0, r0, #31
 800fdc0:	e7ef      	b.n	800fda2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fdc2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fdc6:	4293      	cmp	r3, r2
 800fdc8:	d106      	bne.n	800fdd8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fdca:	f7f9 fe37 	bl	8009a3c <_ZN8touchgfx3HAL3lcdEv>
 800fdce:	6803      	ldr	r3, [r0, #0]
 800fdd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fdd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fdd6:	4718      	bx	r3
 800fdd8:	2000      	movs	r0, #0
 800fdda:	e7e2      	b.n	800fda2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fddc:	2000a688 	.word	0x2000a688
 800fde0:	2000a680 	.word	0x2000a680
 800fde4:	2000a684 	.word	0x2000a684
 800fde8:	2000a668 	.word	0x2000a668

0800fdec <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800fdec:	2010      	movs	r0, #16
 800fdee:	4770      	bx	lr

0800fdf0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800fdf0:	2000      	movs	r0, #0
 800fdf2:	4770      	bx	lr

0800fdf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fdf4:	2bff      	cmp	r3, #255	; 0xff
 800fdf6:	d050      	beq.n	800fe9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fdf8:	2a0b      	cmp	r2, #11
 800fdfa:	d04a      	beq.n	800fe92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fdfc:	d80e      	bhi.n	800fe1c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fdfe:	2a03      	cmp	r2, #3
 800fe00:	d03f      	beq.n	800fe82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fe02:	d804      	bhi.n	800fe0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fe04:	2a01      	cmp	r2, #1
 800fe06:	d03e      	beq.n	800fe86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fe08:	d93f      	bls.n	800fe8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fe0a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fe0c:	4770      	bx	lr
 800fe0e:	2a09      	cmp	r2, #9
 800fe10:	d03f      	beq.n	800fe92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fe12:	d83c      	bhi.n	800fe8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fe14:	2a08      	cmp	r2, #8
 800fe16:	d03a      	beq.n	800fe8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fe18:	2000      	movs	r0, #0
 800fe1a:	4770      	bx	lr
 800fe1c:	2a2f      	cmp	r2, #47	; 0x2f
 800fe1e:	d024      	beq.n	800fe6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fe20:	d80d      	bhi.n	800fe3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fe22:	2a2d      	cmp	r2, #45	; 0x2d
 800fe24:	d014      	beq.n	800fe50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fe26:	d826      	bhi.n	800fe76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fe28:	2a2c      	cmp	r2, #44	; 0x2c
 800fe2a:	d1f5      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe2c:	684b      	ldr	r3, [r1, #4]
 800fe2e:	781b      	ldrb	r3, [r3, #0]
 800fe30:	2b01      	cmp	r3, #1
 800fe32:	d018      	beq.n	800fe66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fe34:	d323      	bcc.n	800fe7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800fe36:	2b02      	cmp	r3, #2
 800fe38:	d1ee      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe3a:	6880      	ldr	r0, [r0, #8]
 800fe3c:	4770      	bx	lr
 800fe3e:	2a31      	cmp	r2, #49	; 0x31
 800fe40:	d004      	beq.n	800fe4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fe42:	d328      	bcc.n	800fe96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fe44:	2a32      	cmp	r2, #50	; 0x32
 800fe46:	d026      	beq.n	800fe96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fe48:	2a33      	cmp	r2, #51	; 0x33
 800fe4a:	d1e5      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe4c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fe4e:	4770      	bx	lr
 800fe50:	684b      	ldr	r3, [r1, #4]
 800fe52:	781b      	ldrb	r3, [r3, #0]
 800fe54:	2b01      	cmp	r3, #1
 800fe56:	d004      	beq.n	800fe62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fe58:	d30b      	bcc.n	800fe72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fe5a:	2b02      	cmp	r3, #2
 800fe5c:	d1dc      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe5e:	6900      	ldr	r0, [r0, #16]
 800fe60:	4770      	bx	lr
 800fe62:	6a00      	ldr	r0, [r0, #32]
 800fe64:	4770      	bx	lr
 800fe66:	6980      	ldr	r0, [r0, #24]
 800fe68:	4770      	bx	lr
 800fe6a:	684b      	ldr	r3, [r1, #4]
 800fe6c:	781b      	ldrb	r3, [r3, #0]
 800fe6e:	2b00      	cmp	r3, #0
 800fe70:	d1d2      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe72:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fe74:	4770      	bx	lr
 800fe76:	684b      	ldr	r3, [r1, #4]
 800fe78:	781b      	ldrb	r3, [r3, #0]
 800fe7a:	2b00      	cmp	r3, #0
 800fe7c:	d1cc      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fe7e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fe80:	4770      	bx	lr
 800fe82:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fe84:	4770      	bx	lr
 800fe86:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fe88:	4770      	bx	lr
 800fe8a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fe8c:	4770      	bx	lr
 800fe8e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fe90:	4770      	bx	lr
 800fe92:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fe94:	4770      	bx	lr
 800fe96:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fe98:	4770      	bx	lr
 800fe9a:	2a0b      	cmp	r2, #11
 800fe9c:	d049      	beq.n	800ff32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fe9e:	d80e      	bhi.n	800febe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fea0:	2a03      	cmp	r2, #3
 800fea2:	d040      	beq.n	800ff26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fea4:	d804      	bhi.n	800feb0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fea6:	2a01      	cmp	r2, #1
 800fea8:	d03f      	beq.n	800ff2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800feaa:	d940      	bls.n	800ff2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800feac:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800feae:	4770      	bx	lr
 800feb0:	2a09      	cmp	r2, #9
 800feb2:	d03e      	beq.n	800ff32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800feb4:	d801      	bhi.n	800feba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800feb6:	2a08      	cmp	r2, #8
 800feb8:	d1ae      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800feba:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800febc:	4770      	bx	lr
 800febe:	2a2f      	cmp	r2, #47	; 0x2f
 800fec0:	d024      	beq.n	800ff0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fec2:	d80d      	bhi.n	800fee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fec4:	2a2d      	cmp	r2, #45	; 0x2d
 800fec6:	d014      	beq.n	800fef2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fec8:	d826      	bhi.n	800ff18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800feca:	2a2c      	cmp	r2, #44	; 0x2c
 800fecc:	d1a4      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fece:	684b      	ldr	r3, [r1, #4]
 800fed0:	781b      	ldrb	r3, [r3, #0]
 800fed2:	2b01      	cmp	r3, #1
 800fed4:	d018      	beq.n	800ff08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fed6:	d324      	bcc.n	800ff22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fed8:	2b02      	cmp	r3, #2
 800feda:	d19d      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fedc:	68c0      	ldr	r0, [r0, #12]
 800fede:	4770      	bx	lr
 800fee0:	2a31      	cmp	r2, #49	; 0x31
 800fee2:	d004      	beq.n	800feee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fee4:	d327      	bcc.n	800ff36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fee6:	2a32      	cmp	r2, #50	; 0x32
 800fee8:	d025      	beq.n	800ff36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800feea:	2a33      	cmp	r2, #51	; 0x33
 800feec:	d194      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800feee:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fef0:	4770      	bx	lr
 800fef2:	684b      	ldr	r3, [r1, #4]
 800fef4:	781b      	ldrb	r3, [r3, #0]
 800fef6:	2b01      	cmp	r3, #1
 800fef8:	d004      	beq.n	800ff04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fefa:	d30b      	bcc.n	800ff14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fefc:	2b02      	cmp	r3, #2
 800fefe:	d18b      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ff00:	6940      	ldr	r0, [r0, #20]
 800ff02:	4770      	bx	lr
 800ff04:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800ff06:	4770      	bx	lr
 800ff08:	69c0      	ldr	r0, [r0, #28]
 800ff0a:	4770      	bx	lr
 800ff0c:	684b      	ldr	r3, [r1, #4]
 800ff0e:	781b      	ldrb	r3, [r3, #0]
 800ff10:	2b00      	cmp	r3, #0
 800ff12:	d181      	bne.n	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ff14:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800ff16:	4770      	bx	lr
 800ff18:	684b      	ldr	r3, [r1, #4]
 800ff1a:	781b      	ldrb	r3, [r3, #0]
 800ff1c:	2b00      	cmp	r3, #0
 800ff1e:	f47f af7b 	bne.w	800fe18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ff22:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800ff24:	4770      	bx	lr
 800ff26:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ff28:	4770      	bx	lr
 800ff2a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800ff2c:	4770      	bx	lr
 800ff2e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800ff30:	4770      	bx	lr
 800ff32:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800ff34:	4770      	bx	lr
 800ff36:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800ff38:	4770      	bx	lr

0800ff3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ff3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff3e:	b087      	sub	sp, #28
 800ff40:	9815      	ldr	r0, [sp, #84]	; 0x54
 800ff42:	9205      	str	r2, [sp, #20]
 800ff44:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800ff48:	9202      	str	r2, [sp, #8]
 800ff4a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800ff4e:	9101      	str	r1, [sp, #4]
 800ff50:	6841      	ldr	r1, [r0, #4]
 800ff52:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800ff56:	fb01 2404 	mla	r4, r1, r4, r2
 800ff5a:	6802      	ldr	r2, [r0, #0]
 800ff5c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ff60:	f8de 2000 	ldr.w	r2, [lr]
 800ff64:	9203      	str	r2, [sp, #12]
 800ff66:	f8de 2004 	ldr.w	r2, [lr, #4]
 800ff6a:	3204      	adds	r2, #4
 800ff6c:	9204      	str	r2, [sp, #16]
 800ff6e:	9a02      	ldr	r2, [sp, #8]
 800ff70:	43d6      	mvns	r6, r2
 800ff72:	b2f6      	uxtb	r6, r6
 800ff74:	9a01      	ldr	r2, [sp, #4]
 800ff76:	2a00      	cmp	r2, #0
 800ff78:	dc03      	bgt.n	800ff82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800ff7a:	9a05      	ldr	r2, [sp, #20]
 800ff7c:	2a00      	cmp	r2, #0
 800ff7e:	f340 8129 	ble.w	80101d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800ff82:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ff84:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800ff88:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800ff8c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ff90:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ff92:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ff96:	2b00      	cmp	r3, #0
 800ff98:	dd0e      	ble.n	800ffb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800ff9a:	1408      	asrs	r0, r1, #16
 800ff9c:	d405      	bmi.n	800ffaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ff9e:	4560      	cmp	r0, ip
 800ffa0:	da03      	bge.n	800ffaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ffa2:	1410      	asrs	r0, r2, #16
 800ffa4:	d401      	bmi.n	800ffaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ffa6:	42b8      	cmp	r0, r7
 800ffa8:	db07      	blt.n	800ffba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800ffaa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ffac:	4401      	add	r1, r0
 800ffae:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ffb0:	3b01      	subs	r3, #1
 800ffb2:	4402      	add	r2, r0
 800ffb4:	3402      	adds	r4, #2
 800ffb6:	e7ee      	b.n	800ff96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800ffb8:	d071      	beq.n	801009e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800ffba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ffbc:	1e58      	subs	r0, r3, #1
 800ffbe:	fb05 1500 	mla	r5, r5, r0, r1
 800ffc2:	142d      	asrs	r5, r5, #16
 800ffc4:	d45f      	bmi.n	8010086 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ffc6:	4565      	cmp	r5, ip
 800ffc8:	da5d      	bge.n	8010086 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ffca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ffcc:	fb05 2000 	mla	r0, r5, r0, r2
 800ffd0:	1400      	asrs	r0, r0, #16
 800ffd2:	d458      	bmi.n	8010086 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ffd4:	42b8      	cmp	r0, r7
 800ffd6:	da56      	bge.n	8010086 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ffd8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800ffdc:	4699      	mov	r9, r3
 800ffde:	46a2      	mov	sl, r4
 800ffe0:	f1b9 0f00 	cmp.w	r9, #0
 800ffe4:	dd57      	ble.n	8010096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800ffe6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ffea:	9803      	ldr	r0, [sp, #12]
 800ffec:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800fff0:	140d      	asrs	r5, r1, #16
 800fff2:	fb07 000c 	mla	r0, r7, ip, r0
 800fff6:	f109 39ff 	add.w	r9, r9, #4294967295
 800fffa:	5d40      	ldrb	r0, [r0, r5]
 800fffc:	9d04      	ldr	r5, [sp, #16]
 800fffe:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010002:	f8ba 5000 	ldrh.w	r5, [sl]
 8010006:	122f      	asrs	r7, r5, #8
 8010008:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801000c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010010:	fb17 f706 	smulbb	r7, r7, r6
 8010014:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8010018:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801001c:	00ed      	lsls	r5, r5, #3
 801001e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8010022:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8010026:	10c7      	asrs	r7, r0, #3
 8010028:	b2ed      	uxtb	r5, r5
 801002a:	00c0      	lsls	r0, r0, #3
 801002c:	fb18 f806 	smulbb	r8, r8, r6
 8010030:	fb15 f506 	smulbb	r5, r5, r6
 8010034:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010038:	b2c0      	uxtb	r0, r0
 801003a:	fa1f fc8c 	uxth.w	ip, ip
 801003e:	fb07 870b 	mla	r7, r7, fp, r8
 8010042:	fb00 500b 	mla	r0, r0, fp, r5
 8010046:	b280      	uxth	r0, r0
 8010048:	b2bf      	uxth	r7, r7
 801004a:	f10c 0501 	add.w	r5, ip, #1
 801004e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010052:	f107 0801 	add.w	r8, r7, #1
 8010056:	1c45      	adds	r5, r0, #1
 8010058:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801005c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8010060:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010062:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010066:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801006a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801006e:	ea45 0c0c 	orr.w	ip, r5, ip
 8010072:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8010076:	4401      	add	r1, r0
 8010078:	9814      	ldr	r0, [sp, #80]	; 0x50
 801007a:	ea4c 0c08 	orr.w	ip, ip, r8
 801007e:	f82a cb02 	strh.w	ip, [sl], #2
 8010082:	4402      	add	r2, r0
 8010084:	e7ac      	b.n	800ffe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8010086:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801008a:	f04f 0800 	mov.w	r8, #0
 801008e:	eb03 0008 	add.w	r0, r3, r8
 8010092:	2800      	cmp	r0, #0
 8010094:	dc41      	bgt.n	801011a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8010096:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801009a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801009e:	9b01      	ldr	r3, [sp, #4]
 80100a0:	2b00      	cmp	r3, #0
 80100a2:	f340 8097 	ble.w	80101d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80100a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80100aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80100ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80100b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80100b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80100b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80100bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80100c0:	eef0 6a62 	vmov.f32	s13, s5
 80100c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80100c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80100cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80100d0:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80100d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80100d8:	eef0 6a43 	vmov.f32	s13, s6
 80100dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80100e0:	ee12 2a90 	vmov	r2, s5
 80100e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80100e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80100ec:	ee13 2a10 	vmov	r2, s6
 80100f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80100f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80100f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80100f8:	9314      	str	r3, [sp, #80]	; 0x50
 80100fa:	9b01      	ldr	r3, [sp, #4]
 80100fc:	9a05      	ldr	r2, [sp, #20]
 80100fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010102:	3b01      	subs	r3, #1
 8010104:	9301      	str	r3, [sp, #4]
 8010106:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801010a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801010c:	eeb0 3a67 	vmov.f32	s6, s15
 8010110:	bf08      	it	eq
 8010112:	4613      	moveq	r3, r2
 8010114:	eef0 2a47 	vmov.f32	s5, s14
 8010118:	e72c      	b.n	800ff74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801011a:	140f      	asrs	r7, r1, #16
 801011c:	d453      	bmi.n	80101c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801011e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010122:	42bd      	cmp	r5, r7
 8010124:	dd4f      	ble.n	80101c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010126:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801012a:	d44c      	bmi.n	80101c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801012c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010130:	4560      	cmp	r0, ip
 8010132:	dd48      	ble.n	80101c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010134:	9803      	ldr	r0, [sp, #12]
 8010136:	b22d      	sxth	r5, r5
 8010138:	fb0c 0505 	mla	r5, ip, r5, r0
 801013c:	5de8      	ldrb	r0, [r5, r7]
 801013e:	9d04      	ldr	r5, [sp, #16]
 8010140:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010144:	f06f 0501 	mvn.w	r5, #1
 8010148:	fb05 fb08 	mul.w	fp, r5, r8
 801014c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010150:	f834 500b 	ldrh.w	r5, [r4, fp]
 8010154:	122f      	asrs	r7, r5, #8
 8010156:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801015a:	fb17 f706 	smulbb	r7, r7, r6
 801015e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8010162:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010166:	00ed      	lsls	r5, r5, #3
 8010168:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801016c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010170:	10c7      	asrs	r7, r0, #3
 8010172:	b2ed      	uxtb	r5, r5
 8010174:	00c0      	lsls	r0, r0, #3
 8010176:	fb19 f906 	smulbb	r9, r9, r6
 801017a:	fb15 f506 	smulbb	r5, r5, r6
 801017e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010182:	b2c0      	uxtb	r0, r0
 8010184:	fa1f fc8c 	uxth.w	ip, ip
 8010188:	fb07 970a 	mla	r7, r7, sl, r9
 801018c:	fb00 500a 	mla	r0, r0, sl, r5
 8010190:	b2bf      	uxth	r7, r7
 8010192:	b280      	uxth	r0, r0
 8010194:	f10c 0501 	add.w	r5, ip, #1
 8010198:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801019c:	f107 0901 	add.w	r9, r7, #1
 80101a0:	1c45      	adds	r5, r0, #1
 80101a2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80101a6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80101aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80101ae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80101b2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80101b6:	ea45 0c0c 	orr.w	ip, r5, ip
 80101ba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80101be:	ea4c 0c09 	orr.w	ip, ip, r9
 80101c2:	f824 c00b 	strh.w	ip, [r4, fp]
 80101c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80101c8:	4401      	add	r1, r0
 80101ca:	9814      	ldr	r0, [sp, #80]	; 0x50
 80101cc:	f108 38ff 	add.w	r8, r8, #4294967295
 80101d0:	4402      	add	r2, r0
 80101d2:	e75c      	b.n	801008e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80101d4:	b007      	add	sp, #28
 80101d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080101da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80101da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101de:	b085      	sub	sp, #20
 80101e0:	4693      	mov	fp, r2
 80101e2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80101e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80101e6:	6870      	ldr	r0, [r6, #4]
 80101e8:	9100      	str	r1, [sp, #0]
 80101ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80101ee:	fb00 2404 	mla	r4, r0, r4, r2
 80101f2:	6832      	ldr	r2, [r6, #0]
 80101f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80101f8:	682a      	ldr	r2, [r5, #0]
 80101fa:	9201      	str	r2, [sp, #4]
 80101fc:	686a      	ldr	r2, [r5, #4]
 80101fe:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8010202:	3204      	adds	r2, #4
 8010204:	9202      	str	r2, [sp, #8]
 8010206:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801020a:	9a00      	ldr	r2, [sp, #0]
 801020c:	2a00      	cmp	r2, #0
 801020e:	dc03      	bgt.n	8010218 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8010210:	f1bb 0f00 	cmp.w	fp, #0
 8010214:	f340 80a0 	ble.w	8010358 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010218:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801021a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801021e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8010222:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010226:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010228:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801022c:	2b00      	cmp	r3, #0
 801022e:	dd0c      	ble.n	801024a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010230:	1406      	asrs	r6, r0, #16
 8010232:	d405      	bmi.n	8010240 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010234:	454e      	cmp	r6, r9
 8010236:	da03      	bge.n	8010240 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010238:	1416      	asrs	r6, r2, #16
 801023a:	d401      	bmi.n	8010240 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801023c:	4546      	cmp	r6, r8
 801023e:	db05      	blt.n	801024c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010240:	4470      	add	r0, lr
 8010242:	4462      	add	r2, ip
 8010244:	3b01      	subs	r3, #1
 8010246:	3402      	adds	r4, #2
 8010248:	e7f0      	b.n	801022c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801024a:	d00f      	beq.n	801026c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801024c:	1e5e      	subs	r6, r3, #1
 801024e:	fb0e 0706 	mla	r7, lr, r6, r0
 8010252:	143f      	asrs	r7, r7, #16
 8010254:	d541      	bpl.n	80102da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8010256:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801025a:	4698      	mov	r8, r3
 801025c:	9603      	str	r6, [sp, #12]
 801025e:	f1b8 0f00 	cmp.w	r8, #0
 8010262:	dc59      	bgt.n	8010318 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8010264:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010268:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801026c:	9b00      	ldr	r3, [sp, #0]
 801026e:	2b00      	cmp	r3, #0
 8010270:	dd72      	ble.n	8010358 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010272:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010276:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801027a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801027e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010280:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010284:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010288:	eeb0 6a62 	vmov.f32	s12, s5
 801028c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010290:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010294:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010298:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801029c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80102a0:	eeb0 6a43 	vmov.f32	s12, s6
 80102a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80102a8:	ee12 2a90 	vmov	r2, s5
 80102ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80102b0:	fb92 fef3 	sdiv	lr, r2, r3
 80102b4:	ee13 2a10 	vmov	r2, s6
 80102b8:	fb92 fcf3 	sdiv	ip, r2, r3
 80102bc:	9b00      	ldr	r3, [sp, #0]
 80102be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80102c2:	3b01      	subs	r3, #1
 80102c4:	9300      	str	r3, [sp, #0]
 80102c6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80102ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80102cc:	eeb0 3a67 	vmov.f32	s6, s15
 80102d0:	bf08      	it	eq
 80102d2:	465b      	moveq	r3, fp
 80102d4:	eef0 2a47 	vmov.f32	s5, s14
 80102d8:	e797      	b.n	801020a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80102da:	454f      	cmp	r7, r9
 80102dc:	dabb      	bge.n	8010256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80102de:	fb0c 2606 	mla	r6, ip, r6, r2
 80102e2:	1436      	asrs	r6, r6, #16
 80102e4:	d4b7      	bmi.n	8010256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80102e6:	4546      	cmp	r6, r8
 80102e8:	dab5      	bge.n	8010256 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80102ea:	461e      	mov	r6, r3
 80102ec:	46a0      	mov	r8, r4
 80102ee:	2e00      	cmp	r6, #0
 80102f0:	ddb8      	ble.n	8010264 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80102f2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80102f6:	9901      	ldr	r1, [sp, #4]
 80102f8:	1417      	asrs	r7, r2, #16
 80102fa:	ea4f 4920 	mov.w	r9, r0, asr #16
 80102fe:	fb0a 1707 	mla	r7, sl, r7, r1
 8010302:	9902      	ldr	r1, [sp, #8]
 8010304:	f817 7009 	ldrb.w	r7, [r7, r9]
 8010308:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801030c:	f828 7b02 	strh.w	r7, [r8], #2
 8010310:	4470      	add	r0, lr
 8010312:	4462      	add	r2, ip
 8010314:	3e01      	subs	r6, #1
 8010316:	e7ea      	b.n	80102ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8010318:	ea5f 4920 	movs.w	r9, r0, asr #16
 801031c:	d417      	bmi.n	801034e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801031e:	68ae      	ldr	r6, [r5, #8]
 8010320:	454e      	cmp	r6, r9
 8010322:	dd14      	ble.n	801034e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010324:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8010328:	d411      	bmi.n	801034e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801032a:	68ef      	ldr	r7, [r5, #12]
 801032c:	4557      	cmp	r7, sl
 801032e:	dd0e      	ble.n	801034e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010330:	9f01      	ldr	r7, [sp, #4]
 8010332:	b236      	sxth	r6, r6
 8010334:	fb0a 7606 	mla	r6, sl, r6, r7
 8010338:	9f02      	ldr	r7, [sp, #8]
 801033a:	f816 6009 	ldrb.w	r6, [r6, r9]
 801033e:	f06f 0101 	mvn.w	r1, #1
 8010342:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8010346:	fb01 f608 	mul.w	r6, r1, r8
 801034a:	9903      	ldr	r1, [sp, #12]
 801034c:	538f      	strh	r7, [r1, r6]
 801034e:	4470      	add	r0, lr
 8010350:	4462      	add	r2, ip
 8010352:	f108 38ff 	add.w	r8, r8, #4294967295
 8010356:	e782      	b.n	801025e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010358:	b005      	add	sp, #20
 801035a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801035e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801035e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010362:	b087      	sub	sp, #28
 8010364:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010366:	9205      	str	r2, [sp, #20]
 8010368:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801036c:	9203      	str	r2, [sp, #12]
 801036e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010372:	9102      	str	r1, [sp, #8]
 8010374:	6861      	ldr	r1, [r4, #4]
 8010376:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801037a:	fb01 2000 	mla	r0, r1, r0, r2
 801037e:	6822      	ldr	r2, [r4, #0]
 8010380:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8010384:	9200      	str	r2, [sp, #0]
 8010386:	f8dc 2000 	ldr.w	r2, [ip]
 801038a:	9204      	str	r2, [sp, #16]
 801038c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010390:	3204      	adds	r2, #4
 8010392:	9201      	str	r2, [sp, #4]
 8010394:	9a03      	ldr	r2, [sp, #12]
 8010396:	43d5      	mvns	r5, r2
 8010398:	b2ed      	uxtb	r5, r5
 801039a:	9a02      	ldr	r2, [sp, #8]
 801039c:	2a00      	cmp	r2, #0
 801039e:	dc03      	bgt.n	80103a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80103a0:	9a05      	ldr	r2, [sp, #20]
 80103a2:	2a00      	cmp	r2, #0
 80103a4:	f340 812c 	ble.w	8010600 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80103a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80103aa:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80103ae:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80103b2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80103b6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80103b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80103bc:	2b00      	cmp	r3, #0
 80103be:	dd10      	ble.n	80103e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80103c0:	140c      	asrs	r4, r1, #16
 80103c2:	d405      	bmi.n	80103d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80103c4:	4574      	cmp	r4, lr
 80103c6:	da03      	bge.n	80103d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80103c8:	1414      	asrs	r4, r2, #16
 80103ca:	d401      	bmi.n	80103d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80103cc:	42bc      	cmp	r4, r7
 80103ce:	db09      	blt.n	80103e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80103d0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80103d2:	9800      	ldr	r0, [sp, #0]
 80103d4:	4421      	add	r1, r4
 80103d6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80103d8:	3002      	adds	r0, #2
 80103da:	4422      	add	r2, r4
 80103dc:	3b01      	subs	r3, #1
 80103de:	9000      	str	r0, [sp, #0]
 80103e0:	e7ec      	b.n	80103bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80103e2:	d071      	beq.n	80104c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80103e4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80103e6:	1e5c      	subs	r4, r3, #1
 80103e8:	fb06 1604 	mla	r6, r6, r4, r1
 80103ec:	1436      	asrs	r6, r6, #16
 80103ee:	d45d      	bmi.n	80104ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80103f0:	4576      	cmp	r6, lr
 80103f2:	da5b      	bge.n	80104ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80103f4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80103f6:	fb06 2404 	mla	r4, r6, r4, r2
 80103fa:	1424      	asrs	r4, r4, #16
 80103fc:	d456      	bmi.n	80104ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80103fe:	42bc      	cmp	r4, r7
 8010400:	da54      	bge.n	80104ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010402:	f8dd 9000 	ldr.w	r9, [sp]
 8010406:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801040a:	4698      	mov	r8, r3
 801040c:	f1b8 0f00 	cmp.w	r8, #0
 8010410:	dd54      	ble.n	80104bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8010412:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010416:	9804      	ldr	r0, [sp, #16]
 8010418:	1414      	asrs	r4, r2, #16
 801041a:	fb07 0404 	mla	r4, r7, r4, r0
 801041e:	140e      	asrs	r6, r1, #16
 8010420:	9801      	ldr	r0, [sp, #4]
 8010422:	f814 e006 	ldrb.w	lr, [r4, r6]
 8010426:	f8b9 4000 	ldrh.w	r4, [r9]
 801042a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801042e:	eb00 0b0e 	add.w	fp, r0, lr
 8010432:	1227      	asrs	r7, r4, #8
 8010434:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010438:	f89b b001 	ldrb.w	fp, [fp, #1]
 801043c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8010440:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010442:	fb16 f60a 	smulbb	r6, r6, sl
 8010446:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801044a:	fb07 6705 	mla	r7, r7, r5, r6
 801044e:	10e6      	asrs	r6, r4, #3
 8010450:	00e4      	lsls	r4, r4, #3
 8010452:	b2e4      	uxtb	r4, r4
 8010454:	fb1b fb0a 	smulbb	fp, fp, sl
 8010458:	fb14 f405 	smulbb	r4, r4, r5
 801045c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010460:	b2bf      	uxth	r7, r7
 8010462:	fb06 b605 	mla	r6, r6, r5, fp
 8010466:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801046a:	b2b6      	uxth	r6, r6
 801046c:	fa1f fe8e 	uxth.w	lr, lr
 8010470:	1c7c      	adds	r4, r7, #1
 8010472:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8010476:	f106 0b01 	add.w	fp, r6, #1
 801047a:	f10e 0401 	add.w	r4, lr, #1
 801047e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8010482:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8010486:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801048a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801048e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010492:	4327      	orrs	r7, r4
 8010494:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010498:	4401      	add	r1, r0
 801049a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801049c:	ea47 070b 	orr.w	r7, r7, fp
 80104a0:	f829 7b02 	strh.w	r7, [r9], #2
 80104a4:	4402      	add	r2, r0
 80104a6:	f108 38ff 	add.w	r8, r8, #4294967295
 80104aa:	e7af      	b.n	801040c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80104ac:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80104b0:	f04f 0e00 	mov.w	lr, #0
 80104b4:	eb03 040e 	add.w	r4, r3, lr
 80104b8:	2c00      	cmp	r4, #0
 80104ba:	dc43      	bgt.n	8010544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80104bc:	9a00      	ldr	r2, [sp, #0]
 80104be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80104c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80104c6:	9300      	str	r3, [sp, #0]
 80104c8:	9b02      	ldr	r3, [sp, #8]
 80104ca:	2b00      	cmp	r3, #0
 80104cc:	f340 8098 	ble.w	8010600 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80104d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80104d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80104d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80104dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80104de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80104e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80104e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80104ea:	eef0 6a62 	vmov.f32	s13, s5
 80104ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80104f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80104f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80104fa:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80104fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010502:	eef0 6a43 	vmov.f32	s13, s6
 8010506:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801050a:	ee12 2a90 	vmov	r2, s5
 801050e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010512:	fb92 f3f3 	sdiv	r3, r2, r3
 8010516:	ee13 2a10 	vmov	r2, s6
 801051a:	9313      	str	r3, [sp, #76]	; 0x4c
 801051c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801051e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010522:	9314      	str	r3, [sp, #80]	; 0x50
 8010524:	9b02      	ldr	r3, [sp, #8]
 8010526:	9a05      	ldr	r2, [sp, #20]
 8010528:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801052c:	3b01      	subs	r3, #1
 801052e:	9302      	str	r3, [sp, #8]
 8010530:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010534:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010536:	eeb0 3a67 	vmov.f32	s6, s15
 801053a:	bf08      	it	eq
 801053c:	4613      	moveq	r3, r2
 801053e:	eef0 2a47 	vmov.f32	s5, s14
 8010542:	e72a      	b.n	801039a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010544:	140f      	asrs	r7, r1, #16
 8010546:	d454      	bmi.n	80105f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010548:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801054c:	42be      	cmp	r6, r7
 801054e:	dd50      	ble.n	80105f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010550:	ea5f 4822 	movs.w	r8, r2, asr #16
 8010554:	d44d      	bmi.n	80105f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010556:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801055a:	4544      	cmp	r4, r8
 801055c:	dd49      	ble.n	80105f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801055e:	9c04      	ldr	r4, [sp, #16]
 8010560:	b236      	sxth	r6, r6
 8010562:	fb08 4606 	mla	r6, r8, r6, r4
 8010566:	f06f 0001 	mvn.w	r0, #1
 801056a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801056e:	9c01      	ldr	r4, [sp, #4]
 8010570:	fb00 fa0e 	mul.w	sl, r0, lr
 8010574:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010578:	9800      	ldr	r0, [sp, #0]
 801057a:	eb04 0b08 	add.w	fp, r4, r8
 801057e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8010582:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8010586:	9801      	ldr	r0, [sp, #4]
 8010588:	f89b b001 	ldrb.w	fp, [fp, #1]
 801058c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010590:	9800      	ldr	r0, [sp, #0]
 8010592:	1227      	asrs	r7, r4, #8
 8010594:	fb16 f609 	smulbb	r6, r6, r9
 8010598:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801059c:	fb07 6705 	mla	r7, r7, r5, r6
 80105a0:	10e6      	asrs	r6, r4, #3
 80105a2:	00e4      	lsls	r4, r4, #3
 80105a4:	b2e4      	uxtb	r4, r4
 80105a6:	fb1b fb09 	smulbb	fp, fp, r9
 80105aa:	fb14 f405 	smulbb	r4, r4, r5
 80105ae:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80105b2:	b2bf      	uxth	r7, r7
 80105b4:	fb06 b605 	mla	r6, r6, r5, fp
 80105b8:	fb08 4809 	mla	r8, r8, r9, r4
 80105bc:	b2b6      	uxth	r6, r6
 80105be:	fa1f f888 	uxth.w	r8, r8
 80105c2:	1c7c      	adds	r4, r7, #1
 80105c4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80105c8:	f106 0b01 	add.w	fp, r6, #1
 80105cc:	f108 0401 	add.w	r4, r8, #1
 80105d0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80105d4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80105d8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80105dc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80105e0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80105e4:	4327      	orrs	r7, r4
 80105e6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80105ea:	ea47 070b 	orr.w	r7, r7, fp
 80105ee:	f820 700a 	strh.w	r7, [r0, sl]
 80105f2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80105f4:	4401      	add	r1, r0
 80105f6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80105f8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80105fc:	4402      	add	r2, r0
 80105fe:	e759      	b.n	80104b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8010600:	b007      	add	sp, #28
 8010602:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010608 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801060c:	b085      	sub	sp, #20
 801060e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010612:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010614:	9203      	str	r2, [sp, #12]
 8010616:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801061a:	6870      	ldr	r0, [r6, #4]
 801061c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801061e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8010622:	686f      	ldr	r7, [r5, #4]
 8010624:	9101      	str	r1, [sp, #4]
 8010626:	fb00 2404 	mla	r4, r0, r4, r2
 801062a:	6832      	ldr	r2, [r6, #0]
 801062c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010630:	682a      	ldr	r2, [r5, #0]
 8010632:	9202      	str	r2, [sp, #8]
 8010634:	3704      	adds	r7, #4
 8010636:	9a01      	ldr	r2, [sp, #4]
 8010638:	2a00      	cmp	r2, #0
 801063a:	dc03      	bgt.n	8010644 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801063c:	9a03      	ldr	r2, [sp, #12]
 801063e:	2a00      	cmp	r2, #0
 8010640:	f340 80cc 	ble.w	80107dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010644:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010646:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801064a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801064e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010652:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010654:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010658:	2b00      	cmp	r3, #0
 801065a:	dd0d      	ble.n	8010678 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801065c:	1406      	asrs	r6, r0, #16
 801065e:	d405      	bmi.n	801066c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010660:	454e      	cmp	r6, r9
 8010662:	da03      	bge.n	801066c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010664:	1416      	asrs	r6, r2, #16
 8010666:	d401      	bmi.n	801066c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010668:	4546      	cmp	r6, r8
 801066a:	db06      	blt.n	801067a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801066c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801066e:	4460      	add	r0, ip
 8010670:	4432      	add	r2, r6
 8010672:	3b01      	subs	r3, #1
 8010674:	3402      	adds	r4, #2
 8010676:	e7ef      	b.n	8010658 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8010678:	d00f      	beq.n	801069a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801067a:	1e5e      	subs	r6, r3, #1
 801067c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8010680:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010684:	d543      	bpl.n	801070e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8010686:	4698      	mov	r8, r3
 8010688:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801068c:	f1b8 0f00 	cmp.w	r8, #0
 8010690:	dc71      	bgt.n	8010776 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010692:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010696:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801069a:	9b01      	ldr	r3, [sp, #4]
 801069c:	2b00      	cmp	r3, #0
 801069e:	f340 809d 	ble.w	80107dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80106a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80106a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80106aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80106ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80106b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80106b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80106b8:	eeb0 6a62 	vmov.f32	s12, s5
 80106bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80106c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80106c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80106c8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80106cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80106d0:	eeb0 6a43 	vmov.f32	s12, s6
 80106d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80106d8:	ee12 2a90 	vmov	r2, s5
 80106dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80106e0:	fb92 fcf3 	sdiv	ip, r2, r3
 80106e4:	ee13 2a10 	vmov	r2, s6
 80106e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80106ec:	9312      	str	r3, [sp, #72]	; 0x48
 80106ee:	9b01      	ldr	r3, [sp, #4]
 80106f0:	9a03      	ldr	r2, [sp, #12]
 80106f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80106f6:	3b01      	subs	r3, #1
 80106f8:	9301      	str	r3, [sp, #4]
 80106fa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80106fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010700:	eeb0 3a67 	vmov.f32	s6, s15
 8010704:	bf08      	it	eq
 8010706:	4613      	moveq	r3, r2
 8010708:	eef0 2a47 	vmov.f32	s5, s14
 801070c:	e793      	b.n	8010636 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801070e:	45ce      	cmp	lr, r9
 8010710:	dab9      	bge.n	8010686 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010712:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010714:	fb01 2606 	mla	r6, r1, r6, r2
 8010718:	1436      	asrs	r6, r6, #16
 801071a:	d4b4      	bmi.n	8010686 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801071c:	4546      	cmp	r6, r8
 801071e:	dab2      	bge.n	8010686 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010720:	4698      	mov	r8, r3
 8010722:	46a2      	mov	sl, r4
 8010724:	f1b8 0f00 	cmp.w	r8, #0
 8010728:	ddb3      	ble.n	8010692 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801072a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801072e:	9902      	ldr	r1, [sp, #8]
 8010730:	1416      	asrs	r6, r2, #16
 8010732:	fb09 1606 	mla	r6, r9, r6, r1
 8010736:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801073a:	492a      	ldr	r1, [pc, #168]	; (80107e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801073c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8010740:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010744:	eb07 0b0e 	add.w	fp, r7, lr
 8010748:	4460      	add	r0, ip
 801074a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801074e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010752:	00f6      	lsls	r6, r6, #3
 8010754:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8010758:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801075c:	ea49 0606 	orr.w	r6, r9, r6
 8010760:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010764:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010766:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801076a:	f82a 6b02 	strh.w	r6, [sl], #2
 801076e:	440a      	add	r2, r1
 8010770:	f108 38ff 	add.w	r8, r8, #4294967295
 8010774:	e7d6      	b.n	8010724 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010776:	ea5f 4920 	movs.w	r9, r0, asr #16
 801077a:	d429      	bmi.n	80107d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801077c:	68ae      	ldr	r6, [r5, #8]
 801077e:	454e      	cmp	r6, r9
 8010780:	dd26      	ble.n	80107d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010782:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8010786:	d423      	bmi.n	80107d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010788:	68e9      	ldr	r1, [r5, #12]
 801078a:	4559      	cmp	r1, fp
 801078c:	dd20      	ble.n	80107d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801078e:	9902      	ldr	r1, [sp, #8]
 8010790:	fa0f fe86 	sxth.w	lr, r6
 8010794:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8010798:	f06f 0101 	mvn.w	r1, #1
 801079c:	f81e e009 	ldrb.w	lr, [lr, r9]
 80107a0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80107a4:	eb07 060e 	add.w	r6, r7, lr
 80107a8:	fb01 f908 	mul.w	r9, r1, r8
 80107ac:	f896 b002 	ldrb.w	fp, [r6, #2]
 80107b0:	7876      	ldrb	r6, [r6, #1]
 80107b2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80107b6:	00f6      	lsls	r6, r6, #3
 80107b8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80107bc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80107c0:	ea4b 0606 	orr.w	r6, fp, r6
 80107c4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80107c8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80107cc:	f82a 6009 	strh.w	r6, [sl, r9]
 80107d0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80107d2:	4460      	add	r0, ip
 80107d4:	440a      	add	r2, r1
 80107d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80107da:	e757      	b.n	801068c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80107dc:	b005      	add	sp, #20
 80107de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107e2:	bf00      	nop
 80107e4:	fffff800 	.word	0xfffff800

080107e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80107e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107ec:	b087      	sub	sp, #28
 80107ee:	468b      	mov	fp, r1
 80107f0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80107f2:	9204      	str	r2, [sp, #16]
 80107f4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80107f8:	9205      	str	r2, [sp, #20]
 80107fa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80107fe:	6841      	ldr	r1, [r0, #4]
 8010800:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010804:	fb01 2404 	mla	r4, r1, r4, r2
 8010808:	6802      	ldr	r2, [r0, #0]
 801080a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801080e:	f8dc 2000 	ldr.w	r2, [ip]
 8010812:	9201      	str	r2, [sp, #4]
 8010814:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010818:	3204      	adds	r2, #4
 801081a:	9202      	str	r2, [sp, #8]
 801081c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010820:	f1bb 0f00 	cmp.w	fp, #0
 8010824:	dc03      	bgt.n	801082e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8010826:	9a04      	ldr	r2, [sp, #16]
 8010828:	2a00      	cmp	r2, #0
 801082a:	f340 8138 	ble.w	8010a9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801082e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010830:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010834:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8010838:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801083c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801083e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010842:	2b00      	cmp	r3, #0
 8010844:	dd0e      	ble.n	8010864 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010846:	1402      	asrs	r2, r0, #16
 8010848:	d405      	bmi.n	8010856 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801084a:	42ba      	cmp	r2, r7
 801084c:	da03      	bge.n	8010856 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801084e:	140a      	asrs	r2, r1, #16
 8010850:	d401      	bmi.n	8010856 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010852:	42b2      	cmp	r2, r6
 8010854:	db07      	blt.n	8010866 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010856:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010858:	4410      	add	r0, r2
 801085a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801085c:	3b01      	subs	r3, #1
 801085e:	4411      	add	r1, r2
 8010860:	3402      	adds	r4, #2
 8010862:	e7ee      	b.n	8010842 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010864:	d019      	beq.n	801089a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8010866:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010868:	1e5a      	subs	r2, r3, #1
 801086a:	fb05 0502 	mla	r5, r5, r2, r0
 801086e:	142d      	asrs	r5, r5, #16
 8010870:	d409      	bmi.n	8010886 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010872:	42bd      	cmp	r5, r7
 8010874:	da07      	bge.n	8010886 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010876:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010878:	fb05 1202 	mla	r2, r5, r2, r1
 801087c:	1412      	asrs	r2, r2, #16
 801087e:	d402      	bmi.n	8010886 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010880:	42b2      	cmp	r2, r6
 8010882:	f2c0 80ac 	blt.w	80109de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8010886:	f04f 0e00 	mov.w	lr, #0
 801088a:	eb03 020e 	add.w	r2, r3, lr
 801088e:	2a00      	cmp	r2, #0
 8010890:	dc3e      	bgt.n	8010910 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010892:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010896:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801089a:	f1bb 0f00 	cmp.w	fp, #0
 801089e:	f340 80fe 	ble.w	8010a9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80108a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80108a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80108aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80108ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108b0:	f1bb 0b01 	subs.w	fp, fp, #1
 80108b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80108b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80108bc:	eeb0 6a62 	vmov.f32	s12, s5
 80108c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80108c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80108c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80108cc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80108d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80108d4:	eeb0 6a43 	vmov.f32	s12, s6
 80108d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80108dc:	ee12 2a90 	vmov	r2, s5
 80108e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80108e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80108e8:	ee13 2a10 	vmov	r2, s6
 80108ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80108f0:	9313      	str	r3, [sp, #76]	; 0x4c
 80108f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80108f8:	9a04      	ldr	r2, [sp, #16]
 80108fa:	9314      	str	r3, [sp, #80]	; 0x50
 80108fc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010900:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010902:	eeb0 3a67 	vmov.f32	s6, s15
 8010906:	bf08      	it	eq
 8010908:	4613      	moveq	r3, r2
 801090a:	eef0 2a47 	vmov.f32	s5, s14
 801090e:	e787      	b.n	8010820 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8010910:	1406      	asrs	r6, r0, #16
 8010912:	d45d      	bmi.n	80109d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010914:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8010918:	42b5      	cmp	r5, r6
 801091a:	dd59      	ble.n	80109d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801091c:	140f      	asrs	r7, r1, #16
 801091e:	d457      	bmi.n	80109d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010920:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010924:	42ba      	cmp	r2, r7
 8010926:	dd53      	ble.n	80109d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010928:	9a01      	ldr	r2, [sp, #4]
 801092a:	b22d      	sxth	r5, r5
 801092c:	fb07 2505 	mla	r5, r7, r5, r2
 8010930:	5daa      	ldrb	r2, [r5, r6]
 8010932:	9d02      	ldr	r5, [sp, #8]
 8010934:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010938:	0e2e      	lsrs	r6, r5, #24
 801093a:	d049      	beq.n	80109d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801093c:	f06f 0201 	mvn.w	r2, #1
 8010940:	fb02 f20e 	mul.w	r2, r2, lr
 8010944:	9203      	str	r2, [sp, #12]
 8010946:	f834 8002 	ldrh.w	r8, [r4, r2]
 801094a:	9a05      	ldr	r2, [sp, #20]
 801094c:	4356      	muls	r6, r2
 801094e:	1c72      	adds	r2, r6, #1
 8010950:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010954:	1212      	asrs	r2, r2, #8
 8010956:	fa1f f982 	uxth.w	r9, r2
 801095a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801095e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010962:	43d2      	mvns	r2, r2
 8010964:	b2d2      	uxtb	r2, r2
 8010966:	fb16 f609 	smulbb	r6, r6, r9
 801096a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801096e:	fb07 6702 	mla	r7, r7, r2, r6
 8010972:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010976:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801097a:	b2ed      	uxtb	r5, r5
 801097c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010980:	fa5f f888 	uxtb.w	r8, r8
 8010984:	fb15 f509 	smulbb	r5, r5, r9
 8010988:	fb08 5502 	mla	r5, r8, r2, r5
 801098c:	b2bf      	uxth	r7, r7
 801098e:	fb1a fa09 	smulbb	sl, sl, r9
 8010992:	b2ad      	uxth	r5, r5
 8010994:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010998:	fb06 a602 	mla	r6, r6, r2, sl
 801099c:	1c7a      	adds	r2, r7, #1
 801099e:	f105 0a01 	add.w	sl, r5, #1
 80109a2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80109a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80109aa:	b2b6      	uxth	r6, r6
 80109ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80109b0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80109b4:	ea4a 0707 	orr.w	r7, sl, r7
 80109b8:	f106 0a01 	add.w	sl, r6, #1
 80109bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80109c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80109c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80109c8:	9a03      	ldr	r2, [sp, #12]
 80109ca:	ea47 070a 	orr.w	r7, r7, sl
 80109ce:	52a7      	strh	r7, [r4, r2]
 80109d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80109d2:	4410      	add	r0, r2
 80109d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80109d6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80109da:	4411      	add	r1, r2
 80109dc:	e755      	b.n	801088a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80109de:	f04f 0800 	mov.w	r8, #0
 80109e2:	eba3 0208 	sub.w	r2, r3, r8
 80109e6:	2a00      	cmp	r2, #0
 80109e8:	f77f af53 	ble.w	8010892 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80109ec:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80109f0:	9f01      	ldr	r7, [sp, #4]
 80109f2:	140a      	asrs	r2, r1, #16
 80109f4:	1405      	asrs	r5, r0, #16
 80109f6:	fb06 7202 	mla	r2, r6, r2, r7
 80109fa:	5d52      	ldrb	r2, [r2, r5]
 80109fc:	9d02      	ldr	r5, [sp, #8]
 80109fe:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010a02:	0e2e      	lsrs	r6, r5, #24
 8010a04:	d044      	beq.n	8010a90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8010a06:	9a05      	ldr	r2, [sp, #20]
 8010a08:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8010a0c:	4356      	muls	r6, r2
 8010a0e:	1c72      	adds	r2, r6, #1
 8010a10:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010a14:	1212      	asrs	r2, r2, #8
 8010a16:	fa1f f982 	uxth.w	r9, r2
 8010a1a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010a1e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010a22:	43d2      	mvns	r2, r2
 8010a24:	b2d2      	uxtb	r2, r2
 8010a26:	fb16 f609 	smulbb	r6, r6, r9
 8010a2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010a2e:	fb07 6702 	mla	r7, r7, r2, r6
 8010a32:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010a36:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010a3a:	b2ed      	uxtb	r5, r5
 8010a3c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010a40:	fa5f fe8e 	uxtb.w	lr, lr
 8010a44:	fb15 f509 	smulbb	r5, r5, r9
 8010a48:	fb0e 5502 	mla	r5, lr, r2, r5
 8010a4c:	b2bf      	uxth	r7, r7
 8010a4e:	fb1a fa09 	smulbb	sl, sl, r9
 8010a52:	b2ad      	uxth	r5, r5
 8010a54:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010a58:	fb06 a602 	mla	r6, r6, r2, sl
 8010a5c:	1c7a      	adds	r2, r7, #1
 8010a5e:	f105 0a01 	add.w	sl, r5, #1
 8010a62:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010a66:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010a6a:	b2b6      	uxth	r6, r6
 8010a6c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010a70:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010a74:	ea4a 0707 	orr.w	r7, sl, r7
 8010a78:	f106 0a01 	add.w	sl, r6, #1
 8010a7c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010a80:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010a84:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010a88:	ea47 070a 	orr.w	r7, r7, sl
 8010a8c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010a90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010a92:	4410      	add	r0, r2
 8010a94:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010a96:	f108 0801 	add.w	r8, r8, #1
 8010a9a:	4411      	add	r1, r2
 8010a9c:	e7a1      	b.n	80109e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010a9e:	b007      	add	sp, #28
 8010aa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010aa4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010aa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010aa8:	b085      	sub	sp, #20
 8010aaa:	468b      	mov	fp, r1
 8010aac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010aae:	9203      	str	r2, [sp, #12]
 8010ab0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010ab4:	6841      	ldr	r1, [r0, #4]
 8010ab6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8010aba:	fb01 2404 	mla	r4, r1, r4, r2
 8010abe:	6802      	ldr	r2, [r0, #0]
 8010ac0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010ac4:	f8de 2000 	ldr.w	r2, [lr]
 8010ac8:	9200      	str	r2, [sp, #0]
 8010aca:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010ace:	3204      	adds	r2, #4
 8010ad0:	9201      	str	r2, [sp, #4]
 8010ad2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010ad6:	f1bb 0f00 	cmp.w	fp, #0
 8010ada:	dc03      	bgt.n	8010ae4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010adc:	9a03      	ldr	r2, [sp, #12]
 8010ade:	2a00      	cmp	r2, #0
 8010ae0:	f340 8153 	ble.w	8010d8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010ae4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010ae6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010aea:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010aee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010af2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010af4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010af8:	2b00      	cmp	r3, #0
 8010afa:	dd0e      	ble.n	8010b1a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010afc:	1408      	asrs	r0, r1, #16
 8010afe:	d405      	bmi.n	8010b0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010b00:	42b8      	cmp	r0, r7
 8010b02:	da03      	bge.n	8010b0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010b04:	1410      	asrs	r0, r2, #16
 8010b06:	d401      	bmi.n	8010b0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010b08:	42b0      	cmp	r0, r6
 8010b0a:	db07      	blt.n	8010b1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8010b0c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010b0e:	4401      	add	r1, r0
 8010b10:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010b12:	3b01      	subs	r3, #1
 8010b14:	4402      	add	r2, r0
 8010b16:	3402      	adds	r4, #2
 8010b18:	e7ee      	b.n	8010af8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8010b1a:	d017      	beq.n	8010b4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010b1c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010b1e:	1e58      	subs	r0, r3, #1
 8010b20:	fb05 1500 	mla	r5, r5, r0, r1
 8010b24:	142d      	asrs	r5, r5, #16
 8010b26:	d409      	bmi.n	8010b3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010b28:	42bd      	cmp	r5, r7
 8010b2a:	da07      	bge.n	8010b3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010b2c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010b2e:	fb05 2000 	mla	r0, r5, r0, r2
 8010b32:	1400      	asrs	r0, r0, #16
 8010b34:	d402      	bmi.n	8010b3c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010b36:	42b0      	cmp	r0, r6
 8010b38:	f2c0 80bc 	blt.w	8010cb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010b3c:	2600      	movs	r6, #0
 8010b3e:	1998      	adds	r0, r3, r6
 8010b40:	2800      	cmp	r0, #0
 8010b42:	dc3e      	bgt.n	8010bc2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8010b44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010b48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010b4c:	f1bb 0f00 	cmp.w	fp, #0
 8010b50:	f340 811b 	ble.w	8010d8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010b54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010b58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010b5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010b60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b62:	f1bb 0b01 	subs.w	fp, fp, #1
 8010b66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010b6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010b6e:	eeb0 6a62 	vmov.f32	s12, s5
 8010b72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010b76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010b7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010b7e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010b82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010b86:	eeb0 6a43 	vmov.f32	s12, s6
 8010b8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010b8e:	ee12 2a90 	vmov	r2, s5
 8010b92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010b96:	fb92 f3f3 	sdiv	r3, r2, r3
 8010b9a:	ee13 2a10 	vmov	r2, s6
 8010b9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010ba2:	9311      	str	r3, [sp, #68]	; 0x44
 8010ba4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ba6:	fb92 f3f3 	sdiv	r3, r2, r3
 8010baa:	9a03      	ldr	r2, [sp, #12]
 8010bac:	9312      	str	r3, [sp, #72]	; 0x48
 8010bae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010bb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010bb4:	eeb0 3a67 	vmov.f32	s6, s15
 8010bb8:	bf08      	it	eq
 8010bba:	4613      	moveq	r3, r2
 8010bbc:	eef0 2a47 	vmov.f32	s5, s14
 8010bc0:	e789      	b.n	8010ad6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010bc2:	140f      	asrs	r7, r1, #16
 8010bc4:	d426      	bmi.n	8010c14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010bc6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010bca:	42bd      	cmp	r5, r7
 8010bcc:	dd22      	ble.n	8010c14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010bce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010bd2:	d41f      	bmi.n	8010c14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010bd4:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010bd8:	4560      	cmp	r0, ip
 8010bda:	dd1b      	ble.n	8010c14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010bdc:	9800      	ldr	r0, [sp, #0]
 8010bde:	b22d      	sxth	r5, r5
 8010be0:	fb0c 0505 	mla	r5, ip, r5, r0
 8010be4:	5de8      	ldrb	r0, [r5, r7]
 8010be6:	9d01      	ldr	r5, [sp, #4]
 8010be8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010bec:	0e07      	lsrs	r7, r0, #24
 8010bee:	2fff      	cmp	r7, #255	; 0xff
 8010bf0:	d116      	bne.n	8010c20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8010bf2:	f06f 0501 	mvn.w	r5, #1
 8010bf6:	fb05 f706 	mul.w	r7, r5, r6
 8010bfa:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010bfe:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010c02:	0945      	lsrs	r5, r0, #5
 8010c04:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010c08:	ea4c 0505 	orr.w	r5, ip, r5
 8010c0c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010c10:	4305      	orrs	r5, r0
 8010c12:	53e5      	strh	r5, [r4, r7]
 8010c14:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010c16:	4401      	add	r1, r0
 8010c18:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010c1a:	3e01      	subs	r6, #1
 8010c1c:	4402      	add	r2, r0
 8010c1e:	e78e      	b.n	8010b3e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010c20:	b2fd      	uxtb	r5, r7
 8010c22:	2f00      	cmp	r7, #0
 8010c24:	d0f6      	beq.n	8010c14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010c26:	f06f 0701 	mvn.w	r7, #1
 8010c2a:	4377      	muls	r7, r6
 8010c2c:	fa1f f985 	uxth.w	r9, r5
 8010c30:	f834 8007 	ldrh.w	r8, [r4, r7]
 8010c34:	9702      	str	r7, [sp, #8]
 8010c36:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010c3a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010c3e:	43ed      	mvns	r5, r5
 8010c40:	b2ed      	uxtb	r5, r5
 8010c42:	fb17 f709 	smulbb	r7, r7, r9
 8010c46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010c4a:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010c4e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010c52:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8010c56:	b2c0      	uxtb	r0, r0
 8010c58:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010c5c:	fa5f f888 	uxtb.w	r8, r8
 8010c60:	fb10 f009 	smulbb	r0, r0, r9
 8010c64:	fb08 0005 	mla	r0, r8, r5, r0
 8010c68:	b280      	uxth	r0, r0
 8010c6a:	fa1f fc8c 	uxth.w	ip, ip
 8010c6e:	fb1a fa09 	smulbb	sl, sl, r9
 8010c72:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010c76:	fb07 a705 	mla	r7, r7, r5, sl
 8010c7a:	f100 0a01 	add.w	sl, r0, #1
 8010c7e:	f10c 0501 	add.w	r5, ip, #1
 8010c82:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010c86:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010c8a:	b2bf      	uxth	r7, r7
 8010c8c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010c90:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010c94:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010c98:	f107 0a01 	add.w	sl, r7, #1
 8010c9c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010ca0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ca4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010ca8:	9802      	ldr	r0, [sp, #8]
 8010caa:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010cae:	f824 c000 	strh.w	ip, [r4, r0]
 8010cb2:	e7af      	b.n	8010c14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010cb4:	f04f 0800 	mov.w	r8, #0
 8010cb8:	eba3 0008 	sub.w	r0, r3, r8
 8010cbc:	2800      	cmp	r0, #0
 8010cbe:	f77f af41 	ble.w	8010b44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010cc2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010cc6:	9f00      	ldr	r7, [sp, #0]
 8010cc8:	1410      	asrs	r0, r2, #16
 8010cca:	140d      	asrs	r5, r1, #16
 8010ccc:	fb06 7000 	mla	r0, r6, r0, r7
 8010cd0:	5d40      	ldrb	r0, [r0, r5]
 8010cd2:	9d01      	ldr	r5, [sp, #4]
 8010cd4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8010cd8:	0e2e      	lsrs	r6, r5, #24
 8010cda:	2eff      	cmp	r6, #255	; 0xff
 8010cdc:	d112      	bne.n	8010d04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8010cde:	482c      	ldr	r0, [pc, #176]	; (8010d90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010ce0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8010ce4:	0968      	lsrs	r0, r5, #5
 8010ce6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8010cea:	4330      	orrs	r0, r6
 8010cec:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8010cf0:	4328      	orrs	r0, r5
 8010cf2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8010cf6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010cf8:	4401      	add	r1, r0
 8010cfa:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010cfc:	f108 0801 	add.w	r8, r8, #1
 8010d00:	4402      	add	r2, r0
 8010d02:	e7d9      	b.n	8010cb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010d04:	b2f0      	uxtb	r0, r6
 8010d06:	2e00      	cmp	r6, #0
 8010d08:	d0f5      	beq.n	8010cf6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010d0a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010d0e:	fa1f f980 	uxth.w	r9, r0
 8010d12:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010d16:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010d1a:	43c0      	mvns	r0, r0
 8010d1c:	b2c0      	uxtb	r0, r0
 8010d1e:	fb16 f609 	smulbb	r6, r6, r9
 8010d22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010d26:	fb07 6700 	mla	r7, r7, r0, r6
 8010d2a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010d2e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010d32:	b2ed      	uxtb	r5, r5
 8010d34:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010d38:	fa5f fc8c 	uxtb.w	ip, ip
 8010d3c:	fb15 f509 	smulbb	r5, r5, r9
 8010d40:	fb0c 5500 	mla	r5, ip, r0, r5
 8010d44:	b2bf      	uxth	r7, r7
 8010d46:	fb1a fa09 	smulbb	sl, sl, r9
 8010d4a:	b2ad      	uxth	r5, r5
 8010d4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010d50:	fb06 a600 	mla	r6, r6, r0, sl
 8010d54:	1c78      	adds	r0, r7, #1
 8010d56:	f105 0a01 	add.w	sl, r5, #1
 8010d5a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8010d5e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010d62:	b2b6      	uxth	r6, r6
 8010d64:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010d68:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010d6c:	ea4a 0707 	orr.w	r7, sl, r7
 8010d70:	f106 0a01 	add.w	sl, r6, #1
 8010d74:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010d78:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010d7c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010d80:	ea47 070a 	orr.w	r7, r7, sl
 8010d84:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010d88:	e7b5      	b.n	8010cf6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010d8a:	b005      	add	sp, #20
 8010d8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d90:	fffff800 	.word	0xfffff800

08010d94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d98:	b087      	sub	sp, #28
 8010d9a:	468b      	mov	fp, r1
 8010d9c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010d9e:	9204      	str	r2, [sp, #16]
 8010da0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010da4:	9205      	str	r2, [sp, #20]
 8010da6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010daa:	6861      	ldr	r1, [r4, #4]
 8010dac:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010db0:	fb01 2000 	mla	r0, r1, r0, r2
 8010db4:	6822      	ldr	r2, [r4, #0]
 8010db6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010dba:	f8de 2000 	ldr.w	r2, [lr]
 8010dbe:	9201      	str	r2, [sp, #4]
 8010dc0:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010dc4:	9202      	str	r2, [sp, #8]
 8010dc6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010dca:	f1bb 0f00 	cmp.w	fp, #0
 8010dce:	dc03      	bgt.n	8010dd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010dd0:	9a04      	ldr	r2, [sp, #16]
 8010dd2:	2a00      	cmp	r2, #0
 8010dd4:	f340 8142 	ble.w	801105c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010dd8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010dda:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010dde:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010de2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010de6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010de8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010dec:	2b00      	cmp	r3, #0
 8010dee:	dd0e      	ble.n	8010e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010df0:	140c      	asrs	r4, r1, #16
 8010df2:	d405      	bmi.n	8010e00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010df4:	42bc      	cmp	r4, r7
 8010df6:	da03      	bge.n	8010e00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010df8:	1414      	asrs	r4, r2, #16
 8010dfa:	d401      	bmi.n	8010e00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010dfc:	42b4      	cmp	r4, r6
 8010dfe:	db07      	blt.n	8010e10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010e00:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010e02:	4421      	add	r1, r4
 8010e04:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010e06:	3b01      	subs	r3, #1
 8010e08:	4422      	add	r2, r4
 8010e0a:	3002      	adds	r0, #2
 8010e0c:	e7ee      	b.n	8010dec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010e0e:	d019      	beq.n	8010e44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8010e10:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010e12:	1e5c      	subs	r4, r3, #1
 8010e14:	fb05 1504 	mla	r5, r5, r4, r1
 8010e18:	142d      	asrs	r5, r5, #16
 8010e1a:	d409      	bmi.n	8010e30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010e1c:	42bd      	cmp	r5, r7
 8010e1e:	da07      	bge.n	8010e30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010e20:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010e22:	fb05 2404 	mla	r4, r5, r4, r2
 8010e26:	1424      	asrs	r4, r4, #16
 8010e28:	d402      	bmi.n	8010e30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010e2a:	42b4      	cmp	r4, r6
 8010e2c:	f2c0 80b1 	blt.w	8010f92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010e30:	f04f 0800 	mov.w	r8, #0
 8010e34:	eb03 0408 	add.w	r4, r3, r8
 8010e38:	2c00      	cmp	r4, #0
 8010e3a:	dc3e      	bgt.n	8010eba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8010e3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010e40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010e44:	f1bb 0f00 	cmp.w	fp, #0
 8010e48:	f340 8108 	ble.w	801105c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010e4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010e50:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010e54:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010e58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e5a:	f1bb 0b01 	subs.w	fp, fp, #1
 8010e5e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010e62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010e66:	eeb0 6a62 	vmov.f32	s12, s5
 8010e6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010e6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e72:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010e76:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010e7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010e7e:	eeb0 6a43 	vmov.f32	s12, s6
 8010e82:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010e86:	ee12 2a90 	vmov	r2, s5
 8010e8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010e8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010e92:	ee13 2a10 	vmov	r2, s6
 8010e96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010e9a:	9313      	str	r3, [sp, #76]	; 0x4c
 8010e9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010e9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ea2:	9a04      	ldr	r2, [sp, #16]
 8010ea4:	9314      	str	r3, [sp, #80]	; 0x50
 8010ea6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010eaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010eac:	eeb0 3a67 	vmov.f32	s6, s15
 8010eb0:	bf08      	it	eq
 8010eb2:	4613      	moveq	r3, r2
 8010eb4:	eef0 2a47 	vmov.f32	s5, s14
 8010eb8:	e787      	b.n	8010dca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8010eba:	140e      	asrs	r6, r1, #16
 8010ebc:	d462      	bmi.n	8010f84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010ebe:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010ec2:	42b5      	cmp	r5, r6
 8010ec4:	dd5e      	ble.n	8010f84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010ec6:	1417      	asrs	r7, r2, #16
 8010ec8:	d45c      	bmi.n	8010f84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010eca:	f8de 400c 	ldr.w	r4, [lr, #12]
 8010ece:	42bc      	cmp	r4, r7
 8010ed0:	dd58      	ble.n	8010f84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010ed2:	b22d      	sxth	r5, r5
 8010ed4:	fb07 6505 	mla	r5, r7, r5, r6
 8010ed8:	9c02      	ldr	r4, [sp, #8]
 8010eda:	5d66      	ldrb	r6, [r4, r5]
 8010edc:	2e00      	cmp	r6, #0
 8010ede:	d051      	beq.n	8010f84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8010ee0:	9c01      	ldr	r4, [sp, #4]
 8010ee2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8010ee6:	f06f 0401 	mvn.w	r4, #1
 8010eea:	fb04 f408 	mul.w	r4, r4, r8
 8010eee:	9403      	str	r4, [sp, #12]
 8010ef0:	5b05      	ldrh	r5, [r0, r4]
 8010ef2:	9c05      	ldr	r4, [sp, #20]
 8010ef4:	4366      	muls	r6, r4
 8010ef6:	1c74      	adds	r4, r6, #1
 8010ef8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010efc:	1224      	asrs	r4, r4, #8
 8010efe:	b2a7      	uxth	r7, r4
 8010f00:	122e      	asrs	r6, r5, #8
 8010f02:	43e4      	mvns	r4, r4
 8010f04:	b2e4      	uxtb	r4, r4
 8010f06:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8010f0a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010f0e:	fb16 f604 	smulbb	r6, r6, r4
 8010f12:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010f16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010f1a:	00ed      	lsls	r5, r5, #3
 8010f1c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010f20:	b2ed      	uxtb	r5, r5
 8010f22:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8010f26:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8010f2a:	fb15 f504 	smulbb	r5, r5, r4
 8010f2e:	fa5f f989 	uxtb.w	r9, r9
 8010f32:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010f36:	fb09 5507 	mla	r5, r9, r7, r5
 8010f3a:	fb1a fa04 	smulbb	sl, sl, r4
 8010f3e:	fa1f fc8c 	uxth.w	ip, ip
 8010f42:	b2ad      	uxth	r5, r5
 8010f44:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f48:	fb06 a607 	mla	r6, r6, r7, sl
 8010f4c:	f10c 0401 	add.w	r4, ip, #1
 8010f50:	f105 0a01 	add.w	sl, r5, #1
 8010f54:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010f58:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010f5c:	b2b6      	uxth	r6, r6
 8010f5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010f62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010f66:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010f6a:	f106 0a01 	add.w	sl, r6, #1
 8010f6e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010f72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010f76:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010f7a:	9c03      	ldr	r4, [sp, #12]
 8010f7c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010f80:	f820 c004 	strh.w	ip, [r0, r4]
 8010f84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010f86:	4421      	add	r1, r4
 8010f88:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010f8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8010f8e:	4422      	add	r2, r4
 8010f90:	e750      	b.n	8010e34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010f92:	f04f 0900 	mov.w	r9, #0
 8010f96:	eba3 0409 	sub.w	r4, r3, r9
 8010f9a:	2c00      	cmp	r4, #0
 8010f9c:	f77f af4e 	ble.w	8010e3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010fa0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010fa4:	140d      	asrs	r5, r1, #16
 8010fa6:	1414      	asrs	r4, r2, #16
 8010fa8:	fb06 5404 	mla	r4, r6, r4, r5
 8010fac:	9d02      	ldr	r5, [sp, #8]
 8010fae:	5d2e      	ldrb	r6, [r5, r4]
 8010fb0:	2e00      	cmp	r6, #0
 8010fb2:	d04c      	beq.n	801104e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8010fb4:	9d01      	ldr	r5, [sp, #4]
 8010fb6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8010fba:	9c05      	ldr	r4, [sp, #20]
 8010fbc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8010fc0:	4366      	muls	r6, r4
 8010fc2:	1c74      	adds	r4, r6, #1
 8010fc4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8010fc8:	1224      	asrs	r4, r4, #8
 8010fca:	b2a7      	uxth	r7, r4
 8010fcc:	122e      	asrs	r6, r5, #8
 8010fce:	43e4      	mvns	r4, r4
 8010fd0:	b2e4      	uxtb	r4, r4
 8010fd2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010fd6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010fda:	fb16 f604 	smulbb	r6, r6, r4
 8010fde:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010fe2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010fe6:	00ed      	lsls	r5, r5, #3
 8010fe8:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010fec:	b2ed      	uxtb	r5, r5
 8010fee:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010ff2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010ff6:	fb15 f504 	smulbb	r5, r5, r4
 8010ffa:	fa5f f888 	uxtb.w	r8, r8
 8010ffe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011002:	fb08 5507 	mla	r5, r8, r7, r5
 8011006:	fb1a fa04 	smulbb	sl, sl, r4
 801100a:	fa1f fc8c 	uxth.w	ip, ip
 801100e:	b2ad      	uxth	r5, r5
 8011010:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011014:	fb06 a607 	mla	r6, r6, r7, sl
 8011018:	f10c 0401 	add.w	r4, ip, #1
 801101c:	f105 0a01 	add.w	sl, r5, #1
 8011020:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011024:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011028:	b2b6      	uxth	r6, r6
 801102a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801102e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011032:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011036:	f106 0a01 	add.w	sl, r6, #1
 801103a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801103e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011042:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011046:	ea4c 0c0a 	orr.w	ip, ip, sl
 801104a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801104e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011050:	4421      	add	r1, r4
 8011052:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011054:	f109 0901 	add.w	r9, r9, #1
 8011058:	4422      	add	r2, r4
 801105a:	e79c      	b.n	8010f96 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801105c:	b007      	add	sp, #28
 801105e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011062 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011062:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011066:	b085      	sub	sp, #20
 8011068:	468b      	mov	fp, r1
 801106a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801106c:	9203      	str	r2, [sp, #12]
 801106e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8011072:	6861      	ldr	r1, [r4, #4]
 8011074:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011078:	fb01 2000 	mla	r0, r1, r0, r2
 801107c:	6822      	ldr	r2, [r4, #0]
 801107e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011082:	f8d8 2000 	ldr.w	r2, [r8]
 8011086:	9200      	str	r2, [sp, #0]
 8011088:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801108c:	9201      	str	r2, [sp, #4]
 801108e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011092:	f1bb 0f00 	cmp.w	fp, #0
 8011096:	dc03      	bgt.n	80110a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011098:	9a03      	ldr	r2, [sp, #12]
 801109a:	2a00      	cmp	r2, #0
 801109c:	f340 8146 	ble.w	801132c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80110a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80110a2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80110a6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80110aa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80110ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80110b0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80110b4:	2b00      	cmp	r3, #0
 80110b6:	dd0e      	ble.n	80110d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80110b8:	140c      	asrs	r4, r1, #16
 80110ba:	d405      	bmi.n	80110c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80110bc:	42bc      	cmp	r4, r7
 80110be:	da03      	bge.n	80110c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80110c0:	1414      	asrs	r4, r2, #16
 80110c2:	d401      	bmi.n	80110c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80110c4:	42b4      	cmp	r4, r6
 80110c6:	db07      	blt.n	80110d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80110c8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80110ca:	4421      	add	r1, r4
 80110cc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80110ce:	3b01      	subs	r3, #1
 80110d0:	4422      	add	r2, r4
 80110d2:	3002      	adds	r0, #2
 80110d4:	e7ee      	b.n	80110b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80110d6:	d017      	beq.n	8011108 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80110d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80110da:	1e5c      	subs	r4, r3, #1
 80110dc:	fb05 1504 	mla	r5, r5, r4, r1
 80110e0:	142d      	asrs	r5, r5, #16
 80110e2:	d409      	bmi.n	80110f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80110e4:	42bd      	cmp	r5, r7
 80110e6:	da07      	bge.n	80110f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80110e8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80110ea:	fb05 2404 	mla	r4, r5, r4, r2
 80110ee:	1424      	asrs	r4, r4, #16
 80110f0:	d402      	bmi.n	80110f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80110f2:	42b4      	cmp	r4, r6
 80110f4:	f2c0 80b3 	blt.w	801125e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80110f8:	2600      	movs	r6, #0
 80110fa:	199c      	adds	r4, r3, r6
 80110fc:	2c00      	cmp	r4, #0
 80110fe:	dc3e      	bgt.n	801117e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011100:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011104:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011108:	f1bb 0f00 	cmp.w	fp, #0
 801110c:	f340 810e 	ble.w	801132c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011110:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011114:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011118:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801111c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801111e:	f1bb 0b01 	subs.w	fp, fp, #1
 8011122:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011126:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801112a:	eeb0 6a62 	vmov.f32	s12, s5
 801112e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011132:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011136:	ee77 2a62 	vsub.f32	s5, s14, s5
 801113a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801113e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011142:	eeb0 6a43 	vmov.f32	s12, s6
 8011146:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801114a:	ee12 2a90 	vmov	r2, s5
 801114e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011152:	fb92 f3f3 	sdiv	r3, r2, r3
 8011156:	ee13 2a10 	vmov	r2, s6
 801115a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801115e:	9311      	str	r3, [sp, #68]	; 0x44
 8011160:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011162:	fb92 f3f3 	sdiv	r3, r2, r3
 8011166:	9a03      	ldr	r2, [sp, #12]
 8011168:	9312      	str	r3, [sp, #72]	; 0x48
 801116a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801116e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011170:	eeb0 3a67 	vmov.f32	s6, s15
 8011174:	bf08      	it	eq
 8011176:	4613      	moveq	r3, r2
 8011178:	eef0 2a47 	vmov.f32	s5, s14
 801117c:	e789      	b.n	8011092 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801117e:	140f      	asrs	r7, r1, #16
 8011180:	d418      	bmi.n	80111b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011182:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011186:	42bd      	cmp	r5, r7
 8011188:	dd14      	ble.n	80111b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801118a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801118e:	d411      	bmi.n	80111b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011190:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8011194:	4564      	cmp	r4, ip
 8011196:	dd0d      	ble.n	80111b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011198:	b22d      	sxth	r5, r5
 801119a:	fb0c 7505 	mla	r5, ip, r5, r7
 801119e:	9c01      	ldr	r4, [sp, #4]
 80111a0:	5d64      	ldrb	r4, [r4, r5]
 80111a2:	2cff      	cmp	r4, #255	; 0xff
 80111a4:	d10c      	bne.n	80111c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80111a6:	9c00      	ldr	r4, [sp, #0]
 80111a8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80111ac:	f06f 0401 	mvn.w	r4, #1
 80111b0:	4374      	muls	r4, r6
 80111b2:	5305      	strh	r5, [r0, r4]
 80111b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80111b6:	4421      	add	r1, r4
 80111b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80111ba:	3e01      	subs	r6, #1
 80111bc:	4422      	add	r2, r4
 80111be:	e79c      	b.n	80110fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80111c0:	2c00      	cmp	r4, #0
 80111c2:	d0f7      	beq.n	80111b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80111c4:	9f00      	ldr	r7, [sp, #0]
 80111c6:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80111ca:	f06f 0501 	mvn.w	r5, #1
 80111ce:	4375      	muls	r5, r6
 80111d0:	9502      	str	r5, [sp, #8]
 80111d2:	5b45      	ldrh	r5, [r0, r5]
 80111d4:	fa1f fc84 	uxth.w	ip, r4
 80111d8:	122f      	asrs	r7, r5, #8
 80111da:	43e4      	mvns	r4, r4
 80111dc:	b2e4      	uxtb	r4, r4
 80111de:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80111e2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80111e6:	fb17 f704 	smulbb	r7, r7, r4
 80111ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80111ee:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80111f2:	00ed      	lsls	r5, r5, #3
 80111f4:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80111f8:	b2ed      	uxtb	r5, r5
 80111fa:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80111fe:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8011202:	fb15 f504 	smulbb	r5, r5, r4
 8011206:	fa5f f989 	uxtb.w	r9, r9
 801120a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801120e:	fb09 550c 	mla	r5, r9, ip, r5
 8011212:	fb1a fa04 	smulbb	sl, sl, r4
 8011216:	fa1f fe8e 	uxth.w	lr, lr
 801121a:	b2ad      	uxth	r5, r5
 801121c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011220:	fb07 a70c 	mla	r7, r7, ip, sl
 8011224:	f10e 0401 	add.w	r4, lr, #1
 8011228:	f105 0a01 	add.w	sl, r5, #1
 801122c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8011230:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011234:	b2bf      	uxth	r7, r7
 8011236:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801123a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801123e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8011242:	f107 0a01 	add.w	sl, r7, #1
 8011246:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801124a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801124e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011252:	9c02      	ldr	r4, [sp, #8]
 8011254:	ea4e 0e0a 	orr.w	lr, lr, sl
 8011258:	f820 e004 	strh.w	lr, [r0, r4]
 801125c:	e7aa      	b.n	80111b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801125e:	f04f 0900 	mov.w	r9, #0
 8011262:	eba3 0409 	sub.w	r4, r3, r9
 8011266:	2c00      	cmp	r4, #0
 8011268:	f77f af4a 	ble.w	8011100 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801126c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011270:	1414      	asrs	r4, r2, #16
 8011272:	140d      	asrs	r5, r1, #16
 8011274:	fb06 5504 	mla	r5, r6, r4, r5
 8011278:	9c01      	ldr	r4, [sp, #4]
 801127a:	5d64      	ldrb	r4, [r4, r5]
 801127c:	2cff      	cmp	r4, #255	; 0xff
 801127e:	d10b      	bne.n	8011298 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8011280:	9c00      	ldr	r4, [sp, #0]
 8011282:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8011286:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801128a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801128c:	4421      	add	r1, r4
 801128e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011290:	f109 0901 	add.w	r9, r9, #1
 8011294:	4422      	add	r2, r4
 8011296:	e7e4      	b.n	8011262 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8011298:	2c00      	cmp	r4, #0
 801129a:	d0f6      	beq.n	801128a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801129c:	9e00      	ldr	r6, [sp, #0]
 801129e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80112a2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80112a6:	b2a7      	uxth	r7, r4
 80112a8:	122e      	asrs	r6, r5, #8
 80112aa:	43e4      	mvns	r4, r4
 80112ac:	b2e4      	uxtb	r4, r4
 80112ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80112b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80112b6:	fb16 f604 	smulbb	r6, r6, r4
 80112ba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80112be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80112c2:	00ed      	lsls	r5, r5, #3
 80112c4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80112c8:	b2ed      	uxtb	r5, r5
 80112ca:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80112ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80112d2:	fb15 f504 	smulbb	r5, r5, r4
 80112d6:	fa5f fe8e 	uxtb.w	lr, lr
 80112da:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80112de:	fb0e 5507 	mla	r5, lr, r7, r5
 80112e2:	fb1a fa04 	smulbb	sl, sl, r4
 80112e6:	fa1f fc8c 	uxth.w	ip, ip
 80112ea:	b2ad      	uxth	r5, r5
 80112ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80112f0:	fb06 a607 	mla	r6, r6, r7, sl
 80112f4:	f10c 0401 	add.w	r4, ip, #1
 80112f8:	f105 0a01 	add.w	sl, r5, #1
 80112fc:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011300:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011304:	b2b6      	uxth	r6, r6
 8011306:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801130a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801130e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011312:	f106 0a01 	add.w	sl, r6, #1
 8011316:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801131a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801131e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011322:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011326:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801132a:	e7ae      	b.n	801128a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801132c:	b005      	add	sp, #20
 801132e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011332 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011332:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011336:	b085      	sub	sp, #20
 8011338:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801133a:	9203      	str	r2, [sp, #12]
 801133c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8011340:	9201      	str	r2, [sp, #4]
 8011342:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011346:	9100      	str	r1, [sp, #0]
 8011348:	6841      	ldr	r1, [r0, #4]
 801134a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801134e:	fb01 2404 	mla	r4, r1, r4, r2
 8011352:	6802      	ldr	r2, [r0, #0]
 8011354:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011358:	f8de 2000 	ldr.w	r2, [lr]
 801135c:	9202      	str	r2, [sp, #8]
 801135e:	9a01      	ldr	r2, [sp, #4]
 8011360:	43d6      	mvns	r6, r2
 8011362:	b2f6      	uxtb	r6, r6
 8011364:	9a00      	ldr	r2, [sp, #0]
 8011366:	2a00      	cmp	r2, #0
 8011368:	dc03      	bgt.n	8011372 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801136a:	9a03      	ldr	r2, [sp, #12]
 801136c:	2a00      	cmp	r2, #0
 801136e:	f340 8124 	ble.w	80115ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011372:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011374:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8011378:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801137c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011380:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011382:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011386:	2b00      	cmp	r3, #0
 8011388:	dd0e      	ble.n	80113a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801138a:	1408      	asrs	r0, r1, #16
 801138c:	d405      	bmi.n	801139a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801138e:	4560      	cmp	r0, ip
 8011390:	da03      	bge.n	801139a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011392:	1410      	asrs	r0, r2, #16
 8011394:	d401      	bmi.n	801139a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011396:	42b8      	cmp	r0, r7
 8011398:	db07      	blt.n	80113aa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801139a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801139c:	4401      	add	r1, r0
 801139e:	9812      	ldr	r0, [sp, #72]	; 0x48
 80113a0:	3b01      	subs	r3, #1
 80113a2:	4402      	add	r2, r0
 80113a4:	3402      	adds	r4, #2
 80113a6:	e7ee      	b.n	8011386 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80113a8:	d06e      	beq.n	8011488 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80113aa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80113ac:	1e58      	subs	r0, r3, #1
 80113ae:	fb05 1500 	mla	r5, r5, r0, r1
 80113b2:	142d      	asrs	r5, r5, #16
 80113b4:	d45c      	bmi.n	8011470 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80113b6:	4565      	cmp	r5, ip
 80113b8:	da5a      	bge.n	8011470 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80113ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80113bc:	fb05 2000 	mla	r0, r5, r0, r2
 80113c0:	1400      	asrs	r0, r0, #16
 80113c2:	d455      	bmi.n	8011470 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80113c4:	42b8      	cmp	r0, r7
 80113c6:	da53      	bge.n	8011470 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80113c8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80113cc:	4699      	mov	r9, r3
 80113ce:	46a2      	mov	sl, r4
 80113d0:	f1b9 0f00 	cmp.w	r9, #0
 80113d4:	dd54      	ble.n	8011480 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80113d6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80113da:	140d      	asrs	r5, r1, #16
 80113dc:	1410      	asrs	r0, r2, #16
 80113de:	fb07 5000 	mla	r0, r7, r0, r5
 80113e2:	9d02      	ldr	r5, [sp, #8]
 80113e4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80113e8:	f8ba 5000 	ldrh.w	r5, [sl]
 80113ec:	122f      	asrs	r7, r5, #8
 80113ee:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80113f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80113f6:	fb17 f706 	smulbb	r7, r7, r6
 80113fa:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80113fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011402:	00ed      	lsls	r5, r5, #3
 8011404:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8011408:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801140c:	10c7      	asrs	r7, r0, #3
 801140e:	b2ed      	uxtb	r5, r5
 8011410:	00c0      	lsls	r0, r0, #3
 8011412:	fb18 f806 	smulbb	r8, r8, r6
 8011416:	fb15 f506 	smulbb	r5, r5, r6
 801141a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801141e:	b2c0      	uxtb	r0, r0
 8011420:	fa1f fc8c 	uxth.w	ip, ip
 8011424:	fb07 870b 	mla	r7, r7, fp, r8
 8011428:	fb00 500b 	mla	r0, r0, fp, r5
 801142c:	b280      	uxth	r0, r0
 801142e:	b2bf      	uxth	r7, r7
 8011430:	f10c 0501 	add.w	r5, ip, #1
 8011434:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011438:	f107 0801 	add.w	r8, r7, #1
 801143c:	1c45      	adds	r5, r0, #1
 801143e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011442:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011446:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011448:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801144c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011450:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011454:	ea45 0c0c 	orr.w	ip, r5, ip
 8011458:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801145c:	4401      	add	r1, r0
 801145e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011460:	ea4c 0c08 	orr.w	ip, ip, r8
 8011464:	f82a cb02 	strh.w	ip, [sl], #2
 8011468:	4402      	add	r2, r0
 801146a:	f109 39ff 	add.w	r9, r9, #4294967295
 801146e:	e7af      	b.n	80113d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011470:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8011474:	f04f 0800 	mov.w	r8, #0
 8011478:	eb03 0008 	add.w	r0, r3, r8
 801147c:	2800      	cmp	r0, #0
 801147e:	dc41      	bgt.n	8011504 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8011480:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011484:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011488:	9b00      	ldr	r3, [sp, #0]
 801148a:	2b00      	cmp	r3, #0
 801148c:	f340 8095 	ble.w	80115ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011490:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011494:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011498:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801149c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801149e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80114a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80114a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80114aa:	eef0 6a62 	vmov.f32	s13, s5
 80114ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80114b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80114b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80114ba:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80114be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80114c2:	eef0 6a43 	vmov.f32	s13, s6
 80114c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80114ca:	ee12 2a90 	vmov	r2, s5
 80114ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80114d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80114d6:	ee13 2a10 	vmov	r2, s6
 80114da:	9311      	str	r3, [sp, #68]	; 0x44
 80114dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80114de:	fb92 f3f3 	sdiv	r3, r2, r3
 80114e2:	9312      	str	r3, [sp, #72]	; 0x48
 80114e4:	9b00      	ldr	r3, [sp, #0]
 80114e6:	9a03      	ldr	r2, [sp, #12]
 80114e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80114ec:	3b01      	subs	r3, #1
 80114ee:	9300      	str	r3, [sp, #0]
 80114f0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80114f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80114f6:	eeb0 3a67 	vmov.f32	s6, s15
 80114fa:	bf08      	it	eq
 80114fc:	4613      	moveq	r3, r2
 80114fe:	eef0 2a47 	vmov.f32	s5, s14
 8011502:	e72f      	b.n	8011364 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011504:	140f      	asrs	r7, r1, #16
 8011506:	d451      	bmi.n	80115ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011508:	f8de 5008 	ldr.w	r5, [lr, #8]
 801150c:	42bd      	cmp	r5, r7
 801150e:	dd4d      	ble.n	80115ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011510:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011514:	d44a      	bmi.n	80115ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011516:	f8de 000c 	ldr.w	r0, [lr, #12]
 801151a:	4560      	cmp	r0, ip
 801151c:	dd46      	ble.n	80115ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801151e:	b22d      	sxth	r5, r5
 8011520:	fb0c 7505 	mla	r5, ip, r5, r7
 8011524:	9802      	ldr	r0, [sp, #8]
 8011526:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801152a:	f06f 0501 	mvn.w	r5, #1
 801152e:	fb05 fb08 	mul.w	fp, r5, r8
 8011532:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011536:	f834 500b 	ldrh.w	r5, [r4, fp]
 801153a:	122f      	asrs	r7, r5, #8
 801153c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011540:	fb17 f706 	smulbb	r7, r7, r6
 8011544:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011548:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801154c:	00ed      	lsls	r5, r5, #3
 801154e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011552:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011556:	10c7      	asrs	r7, r0, #3
 8011558:	b2ed      	uxtb	r5, r5
 801155a:	00c0      	lsls	r0, r0, #3
 801155c:	fb19 f906 	smulbb	r9, r9, r6
 8011560:	fb15 f506 	smulbb	r5, r5, r6
 8011564:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011568:	b2c0      	uxtb	r0, r0
 801156a:	fa1f fc8c 	uxth.w	ip, ip
 801156e:	fb07 970a 	mla	r7, r7, sl, r9
 8011572:	fb00 500a 	mla	r0, r0, sl, r5
 8011576:	b2bf      	uxth	r7, r7
 8011578:	b280      	uxth	r0, r0
 801157a:	f10c 0501 	add.w	r5, ip, #1
 801157e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011582:	f107 0901 	add.w	r9, r7, #1
 8011586:	1c45      	adds	r5, r0, #1
 8011588:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801158c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011590:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011594:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011598:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801159c:	ea45 0c0c 	orr.w	ip, r5, ip
 80115a0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80115a4:	ea4c 0c09 	orr.w	ip, ip, r9
 80115a8:	f824 c00b 	strh.w	ip, [r4, fp]
 80115ac:	9811      	ldr	r0, [sp, #68]	; 0x44
 80115ae:	4401      	add	r1, r0
 80115b0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80115b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80115b6:	4402      	add	r2, r0
 80115b8:	e75e      	b.n	8011478 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80115ba:	b005      	add	sp, #20
 80115bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080115c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80115c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115c4:	b085      	sub	sp, #20
 80115c6:	4693      	mov	fp, r2
 80115c8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80115ca:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80115cc:	6870      	ldr	r0, [r6, #4]
 80115ce:	9101      	str	r1, [sp, #4]
 80115d0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80115d4:	fb00 2404 	mla	r4, r0, r4, r2
 80115d8:	6832      	ldr	r2, [r6, #0]
 80115da:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80115de:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80115e2:	682a      	ldr	r2, [r5, #0]
 80115e4:	9202      	str	r2, [sp, #8]
 80115e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80115ea:	9a01      	ldr	r2, [sp, #4]
 80115ec:	2a00      	cmp	r2, #0
 80115ee:	dc03      	bgt.n	80115f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80115f0:	f1bb 0f00 	cmp.w	fp, #0
 80115f4:	f340 809a 	ble.w	801172c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80115f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80115fa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80115fe:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011602:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011606:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011608:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801160c:	2b00      	cmp	r3, #0
 801160e:	dd0c      	ble.n	801162a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8011610:	1406      	asrs	r6, r0, #16
 8011612:	d405      	bmi.n	8011620 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011614:	454e      	cmp	r6, r9
 8011616:	da03      	bge.n	8011620 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011618:	1416      	asrs	r6, r2, #16
 801161a:	d401      	bmi.n	8011620 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801161c:	4546      	cmp	r6, r8
 801161e:	db05      	blt.n	801162c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011620:	4470      	add	r0, lr
 8011622:	4462      	add	r2, ip
 8011624:	3b01      	subs	r3, #1
 8011626:	3402      	adds	r4, #2
 8011628:	e7f0      	b.n	801160c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801162a:	d00f      	beq.n	801164c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801162c:	1e5e      	subs	r6, r3, #1
 801162e:	fb0e 0706 	mla	r7, lr, r6, r0
 8011632:	143f      	asrs	r7, r7, #16
 8011634:	d541      	bpl.n	80116ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8011636:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801163a:	4698      	mov	r8, r3
 801163c:	9603      	str	r6, [sp, #12]
 801163e:	f1b8 0f00 	cmp.w	r8, #0
 8011642:	dc56      	bgt.n	80116f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8011644:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011648:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801164c:	9b01      	ldr	r3, [sp, #4]
 801164e:	2b00      	cmp	r3, #0
 8011650:	dd6c      	ble.n	801172c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011652:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011656:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801165a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801165e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011660:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011664:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011668:	eeb0 6a62 	vmov.f32	s12, s5
 801166c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011670:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011674:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011678:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801167c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011680:	eeb0 6a43 	vmov.f32	s12, s6
 8011684:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011688:	ee12 2a90 	vmov	r2, s5
 801168c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011690:	fb92 fef3 	sdiv	lr, r2, r3
 8011694:	ee13 2a10 	vmov	r2, s6
 8011698:	fb92 fcf3 	sdiv	ip, r2, r3
 801169c:	9b01      	ldr	r3, [sp, #4]
 801169e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80116a2:	3b01      	subs	r3, #1
 80116a4:	9301      	str	r3, [sp, #4]
 80116a6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80116aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80116ac:	eeb0 3a67 	vmov.f32	s6, s15
 80116b0:	bf08      	it	eq
 80116b2:	465b      	moveq	r3, fp
 80116b4:	eef0 2a47 	vmov.f32	s5, s14
 80116b8:	e797      	b.n	80115ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80116ba:	454f      	cmp	r7, r9
 80116bc:	dabb      	bge.n	8011636 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80116be:	fb0c 2606 	mla	r6, ip, r6, r2
 80116c2:	1436      	asrs	r6, r6, #16
 80116c4:	d4b7      	bmi.n	8011636 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80116c6:	4546      	cmp	r6, r8
 80116c8:	dab5      	bge.n	8011636 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80116ca:	461e      	mov	r6, r3
 80116cc:	46a0      	mov	r8, r4
 80116ce:	2e00      	cmp	r6, #0
 80116d0:	ddb8      	ble.n	8011644 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80116d2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80116d6:	9902      	ldr	r1, [sp, #8]
 80116d8:	1417      	asrs	r7, r2, #16
 80116da:	ea4f 4920 	mov.w	r9, r0, asr #16
 80116de:	fb0a 9707 	mla	r7, sl, r7, r9
 80116e2:	4470      	add	r0, lr
 80116e4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80116e8:	f828 7b02 	strh.w	r7, [r8], #2
 80116ec:	4462      	add	r2, ip
 80116ee:	3e01      	subs	r6, #1
 80116f0:	e7ed      	b.n	80116ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80116f2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80116f6:	d414      	bmi.n	8011722 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80116f8:	68ae      	ldr	r6, [r5, #8]
 80116fa:	454e      	cmp	r6, r9
 80116fc:	dd11      	ble.n	8011722 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80116fe:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011702:	d40e      	bmi.n	8011722 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011704:	68ef      	ldr	r7, [r5, #12]
 8011706:	4557      	cmp	r7, sl
 8011708:	dd0b      	ble.n	8011722 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801170a:	b236      	sxth	r6, r6
 801170c:	fb0a 9606 	mla	r6, sl, r6, r9
 8011710:	9f02      	ldr	r7, [sp, #8]
 8011712:	f06f 0101 	mvn.w	r1, #1
 8011716:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801171a:	fb01 f608 	mul.w	r6, r1, r8
 801171e:	9903      	ldr	r1, [sp, #12]
 8011720:	538f      	strh	r7, [r1, r6]
 8011722:	4470      	add	r0, lr
 8011724:	4462      	add	r2, ip
 8011726:	f108 38ff 	add.w	r8, r8, #4294967295
 801172a:	e788      	b.n	801163e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801172c:	b005      	add	sp, #20
 801172e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011732 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011732:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011736:	b087      	sub	sp, #28
 8011738:	468b      	mov	fp, r1
 801173a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801173c:	9203      	str	r2, [sp, #12]
 801173e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011742:	9204      	str	r2, [sp, #16]
 8011744:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8011748:	6841      	ldr	r1, [r0, #4]
 801174a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801174e:	fb01 2505 	mla	r5, r1, r5, r2
 8011752:	6802      	ldr	r2, [r0, #0]
 8011754:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011758:	f8d9 2000 	ldr.w	r2, [r9]
 801175c:	9201      	str	r2, [sp, #4]
 801175e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011762:	f1bb 0f00 	cmp.w	fp, #0
 8011766:	dc03      	bgt.n	8011770 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011768:	9a03      	ldr	r2, [sp, #12]
 801176a:	2a00      	cmp	r2, #0
 801176c:	f340 8159 	ble.w	8011a22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011770:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011772:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011776:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801177a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801177e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011780:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011784:	2b00      	cmp	r3, #0
 8011786:	dd0e      	ble.n	80117a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8011788:	1402      	asrs	r2, r0, #16
 801178a:	d405      	bmi.n	8011798 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801178c:	42ba      	cmp	r2, r7
 801178e:	da03      	bge.n	8011798 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011790:	140a      	asrs	r2, r1, #16
 8011792:	d401      	bmi.n	8011798 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011794:	42b2      	cmp	r2, r6
 8011796:	db07      	blt.n	80117a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011798:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801179a:	4410      	add	r0, r2
 801179c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801179e:	3b01      	subs	r3, #1
 80117a0:	4411      	add	r1, r2
 80117a2:	3502      	adds	r5, #2
 80117a4:	e7ee      	b.n	8011784 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80117a6:	d017      	beq.n	80117d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80117a8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80117aa:	1e5a      	subs	r2, r3, #1
 80117ac:	fb04 0402 	mla	r4, r4, r2, r0
 80117b0:	1424      	asrs	r4, r4, #16
 80117b2:	d409      	bmi.n	80117c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80117b4:	42bc      	cmp	r4, r7
 80117b6:	da07      	bge.n	80117c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80117b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80117ba:	fb04 1202 	mla	r2, r4, r2, r1
 80117be:	1412      	asrs	r2, r2, #16
 80117c0:	d402      	bmi.n	80117c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80117c2:	42b2      	cmp	r2, r6
 80117c4:	f2c0 80bf 	blt.w	8011946 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80117c8:	2700      	movs	r7, #0
 80117ca:	19da      	adds	r2, r3, r7
 80117cc:	2a00      	cmp	r2, #0
 80117ce:	dc3e      	bgt.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80117d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80117d4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80117d8:	f1bb 0f00 	cmp.w	fp, #0
 80117dc:	f340 8121 	ble.w	8011a22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80117e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80117e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80117e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80117ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80117ee:	f1bb 0b01 	subs.w	fp, fp, #1
 80117f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80117f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80117fa:	eeb0 6a62 	vmov.f32	s12, s5
 80117fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011802:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011806:	ee77 2a62 	vsub.f32	s5, s14, s5
 801180a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801180e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011812:	eeb0 6a43 	vmov.f32	s12, s6
 8011816:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801181a:	ee12 2a90 	vmov	r2, s5
 801181e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011822:	fb92 f3f3 	sdiv	r3, r2, r3
 8011826:	ee13 2a10 	vmov	r2, s6
 801182a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801182e:	9313      	str	r3, [sp, #76]	; 0x4c
 8011830:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011832:	fb92 f3f3 	sdiv	r3, r2, r3
 8011836:	9a03      	ldr	r2, [sp, #12]
 8011838:	9314      	str	r3, [sp, #80]	; 0x50
 801183a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801183e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011840:	eeb0 3a67 	vmov.f32	s6, s15
 8011844:	bf08      	it	eq
 8011846:	4613      	moveq	r3, r2
 8011848:	eef0 2a47 	vmov.f32	s5, s14
 801184c:	e789      	b.n	8011762 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801184e:	1406      	asrs	r6, r0, #16
 8011850:	d42d      	bmi.n	80118ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011852:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8011856:	42b4      	cmp	r4, r6
 8011858:	dd29      	ble.n	80118ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801185a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801185e:	d426      	bmi.n	80118ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011860:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011864:	4562      	cmp	r2, ip
 8011866:	dd22      	ble.n	80118ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011868:	b224      	sxth	r4, r4
 801186a:	9a01      	ldr	r2, [sp, #4]
 801186c:	fb0c 6404 	mla	r4, ip, r4, r6
 8011870:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8011874:	0e22      	lsrs	r2, r4, #24
 8011876:	d01a      	beq.n	80118ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011878:	9e04      	ldr	r6, [sp, #16]
 801187a:	4372      	muls	r2, r6
 801187c:	1c56      	adds	r6, r2, #1
 801187e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011882:	1212      	asrs	r2, r2, #8
 8011884:	0a26      	lsrs	r6, r4, #8
 8011886:	2aff      	cmp	r2, #255	; 0xff
 8011888:	9605      	str	r6, [sp, #20]
 801188a:	d116      	bne.n	80118ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801188c:	f06f 0201 	mvn.w	r2, #1
 8011890:	fb02 fc07 	mul.w	ip, r2, r7
 8011894:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011898:	0962      	lsrs	r2, r4, #5
 801189a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801189e:	f026 0607 	bic.w	r6, r6, #7
 80118a2:	4316      	orrs	r6, r2
 80118a4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80118a8:	4326      	orrs	r6, r4
 80118aa:	f825 600c 	strh.w	r6, [r5, ip]
 80118ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80118b0:	4410      	add	r0, r2
 80118b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80118b4:	3f01      	subs	r7, #1
 80118b6:	4411      	add	r1, r2
 80118b8:	e787      	b.n	80117ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80118ba:	f06f 0601 	mvn.w	r6, #1
 80118be:	437e      	muls	r6, r7
 80118c0:	fa1f fa82 	uxth.w	sl, r2
 80118c4:	f835 8006 	ldrh.w	r8, [r5, r6]
 80118c8:	9602      	str	r6, [sp, #8]
 80118ca:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80118ce:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80118d2:	43d2      	mvns	r2, r2
 80118d4:	b2d2      	uxtb	r2, r2
 80118d6:	fb1c fc0a 	smulbb	ip, ip, sl
 80118da:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80118de:	fb0e ce02 	mla	lr, lr, r2, ip
 80118e2:	b2e4      	uxtb	r4, r4
 80118e4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80118e8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80118ec:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80118f0:	fa5f f888 	uxtb.w	r8, r8
 80118f4:	fb14 f40a 	smulbb	r4, r4, sl
 80118f8:	fb08 4402 	mla	r4, r8, r2, r4
 80118fc:	fa1f fe8e 	uxth.w	lr, lr
 8011900:	fb16 f60a 	smulbb	r6, r6, sl
 8011904:	b2a4      	uxth	r4, r4
 8011906:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801190a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801190e:	f10e 0201 	add.w	r2, lr, #1
 8011912:	1c66      	adds	r6, r4, #1
 8011914:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011918:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801191c:	fa1f fc8c 	uxth.w	ip, ip
 8011920:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011924:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011928:	ea46 0e0e 	orr.w	lr, r6, lr
 801192c:	f10c 0601 	add.w	r6, ip, #1
 8011930:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011934:	0976      	lsrs	r6, r6, #5
 8011936:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801193a:	9a02      	ldr	r2, [sp, #8]
 801193c:	ea4e 0e06 	orr.w	lr, lr, r6
 8011940:	f825 e002 	strh.w	lr, [r5, r2]
 8011944:	e7b3      	b.n	80118ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011946:	f04f 0800 	mov.w	r8, #0
 801194a:	eba3 0208 	sub.w	r2, r3, r8
 801194e:	2a00      	cmp	r2, #0
 8011950:	f77f af3e 	ble.w	80117d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011954:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8011958:	1404      	asrs	r4, r0, #16
 801195a:	140a      	asrs	r2, r1, #16
 801195c:	fb06 4202 	mla	r2, r6, r2, r4
 8011960:	9c01      	ldr	r4, [sp, #4]
 8011962:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8011966:	0e22      	lsrs	r2, r4, #24
 8011968:	d016      	beq.n	8011998 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801196a:	9e04      	ldr	r6, [sp, #16]
 801196c:	4372      	muls	r2, r6
 801196e:	1c56      	adds	r6, r2, #1
 8011970:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011974:	1212      	asrs	r2, r2, #8
 8011976:	2aff      	cmp	r2, #255	; 0xff
 8011978:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801197c:	d113      	bne.n	80119a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801197e:	0962      	lsrs	r2, r4, #5
 8011980:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011984:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011988:	f026 0607 	bic.w	r6, r6, #7
 801198c:	4316      	orrs	r6, r2
 801198e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011992:	4326      	orrs	r6, r4
 8011994:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8011998:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801199a:	4410      	add	r0, r2
 801199c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801199e:	f108 0801 	add.w	r8, r8, #1
 80119a2:	4411      	add	r1, r2
 80119a4:	e7d1      	b.n	801194a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80119a6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80119aa:	fa1f fa82 	uxth.w	sl, r2
 80119ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80119b2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80119b6:	43d2      	mvns	r2, r2
 80119b8:	b2d2      	uxtb	r2, r2
 80119ba:	fb17 f70a 	smulbb	r7, r7, sl
 80119be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80119c2:	fb0c 7c02 	mla	ip, ip, r2, r7
 80119c6:	b2e4      	uxtb	r4, r4
 80119c8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80119cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80119d0:	fa5f fe8e 	uxtb.w	lr, lr
 80119d4:	fb14 f40a 	smulbb	r4, r4, sl
 80119d8:	fb0e 4402 	mla	r4, lr, r2, r4
 80119dc:	b2f6      	uxtb	r6, r6
 80119de:	fa1f fc8c 	uxth.w	ip, ip
 80119e2:	fb16 f60a 	smulbb	r6, r6, sl
 80119e6:	b2a4      	uxth	r4, r4
 80119e8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80119ec:	fb07 6702 	mla	r7, r7, r2, r6
 80119f0:	f10c 0201 	add.w	r2, ip, #1
 80119f4:	1c66      	adds	r6, r4, #1
 80119f6:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80119fa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80119fe:	b2bf      	uxth	r7, r7
 8011a00:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011a04:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011a08:	ea46 0c0c 	orr.w	ip, r6, ip
 8011a0c:	1c7e      	adds	r6, r7, #1
 8011a0e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011a12:	0976      	lsrs	r6, r6, #5
 8011a14:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011a18:	ea4c 0c06 	orr.w	ip, ip, r6
 8011a1c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011a20:	e7ba      	b.n	8011998 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011a22:	b007      	add	sp, #28
 8011a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011a28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a2c:	b085      	sub	sp, #20
 8011a2e:	468b      	mov	fp, r1
 8011a30:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011a32:	9203      	str	r2, [sp, #12]
 8011a34:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011a38:	6841      	ldr	r1, [r0, #4]
 8011a3a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011a3e:	fb01 2404 	mla	r4, r1, r4, r2
 8011a42:	6802      	ldr	r2, [r0, #0]
 8011a44:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011a48:	f8d8 2000 	ldr.w	r2, [r8]
 8011a4c:	9201      	str	r2, [sp, #4]
 8011a4e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011a52:	f1bb 0f00 	cmp.w	fp, #0
 8011a56:	dc03      	bgt.n	8011a60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011a58:	9a03      	ldr	r2, [sp, #12]
 8011a5a:	2a00      	cmp	r2, #0
 8011a5c:	f340 814f 	ble.w	8011cfe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011a60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011a62:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011a66:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011a6a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011a6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011a70:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011a74:	2b00      	cmp	r3, #0
 8011a76:	dd0e      	ble.n	8011a96 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011a78:	1408      	asrs	r0, r1, #16
 8011a7a:	d405      	bmi.n	8011a88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a7c:	42b8      	cmp	r0, r7
 8011a7e:	da03      	bge.n	8011a88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a80:	1410      	asrs	r0, r2, #16
 8011a82:	d401      	bmi.n	8011a88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011a84:	42b0      	cmp	r0, r6
 8011a86:	db07      	blt.n	8011a98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011a88:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011a8a:	4401      	add	r1, r0
 8011a8c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011a8e:	3b01      	subs	r3, #1
 8011a90:	4402      	add	r2, r0
 8011a92:	3402      	adds	r4, #2
 8011a94:	e7ee      	b.n	8011a74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011a96:	d017      	beq.n	8011ac8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011a98:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011a9a:	1e58      	subs	r0, r3, #1
 8011a9c:	fb05 1500 	mla	r5, r5, r0, r1
 8011aa0:	142d      	asrs	r5, r5, #16
 8011aa2:	d409      	bmi.n	8011ab8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011aa4:	42bd      	cmp	r5, r7
 8011aa6:	da07      	bge.n	8011ab8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011aa8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011aaa:	fb05 2000 	mla	r0, r5, r0, r2
 8011aae:	1400      	asrs	r0, r0, #16
 8011ab0:	d402      	bmi.n	8011ab8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011ab2:	42b0      	cmp	r0, r6
 8011ab4:	f2c0 80ba 	blt.w	8011c2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8011ab8:	2600      	movs	r6, #0
 8011aba:	1998      	adds	r0, r3, r6
 8011abc:	2800      	cmp	r0, #0
 8011abe:	dc3e      	bgt.n	8011b3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8011ac0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011ac4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011ac8:	f1bb 0f00 	cmp.w	fp, #0
 8011acc:	f340 8117 	ble.w	8011cfe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011ad0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011ad4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011ad8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011adc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ade:	f1bb 0b01 	subs.w	fp, fp, #1
 8011ae2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011ae6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011aea:	eeb0 6a62 	vmov.f32	s12, s5
 8011aee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011af2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011af6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011afa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011afe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011b02:	eeb0 6a43 	vmov.f32	s12, s6
 8011b06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011b0a:	ee12 2a90 	vmov	r2, s5
 8011b0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011b12:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b16:	ee13 2a10 	vmov	r2, s6
 8011b1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b1e:	9311      	str	r3, [sp, #68]	; 0x44
 8011b20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011b22:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b26:	9a03      	ldr	r2, [sp, #12]
 8011b28:	9312      	str	r3, [sp, #72]	; 0x48
 8011b2a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011b2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011b30:	eeb0 3a67 	vmov.f32	s6, s15
 8011b34:	bf08      	it	eq
 8011b36:	4613      	moveq	r3, r2
 8011b38:	eef0 2a47 	vmov.f32	s5, s14
 8011b3c:	e789      	b.n	8011a52 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011b3e:	140f      	asrs	r7, r1, #16
 8011b40:	d424      	bmi.n	8011b8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b42:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011b46:	42bd      	cmp	r5, r7
 8011b48:	dd20      	ble.n	8011b8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b4a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011b4e:	d41d      	bmi.n	8011b8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b50:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8011b54:	4560      	cmp	r0, ip
 8011b56:	dd19      	ble.n	8011b8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b58:	b22d      	sxth	r5, r5
 8011b5a:	fb0c 7505 	mla	r5, ip, r5, r7
 8011b5e:	9801      	ldr	r0, [sp, #4]
 8011b60:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8011b64:	0e07      	lsrs	r7, r0, #24
 8011b66:	2fff      	cmp	r7, #255	; 0xff
 8011b68:	d116      	bne.n	8011b98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011b6a:	f06f 0501 	mvn.w	r5, #1
 8011b6e:	fb05 f706 	mul.w	r7, r5, r6
 8011b72:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8011b76:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011b7a:	0945      	lsrs	r5, r0, #5
 8011b7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011b80:	ea4c 0505 	orr.w	r5, ip, r5
 8011b84:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011b88:	4305      	orrs	r5, r0
 8011b8a:	53e5      	strh	r5, [r4, r7]
 8011b8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011b8e:	4401      	add	r1, r0
 8011b90:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011b92:	3e01      	subs	r6, #1
 8011b94:	4402      	add	r2, r0
 8011b96:	e790      	b.n	8011aba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011b98:	b2fd      	uxtb	r5, r7
 8011b9a:	2f00      	cmp	r7, #0
 8011b9c:	d0f6      	beq.n	8011b8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011b9e:	f06f 0701 	mvn.w	r7, #1
 8011ba2:	4377      	muls	r7, r6
 8011ba4:	fa1f f985 	uxth.w	r9, r5
 8011ba8:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011bac:	9702      	str	r7, [sp, #8]
 8011bae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011bb2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011bb6:	43ed      	mvns	r5, r5
 8011bb8:	b2ed      	uxtb	r5, r5
 8011bba:	fb17 f709 	smulbb	r7, r7, r9
 8011bbe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011bc2:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011bc6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011bca:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011bce:	b2c0      	uxtb	r0, r0
 8011bd0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011bd4:	fa5f fe8e 	uxtb.w	lr, lr
 8011bd8:	fb10 f009 	smulbb	r0, r0, r9
 8011bdc:	fb0e 0005 	mla	r0, lr, r5, r0
 8011be0:	b280      	uxth	r0, r0
 8011be2:	fa1f fc8c 	uxth.w	ip, ip
 8011be6:	fb1a fa09 	smulbb	sl, sl, r9
 8011bea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011bee:	fb07 a705 	mla	r7, r7, r5, sl
 8011bf2:	f100 0a01 	add.w	sl, r0, #1
 8011bf6:	f10c 0501 	add.w	r5, ip, #1
 8011bfa:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011bfe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011c02:	b2bf      	uxth	r7, r7
 8011c04:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011c08:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011c0c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011c10:	f107 0a01 	add.w	sl, r7, #1
 8011c14:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011c18:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011c1c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011c20:	9802      	ldr	r0, [sp, #8]
 8011c22:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011c26:	f824 c000 	strh.w	ip, [r4, r0]
 8011c2a:	e7af      	b.n	8011b8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011c2c:	f04f 0e00 	mov.w	lr, #0
 8011c30:	eba3 000e 	sub.w	r0, r3, lr
 8011c34:	2800      	cmp	r0, #0
 8011c36:	f77f af43 	ble.w	8011ac0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011c3a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011c3e:	140d      	asrs	r5, r1, #16
 8011c40:	1410      	asrs	r0, r2, #16
 8011c42:	fb06 5000 	mla	r0, r6, r0, r5
 8011c46:	9d01      	ldr	r5, [sp, #4]
 8011c48:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011c4c:	0e2e      	lsrs	r6, r5, #24
 8011c4e:	2eff      	cmp	r6, #255	; 0xff
 8011c50:	d112      	bne.n	8011c78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8011c52:	482c      	ldr	r0, [pc, #176]	; (8011d04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011c54:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011c58:	0968      	lsrs	r0, r5, #5
 8011c5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011c5e:	4330      	orrs	r0, r6
 8011c60:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011c64:	4328      	orrs	r0, r5
 8011c66:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8011c6a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011c6c:	4401      	add	r1, r0
 8011c6e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011c70:	f10e 0e01 	add.w	lr, lr, #1
 8011c74:	4402      	add	r2, r0
 8011c76:	e7db      	b.n	8011c30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011c78:	b2f0      	uxtb	r0, r6
 8011c7a:	2e00      	cmp	r6, #0
 8011c7c:	d0f5      	beq.n	8011c6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011c7e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011c82:	fa1f f980 	uxth.w	r9, r0
 8011c86:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011c8a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011c8e:	43c0      	mvns	r0, r0
 8011c90:	b2c0      	uxtb	r0, r0
 8011c92:	fb16 f609 	smulbb	r6, r6, r9
 8011c96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011c9a:	fb07 6700 	mla	r7, r7, r0, r6
 8011c9e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011ca2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011ca6:	b2ed      	uxtb	r5, r5
 8011ca8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011cac:	fa5f fc8c 	uxtb.w	ip, ip
 8011cb0:	fb15 f509 	smulbb	r5, r5, r9
 8011cb4:	fb0c 5500 	mla	r5, ip, r0, r5
 8011cb8:	b2bf      	uxth	r7, r7
 8011cba:	fb1a fa09 	smulbb	sl, sl, r9
 8011cbe:	b2ad      	uxth	r5, r5
 8011cc0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011cc4:	fb06 a600 	mla	r6, r6, r0, sl
 8011cc8:	1c78      	adds	r0, r7, #1
 8011cca:	f105 0a01 	add.w	sl, r5, #1
 8011cce:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011cd2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011cd6:	b2b6      	uxth	r6, r6
 8011cd8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011cdc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011ce0:	ea4a 0707 	orr.w	r7, sl, r7
 8011ce4:	f106 0a01 	add.w	sl, r6, #1
 8011ce8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011cec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011cf0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011cf4:	ea47 070a 	orr.w	r7, r7, sl
 8011cf8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011cfc:	e7b5      	b.n	8011c6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011cfe:	b005      	add	sp, #20
 8011d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d04:	fffff800 	.word	0xfffff800

08011d08 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d0c:	b087      	sub	sp, #28
 8011d0e:	468b      	mov	fp, r1
 8011d10:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011d12:	9203      	str	r2, [sp, #12]
 8011d14:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011d18:	9204      	str	r2, [sp, #16]
 8011d1a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011d1e:	6841      	ldr	r1, [r0, #4]
 8011d20:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8011d24:	fb01 2404 	mla	r4, r1, r4, r2
 8011d28:	6802      	ldr	r2, [r0, #0]
 8011d2a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011d2e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011d32:	3201      	adds	r2, #1
 8011d34:	f022 0201 	bic.w	r2, r2, #1
 8011d38:	9200      	str	r2, [sp, #0]
 8011d3a:	f8d9 2000 	ldr.w	r2, [r9]
 8011d3e:	9201      	str	r2, [sp, #4]
 8011d40:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011d44:	f1bb 0f00 	cmp.w	fp, #0
 8011d48:	dc03      	bgt.n	8011d52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011d4a:	9a03      	ldr	r2, [sp, #12]
 8011d4c:	2a00      	cmp	r2, #0
 8011d4e:	f340 8169 	ble.w	8012024 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011d52:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011d54:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011d58:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011d5c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011d60:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011d62:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011d66:	2b00      	cmp	r3, #0
 8011d68:	dd0e      	ble.n	8011d88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011d6a:	1402      	asrs	r2, r0, #16
 8011d6c:	d405      	bmi.n	8011d7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011d6e:	42ba      	cmp	r2, r7
 8011d70:	da03      	bge.n	8011d7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011d72:	140a      	asrs	r2, r1, #16
 8011d74:	d401      	bmi.n	8011d7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011d76:	42b2      	cmp	r2, r6
 8011d78:	db07      	blt.n	8011d8a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8011d7a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d7c:	4410      	add	r0, r2
 8011d7e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d80:	3b01      	subs	r3, #1
 8011d82:	4411      	add	r1, r2
 8011d84:	3402      	adds	r4, #2
 8011d86:	e7ee      	b.n	8011d66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011d88:	d017      	beq.n	8011dba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011d8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011d8c:	1e5a      	subs	r2, r3, #1
 8011d8e:	fb05 0502 	mla	r5, r5, r2, r0
 8011d92:	142d      	asrs	r5, r5, #16
 8011d94:	d409      	bmi.n	8011daa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d96:	42bd      	cmp	r5, r7
 8011d98:	da07      	bge.n	8011daa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011d9a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011d9c:	fb05 1202 	mla	r2, r5, r2, r1
 8011da0:	1412      	asrs	r2, r2, #16
 8011da2:	d402      	bmi.n	8011daa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011da4:	42b2      	cmp	r2, r6
 8011da6:	f2c0 80c7 	blt.w	8011f38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8011daa:	2700      	movs	r7, #0
 8011dac:	19da      	adds	r2, r3, r7
 8011dae:	2a00      	cmp	r2, #0
 8011db0:	dc3e      	bgt.n	8011e30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011db2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011db6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011dba:	f1bb 0f00 	cmp.w	fp, #0
 8011dbe:	f340 8131 	ble.w	8012024 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011dc2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011dc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011dca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011dce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011dd0:	f1bb 0b01 	subs.w	fp, fp, #1
 8011dd4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011dd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011ddc:	eeb0 6a62 	vmov.f32	s12, s5
 8011de0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011de4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011de8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011dec:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011df0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011df4:	eeb0 6a43 	vmov.f32	s12, s6
 8011df8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011dfc:	ee12 2a90 	vmov	r2, s5
 8011e00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011e04:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e08:	ee13 2a10 	vmov	r2, s6
 8011e0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e10:	9313      	str	r3, [sp, #76]	; 0x4c
 8011e12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e14:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e18:	9a03      	ldr	r2, [sp, #12]
 8011e1a:	9314      	str	r3, [sp, #80]	; 0x50
 8011e1c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011e20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e22:	eeb0 3a67 	vmov.f32	s6, s15
 8011e26:	bf08      	it	eq
 8011e28:	4613      	moveq	r3, r2
 8011e2a:	eef0 2a47 	vmov.f32	s5, s14
 8011e2e:	e789      	b.n	8011d44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011e30:	1405      	asrs	r5, r0, #16
 8011e32:	d435      	bmi.n	8011ea0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e34:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011e38:	42aa      	cmp	r2, r5
 8011e3a:	dd31      	ble.n	8011ea0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e3c:	140e      	asrs	r6, r1, #16
 8011e3e:	d42f      	bmi.n	8011ea0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e40:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011e44:	42b2      	cmp	r2, r6
 8011e46:	dd2b      	ble.n	8011ea0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e48:	9a00      	ldr	r2, [sp, #0]
 8011e4a:	fb06 5502 	mla	r5, r6, r2, r5
 8011e4e:	086a      	lsrs	r2, r5, #1
 8011e50:	9e01      	ldr	r6, [sp, #4]
 8011e52:	5cb2      	ldrb	r2, [r6, r2]
 8011e54:	07ee      	lsls	r6, r5, #31
 8011e56:	bf54      	ite	pl
 8011e58:	f002 020f 	andpl.w	r2, r2, #15
 8011e5c:	1112      	asrmi	r2, r2, #4
 8011e5e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011e62:	b2d2      	uxtb	r2, r2
 8011e64:	b1e2      	cbz	r2, 8011ea0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011e66:	9d04      	ldr	r5, [sp, #16]
 8011e68:	436a      	muls	r2, r5
 8011e6a:	1c55      	adds	r5, r2, #1
 8011e6c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011e70:	4d6e      	ldr	r5, [pc, #440]	; (801202c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011e72:	682d      	ldr	r5, [r5, #0]
 8011e74:	1212      	asrs	r2, r2, #8
 8011e76:	0a2e      	lsrs	r6, r5, #8
 8011e78:	2aff      	cmp	r2, #255	; 0xff
 8011e7a:	9605      	str	r6, [sp, #20]
 8011e7c:	d116      	bne.n	8011eac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8011e7e:	f06f 0201 	mvn.w	r2, #1
 8011e82:	fb02 fc07 	mul.w	ip, r2, r7
 8011e86:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011e8a:	096a      	lsrs	r2, r5, #5
 8011e8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011e90:	f026 0607 	bic.w	r6, r6, #7
 8011e94:	4316      	orrs	r6, r2
 8011e96:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011e9a:	432e      	orrs	r6, r5
 8011e9c:	f824 600c 	strh.w	r6, [r4, ip]
 8011ea0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ea2:	4410      	add	r0, r2
 8011ea4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011ea6:	3f01      	subs	r7, #1
 8011ea8:	4411      	add	r1, r2
 8011eaa:	e77f      	b.n	8011dac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8011eac:	f06f 0601 	mvn.w	r6, #1
 8011eb0:	437e      	muls	r6, r7
 8011eb2:	fa1f fa82 	uxth.w	sl, r2
 8011eb6:	f834 8006 	ldrh.w	r8, [r4, r6]
 8011eba:	9602      	str	r6, [sp, #8]
 8011ebc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011ec0:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8011ec4:	43d2      	mvns	r2, r2
 8011ec6:	b2d2      	uxtb	r2, r2
 8011ec8:	fb1c fc0a 	smulbb	ip, ip, sl
 8011ecc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011ed0:	fb0e ce02 	mla	lr, lr, r2, ip
 8011ed4:	b2ed      	uxtb	r5, r5
 8011ed6:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011eda:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011ede:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011ee2:	fa5f f888 	uxtb.w	r8, r8
 8011ee6:	fb15 f50a 	smulbb	r5, r5, sl
 8011eea:	fb08 5502 	mla	r5, r8, r2, r5
 8011eee:	fa1f fe8e 	uxth.w	lr, lr
 8011ef2:	fb16 f60a 	smulbb	r6, r6, sl
 8011ef6:	b2ad      	uxth	r5, r5
 8011ef8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011efc:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011f00:	f10e 0201 	add.w	r2, lr, #1
 8011f04:	1c6e      	adds	r6, r5, #1
 8011f06:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011f0a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8011f0e:	fa1f fc8c 	uxth.w	ip, ip
 8011f12:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011f16:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011f1a:	ea46 0e0e 	orr.w	lr, r6, lr
 8011f1e:	f10c 0601 	add.w	r6, ip, #1
 8011f22:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011f26:	0976      	lsrs	r6, r6, #5
 8011f28:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011f2c:	9a02      	ldr	r2, [sp, #8]
 8011f2e:	ea4e 0e06 	orr.w	lr, lr, r6
 8011f32:	f824 e002 	strh.w	lr, [r4, r2]
 8011f36:	e7b3      	b.n	8011ea0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8011f38:	f04f 0800 	mov.w	r8, #0
 8011f3c:	eba3 0208 	sub.w	r2, r3, r8
 8011f40:	2a00      	cmp	r2, #0
 8011f42:	f77f af36 	ble.w	8011db2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011f46:	9e00      	ldr	r6, [sp, #0]
 8011f48:	1402      	asrs	r2, r0, #16
 8011f4a:	140d      	asrs	r5, r1, #16
 8011f4c:	fb06 2505 	mla	r5, r6, r5, r2
 8011f50:	086a      	lsrs	r2, r5, #1
 8011f52:	9e01      	ldr	r6, [sp, #4]
 8011f54:	5cb2      	ldrb	r2, [r6, r2]
 8011f56:	07ed      	lsls	r5, r5, #31
 8011f58:	bf54      	ite	pl
 8011f5a:	f002 020f 	andpl.w	r2, r2, #15
 8011f5e:	1112      	asrmi	r2, r2, #4
 8011f60:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011f64:	b2d2      	uxtb	r2, r2
 8011f66:	b1c2      	cbz	r2, 8011f9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8011f68:	9d04      	ldr	r5, [sp, #16]
 8011f6a:	436a      	muls	r2, r5
 8011f6c:	1c55      	adds	r5, r2, #1
 8011f6e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8011f72:	4d2e      	ldr	r5, [pc, #184]	; (801202c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8011f74:	1212      	asrs	r2, r2, #8
 8011f76:	682e      	ldr	r6, [r5, #0]
 8011f78:	2aff      	cmp	r2, #255	; 0xff
 8011f7a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8011f7e:	d113      	bne.n	8011fa8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8011f80:	0972      	lsrs	r2, r6, #5
 8011f82:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8011f86:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011f8a:	f025 0507 	bic.w	r5, r5, #7
 8011f8e:	4315      	orrs	r5, r2
 8011f90:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8011f94:	4335      	orrs	r5, r6
 8011f96:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8011f9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f9c:	4410      	add	r0, r2
 8011f9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011fa0:	f108 0801 	add.w	r8, r8, #1
 8011fa4:	4411      	add	r1, r2
 8011fa6:	e7c9      	b.n	8011f3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8011fa8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8011fac:	fa1f fa82 	uxth.w	sl, r2
 8011fb0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011fb4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8011fb8:	43d2      	mvns	r2, r2
 8011fba:	b2d2      	uxtb	r2, r2
 8011fbc:	fb17 f70a 	smulbb	r7, r7, sl
 8011fc0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011fc4:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011fc8:	b2f6      	uxtb	r6, r6
 8011fca:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011fce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011fd2:	fa5f fe8e 	uxtb.w	lr, lr
 8011fd6:	fb16 f60a 	smulbb	r6, r6, sl
 8011fda:	fb0e 6602 	mla	r6, lr, r2, r6
 8011fde:	b2ed      	uxtb	r5, r5
 8011fe0:	fa1f fc8c 	uxth.w	ip, ip
 8011fe4:	fb15 f50a 	smulbb	r5, r5, sl
 8011fe8:	b2b6      	uxth	r6, r6
 8011fea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011fee:	fb07 5702 	mla	r7, r7, r2, r5
 8011ff2:	f10c 0201 	add.w	r2, ip, #1
 8011ff6:	1c75      	adds	r5, r6, #1
 8011ff8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011ffc:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8012000:	b2bf      	uxth	r7, r7
 8012002:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012006:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801200a:	ea45 0c0c 	orr.w	ip, r5, ip
 801200e:	1c7d      	adds	r5, r7, #1
 8012010:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8012014:	096d      	lsrs	r5, r5, #5
 8012016:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801201a:	ea4c 0c05 	orr.w	ip, ip, r5
 801201e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8012022:	e7ba      	b.n	8011f9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012024:	b007      	add	sp, #28
 8012026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801202a:	bf00      	nop
 801202c:	2000a608 	.word	0x2000a608

08012030 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012034:	b087      	sub	sp, #28
 8012036:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8012344 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801203a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801203c:	9205      	str	r2, [sp, #20]
 801203e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8012042:	9101      	str	r1, [sp, #4]
 8012044:	6841      	ldr	r1, [r0, #4]
 8012046:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801204a:	fb01 2404 	mla	r4, r1, r4, r2
 801204e:	6802      	ldr	r2, [r0, #0]
 8012050:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012054:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012058:	3201      	adds	r2, #1
 801205a:	f022 0201 	bic.w	r2, r2, #1
 801205e:	9202      	str	r2, [sp, #8]
 8012060:	f8db 2000 	ldr.w	r2, [fp]
 8012064:	9203      	str	r2, [sp, #12]
 8012066:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801206a:	9a01      	ldr	r2, [sp, #4]
 801206c:	2a00      	cmp	r2, #0
 801206e:	dc03      	bgt.n	8012078 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012070:	9a05      	ldr	r2, [sp, #20]
 8012072:	2a00      	cmp	r2, #0
 8012074:	f340 8162 	ble.w	801233c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8012078:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801207a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801207e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8012082:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012086:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012088:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801208c:	2b00      	cmp	r3, #0
 801208e:	dd0e      	ble.n	80120ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012090:	1402      	asrs	r2, r0, #16
 8012092:	d405      	bmi.n	80120a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012094:	42ba      	cmp	r2, r7
 8012096:	da03      	bge.n	80120a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012098:	140a      	asrs	r2, r1, #16
 801209a:	d401      	bmi.n	80120a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801209c:	42b2      	cmp	r2, r6
 801209e:	db07      	blt.n	80120b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80120a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80120a2:	4410      	add	r0, r2
 80120a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80120a6:	3b01      	subs	r3, #1
 80120a8:	4411      	add	r1, r2
 80120aa:	3402      	adds	r4, #2
 80120ac:	e7ee      	b.n	801208c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80120ae:	d017      	beq.n	80120e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80120b0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80120b2:	1e5a      	subs	r2, r3, #1
 80120b4:	fb05 0502 	mla	r5, r5, r2, r0
 80120b8:	142d      	asrs	r5, r5, #16
 80120ba:	d409      	bmi.n	80120d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80120bc:	42bd      	cmp	r5, r7
 80120be:	da07      	bge.n	80120d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80120c0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80120c2:	fb05 1202 	mla	r2, r5, r2, r1
 80120c6:	1412      	asrs	r2, r2, #16
 80120c8:	d402      	bmi.n	80120d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80120ca:	42b2      	cmp	r2, r6
 80120cc:	f2c0 80c3 	blt.w	8012256 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80120d0:	2500      	movs	r5, #0
 80120d2:	195a      	adds	r2, r3, r5
 80120d4:	2a00      	cmp	r2, #0
 80120d6:	dc3f      	bgt.n	8012158 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80120d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80120dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80120e0:	9b01      	ldr	r3, [sp, #4]
 80120e2:	2b00      	cmp	r3, #0
 80120e4:	f340 812a 	ble.w	801233c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80120e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80120ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80120f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80120f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80120f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80120fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80120fe:	eeb0 6a62 	vmov.f32	s12, s5
 8012102:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012106:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801210a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801210e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012112:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012116:	eeb0 6a43 	vmov.f32	s12, s6
 801211a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801211e:	ee12 2a90 	vmov	r2, s5
 8012122:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012126:	fb92 f3f3 	sdiv	r3, r2, r3
 801212a:	ee13 2a10 	vmov	r2, s6
 801212e:	9313      	str	r3, [sp, #76]	; 0x4c
 8012130:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012132:	fb92 f3f3 	sdiv	r3, r2, r3
 8012136:	9314      	str	r3, [sp, #80]	; 0x50
 8012138:	9b01      	ldr	r3, [sp, #4]
 801213a:	9a05      	ldr	r2, [sp, #20]
 801213c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012140:	3b01      	subs	r3, #1
 8012142:	9301      	str	r3, [sp, #4]
 8012144:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012148:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801214a:	eeb0 3a67 	vmov.f32	s6, s15
 801214e:	bf08      	it	eq
 8012150:	4613      	moveq	r3, r2
 8012152:	eef0 2a47 	vmov.f32	s5, s14
 8012156:	e788      	b.n	801206a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012158:	1406      	asrs	r6, r0, #16
 801215a:	d42c      	bmi.n	80121b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801215c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012160:	42b2      	cmp	r2, r6
 8012162:	dd28      	ble.n	80121b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012164:	140f      	asrs	r7, r1, #16
 8012166:	d426      	bmi.n	80121b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012168:	f8db 200c 	ldr.w	r2, [fp, #12]
 801216c:	42ba      	cmp	r2, r7
 801216e:	dd22      	ble.n	80121b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012170:	9a02      	ldr	r2, [sp, #8]
 8012172:	fb07 6602 	mla	r6, r7, r2, r6
 8012176:	0872      	lsrs	r2, r6, #1
 8012178:	9f03      	ldr	r7, [sp, #12]
 801217a:	5cba      	ldrb	r2, [r7, r2]
 801217c:	07f6      	lsls	r6, r6, #31
 801217e:	bf54      	ite	pl
 8012180:	f002 020f 	andpl.w	r2, r2, #15
 8012184:	1112      	asrmi	r2, r2, #4
 8012186:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801218a:	b2d2      	uxtb	r2, r2
 801218c:	2aff      	cmp	r2, #255	; 0xff
 801218e:	d118      	bne.n	80121c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8012190:	f8d8 2000 	ldr.w	r2, [r8]
 8012194:	f06f 0601 	mvn.w	r6, #1
 8012198:	fb06 f705 	mul.w	r7, r6, r5
 801219c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80121a0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80121a4:	0956      	lsrs	r6, r2, #5
 80121a6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80121aa:	ea4c 0606 	orr.w	r6, ip, r6
 80121ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80121b2:	4316      	orrs	r6, r2
 80121b4:	53e6      	strh	r6, [r4, r7]
 80121b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80121b8:	4410      	add	r0, r2
 80121ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80121bc:	3d01      	subs	r5, #1
 80121be:	4411      	add	r1, r2
 80121c0:	e787      	b.n	80120d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80121c2:	2a00      	cmp	r2, #0
 80121c4:	d0f7      	beq.n	80121b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80121c6:	f06f 0601 	mvn.w	r6, #1
 80121ca:	436e      	muls	r6, r5
 80121cc:	f8d8 c000 	ldr.w	ip, [r8]
 80121d0:	f834 e006 	ldrh.w	lr, [r4, r6]
 80121d4:	9604      	str	r6, [sp, #16]
 80121d6:	fa1f f982 	uxth.w	r9, r2
 80121da:	ea4f 272e 	mov.w	r7, lr, asr #8
 80121de:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80121e2:	43d2      	mvns	r2, r2
 80121e4:	b2d2      	uxtb	r2, r2
 80121e6:	fb16 f609 	smulbb	r6, r6, r9
 80121ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80121ee:	fb07 6702 	mla	r7, r7, r2, r6
 80121f2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80121f6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80121fa:	fa5f fc8c 	uxtb.w	ip, ip
 80121fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012202:	fa5f fe8e 	uxtb.w	lr, lr
 8012206:	fb1c fc09 	smulbb	ip, ip, r9
 801220a:	fb0e cc02 	mla	ip, lr, r2, ip
 801220e:	b2bf      	uxth	r7, r7
 8012210:	fb1a fa09 	smulbb	sl, sl, r9
 8012214:	fa1f fc8c 	uxth.w	ip, ip
 8012218:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801221c:	fb06 a602 	mla	r6, r6, r2, sl
 8012220:	1c7a      	adds	r2, r7, #1
 8012222:	f10c 0a01 	add.w	sl, ip, #1
 8012226:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801222a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801222e:	b2b6      	uxth	r6, r6
 8012230:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012234:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012238:	ea4a 0707 	orr.w	r7, sl, r7
 801223c:	f106 0a01 	add.w	sl, r6, #1
 8012240:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012244:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012248:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801224c:	9a04      	ldr	r2, [sp, #16]
 801224e:	ea47 070a 	orr.w	r7, r7, sl
 8012252:	52a7      	strh	r7, [r4, r2]
 8012254:	e7af      	b.n	80121b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012256:	f04f 0e00 	mov.w	lr, #0
 801225a:	eba3 020e 	sub.w	r2, r3, lr
 801225e:	2a00      	cmp	r2, #0
 8012260:	f77f af3a 	ble.w	80120d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012264:	9e02      	ldr	r6, [sp, #8]
 8012266:	1402      	asrs	r2, r0, #16
 8012268:	140d      	asrs	r5, r1, #16
 801226a:	fb06 2505 	mla	r5, r6, r5, r2
 801226e:	086a      	lsrs	r2, r5, #1
 8012270:	9e03      	ldr	r6, [sp, #12]
 8012272:	5cb2      	ldrb	r2, [r6, r2]
 8012274:	07ed      	lsls	r5, r5, #31
 8012276:	bf54      	ite	pl
 8012278:	f002 020f 	andpl.w	r2, r2, #15
 801227c:	1112      	asrmi	r2, r2, #4
 801227e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012282:	b2d2      	uxtb	r2, r2
 8012284:	2aff      	cmp	r2, #255	; 0xff
 8012286:	d115      	bne.n	80122b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8012288:	f8d8 5000 	ldr.w	r5, [r8]
 801228c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8012290:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8012294:	096a      	lsrs	r2, r5, #5
 8012296:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801229a:	4332      	orrs	r2, r6
 801229c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80122a0:	432a      	orrs	r2, r5
 80122a2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80122a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80122a8:	4410      	add	r0, r2
 80122aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80122ac:	f10e 0e01 	add.w	lr, lr, #1
 80122b0:	4411      	add	r1, r2
 80122b2:	e7d2      	b.n	801225a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80122b4:	2a00      	cmp	r2, #0
 80122b6:	d0f6      	beq.n	80122a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80122b8:	f8d8 7000 	ldr.w	r7, [r8]
 80122bc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80122c0:	fa1f f982 	uxth.w	r9, r2
 80122c4:	ea4f 262c 	mov.w	r6, ip, asr #8
 80122c8:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80122cc:	43d2      	mvns	r2, r2
 80122ce:	b2d2      	uxtb	r2, r2
 80122d0:	fb15 f509 	smulbb	r5, r5, r9
 80122d4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80122d8:	fb06 5602 	mla	r6, r6, r2, r5
 80122dc:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80122e0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80122e4:	b2ff      	uxtb	r7, r7
 80122e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80122ea:	fa5f fc8c 	uxtb.w	ip, ip
 80122ee:	fb17 f709 	smulbb	r7, r7, r9
 80122f2:	fb0c 7702 	mla	r7, ip, r2, r7
 80122f6:	b2b6      	uxth	r6, r6
 80122f8:	fb1a fa09 	smulbb	sl, sl, r9
 80122fc:	b2bf      	uxth	r7, r7
 80122fe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012302:	fb05 a502 	mla	r5, r5, r2, sl
 8012306:	1c72      	adds	r2, r6, #1
 8012308:	f107 0a01 	add.w	sl, r7, #1
 801230c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8012310:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012314:	b2ad      	uxth	r5, r5
 8012316:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801231a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801231e:	ea4a 0606 	orr.w	r6, sl, r6
 8012322:	f105 0a01 	add.w	sl, r5, #1
 8012326:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801232a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801232e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012332:	ea46 060a 	orr.w	r6, r6, sl
 8012336:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801233a:	e7b4      	b.n	80122a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801233c:	b007      	add	sp, #28
 801233e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012342:	bf00      	nop
 8012344:	2000a608 	.word	0x2000a608

08012348 <_ZN8touchgfx8LCD16bppD1Ev>:
 8012348:	4770      	bx	lr

0801234a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801234a:	4770      	bx	lr

0801234c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801234c:	4770      	bx	lr

0801234e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801234e:	4770      	bx	lr

08012350 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8012350:	4770      	bx	lr

08012352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012352:	4770      	bx	lr

08012354 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012354:	4770      	bx	lr

08012356 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012356:	4770      	bx	lr

08012358 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012358:	4770      	bx	lr

0801235a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801235a:	4770      	bx	lr

0801235c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801235c:	4770      	bx	lr

0801235e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801235e:	4770      	bx	lr

08012360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012360:	4770      	bx	lr

08012362 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012362:	4770      	bx	lr

08012364 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012364:	4770      	bx	lr

08012366 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012366:	4770      	bx	lr

08012368 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012368:	4770      	bx	lr

0801236a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801236a:	4770      	bx	lr

0801236c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801236c:	4770      	bx	lr

0801236e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801236e:	4770      	bx	lr

08012370 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012370:	4770      	bx	lr

08012372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012372:	4770      	bx	lr

08012374 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012374:	4770      	bx	lr

08012376 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012376:	4770      	bx	lr

08012378 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8012378:	4770      	bx	lr

0801237a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801237a:	4770      	bx	lr

0801237c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801237c:	4770      	bx	lr

0801237e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801237e:	4770      	bx	lr

08012380 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012380:	4770      	bx	lr
	...

08012384 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8012384:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012388:	4692      	mov	sl, r2
 801238a:	4a22      	ldr	r2, [pc, #136]	; (8012414 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x90>)
 801238c:	6812      	ldr	r2, [r2, #0]
 801238e:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8012392:	2a02      	cmp	r2, #2
 8012394:	b088      	sub	sp, #32
 8012396:	4605      	mov	r5, r0
 8012398:	4689      	mov	r9, r1
 801239a:	d106      	bne.n	80123aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 801239c:	4b1e      	ldr	r3, [pc, #120]	; (8012418 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x94>)
 801239e:	4a1f      	ldr	r2, [pc, #124]	; (801241c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 80123a0:	f44f 7158 	mov.w	r1, #864	; 0x360
 80123a4:	481e      	ldr	r0, [pc, #120]	; (8012420 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 80123a6:	f009 fca5 	bl	801bcf4 <__assert_func>
 80123aa:	ac08      	add	r4, sp, #32
 80123ac:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80123b0:	4620      	mov	r0, r4
 80123b2:	f7fd fce3 	bl	800fd7c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80123b6:	682b      	ldr	r3, [r5, #0]
 80123b8:	4606      	mov	r6, r0
 80123ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80123bc:	4628      	mov	r0, r5
 80123be:	4798      	blx	r3
 80123c0:	4286      	cmp	r6, r0
 80123c2:	d004      	beq.n	80123ce <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 80123c4:	4b17      	ldr	r3, [pc, #92]	; (8012424 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 80123c6:	4a15      	ldr	r2, [pc, #84]	; (801241c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 80123c8:	f240 3162 	movw	r1, #866	; 0x362
 80123cc:	e7ea      	b.n	80123a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80123ce:	4620      	mov	r0, r4
 80123d0:	f7fd fc4a 	bl	800fc68 <_ZNK8touchgfx6Bitmap7getDataEv>
 80123d4:	4606      	mov	r6, r0
 80123d6:	b920      	cbnz	r0, 80123e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 80123d8:	4b13      	ldr	r3, [pc, #76]	; (8012428 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 80123da:	4a10      	ldr	r2, [pc, #64]	; (801241c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 80123dc:	f44f 7159 	mov.w	r1, #868	; 0x364
 80123e0:	e7e0      	b.n	80123a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80123e2:	682b      	ldr	r3, [r5, #0]
 80123e4:	4620      	mov	r0, r4
 80123e6:	f8d3 8018 	ldr.w	r8, [r3, #24]
 80123ea:	f7fd fb21 	bl	800fa30 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80123ee:	4607      	mov	r7, r0
 80123f0:	4620      	mov	r0, r4
 80123f2:	f7fd fb61 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80123f6:	b23f      	sxth	r7, r7
 80123f8:	b200      	sxth	r0, r0
 80123fa:	9002      	str	r0, [sp, #8]
 80123fc:	e9cd 6700 	strd	r6, r7, [sp]
 8012400:	a806      	add	r0, sp, #24
 8012402:	4653      	mov	r3, sl
 8012404:	464a      	mov	r2, r9
 8012406:	4629      	mov	r1, r5
 8012408:	47c0      	blx	r8
 801240a:	4630      	mov	r0, r6
 801240c:	b008      	add	sp, #32
 801240e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012412:	bf00      	nop
 8012414:	2000a600 	.word	0x2000a600
 8012418:	0801fbb6 	.word	0x0801fbb6
 801241c:	080204b3 	.word	0x080204b3
 8012420:	0801fc68 	.word	0x0801fc68
 8012424:	0801fc9a 	.word	0x0801fc9a
 8012428:	0801fcef 	.word	0x0801fcef

0801242c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801242c:	b508      	push	{r3, lr}
 801242e:	4b06      	ldr	r3, [pc, #24]	; (8012448 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8012430:	8818      	ldrh	r0, [r3, #0]
 8012432:	b928      	cbnz	r0, 8012440 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8012434:	4b05      	ldr	r3, [pc, #20]	; (801244c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8012436:	4a06      	ldr	r2, [pc, #24]	; (8012450 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8012438:	4806      	ldr	r0, [pc, #24]	; (8012454 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801243a:	2153      	movs	r1, #83	; 0x53
 801243c:	f009 fc5a 	bl	801bcf4 <__assert_func>
 8012440:	0040      	lsls	r0, r0, #1
 8012442:	b280      	uxth	r0, r0
 8012444:	bd08      	pop	{r3, pc}
 8012446:	bf00      	nop
 8012448:	2000a5fa 	.word	0x2000a5fa
 801244c:	0801fd5e 	.word	0x0801fd5e
 8012450:	08020370 	.word	0x08020370
 8012454:	0801fda0 	.word	0x0801fda0

08012458 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8012458:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801245c:	2300      	movs	r3, #0
 801245e:	9300      	str	r3, [sp, #0]
 8012460:	4b3d      	ldr	r3, [pc, #244]	; (8012558 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8012462:	781b      	ldrb	r3, [r3, #0]
 8012464:	2b00      	cmp	r3, #0
 8012466:	d137      	bne.n	80124d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8012468:	4a3c      	ldr	r2, [pc, #240]	; (801255c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801246a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801246e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012472:	2b00      	cmp	r3, #0
 8012474:	d132      	bne.n	80124dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8012476:	4b3a      	ldr	r3, [pc, #232]	; (8012560 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8012478:	f9b3 3000 	ldrsh.w	r3, [r3]
 801247c:	6808      	ldr	r0, [r1, #0]
 801247e:	6849      	ldr	r1, [r1, #4]
 8012480:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012484:	ac02      	add	r4, sp, #8
 8012486:	ab02      	add	r3, sp, #8
 8012488:	c303      	stmia	r3!, {r0, r1}
 801248a:	4669      	mov	r1, sp
 801248c:	4620      	mov	r0, r4
 801248e:	f7fa fc47 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012492:	4668      	mov	r0, sp
 8012494:	f7fa fc1c 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012498:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801249c:	f8bd 2000 	ldrh.w	r2, [sp]
 80124a0:	4d30      	ldr	r5, [pc, #192]	; (8012564 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80124a2:	4413      	add	r3, r2
 80124a4:	f8ad 3008 	strh.w	r3, [sp, #8]
 80124a8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80124ac:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80124b0:	6828      	ldr	r0, [r5, #0]
 80124b2:	4413      	add	r3, r2
 80124b4:	f8ad 300a 	strh.w	r3, [sp, #10]
 80124b8:	6803      	ldr	r3, [r0, #0]
 80124ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80124bc:	4798      	blx	r3
 80124be:	f010 0f01 	tst.w	r0, #1
 80124c2:	462f      	mov	r7, r5
 80124c4:	d00c      	beq.n	80124e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80124c6:	6828      	ldr	r0, [r5, #0]
 80124c8:	6803      	ldr	r3, [r0, #0]
 80124ca:	e894 0006 	ldmia.w	r4, {r1, r2}
 80124ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80124d0:	4798      	blx	r3
 80124d2:	b004      	add	sp, #16
 80124d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80124d8:	4a21      	ldr	r2, [pc, #132]	; (8012560 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80124da:	e7c6      	b.n	801246a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80124dc:	4b1f      	ldr	r3, [pc, #124]	; (801255c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80124de:	e7cb      	b.n	8012478 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80124e0:	6838      	ldr	r0, [r7, #0]
 80124e2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80124e6:	6803      	ldr	r3, [r0, #0]
 80124e8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80124ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80124ee:	4798      	blx	r3
 80124f0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80124f4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80124f8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80124fc:	fb16 3602 	smlabb	r6, r6, r2, r3
 8012500:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012504:	6838      	ldr	r0, [r7, #0]
 8012506:	6803      	ldr	r3, [r0, #0]
 8012508:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801250a:	4798      	blx	r3
 801250c:	4a13      	ldr	r2, [pc, #76]	; (801255c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801250e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8012512:	8813      	ldrh	r3, [r2, #0]
 8012514:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012518:	fb03 1404 	mla	r4, r3, r4, r1
 801251c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012520:	435d      	muls	r5, r3
 8012522:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012526:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801252a:	4691      	mov	r9, r2
 801252c:	6838      	ldr	r0, [r7, #0]
 801252e:	42ac      	cmp	r4, r5
 8012530:	6803      	ldr	r3, [r0, #0]
 8012532:	d20e      	bcs.n	8012552 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8012534:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8012538:	4632      	mov	r2, r6
 801253a:	4643      	mov	r3, r8
 801253c:	4621      	mov	r1, r4
 801253e:	47d0      	blx	sl
 8012540:	f8b9 3000 	ldrh.w	r3, [r9]
 8012544:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012548:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801254c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012550:	e7ec      	b.n	801252c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8012552:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012554:	4798      	blx	r3
 8012556:	e7bc      	b.n	80124d2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8012558:	2000a5f8 	.word	0x2000a5f8
 801255c:	2000a5fa 	.word	0x2000a5fa
 8012560:	2000a5fc 	.word	0x2000a5fc
 8012564:	2000a600 	.word	0x2000a600

08012568 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801256c:	b08b      	sub	sp, #44	; 0x2c
 801256e:	460f      	mov	r7, r1
 8012570:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8012574:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8012578:	4616      	mov	r6, r2
 801257a:	f1bb 0f00 	cmp.w	fp, #0
 801257e:	d049      	beq.n	8012614 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8012580:	6810      	ldr	r0, [r2, #0]
 8012582:	6851      	ldr	r1, [r2, #4]
 8012584:	ad06      	add	r5, sp, #24
 8012586:	c503      	stmia	r5!, {r0, r1}
 8012588:	6818      	ldr	r0, [r3, #0]
 801258a:	6859      	ldr	r1, [r3, #4]
 801258c:	ad08      	add	r5, sp, #32
 801258e:	c503      	stmia	r5!, {r0, r1}
 8012590:	a806      	add	r0, sp, #24
 8012592:	f7fa fb9d 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012596:	4631      	mov	r1, r6
 8012598:	a808      	add	r0, sp, #32
 801259a:	f7fa fbc1 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801259e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80125a2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80125a6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80125aa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80125ae:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80125b2:	fb16 2103 	smlabb	r1, r6, r3, r2
 80125b6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80125ba:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80125be:	4f5f      	ldr	r7, [pc, #380]	; (801273c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80125c0:	440a      	add	r2, r1
 80125c2:	f8ad 2020 	strh.w	r2, [sp, #32]
 80125c6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80125ca:	6838      	ldr	r0, [r7, #0]
 80125cc:	4413      	add	r3, r2
 80125ce:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80125d2:	6803      	ldr	r3, [r0, #0]
 80125d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80125d6:	4798      	blx	r3
 80125d8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80125dc:	46b9      	mov	r9, r7
 80125de:	d01c      	beq.n	801261a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 80125e0:	f010 0f04 	tst.w	r0, #4
 80125e4:	d01d      	beq.n	8012622 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80125e6:	f8d9 0000 	ldr.w	r0, [r9]
 80125ea:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80125ee:	6801      	ldr	r1, [r0, #0]
 80125f0:	f8cd b00c 	str.w	fp, [sp, #12]
 80125f4:	2700      	movs	r7, #0
 80125f6:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80125fa:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80125fe:	9402      	str	r4, [sp, #8]
 8012600:	b2ad      	uxth	r5, r5
 8012602:	fa1f f488 	uxth.w	r4, r8
 8012606:	9501      	str	r5, [sp, #4]
 8012608:	9400      	str	r4, [sp, #0]
 801260a:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801260c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012610:	4631      	mov	r1, r6
 8012612:	47a0      	blx	r4
 8012614:	b00b      	add	sp, #44	; 0x2c
 8012616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801261a:	b914      	cbnz	r4, 8012622 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801261c:	f010 0f01 	tst.w	r0, #1
 8012620:	e7e0      	b.n	80125e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8012622:	f8d9 0000 	ldr.w	r0, [r9]
 8012626:	6803      	ldr	r3, [r0, #0]
 8012628:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801262a:	4798      	blx	r3
 801262c:	4b44      	ldr	r3, [pc, #272]	; (8012740 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801262e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8012632:	881a      	ldrh	r2, [r3, #0]
 8012634:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8012638:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801263c:	fb02 1404 	mla	r4, r2, r4, r1
 8012640:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012644:	469a      	mov	sl, r3
 8012646:	fb05 f502 	mul.w	r5, r5, r2
 801264a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801264e:	d059      	beq.n	8012704 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8012650:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8012654:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012658:	fa1f f28b 	uxth.w	r2, fp
 801265c:	fa1f f989 	uxth.w	r9, r9
 8012660:	469e      	mov	lr, r3
 8012662:	42ac      	cmp	r4, r5
 8012664:	d264      	bcs.n	8012730 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012666:	eb04 0a07 	add.w	sl, r4, r7
 801266a:	4554      	cmp	r4, sl
 801266c:	d23d      	bcs.n	80126ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801266e:	8821      	ldrh	r1, [r4, #0]
 8012670:	f836 3b02 	ldrh.w	r3, [r6], #2
 8012674:	1208      	asrs	r0, r1, #8
 8012676:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801267a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801267e:	fb10 f009 	smulbb	r0, r0, r9
 8012682:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8012686:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801268a:	00c9      	lsls	r1, r1, #3
 801268c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8012690:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8012694:	10d8      	asrs	r0, r3, #3
 8012696:	b2c9      	uxtb	r1, r1
 8012698:	00db      	lsls	r3, r3, #3
 801269a:	fa1f fc8c 	uxth.w	ip, ip
 801269e:	fb1b fb09 	smulbb	fp, fp, r9
 80126a2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80126a6:	b2db      	uxtb	r3, r3
 80126a8:	fb11 f109 	smulbb	r1, r1, r9
 80126ac:	fb00 b002 	mla	r0, r0, r2, fp
 80126b0:	fb03 1302 	mla	r3, r3, r2, r1
 80126b4:	f10c 0b01 	add.w	fp, ip, #1
 80126b8:	b29b      	uxth	r3, r3
 80126ba:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80126be:	b280      	uxth	r0, r0
 80126c0:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80126c4:	f103 0c01 	add.w	ip, r3, #1
 80126c8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80126cc:	1c43      	adds	r3, r0, #1
 80126ce:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80126d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80126d6:	0940      	lsrs	r0, r0, #5
 80126d8:	ea4c 0c0b 	orr.w	ip, ip, fp
 80126dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80126e0:	ea4c 0c00 	orr.w	ip, ip, r0
 80126e4:	f824 cb02 	strh.w	ip, [r4], #2
 80126e8:	e7bf      	b.n	801266a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80126ea:	f8be 3000 	ldrh.w	r3, [lr]
 80126ee:	eba3 0308 	sub.w	r3, r3, r8
 80126f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80126f6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80126fa:	eba3 0308 	sub.w	r3, r3, r8
 80126fe:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012702:	e7ae      	b.n	8012662 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8012704:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8012708:	f8d9 0000 	ldr.w	r0, [r9]
 801270c:	42ac      	cmp	r4, r5
 801270e:	6803      	ldr	r3, [r0, #0]
 8012710:	d20e      	bcs.n	8012730 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012712:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8012716:	4632      	mov	r2, r6
 8012718:	463b      	mov	r3, r7
 801271a:	4621      	mov	r1, r4
 801271c:	47c0      	blx	r8
 801271e:	f8ba 3000 	ldrh.w	r3, [sl]
 8012722:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012726:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801272a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801272e:	e7eb      	b.n	8012708 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8012730:	4b02      	ldr	r3, [pc, #8]	; (801273c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012732:	6818      	ldr	r0, [r3, #0]
 8012734:	6803      	ldr	r3, [r0, #0]
 8012736:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012738:	4798      	blx	r3
 801273a:	e76b      	b.n	8012614 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801273c:	2000a600 	.word	0x2000a600
 8012740:	2000a5fa 	.word	0x2000a5fa

08012744 <_ZN8touchgfx8LCD16bppD0Ev>:
 8012744:	b510      	push	{r4, lr}
 8012746:	2178      	movs	r1, #120	; 0x78
 8012748:	4604      	mov	r4, r0
 801274a:	f009 faa5 	bl	801bc98 <_ZdlPvj>
 801274e:	4620      	mov	r0, r4
 8012750:	bd10      	pop	{r4, pc}

08012752 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012752:	b510      	push	{r4, lr}
 8012754:	2104      	movs	r1, #4
 8012756:	4604      	mov	r4, r0
 8012758:	f009 fa9e 	bl	801bc98 <_ZdlPvj>
 801275c:	4620      	mov	r0, r4
 801275e:	bd10      	pop	{r4, pc}

08012760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012760:	b510      	push	{r4, lr}
 8012762:	2104      	movs	r1, #4
 8012764:	4604      	mov	r4, r0
 8012766:	f009 fa97 	bl	801bc98 <_ZdlPvj>
 801276a:	4620      	mov	r0, r4
 801276c:	bd10      	pop	{r4, pc}

0801276e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801276e:	b510      	push	{r4, lr}
 8012770:	2104      	movs	r1, #4
 8012772:	4604      	mov	r4, r0
 8012774:	f009 fa90 	bl	801bc98 <_ZdlPvj>
 8012778:	4620      	mov	r0, r4
 801277a:	bd10      	pop	{r4, pc}

0801277c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801277c:	b510      	push	{r4, lr}
 801277e:	2104      	movs	r1, #4
 8012780:	4604      	mov	r4, r0
 8012782:	f009 fa89 	bl	801bc98 <_ZdlPvj>
 8012786:	4620      	mov	r0, r4
 8012788:	bd10      	pop	{r4, pc}

0801278a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801278a:	b510      	push	{r4, lr}
 801278c:	2104      	movs	r1, #4
 801278e:	4604      	mov	r4, r0
 8012790:	f009 fa82 	bl	801bc98 <_ZdlPvj>
 8012794:	4620      	mov	r0, r4
 8012796:	bd10      	pop	{r4, pc}

08012798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8012798:	b510      	push	{r4, lr}
 801279a:	2104      	movs	r1, #4
 801279c:	4604      	mov	r4, r0
 801279e:	f009 fa7b 	bl	801bc98 <_ZdlPvj>
 80127a2:	4620      	mov	r0, r4
 80127a4:	bd10      	pop	{r4, pc}

080127a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80127a6:	b510      	push	{r4, lr}
 80127a8:	2104      	movs	r1, #4
 80127aa:	4604      	mov	r4, r0
 80127ac:	f009 fa74 	bl	801bc98 <_ZdlPvj>
 80127b0:	4620      	mov	r0, r4
 80127b2:	bd10      	pop	{r4, pc}

080127b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80127b4:	b510      	push	{r4, lr}
 80127b6:	2104      	movs	r1, #4
 80127b8:	4604      	mov	r4, r0
 80127ba:	f009 fa6d 	bl	801bc98 <_ZdlPvj>
 80127be:	4620      	mov	r0, r4
 80127c0:	bd10      	pop	{r4, pc}

080127c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80127c2:	b510      	push	{r4, lr}
 80127c4:	2104      	movs	r1, #4
 80127c6:	4604      	mov	r4, r0
 80127c8:	f009 fa66 	bl	801bc98 <_ZdlPvj>
 80127cc:	4620      	mov	r0, r4
 80127ce:	bd10      	pop	{r4, pc}

080127d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80127d0:	b510      	push	{r4, lr}
 80127d2:	2104      	movs	r1, #4
 80127d4:	4604      	mov	r4, r0
 80127d6:	f009 fa5f 	bl	801bc98 <_ZdlPvj>
 80127da:	4620      	mov	r0, r4
 80127dc:	bd10      	pop	{r4, pc}

080127de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80127de:	b510      	push	{r4, lr}
 80127e0:	2104      	movs	r1, #4
 80127e2:	4604      	mov	r4, r0
 80127e4:	f009 fa58 	bl	801bc98 <_ZdlPvj>
 80127e8:	4620      	mov	r0, r4
 80127ea:	bd10      	pop	{r4, pc}

080127ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80127ec:	b510      	push	{r4, lr}
 80127ee:	2104      	movs	r1, #4
 80127f0:	4604      	mov	r4, r0
 80127f2:	f009 fa51 	bl	801bc98 <_ZdlPvj>
 80127f6:	4620      	mov	r0, r4
 80127f8:	bd10      	pop	{r4, pc}

080127fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80127fa:	b510      	push	{r4, lr}
 80127fc:	2104      	movs	r1, #4
 80127fe:	4604      	mov	r4, r0
 8012800:	f009 fa4a 	bl	801bc98 <_ZdlPvj>
 8012804:	4620      	mov	r0, r4
 8012806:	bd10      	pop	{r4, pc}

08012808 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012808:	b510      	push	{r4, lr}
 801280a:	2104      	movs	r1, #4
 801280c:	4604      	mov	r4, r0
 801280e:	f009 fa43 	bl	801bc98 <_ZdlPvj>
 8012812:	4620      	mov	r0, r4
 8012814:	bd10      	pop	{r4, pc}

08012816 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012816:	b510      	push	{r4, lr}
 8012818:	2104      	movs	r1, #4
 801281a:	4604      	mov	r4, r0
 801281c:	f009 fa3c 	bl	801bc98 <_ZdlPvj>
 8012820:	4620      	mov	r0, r4
 8012822:	bd10      	pop	{r4, pc}

08012824 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012824:	b510      	push	{r4, lr}
 8012826:	2104      	movs	r1, #4
 8012828:	4604      	mov	r4, r0
 801282a:	f009 fa35 	bl	801bc98 <_ZdlPvj>
 801282e:	4620      	mov	r0, r4
 8012830:	bd10      	pop	{r4, pc}

08012832 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012832:	b510      	push	{r4, lr}
 8012834:	2104      	movs	r1, #4
 8012836:	4604      	mov	r4, r0
 8012838:	f009 fa2e 	bl	801bc98 <_ZdlPvj>
 801283c:	4620      	mov	r0, r4
 801283e:	bd10      	pop	{r4, pc}

08012840 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8012840:	b510      	push	{r4, lr}
 8012842:	2104      	movs	r1, #4
 8012844:	4604      	mov	r4, r0
 8012846:	f009 fa27 	bl	801bc98 <_ZdlPvj>
 801284a:	4620      	mov	r0, r4
 801284c:	bd10      	pop	{r4, pc}

0801284e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801284e:	b510      	push	{r4, lr}
 8012850:	2104      	movs	r1, #4
 8012852:	4604      	mov	r4, r0
 8012854:	f009 fa20 	bl	801bc98 <_ZdlPvj>
 8012858:	4620      	mov	r0, r4
 801285a:	bd10      	pop	{r4, pc}

0801285c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801285c:	b510      	push	{r4, lr}
 801285e:	2104      	movs	r1, #4
 8012860:	4604      	mov	r4, r0
 8012862:	f009 fa19 	bl	801bc98 <_ZdlPvj>
 8012866:	4620      	mov	r0, r4
 8012868:	bd10      	pop	{r4, pc}

0801286a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801286a:	b510      	push	{r4, lr}
 801286c:	2104      	movs	r1, #4
 801286e:	4604      	mov	r4, r0
 8012870:	f009 fa12 	bl	801bc98 <_ZdlPvj>
 8012874:	4620      	mov	r0, r4
 8012876:	bd10      	pop	{r4, pc}

08012878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012878:	b510      	push	{r4, lr}
 801287a:	2104      	movs	r1, #4
 801287c:	4604      	mov	r4, r0
 801287e:	f009 fa0b 	bl	801bc98 <_ZdlPvj>
 8012882:	4620      	mov	r0, r4
 8012884:	bd10      	pop	{r4, pc}

08012886 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012886:	b510      	push	{r4, lr}
 8012888:	2104      	movs	r1, #4
 801288a:	4604      	mov	r4, r0
 801288c:	f009 fa04 	bl	801bc98 <_ZdlPvj>
 8012890:	4620      	mov	r0, r4
 8012892:	bd10      	pop	{r4, pc}

08012894 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012894:	b510      	push	{r4, lr}
 8012896:	2104      	movs	r1, #4
 8012898:	4604      	mov	r4, r0
 801289a:	f009 f9fd 	bl	801bc98 <_ZdlPvj>
 801289e:	4620      	mov	r0, r4
 80128a0:	bd10      	pop	{r4, pc}

080128a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80128a2:	b510      	push	{r4, lr}
 80128a4:	2104      	movs	r1, #4
 80128a6:	4604      	mov	r4, r0
 80128a8:	f009 f9f6 	bl	801bc98 <_ZdlPvj>
 80128ac:	4620      	mov	r0, r4
 80128ae:	bd10      	pop	{r4, pc}

080128b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80128b0:	b510      	push	{r4, lr}
 80128b2:	2104      	movs	r1, #4
 80128b4:	4604      	mov	r4, r0
 80128b6:	f009 f9ef 	bl	801bc98 <_ZdlPvj>
 80128ba:	4620      	mov	r0, r4
 80128bc:	bd10      	pop	{r4, pc}

080128be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80128be:	b510      	push	{r4, lr}
 80128c0:	2104      	movs	r1, #4
 80128c2:	4604      	mov	r4, r0
 80128c4:	f009 f9e8 	bl	801bc98 <_ZdlPvj>
 80128c8:	4620      	mov	r0, r4
 80128ca:	bd10      	pop	{r4, pc}

080128cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80128cc:	b510      	push	{r4, lr}
 80128ce:	2104      	movs	r1, #4
 80128d0:	4604      	mov	r4, r0
 80128d2:	f009 f9e1 	bl	801bc98 <_ZdlPvj>
 80128d6:	4620      	mov	r0, r4
 80128d8:	bd10      	pop	{r4, pc}
	...

080128dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80128dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80128de:	4606      	mov	r6, r0
 80128e0:	b087      	sub	sp, #28
 80128e2:	460c      	mov	r4, r1
 80128e4:	4617      	mov	r7, r2
 80128e6:	461d      	mov	r5, r3
 80128e8:	b333      	cbz	r3, 8012938 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80128ea:	4608      	mov	r0, r1
 80128ec:	f7f6 fe1b 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 80128f0:	bb10      	cbnz	r0, 8012938 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80128f2:	6820      	ldr	r0, [r4, #0]
 80128f4:	6861      	ldr	r1, [r4, #4]
 80128f6:	4c1c      	ldr	r4, [pc, #112]	; (8012968 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80128f8:	ab04      	add	r3, sp, #16
 80128fa:	c303      	stmia	r3!, {r0, r1}
 80128fc:	a804      	add	r0, sp, #16
 80128fe:	f7fa f9e7 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012902:	6820      	ldr	r0, [r4, #0]
 8012904:	6803      	ldr	r3, [r0, #0]
 8012906:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012908:	4798      	blx	r3
 801290a:	2dff      	cmp	r5, #255	; 0xff
 801290c:	d016      	beq.n	801293c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801290e:	f010 0f08 	tst.w	r0, #8
 8012912:	6820      	ldr	r0, [r4, #0]
 8012914:	d015      	beq.n	8012942 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8012916:	2400      	movs	r4, #0
 8012918:	6801      	ldr	r1, [r0, #0]
 801291a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801291e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012922:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8012926:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801292a:	9401      	str	r4, [sp, #4]
 801292c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8012930:	9400      	str	r4, [sp, #0]
 8012932:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8012934:	4639      	mov	r1, r7
 8012936:	47a0      	blx	r4
 8012938:	b007      	add	sp, #28
 801293a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801293c:	f010 0f02 	tst.w	r0, #2
 8012940:	e7e7      	b.n	8012912 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8012942:	6803      	ldr	r3, [r0, #0]
 8012944:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012946:	4798      	blx	r3
 8012948:	4b08      	ldr	r3, [pc, #32]	; (801296c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801294a:	881a      	ldrh	r2, [r3, #0]
 801294c:	6833      	ldr	r3, [r6, #0]
 801294e:	e9cd 7500 	strd	r7, r5, [sp]
 8012952:	4601      	mov	r1, r0
 8012954:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8012956:	4630      	mov	r0, r6
 8012958:	ab04      	add	r3, sp, #16
 801295a:	47a8      	blx	r5
 801295c:	6820      	ldr	r0, [r4, #0]
 801295e:	6803      	ldr	r3, [r0, #0]
 8012960:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012962:	4798      	blx	r3
 8012964:	e7e8      	b.n	8012938 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012966:	bf00      	nop
 8012968:	2000a600 	.word	0x2000a600
 801296c:	2000a5fa 	.word	0x2000a5fa

08012970 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8012970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012974:	4690      	mov	r8, r2
 8012976:	4a8d      	ldr	r2, [pc, #564]	; (8012bac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>)
 8012978:	6812      	ldr	r2, [r2, #0]
 801297a:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801297e:	b091      	sub	sp, #68	; 0x44
 8012980:	2a02      	cmp	r2, #2
 8012982:	4606      	mov	r6, r0
 8012984:	460d      	mov	r5, r1
 8012986:	461c      	mov	r4, r3
 8012988:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
 801298c:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8012990:	d106      	bne.n	80129a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30>
 8012992:	4b87      	ldr	r3, [pc, #540]	; (8012bb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x240>)
 8012994:	4a87      	ldr	r2, [pc, #540]	; (8012bb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 8012996:	f240 316b 	movw	r1, #875	; 0x36b
 801299a:	4887      	ldr	r0, [pc, #540]	; (8012bb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 801299c:	f009 f9aa 	bl	801bcf4 <__assert_func>
 80129a0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80129a2:	b923      	cbnz	r3, 80129ae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e>
 80129a4:	4b85      	ldr	r3, [pc, #532]	; (8012bbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 80129a6:	4a83      	ldr	r2, [pc, #524]	; (8012bb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 80129a8:	f44f 715b 	mov.w	r1, #876	; 0x36c
 80129ac:	e7f5      	b.n	801299a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2a>
 80129ae:	f9b4 1000 	ldrsh.w	r1, [r4]
 80129b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80129b6:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 80129ba:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 80129be:	4621      	mov	r1, r4
 80129c0:	4648      	mov	r0, r9
 80129c2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80129c6:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80129ca:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80129ce:	f7f6 fd67 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 80129d2:	4641      	mov	r1, r8
 80129d4:	4648      	mov	r0, r9
 80129d6:	f7f6 fd63 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 80129da:	4a79      	ldr	r2, [pc, #484]	; (8012bc0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 80129dc:	f8b2 c000 	ldrh.w	ip, [r2]
 80129e0:	4a78      	ldr	r2, [pc, #480]	; (8012bc4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 80129e2:	8810      	ldrh	r0, [r2, #0]
 80129e4:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80129e8:	2a00      	cmp	r2, #0
 80129ea:	fa0f f18c 	sxth.w	r1, ip
 80129ee:	fa0f fe80 	sxth.w	lr, r0
 80129f2:	da07      	bge.n	8012a04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x94>
 80129f4:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 80129f8:	4442      	add	r2, r8
 80129fa:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80129fe:	2200      	movs	r2, #0
 8012a00:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012a04:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012a08:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012a0c:	1a89      	subs	r1, r1, r2
 8012a0e:	4588      	cmp	r8, r1
 8012a10:	bfc4      	itt	gt
 8012a12:	ebac 0102 	subgt.w	r1, ip, r2
 8012a16:	f8ad 102c 	strhgt.w	r1, [sp, #44]	; 0x2c
 8012a1a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8012a1e:	2900      	cmp	r1, #0
 8012a20:	da07      	bge.n	8012a32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xc2>
 8012a22:	f8bd 802e 	ldrh.w	r8, [sp, #46]	; 0x2e
 8012a26:	4441      	add	r1, r8
 8012a28:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012a2c:	2100      	movs	r1, #0
 8012a2e:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8012a32:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8012a36:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	; 0x2e
 8012a3a:	ebae 0e0a 	sub.w	lr, lr, sl
 8012a3e:	4571      	cmp	r1, lr
 8012a40:	bfc4      	itt	gt
 8012a42:	eba0 010a 	subgt.w	r1, r0, sl
 8012a46:	f8ad 102e 	strhgt.w	r1, [sp, #46]	; 0x2e
 8012a4a:	495f      	ldr	r1, [pc, #380]	; (8012bc8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 8012a4c:	7809      	ldrb	r1, [r1, #0]
 8012a4e:	b9a9      	cbnz	r1, 8012a7c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x10c>
 8012a50:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012a54:	45e0      	cmp	r8, ip
 8012a56:	bf14      	ite	ne
 8012a58:	2300      	movne	r3, #0
 8012a5a:	2301      	moveq	r3, #1
 8012a5c:	4648      	mov	r0, r9
 8012a5e:	9202      	str	r2, [sp, #8]
 8012a60:	9305      	str	r3, [sp, #20]
 8012a62:	f7f6 fd60 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012a66:	9a02      	ldr	r2, [sp, #8]
 8012a68:	b160      	cbz	r0, 8012a84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x114>
 8012a6a:	2300      	movs	r3, #0
 8012a6c:	8033      	strh	r3, [r6, #0]
 8012a6e:	8073      	strh	r3, [r6, #2]
 8012a70:	80b3      	strh	r3, [r6, #4]
 8012a72:	4630      	mov	r0, r6
 8012a74:	80f3      	strh	r3, [r6, #6]
 8012a76:	b011      	add	sp, #68	; 0x44
 8012a78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012a7c:	f9bd 802e 	ldrsh.w	r8, [sp, #46]	; 0x2e
 8012a80:	4580      	cmp	r8, r0
 8012a82:	e7e8      	b.n	8012a56 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe6>
 8012a84:	8821      	ldrh	r1, [r4, #0]
 8012a86:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8012a8a:	9304      	str	r3, [sp, #16]
 8012a8c:	1a52      	subs	r2, r2, r1
 8012a8e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8012a92:	9306      	str	r3, [sp, #24]
 8012a94:	b213      	sxth	r3, r2
 8012a96:	9302      	str	r3, [sp, #8]
 8012a98:	8863      	ldrh	r3, [r4, #2]
 8012a9a:	900e      	str	r0, [sp, #56]	; 0x38
 8012a9c:	ebaa 0a03 	sub.w	sl, sl, r3
 8012aa0:	fa0f f38a 	sxth.w	r3, sl
 8012aa4:	9303      	str	r3, [sp, #12]
 8012aa6:	9b02      	ldr	r3, [sp, #8]
 8012aa8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012aac:	9b03      	ldr	r3, [sp, #12]
 8012aae:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012ab2:	9b04      	ldr	r3, [sp, #16]
 8012ab4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012ab8:	a90e      	add	r1, sp, #56	; 0x38
 8012aba:	9b06      	ldr	r3, [sp, #24]
 8012abc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012ac0:	a80c      	add	r0, sp, #48	; 0x30
 8012ac2:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8012ac6:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 8012aca:	f7fa f929 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012ace:	4648      	mov	r0, r9
 8012ad0:	f7fa f8fe 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012ad4:	a80e      	add	r0, sp, #56	; 0x38
 8012ad6:	f7fa f8fb 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012ada:	4b3c      	ldr	r3, [pc, #240]	; (8012bcc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 8012adc:	f9bd 703c 	ldrsh.w	r7, [sp, #60]	; 0x3c
 8012ae0:	881b      	ldrh	r3, [r3, #0]
 8012ae2:	9307      	str	r3, [sp, #28]
 8012ae4:	682b      	ldr	r3, [r5, #0]
 8012ae6:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8012bac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 8012aea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012aec:	4628      	mov	r0, r5
 8012aee:	4798      	blx	r3
 8012af0:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8012af4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8012af8:	4682      	mov	sl, r0
 8012afa:	fb17 2303 	smlabb	r3, r7, r3, r2
 8012afe:	f8d8 0000 	ldr.w	r0, [r8]
 8012b02:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8012b04:	eb02 0443 	add.w	r4, r2, r3, lsl #1
 8012b08:	6803      	ldr	r3, [r0, #0]
 8012b0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012b0c:	4798      	blx	r3
 8012b0e:	9009      	str	r0, [sp, #36]	; 0x24
 8012b10:	f8d8 0000 	ldr.w	r0, [r8]
 8012b14:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8012b18:	6802      	ldr	r2, [r0, #0]
 8012b1a:	9308      	str	r3, [sp, #32]
 8012b1c:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8012b1e:	f9bd 502a 	ldrsh.w	r5, [sp, #42]	; 0x2a
 8012b22:	4790      	blx	r2
 8012b24:	f010 0f01 	tst.w	r0, #1
 8012b28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012b2a:	d011      	beq.n	8012b50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 8012b2c:	f8d8 0000 	ldr.w	r0, [r8]
 8012b30:	6803      	ldr	r3, [r0, #0]
 8012b32:	f8cd b000 	str.w	fp, [sp]
 8012b36:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8012b38:	e899 0006 	ldmia.w	r9, {r1, r2}
 8012b3c:	4623      	mov	r3, r4
 8012b3e:	47a8      	blx	r5
 8012b40:	9b02      	ldr	r3, [sp, #8]
 8012b42:	8033      	strh	r3, [r6, #0]
 8012b44:	9b03      	ldr	r3, [sp, #12]
 8012b46:	8073      	strh	r3, [r6, #2]
 8012b48:	9b04      	ldr	r3, [sp, #16]
 8012b4a:	80b3      	strh	r3, [r6, #4]
 8012b4c:	9b06      	ldr	r3, [sp, #24]
 8012b4e:	e790      	b.n	8012a72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x102>
 8012b50:	9a08      	ldr	r2, [sp, #32]
 8012b52:	fb0a f505 	mul.w	r5, sl, r5
 8012b56:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 8012b5a:	9a05      	ldr	r2, [sp, #20]
 8012b5c:	441d      	add	r5, r3
 8012b5e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8012b62:	b162      	cbz	r2, 8012b7e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8012b64:	9a07      	ldr	r2, [sp, #28]
 8012b66:	4297      	cmp	r7, r2
 8012b68:	d109      	bne.n	8012b7e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8012b6a:	f8d8 0000 	ldr.w	r0, [r8]
 8012b6e:	6802      	ldr	r2, [r0, #0]
 8012b70:	fb03 f30a 	mul.w	r3, r3, sl
 8012b74:	6b57      	ldr	r7, [r2, #52]	; 0x34
 8012b76:	4621      	mov	r1, r4
 8012b78:	462a      	mov	r2, r5
 8012b7a:	47b8      	blx	r7
 8012b7c:	e7e0      	b.n	8012b40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8012b7e:	437b      	muls	r3, r7
 8012b80:	f8df b028 	ldr.w	fp, [pc, #40]	; 8012bac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 8012b84:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 8012b88:	007f      	lsls	r7, r7, #1
 8012b8a:	4544      	cmp	r4, r8
 8012b8c:	d2d8      	bcs.n	8012b40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8012b8e:	f8db 0000 	ldr.w	r0, [fp]
 8012b92:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8012b96:	6802      	ldr	r2, [r0, #0]
 8012b98:	4621      	mov	r1, r4
 8012b9a:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 8012b9e:	005b      	lsls	r3, r3, #1
 8012ba0:	462a      	mov	r2, r5
 8012ba2:	47c8      	blx	r9
 8012ba4:	4455      	add	r5, sl
 8012ba6:	443c      	add	r4, r7
 8012ba8:	e7ef      	b.n	8012b8a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 8012baa:	bf00      	nop
 8012bac:	2000a600 	.word	0x2000a600
 8012bb0:	0801fbb6 	.word	0x0801fbb6
 8012bb4:	08020420 	.word	0x08020420
 8012bb8:	0801fc68 	.word	0x0801fc68
 8012bbc:	0801fb68 	.word	0x0801fb68
 8012bc0:	2000a5f4 	.word	0x2000a5f4
 8012bc4:	2000a5f6 	.word	0x2000a5f6
 8012bc8:	2000a5f8 	.word	0x2000a5f8
 8012bcc:	2000a5fa 	.word	0x2000a5fa

08012bd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8012bd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012bd4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8012bd8:	9e08      	ldr	r6, [sp, #32]
 8012bda:	4688      	mov	r8, r1
 8012bdc:	4614      	mov	r4, r2
 8012bde:	461d      	mov	r5, r3
 8012be0:	2f00      	cmp	r7, #0
 8012be2:	f000 80b3 	beq.w	8012d4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012be6:	4618      	mov	r0, r3
 8012be8:	f7f6 fc9d 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012bec:	2800      	cmp	r0, #0
 8012bee:	f040 80ad 	bne.w	8012d4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012bf2:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012bf6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012bfa:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8012bfe:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8012c02:	fb04 1303 	mla	r3, r4, r3, r1
 8012c06:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8012c0a:	4365      	muls	r5, r4
 8012c0c:	2fff      	cmp	r7, #255	; 0xff
 8012c0e:	eba4 0200 	sub.w	r2, r4, r0
 8012c12:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8012c16:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8012c1a:	d04b      	beq.n	8012cb4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8012c1c:	b2bc      	uxth	r4, r7
 8012c1e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8012c22:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8012c26:	fa5f f788 	uxtb.w	r7, r8
 8012c2a:	b2f3      	uxtb	r3, r6
 8012c2c:	0040      	lsls	r0, r0, #1
 8012c2e:	fb0e fe04 	mul.w	lr, lr, r4
 8012c32:	4367      	muls	r7, r4
 8012c34:	4363      	muls	r3, r4
 8012c36:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8012c3a:	fa1f fc8c 	uxth.w	ip, ip
 8012c3e:	42a9      	cmp	r1, r5
 8012c40:	f080 8084 	bcs.w	8012d4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012c44:	eb01 0900 	add.w	r9, r1, r0
 8012c48:	4549      	cmp	r1, r9
 8012c4a:	d231      	bcs.n	8012cb0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8012c4c:	880a      	ldrh	r2, [r1, #0]
 8012c4e:	1214      	asrs	r4, r2, #8
 8012c50:	10d6      	asrs	r6, r2, #3
 8012c52:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8012c56:	00d2      	lsls	r2, r2, #3
 8012c58:	b2d2      	uxtb	r2, r2
 8012c5a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8012c5e:	fb14 f40c 	smulbb	r4, r4, ip
 8012c62:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012c66:	4474      	add	r4, lr
 8012c68:	fb12 f20c 	smulbb	r2, r2, ip
 8012c6c:	b2a4      	uxth	r4, r4
 8012c6e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012c72:	441a      	add	r2, r3
 8012c74:	b292      	uxth	r2, r2
 8012c76:	f104 0a01 	add.w	sl, r4, #1
 8012c7a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8012c7e:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8012c82:	fb16 f60c 	smulbb	r6, r6, ip
 8012c86:	f102 0a01 	add.w	sl, r2, #1
 8012c8a:	443e      	add	r6, r7
 8012c8c:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8012c90:	b2b6      	uxth	r6, r6
 8012c92:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8012c96:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012c9a:	4322      	orrs	r2, r4
 8012c9c:	1c74      	adds	r4, r6, #1
 8012c9e:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8012ca2:	0976      	lsrs	r6, r6, #5
 8012ca4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012ca8:	4332      	orrs	r2, r6
 8012caa:	f821 2b02 	strh.w	r2, [r1], #2
 8012cae:	e7cb      	b.n	8012c48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8012cb0:	4441      	add	r1, r8
 8012cb2:	e7c4      	b.n	8012c3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8012cb4:	4f26      	ldr	r7, [pc, #152]	; (8012d50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8012cb6:	0973      	lsrs	r3, r6, #5
 8012cb8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012cbc:	ea08 0707 	and.w	r7, r8, r7
 8012cc0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012cc4:	433b      	orrs	r3, r7
 8012cc6:	4333      	orrs	r3, r6
 8012cc8:	07e6      	lsls	r6, r4, #31
 8012cca:	b29b      	uxth	r3, r3
 8012ccc:	d50b      	bpl.n	8012ce6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8012cce:	0040      	lsls	r0, r0, #1
 8012cd0:	0052      	lsls	r2, r2, #1
 8012cd2:	42a9      	cmp	r1, r5
 8012cd4:	d23a      	bcs.n	8012d4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012cd6:	180c      	adds	r4, r1, r0
 8012cd8:	42a1      	cmp	r1, r4
 8012cda:	d202      	bcs.n	8012ce2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8012cdc:	f821 3b02 	strh.w	r3, [r1], #2
 8012ce0:	e7fa      	b.n	8012cd8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8012ce2:	4411      	add	r1, r2
 8012ce4:	e7f5      	b.n	8012cd2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8012ce6:	078f      	lsls	r7, r1, #30
 8012ce8:	d008      	beq.n	8012cfc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8012cea:	0066      	lsls	r6, r4, #1
 8012cec:	460a      	mov	r2, r1
 8012cee:	42aa      	cmp	r2, r5
 8012cf0:	d202      	bcs.n	8012cf8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8012cf2:	8013      	strh	r3, [r2, #0]
 8012cf4:	4432      	add	r2, r6
 8012cf6:	e7fa      	b.n	8012cee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8012cf8:	3102      	adds	r1, #2
 8012cfa:	3801      	subs	r0, #1
 8012cfc:	07c6      	lsls	r6, r0, #31
 8012cfe:	d50b      	bpl.n	8012d18 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8012d00:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8012d04:	3a01      	subs	r2, #1
 8012d06:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8012d0a:	0066      	lsls	r6, r4, #1
 8012d0c:	42aa      	cmp	r2, r5
 8012d0e:	d202      	bcs.n	8012d16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8012d10:	8013      	strh	r3, [r2, #0]
 8012d12:	4432      	add	r2, r6
 8012d14:	e7fa      	b.n	8012d0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8012d16:	3801      	subs	r0, #1
 8012d18:	b1c0      	cbz	r0, 8012d4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012d1a:	1040      	asrs	r0, r0, #1
 8012d1c:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8012d20:	0080      	lsls	r0, r0, #2
 8012d22:	0064      	lsls	r4, r4, #1
 8012d24:	42a9      	cmp	r1, r5
 8012d26:	d211      	bcs.n	8012d4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8012d28:	078a      	lsls	r2, r1, #30
 8012d2a:	d006      	beq.n	8012d3a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8012d2c:	4b09      	ldr	r3, [pc, #36]	; (8012d54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8012d2e:	4a0a      	ldr	r2, [pc, #40]	; (8012d58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8012d30:	480a      	ldr	r0, [pc, #40]	; (8012d5c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8012d32:	f240 4137 	movw	r1, #1079	; 0x437
 8012d36:	f008 ffdd 	bl	801bcf4 <__assert_func>
 8012d3a:	180e      	adds	r6, r1, r0
 8012d3c:	460a      	mov	r2, r1
 8012d3e:	42b2      	cmp	r2, r6
 8012d40:	d202      	bcs.n	8012d48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8012d42:	f842 3b04 	str.w	r3, [r2], #4
 8012d46:	e7fa      	b.n	8012d3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8012d48:	4421      	add	r1, r4
 8012d4a:	e7eb      	b.n	8012d24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8012d4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012d50:	00fff800 	.word	0x00fff800
 8012d54:	0801fa19 	.word	0x0801fa19
 8012d58:	0802006c 	.word	0x0802006c
 8012d5c:	0801fc68 	.word	0x0801fc68

08012d60 <_ZN8touchgfx8LCD16bppC1Ev>:
 8012d60:	2200      	movs	r2, #0
 8012d62:	4910      	ldr	r1, [pc, #64]	; (8012da4 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012d64:	6042      	str	r2, [r0, #4]
 8012d66:	6001      	str	r1, [r0, #0]
 8012d68:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8012d6c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012d70:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012d74:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8012d78:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012d7c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012d80:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012d84:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8012d88:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012d8c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012d90:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012d94:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8012d98:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012d9c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012da0:	4770      	bx	lr
 8012da2:	bf00      	nop
 8012da4:	0802001c 	.word	0x0802001c

08012da8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012dac:	460d      	mov	r5, r1
 8012dae:	b08d      	sub	sp, #52	; 0x34
 8012db0:	4604      	mov	r4, r0
 8012db2:	6808      	ldr	r0, [r1, #0]
 8012db4:	6849      	ldr	r1, [r1, #4]
 8012db6:	4699      	mov	r9, r3
 8012db8:	ab08      	add	r3, sp, #32
 8012dba:	c303      	stmia	r3!, {r0, r1}
 8012dbc:	6810      	ldr	r0, [r2, #0]
 8012dbe:	6851      	ldr	r1, [r2, #4]
 8012dc0:	ab0a      	add	r3, sp, #40	; 0x28
 8012dc2:	c303      	stmia	r3!, {r0, r1}
 8012dc4:	a808      	add	r0, sp, #32
 8012dc6:	f7f9 ff83 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012dca:	4629      	mov	r1, r5
 8012dcc:	a80a      	add	r0, sp, #40	; 0x28
 8012dce:	f7f9 ffa7 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012dd2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012dd6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8012dda:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012dde:	4d63      	ldr	r5, [pc, #396]	; (8012f6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012de0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012de4:	6828      	ldr	r0, [r5, #0]
 8012de6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8012dea:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012dee:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012df2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8012df6:	440a      	add	r2, r1
 8012df8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012dfc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012e00:	4413      	add	r3, r2
 8012e02:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012e06:	6803      	ldr	r3, [r0, #0]
 8012e08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012e0a:	4798      	blx	r3
 8012e0c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012e10:	d119      	bne.n	8012e46 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8012e12:	f010 0f20 	tst.w	r0, #32
 8012e16:	6828      	ldr	r0, [r5, #0]
 8012e18:	d018      	beq.n	8012e4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8012e1a:	2500      	movs	r5, #0
 8012e1c:	6801      	ldr	r1, [r0, #0]
 8012e1e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012e22:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012e26:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8012e2a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8012e2e:	9502      	str	r5, [sp, #8]
 8012e30:	b2b6      	uxth	r6, r6
 8012e32:	fa1f f588 	uxth.w	r5, r8
 8012e36:	9601      	str	r6, [sp, #4]
 8012e38:	9500      	str	r5, [sp, #0]
 8012e3a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8012e3c:	4621      	mov	r1, r4
 8012e3e:	47a8      	blx	r5
 8012e40:	b00d      	add	sp, #52	; 0x34
 8012e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e46:	f010 0f40 	tst.w	r0, #64	; 0x40
 8012e4a:	e7e4      	b.n	8012e16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012e4c:	6803      	ldr	r3, [r0, #0]
 8012e4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012e50:	4798      	blx	r3
 8012e52:	4947      	ldr	r1, [pc, #284]	; (8012f70 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8012e54:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012e58:	880b      	ldrh	r3, [r1, #0]
 8012e5a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8012e5e:	fb03 5202 	mla	r2, r3, r2, r5
 8012e62:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012e66:	4373      	muls	r3, r6
 8012e68:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012e6c:	9307      	str	r3, [sp, #28]
 8012e6e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8012e72:	9306      	str	r3, [sp, #24]
 8012e74:	468a      	mov	sl, r1
 8012e76:	9b07      	ldr	r3, [sp, #28]
 8012e78:	4298      	cmp	r0, r3
 8012e7a:	d270      	bcs.n	8012f5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8012e7c:	9b06      	ldr	r3, [sp, #24]
 8012e7e:	4621      	mov	r1, r4
 8012e80:	eb00 0b03 	add.w	fp, r0, r3
 8012e84:	4558      	cmp	r0, fp
 8012e86:	d25d      	bcs.n	8012f44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8012e88:	f851 4b04 	ldr.w	r4, [r1], #4
 8012e8c:	0e23      	lsrs	r3, r4, #24
 8012e8e:	d014      	beq.n	8012eba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012e90:	2bff      	cmp	r3, #255	; 0xff
 8012e92:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8012e96:	d112      	bne.n	8012ebe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012e98:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012e9c:	d10f      	bne.n	8012ebe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012e9e:	0963      	lsrs	r3, r4, #5
 8012ea0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8012ea4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012ea8:	f02c 0c07 	bic.w	ip, ip, #7
 8012eac:	ea43 0c0c 	orr.w	ip, r3, ip
 8012eb0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012eb4:	ea4c 0404 	orr.w	r4, ip, r4
 8012eb8:	8004      	strh	r4, [r0, #0]
 8012eba:	3002      	adds	r0, #2
 8012ebc:	e7e2      	b.n	8012e84 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8012ebe:	fb09 f303 	mul.w	r3, r9, r3
 8012ec2:	8807      	ldrh	r7, [r0, #0]
 8012ec4:	1c5a      	adds	r2, r3, #1
 8012ec6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8012eca:	1212      	asrs	r2, r2, #8
 8012ecc:	123e      	asrs	r6, r7, #8
 8012ece:	b293      	uxth	r3, r2
 8012ed0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8012ed4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012ed8:	43d2      	mvns	r2, r2
 8012eda:	b2d2      	uxtb	r2, r2
 8012edc:	10fd      	asrs	r5, r7, #3
 8012ede:	fb1e fe03 	smulbb	lr, lr, r3
 8012ee2:	00ff      	lsls	r7, r7, #3
 8012ee4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8012ee8:	fb06 e602 	mla	r6, r6, r2, lr
 8012eec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012ef0:	b2ff      	uxtb	r7, r7
 8012ef2:	fa5f fc8c 	uxtb.w	ip, ip
 8012ef6:	b2e4      	uxtb	r4, r4
 8012ef8:	b2b6      	uxth	r6, r6
 8012efa:	fb1c fc03 	smulbb	ip, ip, r3
 8012efe:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8012f02:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8012f06:	fb14 f403 	smulbb	r4, r4, r3
 8012f0a:	fb05 c502 	mla	r5, r5, r2, ip
 8012f0e:	f106 0e01 	add.w	lr, r6, #1
 8012f12:	fb07 4702 	mla	r7, r7, r2, r4
 8012f16:	b2ad      	uxth	r5, r5
 8012f18:	b2bf      	uxth	r7, r7
 8012f1a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8012f1e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8012f22:	f105 0c01 	add.w	ip, r5, #1
 8012f26:	1c7e      	adds	r6, r7, #1
 8012f28:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8012f2c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8012f30:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012f34:	096d      	lsrs	r5, r5, #5
 8012f36:	ea46 060e 	orr.w	r6, r6, lr
 8012f3a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012f3e:	432e      	orrs	r6, r5
 8012f40:	8006      	strh	r6, [r0, #0]
 8012f42:	e7ba      	b.n	8012eba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012f44:	f8ba 3000 	ldrh.w	r3, [sl]
 8012f48:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8012f4c:	eba3 0308 	sub.w	r3, r3, r8
 8012f50:	eba4 0408 	sub.w	r4, r4, r8
 8012f54:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012f58:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8012f5c:	e78b      	b.n	8012e76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8012f5e:	4b03      	ldr	r3, [pc, #12]	; (8012f6c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012f60:	6818      	ldr	r0, [r3, #0]
 8012f62:	6803      	ldr	r3, [r0, #0]
 8012f64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012f66:	4798      	blx	r3
 8012f68:	e76a      	b.n	8012e40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8012f6a:	bf00      	nop
 8012f6c:	2000a600 	.word	0x2000a600
 8012f70:	2000a5fa 	.word	0x2000a5fa

08012f74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8012f74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012f78:	460c      	mov	r4, r1
 8012f7a:	b085      	sub	sp, #20
 8012f7c:	6810      	ldr	r0, [r2, #0]
 8012f7e:	6851      	ldr	r1, [r2, #4]
 8012f80:	466d      	mov	r5, sp
 8012f82:	c503      	stmia	r5!, {r0, r1}
 8012f84:	6818      	ldr	r0, [r3, #0]
 8012f86:	6859      	ldr	r1, [r3, #4]
 8012f88:	4616      	mov	r6, r2
 8012f8a:	c503      	stmia	r5!, {r0, r1}
 8012f8c:	4668      	mov	r0, sp
 8012f8e:	f7f9 fe9f 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012f92:	4631      	mov	r1, r6
 8012f94:	a802      	add	r0, sp, #8
 8012f96:	f7f9 fec3 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012f9a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8012f9e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8012fa2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8012fa6:	4d28      	ldr	r5, [pc, #160]	; (8013048 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8012fa8:	4e28      	ldr	r6, [pc, #160]	; (801304c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8012faa:	6828      	ldr	r0, [r5, #0]
 8012fac:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012fb0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8012fb4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012fb8:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012fbc:	f8bd 1000 	ldrh.w	r1, [sp]
 8012fc0:	440a      	add	r2, r1
 8012fc2:	f8ad 2008 	strh.w	r2, [sp, #8]
 8012fc6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012fca:	4413      	add	r3, r2
 8012fcc:	f8ad 300a 	strh.w	r3, [sp, #10]
 8012fd0:	6803      	ldr	r3, [r0, #0]
 8012fd2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012fd4:	4798      	blx	r3
 8012fd6:	8833      	ldrh	r3, [r6, #0]
 8012fd8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8012fdc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8012fe0:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8013050 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8012fe4:	fb03 1202 	mla	r2, r3, r2, r1
 8012fe8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012fec:	fb08 f303 	mul.w	r3, r8, r3
 8012ff0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012ff4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8012ff8:	4298      	cmp	r0, r3
 8012ffa:	d21d      	bcs.n	8013038 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8012ffc:	eb00 080c 	add.w	r8, r0, ip
 8013000:	4540      	cmp	r0, r8
 8013002:	d20f      	bcs.n	8013024 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8013004:	f854 1b04 	ldr.w	r1, [r4], #4
 8013008:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801300c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8013010:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013014:	ea42 0209 	orr.w	r2, r2, r9
 8013018:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801301c:	430a      	orrs	r2, r1
 801301e:	f820 2b02 	strh.w	r2, [r0], #2
 8013022:	e7ed      	b.n	8013000 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8013024:	8832      	ldrh	r2, [r6, #0]
 8013026:	1bd2      	subs	r2, r2, r7
 8013028:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801302c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8013030:	1bd2      	subs	r2, r2, r7
 8013032:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8013036:	e7df      	b.n	8012ff8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8013038:	6828      	ldr	r0, [r5, #0]
 801303a:	6803      	ldr	r3, [r0, #0]
 801303c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801303e:	4798      	blx	r3
 8013040:	b005      	add	sp, #20
 8013042:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013046:	bf00      	nop
 8013048:	2000a600 	.word	0x2000a600
 801304c:	2000a5fa 	.word	0x2000a5fa
 8013050:	fffff800 	.word	0xfffff800

08013054 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8013054:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013058:	460e      	mov	r6, r1
 801305a:	b08e      	sub	sp, #56	; 0x38
 801305c:	4604      	mov	r4, r0
 801305e:	6808      	ldr	r0, [r1, #0]
 8013060:	6849      	ldr	r1, [r1, #4]
 8013062:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801323c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8013066:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8013240 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801306a:	461d      	mov	r5, r3
 801306c:	ab0a      	add	r3, sp, #40	; 0x28
 801306e:	c303      	stmia	r3!, {r0, r1}
 8013070:	6810      	ldr	r0, [r2, #0]
 8013072:	6851      	ldr	r1, [r2, #4]
 8013074:	ab0c      	add	r3, sp, #48	; 0x30
 8013076:	c303      	stmia	r3!, {r0, r1}
 8013078:	a80a      	add	r0, sp, #40	; 0x28
 801307a:	f7f9 fe29 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801307e:	4631      	mov	r1, r6
 8013080:	a80c      	add	r0, sp, #48	; 0x30
 8013082:	f7f9 fe4d 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013086:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801308a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801308e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8013092:	f8d8 0000 	ldr.w	r0, [r8]
 8013096:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801309a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801309e:	fb11 2103 	smlabb	r1, r1, r3, r2
 80130a2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80130a6:	440c      	add	r4, r1
 80130a8:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80130ac:	440a      	add	r2, r1
 80130ae:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80130b2:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 80130b6:	4413      	add	r3, r2
 80130b8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80130bc:	6803      	ldr	r3, [r0, #0]
 80130be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80130c0:	4798      	blx	r3
 80130c2:	2dff      	cmp	r5, #255	; 0xff
 80130c4:	d124      	bne.n	8013110 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80130c6:	f010 0f01 	tst.w	r0, #1
 80130ca:	f8d8 0000 	ldr.w	r0, [r8]
 80130ce:	d022      	beq.n	8013116 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80130d0:	2100      	movs	r1, #0
 80130d2:	f8d0 c000 	ldr.w	ip, [r0]
 80130d6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80130da:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80130de:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80130e2:	f04f 0e01 	mov.w	lr, #1
 80130e6:	f8cd e018 	str.w	lr, [sp, #24]
 80130ea:	f8b9 e000 	ldrh.w	lr, [r9]
 80130ee:	9503      	str	r5, [sp, #12]
 80130f0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80130f4:	b2b6      	uxth	r6, r6
 80130f6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80130fa:	9102      	str	r1, [sp, #8]
 80130fc:	b2bf      	uxth	r7, r7
 80130fe:	9601      	str	r6, [sp, #4]
 8013100:	9700      	str	r7, [sp, #0]
 8013102:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8013106:	4621      	mov	r1, r4
 8013108:	47a8      	blx	r5
 801310a:	b00e      	add	sp, #56	; 0x38
 801310c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013110:	f010 0f04 	tst.w	r0, #4
 8013114:	e7d9      	b.n	80130ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8013116:	6803      	ldr	r3, [r0, #0]
 8013118:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801311a:	4798      	blx	r3
 801311c:	f8b9 3000 	ldrh.w	r3, [r9]
 8013120:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8013124:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8013128:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801312c:	fb03 1202 	mla	r2, r3, r2, r1
 8013130:	ebac 0c07 	sub.w	ip, ip, r7
 8013134:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013138:	435e      	muls	r6, r3
 801313a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801313e:	2dff      	cmp	r5, #255	; 0xff
 8013140:	eba3 0707 	sub.w	r7, r3, r7
 8013144:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013148:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801314c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8013150:	d049      	beq.n	80131e6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8013152:	43eb      	mvns	r3, r5
 8013154:	fa1f f985 	uxth.w	r9, r5
 8013158:	b2db      	uxtb	r3, r3
 801315a:	42b0      	cmp	r0, r6
 801315c:	d266      	bcs.n	801322c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801315e:	eb00 0a0e 	add.w	sl, r0, lr
 8013162:	4550      	cmp	r0, sl
 8013164:	4621      	mov	r1, r4
 8013166:	f104 0403 	add.w	r4, r4, #3
 801316a:	d25b      	bcs.n	8013224 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801316c:	8802      	ldrh	r2, [r0, #0]
 801316e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8013172:	ea4f 2822 	mov.w	r8, r2, asr #8
 8013176:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801317a:	fb11 f109 	smulbb	r1, r1, r9
 801317e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8013182:	10d5      	asrs	r5, r2, #3
 8013184:	fb08 1803 	mla	r8, r8, r3, r1
 8013188:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801318c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013190:	fb11 f109 	smulbb	r1, r1, r9
 8013194:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8013198:	fb05 1503 	mla	r5, r5, r3, r1
 801319c:	00d2      	lsls	r2, r2, #3
 801319e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80131a2:	b2d2      	uxtb	r2, r2
 80131a4:	fb11 f109 	smulbb	r1, r1, r9
 80131a8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80131ac:	fa1f f888 	uxth.w	r8, r8
 80131b0:	fb02 1203 	mla	r2, r2, r3, r1
 80131b4:	b292      	uxth	r2, r2
 80131b6:	f108 0101 	add.w	r1, r8, #1
 80131ba:	b2ad      	uxth	r5, r5
 80131bc:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80131c0:	1c51      	adds	r1, r2, #1
 80131c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80131c6:	1c69      	adds	r1, r5, #1
 80131c8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80131cc:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80131d0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80131d4:	096d      	lsrs	r5, r5, #5
 80131d6:	ea42 0208 	orr.w	r2, r2, r8
 80131da:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80131de:	432a      	orrs	r2, r5
 80131e0:	f820 2b02 	strh.w	r2, [r0], #2
 80131e4:	e7bd      	b.n	8013162 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80131e6:	4a14      	ldr	r2, [pc, #80]	; (8013238 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80131e8:	42b0      	cmp	r0, r6
 80131ea:	d21f      	bcs.n	801322c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80131ec:	eb00 050e 	add.w	r5, r0, lr
 80131f0:	42a8      	cmp	r0, r5
 80131f2:	4621      	mov	r1, r4
 80131f4:	f104 0403 	add.w	r4, r4, #3
 80131f8:	d210      	bcs.n	801321c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80131fa:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80131fe:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8013202:	00db      	lsls	r3, r3, #3
 8013204:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8013208:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801320c:	430b      	orrs	r3, r1
 801320e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8013212:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8013216:	f820 3b02 	strh.w	r3, [r0], #2
 801321a:	e7e9      	b.n	80131f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801321c:	4438      	add	r0, r7
 801321e:	eb01 040c 	add.w	r4, r1, ip
 8013222:	e7e1      	b.n	80131e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8013224:	4438      	add	r0, r7
 8013226:	eb01 040c 	add.w	r4, r1, ip
 801322a:	e796      	b.n	801315a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801322c:	4b03      	ldr	r3, [pc, #12]	; (801323c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801322e:	6818      	ldr	r0, [r3, #0]
 8013230:	6803      	ldr	r3, [r0, #0]
 8013232:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013234:	4798      	blx	r3
 8013236:	e768      	b.n	801310a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8013238:	fffff800 	.word	0xfffff800
 801323c:	2000a600 	.word	0x2000a600
 8013240:	2000a5fa 	.word	0x2000a5fa

08013244 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8013244:	b570      	push	{r4, r5, r6, lr}
 8013246:	9c04      	ldr	r4, [sp, #16]
 8013248:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801324c:	4605      	mov	r5, r0
 801324e:	4608      	mov	r0, r1
 8013250:	4619      	mov	r1, r3
 8013252:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013256:	2a0d      	cmp	r2, #13
 8013258:	d825      	bhi.n	80132a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 801325a:	e8df f002 	tbb	[pc, r2]
 801325e:	1807      	.short	0x1807
 8013260:	1d1d1d13 	.word	0x1d1d1d13
 8013264:	1d1d1d1d 	.word	0x1d1d1d1d
 8013268:	1d1d1d1d 	.word	0x1d1d1d1d
 801326c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8013270:	682a      	ldr	r2, [r5, #0]
 8013272:	68d6      	ldr	r6, [r2, #12]
 8013274:	4623      	mov	r3, r4
 8013276:	460a      	mov	r2, r1
 8013278:	46b4      	mov	ip, r6
 801327a:	4601      	mov	r1, r0
 801327c:	4628      	mov	r0, r5
 801327e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013282:	4760      	bx	ip
 8013284:	4622      	mov	r2, r4
 8013286:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801328a:	f7ff bd8d 	b.w	8012da8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801328e:	4622      	mov	r2, r4
 8013290:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013294:	f7ff bede 	b.w	8013054 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8013298:	4b03      	ldr	r3, [pc, #12]	; (80132a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801329a:	4a04      	ldr	r2, [pc, #16]	; (80132ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 801329c:	4804      	ldr	r0, [pc, #16]	; (80132b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 801329e:	f240 3159 	movw	r1, #857	; 0x359
 80132a2:	f008 fd27 	bl	801bcf4 <__assert_func>
 80132a6:	bd70      	pop	{r4, r5, r6, pc}
 80132a8:	0801fd2d 	.word	0x0801fd2d
 80132ac:	08020539 	.word	0x08020539
 80132b0:	0801fc68 	.word	0x0801fc68

080132b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80132b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132b8:	b093      	sub	sp, #76	; 0x4c
 80132ba:	880e      	ldrh	r6, [r1, #0]
 80132bc:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80132c0:	4681      	mov	r9, r0
 80132c2:	4688      	mov	r8, r1
 80132c4:	4615      	mov	r5, r2
 80132c6:	b136      	cbz	r6, 80132d6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 80132c8:	4b70      	ldr	r3, [pc, #448]	; (801348c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 80132ca:	4a71      	ldr	r2, [pc, #452]	; (8013490 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 80132cc:	4871      	ldr	r0, [pc, #452]	; (8013494 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 80132ce:	f44f 71c3 	mov.w	r1, #390	; 0x186
 80132d2:	f008 fd0f 	bl	801bcf4 <__assert_func>
 80132d6:	6810      	ldr	r0, [r2, #0]
 80132d8:	6851      	ldr	r1, [r2, #4]
 80132da:	4f6f      	ldr	r7, [pc, #444]	; (8013498 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 80132dc:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 801349c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 80132e0:	ac0e      	add	r4, sp, #56	; 0x38
 80132e2:	c403      	stmia	r4!, {r0, r1}
 80132e4:	6818      	ldr	r0, [r3, #0]
 80132e6:	6859      	ldr	r1, [r3, #4]
 80132e8:	ac10      	add	r4, sp, #64	; 0x40
 80132ea:	c403      	stmia	r4!, {r0, r1}
 80132ec:	a80e      	add	r0, sp, #56	; 0x38
 80132ee:	f7f9 fcef 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80132f2:	4629      	mov	r1, r5
 80132f4:	a810      	add	r0, sp, #64	; 0x40
 80132f6:	f7f9 fd13 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80132fa:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80132fe:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8013302:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8013306:	6838      	ldr	r0, [r7, #0]
 8013308:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801330c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8013310:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013314:	4489      	add	r9, r1
 8013316:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801331a:	440a      	add	r2, r1
 801331c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013320:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013324:	4413      	add	r3, r2
 8013326:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801332a:	6803      	ldr	r3, [r0, #0]
 801332c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801332e:	4798      	blx	r3
 8013330:	f010 0f80 	tst.w	r0, #128	; 0x80
 8013334:	6838      	ldr	r0, [r7, #0]
 8013336:	d01d      	beq.n	8013374 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 8013338:	6802      	ldr	r2, [r0, #0]
 801333a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801333e:	e9cd 6608 	strd	r6, r6, [sp, #32]
 8013342:	210b      	movs	r1, #11
 8013344:	9107      	str	r1, [sp, #28]
 8013346:	f8bb 1000 	ldrh.w	r1, [fp]
 801334a:	9106      	str	r1, [sp, #24]
 801334c:	2101      	movs	r1, #1
 801334e:	e9cd a104 	strd	sl, r1, [sp, #16]
 8013352:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8013356:	9103      	str	r1, [sp, #12]
 8013358:	b2a4      	uxth	r4, r4
 801335a:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 801335e:	9100      	str	r1, [sp, #0]
 8013360:	b2ad      	uxth	r5, r5
 8013362:	9502      	str	r5, [sp, #8]
 8013364:	9401      	str	r4, [sp, #4]
 8013366:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 8013368:	4649      	mov	r1, r9
 801336a:	4642      	mov	r2, r8
 801336c:	47a0      	blx	r4
 801336e:	b013      	add	sp, #76	; 0x4c
 8013370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013374:	6803      	ldr	r3, [r0, #0]
 8013376:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013378:	4798      	blx	r3
 801337a:	f8bb 3000 	ldrh.w	r3, [fp]
 801337e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8013382:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8013386:	fb03 1202 	mla	r2, r3, r2, r1
 801338a:	435d      	muls	r5, r3
 801338c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013390:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8013394:	920c      	str	r2, [sp, #48]	; 0x30
 8013396:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801339a:	1b12      	subs	r2, r2, r4
 801339c:	920d      	str	r2, [sp, #52]	; 0x34
 801339e:	0062      	lsls	r2, r4, #1
 80133a0:	1b1c      	subs	r4, r3, r4
 80133a2:	0063      	lsls	r3, r4, #1
 80133a4:	920a      	str	r2, [sp, #40]	; 0x28
 80133a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80133a8:	f04f 0e04 	mov.w	lr, #4
 80133ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80133ae:	4298      	cmp	r0, r3
 80133b0:	d266      	bcs.n	8013480 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 80133b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80133b4:	eb00 0b03 	add.w	fp, r0, r3
 80133b8:	4558      	cmp	r0, fp
 80133ba:	d25c      	bcs.n	8013476 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 80133bc:	f819 3b01 	ldrb.w	r3, [r9], #1
 80133c0:	fb1e e303 	smlabb	r3, lr, r3, lr
 80133c4:	f858 2003 	ldr.w	r2, [r8, r3]
 80133c8:	0e11      	lsrs	r1, r2, #24
 80133ca:	d012      	beq.n	80133f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 80133cc:	29ff      	cmp	r1, #255	; 0xff
 80133ce:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80133d2:	d110      	bne.n	80133f6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 80133d4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80133d8:	d10d      	bne.n	80133f6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 80133da:	0953      	lsrs	r3, r2, #5
 80133dc:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80133e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80133e4:	f027 0707 	bic.w	r7, r7, #7
 80133e8:	431f      	orrs	r7, r3
 80133ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80133ee:	433a      	orrs	r2, r7
 80133f0:	8002      	strh	r2, [r0, #0]
 80133f2:	3002      	adds	r0, #2
 80133f4:	e7e0      	b.n	80133b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 80133f6:	fb0a f101 	mul.w	r1, sl, r1
 80133fa:	8806      	ldrh	r6, [r0, #0]
 80133fc:	1c4b      	adds	r3, r1, #1
 80133fe:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8013402:	1235      	asrs	r5, r6, #8
 8013404:	10f4      	asrs	r4, r6, #3
 8013406:	121b      	asrs	r3, r3, #8
 8013408:	00f6      	lsls	r6, r6, #3
 801340a:	b299      	uxth	r1, r3
 801340c:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8013410:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8013414:	b2f6      	uxtb	r6, r6
 8013416:	43db      	mvns	r3, r3
 8013418:	b2d2      	uxtb	r2, r2
 801341a:	b2db      	uxtb	r3, r3
 801341c:	fb1c fc01 	smulbb	ip, ip, r1
 8013420:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8013424:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8013428:	fb12 f201 	smulbb	r2, r2, r1
 801342c:	fb05 c503 	mla	r5, r5, r3, ip
 8013430:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8013434:	b2ff      	uxtb	r7, r7
 8013436:	fb06 2203 	mla	r2, r6, r3, r2
 801343a:	b2ad      	uxth	r5, r5
 801343c:	fb17 f701 	smulbb	r7, r7, r1
 8013440:	b292      	uxth	r2, r2
 8013442:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8013446:	fb04 7403 	mla	r4, r4, r3, r7
 801344a:	f105 0c01 	add.w	ip, r5, #1
 801344e:	1c57      	adds	r7, r2, #1
 8013450:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8013454:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8013458:	b2a4      	uxth	r4, r4
 801345a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801345e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8013462:	433d      	orrs	r5, r7
 8013464:	1c67      	adds	r7, r4, #1
 8013466:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801346a:	0964      	lsrs	r4, r4, #5
 801346c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8013470:	4325      	orrs	r5, r4
 8013472:	8005      	strh	r5, [r0, #0]
 8013474:	e7bd      	b.n	80133f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8013476:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013478:	4418      	add	r0, r3
 801347a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801347c:	4499      	add	r9, r3
 801347e:	e795      	b.n	80133ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 8013480:	4b05      	ldr	r3, [pc, #20]	; (8013498 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8013482:	6818      	ldr	r0, [r3, #0]
 8013484:	6803      	ldr	r3, [r0, #0]
 8013486:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013488:	4798      	blx	r3
 801348a:	e770      	b.n	801336e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 801348c:	0801fb18 	.word	0x0801fb18
 8013490:	08020277 	.word	0x08020277
 8013494:	0801fc68 	.word	0x0801fc68
 8013498:	2000a600 	.word	0x2000a600
 801349c:	2000a5fa 	.word	0x2000a5fa

080134a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80134a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134a4:	4614      	mov	r4, r2
 80134a6:	880a      	ldrh	r2, [r1, #0]
 80134a8:	b087      	sub	sp, #28
 80134aa:	2a02      	cmp	r2, #2
 80134ac:	4680      	mov	r8, r0
 80134ae:	460d      	mov	r5, r1
 80134b0:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 80134b4:	d006      	beq.n	80134c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 80134b6:	4b63      	ldr	r3, [pc, #396]	; (8013644 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 80134b8:	4a63      	ldr	r2, [pc, #396]	; (8013648 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 80134ba:	4864      	ldr	r0, [pc, #400]	; (801364c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 80134bc:	f240 11dd 	movw	r1, #477	; 0x1dd
 80134c0:	f008 fc18 	bl	801bcf4 <__assert_func>
 80134c4:	2e00      	cmp	r6, #0
 80134c6:	f000 80b9 	beq.w	801363c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 80134ca:	6820      	ldr	r0, [r4, #0]
 80134cc:	6861      	ldr	r1, [r4, #4]
 80134ce:	af02      	add	r7, sp, #8
 80134d0:	c703      	stmia	r7!, {r0, r1}
 80134d2:	6818      	ldr	r0, [r3, #0]
 80134d4:	6859      	ldr	r1, [r3, #4]
 80134d6:	af04      	add	r7, sp, #16
 80134d8:	c703      	stmia	r7!, {r0, r1}
 80134da:	a802      	add	r0, sp, #8
 80134dc:	f7f9 fbf8 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80134e0:	4621      	mov	r1, r4
 80134e2:	a804      	add	r0, sp, #16
 80134e4:	f7f9 fc1c 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80134e8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80134ec:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80134f0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80134f4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80134f8:	fb14 2103 	smlabb	r1, r4, r3, r2
 80134fc:	eb08 0401 	add.w	r4, r8, r1
 8013500:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013504:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8013508:	440a      	add	r2, r1
 801350a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801350e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013512:	4413      	add	r3, r2
 8013514:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013518:	4b4d      	ldr	r3, [pc, #308]	; (8013650 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 801351a:	6818      	ldr	r0, [r3, #0]
 801351c:	6803      	ldr	r3, [r0, #0]
 801351e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013520:	4798      	blx	r3
 8013522:	4b4c      	ldr	r3, [pc, #304]	; (8013654 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 8013524:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8013528:	881a      	ldrh	r2, [r3, #0]
 801352a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801352e:	2eff      	cmp	r6, #255	; 0xff
 8013530:	fb02 c101 	mla	r1, r2, r1, ip
 8013534:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8013538:	fb02 f207 	mul.w	r2, r2, r7
 801353c:	f105 0104 	add.w	r1, r5, #4
 8013540:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8013544:	461d      	mov	r5, r3
 8013546:	d05a      	beq.n	80135fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 8013548:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801354c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013550:	b2b6      	uxth	r6, r6
 8013552:	fa1f fe8e 	uxth.w	lr, lr
 8013556:	9301      	str	r3, [sp, #4]
 8013558:	4282      	cmp	r2, r0
 801355a:	d96a      	bls.n	8013632 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 801355c:	eb00 0b0a 	add.w	fp, r0, sl
 8013560:	4583      	cmp	fp, r0
 8013562:	d940      	bls.n	80135e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 8013564:	f814 3b01 	ldrb.w	r3, [r4], #1
 8013568:	8805      	ldrh	r5, [r0, #0]
 801356a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801356e:	122f      	asrs	r7, r5, #8
 8013570:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013574:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013578:	fb17 f70e 	smulbb	r7, r7, lr
 801357c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013580:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013584:	00ed      	lsls	r5, r5, #3
 8013586:	fb0c 7c06 	mla	ip, ip, r6, r7
 801358a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801358e:	10df      	asrs	r7, r3, #3
 8013590:	b2ed      	uxtb	r5, r5
 8013592:	00db      	lsls	r3, r3, #3
 8013594:	fa1f fc8c 	uxth.w	ip, ip
 8013598:	fb19 f90e 	smulbb	r9, r9, lr
 801359c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80135a0:	b2db      	uxtb	r3, r3
 80135a2:	fb15 f50e 	smulbb	r5, r5, lr
 80135a6:	fb07 9706 	mla	r7, r7, r6, r9
 80135aa:	fb03 5306 	mla	r3, r3, r6, r5
 80135ae:	f10c 0901 	add.w	r9, ip, #1
 80135b2:	b29b      	uxth	r3, r3
 80135b4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80135b8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80135bc:	f103 0c01 	add.w	ip, r3, #1
 80135c0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80135c4:	b2bf      	uxth	r7, r7
 80135c6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80135ca:	ea4c 0c09 	orr.w	ip, ip, r9
 80135ce:	f107 0901 	add.w	r9, r7, #1
 80135d2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80135d6:	097f      	lsrs	r7, r7, #5
 80135d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80135dc:	ea4c 0c07 	orr.w	ip, ip, r7
 80135e0:	f820 cb02 	strh.w	ip, [r0], #2
 80135e4:	e7bc      	b.n	8013560 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80135e6:	9b01      	ldr	r3, [sp, #4]
 80135e8:	881b      	ldrh	r3, [r3, #0]
 80135ea:	eba3 0308 	sub.w	r3, r3, r8
 80135ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80135f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80135f6:	eba3 0308 	sub.w	r3, r3, r8
 80135fa:	441c      	add	r4, r3
 80135fc:	e7ac      	b.n	8013558 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 80135fe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013602:	4282      	cmp	r2, r0
 8013604:	d915      	bls.n	8013632 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8013606:	eb00 060a 	add.w	r6, r0, sl
 801360a:	4286      	cmp	r6, r0
 801360c:	d906      	bls.n	801361c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 801360e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8013612:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8013616:	f820 3b02 	strh.w	r3, [r0], #2
 801361a:	e7f6      	b.n	801360a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 801361c:	882b      	ldrh	r3, [r5, #0]
 801361e:	eba3 0308 	sub.w	r3, r3, r8
 8013622:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013626:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801362a:	eba3 0308 	sub.w	r3, r3, r8
 801362e:	441c      	add	r4, r3
 8013630:	e7e7      	b.n	8013602 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 8013632:	4b07      	ldr	r3, [pc, #28]	; (8013650 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8013634:	6818      	ldr	r0, [r3, #0]
 8013636:	6803      	ldr	r3, [r0, #0]
 8013638:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801363a:	4798      	blx	r3
 801363c:	b007      	add	sp, #28
 801363e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013642:	bf00      	nop
 8013644:	0801fa48 	.word	0x0801fa48
 8013648:	080200e1 	.word	0x080200e1
 801364c:	0801fc68 	.word	0x0801fc68
 8013650:	2000a600 	.word	0x2000a600
 8013654:	2000a5fa 	.word	0x2000a5fa

08013658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8013658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801365c:	f8b1 9000 	ldrh.w	r9, [r1]
 8013660:	b091      	sub	sp, #68	; 0x44
 8013662:	f1b9 0f01 	cmp.w	r9, #1
 8013666:	4604      	mov	r4, r0
 8013668:	460f      	mov	r7, r1
 801366a:	4690      	mov	r8, r2
 801366c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8013670:	d006      	beq.n	8013680 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 8013672:	4b84      	ldr	r3, [pc, #528]	; (8013884 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 8013674:	4a84      	ldr	r2, [pc, #528]	; (8013888 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 8013676:	4885      	ldr	r0, [pc, #532]	; (801388c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 8013678:	f240 212b 	movw	r1, #555	; 0x22b
 801367c:	f008 fb3a 	bl	801bcf4 <__assert_func>
 8013680:	2d00      	cmp	r5, #0
 8013682:	d04f      	beq.n	8013724 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8013684:	6810      	ldr	r0, [r2, #0]
 8013686:	6851      	ldr	r1, [r2, #4]
 8013688:	f8df b208 	ldr.w	fp, [pc, #520]	; 8013894 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 801368c:	ae0c      	add	r6, sp, #48	; 0x30
 801368e:	c603      	stmia	r6!, {r0, r1}
 8013690:	6818      	ldr	r0, [r3, #0]
 8013692:	6859      	ldr	r1, [r3, #4]
 8013694:	ae0e      	add	r6, sp, #56	; 0x38
 8013696:	c603      	stmia	r6!, {r0, r1}
 8013698:	a80c      	add	r0, sp, #48	; 0x30
 801369a:	f7f9 fb19 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801369e:	4641      	mov	r1, r8
 80136a0:	a80e      	add	r0, sp, #56	; 0x38
 80136a2:	f7f9 fb3d 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80136a6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80136aa:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80136ae:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80136b2:	f8db 0000 	ldr.w	r0, [fp]
 80136b6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80136ba:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80136be:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8013898 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 80136c2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80136c6:	440c      	add	r4, r1
 80136c8:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80136cc:	440a      	add	r2, r1
 80136ce:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80136d2:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80136d6:	4413      	add	r3, r2
 80136d8:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80136dc:	6803      	ldr	r3, [r0, #0]
 80136de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80136e0:	4798      	blx	r3
 80136e2:	f010 0f80 	tst.w	r0, #128	; 0x80
 80136e6:	f8db 0000 	ldr.w	r0, [fp]
 80136ea:	d01e      	beq.n	801372a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 80136ec:	2200      	movs	r2, #0
 80136ee:	6801      	ldr	r1, [r0, #0]
 80136f0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80136f4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80136f8:	220b      	movs	r2, #11
 80136fa:	9207      	str	r2, [sp, #28]
 80136fc:	f8b8 2000 	ldrh.w	r2, [r8]
 8013700:	9504      	str	r5, [sp, #16]
 8013702:	e9cd 9205 	strd	r9, r2, [sp, #20]
 8013706:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801370a:	9203      	str	r2, [sp, #12]
 801370c:	fa1f f28a 	uxth.w	r2, sl
 8013710:	9202      	str	r2, [sp, #8]
 8013712:	b2b6      	uxth	r6, r6
 8013714:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013718:	9200      	str	r2, [sp, #0]
 801371a:	9601      	str	r6, [sp, #4]
 801371c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801371e:	463a      	mov	r2, r7
 8013720:	4621      	mov	r1, r4
 8013722:	47a8      	blx	r5
 8013724:	b011      	add	sp, #68	; 0x44
 8013726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801372a:	6803      	ldr	r3, [r0, #0]
 801372c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801372e:	4798      	blx	r3
 8013730:	f8b8 2000 	ldrh.w	r2, [r8]
 8013734:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8013738:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801373c:	2dff      	cmp	r5, #255	; 0xff
 801373e:	fb02 1303 	mla	r3, r2, r3, r1
 8013742:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013746:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801374a:	fb0a fa02 	mul.w	sl, sl, r2
 801374e:	d062      	beq.n	8013816 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 8013750:	ea6f 0c05 	mvn.w	ip, r5
 8013754:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8013758:	930a      	str	r3, [sp, #40]	; 0x28
 801375a:	b2ad      	uxth	r5, r5
 801375c:	fa5f fc8c 	uxtb.w	ip, ip
 8013760:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8013764:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013766:	4298      	cmp	r0, r3
 8013768:	f080 8085 	bcs.w	8013876 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 801376c:	eb00 0b09 	add.w	fp, r0, r9
 8013770:	4558      	cmp	r0, fp
 8013772:	d246      	bcs.n	8013802 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8013774:	f814 eb01 	ldrb.w	lr, [r4], #1
 8013778:	2303      	movs	r3, #3
 801377a:	2204      	movs	r2, #4
 801377c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8013780:	eb07 0a0e 	add.w	sl, r7, lr
 8013784:	8803      	ldrh	r3, [r0, #0]
 8013786:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801378a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801378e:	1219      	asrs	r1, r3, #8
 8013790:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013794:	fb18 f805 	smulbb	r8, r8, r5
 8013798:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801379c:	10da      	asrs	r2, r3, #3
 801379e:	fb01 810c 	mla	r1, r1, ip, r8
 80137a2:	00db      	lsls	r3, r3, #3
 80137a4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80137a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80137ac:	b2db      	uxtb	r3, r3
 80137ae:	fb18 f805 	smulbb	r8, r8, r5
 80137b2:	fb1e fe05 	smulbb	lr, lr, r5
 80137b6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80137ba:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80137be:	b289      	uxth	r1, r1
 80137c0:	fb02 820c 	mla	r2, r2, ip, r8
 80137c4:	fb03 e30c 	mla	r3, r3, ip, lr
 80137c8:	b292      	uxth	r2, r2
 80137ca:	b29b      	uxth	r3, r3
 80137cc:	f101 0801 	add.w	r8, r1, #1
 80137d0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80137d4:	f103 0e01 	add.w	lr, r3, #1
 80137d8:	f102 0801 	add.w	r8, r2, #1
 80137dc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80137e0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80137e4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80137e8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80137ec:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80137f0:	ea4e 0101 	orr.w	r1, lr, r1
 80137f4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80137f8:	ea41 0108 	orr.w	r1, r1, r8
 80137fc:	f820 1b02 	strh.w	r1, [r0], #2
 8013800:	e7b6      	b.n	8013770 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 8013802:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013804:	881b      	ldrh	r3, [r3, #0]
 8013806:	1b9b      	subs	r3, r3, r6
 8013808:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801380c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013810:	1b9b      	subs	r3, r3, r6
 8013812:	441c      	add	r4, r3
 8013814:	e7a6      	b.n	8013764 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 8013816:	491e      	ldr	r1, [pc, #120]	; (8013890 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 8013818:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801381c:	2203      	movs	r2, #3
 801381e:	2504      	movs	r5, #4
 8013820:	4550      	cmp	r0, sl
 8013822:	d228      	bcs.n	8013876 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8013824:	eb00 0c09 	add.w	ip, r0, r9
 8013828:	4560      	cmp	r0, ip
 801382a:	4623      	mov	r3, r4
 801382c:	d219      	bcs.n	8013862 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801382e:	f893 e000 	ldrb.w	lr, [r3]
 8013832:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8013836:	eb07 0b0e 	add.w	fp, r7, lr
 801383a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801383e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8013842:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013846:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801384a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801384e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013852:	ea43 030b 	orr.w	r3, r3, fp
 8013856:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801385a:	3401      	adds	r4, #1
 801385c:	f820 3b02 	strh.w	r3, [r0], #2
 8013860:	e7e2      	b.n	8013828 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 8013862:	f8b8 3000 	ldrh.w	r3, [r8]
 8013866:	1b9b      	subs	r3, r3, r6
 8013868:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801386c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013870:	1b9b      	subs	r3, r3, r6
 8013872:	441c      	add	r4, r3
 8013874:	e7d4      	b.n	8013820 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 8013876:	4b07      	ldr	r3, [pc, #28]	; (8013894 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 8013878:	6818      	ldr	r0, [r3, #0]
 801387a:	6803      	ldr	r3, [r0, #0]
 801387c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801387e:	4798      	blx	r3
 8013880:	e750      	b.n	8013724 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8013882:	bf00      	nop
 8013884:	0801fa96 	.word	0x0801fa96
 8013888:	0802016a 	.word	0x0802016a
 801388c:	0801fc68 	.word	0x0801fc68
 8013890:	fffff800 	.word	0xfffff800
 8013894:	2000a600 	.word	0x2000a600
 8013898:	2000a5fa 	.word	0x2000a5fa

0801389c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801389c:	b430      	push	{r4, r5}
 801389e:	780d      	ldrb	r5, [r1, #0]
 80138a0:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80138a4:	2d01      	cmp	r5, #1
 80138a6:	d00a      	beq.n	80138be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80138a8:	d305      	bcc.n	80138b6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80138aa:	2d02      	cmp	r5, #2
 80138ac:	d10b      	bne.n	80138c6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80138ae:	9402      	str	r4, [sp, #8]
 80138b0:	bc30      	pop	{r4, r5}
 80138b2:	f7ff bdf5 	b.w	80134a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80138b6:	9402      	str	r4, [sp, #8]
 80138b8:	bc30      	pop	{r4, r5}
 80138ba:	f7ff bcfb 	b.w	80132b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80138be:	9402      	str	r4, [sp, #8]
 80138c0:	bc30      	pop	{r4, r5}
 80138c2:	f7ff bec9 	b.w	8013658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80138c6:	bc30      	pop	{r4, r5}
 80138c8:	4770      	bx	lr
	...

080138cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80138cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138d0:	4604      	mov	r4, r0
 80138d2:	b087      	sub	sp, #28
 80138d4:	6810      	ldr	r0, [r2, #0]
 80138d6:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80138da:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8013b14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80138de:	460e      	mov	r6, r1
 80138e0:	6851      	ldr	r1, [r2, #4]
 80138e2:	ad02      	add	r5, sp, #8
 80138e4:	c503      	stmia	r5!, {r0, r1}
 80138e6:	6818      	ldr	r0, [r3, #0]
 80138e8:	6859      	ldr	r1, [r3, #4]
 80138ea:	ad04      	add	r5, sp, #16
 80138ec:	4617      	mov	r7, r2
 80138ee:	c503      	stmia	r5!, {r0, r1}
 80138f0:	a802      	add	r0, sp, #8
 80138f2:	f7f9 f9ed 	bl	800ccd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80138f6:	4639      	mov	r1, r7
 80138f8:	a804      	add	r0, sp, #16
 80138fa:	f7f9 fa11 	bl	800cd20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80138fe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013902:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013906:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801390a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801390e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8013912:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013916:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801391a:	440e      	add	r6, r1
 801391c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8013920:	440a      	add	r2, r1
 8013922:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013926:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801392a:	4413      	add	r3, r2
 801392c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013930:	4b77      	ldr	r3, [pc, #476]	; (8013b10 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013932:	6818      	ldr	r0, [r3, #0]
 8013934:	6803      	ldr	r3, [r0, #0]
 8013936:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013938:	4798      	blx	r3
 801393a:	f8b9 b000 	ldrh.w	fp, [r9]
 801393e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013942:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013946:	fb0b 2303 	mla	r3, fp, r3, r2
 801394a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801394e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013952:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8013956:	fb05 f50b 	mul.w	r5, r5, fp
 801395a:	9300      	str	r3, [sp, #0]
 801395c:	d069      	beq.n	8013a32 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801395e:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8013962:	4558      	cmp	r0, fp
 8013964:	f080 80cc 	bcs.w	8013b00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8013968:	9b00      	ldr	r3, [sp, #0]
 801396a:	18c3      	adds	r3, r0, r3
 801396c:	9301      	str	r3, [sp, #4]
 801396e:	4631      	mov	r1, r6
 8013970:	9b01      	ldr	r3, [sp, #4]
 8013972:	4298      	cmp	r0, r3
 8013974:	d24f      	bcs.n	8013a16 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8013976:	f811 2b01 	ldrb.w	r2, [r1], #1
 801397a:	2a00      	cmp	r2, #0
 801397c:	d048      	beq.n	8013a10 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801397e:	fb0a f202 	mul.w	r2, sl, r2
 8013982:	1c53      	adds	r3, r2, #1
 8013984:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8013988:	121b      	asrs	r3, r3, #8
 801398a:	d041      	beq.n	8013a10 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801398c:	8802      	ldrh	r2, [r0, #0]
 801398e:	f8b4 c000 	ldrh.w	ip, [r4]
 8013992:	b29e      	uxth	r6, r3
 8013994:	1215      	asrs	r5, r2, #8
 8013996:	43db      	mvns	r3, r3
 8013998:	b2db      	uxtb	r3, r3
 801399a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801399e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80139a2:	fb15 f503 	smulbb	r5, r5, r3
 80139a6:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80139aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80139ae:	00d2      	lsls	r2, r2, #3
 80139b0:	fb07 5706 	mla	r7, r7, r6, r5
 80139b4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80139b8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80139bc:	b2d2      	uxtb	r2, r2
 80139be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80139c2:	b2bf      	uxth	r7, r7
 80139c4:	fb1e fe03 	smulbb	lr, lr, r3
 80139c8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80139cc:	fa5f fc8c 	uxtb.w	ip, ip
 80139d0:	fb12 f203 	smulbb	r2, r2, r3
 80139d4:	fb05 e506 	mla	r5, r5, r6, lr
 80139d8:	fb0c 2c06 	mla	ip, ip, r6, r2
 80139dc:	f107 0e01 	add.w	lr, r7, #1
 80139e0:	fa1f fc8c 	uxth.w	ip, ip
 80139e4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80139e8:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80139ec:	f10c 0701 	add.w	r7, ip, #1
 80139f0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80139f4:	b2ad      	uxth	r5, r5
 80139f6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80139fa:	ea47 070e 	orr.w	r7, r7, lr
 80139fe:	f105 0e01 	add.w	lr, r5, #1
 8013a02:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8013a06:	096d      	lsrs	r5, r5, #5
 8013a08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013a0c:	432f      	orrs	r7, r5
 8013a0e:	8007      	strh	r7, [r0, #0]
 8013a10:	3002      	adds	r0, #2
 8013a12:	3402      	adds	r4, #2
 8013a14:	e7ac      	b.n	8013970 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8013a16:	f8b9 3000 	ldrh.w	r3, [r9]
 8013a1a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013a1e:	eba3 0308 	sub.w	r3, r3, r8
 8013a22:	eba6 0608 	sub.w	r6, r6, r8
 8013a26:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013a2a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013a2e:	440e      	add	r6, r1
 8013a30:	e797      	b.n	8013962 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8013a32:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013a36:	42a8      	cmp	r0, r5
 8013a38:	d262      	bcs.n	8013b00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8013a3a:	9b00      	ldr	r3, [sp, #0]
 8013a3c:	4631      	mov	r1, r6
 8013a3e:	eb00 0b03 	add.w	fp, r0, r3
 8013a42:	4558      	cmp	r0, fp
 8013a44:	d24e      	bcs.n	8013ae4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8013a46:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013a4a:	b12b      	cbz	r3, 8013a58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013a4c:	2bff      	cmp	r3, #255	; 0xff
 8013a4e:	f8b4 e000 	ldrh.w	lr, [r4]
 8013a52:	d104      	bne.n	8013a5e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8013a54:	f8a0 e000 	strh.w	lr, [r0]
 8013a58:	3002      	adds	r0, #2
 8013a5a:	3402      	adds	r4, #2
 8013a5c:	e7f1      	b.n	8013a42 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8013a5e:	8802      	ldrh	r2, [r0, #0]
 8013a60:	b29f      	uxth	r7, r3
 8013a62:	1216      	asrs	r6, r2, #8
 8013a64:	43db      	mvns	r3, r3
 8013a66:	b2db      	uxtb	r3, r3
 8013a68:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013a6c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013a70:	fb16 f603 	smulbb	r6, r6, r3
 8013a74:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8013a78:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013a7c:	00d2      	lsls	r2, r2, #3
 8013a7e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013a82:	b2d2      	uxtb	r2, r2
 8013a84:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013a88:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8013a8c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013a90:	fb1a fa03 	smulbb	sl, sl, r3
 8013a94:	fa1f fc8c 	uxth.w	ip, ip
 8013a98:	fb12 f303 	smulbb	r3, r2, r3
 8013a9c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013aa0:	fa5f fe8e 	uxtb.w	lr, lr
 8013aa4:	fb06 a607 	mla	r6, r6, r7, sl
 8013aa8:	f10c 0201 	add.w	r2, ip, #1
 8013aac:	fb0e 3307 	mla	r3, lr, r7, r3
 8013ab0:	b2b6      	uxth	r6, r6
 8013ab2:	b29b      	uxth	r3, r3
 8013ab4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013ab8:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8013abc:	f106 0a01 	add.w	sl, r6, #1
 8013ac0:	f103 0c01 	add.w	ip, r3, #1
 8013ac4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013ac8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013acc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013ad0:	0976      	lsrs	r6, r6, #5
 8013ad2:	ea4c 0c02 	orr.w	ip, ip, r2
 8013ad6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013ada:	ea4c 0c06 	orr.w	ip, ip, r6
 8013ade:	f8a0 c000 	strh.w	ip, [r0]
 8013ae2:	e7b9      	b.n	8013a58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013ae4:	f8b9 3000 	ldrh.w	r3, [r9]
 8013ae8:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013aec:	eba3 0308 	sub.w	r3, r3, r8
 8013af0:	eba6 0608 	sub.w	r6, r6, r8
 8013af4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013af8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013afc:	440e      	add	r6, r1
 8013afe:	e79a      	b.n	8013a36 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8013b00:	4b03      	ldr	r3, [pc, #12]	; (8013b10 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013b02:	6818      	ldr	r0, [r3, #0]
 8013b04:	6803      	ldr	r3, [r0, #0]
 8013b06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b08:	4798      	blx	r3
 8013b0a:	b007      	add	sp, #28
 8013b0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b10:	2000a600 	.word	0x2000a600
 8013b14:	2000a5fa 	.word	0x2000a5fa

08013b18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b1c:	b089      	sub	sp, #36	; 0x24
 8013b1e:	4682      	mov	sl, r0
 8013b20:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013b24:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013b26:	460f      	mov	r7, r1
 8013b28:	4691      	mov	r9, r2
 8013b2a:	4698      	mov	r8, r3
 8013b2c:	2e00      	cmp	r6, #0
 8013b2e:	d03d      	beq.n	8013bac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013b30:	4608      	mov	r0, r1
 8013b32:	f7fb ff7d 	bl	800fa30 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b36:	4605      	mov	r5, r0
 8013b38:	4638      	mov	r0, r7
 8013b3a:	f7fb ffbd 	bl	800fab8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b3e:	f8ad 000e 	strh.w	r0, [sp, #14]
 8013b42:	4638      	mov	r0, r7
 8013b44:	f8ad 9008 	strh.w	r9, [sp, #8]
 8013b48:	f8ad 500c 	strh.w	r5, [sp, #12]
 8013b4c:	f8ad 800a 	strh.w	r8, [sp, #10]
 8013b50:	f7fc f88a 	bl	800fc68 <_ZNK8touchgfx6Bitmap7getDataEv>
 8013b54:	4605      	mov	r5, r0
 8013b56:	4638      	mov	r0, r7
 8013b58:	f7fc f8b8 	bl	800fccc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013b5c:	4681      	mov	r9, r0
 8013b5e:	4638      	mov	r0, r7
 8013b60:	f7fc f90c 	bl	800fd7c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b64:	280b      	cmp	r0, #11
 8013b66:	f200 816f 	bhi.w	8013e48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 8013b6a:	e8df f010 	tbh	[pc, r0, lsl #1]
 8013b6e:	00c3      	.short	0x00c3
 8013b70:	000c00b4 	.word	0x000c00b4
 8013b74:	016d016d 	.word	0x016d016d
 8013b78:	016d016d 	.word	0x016d016d
 8013b7c:	016d016d 	.word	0x016d016d
 8013b80:	016d016d 	.word	0x016d016d
 8013b84:	00bb      	.short	0x00bb
 8013b86:	4bb3      	ldr	r3, [pc, #716]	; (8013e54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 8013b88:	6818      	ldr	r0, [r3, #0]
 8013b8a:	6803      	ldr	r3, [r0, #0]
 8013b8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013b8e:	4798      	blx	r3
 8013b90:	2eff      	cmp	r6, #255	; 0xff
 8013b92:	d121      	bne.n	8013bd8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8013b94:	0683      	lsls	r3, r0, #26
 8013b96:	d41f      	bmi.n	8013bd8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8013b98:	4638      	mov	r0, r7
 8013b9a:	f7fc f82b 	bl	800fbf4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013b9e:	b940      	cbnz	r0, 8013bb2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8013ba0:	4623      	mov	r3, r4
 8013ba2:	aa02      	add	r2, sp, #8
 8013ba4:	4629      	mov	r1, r5
 8013ba6:	4650      	mov	r0, sl
 8013ba8:	f7ff f9e4 	bl	8012f74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013bac:	b009      	add	sp, #36	; 0x24
 8013bae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bb2:	f10d 0818 	add.w	r8, sp, #24
 8013bb6:	4639      	mov	r1, r7
 8013bb8:	4640      	mov	r0, r8
 8013bba:	f7fb ffc1 	bl	800fb40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013bbe:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013bc2:	af04      	add	r7, sp, #16
 8013bc4:	e887 0003 	stmia.w	r7, {r0, r1}
 8013bc8:	4638      	mov	r0, r7
 8013bca:	4621      	mov	r1, r4
 8013bcc:	f7f5 fc68 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 8013bd0:	4638      	mov	r0, r7
 8013bd2:	f7f5 fca8 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013bd6:	b130      	cbz	r0, 8013be6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 8013bd8:	4633      	mov	r3, r6
 8013bda:	4622      	mov	r2, r4
 8013bdc:	a902      	add	r1, sp, #8
 8013bde:	4628      	mov	r0, r5
 8013be0:	f7ff f8e2 	bl	8012da8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013be4:	e7e2      	b.n	8013bac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013be6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013bea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013bee:	4293      	cmp	r3, r2
 8013bf0:	dd12      	ble.n	8013c18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 8013bf2:	1a9b      	subs	r3, r3, r2
 8013bf4:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013bf8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013bfc:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013c00:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013c04:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013c08:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013c0c:	4642      	mov	r2, r8
 8013c0e:	4633      	mov	r3, r6
 8013c10:	a902      	add	r1, sp, #8
 8013c12:	4628      	mov	r0, r5
 8013c14:	f7ff f8c8 	bl	8012da8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013c18:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013c1c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013c20:	4293      	cmp	r3, r2
 8013c22:	dd12      	ble.n	8013c4a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 8013c24:	1a9b      	subs	r3, r3, r2
 8013c26:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013c2a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013c2e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013c32:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013c36:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c3a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013c3e:	23ff      	movs	r3, #255	; 0xff
 8013c40:	4642      	mov	r2, r8
 8013c42:	a902      	add	r1, sp, #8
 8013c44:	4628      	mov	r0, r5
 8013c46:	f7ff f8af 	bl	8012da8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013c4a:	463b      	mov	r3, r7
 8013c4c:	aa02      	add	r2, sp, #8
 8013c4e:	4629      	mov	r1, r5
 8013c50:	4650      	mov	r0, sl
 8013c52:	f7ff f98f 	bl	8012f74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013c56:	88a2      	ldrh	r2, [r4, #4]
 8013c58:	8823      	ldrh	r3, [r4, #0]
 8013c5a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013c5e:	4413      	add	r3, r2
 8013c60:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013c64:	440a      	add	r2, r1
 8013c66:	b29b      	uxth	r3, r3
 8013c68:	b292      	uxth	r2, r2
 8013c6a:	b211      	sxth	r1, r2
 8013c6c:	b218      	sxth	r0, r3
 8013c6e:	4288      	cmp	r0, r1
 8013c70:	dd12      	ble.n	8013c98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 8013c72:	1a9b      	subs	r3, r3, r2
 8013c74:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013c78:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8013c7c:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013c80:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c84:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013c88:	23ff      	movs	r3, #255	; 0xff
 8013c8a:	4642      	mov	r2, r8
 8013c8c:	a902      	add	r1, sp, #8
 8013c8e:	4628      	mov	r0, r5
 8013c90:	f8ad 601a 	strh.w	r6, [sp, #26]
 8013c94:	f7ff f888 	bl	8012da8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013c98:	88e2      	ldrh	r2, [r4, #6]
 8013c9a:	8863      	ldrh	r3, [r4, #2]
 8013c9c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013ca0:	4413      	add	r3, r2
 8013ca2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013ca6:	440a      	add	r2, r1
 8013ca8:	b29b      	uxth	r3, r3
 8013caa:	b292      	uxth	r2, r2
 8013cac:	b211      	sxth	r1, r2
 8013cae:	b218      	sxth	r0, r3
 8013cb0:	4288      	cmp	r0, r1
 8013cb2:	f77f af7b 	ble.w	8013bac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013cb6:	1a9b      	subs	r3, r3, r2
 8013cb8:	f9b4 6000 	ldrsh.w	r6, [r4]
 8013cbc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013cc0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013cc4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013cc8:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013ccc:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013cd0:	23ff      	movs	r3, #255	; 0xff
 8013cd2:	4642      	mov	r2, r8
 8013cd4:	e782      	b.n	8013bdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8013cd6:	4633      	mov	r3, r6
 8013cd8:	4622      	mov	r2, r4
 8013cda:	a902      	add	r1, sp, #8
 8013cdc:	4628      	mov	r0, r5
 8013cde:	f7ff f9b9 	bl	8013054 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8013ce2:	e763      	b.n	8013bac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013ce4:	9600      	str	r6, [sp, #0]
 8013ce6:	4623      	mov	r3, r4
 8013ce8:	aa02      	add	r2, sp, #8
 8013cea:	4649      	mov	r1, r9
 8013cec:	4628      	mov	r0, r5
 8013cee:	f7ff fdd5 	bl	801389c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8013cf2:	e75b      	b.n	8013bac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013cf4:	4638      	mov	r0, r7
 8013cf6:	f7fb ff7d 	bl	800fbf4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013cfa:	b950      	cbnz	r0, 8013d12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8013cfc:	e9cd 6000 	strd	r6, r0, [sp]
 8013d00:	f8da 3000 	ldr.w	r3, [sl]
 8013d04:	aa02      	add	r2, sp, #8
 8013d06:	68de      	ldr	r6, [r3, #12]
 8013d08:	4629      	mov	r1, r5
 8013d0a:	4623      	mov	r3, r4
 8013d0c:	4650      	mov	r0, sl
 8013d0e:	47b0      	blx	r6
 8013d10:	e74c      	b.n	8013bac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013d12:	f10d 0818 	add.w	r8, sp, #24
 8013d16:	4639      	mov	r1, r7
 8013d18:	4640      	mov	r0, r8
 8013d1a:	f7fb ff11 	bl	800fb40 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013d1e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013d22:	af04      	add	r7, sp, #16
 8013d24:	e887 0003 	stmia.w	r7, {r0, r1}
 8013d28:	4638      	mov	r0, r7
 8013d2a:	4621      	mov	r1, r4
 8013d2c:	f7f5 fbb8 	bl	80094a0 <_ZN8touchgfx4RectaNERKS0_>
 8013d30:	4638      	mov	r0, r7
 8013d32:	f7f5 fbf8 	bl	8009526 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013d36:	b138      	cbz	r0, 8013d48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8013d38:	9600      	str	r6, [sp, #0]
 8013d3a:	4623      	mov	r3, r4
 8013d3c:	aa02      	add	r2, sp, #8
 8013d3e:	4649      	mov	r1, r9
 8013d40:	4628      	mov	r0, r5
 8013d42:	f7ff fdc3 	bl	80138cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013d46:	e731      	b.n	8013bac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013d48:	e9cd 6000 	strd	r6, r0, [sp]
 8013d4c:	f8da 3000 	ldr.w	r3, [sl]
 8013d50:	aa02      	add	r2, sp, #8
 8013d52:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8013d56:	4629      	mov	r1, r5
 8013d58:	463b      	mov	r3, r7
 8013d5a:	4650      	mov	r0, sl
 8013d5c:	47d8      	blx	fp
 8013d5e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013d62:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013d66:	4293      	cmp	r3, r2
 8013d68:	dd13      	ble.n	8013d92 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8013d6a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013d6e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013d72:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013d76:	1a9b      	subs	r3, r3, r2
 8013d78:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013d7c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013d80:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013d84:	9600      	str	r6, [sp, #0]
 8013d86:	4643      	mov	r3, r8
 8013d88:	aa02      	add	r2, sp, #8
 8013d8a:	4649      	mov	r1, r9
 8013d8c:	4628      	mov	r0, r5
 8013d8e:	f7ff fd9d 	bl	80138cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013d92:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013d96:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013d9a:	4293      	cmp	r3, r2
 8013d9c:	dd13      	ble.n	8013dc6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8013d9e:	1a9b      	subs	r3, r3, r2
 8013da0:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013da4:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013da8:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013dac:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013db0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013db4:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013db8:	9600      	str	r6, [sp, #0]
 8013dba:	4643      	mov	r3, r8
 8013dbc:	aa02      	add	r2, sp, #8
 8013dbe:	4649      	mov	r1, r9
 8013dc0:	4628      	mov	r0, r5
 8013dc2:	f7ff fd83 	bl	80138cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013dc6:	88a2      	ldrh	r2, [r4, #4]
 8013dc8:	8823      	ldrh	r3, [r4, #0]
 8013dca:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013dce:	4413      	add	r3, r2
 8013dd0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013dd4:	440a      	add	r2, r1
 8013dd6:	b29b      	uxth	r3, r3
 8013dd8:	b292      	uxth	r2, r2
 8013dda:	b211      	sxth	r1, r2
 8013ddc:	b218      	sxth	r0, r3
 8013dde:	4288      	cmp	r0, r1
 8013de0:	dd13      	ble.n	8013e0a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8013de2:	1a9b      	subs	r3, r3, r2
 8013de4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013de8:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8013dec:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013df0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013df4:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013df8:	9600      	str	r6, [sp, #0]
 8013dfa:	4643      	mov	r3, r8
 8013dfc:	aa02      	add	r2, sp, #8
 8013dfe:	4649      	mov	r1, r9
 8013e00:	4628      	mov	r0, r5
 8013e02:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013e06:	f7ff fd61 	bl	80138cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013e0a:	88e2      	ldrh	r2, [r4, #6]
 8013e0c:	8863      	ldrh	r3, [r4, #2]
 8013e0e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013e12:	4413      	add	r3, r2
 8013e14:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013e18:	440a      	add	r2, r1
 8013e1a:	b29b      	uxth	r3, r3
 8013e1c:	b292      	uxth	r2, r2
 8013e1e:	b211      	sxth	r1, r2
 8013e20:	b218      	sxth	r0, r3
 8013e22:	4288      	cmp	r0, r1
 8013e24:	f77f aec2 	ble.w	8013bac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8013e28:	f9b4 7000 	ldrsh.w	r7, [r4]
 8013e2c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013e30:	f8ad 7018 	strh.w	r7, [sp, #24]
 8013e34:	1a9b      	subs	r3, r3, r2
 8013e36:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013e3a:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013e3e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013e42:	9600      	str	r6, [sp, #0]
 8013e44:	4643      	mov	r3, r8
 8013e46:	e779      	b.n	8013d3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8013e48:	4b03      	ldr	r3, [pc, #12]	; (8013e58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8013e4a:	4a04      	ldr	r2, [pc, #16]	; (8013e5c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8013e4c:	4804      	ldr	r0, [pc, #16]	; (8013e60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8013e4e:	21b0      	movs	r1, #176	; 0xb0
 8013e50:	f007 ff50 	bl	801bcf4 <__assert_func>
 8013e54:	2000a600 	.word	0x2000a600
 8013e58:	0801fae4 	.word	0x0801fae4
 8013e5c:	080201f3 	.word	0x080201f3
 8013e60:	0801fc68 	.word	0x0801fc68

08013e64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013e64:	b508      	push	{r3, lr}
 8013e66:	b180      	cbz	r0, 8013e8a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8013e68:	2902      	cmp	r1, #2
 8013e6a:	d014      	beq.n	8013e96 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8013e6c:	2903      	cmp	r1, #3
 8013e6e:	d01d      	beq.n	8013eac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013e70:	2901      	cmp	r1, #1
 8013e72:	d101      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013e74:	2001      	movs	r0, #1
 8013e76:	bd08      	pop	{r3, pc}
 8013e78:	4b0e      	ldr	r3, [pc, #56]	; (8013eb4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013e7a:	8818      	ldrh	r0, [r3, #0]
 8013e7c:	b990      	cbnz	r0, 8013ea4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013e7e:	4b0e      	ldr	r3, [pc, #56]	; (8013eb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8013e80:	4a0e      	ldr	r2, [pc, #56]	; (8013ebc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8013e82:	480f      	ldr	r0, [pc, #60]	; (8013ec0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013e84:	2153      	movs	r1, #83	; 0x53
 8013e86:	f007 ff35 	bl	801bcf4 <__assert_func>
 8013e8a:	2902      	cmp	r1, #2
 8013e8c:	d00e      	beq.n	8013eac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013e8e:	2903      	cmp	r1, #3
 8013e90:	d0f2      	beq.n	8013e78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013e92:	2901      	cmp	r1, #1
 8013e94:	d1ee      	bne.n	8013e74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8013e96:	4b07      	ldr	r3, [pc, #28]	; (8013eb4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013e98:	8818      	ldrh	r0, [r3, #0]
 8013e9a:	2800      	cmp	r0, #0
 8013e9c:	d0ef      	beq.n	8013e7e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8013e9e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013ea2:	e7e8      	b.n	8013e76 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013ea4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013ea8:	4240      	negs	r0, r0
 8013eaa:	e7e4      	b.n	8013e76 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013eac:	f04f 30ff 	mov.w	r0, #4294967295
 8013eb0:	e7e1      	b.n	8013e76 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013eb2:	bf00      	nop
 8013eb4:	2000a5fa 	.word	0x2000a5fa
 8013eb8:	0801fd5e 	.word	0x0801fd5e
 8013ebc:	08020370 	.word	0x08020370
 8013ec0:	0801fda0 	.word	0x0801fda0

08013ec4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013ec4:	b508      	push	{r3, lr}
 8013ec6:	b180      	cbz	r0, 8013eea <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8013ec8:	2902      	cmp	r1, #2
 8013eca:	d014      	beq.n	8013ef6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8013ecc:	2903      	cmp	r1, #3
 8013ece:	d018      	beq.n	8013f02 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013ed0:	2901      	cmp	r1, #1
 8013ed2:	d001      	beq.n	8013ed8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013ed4:	2001      	movs	r0, #1
 8013ed6:	e013      	b.n	8013f00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013ed8:	4b0e      	ldr	r3, [pc, #56]	; (8013f14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013eda:	8818      	ldrh	r0, [r3, #0]
 8013edc:	b970      	cbnz	r0, 8013efc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8013ede:	4b0e      	ldr	r3, [pc, #56]	; (8013f18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8013ee0:	4a0e      	ldr	r2, [pc, #56]	; (8013f1c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8013ee2:	480f      	ldr	r0, [pc, #60]	; (8013f20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8013ee4:	2153      	movs	r1, #83	; 0x53
 8013ee6:	f007 ff05 	bl	801bcf4 <__assert_func>
 8013eea:	2902      	cmp	r1, #2
 8013eec:	d009      	beq.n	8013f02 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013eee:	2903      	cmp	r1, #3
 8013ef0:	d0f0      	beq.n	8013ed4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013ef2:	2901      	cmp	r1, #1
 8013ef4:	d1f0      	bne.n	8013ed8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013ef6:	f04f 30ff 	mov.w	r0, #4294967295
 8013efa:	e001      	b.n	8013f00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013efc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013f00:	bd08      	pop	{r3, pc}
 8013f02:	4b04      	ldr	r3, [pc, #16]	; (8013f14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013f04:	8818      	ldrh	r0, [r3, #0]
 8013f06:	2800      	cmp	r0, #0
 8013f08:	d0e9      	beq.n	8013ede <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8013f0a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013f0e:	4240      	negs	r0, r0
 8013f10:	e7f6      	b.n	8013f00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013f12:	bf00      	nop
 8013f14:	2000a5fa 	.word	0x2000a5fa
 8013f18:	0801fd5e 	.word	0x0801fd5e
 8013f1c:	08020370 	.word	0x08020370
 8013f20:	0801fda0 	.word	0x0801fda0

08013f24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f28:	b099      	sub	sp, #100	; 0x64
 8013f2a:	910b      	str	r1, [sp, #44]	; 0x2c
 8013f2c:	a914      	add	r1, sp, #80	; 0x50
 8013f2e:	e881 000c 	stmia.w	r1, {r2, r3}
 8013f32:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8013f36:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8013f3a:	930a      	str	r3, [sp, #40]	; 0x28
 8013f3c:	f891 900d 	ldrb.w	r9, [r1, #13]
 8013f40:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8013f44:	9311      	str	r3, [sp, #68]	; 0x44
 8013f46:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8013f4a:	930c      	str	r3, [sp, #48]	; 0x30
 8013f4c:	7988      	ldrb	r0, [r1, #6]
 8013f4e:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8013f52:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8013f56:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8013f5a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8013f5e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8013f62:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8013f66:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013f6a:	4303      	orrs	r3, r0
 8013f6c:	9309      	str	r3, [sp, #36]	; 0x24
 8013f6e:	f000 81a1 	beq.w	80142b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013f72:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8013f76:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013f7a:	f891 9007 	ldrb.w	r9, [r1, #7]
 8013f7e:	ea59 0903 	orrs.w	r9, r9, r3
 8013f82:	f000 8197 	beq.w	80142b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013f86:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8013f8a:	b29b      	uxth	r3, r3
 8013f8c:	2e00      	cmp	r6, #0
 8013f8e:	f000 813a 	beq.w	8014206 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8013f92:	1af6      	subs	r6, r6, r3
 8013f94:	b2b6      	uxth	r6, r6
 8013f96:	0433      	lsls	r3, r6, #16
 8013f98:	d502      	bpl.n	8013fa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8013f9a:	1bad      	subs	r5, r5, r6
 8013f9c:	b22d      	sxth	r5, r5
 8013f9e:	2600      	movs	r6, #0
 8013fa0:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013fa4:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8013fa8:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013fac:	428d      	cmp	r5, r1
 8013fae:	b28b      	uxth	r3, r1
 8013fb0:	bfbf      	itttt	lt
 8013fb2:	18f6      	addlt	r6, r6, r3
 8013fb4:	1b75      	sublt	r5, r6, r5
 8013fb6:	b2ae      	uxthlt	r6, r5
 8013fb8:	460d      	movlt	r5, r1
 8013fba:	8891      	ldrh	r1, [r2, #4]
 8013fbc:	440b      	add	r3, r1
 8013fbe:	b21b      	sxth	r3, r3
 8013fc0:	9310      	str	r3, [sp, #64]	; 0x40
 8013fc2:	88d3      	ldrh	r3, [r2, #6]
 8013fc4:	8852      	ldrh	r2, [r2, #2]
 8013fc6:	4413      	add	r3, r2
 8013fc8:	b21b      	sxth	r3, r3
 8013fca:	930f      	str	r3, [sp, #60]	; 0x3c
 8013fcc:	4bbc      	ldr	r3, [pc, #752]	; (80142c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8013fce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013fd0:	f893 b000 	ldrb.w	fp, [r3]
 8013fd4:	f10b 3cff 	add.w	ip, fp, #4294967295
 8013fd8:	f1dc 0300 	rsbs	r3, ip, #0
 8013fdc:	eb43 030c 	adc.w	r3, r3, ip
 8013fe0:	930e      	str	r3, [sp, #56]	; 0x38
 8013fe2:	4629      	mov	r1, r5
 8013fe4:	4653      	mov	r3, sl
 8013fe6:	a814      	add	r0, sp, #80	; 0x50
 8013fe8:	f7f8 fcf7 	bl	800c9da <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8013fec:	4629      	mov	r1, r5
 8013fee:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8013ff2:	4653      	mov	r3, sl
 8013ff4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013ff6:	a814      	add	r0, sp, #80	; 0x50
 8013ff8:	f7f8 fd07 	bl	800ca0a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8013ffc:	a918      	add	r1, sp, #96	; 0x60
 8013ffe:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8014002:	a817      	add	r0, sp, #92	; 0x5c
 8014004:	f7f8 fe22 	bl	800cc4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8014008:	f1ba 0f00 	cmp.w	sl, #0
 801400c:	f040 80fe 	bne.w	801420c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8014010:	f1bb 0f01 	cmp.w	fp, #1
 8014014:	f040 8102 	bne.w	801421c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8014018:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801401a:	b153      	cbz	r3, 8014032 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 801401c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801401e:	2408      	movs	r4, #8
 8014020:	fb94 f3f8 	sdiv	r3, r4, r8
 8014024:	1e5c      	subs	r4, r3, #1
 8014026:	4414      	add	r4, r2
 8014028:	fb94 f4f3 	sdiv	r4, r4, r3
 801402c:	fb14 f403 	smulbb	r4, r4, r3
 8014030:	b2a4      	uxth	r4, r4
 8014032:	b906      	cbnz	r6, 8014036 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8014034:	b16f      	cbz	r7, 8014052 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8014036:	fb07 6304 	mla	r3, r7, r4, r6
 801403a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801403c:	fb08 f303 	mul.w	r3, r8, r3
 8014040:	463a      	mov	r2, r7
 8014042:	f003 0707 	and.w	r7, r3, #7
 8014046:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 801404a:	9328      	str	r3, [sp, #160]	; 0xa0
 801404c:	eba9 0302 	sub.w	r3, r9, r2
 8014050:	930d      	str	r3, [sp, #52]	; 0x34
 8014052:	4651      	mov	r1, sl
 8014054:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014056:	f7ff ff05 	bl	8013e64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801405a:	4651      	mov	r1, sl
 801405c:	4681      	mov	r9, r0
 801405e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014060:	f7ff ff30 	bl	8013ec4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8014064:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014066:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014068:	eba3 0a02 	sub.w	sl, r3, r2
 801406c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801406e:	459a      	cmp	sl, r3
 8014070:	bfa8      	it	ge
 8014072:	469a      	movge	sl, r3
 8014074:	f1ba 0f00 	cmp.w	sl, #0
 8014078:	4683      	mov	fp, r0
 801407a:	f340 811b 	ble.w	80142b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801407e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014080:	1bad      	subs	r5, r5, r6
 8014082:	1b5d      	subs	r5, r3, r5
 8014084:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014086:	429d      	cmp	r5, r3
 8014088:	bfd4      	ite	le
 801408a:	ebc6 0605 	rsble	r6, r6, r5
 801408e:	ebc6 0603 	rsbgt	r6, r6, r3
 8014092:	2e00      	cmp	r6, #0
 8014094:	f340 810e 	ble.w	80142b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014098:	1ba4      	subs	r4, r4, r6
 801409a:	fb08 f304 	mul.w	r3, r8, r4
 801409e:	930f      	str	r3, [sp, #60]	; 0x3c
 80140a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80140a2:	2b00      	cmp	r3, #0
 80140a4:	f040 8114 	bne.w	80142d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80140a8:	4b86      	ldr	r3, [pc, #536]	; (80142c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80140aa:	6818      	ldr	r0, [r3, #0]
 80140ac:	6803      	ldr	r3, [r0, #0]
 80140ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80140b0:	4798      	blx	r3
 80140b2:	2301      	movs	r3, #1
 80140b4:	fa03 f308 	lsl.w	r3, r3, r8
 80140b8:	4a83      	ldr	r2, [pc, #524]	; (80142c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80140ba:	3b01      	subs	r3, #1
 80140bc:	b2db      	uxtb	r3, r3
 80140be:	8811      	ldrh	r1, [r2, #0]
 80140c0:	930e      	str	r3, [sp, #56]	; 0x38
 80140c2:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 80140c6:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80140ca:	fb01 2303 	mla	r3, r1, r3, r2
 80140ce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80140d2:	930a      	str	r3, [sp, #40]	; 0x28
 80140d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80140d6:	f3c3 4307 	ubfx	r3, r3, #16, #8
 80140da:	9313      	str	r3, [sp, #76]	; 0x4c
 80140dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80140de:	0a19      	lsrs	r1, r3, #8
 80140e0:	b2cb      	uxtb	r3, r1
 80140e2:	9312      	str	r3, [sp, #72]	; 0x48
 80140e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80140e6:	b2db      	uxtb	r3, r3
 80140e8:	9311      	str	r3, [sp, #68]	; 0x44
 80140ea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80140ec:	095a      	lsrs	r2, r3, #5
 80140ee:	4b77      	ldr	r3, [pc, #476]	; (80142cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80140f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80140f4:	400b      	ands	r3, r1
 80140f6:	4313      	orrs	r3, r2
 80140f8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80140fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80140fe:	4313      	orrs	r3, r2
 8014100:	b29b      	uxth	r3, r3
 8014102:	9310      	str	r3, [sp, #64]	; 0x40
 8014104:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014106:	781a      	ldrb	r2, [r3, #0]
 8014108:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801410c:	413a      	asrs	r2, r7
 801410e:	fb06 b919 	mls	r9, r6, r9, fp
 8014112:	fb03 fb06 	mul.w	fp, r3, r6
 8014116:	b2d2      	uxtb	r2, r2
 8014118:	930d      	str	r3, [sp, #52]	; 0x34
 801411a:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801411e:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8014122:	f0c0 80ea 	bcc.w	80142fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 8014126:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801412a:	46b6      	mov	lr, r6
 801412c:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8014130:	f0c0 80d2 	bcc.w	80142d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8014134:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014136:	4013      	ands	r3, r2
 8014138:	d055      	beq.n	80141e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 801413a:	20ff      	movs	r0, #255	; 0xff
 801413c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801413e:	fb90 f1f1 	sdiv	r1, r0, r1
 8014142:	434b      	muls	r3, r1
 8014144:	2bfe      	cmp	r3, #254	; 0xfe
 8014146:	dd03      	ble.n	8014150 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 8014148:	990c      	ldr	r1, [sp, #48]	; 0x30
 801414a:	4281      	cmp	r1, r0
 801414c:	f000 80c2 	beq.w	80142d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8014150:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014152:	f8bc 4000 	ldrh.w	r4, [ip]
 8014156:	fb11 f303 	smulbb	r3, r1, r3
 801415a:	b29b      	uxth	r3, r3
 801415c:	1c59      	adds	r1, r3, #1
 801415e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8014162:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014166:	b29d      	uxth	r5, r3
 8014168:	43db      	mvns	r3, r3
 801416a:	b2db      	uxtb	r3, r3
 801416c:	9309      	str	r3, [sp, #36]	; 0x24
 801416e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014170:	1220      	asrs	r0, r4, #8
 8014172:	fb13 f905 	smulbb	r9, r3, r5
 8014176:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801417a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801417c:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8014180:	fb00 9003 	mla	r0, r0, r3, r9
 8014184:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014186:	10e1      	asrs	r1, r4, #3
 8014188:	fb13 f905 	smulbb	r9, r3, r5
 801418c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014190:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014192:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8014196:	fb01 9103 	mla	r1, r1, r3, r9
 801419a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801419c:	00e4      	lsls	r4, r4, #3
 801419e:	fb13 f505 	smulbb	r5, r3, r5
 80141a2:	b2e4      	uxtb	r4, r4
 80141a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80141a6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80141aa:	fb04 5403 	mla	r4, r4, r3, r5
 80141ae:	b280      	uxth	r0, r0
 80141b0:	b2a4      	uxth	r4, r4
 80141b2:	1c43      	adds	r3, r0, #1
 80141b4:	f104 0901 	add.w	r9, r4, #1
 80141b8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80141bc:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80141c0:	b289      	uxth	r1, r1
 80141c2:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80141c6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80141ca:	ea49 0000 	orr.w	r0, r9, r0
 80141ce:	f101 0901 	add.w	r9, r1, #1
 80141d2:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80141d6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80141da:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80141de:	ea40 0009 	orr.w	r0, r0, r9
 80141e2:	f8ac 0000 	strh.w	r0, [ip]
 80141e6:	4447      	add	r7, r8
 80141e8:	b2bf      	uxth	r7, r7
 80141ea:	2f07      	cmp	r7, #7
 80141ec:	bf81      	itttt	hi
 80141ee:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 80141f0:	785a      	ldrbhi	r2, [r3, #1]
 80141f2:	3301      	addhi	r3, #1
 80141f4:	9328      	strhi	r3, [sp, #160]	; 0xa0
 80141f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141f8:	bf9a      	itte	ls
 80141fa:	fa42 f208 	asrls.w	r2, r2, r8
 80141fe:	b2d2      	uxtbls	r2, r2
 8014200:	2700      	movhi	r7, #0
 8014202:	449c      	add	ip, r3
 8014204:	e792      	b.n	801412c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 8014206:	441d      	add	r5, r3
 8014208:	b22d      	sxth	r5, r5
 801420a:	e6c9      	b.n	8013fa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 801420c:	f1ba 0f01 	cmp.w	sl, #1
 8014210:	f47f af02 	bne.w	8014018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014214:	f1bb 0f01 	cmp.w	fp, #1
 8014218:	f47f aefe 	bne.w	8014018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801421c:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 80142c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8014220:	f8db 0000 	ldr.w	r0, [fp]
 8014224:	6803      	ldr	r3, [r0, #0]
 8014226:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014228:	4798      	blx	r3
 801422a:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801422e:	465a      	mov	r2, fp
 8014230:	d006      	beq.n	8014240 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8014232:	f1b8 0f04 	cmp.w	r8, #4
 8014236:	d140      	bne.n	80142ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8014238:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801423a:	3300      	adds	r3, #0
 801423c:	bf18      	it	ne
 801423e:	2301      	movne	r3, #1
 8014240:	0580      	lsls	r0, r0, #22
 8014242:	d563      	bpl.n	801430c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 8014244:	f1b8 0f08 	cmp.w	r8, #8
 8014248:	d160      	bne.n	801430c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 801424a:	2b00      	cmp	r3, #0
 801424c:	bf0c      	ite	eq
 801424e:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8014252:	f44f 7180 	movne.w	r1, #256	; 0x100
 8014256:	2e00      	cmp	r6, #0
 8014258:	f47f aede 	bne.w	8014018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801425c:	2f00      	cmp	r7, #0
 801425e:	f47f aedb 	bne.w	8014018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014262:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014264:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014266:	18eb      	adds	r3, r5, r3
 8014268:	4283      	cmp	r3, r0
 801426a:	f73f aed5 	bgt.w	8014018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801426e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014270:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014272:	444b      	add	r3, r9
 8014274:	4283      	cmp	r3, r0
 8014276:	f73f aecf 	bgt.w	8014018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801427a:	6810      	ldr	r0, [r2, #0]
 801427c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8014280:	6805      	ldr	r5, [r0, #0]
 8014282:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8014286:	f1b8 0f08 	cmp.w	r8, #8
 801428a:	f04f 0600 	mov.w	r6, #0
 801428e:	bf18      	it	ne
 8014290:	3401      	addne	r4, #1
 8014292:	e9cd 1605 	strd	r1, r6, [sp, #20]
 8014296:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014298:	9104      	str	r1, [sp, #16]
 801429a:	bf18      	it	ne
 801429c:	f024 0401 	bicne.w	r4, r4, #1
 80142a0:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80142a2:	bf18      	it	ne
 80142a4:	b2a4      	uxthne	r4, r4
 80142a6:	e9cd 4102 	strd	r4, r1, [sp, #8]
 80142aa:	e9cd 4900 	strd	r4, r9, [sp]
 80142ae:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80142b0:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 80142b2:	47a0      	blx	r4
 80142b4:	b019      	add	sp, #100	; 0x64
 80142b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80142ba:	2300      	movs	r3, #0
 80142bc:	e7c0      	b.n	8014240 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 80142be:	bf00      	nop
 80142c0:	2000a5f8 	.word	0x2000a5f8
 80142c4:	2000a600 	.word	0x2000a600
 80142c8:	2000a5fa 	.word	0x2000a5fa
 80142cc:	00fff800 	.word	0x00fff800
 80142d0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80142d2:	e6ee      	b.n	80140b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 80142d4:	9810      	ldr	r0, [sp, #64]	; 0x40
 80142d6:	e784      	b.n	80141e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 80142d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80142da:	b153      	cbz	r3, 80142f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 80142dc:	441f      	add	r7, r3
 80142de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80142e0:	b2bf      	uxth	r7, r7
 80142e2:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 80142e6:	f007 0707 	and.w	r7, r7, #7
 80142ea:	781a      	ldrb	r2, [r3, #0]
 80142ec:	9328      	str	r3, [sp, #160]	; 0xa0
 80142ee:	413a      	asrs	r2, r7
 80142f0:	b2d2      	uxtb	r2, r2
 80142f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80142f4:	445b      	add	r3, fp
 80142f6:	930a      	str	r3, [sp, #40]	; 0x28
 80142f8:	e711      	b.n	801411e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 80142fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80142fc:	2b00      	cmp	r3, #0
 80142fe:	d1d9      	bne.n	80142b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8014300:	4b05      	ldr	r3, [pc, #20]	; (8014318 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 8014302:	6818      	ldr	r0, [r3, #0]
 8014304:	6803      	ldr	r3, [r0, #0]
 8014306:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014308:	4798      	blx	r3
 801430a:	e7d3      	b.n	80142b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801430c:	2b00      	cmp	r3, #0
 801430e:	f43f ae83 	beq.w	8014018 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8014312:	f44f 7180 	mov.w	r1, #256	; 0x100
 8014316:	e79e      	b.n	8014256 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 8014318:	2000a600 	.word	0x2000a600

0801431c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801431c:	b538      	push	{r3, r4, r5, lr}
 801431e:	4c15      	ldr	r4, [pc, #84]	; (8014374 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8014320:	7823      	ldrb	r3, [r4, #0]
 8014322:	f3bf 8f5b 	dmb	ish
 8014326:	07da      	lsls	r2, r3, #31
 8014328:	4605      	mov	r5, r0
 801432a:	d40b      	bmi.n	8014344 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801432c:	4620      	mov	r0, r4
 801432e:	f007 fcb5 	bl	801bc9c <__cxa_guard_acquire>
 8014332:	b138      	cbz	r0, 8014344 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014334:	4620      	mov	r0, r4
 8014336:	f007 fcbd 	bl	801bcb4 <__cxa_guard_release>
 801433a:	4a0f      	ldr	r2, [pc, #60]	; (8014378 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801433c:	490f      	ldr	r1, [pc, #60]	; (801437c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801433e:	4810      	ldr	r0, [pc, #64]	; (8014380 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8014340:	f007 fca5 	bl	801bc8e <__aeabi_atexit>
 8014344:	4c0f      	ldr	r4, [pc, #60]	; (8014384 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8014346:	7823      	ldrb	r3, [r4, #0]
 8014348:	f3bf 8f5b 	dmb	ish
 801434c:	07db      	lsls	r3, r3, #31
 801434e:	d40b      	bmi.n	8014368 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8014350:	4620      	mov	r0, r4
 8014352:	f007 fca3 	bl	801bc9c <__cxa_guard_acquire>
 8014356:	b138      	cbz	r0, 8014368 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8014358:	4620      	mov	r0, r4
 801435a:	f007 fcab 	bl	801bcb4 <__cxa_guard_release>
 801435e:	4a06      	ldr	r2, [pc, #24]	; (8014378 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014360:	4909      	ldr	r1, [pc, #36]	; (8014388 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8014362:	480a      	ldr	r0, [pc, #40]	; (801438c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8014364:	f007 fc93 	bl	801bc8e <__aeabi_atexit>
 8014368:	4b05      	ldr	r3, [pc, #20]	; (8014380 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801436a:	612b      	str	r3, [r5, #16]
 801436c:	4b07      	ldr	r3, [pc, #28]	; (801438c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801436e:	616b      	str	r3, [r5, #20]
 8014370:	bd38      	pop	{r3, r4, r5, pc}
 8014372:	bf00      	nop
 8014374:	2000a6cc 	.word	0x2000a6cc
 8014378:	20000000 	.word	0x20000000
 801437c:	0801237d 	.word	0x0801237d
 8014380:	200000a4 	.word	0x200000a4
 8014384:	2000a6d0 	.word	0x2000a6d0
 8014388:	0801237b 	.word	0x0801237b
 801438c:	200000a8 	.word	0x200000a8

08014390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8014390:	b538      	push	{r3, r4, r5, lr}
 8014392:	4c15      	ldr	r4, [pc, #84]	; (80143e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8014394:	7823      	ldrb	r3, [r4, #0]
 8014396:	f3bf 8f5b 	dmb	ish
 801439a:	07da      	lsls	r2, r3, #31
 801439c:	4605      	mov	r5, r0
 801439e:	d40b      	bmi.n	80143b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80143a0:	4620      	mov	r0, r4
 80143a2:	f007 fc7b 	bl	801bc9c <__cxa_guard_acquire>
 80143a6:	b138      	cbz	r0, 80143b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80143a8:	4620      	mov	r0, r4
 80143aa:	f007 fc83 	bl	801bcb4 <__cxa_guard_release>
 80143ae:	4a0f      	ldr	r2, [pc, #60]	; (80143ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80143b0:	490f      	ldr	r1, [pc, #60]	; (80143f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80143b2:	4810      	ldr	r0, [pc, #64]	; (80143f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80143b4:	f007 fc6b 	bl	801bc8e <__aeabi_atexit>
 80143b8:	4c0f      	ldr	r4, [pc, #60]	; (80143f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80143ba:	7823      	ldrb	r3, [r4, #0]
 80143bc:	f3bf 8f5b 	dmb	ish
 80143c0:	07db      	lsls	r3, r3, #31
 80143c2:	d40b      	bmi.n	80143dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80143c4:	4620      	mov	r0, r4
 80143c6:	f007 fc69 	bl	801bc9c <__cxa_guard_acquire>
 80143ca:	b138      	cbz	r0, 80143dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80143cc:	4620      	mov	r0, r4
 80143ce:	f007 fc71 	bl	801bcb4 <__cxa_guard_release>
 80143d2:	4a06      	ldr	r2, [pc, #24]	; (80143ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80143d4:	4909      	ldr	r1, [pc, #36]	; (80143fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80143d6:	480a      	ldr	r0, [pc, #40]	; (8014400 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80143d8:	f007 fc59 	bl	801bc8e <__aeabi_atexit>
 80143dc:	4b05      	ldr	r3, [pc, #20]	; (80143f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80143de:	60ab      	str	r3, [r5, #8]
 80143e0:	4b07      	ldr	r3, [pc, #28]	; (8014400 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80143e2:	60eb      	str	r3, [r5, #12]
 80143e4:	bd38      	pop	{r3, r4, r5, pc}
 80143e6:	bf00      	nop
 80143e8:	2000a6a4 	.word	0x2000a6a4
 80143ec:	20000000 	.word	0x20000000
 80143f0:	08012381 	.word	0x08012381
 80143f4:	2000007c 	.word	0x2000007c
 80143f8:	2000a6a8 	.word	0x2000a6a8
 80143fc:	0801237f 	.word	0x0801237f
 8014400:	20000080 	.word	0x20000080

08014404 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8014404:	b510      	push	{r4, lr}
 8014406:	4604      	mov	r4, r0
 8014408:	f7ff ff88 	bl	801431c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801440c:	4620      	mov	r0, r4
 801440e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014412:	f7ff bfbd 	b.w	8014390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08014418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8014418:	b538      	push	{r3, r4, r5, lr}
 801441a:	4c15      	ldr	r4, [pc, #84]	; (8014470 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801441c:	7823      	ldrb	r3, [r4, #0]
 801441e:	f3bf 8f5b 	dmb	ish
 8014422:	07da      	lsls	r2, r3, #31
 8014424:	4605      	mov	r5, r0
 8014426:	d40b      	bmi.n	8014440 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014428:	4620      	mov	r0, r4
 801442a:	f007 fc37 	bl	801bc9c <__cxa_guard_acquire>
 801442e:	b138      	cbz	r0, 8014440 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014430:	4620      	mov	r0, r4
 8014432:	f007 fc3f 	bl	801bcb4 <__cxa_guard_release>
 8014436:	4a0f      	ldr	r2, [pc, #60]	; (8014474 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014438:	490f      	ldr	r1, [pc, #60]	; (8014478 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801443a:	4810      	ldr	r0, [pc, #64]	; (801447c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801443c:	f007 fc27 	bl	801bc8e <__aeabi_atexit>
 8014440:	4c0f      	ldr	r4, [pc, #60]	; (8014480 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8014442:	7823      	ldrb	r3, [r4, #0]
 8014444:	f3bf 8f5b 	dmb	ish
 8014448:	07db      	lsls	r3, r3, #31
 801444a:	d40b      	bmi.n	8014464 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801444c:	4620      	mov	r0, r4
 801444e:	f007 fc25 	bl	801bc9c <__cxa_guard_acquire>
 8014452:	b138      	cbz	r0, 8014464 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014454:	4620      	mov	r0, r4
 8014456:	f007 fc2d 	bl	801bcb4 <__cxa_guard_release>
 801445a:	4a06      	ldr	r2, [pc, #24]	; (8014474 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801445c:	4909      	ldr	r1, [pc, #36]	; (8014484 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801445e:	480a      	ldr	r0, [pc, #40]	; (8014488 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014460:	f007 fc15 	bl	801bc8e <__aeabi_atexit>
 8014464:	4b05      	ldr	r3, [pc, #20]	; (801447c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014466:	622b      	str	r3, [r5, #32]
 8014468:	4b07      	ldr	r3, [pc, #28]	; (8014488 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801446a:	626b      	str	r3, [r5, #36]	; 0x24
 801446c:	bd38      	pop	{r3, r4, r5, pc}
 801446e:	bf00      	nop
 8014470:	2000a6d4 	.word	0x2000a6d4
 8014474:	20000000 	.word	0x20000000
 8014478:	08012375 	.word	0x08012375
 801447c:	200000ac 	.word	0x200000ac
 8014480:	2000a6d8 	.word	0x2000a6d8
 8014484:	08012373 	.word	0x08012373
 8014488:	200000b0 	.word	0x200000b0

0801448c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801448c:	b538      	push	{r3, r4, r5, lr}
 801448e:	4c15      	ldr	r4, [pc, #84]	; (80144e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8014490:	7823      	ldrb	r3, [r4, #0]
 8014492:	f3bf 8f5b 	dmb	ish
 8014496:	07da      	lsls	r2, r3, #31
 8014498:	4605      	mov	r5, r0
 801449a:	d40b      	bmi.n	80144b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801449c:	4620      	mov	r0, r4
 801449e:	f007 fbfd 	bl	801bc9c <__cxa_guard_acquire>
 80144a2:	b138      	cbz	r0, 80144b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80144a4:	4620      	mov	r0, r4
 80144a6:	f007 fc05 	bl	801bcb4 <__cxa_guard_release>
 80144aa:	4a0f      	ldr	r2, [pc, #60]	; (80144e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80144ac:	490f      	ldr	r1, [pc, #60]	; (80144ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80144ae:	4810      	ldr	r0, [pc, #64]	; (80144f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80144b0:	f007 fbed 	bl	801bc8e <__aeabi_atexit>
 80144b4:	4c0f      	ldr	r4, [pc, #60]	; (80144f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80144b6:	7823      	ldrb	r3, [r4, #0]
 80144b8:	f3bf 8f5b 	dmb	ish
 80144bc:	07db      	lsls	r3, r3, #31
 80144be:	d40b      	bmi.n	80144d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80144c0:	4620      	mov	r0, r4
 80144c2:	f007 fbeb 	bl	801bc9c <__cxa_guard_acquire>
 80144c6:	b138      	cbz	r0, 80144d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80144c8:	4620      	mov	r0, r4
 80144ca:	f007 fbf3 	bl	801bcb4 <__cxa_guard_release>
 80144ce:	4a06      	ldr	r2, [pc, #24]	; (80144e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80144d0:	4909      	ldr	r1, [pc, #36]	; (80144f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80144d2:	480a      	ldr	r0, [pc, #40]	; (80144fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80144d4:	f007 fbdb 	bl	801bc8e <__aeabi_atexit>
 80144d8:	4b05      	ldr	r3, [pc, #20]	; (80144f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80144da:	61ab      	str	r3, [r5, #24]
 80144dc:	4b07      	ldr	r3, [pc, #28]	; (80144fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80144de:	61eb      	str	r3, [r5, #28]
 80144e0:	bd38      	pop	{r3, r4, r5, pc}
 80144e2:	bf00      	nop
 80144e4:	2000a6ac 	.word	0x2000a6ac
 80144e8:	20000000 	.word	0x20000000
 80144ec:	08012379 	.word	0x08012379
 80144f0:	20000084 	.word	0x20000084
 80144f4:	2000a6b0 	.word	0x2000a6b0
 80144f8:	08012377 	.word	0x08012377
 80144fc:	20000088 	.word	0x20000088

08014500 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8014500:	b510      	push	{r4, lr}
 8014502:	4604      	mov	r4, r0
 8014504:	f7ff ff88 	bl	8014418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8014508:	4620      	mov	r0, r4
 801450a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801450e:	f7ff bfbd 	b.w	801448c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08014514 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8014514:	b538      	push	{r3, r4, r5, lr}
 8014516:	4c15      	ldr	r4, [pc, #84]	; (801456c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8014518:	7823      	ldrb	r3, [r4, #0]
 801451a:	f3bf 8f5b 	dmb	ish
 801451e:	07da      	lsls	r2, r3, #31
 8014520:	4605      	mov	r5, r0
 8014522:	d40b      	bmi.n	801453c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014524:	4620      	mov	r0, r4
 8014526:	f007 fbb9 	bl	801bc9c <__cxa_guard_acquire>
 801452a:	b138      	cbz	r0, 801453c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801452c:	4620      	mov	r0, r4
 801452e:	f007 fbc1 	bl	801bcb4 <__cxa_guard_release>
 8014532:	4a0f      	ldr	r2, [pc, #60]	; (8014570 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014534:	490f      	ldr	r1, [pc, #60]	; (8014574 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8014536:	4810      	ldr	r0, [pc, #64]	; (8014578 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014538:	f007 fba9 	bl	801bc8e <__aeabi_atexit>
 801453c:	4c0f      	ldr	r4, [pc, #60]	; (801457c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801453e:	7823      	ldrb	r3, [r4, #0]
 8014540:	f3bf 8f5b 	dmb	ish
 8014544:	07db      	lsls	r3, r3, #31
 8014546:	d40b      	bmi.n	8014560 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8014548:	4620      	mov	r0, r4
 801454a:	f007 fba7 	bl	801bc9c <__cxa_guard_acquire>
 801454e:	b138      	cbz	r0, 8014560 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8014550:	4620      	mov	r0, r4
 8014552:	f007 fbaf 	bl	801bcb4 <__cxa_guard_release>
 8014556:	4a06      	ldr	r2, [pc, #24]	; (8014570 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014558:	4909      	ldr	r1, [pc, #36]	; (8014580 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801455a:	480a      	ldr	r0, [pc, #40]	; (8014584 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801455c:	f007 fb97 	bl	801bc8e <__aeabi_atexit>
 8014560:	4b05      	ldr	r3, [pc, #20]	; (8014578 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8014562:	632b      	str	r3, [r5, #48]	; 0x30
 8014564:	4b07      	ldr	r3, [pc, #28]	; (8014584 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8014566:	636b      	str	r3, [r5, #52]	; 0x34
 8014568:	bd38      	pop	{r3, r4, r5, pc}
 801456a:	bf00      	nop
 801456c:	2000a6e4 	.word	0x2000a6e4
 8014570:	20000000 	.word	0x20000000
 8014574:	0801236d 	.word	0x0801236d
 8014578:	200000bc 	.word	0x200000bc
 801457c:	2000a6e8 	.word	0x2000a6e8
 8014580:	0801236b 	.word	0x0801236b
 8014584:	200000c0 	.word	0x200000c0

08014588 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8014588:	b538      	push	{r3, r4, r5, lr}
 801458a:	4c15      	ldr	r4, [pc, #84]	; (80145e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801458c:	7823      	ldrb	r3, [r4, #0]
 801458e:	f3bf 8f5b 	dmb	ish
 8014592:	07da      	lsls	r2, r3, #31
 8014594:	4605      	mov	r5, r0
 8014596:	d40b      	bmi.n	80145b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8014598:	4620      	mov	r0, r4
 801459a:	f007 fb7f 	bl	801bc9c <__cxa_guard_acquire>
 801459e:	b138      	cbz	r0, 80145b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80145a0:	4620      	mov	r0, r4
 80145a2:	f007 fb87 	bl	801bcb4 <__cxa_guard_release>
 80145a6:	4a0f      	ldr	r2, [pc, #60]	; (80145e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80145a8:	490f      	ldr	r1, [pc, #60]	; (80145e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80145aa:	4810      	ldr	r0, [pc, #64]	; (80145ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80145ac:	f007 fb6f 	bl	801bc8e <__aeabi_atexit>
 80145b0:	4c0f      	ldr	r4, [pc, #60]	; (80145f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80145b2:	7823      	ldrb	r3, [r4, #0]
 80145b4:	f3bf 8f5b 	dmb	ish
 80145b8:	07db      	lsls	r3, r3, #31
 80145ba:	d40b      	bmi.n	80145d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80145bc:	4620      	mov	r0, r4
 80145be:	f007 fb6d 	bl	801bc9c <__cxa_guard_acquire>
 80145c2:	b138      	cbz	r0, 80145d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80145c4:	4620      	mov	r0, r4
 80145c6:	f007 fb75 	bl	801bcb4 <__cxa_guard_release>
 80145ca:	4a06      	ldr	r2, [pc, #24]	; (80145e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80145cc:	4909      	ldr	r1, [pc, #36]	; (80145f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80145ce:	480a      	ldr	r0, [pc, #40]	; (80145f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80145d0:	f007 fb5d 	bl	801bc8e <__aeabi_atexit>
 80145d4:	4b05      	ldr	r3, [pc, #20]	; (80145ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80145d6:	62ab      	str	r3, [r5, #40]	; 0x28
 80145d8:	4b07      	ldr	r3, [pc, #28]	; (80145f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80145da:	62eb      	str	r3, [r5, #44]	; 0x2c
 80145dc:	bd38      	pop	{r3, r4, r5, pc}
 80145de:	bf00      	nop
 80145e0:	2000a6b4 	.word	0x2000a6b4
 80145e4:	20000000 	.word	0x20000000
 80145e8:	08012371 	.word	0x08012371
 80145ec:	2000008c 	.word	0x2000008c
 80145f0:	2000a6b8 	.word	0x2000a6b8
 80145f4:	0801236f 	.word	0x0801236f
 80145f8:	20000090 	.word	0x20000090

080145fc <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80145fc:	b510      	push	{r4, lr}
 80145fe:	4604      	mov	r4, r0
 8014600:	f7ff ff88 	bl	8014514 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8014604:	4620      	mov	r0, r4
 8014606:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801460a:	f7ff bfbd 	b.w	8014588 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08014610 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8014610:	b538      	push	{r3, r4, r5, lr}
 8014612:	4c15      	ldr	r4, [pc, #84]	; (8014668 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8014614:	7823      	ldrb	r3, [r4, #0]
 8014616:	f3bf 8f5b 	dmb	ish
 801461a:	07da      	lsls	r2, r3, #31
 801461c:	4605      	mov	r5, r0
 801461e:	d40b      	bmi.n	8014638 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014620:	4620      	mov	r0, r4
 8014622:	f007 fb3b 	bl	801bc9c <__cxa_guard_acquire>
 8014626:	b138      	cbz	r0, 8014638 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014628:	4620      	mov	r0, r4
 801462a:	f007 fb43 	bl	801bcb4 <__cxa_guard_release>
 801462e:	4a0f      	ldr	r2, [pc, #60]	; (801466c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8014630:	490f      	ldr	r1, [pc, #60]	; (8014670 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8014632:	4810      	ldr	r0, [pc, #64]	; (8014674 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8014634:	f007 fb2b 	bl	801bc8e <__aeabi_atexit>
 8014638:	4c0f      	ldr	r4, [pc, #60]	; (8014678 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801463a:	7823      	ldrb	r3, [r4, #0]
 801463c:	f3bf 8f5b 	dmb	ish
 8014640:	07db      	lsls	r3, r3, #31
 8014642:	d40b      	bmi.n	801465c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8014644:	4620      	mov	r0, r4
 8014646:	f007 fb29 	bl	801bc9c <__cxa_guard_acquire>
 801464a:	b138      	cbz	r0, 801465c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801464c:	4620      	mov	r0, r4
 801464e:	f007 fb31 	bl	801bcb4 <__cxa_guard_release>
 8014652:	4a06      	ldr	r2, [pc, #24]	; (801466c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8014654:	4909      	ldr	r1, [pc, #36]	; (801467c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8014656:	480a      	ldr	r0, [pc, #40]	; (8014680 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8014658:	f007 fb19 	bl	801bc8e <__aeabi_atexit>
 801465c:	4b05      	ldr	r3, [pc, #20]	; (8014674 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801465e:	652b      	str	r3, [r5, #80]	; 0x50
 8014660:	4b07      	ldr	r3, [pc, #28]	; (8014680 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8014662:	656b      	str	r3, [r5, #84]	; 0x54
 8014664:	bd38      	pop	{r3, r4, r5, pc}
 8014666:	bf00      	nop
 8014668:	2000a6ec 	.word	0x2000a6ec
 801466c:	20000000 	.word	0x20000000
 8014670:	0801235d 	.word	0x0801235d
 8014674:	200000c4 	.word	0x200000c4
 8014678:	2000a6f0 	.word	0x2000a6f0
 801467c:	0801235b 	.word	0x0801235b
 8014680:	200000c8 	.word	0x200000c8

08014684 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8014684:	b538      	push	{r3, r4, r5, lr}
 8014686:	4c15      	ldr	r4, [pc, #84]	; (80146dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8014688:	7823      	ldrb	r3, [r4, #0]
 801468a:	f3bf 8f5b 	dmb	ish
 801468e:	07da      	lsls	r2, r3, #31
 8014690:	4605      	mov	r5, r0
 8014692:	d40b      	bmi.n	80146ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8014694:	4620      	mov	r0, r4
 8014696:	f007 fb01 	bl	801bc9c <__cxa_guard_acquire>
 801469a:	b138      	cbz	r0, 80146ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801469c:	4620      	mov	r0, r4
 801469e:	f007 fb09 	bl	801bcb4 <__cxa_guard_release>
 80146a2:	4a0f      	ldr	r2, [pc, #60]	; (80146e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80146a4:	490f      	ldr	r1, [pc, #60]	; (80146e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80146a6:	4810      	ldr	r0, [pc, #64]	; (80146e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80146a8:	f007 faf1 	bl	801bc8e <__aeabi_atexit>
 80146ac:	4c0f      	ldr	r4, [pc, #60]	; (80146ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80146ae:	7823      	ldrb	r3, [r4, #0]
 80146b0:	f3bf 8f5b 	dmb	ish
 80146b4:	07db      	lsls	r3, r3, #31
 80146b6:	d40b      	bmi.n	80146d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80146b8:	4620      	mov	r0, r4
 80146ba:	f007 faef 	bl	801bc9c <__cxa_guard_acquire>
 80146be:	b138      	cbz	r0, 80146d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80146c0:	4620      	mov	r0, r4
 80146c2:	f007 faf7 	bl	801bcb4 <__cxa_guard_release>
 80146c6:	4a06      	ldr	r2, [pc, #24]	; (80146e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80146c8:	4909      	ldr	r1, [pc, #36]	; (80146f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80146ca:	480a      	ldr	r0, [pc, #40]	; (80146f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80146cc:	f007 fadf 	bl	801bc8e <__aeabi_atexit>
 80146d0:	4b05      	ldr	r3, [pc, #20]	; (80146e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80146d2:	64ab      	str	r3, [r5, #72]	; 0x48
 80146d4:	4b07      	ldr	r3, [pc, #28]	; (80146f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80146d6:	64eb      	str	r3, [r5, #76]	; 0x4c
 80146d8:	bd38      	pop	{r3, r4, r5, pc}
 80146da:	bf00      	nop
 80146dc:	2000a6f4 	.word	0x2000a6f4
 80146e0:	20000000 	.word	0x20000000
 80146e4:	08012361 	.word	0x08012361
 80146e8:	200000cc 	.word	0x200000cc
 80146ec:	2000a6f8 	.word	0x2000a6f8
 80146f0:	0801235f 	.word	0x0801235f
 80146f4:	200000d0 	.word	0x200000d0

080146f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80146f8:	b538      	push	{r3, r4, r5, lr}
 80146fa:	4c15      	ldr	r4, [pc, #84]	; (8014750 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80146fc:	7823      	ldrb	r3, [r4, #0]
 80146fe:	f3bf 8f5b 	dmb	ish
 8014702:	07da      	lsls	r2, r3, #31
 8014704:	4605      	mov	r5, r0
 8014706:	d40b      	bmi.n	8014720 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014708:	4620      	mov	r0, r4
 801470a:	f007 fac7 	bl	801bc9c <__cxa_guard_acquire>
 801470e:	b138      	cbz	r0, 8014720 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014710:	4620      	mov	r0, r4
 8014712:	f007 facf 	bl	801bcb4 <__cxa_guard_release>
 8014716:	4a0f      	ldr	r2, [pc, #60]	; (8014754 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014718:	490f      	ldr	r1, [pc, #60]	; (8014758 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801471a:	4810      	ldr	r0, [pc, #64]	; (801475c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801471c:	f007 fab7 	bl	801bc8e <__aeabi_atexit>
 8014720:	4c0f      	ldr	r4, [pc, #60]	; (8014760 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8014722:	7823      	ldrb	r3, [r4, #0]
 8014724:	f3bf 8f5b 	dmb	ish
 8014728:	07db      	lsls	r3, r3, #31
 801472a:	d40b      	bmi.n	8014744 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801472c:	4620      	mov	r0, r4
 801472e:	f007 fab5 	bl	801bc9c <__cxa_guard_acquire>
 8014732:	b138      	cbz	r0, 8014744 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014734:	4620      	mov	r0, r4
 8014736:	f007 fabd 	bl	801bcb4 <__cxa_guard_release>
 801473a:	4a06      	ldr	r2, [pc, #24]	; (8014754 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801473c:	4909      	ldr	r1, [pc, #36]	; (8014764 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801473e:	480a      	ldr	r0, [pc, #40]	; (8014768 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8014740:	f007 faa5 	bl	801bc8e <__aeabi_atexit>
 8014744:	4b05      	ldr	r3, [pc, #20]	; (801475c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014746:	642b      	str	r3, [r5, #64]	; 0x40
 8014748:	4b07      	ldr	r3, [pc, #28]	; (8014768 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801474a:	646b      	str	r3, [r5, #68]	; 0x44
 801474c:	bd38      	pop	{r3, r4, r5, pc}
 801474e:	bf00      	nop
 8014750:	2000a6bc 	.word	0x2000a6bc
 8014754:	20000000 	.word	0x20000000
 8014758:	08012365 	.word	0x08012365
 801475c:	20000094 	.word	0x20000094
 8014760:	2000a6c0 	.word	0x2000a6c0
 8014764:	08012363 	.word	0x08012363
 8014768:	20000098 	.word	0x20000098

0801476c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801476c:	b538      	push	{r3, r4, r5, lr}
 801476e:	4c15      	ldr	r4, [pc, #84]	; (80147c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8014770:	7823      	ldrb	r3, [r4, #0]
 8014772:	f3bf 8f5b 	dmb	ish
 8014776:	07da      	lsls	r2, r3, #31
 8014778:	4605      	mov	r5, r0
 801477a:	d40b      	bmi.n	8014794 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801477c:	4620      	mov	r0, r4
 801477e:	f007 fa8d 	bl	801bc9c <__cxa_guard_acquire>
 8014782:	b138      	cbz	r0, 8014794 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8014784:	4620      	mov	r0, r4
 8014786:	f007 fa95 	bl	801bcb4 <__cxa_guard_release>
 801478a:	4a0f      	ldr	r2, [pc, #60]	; (80147c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801478c:	490f      	ldr	r1, [pc, #60]	; (80147cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801478e:	4810      	ldr	r0, [pc, #64]	; (80147d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8014790:	f007 fa7d 	bl	801bc8e <__aeabi_atexit>
 8014794:	4c0f      	ldr	r4, [pc, #60]	; (80147d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8014796:	7823      	ldrb	r3, [r4, #0]
 8014798:	f3bf 8f5b 	dmb	ish
 801479c:	07db      	lsls	r3, r3, #31
 801479e:	d40b      	bmi.n	80147b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80147a0:	4620      	mov	r0, r4
 80147a2:	f007 fa7b 	bl	801bc9c <__cxa_guard_acquire>
 80147a6:	b138      	cbz	r0, 80147b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80147a8:	4620      	mov	r0, r4
 80147aa:	f007 fa83 	bl	801bcb4 <__cxa_guard_release>
 80147ae:	4a06      	ldr	r2, [pc, #24]	; (80147c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80147b0:	4909      	ldr	r1, [pc, #36]	; (80147d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80147b2:	480a      	ldr	r0, [pc, #40]	; (80147dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80147b4:	f007 fa6b 	bl	801bc8e <__aeabi_atexit>
 80147b8:	4b05      	ldr	r3, [pc, #20]	; (80147d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80147ba:	63ab      	str	r3, [r5, #56]	; 0x38
 80147bc:	4b07      	ldr	r3, [pc, #28]	; (80147dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80147be:	63eb      	str	r3, [r5, #60]	; 0x3c
 80147c0:	bd38      	pop	{r3, r4, r5, pc}
 80147c2:	bf00      	nop
 80147c4:	2000a6dc 	.word	0x2000a6dc
 80147c8:	20000000 	.word	0x20000000
 80147cc:	08012369 	.word	0x08012369
 80147d0:	200000b4 	.word	0x200000b4
 80147d4:	2000a6e0 	.word	0x2000a6e0
 80147d8:	08012367 	.word	0x08012367
 80147dc:	200000b8 	.word	0x200000b8

080147e0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80147e0:	b510      	push	{r4, lr}
 80147e2:	4604      	mov	r4, r0
 80147e4:	f7ff ff14 	bl	8014610 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80147e8:	4620      	mov	r0, r4
 80147ea:	f7ff ff85 	bl	80146f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80147ee:	4620      	mov	r0, r4
 80147f0:	f7ff ff48 	bl	8014684 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80147f4:	4620      	mov	r0, r4
 80147f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80147fa:	f7ff bfb7 	b.w	801476c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08014800 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8014800:	b538      	push	{r3, r4, r5, lr}
 8014802:	4c15      	ldr	r4, [pc, #84]	; (8014858 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014804:	7823      	ldrb	r3, [r4, #0]
 8014806:	f3bf 8f5b 	dmb	ish
 801480a:	07da      	lsls	r2, r3, #31
 801480c:	4605      	mov	r5, r0
 801480e:	d40b      	bmi.n	8014828 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014810:	4620      	mov	r0, r4
 8014812:	f007 fa43 	bl	801bc9c <__cxa_guard_acquire>
 8014816:	b138      	cbz	r0, 8014828 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014818:	4620      	mov	r0, r4
 801481a:	f007 fa4b 	bl	801bcb4 <__cxa_guard_release>
 801481e:	4a0f      	ldr	r2, [pc, #60]	; (801485c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014820:	490f      	ldr	r1, [pc, #60]	; (8014860 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8014822:	4810      	ldr	r0, [pc, #64]	; (8014864 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014824:	f007 fa33 	bl	801bc8e <__aeabi_atexit>
 8014828:	4c0f      	ldr	r4, [pc, #60]	; (8014868 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801482a:	7823      	ldrb	r3, [r4, #0]
 801482c:	f3bf 8f5b 	dmb	ish
 8014830:	07db      	lsls	r3, r3, #31
 8014832:	d40b      	bmi.n	801484c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014834:	4620      	mov	r0, r4
 8014836:	f007 fa31 	bl	801bc9c <__cxa_guard_acquire>
 801483a:	b138      	cbz	r0, 801484c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801483c:	4620      	mov	r0, r4
 801483e:	f007 fa39 	bl	801bcb4 <__cxa_guard_release>
 8014842:	4a06      	ldr	r2, [pc, #24]	; (801485c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014844:	4909      	ldr	r1, [pc, #36]	; (801486c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8014846:	480a      	ldr	r0, [pc, #40]	; (8014870 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8014848:	f007 fa21 	bl	801bc8e <__aeabi_atexit>
 801484c:	4b05      	ldr	r3, [pc, #20]	; (8014864 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801484e:	662b      	str	r3, [r5, #96]	; 0x60
 8014850:	4b07      	ldr	r3, [pc, #28]	; (8014870 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8014852:	666b      	str	r3, [r5, #100]	; 0x64
 8014854:	bd38      	pop	{r3, r4, r5, pc}
 8014856:	bf00      	nop
 8014858:	2000a6c4 	.word	0x2000a6c4
 801485c:	20000000 	.word	0x20000000
 8014860:	08012355 	.word	0x08012355
 8014864:	2000009c 	.word	0x2000009c
 8014868:	2000a6c8 	.word	0x2000a6c8
 801486c:	08012353 	.word	0x08012353
 8014870:	200000a0 	.word	0x200000a0

08014874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8014874:	b538      	push	{r3, r4, r5, lr}
 8014876:	4c15      	ldr	r4, [pc, #84]	; (80148cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8014878:	7823      	ldrb	r3, [r4, #0]
 801487a:	f3bf 8f5b 	dmb	ish
 801487e:	07da      	lsls	r2, r3, #31
 8014880:	4605      	mov	r5, r0
 8014882:	d40b      	bmi.n	801489c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8014884:	4620      	mov	r0, r4
 8014886:	f007 fa09 	bl	801bc9c <__cxa_guard_acquire>
 801488a:	b138      	cbz	r0, 801489c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801488c:	4620      	mov	r0, r4
 801488e:	f007 fa11 	bl	801bcb4 <__cxa_guard_release>
 8014892:	4a0f      	ldr	r2, [pc, #60]	; (80148d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8014894:	490f      	ldr	r1, [pc, #60]	; (80148d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8014896:	4810      	ldr	r0, [pc, #64]	; (80148d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8014898:	f007 f9f9 	bl	801bc8e <__aeabi_atexit>
 801489c:	4c0f      	ldr	r4, [pc, #60]	; (80148dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801489e:	7823      	ldrb	r3, [r4, #0]
 80148a0:	f3bf 8f5b 	dmb	ish
 80148a4:	07db      	lsls	r3, r3, #31
 80148a6:	d40b      	bmi.n	80148c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80148a8:	4620      	mov	r0, r4
 80148aa:	f007 f9f7 	bl	801bc9c <__cxa_guard_acquire>
 80148ae:	b138      	cbz	r0, 80148c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80148b0:	4620      	mov	r0, r4
 80148b2:	f007 f9ff 	bl	801bcb4 <__cxa_guard_release>
 80148b6:	4a06      	ldr	r2, [pc, #24]	; (80148d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80148b8:	4909      	ldr	r1, [pc, #36]	; (80148e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80148ba:	480a      	ldr	r0, [pc, #40]	; (80148e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80148bc:	f007 f9e7 	bl	801bc8e <__aeabi_atexit>
 80148c0:	4b05      	ldr	r3, [pc, #20]	; (80148d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80148c2:	65ab      	str	r3, [r5, #88]	; 0x58
 80148c4:	4b07      	ldr	r3, [pc, #28]	; (80148e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80148c6:	65eb      	str	r3, [r5, #92]	; 0x5c
 80148c8:	bd38      	pop	{r3, r4, r5, pc}
 80148ca:	bf00      	nop
 80148cc:	2000a69c 	.word	0x2000a69c
 80148d0:	20000000 	.word	0x20000000
 80148d4:	08012359 	.word	0x08012359
 80148d8:	20000074 	.word	0x20000074
 80148dc:	2000a6a0 	.word	0x2000a6a0
 80148e0:	08012357 	.word	0x08012357
 80148e4:	20000078 	.word	0x20000078

080148e8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80148e8:	b510      	push	{r4, lr}
 80148ea:	4604      	mov	r4, r0
 80148ec:	f7ff ff88 	bl	8014800 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80148f0:	4620      	mov	r0, r4
 80148f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80148f6:	f7ff bfbd 	b.w	8014874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080148fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80148fc:	b538      	push	{r3, r4, r5, lr}
 80148fe:	4c15      	ldr	r4, [pc, #84]	; (8014954 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8014900:	7823      	ldrb	r3, [r4, #0]
 8014902:	f3bf 8f5b 	dmb	ish
 8014906:	07da      	lsls	r2, r3, #31
 8014908:	4605      	mov	r5, r0
 801490a:	d40b      	bmi.n	8014924 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801490c:	4620      	mov	r0, r4
 801490e:	f007 f9c5 	bl	801bc9c <__cxa_guard_acquire>
 8014912:	b138      	cbz	r0, 8014924 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014914:	4620      	mov	r0, r4
 8014916:	f007 f9cd 	bl	801bcb4 <__cxa_guard_release>
 801491a:	4a0f      	ldr	r2, [pc, #60]	; (8014958 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801491c:	490f      	ldr	r1, [pc, #60]	; (801495c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801491e:	4810      	ldr	r0, [pc, #64]	; (8014960 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014920:	f007 f9b5 	bl	801bc8e <__aeabi_atexit>
 8014924:	4c0f      	ldr	r4, [pc, #60]	; (8014964 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8014926:	7823      	ldrb	r3, [r4, #0]
 8014928:	f3bf 8f5b 	dmb	ish
 801492c:	07db      	lsls	r3, r3, #31
 801492e:	d40b      	bmi.n	8014948 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014930:	4620      	mov	r0, r4
 8014932:	f007 f9b3 	bl	801bc9c <__cxa_guard_acquire>
 8014936:	b138      	cbz	r0, 8014948 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014938:	4620      	mov	r0, r4
 801493a:	f007 f9bb 	bl	801bcb4 <__cxa_guard_release>
 801493e:	4a06      	ldr	r2, [pc, #24]	; (8014958 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014940:	4909      	ldr	r1, [pc, #36]	; (8014968 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8014942:	480a      	ldr	r0, [pc, #40]	; (801496c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014944:	f007 f9a3 	bl	801bc8e <__aeabi_atexit>
 8014948:	4b05      	ldr	r3, [pc, #20]	; (8014960 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801494a:	672b      	str	r3, [r5, #112]	; 0x70
 801494c:	4b07      	ldr	r3, [pc, #28]	; (801496c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801494e:	676b      	str	r3, [r5, #116]	; 0x74
 8014950:	bd38      	pop	{r3, r4, r5, pc}
 8014952:	bf00      	nop
 8014954:	2000a694 	.word	0x2000a694
 8014958:	20000000 	.word	0x20000000
 801495c:	0801234d 	.word	0x0801234d
 8014960:	2000006c 	.word	0x2000006c
 8014964:	2000a698 	.word	0x2000a698
 8014968:	0801234b 	.word	0x0801234b
 801496c:	20000070 	.word	0x20000070

08014970 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8014970:	b538      	push	{r3, r4, r5, lr}
 8014972:	4c15      	ldr	r4, [pc, #84]	; (80149c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8014974:	7823      	ldrb	r3, [r4, #0]
 8014976:	f3bf 8f5b 	dmb	ish
 801497a:	07da      	lsls	r2, r3, #31
 801497c:	4605      	mov	r5, r0
 801497e:	d40b      	bmi.n	8014998 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8014980:	4620      	mov	r0, r4
 8014982:	f007 f98b 	bl	801bc9c <__cxa_guard_acquire>
 8014986:	b138      	cbz	r0, 8014998 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8014988:	4620      	mov	r0, r4
 801498a:	f007 f993 	bl	801bcb4 <__cxa_guard_release>
 801498e:	4a0f      	ldr	r2, [pc, #60]	; (80149cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014990:	490f      	ldr	r1, [pc, #60]	; (80149d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8014992:	4810      	ldr	r0, [pc, #64]	; (80149d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8014994:	f007 f97b 	bl	801bc8e <__aeabi_atexit>
 8014998:	4c0f      	ldr	r4, [pc, #60]	; (80149d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801499a:	7823      	ldrb	r3, [r4, #0]
 801499c:	f3bf 8f5b 	dmb	ish
 80149a0:	07db      	lsls	r3, r3, #31
 80149a2:	d40b      	bmi.n	80149bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80149a4:	4620      	mov	r0, r4
 80149a6:	f007 f979 	bl	801bc9c <__cxa_guard_acquire>
 80149aa:	b138      	cbz	r0, 80149bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80149ac:	4620      	mov	r0, r4
 80149ae:	f007 f981 	bl	801bcb4 <__cxa_guard_release>
 80149b2:	4a06      	ldr	r2, [pc, #24]	; (80149cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80149b4:	4909      	ldr	r1, [pc, #36]	; (80149dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80149b6:	480a      	ldr	r0, [pc, #40]	; (80149e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80149b8:	f007 f969 	bl	801bc8e <__aeabi_atexit>
 80149bc:	4b05      	ldr	r3, [pc, #20]	; (80149d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80149be:	66ab      	str	r3, [r5, #104]	; 0x68
 80149c0:	4b07      	ldr	r3, [pc, #28]	; (80149e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80149c2:	66eb      	str	r3, [r5, #108]	; 0x6c
 80149c4:	bd38      	pop	{r3, r4, r5, pc}
 80149c6:	bf00      	nop
 80149c8:	2000a68c 	.word	0x2000a68c
 80149cc:	20000000 	.word	0x20000000
 80149d0:	08012351 	.word	0x08012351
 80149d4:	20000064 	.word	0x20000064
 80149d8:	2000a690 	.word	0x2000a690
 80149dc:	0801234f 	.word	0x0801234f
 80149e0:	20000068 	.word	0x20000068

080149e4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80149e4:	b510      	push	{r4, lr}
 80149e6:	4604      	mov	r4, r0
 80149e8:	f7ff ff88 	bl	80148fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80149ec:	4620      	mov	r0, r4
 80149ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80149f2:	f7ff bfbd 	b.w	8014970 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080149f6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80149f6:	b510      	push	{r4, lr}
 80149f8:	4604      	mov	r4, r0
 80149fa:	f7ff fff3 	bl	80149e4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80149fe:	4620      	mov	r0, r4
 8014a00:	f7ff ff72 	bl	80148e8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014a04:	4620      	mov	r0, r4
 8014a06:	f7ff fdf9 	bl	80145fc <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014a0a:	4620      	mov	r0, r4
 8014a0c:	f7ff fcfa 	bl	8014404 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8014a10:	4620      	mov	r0, r4
 8014a12:	f7ff fd75 	bl	8014500 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8014a16:	4620      	mov	r0, r4
 8014a18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014a1c:	f7ff bee0 	b.w	80147e0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08014a20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8014a20:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a24:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8014a28:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8014a2c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8014a30:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014a34:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8014a38:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8014a3c:	8808      	ldrh	r0, [r1, #0]
 8014a3e:	fb0e 4708 	mla	r7, lr, r8, r4
 8014a42:	f1be 0f00 	cmp.w	lr, #0
 8014a46:	eb02 0a07 	add.w	sl, r2, r7
 8014a4a:	db37      	blt.n	8014abc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8014a4c:	45f3      	cmp	fp, lr
 8014a4e:	dd35      	ble.n	8014abc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8014a50:	2c00      	cmp	r4, #0
 8014a52:	db31      	blt.n	8014ab8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8014a54:	45a0      	cmp	r8, r4
 8014a56:	dd2f      	ble.n	8014ab8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8014a58:	5dd2      	ldrb	r2, [r2, r7]
 8014a5a:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8014a5e:	1c62      	adds	r2, r4, #1
 8014a60:	d42f      	bmi.n	8014ac2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014a62:	4590      	cmp	r8, r2
 8014a64:	dd2d      	ble.n	8014ac2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014a66:	b366      	cbz	r6, 8014ac2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8014a68:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014a6c:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8014a70:	f11e 0e01 	adds.w	lr, lr, #1
 8014a74:	d429      	bmi.n	8014aca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8014a76:	45f3      	cmp	fp, lr
 8014a78:	dd27      	ble.n	8014aca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8014a7a:	f1bc 0f00 	cmp.w	ip, #0
 8014a7e:	f000 80a1 	beq.w	8014bc4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 8014a82:	2c00      	cmp	r4, #0
 8014a84:	db1f      	blt.n	8014ac6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8014a86:	45a0      	cmp	r8, r4
 8014a88:	dd1d      	ble.n	8014ac6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8014a8a:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8014a8e:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8014a92:	3401      	adds	r4, #1
 8014a94:	d41c      	bmi.n	8014ad0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8014a96:	45a0      	cmp	r8, r4
 8014a98:	dd1a      	ble.n	8014ad0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8014a9a:	b1de      	cbz	r6, 8014ad4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8014a9c:	44d0      	add	r8, sl
 8014a9e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8014aa2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8014aa6:	2e0f      	cmp	r6, #15
 8014aa8:	d915      	bls.n	8014ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8014aaa:	4b49      	ldr	r3, [pc, #292]	; (8014bd0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8014aac:	4a49      	ldr	r2, [pc, #292]	; (8014bd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8014aae:	484a      	ldr	r0, [pc, #296]	; (8014bd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8014ab0:	f240 11db 	movw	r1, #475	; 0x1db
 8014ab4:	f007 f91e 	bl	801bcf4 <__assert_func>
 8014ab8:	4681      	mov	r9, r0
 8014aba:	e7d0      	b.n	8014a5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8014abc:	4607      	mov	r7, r0
 8014abe:	4681      	mov	r9, r0
 8014ac0:	e7d6      	b.n	8014a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8014ac2:	4607      	mov	r7, r0
 8014ac4:	e7d4      	b.n	8014a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8014ac6:	4686      	mov	lr, r0
 8014ac8:	e7e3      	b.n	8014a92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8014aca:	4603      	mov	r3, r0
 8014acc:	4686      	mov	lr, r0
 8014ace:	e7ea      	b.n	8014aa6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014ad0:	4603      	mov	r3, r0
 8014ad2:	e7e8      	b.n	8014aa6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014ad4:	4603      	mov	r3, r0
 8014ad6:	f1bc 0f0f 	cmp.w	ip, #15
 8014ada:	d8e6      	bhi.n	8014aaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014adc:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8014ae0:	fb16 f80c 	smulbb	r8, r6, ip
 8014ae4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014ae8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014aec:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8014af0:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014af4:	ea44 0909 	orr.w	r9, r4, r9
 8014af8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014afc:	f1cc 0410 	rsb	r4, ip, #16
 8014b00:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014b04:	1ba4      	subs	r4, r4, r6
 8014b06:	041a      	lsls	r2, r3, #16
 8014b08:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014b0c:	ea4a 0707 	orr.w	r7, sl, r7
 8014b10:	4377      	muls	r7, r6
 8014b12:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014b16:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8014b1a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014b1e:	fb04 7409 	mla	r4, r4, r9, r7
 8014b22:	4313      	orrs	r3, r2
 8014b24:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8014b28:	fb08 4303 	mla	r3, r8, r3, r4
 8014b2c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014b30:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8014b34:	4322      	orrs	r2, r4
 8014b36:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8014b3a:	fb0c 3202 	mla	r2, ip, r2, r3
 8014b3e:	0d53      	lsrs	r3, r2, #21
 8014b40:	0952      	lsrs	r2, r2, #5
 8014b42:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014b46:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014b4a:	431a      	orrs	r2, r3
 8014b4c:	b293      	uxth	r3, r2
 8014b4e:	b2af      	uxth	r7, r5
 8014b50:	1202      	asrs	r2, r0, #8
 8014b52:	43ed      	mvns	r5, r5
 8014b54:	b2ed      	uxtb	r5, r5
 8014b56:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014b5a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014b5e:	fb12 f205 	smulbb	r2, r2, r5
 8014b62:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014b66:	fb0c 2c07 	mla	ip, ip, r7, r2
 8014b6a:	00dc      	lsls	r4, r3, #3
 8014b6c:	10da      	asrs	r2, r3, #3
 8014b6e:	10c6      	asrs	r6, r0, #3
 8014b70:	00c3      	lsls	r3, r0, #3
 8014b72:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014b76:	b2db      	uxtb	r3, r3
 8014b78:	fb16 f605 	smulbb	r6, r6, r5
 8014b7c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014b80:	b2e4      	uxtb	r4, r4
 8014b82:	fb13 f305 	smulbb	r3, r3, r5
 8014b86:	fa1f fc8c 	uxth.w	ip, ip
 8014b8a:	fb02 6207 	mla	r2, r2, r7, r6
 8014b8e:	fb04 3307 	mla	r3, r4, r7, r3
 8014b92:	b296      	uxth	r6, r2
 8014b94:	b29a      	uxth	r2, r3
 8014b96:	f10c 0301 	add.w	r3, ip, #1
 8014b9a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014b9e:	1c53      	adds	r3, r2, #1
 8014ba0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014ba4:	1c72      	adds	r2, r6, #1
 8014ba6:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8014baa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014bae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014bb2:	0952      	lsrs	r2, r2, #5
 8014bb4:	ea43 030c 	orr.w	r3, r3, ip
 8014bb8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014bbc:	4313      	orrs	r3, r2
 8014bbe:	800b      	strh	r3, [r1, #0]
 8014bc0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bc4:	2e0f      	cmp	r6, #15
 8014bc6:	f63f af70 	bhi.w	8014aaa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014bca:	4603      	mov	r3, r0
 8014bcc:	4686      	mov	lr, r0
 8014bce:	e785      	b.n	8014adc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8014bd0:	0801fdd3 	.word	0x0801fdd3
 8014bd4:	080203ab 	.word	0x080203ab
 8014bd8:	0801fda0 	.word	0x0801fda0

08014bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014be0:	ed2d 8b08 	vpush	{d8-d11}
 8014be4:	b099      	sub	sp, #100	; 0x64
 8014be6:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8014bea:	9215      	str	r2, [sp, #84]	; 0x54
 8014bec:	9309      	str	r3, [sp, #36]	; 0x24
 8014bee:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014bf0:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014bf4:	930d      	str	r3, [sp, #52]	; 0x34
 8014bf6:	910c      	str	r1, [sp, #48]	; 0x30
 8014bf8:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8014bfc:	9016      	str	r0, [sp, #88]	; 0x58
 8014bfe:	6850      	ldr	r0, [r2, #4]
 8014c00:	6812      	ldr	r2, [r2, #0]
 8014c02:	fb00 1303 	mla	r3, r0, r3, r1
 8014c06:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8014c0a:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014c0c:	681b      	ldr	r3, [r3, #0]
 8014c0e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014c10:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014c12:	685e      	ldr	r6, [r3, #4]
 8014c14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c16:	43db      	mvns	r3, r3
 8014c18:	b2db      	uxtb	r3, r3
 8014c1a:	eeb0 aa40 	vmov.f32	s20, s0
 8014c1e:	eef0 9a60 	vmov.f32	s19, s1
 8014c22:	eeb0 9a41 	vmov.f32	s18, s2
 8014c26:	eeb0 8a62 	vmov.f32	s16, s5
 8014c2a:	eef0 8a43 	vmov.f32	s17, s6
 8014c2e:	eef0 ba44 	vmov.f32	s23, s8
 8014c32:	eeb0 ba64 	vmov.f32	s22, s9
 8014c36:	eef0 aa45 	vmov.f32	s21, s10
 8014c3a:	3604      	adds	r6, #4
 8014c3c:	930a      	str	r3, [sp, #40]	; 0x28
 8014c3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c40:	2b00      	cmp	r3, #0
 8014c42:	dc03      	bgt.n	8014c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014c44:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014c46:	2b00      	cmp	r3, #0
 8014c48:	f340 8225 	ble.w	8015096 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8014c4c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014c4e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014c52:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014c56:	1e48      	subs	r0, r1, #1
 8014c58:	1e57      	subs	r7, r2, #1
 8014c5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c5c:	2b00      	cmp	r3, #0
 8014c5e:	f340 80e3 	ble.w	8014e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8014c62:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8014c66:	ea4f 4325 	mov.w	r3, r5, asr #16
 8014c6a:	d406      	bmi.n	8014c7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014c6c:	4584      	cmp	ip, r0
 8014c6e:	da04      	bge.n	8014c7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014c70:	2b00      	cmp	r3, #0
 8014c72:	db02      	blt.n	8014c7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014c74:	42bb      	cmp	r3, r7
 8014c76:	f2c0 80d8 	blt.w	8014e2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8014c7a:	f11c 0c01 	adds.w	ip, ip, #1
 8014c7e:	f100 80c9 	bmi.w	8014e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014c82:	4561      	cmp	r1, ip
 8014c84:	f2c0 80c6 	blt.w	8014e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014c88:	3301      	adds	r3, #1
 8014c8a:	f100 80c3 	bmi.w	8014e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014c8e:	429a      	cmp	r2, r3
 8014c90:	f2c0 80c0 	blt.w	8014e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8014c94:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014c98:	4647      	mov	r7, r8
 8014c9a:	f1bb 0f00 	cmp.w	fp, #0
 8014c9e:	f340 80e3 	ble.w	8014e68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014ca2:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014ca4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014ca6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014caa:	689b      	ldr	r3, [r3, #8]
 8014cac:	ea5f 422a 	movs.w	r2, sl, asr #16
 8014cb0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014cb4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8014cb8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014cbc:	f100 8121 	bmi.w	8014f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014cc0:	f103 39ff 	add.w	r9, r3, #4294967295
 8014cc4:	454a      	cmp	r2, r9
 8014cc6:	f280 811c 	bge.w	8014f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014cca:	f1bc 0f00 	cmp.w	ip, #0
 8014cce:	f2c0 8118 	blt.w	8014f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014cd2:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014cd6:	45cc      	cmp	ip, r9
 8014cd8:	f280 8113 	bge.w	8014f02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8014cdc:	b21b      	sxth	r3, r3
 8014cde:	fb0c 2203 	mla	r2, ip, r3, r2
 8014ce2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014ce4:	eb04 0902 	add.w	r9, r4, r2
 8014ce8:	5ca2      	ldrb	r2, [r4, r2]
 8014cea:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8014cee:	2800      	cmp	r0, #0
 8014cf0:	f000 80fe 	beq.w	8014ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014cf4:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014cf8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014cfc:	9211      	str	r2, [sp, #68]	; 0x44
 8014cfe:	b151      	cbz	r1, 8014d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014d00:	eb09 0203 	add.w	r2, r9, r3
 8014d04:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014d08:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d0c:	930f      	str	r3, [sp, #60]	; 0x3c
 8014d0e:	7853      	ldrb	r3, [r2, #1]
 8014d10:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d14:	9312      	str	r3, [sp, #72]	; 0x48
 8014d16:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014d18:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014d1a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014d1e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014d22:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014d26:	ea4c 0c03 	orr.w	ip, ip, r3
 8014d2a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014d2c:	041b      	lsls	r3, r3, #16
 8014d2e:	fb10 f201 	smulbb	r2, r0, r1
 8014d32:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8014d36:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014d3a:	10d2      	asrs	r2, r2, #3
 8014d3c:	4323      	orrs	r3, r4
 8014d3e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8014d42:	4353      	muls	r3, r2
 8014d44:	fb09 330c 	mla	r3, r9, ip, r3
 8014d48:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014d4c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014d50:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014d54:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014d58:	f1c1 0c10 	rsb	ip, r1, #16
 8014d5c:	ebac 0c00 	sub.w	ip, ip, r0
 8014d60:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014d64:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014d68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014d6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014d6c:	0418      	lsls	r0, r3, #16
 8014d6e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014d72:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014d76:	4318      	orrs	r0, r3
 8014d78:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014d7c:	fb02 c200 	mla	r2, r2, r0, ip
 8014d80:	0d53      	lsrs	r3, r2, #21
 8014d82:	0952      	lsrs	r2, r2, #5
 8014d84:	8838      	ldrh	r0, [r7, #0]
 8014d86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014d8a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014d8e:	431a      	orrs	r2, r3
 8014d90:	b292      	uxth	r2, r2
 8014d92:	1201      	asrs	r1, r0, #8
 8014d94:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8014d98:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8014d9c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014da0:	fb11 f104 	smulbb	r1, r1, r4
 8014da4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8014da8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014dac:	00c0      	lsls	r0, r0, #3
 8014dae:	fb0c 1c03 	mla	ip, ip, r3, r1
 8014db2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014db6:	10d1      	asrs	r1, r2, #3
 8014db8:	b2c0      	uxtb	r0, r0
 8014dba:	00d2      	lsls	r2, r2, #3
 8014dbc:	b2d2      	uxtb	r2, r2
 8014dbe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014dc2:	fb1e fe04 	smulbb	lr, lr, r4
 8014dc6:	fb10 f004 	smulbb	r0, r0, r4
 8014dca:	fa1f fc8c 	uxth.w	ip, ip
 8014dce:	fb01 e103 	mla	r1, r1, r3, lr
 8014dd2:	fb02 0303 	mla	r3, r2, r3, r0
 8014dd6:	b29a      	uxth	r2, r3
 8014dd8:	f10c 0301 	add.w	r3, ip, #1
 8014ddc:	b289      	uxth	r1, r1
 8014dde:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014de2:	1c53      	adds	r3, r2, #1
 8014de4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014de8:	1c4a      	adds	r2, r1, #1
 8014dea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014dee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014df2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014df6:	0949      	lsrs	r1, r1, #5
 8014df8:	ea43 030c 	orr.w	r3, r3, ip
 8014dfc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014e00:	430b      	orrs	r3, r1
 8014e02:	803b      	strh	r3, [r7, #0]
 8014e04:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014e06:	449a      	add	sl, r3
 8014e08:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014e0a:	3702      	adds	r7, #2
 8014e0c:	441d      	add	r5, r3
 8014e0e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014e12:	e742      	b.n	8014c9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014e14:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014e16:	449a      	add	sl, r3
 8014e18:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014e1a:	441d      	add	r5, r3
 8014e1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e1e:	3b01      	subs	r3, #1
 8014e20:	9309      	str	r3, [sp, #36]	; 0x24
 8014e22:	f108 0802 	add.w	r8, r8, #2
 8014e26:	e718      	b.n	8014c5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014e28:	d023      	beq.n	8014e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8014e2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e2c:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8014e2e:	3b01      	subs	r3, #1
 8014e30:	fb00 a003 	mla	r0, r0, r3, sl
 8014e34:	1400      	asrs	r0, r0, #16
 8014e36:	f53f af2d 	bmi.w	8014c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014e3a:	3901      	subs	r1, #1
 8014e3c:	4288      	cmp	r0, r1
 8014e3e:	f6bf af29 	bge.w	8014c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014e42:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8014e44:	fb01 5303 	mla	r3, r1, r3, r5
 8014e48:	141b      	asrs	r3, r3, #16
 8014e4a:	f53f af23 	bmi.w	8014c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014e4e:	3a01      	subs	r2, #1
 8014e50:	4293      	cmp	r3, r2
 8014e52:	f6bf af1f 	bge.w	8014c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014e56:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014e5a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8014e5e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8014e62:	f1be 0f00 	cmp.w	lr, #0
 8014e66:	dc6c      	bgt.n	8014f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8014e68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e6a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014e6e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8014e72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e74:	2b00      	cmp	r3, #0
 8014e76:	f340 810e 	ble.w	8015096 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8014e7a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014e7e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014e82:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014e86:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e88:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014e8c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014e90:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014e94:	eef0 6a48 	vmov.f32	s13, s16
 8014e98:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014e9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014ea0:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014ea4:	ee16 aa90 	vmov	sl, s13
 8014ea8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014eac:	eef0 6a68 	vmov.f32	s13, s17
 8014eb0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014eb4:	ee18 2a10 	vmov	r2, s16
 8014eb8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014ebc:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ec0:	ee18 2a90 	vmov	r2, s17
 8014ec4:	932d      	str	r3, [sp, #180]	; 0xb4
 8014ec6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ec8:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ecc:	932e      	str	r3, [sp, #184]	; 0xb8
 8014ece:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014ed0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014ed2:	3b01      	subs	r3, #1
 8014ed4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014ed8:	930c      	str	r3, [sp, #48]	; 0x30
 8014eda:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014edc:	bf08      	it	eq
 8014ede:	4613      	moveq	r3, r2
 8014ee0:	ee16 5a90 	vmov	r5, s13
 8014ee4:	9309      	str	r3, [sp, #36]	; 0x24
 8014ee6:	eef0 8a67 	vmov.f32	s17, s15
 8014eea:	eeb0 8a47 	vmov.f32	s16, s14
 8014eee:	e6a6      	b.n	8014c3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8014ef0:	2900      	cmp	r1, #0
 8014ef2:	f43f af10 	beq.w	8014d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014ef6:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014efa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014efe:	930f      	str	r3, [sp, #60]	; 0x3c
 8014f00:	e709      	b.n	8014d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014f02:	f112 0901 	adds.w	r9, r2, #1
 8014f06:	f53f af7d 	bmi.w	8014e04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014f0a:	454b      	cmp	r3, r9
 8014f0c:	f6ff af7a 	blt.w	8014e04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014f10:	f11c 0901 	adds.w	r9, ip, #1
 8014f14:	f53f af76 	bmi.w	8014e04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014f18:	45ce      	cmp	lr, r9
 8014f1a:	f6ff af73 	blt.w	8014e04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014f1e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014f20:	9202      	str	r2, [sp, #8]
 8014f22:	b21b      	sxth	r3, r3
 8014f24:	fa0f f28e 	sxth.w	r2, lr
 8014f28:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014f2c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8014f30:	9201      	str	r2, [sp, #4]
 8014f32:	9300      	str	r3, [sp, #0]
 8014f34:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014f36:	9816      	ldr	r0, [sp, #88]	; 0x58
 8014f38:	4633      	mov	r3, r6
 8014f3a:	4639      	mov	r1, r7
 8014f3c:	f7ff fd70 	bl	8014a20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8014f40:	e760      	b.n	8014e04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014f42:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8014f44:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014f46:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014f4a:	ea4f 422a 	mov.w	r2, sl, asr #16
 8014f4e:	1429      	asrs	r1, r5, #16
 8014f50:	fb03 2101 	mla	r1, r3, r1, r2
 8014f54:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014f56:	440a      	add	r2, r1
 8014f58:	5c61      	ldrb	r1, [r4, r1]
 8014f5a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8014f5e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014f62:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8014f66:	f1bc 0f00 	cmp.w	ip, #0
 8014f6a:	f000 808c 	beq.w	8015086 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8014f6e:	7857      	ldrb	r7, [r2, #1]
 8014f70:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8014f74:	9413      	str	r4, [sp, #76]	; 0x4c
 8014f76:	b140      	cbz	r0, 8014f8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014f78:	18d7      	adds	r7, r2, r3
 8014f7a:	5cd3      	ldrb	r3, [r2, r3]
 8014f7c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014f80:	9310      	str	r3, [sp, #64]	; 0x40
 8014f82:	787b      	ldrb	r3, [r7, #1]
 8014f84:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014f88:	9314      	str	r3, [sp, #80]	; 0x50
 8014f8a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014f8c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014f8e:	fb1c f200 	smulbb	r2, ip, r0
 8014f92:	041f      	lsls	r7, r3, #16
 8014f94:	10d2      	asrs	r2, r2, #3
 8014f96:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014f9a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8014f9e:	431f      	orrs	r7, r3
 8014fa0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8014fa4:	9317      	str	r3, [sp, #92]	; 0x5c
 8014fa6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014fa8:	041b      	lsls	r3, r3, #16
 8014faa:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8014fae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014fb2:	ea43 030b 	orr.w	r3, r3, fp
 8014fb6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014fb8:	4353      	muls	r3, r2
 8014fba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014fbe:	fb04 3707 	mla	r7, r4, r7, r3
 8014fc2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014fc6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014fca:	ea43 0b01 	orr.w	fp, r3, r1
 8014fce:	f1c0 0110 	rsb	r1, r0, #16
 8014fd2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014fd4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014fd6:	eba1 0c0c 	sub.w	ip, r1, ip
 8014fda:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014fde:	fb0c 770b 	mla	r7, ip, fp, r7
 8014fe2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014fe6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014fea:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014fee:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014ff2:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014ff6:	fb02 770c 	mla	r7, r2, ip, r7
 8014ffa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014ffc:	0d79      	lsrs	r1, r7, #21
 8014ffe:	097f      	lsrs	r7, r7, #5
 8015000:	8812      	ldrh	r2, [r2, #0]
 8015002:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015006:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801500a:	430f      	orrs	r7, r1
 801500c:	b2bb      	uxth	r3, r7
 801500e:	1211      	asrs	r1, r2, #8
 8015010:	1218      	asrs	r0, r3, #8
 8015012:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015016:	fb11 f104 	smulbb	r1, r1, r4
 801501a:	10d7      	asrs	r7, r2, #3
 801501c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015020:	00d2      	lsls	r2, r2, #3
 8015022:	fb00 1009 	mla	r0, r0, r9, r1
 8015026:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801502a:	10d9      	asrs	r1, r3, #3
 801502c:	b2d2      	uxtb	r2, r2
 801502e:	00db      	lsls	r3, r3, #3
 8015030:	fb17 f704 	smulbb	r7, r7, r4
 8015034:	fb12 f204 	smulbb	r2, r2, r4
 8015038:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801503c:	b2db      	uxtb	r3, r3
 801503e:	b280      	uxth	r0, r0
 8015040:	fb01 7109 	mla	r1, r1, r9, r7
 8015044:	fb03 2309 	mla	r3, r3, r9, r2
 8015048:	b29b      	uxth	r3, r3
 801504a:	b289      	uxth	r1, r1
 801504c:	1c42      	adds	r2, r0, #1
 801504e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015052:	1c4f      	adds	r7, r1, #1
 8015054:	1c5a      	adds	r2, r3, #1
 8015056:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801505a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801505e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8015062:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015066:	0949      	lsrs	r1, r1, #5
 8015068:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801506a:	4310      	orrs	r0, r2
 801506c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015070:	4308      	orrs	r0, r1
 8015072:	f823 0b02 	strh.w	r0, [r3], #2
 8015076:	930e      	str	r3, [sp, #56]	; 0x38
 8015078:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801507a:	449a      	add	sl, r3
 801507c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801507e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015082:	441d      	add	r5, r3
 8015084:	e6ed      	b.n	8014e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8015086:	2800      	cmp	r0, #0
 8015088:	f43f af7f 	beq.w	8014f8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801508c:	5cd3      	ldrb	r3, [r2, r3]
 801508e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015092:	9310      	str	r3, [sp, #64]	; 0x40
 8015094:	e779      	b.n	8014f8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8015096:	b019      	add	sp, #100	; 0x64
 8015098:	ecbd 8b08 	vpop	{d8-d11}
 801509c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080150a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80150a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80150a4:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 80150a8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80150ac:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80150b0:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 80150b4:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80150b8:	8808      	ldrh	r0, [r1, #0]
 80150ba:	fb06 570e 	mla	r7, r6, lr, r5
 80150be:	2e00      	cmp	r6, #0
 80150c0:	eb02 0807 	add.w	r8, r2, r7
 80150c4:	db38      	blt.n	8015138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80150c6:	45b1      	cmp	r9, r6
 80150c8:	dd36      	ble.n	8015138 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80150ca:	2d00      	cmp	r5, #0
 80150cc:	db32      	blt.n	8015134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80150ce:	45ae      	cmp	lr, r5
 80150d0:	dd30      	ble.n	8015134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80150d2:	5dd2      	ldrb	r2, [r2, r7]
 80150d4:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80150d8:	1c6a      	adds	r2, r5, #1
 80150da:	d430      	bmi.n	801513e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80150dc:	4596      	cmp	lr, r2
 80150de:	dd2e      	ble.n	801513e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80150e0:	b36c      	cbz	r4, 801513e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80150e2:	f898 2001 	ldrb.w	r2, [r8, #1]
 80150e6:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80150ea:	3601      	adds	r6, #1
 80150ec:	d42b      	bmi.n	8015146 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80150ee:	45b1      	cmp	r9, r6
 80150f0:	dd29      	ble.n	8015146 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80150f2:	f1bc 0f00 	cmp.w	ip, #0
 80150f6:	d028      	beq.n	801514a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 80150f8:	2d00      	cmp	r5, #0
 80150fa:	db22      	blt.n	8015142 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80150fc:	45ae      	cmp	lr, r5
 80150fe:	dd20      	ble.n	8015142 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8015100:	f818 600e 	ldrb.w	r6, [r8, lr]
 8015104:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8015108:	3501      	adds	r5, #1
 801510a:	d407      	bmi.n	801511c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801510c:	45ae      	cmp	lr, r5
 801510e:	dd05      	ble.n	801511c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8015110:	b134      	cbz	r4, 8015120 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8015112:	44c6      	add	lr, r8
 8015114:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015118:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801511c:	2c0f      	cmp	r4, #15
 801511e:	d802      	bhi.n	8015126 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8015120:	f1bc 0f0f 	cmp.w	ip, #15
 8015124:	d914      	bls.n	8015150 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8015126:	4b26      	ldr	r3, [pc, #152]	; (80151c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8015128:	4a26      	ldr	r2, [pc, #152]	; (80151c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801512a:	4827      	ldr	r0, [pc, #156]	; (80151c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 801512c:	f240 11db 	movw	r1, #475	; 0x1db
 8015130:	f006 fde0 	bl	801bcf4 <__assert_func>
 8015134:	4607      	mov	r7, r0
 8015136:	e7cf      	b.n	80150d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8015138:	4602      	mov	r2, r0
 801513a:	4607      	mov	r7, r0
 801513c:	e7d5      	b.n	80150ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801513e:	4602      	mov	r2, r0
 8015140:	e7d3      	b.n	80150ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8015142:	4606      	mov	r6, r0
 8015144:	e7e0      	b.n	8015108 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8015146:	4606      	mov	r6, r0
 8015148:	e7e8      	b.n	801511c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801514a:	2c0f      	cmp	r4, #15
 801514c:	d8eb      	bhi.n	8015126 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801514e:	4606      	mov	r6, r0
 8015150:	043d      	lsls	r5, r7, #16
 8015152:	fb14 f30c 	smulbb	r3, r4, ip
 8015156:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801515a:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801515e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015162:	10db      	asrs	r3, r3, #3
 8015164:	432f      	orrs	r7, r5
 8015166:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801516a:	f1cc 0510 	rsb	r5, ip, #16
 801516e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015172:	1b2d      	subs	r5, r5, r4
 8015174:	ea4e 0202 	orr.w	r2, lr, r2
 8015178:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801517c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8015180:	4354      	muls	r4, r2
 8015182:	fb05 4507 	mla	r5, r5, r7, r4
 8015186:	0404      	lsls	r4, r0, #16
 8015188:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801518c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015190:	4320      	orrs	r0, r4
 8015192:	fb03 5400 	mla	r4, r3, r0, r5
 8015196:	0430      	lsls	r0, r6, #16
 8015198:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801519c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80151a0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80151a4:	4330      	orrs	r0, r6
 80151a6:	fb03 4000 	mla	r0, r3, r0, r4
 80151aa:	0d43      	lsrs	r3, r0, #21
 80151ac:	0940      	lsrs	r0, r0, #5
 80151ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80151b2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80151b6:	4318      	orrs	r0, r3
 80151b8:	8008      	strh	r0, [r1, #0]
 80151ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80151be:	bf00      	nop
 80151c0:	0801fdd3 	.word	0x0801fdd3
 80151c4:	080203ab 	.word	0x080203ab
 80151c8:	0801fda0 	.word	0x0801fda0

080151cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80151cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151d0:	ed2d 8b0a 	vpush	{d8-d12}
 80151d4:	b093      	sub	sp, #76	; 0x4c
 80151d6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80151da:	920f      	str	r2, [sp, #60]	; 0x3c
 80151dc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80151de:	9108      	str	r1, [sp, #32]
 80151e0:	9306      	str	r3, [sp, #24]
 80151e2:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80151e6:	9010      	str	r0, [sp, #64]	; 0x40
 80151e8:	6850      	ldr	r0, [r2, #4]
 80151ea:	6812      	ldr	r2, [r2, #0]
 80151ec:	fb00 1303 	mla	r3, r0, r3, r1
 80151f0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80151f4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80151f6:	681b      	ldr	r3, [r3, #0]
 80151f8:	9307      	str	r3, [sp, #28]
 80151fa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80151fc:	685f      	ldr	r7, [r3, #4]
 80151fe:	eeb0 aa40 	vmov.f32	s20, s0
 8015202:	eef0 9a60 	vmov.f32	s19, s1
 8015206:	eeb0 9a41 	vmov.f32	s18, s2
 801520a:	eeb0 8a62 	vmov.f32	s16, s5
 801520e:	eef0 8a43 	vmov.f32	s17, s6
 8015212:	eeb0 ca44 	vmov.f32	s24, s8
 8015216:	eef0 ba64 	vmov.f32	s23, s9
 801521a:	eeb0 ba45 	vmov.f32	s22, s10
 801521e:	3704      	adds	r7, #4
 8015220:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8015224:	9b08      	ldr	r3, [sp, #32]
 8015226:	2b00      	cmp	r3, #0
 8015228:	dc03      	bgt.n	8015232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801522a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801522c:	2b00      	cmp	r3, #0
 801522e:	f340 81b2 	ble.w	8015596 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8015232:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015234:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015238:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801523c:	1e48      	subs	r0, r1, #1
 801523e:	f102 3cff 	add.w	ip, r2, #4294967295
 8015242:	9b06      	ldr	r3, [sp, #24]
 8015244:	2b00      	cmp	r3, #0
 8015246:	f340 80a9 	ble.w	801539c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801524a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801524e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8015252:	d406      	bmi.n	8015262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015254:	4586      	cmp	lr, r0
 8015256:	da04      	bge.n	8015262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015258:	2b00      	cmp	r3, #0
 801525a:	db02      	blt.n	8015262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801525c:	4563      	cmp	r3, ip
 801525e:	f2c0 809e 	blt.w	801539e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015262:	f11e 0e01 	adds.w	lr, lr, #1
 8015266:	f100 808f 	bmi.w	8015388 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801526a:	4571      	cmp	r1, lr
 801526c:	f2c0 808c 	blt.w	8015388 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015270:	3301      	adds	r3, #1
 8015272:	f100 8089 	bmi.w	8015388 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015276:	429a      	cmp	r2, r3
 8015278:	f2c0 8086 	blt.w	8015388 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801527c:	f8dd b018 	ldr.w	fp, [sp, #24]
 8015280:	46c8      	mov	r8, r9
 8015282:	f1bb 0f00 	cmp.w	fp, #0
 8015286:	f340 80a6 	ble.w	80153d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801528a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801528c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801528e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015292:	689b      	ldr	r3, [r3, #8]
 8015294:	1422      	asrs	r2, r4, #16
 8015296:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801529a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801529e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80152a2:	f100 80e3 	bmi.w	801546c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80152a6:	f103 3aff 	add.w	sl, r3, #4294967295
 80152aa:	4552      	cmp	r2, sl
 80152ac:	f280 80de 	bge.w	801546c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80152b0:	f1bc 0f00 	cmp.w	ip, #0
 80152b4:	f2c0 80da 	blt.w	801546c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80152b8:	f10e 3aff 	add.w	sl, lr, #4294967295
 80152bc:	45d4      	cmp	ip, sl
 80152be:	f280 80d5 	bge.w	801546c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80152c2:	b21b      	sxth	r3, r3
 80152c4:	fb0c 2203 	mla	r2, ip, r3, r2
 80152c8:	9d07      	ldr	r5, [sp, #28]
 80152ca:	eb05 0a02 	add.w	sl, r5, r2
 80152ce:	5caa      	ldrb	r2, [r5, r2]
 80152d0:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80152d4:	2800      	cmp	r0, #0
 80152d6:	f000 80c0 	beq.w	801545a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80152da:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80152de:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80152e2:	920b      	str	r2, [sp, #44]	; 0x2c
 80152e4:	b151      	cbz	r1, 80152fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80152e6:	eb0a 0203 	add.w	r2, sl, r3
 80152ea:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80152ee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152f2:	9309      	str	r3, [sp, #36]	; 0x24
 80152f4:	7853      	ldrb	r3, [r2, #1]
 80152f6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152fa:	930c      	str	r3, [sp, #48]	; 0x30
 80152fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80152fe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8015300:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015304:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015308:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801530c:	ea4c 0c03 	orr.w	ip, ip, r3
 8015310:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015312:	041b      	lsls	r3, r3, #16
 8015314:	fb10 f201 	smulbb	r2, r0, r1
 8015318:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801531c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8015320:	10d2      	asrs	r2, r2, #3
 8015322:	432b      	orrs	r3, r5
 8015324:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8015328:	4353      	muls	r3, r2
 801532a:	fb0a 330c 	mla	r3, sl, ip, r3
 801532e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015332:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015336:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801533a:	ea4c 0e0e 	orr.w	lr, ip, lr
 801533e:	f1c1 0c10 	rsb	ip, r1, #16
 8015342:	ebac 0c00 	sub.w	ip, ip, r0
 8015346:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801534a:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801534e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015350:	0418      	lsls	r0, r3, #16
 8015352:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015356:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801535a:	4318      	orrs	r0, r3
 801535c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015360:	fb02 c200 	mla	r2, r2, r0, ip
 8015364:	0d53      	lsrs	r3, r2, #21
 8015366:	0952      	lsrs	r2, r2, #5
 8015368:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801536c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015370:	431a      	orrs	r2, r3
 8015372:	f8a8 2000 	strh.w	r2, [r8]
 8015376:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015378:	441c      	add	r4, r3
 801537a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801537c:	f108 0802 	add.w	r8, r8, #2
 8015380:	441e      	add	r6, r3
 8015382:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015386:	e77c      	b.n	8015282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015388:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801538a:	441c      	add	r4, r3
 801538c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801538e:	441e      	add	r6, r3
 8015390:	9b06      	ldr	r3, [sp, #24]
 8015392:	3b01      	subs	r3, #1
 8015394:	9306      	str	r3, [sp, #24]
 8015396:	f109 0902 	add.w	r9, r9, #2
 801539a:	e752      	b.n	8015242 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801539c:	d020      	beq.n	80153e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801539e:	9b06      	ldr	r3, [sp, #24]
 80153a0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80153a2:	3b01      	subs	r3, #1
 80153a4:	fb00 4003 	mla	r0, r0, r3, r4
 80153a8:	1400      	asrs	r0, r0, #16
 80153aa:	f53f af67 	bmi.w	801527c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80153ae:	3901      	subs	r1, #1
 80153b0:	4288      	cmp	r0, r1
 80153b2:	f6bf af63 	bge.w	801527c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80153b6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80153b8:	fb01 6303 	mla	r3, r1, r3, r6
 80153bc:	141b      	asrs	r3, r3, #16
 80153be:	f53f af5d 	bmi.w	801527c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80153c2:	3a01      	subs	r2, #1
 80153c4:	4293      	cmp	r3, r2
 80153c6:	f6bf af59 	bge.w	801527c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80153ca:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80153ce:	46ca      	mov	sl, r9
 80153d0:	f1b8 0f00 	cmp.w	r8, #0
 80153d4:	dc67      	bgt.n	80154a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80153d6:	9b06      	ldr	r3, [sp, #24]
 80153d8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80153dc:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80153e0:	9b08      	ldr	r3, [sp, #32]
 80153e2:	2b00      	cmp	r3, #0
 80153e4:	f340 80d7 	ble.w	8015596 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80153e8:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80153ec:	ee79 9aab 	vadd.f32	s19, s19, s23
 80153f0:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80153f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80153f6:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80153fa:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80153fe:	eef0 6a48 	vmov.f32	s13, s16
 8015402:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015406:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801540a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801540e:	ee16 4a90 	vmov	r4, s13
 8015412:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015416:	eef0 6a68 	vmov.f32	s13, s17
 801541a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801541e:	ee18 2a10 	vmov	r2, s16
 8015422:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015426:	fb92 f3f3 	sdiv	r3, r2, r3
 801542a:	ee18 2a90 	vmov	r2, s17
 801542e:	9329      	str	r3, [sp, #164]	; 0xa4
 8015430:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015432:	fb92 f3f3 	sdiv	r3, r2, r3
 8015436:	932a      	str	r3, [sp, #168]	; 0xa8
 8015438:	9b08      	ldr	r3, [sp, #32]
 801543a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801543c:	3b01      	subs	r3, #1
 801543e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015442:	9308      	str	r3, [sp, #32]
 8015444:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015446:	bf08      	it	eq
 8015448:	4613      	moveq	r3, r2
 801544a:	ee16 6a90 	vmov	r6, s13
 801544e:	9306      	str	r3, [sp, #24]
 8015450:	eef0 8a67 	vmov.f32	s17, s15
 8015454:	eeb0 8a47 	vmov.f32	s16, s14
 8015458:	e6e4      	b.n	8015224 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801545a:	2900      	cmp	r1, #0
 801545c:	f43f af4e 	beq.w	80152fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8015460:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8015464:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015468:	9309      	str	r3, [sp, #36]	; 0x24
 801546a:	e747      	b.n	80152fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801546c:	f112 0a01 	adds.w	sl, r2, #1
 8015470:	d481      	bmi.n	8015376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015472:	4553      	cmp	r3, sl
 8015474:	f6ff af7f 	blt.w	8015376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015478:	f11c 0a01 	adds.w	sl, ip, #1
 801547c:	f53f af7b 	bmi.w	8015376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015480:	45d6      	cmp	lr, sl
 8015482:	f6ff af78 	blt.w	8015376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015486:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801548a:	b21b      	sxth	r3, r3
 801548c:	fa0f f28e 	sxth.w	r2, lr
 8015490:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8015494:	9201      	str	r2, [sp, #4]
 8015496:	9300      	str	r3, [sp, #0]
 8015498:	9a07      	ldr	r2, [sp, #28]
 801549a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801549c:	463b      	mov	r3, r7
 801549e:	4641      	mov	r1, r8
 80154a0:	f7ff fdfe 	bl	80150a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80154a4:	e767      	b.n	8015376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80154a6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80154a8:	9d07      	ldr	r5, [sp, #28]
 80154aa:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80154ae:	1422      	asrs	r2, r4, #16
 80154b0:	1431      	asrs	r1, r6, #16
 80154b2:	fb03 2101 	mla	r1, r3, r1, r2
 80154b6:	9a07      	ldr	r2, [sp, #28]
 80154b8:	440a      	add	r2, r1
 80154ba:	5c69      	ldrb	r1, [r5, r1]
 80154bc:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80154c0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80154c4:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80154c8:	f1be 0f00 	cmp.w	lr, #0
 80154cc:	d05c      	beq.n	8015588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 80154ce:	f892 c001 	ldrb.w	ip, [r2, #1]
 80154d2:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80154d6:	950d      	str	r5, [sp, #52]	; 0x34
 80154d8:	b150      	cbz	r0, 80154f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80154da:	eb02 0c03 	add.w	ip, r2, r3
 80154de:	5cd3      	ldrb	r3, [r2, r3]
 80154e0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80154e4:	930a      	str	r3, [sp, #40]	; 0x28
 80154e6:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80154ea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80154ee:	930e      	str	r3, [sp, #56]	; 0x38
 80154f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80154f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80154f4:	fb1e f200 	smulbb	r2, lr, r0
 80154f8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80154fc:	10d2      	asrs	r2, r2, #3
 80154fe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015502:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015506:	ea4c 0c03 	orr.w	ip, ip, r3
 801550a:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801550e:	9311      	str	r3, [sp, #68]	; 0x44
 8015510:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015512:	041b      	lsls	r3, r3, #16
 8015514:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8015518:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801551c:	ea43 030b 	orr.w	r3, r3, fp
 8015520:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015522:	4353      	muls	r3, r2
 8015524:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015528:	fb05 3c0c 	mla	ip, r5, ip, r3
 801552c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015530:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8015534:	ea43 0b01 	orr.w	fp, r3, r1
 8015538:	f1c0 0110 	rsb	r1, r0, #16
 801553c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801553e:	eba1 0e0e 	sub.w	lr, r1, lr
 8015542:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8015546:	fb0e cc0b 	mla	ip, lr, fp, ip
 801554a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801554e:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8015552:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015556:	ea4b 0e0e 	orr.w	lr, fp, lr
 801555a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801555e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015562:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8015566:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801556a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801556e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015572:	ea43 0c0c 	orr.w	ip, r3, ip
 8015576:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015578:	f82a cb02 	strh.w	ip, [sl], #2
 801557c:	441c      	add	r4, r3
 801557e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015580:	f108 38ff 	add.w	r8, r8, #4294967295
 8015584:	441e      	add	r6, r3
 8015586:	e723      	b.n	80153d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015588:	2800      	cmp	r0, #0
 801558a:	d0b1      	beq.n	80154f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801558c:	5cd3      	ldrb	r3, [r2, r3]
 801558e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015592:	930a      	str	r3, [sp, #40]	; 0x28
 8015594:	e7ac      	b.n	80154f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8015596:	b013      	add	sp, #76	; 0x4c
 8015598:	ecbd 8b0a 	vpop	{d8-d12}
 801559c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080155a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80155a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155a4:	468b      	mov	fp, r1
 80155a6:	8809      	ldrh	r1, [r1, #0]
 80155a8:	b089      	sub	sp, #36	; 0x24
 80155aa:	10cd      	asrs	r5, r1, #3
 80155ac:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 80155b0:	ea4f 2921 	mov.w	r9, r1, asr #8
 80155b4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80155b8:	00c9      	lsls	r1, r1, #3
 80155ba:	9500      	str	r5, [sp, #0]
 80155bc:	b2c9      	uxtb	r1, r1
 80155be:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 80155c2:	9101      	str	r1, [sp, #4]
 80155c4:	9900      	ldr	r1, [sp, #0]
 80155c6:	9202      	str	r2, [sp, #8]
 80155c8:	fb04 650e 	mla	r5, r4, lr, r6
 80155cc:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80155d0:	eb02 0805 	add.w	r8, r2, r5
 80155d4:	0209      	lsls	r1, r1, #8
 80155d6:	9a01      	ldr	r2, [sp, #4]
 80155d8:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80155dc:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80155e0:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80155e4:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80155e8:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80155ec:	4311      	orrs	r1, r2
 80155ee:	2c00      	cmp	r4, #0
 80155f0:	9107      	str	r1, [sp, #28]
 80155f2:	db43      	blt.n	801567c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80155f4:	45a2      	cmp	sl, r4
 80155f6:	dd41      	ble.n	801567c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80155f8:	2e00      	cmp	r6, #0
 80155fa:	db3d      	blt.n	8015678 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80155fc:	45b6      	cmp	lr, r6
 80155fe:	dd3b      	ble.n	8015678 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8015600:	9a02      	ldr	r2, [sp, #8]
 8015602:	5d55      	ldrb	r5, [r2, r5]
 8015604:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015608:	441d      	add	r5, r3
 801560a:	1c72      	adds	r2, r6, #1
 801560c:	d439      	bmi.n	8015682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801560e:	4596      	cmp	lr, r2
 8015610:	dd37      	ble.n	8015682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8015612:	2f00      	cmp	r7, #0
 8015614:	d035      	beq.n	8015682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8015616:	f898 1001 	ldrb.w	r1, [r8, #1]
 801561a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801561e:	4419      	add	r1, r3
 8015620:	3401      	adds	r4, #1
 8015622:	d432      	bmi.n	801568a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015624:	45a2      	cmp	sl, r4
 8015626:	dd30      	ble.n	801568a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8015628:	b378      	cbz	r0, 801568a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801562a:	2e00      	cmp	r6, #0
 801562c:	db2b      	blt.n	8015686 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801562e:	45b6      	cmp	lr, r6
 8015630:	dd29      	ble.n	8015686 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8015632:	f818 400e 	ldrb.w	r4, [r8, lr]
 8015636:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801563a:	441c      	add	r4, r3
 801563c:	3601      	adds	r6, #1
 801563e:	d427      	bmi.n	8015690 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015640:	45b6      	cmp	lr, r6
 8015642:	dd25      	ble.n	8015690 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015644:	b327      	cbz	r7, 8015690 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8015646:	44c6      	add	lr, r8
 8015648:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801564c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015650:	4413      	add	r3, r2
 8015652:	782a      	ldrb	r2, [r5, #0]
 8015654:	9202      	str	r2, [sp, #8]
 8015656:	780a      	ldrb	r2, [r1, #0]
 8015658:	9203      	str	r2, [sp, #12]
 801565a:	7822      	ldrb	r2, [r4, #0]
 801565c:	9204      	str	r2, [sp, #16]
 801565e:	2f0f      	cmp	r7, #15
 8015660:	781a      	ldrb	r2, [r3, #0]
 8015662:	9205      	str	r2, [sp, #20]
 8015664:	d801      	bhi.n	801566a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8015666:	280f      	cmp	r0, #15
 8015668:	d914      	bls.n	8015694 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801566a:	4b3f      	ldr	r3, [pc, #252]	; (8015768 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 801566c:	4a3f      	ldr	r2, [pc, #252]	; (801576c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801566e:	4840      	ldr	r0, [pc, #256]	; (8015770 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8015670:	f240 11f9 	movw	r1, #505	; 0x1f9
 8015674:	f006 fb3e 	bl	801bcf4 <__assert_func>
 8015678:	ad07      	add	r5, sp, #28
 801567a:	e7c6      	b.n	801560a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 801567c:	a907      	add	r1, sp, #28
 801567e:	460d      	mov	r5, r1
 8015680:	e7ce      	b.n	8015620 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8015682:	a907      	add	r1, sp, #28
 8015684:	e7cc      	b.n	8015620 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8015686:	ac07      	add	r4, sp, #28
 8015688:	e7d8      	b.n	801563c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801568a:	ab07      	add	r3, sp, #28
 801568c:	461c      	mov	r4, r3
 801568e:	e7e0      	b.n	8015652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8015690:	ab07      	add	r3, sp, #28
 8015692:	e7de      	b.n	8015652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8015694:	b2ba      	uxth	r2, r7
 8015696:	b280      	uxth	r0, r0
 8015698:	fb02 fa00 	mul.w	sl, r2, r0
 801569c:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80156a0:	0112      	lsls	r2, r2, #4
 80156a2:	b280      	uxth	r0, r0
 80156a4:	f891 8002 	ldrb.w	r8, [r1, #2]
 80156a8:	7849      	ldrb	r1, [r1, #1]
 80156aa:	78ae      	ldrb	r6, [r5, #2]
 80156ac:	786d      	ldrb	r5, [r5, #1]
 80156ae:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 80156b2:	eba2 020a 	sub.w	r2, r2, sl
 80156b6:	b292      	uxth	r2, r2
 80156b8:	ebae 0e00 	sub.w	lr, lr, r0
 80156bc:	fa1f fe8e 	uxth.w	lr, lr
 80156c0:	4351      	muls	r1, r2
 80156c2:	fb02 f808 	mul.w	r8, r2, r8
 80156c6:	fb0e 8806 	mla	r8, lr, r6, r8
 80156ca:	fb0e 1505 	mla	r5, lr, r5, r1
 80156ce:	78a6      	ldrb	r6, [r4, #2]
 80156d0:	7861      	ldrb	r1, [r4, #1]
 80156d2:	fa1f f78c 	uxth.w	r7, ip
 80156d6:	fb00 8806 	mla	r8, r0, r6, r8
 80156da:	fb00 5501 	mla	r5, r0, r1, r5
 80156de:	789e      	ldrb	r6, [r3, #2]
 80156e0:	7859      	ldrb	r1, [r3, #1]
 80156e2:	9b00      	ldr	r3, [sp, #0]
 80156e4:	ea6f 0c0c 	mvn.w	ip, ip
 80156e8:	fa5f fc8c 	uxtb.w	ip, ip
 80156ec:	fb0a 5101 	mla	r1, sl, r1, r5
 80156f0:	fb13 f50c 	smulbb	r5, r3, ip
 80156f4:	9b03      	ldr	r3, [sp, #12]
 80156f6:	435a      	muls	r2, r3
 80156f8:	9b02      	ldr	r3, [sp, #8]
 80156fa:	fb0e 2203 	mla	r2, lr, r3, r2
 80156fe:	9b04      	ldr	r3, [sp, #16]
 8015700:	fb00 2003 	mla	r0, r0, r3, r2
 8015704:	9b05      	ldr	r3, [sp, #20]
 8015706:	fb0a 8606 	mla	r6, sl, r6, r8
 801570a:	fb19 f90c 	smulbb	r9, r9, ip
 801570e:	fb0a 0a03 	mla	sl, sl, r3, r0
 8015712:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015716:	9b01      	ldr	r3, [sp, #4]
 8015718:	fb06 9607 	mla	r6, r6, r7, r9
 801571c:	b2b6      	uxth	r6, r6
 801571e:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8015722:	fb13 fc0c 	smulbb	ip, r3, ip
 8015726:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801572a:	fb01 5107 	mla	r1, r1, r7, r5
 801572e:	f106 0901 	add.w	r9, r6, #1
 8015732:	fb0a c707 	mla	r7, sl, r7, ip
 8015736:	b2bf      	uxth	r7, r7
 8015738:	b289      	uxth	r1, r1
 801573a:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801573e:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 8015742:	1c4d      	adds	r5, r1, #1
 8015744:	1c7e      	adds	r6, r7, #1
 8015746:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801574a:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 801574e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015752:	0949      	lsrs	r1, r1, #5
 8015754:	ea46 0609 	orr.w	r6, r6, r9
 8015758:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801575c:	430e      	orrs	r6, r1
 801575e:	f8ab 6000 	strh.w	r6, [fp]
 8015762:	b009      	add	sp, #36	; 0x24
 8015764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015768:	0801fdd3 	.word	0x0801fdd3
 801576c:	08020302 	.word	0x08020302
 8015770:	0801fda0 	.word	0x0801fda0

08015774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015778:	ed2d 8b08 	vpush	{d8-d11}
 801577c:	b095      	sub	sp, #84	; 0x54
 801577e:	eeb0 aa40 	vmov.f32	s20, s0
 8015782:	9212      	str	r2, [sp, #72]	; 0x48
 8015784:	9309      	str	r3, [sp, #36]	; 0x24
 8015786:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015788:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801578c:	930f      	str	r3, [sp, #60]	; 0x3c
 801578e:	910e      	str	r1, [sp, #56]	; 0x38
 8015790:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8015794:	9013      	str	r0, [sp, #76]	; 0x4c
 8015796:	6850      	ldr	r0, [r2, #4]
 8015798:	6812      	ldr	r2, [r2, #0]
 801579a:	fb00 1303 	mla	r3, r0, r3, r1
 801579e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80157a2:	930a      	str	r3, [sp, #40]	; 0x28
 80157a4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80157a6:	681b      	ldr	r3, [r3, #0]
 80157a8:	930d      	str	r3, [sp, #52]	; 0x34
 80157aa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80157ac:	685c      	ldr	r4, [r3, #4]
 80157ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80157b0:	43db      	mvns	r3, r3
 80157b2:	b2db      	uxtb	r3, r3
 80157b4:	eef0 9a60 	vmov.f32	s19, s1
 80157b8:	eeb0 9a41 	vmov.f32	s18, s2
 80157bc:	eeb0 8a62 	vmov.f32	s16, s5
 80157c0:	eef0 8a43 	vmov.f32	s17, s6
 80157c4:	eef0 ba44 	vmov.f32	s23, s8
 80157c8:	eeb0 ba64 	vmov.f32	s22, s9
 80157cc:	eef0 aa45 	vmov.f32	s21, s10
 80157d0:	3404      	adds	r4, #4
 80157d2:	930b      	str	r3, [sp, #44]	; 0x2c
 80157d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80157d6:	2b00      	cmp	r3, #0
 80157d8:	dc03      	bgt.n	80157e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80157da:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80157dc:	2b00      	cmp	r3, #0
 80157de:	f340 8255 	ble.w	8015c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80157e2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80157e4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80157e8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80157ec:	1e48      	subs	r0, r1, #1
 80157ee:	1e55      	subs	r5, r2, #1
 80157f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80157f2:	2b00      	cmp	r3, #0
 80157f4:	f340 80f9 	ble.w	80159ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80157f8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80157fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80157fc:	1436      	asrs	r6, r6, #16
 80157fe:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015802:	d406      	bmi.n	8015812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015804:	4286      	cmp	r6, r0
 8015806:	da04      	bge.n	8015812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015808:	2b00      	cmp	r3, #0
 801580a:	db02      	blt.n	8015812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801580c:	42ab      	cmp	r3, r5
 801580e:	f2c0 80ed 	blt.w	80159ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8015812:	3601      	adds	r6, #1
 8015814:	f100 80da 	bmi.w	80159cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015818:	42b1      	cmp	r1, r6
 801581a:	f2c0 80d7 	blt.w	80159cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801581e:	3301      	adds	r3, #1
 8015820:	f100 80d4 	bmi.w	80159cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8015824:	429a      	cmp	r2, r3
 8015826:	f2c0 80d1 	blt.w	80159cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801582a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801582c:	9311      	str	r3, [sp, #68]	; 0x44
 801582e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015830:	930c      	str	r3, [sp, #48]	; 0x30
 8015832:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015834:	2b00      	cmp	r3, #0
 8015836:	f340 80fa 	ble.w	8015a2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801583a:	982e      	ldr	r0, [sp, #184]	; 0xb8
 801583c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801583e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015840:	68c6      	ldr	r6, [r0, #12]
 8015842:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8015844:	141d      	asrs	r5, r3, #16
 8015846:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801584a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801584c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801584e:	1400      	asrs	r0, r0, #16
 8015850:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015854:	6892      	ldr	r2, [r2, #8]
 8015856:	f100 813e 	bmi.w	8015ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801585a:	1e57      	subs	r7, r2, #1
 801585c:	42b8      	cmp	r0, r7
 801585e:	f280 813a 	bge.w	8015ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015862:	2d00      	cmp	r5, #0
 8015864:	f2c0 8137 	blt.w	8015ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015868:	1e77      	subs	r7, r6, #1
 801586a:	42bd      	cmp	r5, r7
 801586c:	f280 8133 	bge.w	8015ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8015870:	b212      	sxth	r2, r2
 8015872:	fb05 0002 	mla	r0, r5, r2, r0
 8015876:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015878:	f815 a000 	ldrb.w	sl, [r5, r0]
 801587c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8015880:	182e      	adds	r6, r5, r0
 8015882:	eb04 050a 	add.w	r5, r4, sl
 8015886:	2b00      	cmp	r3, #0
 8015888:	f000 8117 	beq.w	8015aba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801588c:	f896 c001 	ldrb.w	ip, [r6, #1]
 8015890:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015894:	44a4      	add	ip, r4
 8015896:	2900      	cmp	r1, #0
 8015898:	f000 8117 	beq.w	8015aca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801589c:	18b0      	adds	r0, r6, r2
 801589e:	5cb2      	ldrb	r2, [r6, r2]
 80158a0:	7840      	ldrb	r0, [r0, #1]
 80158a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80158a6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80158aa:	4422      	add	r2, r4
 80158ac:	4420      	add	r0, r4
 80158ae:	b29b      	uxth	r3, r3
 80158b0:	b289      	uxth	r1, r1
 80158b2:	fb03 f901 	mul.w	r9, r3, r1
 80158b6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80158ba:	011b      	lsls	r3, r3, #4
 80158bc:	b289      	uxth	r1, r1
 80158be:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80158c2:	f895 b002 	ldrb.w	fp, [r5, #2]
 80158c6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80158c8:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80158cc:	f8b6 e000 	ldrh.w	lr, [r6]
 80158d0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80158d4:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80158d8:	eba3 0309 	sub.w	r3, r3, r9
 80158dc:	b29b      	uxth	r3, r3
 80158de:	eba8 0801 	sub.w	r8, r8, r1
 80158e2:	fa1f f888 	uxth.w	r8, r8
 80158e6:	435f      	muls	r7, r3
 80158e8:	fb08 770b 	mla	r7, r8, fp, r7
 80158ec:	f892 b002 	ldrb.w	fp, [r2, #2]
 80158f0:	9310      	str	r3, [sp, #64]	; 0x40
 80158f2:	fb01 770b 	mla	r7, r1, fp, r7
 80158f6:	f890 b002 	ldrb.w	fp, [r0, #2]
 80158fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80158fc:	fb09 770b 	mla	r7, r9, fp, r7
 8015900:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8015904:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015908:	fb1b fb03 	smulbb	fp, fp, r3
 801590c:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015910:	fb07 b706 	mla	r7, r7, r6, fp
 8015914:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015916:	f895 b001 	ldrb.w	fp, [r5, #1]
 801591a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801591e:	f89c c000 	ldrb.w	ip, [ip]
 8015922:	435d      	muls	r5, r3
 8015924:	fb08 550b 	mla	r5, r8, fp, r5
 8015928:	f892 b001 	ldrb.w	fp, [r2, #1]
 801592c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801592e:	fb01 550b 	mla	r5, r1, fp, r5
 8015932:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015936:	fb09 550b 	mla	r5, r9, fp, r5
 801593a:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801593e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015942:	fb1b fb03 	smulbb	fp, fp, r3
 8015946:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015948:	fb03 f30c 	mul.w	r3, r3, ip
 801594c:	f892 c000 	ldrb.w	ip, [r2]
 8015950:	fb08 330a 	mla	r3, r8, sl, r3
 8015954:	fb01 330c 	mla	r3, r1, ip, r3
 8015958:	f890 c000 	ldrb.w	ip, [r0]
 801595c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015960:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015964:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015966:	fa5f fe8e 	uxtb.w	lr, lr
 801596a:	b2bf      	uxth	r7, r7
 801596c:	fb1e fe03 	smulbb	lr, lr, r3
 8015970:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015974:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8015978:	fb05 b506 	mla	r5, r5, r6, fp
 801597c:	1c7b      	adds	r3, r7, #1
 801597e:	fb0c e606 	mla	r6, ip, r6, lr
 8015982:	b2ad      	uxth	r5, r5
 8015984:	b2b6      	uxth	r6, r6
 8015986:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801598a:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801598e:	f105 0b01 	add.w	fp, r5, #1
 8015992:	1c77      	adds	r7, r6, #1
 8015994:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8015998:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801599c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80159a0:	096d      	lsrs	r5, r5, #5
 80159a2:	431f      	orrs	r7, r3
 80159a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80159a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80159aa:	433d      	orrs	r5, r7
 80159ac:	801d      	strh	r5, [r3, #0]
 80159ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80159b0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80159b2:	3302      	adds	r3, #2
 80159b4:	930c      	str	r3, [sp, #48]	; 0x30
 80159b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80159b8:	4413      	add	r3, r2
 80159ba:	9327      	str	r3, [sp, #156]	; 0x9c
 80159bc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80159be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80159c0:	4413      	add	r3, r2
 80159c2:	9328      	str	r3, [sp, #160]	; 0xa0
 80159c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80159c6:	3b01      	subs	r3, #1
 80159c8:	9311      	str	r3, [sp, #68]	; 0x44
 80159ca:	e732      	b.n	8015832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80159cc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80159ce:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80159d0:	4433      	add	r3, r6
 80159d2:	9327      	str	r3, [sp, #156]	; 0x9c
 80159d4:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 80159d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80159d8:	4433      	add	r3, r6
 80159da:	9328      	str	r3, [sp, #160]	; 0xa0
 80159dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80159de:	3b01      	subs	r3, #1
 80159e0:	9309      	str	r3, [sp, #36]	; 0x24
 80159e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80159e4:	3302      	adds	r3, #2
 80159e6:	930a      	str	r3, [sp, #40]	; 0x28
 80159e8:	e702      	b.n	80157f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80159ea:	d027      	beq.n	8015a3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80159ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80159ee:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80159f0:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80159f2:	3b01      	subs	r3, #1
 80159f4:	fb00 5003 	mla	r0, r0, r3, r5
 80159f8:	1400      	asrs	r0, r0, #16
 80159fa:	f53f af16 	bmi.w	801582a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80159fe:	3901      	subs	r1, #1
 8015a00:	4288      	cmp	r0, r1
 8015a02:	f6bf af12 	bge.w	801582a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015a06:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015a08:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015a0a:	fb01 0303 	mla	r3, r1, r3, r0
 8015a0e:	141b      	asrs	r3, r3, #16
 8015a10:	f53f af0b 	bmi.w	801582a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015a14:	3a01      	subs	r2, #1
 8015a16:	4293      	cmp	r3, r2
 8015a18:	f6bf af07 	bge.w	801582a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015a1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015a1e:	9311      	str	r3, [sp, #68]	; 0x44
 8015a20:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8015a24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015a26:	930c      	str	r3, [sp, #48]	; 0x30
 8015a28:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015a2a:	2b00      	cmp	r3, #0
 8015a2c:	dc70      	bgt.n	8015b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8015a2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015a30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015a32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015a36:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015a3a:	930a      	str	r3, [sp, #40]	; 0x28
 8015a3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a3e:	2b00      	cmp	r3, #0
 8015a40:	f340 8124 	ble.w	8015c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8015a44:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015a48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015a4c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015a50:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015a52:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015a56:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015a5a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015a5e:	eef0 6a48 	vmov.f32	s13, s16
 8015a62:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015a66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015a6a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015a6e:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8015a72:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015a76:	eef0 6a68 	vmov.f32	s13, s17
 8015a7a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015a7e:	ee18 2a10 	vmov	r2, s16
 8015a82:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015a86:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a8a:	ee18 2a90 	vmov	r2, s17
 8015a8e:	9329      	str	r3, [sp, #164]	; 0xa4
 8015a90:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015a92:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a96:	932a      	str	r3, [sp, #168]	; 0xa8
 8015a98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015a9c:	3b01      	subs	r3, #1
 8015a9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015aa2:	930e      	str	r3, [sp, #56]	; 0x38
 8015aa4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015aa6:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8015aaa:	bf08      	it	eq
 8015aac:	4613      	moveq	r3, r2
 8015aae:	9309      	str	r3, [sp, #36]	; 0x24
 8015ab0:	eef0 8a67 	vmov.f32	s17, s15
 8015ab4:	eeb0 8a47 	vmov.f32	s16, s14
 8015ab8:	e68c      	b.n	80157d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015aba:	b149      	cbz	r1, 8015ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8015abc:	5cb2      	ldrb	r2, [r6, r2]
 8015abe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015ac2:	4422      	add	r2, r4
 8015ac4:	4628      	mov	r0, r5
 8015ac6:	46ac      	mov	ip, r5
 8015ac8:	e6f1      	b.n	80158ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015aca:	4628      	mov	r0, r5
 8015acc:	462a      	mov	r2, r5
 8015ace:	e6ee      	b.n	80158ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015ad0:	4628      	mov	r0, r5
 8015ad2:	462a      	mov	r2, r5
 8015ad4:	e7f7      	b.n	8015ac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8015ad6:	1c47      	adds	r7, r0, #1
 8015ad8:	f53f af69 	bmi.w	80159ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015adc:	42ba      	cmp	r2, r7
 8015ade:	f6ff af66 	blt.w	80159ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015ae2:	1c6f      	adds	r7, r5, #1
 8015ae4:	f53f af63 	bmi.w	80159ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015ae8:	42be      	cmp	r6, r7
 8015aea:	f6ff af60 	blt.w	80159ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015aee:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015af0:	9002      	str	r0, [sp, #8]
 8015af2:	b236      	sxth	r6, r6
 8015af4:	b212      	sxth	r2, r2
 8015af6:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8015afa:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8015afe:	9200      	str	r2, [sp, #0]
 8015b00:	9601      	str	r6, [sp, #4]
 8015b02:	4623      	mov	r3, r4
 8015b04:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8015b08:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015b0a:	f7ff fd49 	bl	80155a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8015b0e:	e74e      	b.n	80159ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8015b10:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015b12:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015b14:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8015b16:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015b18:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015b1c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015b1e:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015b22:	142d      	asrs	r5, r5, #16
 8015b24:	1400      	asrs	r0, r0, #16
 8015b26:	fb02 5000 	mla	r0, r2, r0, r5
 8015b2a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015b2c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8015b30:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015b34:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015b38:	182e      	adds	r6, r5, r0
 8015b3a:	eb04 0509 	add.w	r5, r4, r9
 8015b3e:	2b00      	cmp	r3, #0
 8015b40:	f000 8096 	beq.w	8015c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8015b44:	7877      	ldrb	r7, [r6, #1]
 8015b46:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015b4a:	4427      	add	r7, r4
 8015b4c:	2900      	cmp	r1, #0
 8015b4e:	f000 8097 	beq.w	8015c80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8015b52:	18b0      	adds	r0, r6, r2
 8015b54:	5cb2      	ldrb	r2, [r6, r2]
 8015b56:	7840      	ldrb	r0, [r0, #1]
 8015b58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015b5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015b60:	4422      	add	r2, r4
 8015b62:	4420      	add	r0, r4
 8015b64:	b29b      	uxth	r3, r3
 8015b66:	b289      	uxth	r1, r1
 8015b68:	fb03 f801 	mul.w	r8, r3, r1
 8015b6c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015b6e:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015b72:	f8b6 c000 	ldrh.w	ip, [r6]
 8015b76:	78be      	ldrb	r6, [r7, #2]
 8015b78:	f814 9009 	ldrb.w	r9, [r4, r9]
 8015b7c:	011b      	lsls	r3, r3, #4
 8015b7e:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8015b82:	b289      	uxth	r1, r1
 8015b84:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015b88:	eba3 0308 	sub.w	r3, r3, r8
 8015b8c:	b29b      	uxth	r3, r3
 8015b8e:	ebae 0e01 	sub.w	lr, lr, r1
 8015b92:	fa1f fe8e 	uxth.w	lr, lr
 8015b96:	435e      	muls	r6, r3
 8015b98:	fb0e 660b 	mla	r6, lr, fp, r6
 8015b9c:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015ba0:	9310      	str	r3, [sp, #64]	; 0x40
 8015ba2:	fb01 660b 	mla	r6, r1, fp, r6
 8015ba6:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015baa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015bac:	fb08 660b 	mla	r6, r8, fp, r6
 8015bb0:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8015bb4:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015bb8:	fb1b fb03 	smulbb	fp, fp, r3
 8015bbc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015bc0:	fb06 b60a 	mla	r6, r6, sl, fp
 8015bc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015bc6:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015bca:	787d      	ldrb	r5, [r7, #1]
 8015bcc:	783f      	ldrb	r7, [r7, #0]
 8015bce:	435d      	muls	r5, r3
 8015bd0:	fb0e 550b 	mla	r5, lr, fp, r5
 8015bd4:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015bd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015bda:	fb01 550b 	mla	r5, r1, fp, r5
 8015bde:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015be2:	fb08 550b 	mla	r5, r8, fp, r5
 8015be6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015bea:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015bee:	fb1b fb03 	smulbb	fp, fp, r3
 8015bf2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015bf4:	437b      	muls	r3, r7
 8015bf6:	7817      	ldrb	r7, [r2, #0]
 8015bf8:	fb0e 3309 	mla	r3, lr, r9, r3
 8015bfc:	fb01 3307 	mla	r3, r1, r7, r3
 8015c00:	7807      	ldrb	r7, [r0, #0]
 8015c02:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015c06:	fb08 3707 	mla	r7, r8, r7, r3
 8015c0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015c0c:	fa5f fc8c 	uxtb.w	ip, ip
 8015c10:	fb1c fc03 	smulbb	ip, ip, r3
 8015c14:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015c18:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015c1c:	fb05 b50a 	mla	r5, r5, sl, fp
 8015c20:	fb07 c70a 	mla	r7, r7, sl, ip
 8015c24:	b2b6      	uxth	r6, r6
 8015c26:	b2ad      	uxth	r5, r5
 8015c28:	b2bf      	uxth	r7, r7
 8015c2a:	1c73      	adds	r3, r6, #1
 8015c2c:	1c7a      	adds	r2, r7, #1
 8015c2e:	f105 0b01 	add.w	fp, r5, #1
 8015c32:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015c36:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015c3a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015c3e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015c42:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015c46:	096d      	lsrs	r5, r5, #5
 8015c48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015c4a:	4316      	orrs	r6, r2
 8015c4c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015c50:	432e      	orrs	r6, r5
 8015c52:	f823 6b02 	strh.w	r6, [r3], #2
 8015c56:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015c58:	930c      	str	r3, [sp, #48]	; 0x30
 8015c5a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015c5c:	4413      	add	r3, r2
 8015c5e:	9327      	str	r3, [sp, #156]	; 0x9c
 8015c60:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015c62:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015c64:	4413      	add	r3, r2
 8015c66:	9328      	str	r3, [sp, #160]	; 0xa0
 8015c68:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015c6a:	3b01      	subs	r3, #1
 8015c6c:	9311      	str	r3, [sp, #68]	; 0x44
 8015c6e:	e6db      	b.n	8015a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8015c70:	b149      	cbz	r1, 8015c86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8015c72:	5cb2      	ldrb	r2, [r6, r2]
 8015c74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015c78:	4422      	add	r2, r4
 8015c7a:	4628      	mov	r0, r5
 8015c7c:	462f      	mov	r7, r5
 8015c7e:	e771      	b.n	8015b64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8015c80:	4628      	mov	r0, r5
 8015c82:	462a      	mov	r2, r5
 8015c84:	e76e      	b.n	8015b64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8015c86:	4628      	mov	r0, r5
 8015c88:	462a      	mov	r2, r5
 8015c8a:	e7f7      	b.n	8015c7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8015c8c:	b015      	add	sp, #84	; 0x54
 8015c8e:	ecbd 8b08 	vpop	{d8-d11}
 8015c92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8015c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c9c:	880e      	ldrh	r6, [r1, #0]
 8015c9e:	b085      	sub	sp, #20
 8015ca0:	0230      	lsls	r0, r6, #8
 8015ca2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015ca6:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8015caa:	0170      	lsls	r0, r6, #5
 8015cac:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015cb0:	9101      	str	r1, [sp, #4]
 8015cb2:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8015cb6:	00f6      	lsls	r6, r6, #3
 8015cb8:	ea4b 0000 	orr.w	r0, fp, r0
 8015cbc:	b2f6      	uxtb	r6, r6
 8015cbe:	4691      	mov	r9, r2
 8015cc0:	fb05 7a0c 	mla	sl, r5, ip, r7
 8015cc4:	4306      	orrs	r6, r0
 8015cc6:	2d00      	cmp	r5, #0
 8015cc8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015ccc:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8015cd0:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8015cd4:	9603      	str	r6, [sp, #12]
 8015cd6:	eb09 0e0a 	add.w	lr, r9, sl
 8015cda:	db42      	blt.n	8015d62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015cdc:	45a8      	cmp	r8, r5
 8015cde:	dd40      	ble.n	8015d62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8015ce0:	2f00      	cmp	r7, #0
 8015ce2:	db3c      	blt.n	8015d5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015ce4:	45bc      	cmp	ip, r7
 8015ce6:	dd3a      	ble.n	8015d5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8015ce8:	f819 600a 	ldrb.w	r6, [r9, sl]
 8015cec:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015cf0:	441e      	add	r6, r3
 8015cf2:	1c78      	adds	r0, r7, #1
 8015cf4:	d438      	bmi.n	8015d68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015cf6:	4584      	cmp	ip, r0
 8015cf8:	dd36      	ble.n	8015d68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015cfa:	b3aa      	cbz	r2, 8015d68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8015cfc:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015d00:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015d04:	4418      	add	r0, r3
 8015d06:	3501      	adds	r5, #1
 8015d08:	d432      	bmi.n	8015d70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015d0a:	45a8      	cmp	r8, r5
 8015d0c:	dd30      	ble.n	8015d70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015d0e:	b37c      	cbz	r4, 8015d70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8015d10:	2f00      	cmp	r7, #0
 8015d12:	db2b      	blt.n	8015d6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015d14:	45bc      	cmp	ip, r7
 8015d16:	dd29      	ble.n	8015d6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8015d18:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8015d1c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015d20:	441d      	add	r5, r3
 8015d22:	3701      	adds	r7, #1
 8015d24:	d427      	bmi.n	8015d76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015d26:	45bc      	cmp	ip, r7
 8015d28:	dd25      	ble.n	8015d76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015d2a:	b322      	cbz	r2, 8015d76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8015d2c:	44f4      	add	ip, lr
 8015d2e:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8015d32:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015d36:	443b      	add	r3, r7
 8015d38:	781f      	ldrb	r7, [r3, #0]
 8015d3a:	f896 9000 	ldrb.w	r9, [r6]
 8015d3e:	f890 a000 	ldrb.w	sl, [r0]
 8015d42:	f895 8000 	ldrb.w	r8, [r5]
 8015d46:	2a0f      	cmp	r2, #15
 8015d48:	4639      	mov	r1, r7
 8015d4a:	d801      	bhi.n	8015d50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8015d4c:	2c0f      	cmp	r4, #15
 8015d4e:	d914      	bls.n	8015d7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8015d50:	4b2c      	ldr	r3, [pc, #176]	; (8015e04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8015d52:	4a2d      	ldr	r2, [pc, #180]	; (8015e08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8015d54:	482d      	ldr	r0, [pc, #180]	; (8015e0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8015d56:	f240 11f9 	movw	r1, #505	; 0x1f9
 8015d5a:	f005 ffcb 	bl	801bcf4 <__assert_func>
 8015d5e:	ae03      	add	r6, sp, #12
 8015d60:	e7c7      	b.n	8015cf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8015d62:	a803      	add	r0, sp, #12
 8015d64:	4606      	mov	r6, r0
 8015d66:	e7ce      	b.n	8015d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015d68:	a803      	add	r0, sp, #12
 8015d6a:	e7cc      	b.n	8015d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015d6c:	ad03      	add	r5, sp, #12
 8015d6e:	e7d8      	b.n	8015d22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8015d70:	ab03      	add	r3, sp, #12
 8015d72:	461d      	mov	r5, r3
 8015d74:	e7e0      	b.n	8015d38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8015d76:	ab03      	add	r3, sp, #12
 8015d78:	e7de      	b.n	8015d38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8015d7a:	b292      	uxth	r2, r2
 8015d7c:	b2a4      	uxth	r4, r4
 8015d7e:	fb02 fe04 	mul.w	lr, r2, r4
 8015d82:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8015d86:	0112      	lsls	r2, r2, #4
 8015d88:	b2a4      	uxth	r4, r4
 8015d8a:	f890 c002 	ldrb.w	ip, [r0, #2]
 8015d8e:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015d92:	7840      	ldrb	r0, [r0, #1]
 8015d94:	7876      	ldrb	r6, [r6, #1]
 8015d96:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8015d9a:	eba2 020e 	sub.w	r2, r2, lr
 8015d9e:	b292      	uxth	r2, r2
 8015da0:	1b3f      	subs	r7, r7, r4
 8015da2:	b2bf      	uxth	r7, r7
 8015da4:	fb02 fc0c 	mul.w	ip, r2, ip
 8015da8:	fb07 cc0b 	mla	ip, r7, fp, ip
 8015dac:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015db0:	fb04 cc0b 	mla	ip, r4, fp, ip
 8015db4:	f893 b002 	ldrb.w	fp, [r3, #2]
 8015db8:	785b      	ldrb	r3, [r3, #1]
 8015dba:	fb0e cc0b 	mla	ip, lr, fp, ip
 8015dbe:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8015dc2:	fb02 fc0a 	mul.w	ip, r2, sl
 8015dc6:	4342      	muls	r2, r0
 8015dc8:	7868      	ldrb	r0, [r5, #1]
 8015dca:	fb07 cc09 	mla	ip, r7, r9, ip
 8015dce:	fb07 2206 	mla	r2, r7, r6, r2
 8015dd2:	fb04 cc08 	mla	ip, r4, r8, ip
 8015dd6:	fb04 2400 	mla	r4, r4, r0, r2
 8015dda:	fb0e cc01 	mla	ip, lr, r1, ip
 8015dde:	fb0e 4e03 	mla	lr, lr, r3, r4
 8015de2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015de6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015dea:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015dee:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8015df2:	9b01      	ldr	r3, [sp, #4]
 8015df4:	ea4c 0c0e 	orr.w	ip, ip, lr
 8015df8:	f8a3 c000 	strh.w	ip, [r3]
 8015dfc:	b005      	add	sp, #20
 8015dfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e02:	bf00      	nop
 8015e04:	0801fdd3 	.word	0x0801fdd3
 8015e08:	08020302 	.word	0x08020302
 8015e0c:	0801fda0 	.word	0x0801fda0

08015e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e14:	ed2d 8b08 	vpush	{d8-d11}
 8015e18:	b08f      	sub	sp, #60	; 0x3c
 8015e1a:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8015e1e:	920c      	str	r2, [sp, #48]	; 0x30
 8015e20:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015e22:	910a      	str	r1, [sp, #40]	; 0x28
 8015e24:	9306      	str	r3, [sp, #24]
 8015e26:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8015e2a:	900d      	str	r0, [sp, #52]	; 0x34
 8015e2c:	6850      	ldr	r0, [r2, #4]
 8015e2e:	6812      	ldr	r2, [r2, #0]
 8015e30:	fb00 1303 	mla	r3, r0, r3, r1
 8015e34:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015e38:	9307      	str	r3, [sp, #28]
 8015e3a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e3c:	681b      	ldr	r3, [r3, #0]
 8015e3e:	9308      	str	r3, [sp, #32]
 8015e40:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e42:	685c      	ldr	r4, [r3, #4]
 8015e44:	eeb0 aa40 	vmov.f32	s20, s0
 8015e48:	eef0 9a60 	vmov.f32	s19, s1
 8015e4c:	eeb0 9a41 	vmov.f32	s18, s2
 8015e50:	eeb0 8a62 	vmov.f32	s16, s5
 8015e54:	eef0 8a43 	vmov.f32	s17, s6
 8015e58:	eef0 ba44 	vmov.f32	s23, s8
 8015e5c:	eeb0 ba64 	vmov.f32	s22, s9
 8015e60:	eef0 aa45 	vmov.f32	s21, s10
 8015e64:	3404      	adds	r4, #4
 8015e66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e68:	2b00      	cmp	r3, #0
 8015e6a:	dc03      	bgt.n	8015e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015e6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015e6e:	2b00      	cmp	r3, #0
 8015e70:	f340 81d6 	ble.w	8016220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8015e74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015e76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015e7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015e7e:	1e48      	subs	r0, r1, #1
 8015e80:	1e56      	subs	r6, r2, #1
 8015e82:	9b06      	ldr	r3, [sp, #24]
 8015e84:	2b00      	cmp	r3, #0
 8015e86:	f340 80b7 	ble.w	8015ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e8a:	ea5f 472b 	movs.w	r7, fp, asr #16
 8015e8e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015e92:	d406      	bmi.n	8015ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015e94:	4287      	cmp	r7, r0
 8015e96:	da04      	bge.n	8015ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015e98:	2b00      	cmp	r3, #0
 8015e9a:	db02      	blt.n	8015ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015e9c:	42b3      	cmp	r3, r6
 8015e9e:	f2c0 80ac 	blt.w	8015ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8015ea2:	3701      	adds	r7, #1
 8015ea4:	f100 809d 	bmi.w	8015fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015ea8:	42b9      	cmp	r1, r7
 8015eaa:	f2c0 809a 	blt.w	8015fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015eae:	3301      	adds	r3, #1
 8015eb0:	f100 8097 	bmi.w	8015fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015eb4:	429a      	cmp	r2, r3
 8015eb6:	f2c0 8094 	blt.w	8015fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015eba:	9b06      	ldr	r3, [sp, #24]
 8015ebc:	930b      	str	r3, [sp, #44]	; 0x2c
 8015ebe:	9b07      	ldr	r3, [sp, #28]
 8015ec0:	9309      	str	r3, [sp, #36]	; 0x24
 8015ec2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015ec4:	2b00      	cmp	r3, #0
 8015ec6:	f340 80b5 	ble.w	8016034 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8015eca:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8015ecc:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015ece:	68c7      	ldr	r7, [r0, #12]
 8015ed0:	6892      	ldr	r2, [r2, #8]
 8015ed2:	ea5f 402b 	movs.w	r0, fp, asr #16
 8015ed6:	ea4f 4625 	mov.w	r6, r5, asr #16
 8015eda:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015ede:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015ee2:	f100 80fb 	bmi.w	80160dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015ee6:	f102 3cff 	add.w	ip, r2, #4294967295
 8015eea:	4560      	cmp	r0, ip
 8015eec:	f280 80f6 	bge.w	80160dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015ef0:	2e00      	cmp	r6, #0
 8015ef2:	f2c0 80f3 	blt.w	80160dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015ef6:	f107 3cff 	add.w	ip, r7, #4294967295
 8015efa:	4566      	cmp	r6, ip
 8015efc:	f280 80ee 	bge.w	80160dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8015f00:	b212      	sxth	r2, r2
 8015f02:	fb06 0002 	mla	r0, r6, r2, r0
 8015f06:	9e08      	ldr	r6, [sp, #32]
 8015f08:	1837      	adds	r7, r6, r0
 8015f0a:	5c30      	ldrb	r0, [r6, r0]
 8015f0c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8015f10:	eb04 0c08 	add.w	ip, r4, r8
 8015f14:	2b00      	cmp	r3, #0
 8015f16:	f000 80d3 	beq.w	80160c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8015f1a:	787e      	ldrb	r6, [r7, #1]
 8015f1c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015f20:	4426      	add	r6, r4
 8015f22:	2900      	cmp	r1, #0
 8015f24:	f000 80d4 	beq.w	80160d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8015f28:	18b8      	adds	r0, r7, r2
 8015f2a:	5cba      	ldrb	r2, [r7, r2]
 8015f2c:	7840      	ldrb	r0, [r0, #1]
 8015f2e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015f32:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015f36:	4422      	add	r2, r4
 8015f38:	4420      	add	r0, r4
 8015f3a:	b29b      	uxth	r3, r3
 8015f3c:	b289      	uxth	r1, r1
 8015f3e:	fb03 f901 	mul.w	r9, r3, r1
 8015f42:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015f46:	011b      	lsls	r3, r3, #4
 8015f48:	b289      	uxth	r1, r1
 8015f4a:	78b7      	ldrb	r7, [r6, #2]
 8015f4c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015f50:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015f54:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015f58:	eba3 0309 	sub.w	r3, r3, r9
 8015f5c:	b29b      	uxth	r3, r3
 8015f5e:	ebae 0e01 	sub.w	lr, lr, r1
 8015f62:	fa1f fe8e 	uxth.w	lr, lr
 8015f66:	435f      	muls	r7, r3
 8015f68:	fb0e 770a 	mla	r7, lr, sl, r7
 8015f6c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015f70:	fb01 770a 	mla	r7, r1, sl, r7
 8015f74:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015f78:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015f7c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015f80:	f896 8000 	ldrb.w	r8, [r6]
 8015f84:	7876      	ldrb	r6, [r6, #1]
 8015f86:	fb03 f808 	mul.w	r8, r3, r8
 8015f8a:	fb0e 8807 	mla	r8, lr, r7, r8
 8015f8e:	7817      	ldrb	r7, [r2, #0]
 8015f90:	fb01 8807 	mla	r8, r1, r7, r8
 8015f94:	7807      	ldrb	r7, [r0, #0]
 8015f96:	fb09 8707 	mla	r7, r9, r7, r8
 8015f9a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015f9e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015fa2:	ea47 070a 	orr.w	r7, r7, sl
 8015fa6:	4373      	muls	r3, r6
 8015fa8:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015fac:	fb0e 330c 	mla	r3, lr, ip, r3
 8015fb0:	fb01 310a 	mla	r1, r1, sl, r3
 8015fb4:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015fb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fba:	fb09 1a0a 	mla	sl, r9, sl, r1
 8015fbe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015fc2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015fc6:	ea47 070a 	orr.w	r7, r7, sl
 8015fca:	801f      	strh	r7, [r3, #0]
 8015fcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fce:	3302      	adds	r3, #2
 8015fd0:	9309      	str	r3, [sp, #36]	; 0x24
 8015fd2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015fd4:	449b      	add	fp, r3
 8015fd6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015fd8:	441d      	add	r5, r3
 8015fda:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015fdc:	3b01      	subs	r3, #1
 8015fde:	930b      	str	r3, [sp, #44]	; 0x2c
 8015fe0:	e76f      	b.n	8015ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015fe2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015fe4:	449b      	add	fp, r3
 8015fe6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015fe8:	441d      	add	r5, r3
 8015fea:	9b06      	ldr	r3, [sp, #24]
 8015fec:	3b01      	subs	r3, #1
 8015fee:	9306      	str	r3, [sp, #24]
 8015ff0:	9b07      	ldr	r3, [sp, #28]
 8015ff2:	3302      	adds	r3, #2
 8015ff4:	9307      	str	r3, [sp, #28]
 8015ff6:	e744      	b.n	8015e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015ff8:	d023      	beq.n	8016042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8015ffa:	9b06      	ldr	r3, [sp, #24]
 8015ffc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8015ffe:	3b01      	subs	r3, #1
 8016000:	fb00 b003 	mla	r0, r0, r3, fp
 8016004:	1400      	asrs	r0, r0, #16
 8016006:	f53f af58 	bmi.w	8015eba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801600a:	3901      	subs	r1, #1
 801600c:	4288      	cmp	r0, r1
 801600e:	f6bf af54 	bge.w	8015eba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016012:	9924      	ldr	r1, [sp, #144]	; 0x90
 8016014:	fb01 5303 	mla	r3, r1, r3, r5
 8016018:	141b      	asrs	r3, r3, #16
 801601a:	f53f af4e 	bmi.w	8015eba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801601e:	3a01      	subs	r2, #1
 8016020:	4293      	cmp	r3, r2
 8016022:	f6bf af4a 	bge.w	8015eba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016026:	9b06      	ldr	r3, [sp, #24]
 8016028:	9309      	str	r3, [sp, #36]	; 0x24
 801602a:	9b07      	ldr	r3, [sp, #28]
 801602c:	930b      	str	r3, [sp, #44]	; 0x2c
 801602e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016030:	2b00      	cmp	r3, #0
 8016032:	dc70      	bgt.n	8016116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8016034:	9b06      	ldr	r3, [sp, #24]
 8016036:	9a07      	ldr	r2, [sp, #28]
 8016038:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801603c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016040:	9307      	str	r3, [sp, #28]
 8016042:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016044:	2b00      	cmp	r3, #0
 8016046:	f340 80eb 	ble.w	8016220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801604a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801604e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016052:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016056:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016058:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801605c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016060:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016064:	eef0 6a48 	vmov.f32	s13, s16
 8016068:	ee69 7a27 	vmul.f32	s15, s18, s15
 801606c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016070:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016074:	ee16 ba90 	vmov	fp, s13
 8016078:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801607c:	eef0 6a68 	vmov.f32	s13, s17
 8016080:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016084:	ee18 2a10 	vmov	r2, s16
 8016088:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801608c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016090:	ee18 2a90 	vmov	r2, s17
 8016094:	9323      	str	r3, [sp, #140]	; 0x8c
 8016096:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016098:	fb92 f3f3 	sdiv	r3, r2, r3
 801609c:	9324      	str	r3, [sp, #144]	; 0x90
 801609e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80160a0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80160a2:	3b01      	subs	r3, #1
 80160a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80160a8:	930a      	str	r3, [sp, #40]	; 0x28
 80160aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80160ac:	bf08      	it	eq
 80160ae:	4613      	moveq	r3, r2
 80160b0:	ee16 5a90 	vmov	r5, s13
 80160b4:	9306      	str	r3, [sp, #24]
 80160b6:	eef0 8a67 	vmov.f32	s17, s15
 80160ba:	eeb0 8a47 	vmov.f32	s16, s14
 80160be:	e6d2      	b.n	8015e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80160c0:	b149      	cbz	r1, 80160d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 80160c2:	5cba      	ldrb	r2, [r7, r2]
 80160c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80160c8:	4422      	add	r2, r4
 80160ca:	4660      	mov	r0, ip
 80160cc:	4666      	mov	r6, ip
 80160ce:	e734      	b.n	8015f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80160d0:	4660      	mov	r0, ip
 80160d2:	4662      	mov	r2, ip
 80160d4:	e731      	b.n	8015f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80160d6:	4660      	mov	r0, ip
 80160d8:	4662      	mov	r2, ip
 80160da:	e7f7      	b.n	80160cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 80160dc:	f110 0c01 	adds.w	ip, r0, #1
 80160e0:	f53f af74 	bmi.w	8015fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80160e4:	4562      	cmp	r2, ip
 80160e6:	f6ff af71 	blt.w	8015fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80160ea:	f116 0c01 	adds.w	ip, r6, #1
 80160ee:	f53f af6d 	bmi.w	8015fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80160f2:	4567      	cmp	r7, ip
 80160f4:	f6ff af6a 	blt.w	8015fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80160f8:	b23f      	sxth	r7, r7
 80160fa:	b212      	sxth	r2, r2
 80160fc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8016100:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8016104:	9200      	str	r2, [sp, #0]
 8016106:	9701      	str	r7, [sp, #4]
 8016108:	4623      	mov	r3, r4
 801610a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801610e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8016110:	f7ff fdc2 	bl	8015c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8016114:	e75a      	b.n	8015fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016116:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016118:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801611c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8016120:	1428      	asrs	r0, r5, #16
 8016122:	fb02 6000 	mla	r0, r2, r0, r6
 8016126:	9e08      	ldr	r6, [sp, #32]
 8016128:	f816 8000 	ldrb.w	r8, [r6, r0]
 801612c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8016130:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8016134:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016138:	1837      	adds	r7, r6, r0
 801613a:	eb04 0c08 	add.w	ip, r4, r8
 801613e:	2b00      	cmp	r3, #0
 8016140:	d060      	beq.n	8016204 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8016142:	787e      	ldrb	r6, [r7, #1]
 8016144:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016148:	4426      	add	r6, r4
 801614a:	2900      	cmp	r1, #0
 801614c:	d062      	beq.n	8016214 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 801614e:	18b8      	adds	r0, r7, r2
 8016150:	5cba      	ldrb	r2, [r7, r2]
 8016152:	7840      	ldrb	r0, [r0, #1]
 8016154:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016158:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801615c:	4422      	add	r2, r4
 801615e:	4420      	add	r0, r4
 8016160:	b29b      	uxth	r3, r3
 8016162:	b289      	uxth	r1, r1
 8016164:	fb03 f901 	mul.w	r9, r3, r1
 8016168:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801616c:	011b      	lsls	r3, r3, #4
 801616e:	b289      	uxth	r1, r1
 8016170:	78b7      	ldrb	r7, [r6, #2]
 8016172:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016176:	f89c c001 	ldrb.w	ip, [ip, #1]
 801617a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801617e:	eba3 0309 	sub.w	r3, r3, r9
 8016182:	b29b      	uxth	r3, r3
 8016184:	ebae 0e01 	sub.w	lr, lr, r1
 8016188:	fa1f fe8e 	uxth.w	lr, lr
 801618c:	435f      	muls	r7, r3
 801618e:	fb0e 770a 	mla	r7, lr, sl, r7
 8016192:	f892 a002 	ldrb.w	sl, [r2, #2]
 8016196:	fb01 770a 	mla	r7, r1, sl, r7
 801619a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801619e:	fb09 7a0a 	mla	sl, r9, sl, r7
 80161a2:	f814 7008 	ldrb.w	r7, [r4, r8]
 80161a6:	f896 8000 	ldrb.w	r8, [r6]
 80161aa:	7876      	ldrb	r6, [r6, #1]
 80161ac:	fb03 f808 	mul.w	r8, r3, r8
 80161b0:	fb0e 8807 	mla	r8, lr, r7, r8
 80161b4:	7817      	ldrb	r7, [r2, #0]
 80161b6:	fb01 8807 	mla	r8, r1, r7, r8
 80161ba:	7807      	ldrb	r7, [r0, #0]
 80161bc:	fb09 8707 	mla	r7, r9, r7, r8
 80161c0:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80161c4:	4373      	muls	r3, r6
 80161c6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80161ca:	7856      	ldrb	r6, [r2, #1]
 80161cc:	ea47 070a 	orr.w	r7, r7, sl
 80161d0:	fb0e 330c 	mla	r3, lr, ip, r3
 80161d4:	f890 a001 	ldrb.w	sl, [r0, #1]
 80161d8:	fb01 3306 	mla	r3, r1, r6, r3
 80161dc:	fb09 3a0a 	mla	sl, r9, sl, r3
 80161e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80161e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80161e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80161ea:	ea47 070a 	orr.w	r7, r7, sl
 80161ee:	f823 7b02 	strh.w	r7, [r3], #2
 80161f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80161f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80161f6:	449b      	add	fp, r3
 80161f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80161fa:	441d      	add	r5, r3
 80161fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80161fe:	3b01      	subs	r3, #1
 8016200:	9309      	str	r3, [sp, #36]	; 0x24
 8016202:	e714      	b.n	801602e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8016204:	b149      	cbz	r1, 801621a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8016206:	5cba      	ldrb	r2, [r7, r2]
 8016208:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801620c:	4422      	add	r2, r4
 801620e:	4660      	mov	r0, ip
 8016210:	4666      	mov	r6, ip
 8016212:	e7a5      	b.n	8016160 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8016214:	4660      	mov	r0, ip
 8016216:	4662      	mov	r2, ip
 8016218:	e7a2      	b.n	8016160 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801621a:	4660      	mov	r0, ip
 801621c:	4662      	mov	r2, ip
 801621e:	e7f7      	b.n	8016210 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8016220:	b00f      	add	sp, #60	; 0x3c
 8016222:	ecbd 8b08 	vpop	{d8-d11}
 8016226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801622c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801622c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016230:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 8016234:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8016238:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801623c:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8016240:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 8016244:	fb04 560c 	mla	r6, r4, ip, r5
 8016248:	2c00      	cmp	r4, #0
 801624a:	eb02 0e06 	add.w	lr, r2, r6
 801624e:	db3d      	blt.n	80162cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8016250:	45a0      	cmp	r8, r4
 8016252:	dd3b      	ble.n	80162cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 8016254:	2d00      	cmp	r5, #0
 8016256:	db37      	blt.n	80162c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8016258:	45ac      	cmp	ip, r5
 801625a:	dd35      	ble.n	80162c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 801625c:	5d92      	ldrb	r2, [r2, r6]
 801625e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016262:	1c6e      	adds	r6, r5, #1
 8016264:	d435      	bmi.n	80162d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8016266:	45b4      	cmp	ip, r6
 8016268:	dd33      	ble.n	80162d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801626a:	b3a0      	cbz	r0, 80162d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 801626c:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8016270:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8016274:	3401      	adds	r4, #1
 8016276:	d432      	bmi.n	80162de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8016278:	45a0      	cmp	r8, r4
 801627a:	dd30      	ble.n	80162de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 801627c:	b397      	cbz	r7, 80162e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 801627e:	2d00      	cmp	r5, #0
 8016280:	db2b      	blt.n	80162da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8016282:	45ac      	cmp	ip, r5
 8016284:	dd29      	ble.n	80162da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8016286:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801628a:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 801628e:	3501      	adds	r5, #1
 8016290:	d42b      	bmi.n	80162ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8016292:	45ac      	cmp	ip, r5
 8016294:	dd29      	ble.n	80162ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8016296:	b350      	cbz	r0, 80162ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8016298:	44f4      	add	ip, lr
 801629a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801629e:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80162a2:	280f      	cmp	r0, #15
 80162a4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80162a8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80162ac:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80162b0:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80162b4:	d801      	bhi.n	80162ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 80162b6:	2f0f      	cmp	r7, #15
 80162b8:	d91b      	bls.n	80162f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 80162ba:	4b8d      	ldr	r3, [pc, #564]	; (80164f0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 80162bc:	4a8d      	ldr	r2, [pc, #564]	; (80164f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 80162be:	488e      	ldr	r0, [pc, #568]	; (80164f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 80162c0:	f240 11f9 	movw	r1, #505	; 0x1f9
 80162c4:	f005 fd16 	bl	801bcf4 <__assert_func>
 80162c8:	2200      	movs	r2, #0
 80162ca:	e7ca      	b.n	8016262 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 80162cc:	2600      	movs	r6, #0
 80162ce:	4632      	mov	r2, r6
 80162d0:	e7d0      	b.n	8016274 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 80162d2:	2600      	movs	r6, #0
 80162d4:	e7ce      	b.n	8016274 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 80162d6:	4606      	mov	r6, r0
 80162d8:	e7cc      	b.n	8016274 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 80162da:	2400      	movs	r4, #0
 80162dc:	e7d7      	b.n	801628e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 80162de:	2300      	movs	r3, #0
 80162e0:	461c      	mov	r4, r3
 80162e2:	e7de      	b.n	80162a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80162e4:	463b      	mov	r3, r7
 80162e6:	463c      	mov	r4, r7
 80162e8:	e7db      	b.n	80162a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80162ea:	2300      	movs	r3, #0
 80162ec:	e7d9      	b.n	80162a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80162ee:	4603      	mov	r3, r0
 80162f0:	e7d7      	b.n	80162a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 80162f2:	b280      	uxth	r0, r0
 80162f4:	b2bf      	uxth	r7, r7
 80162f6:	fb07 fe00 	mul.w	lr, r7, r0
 80162fa:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80162fe:	0100      	lsls	r0, r0, #4
 8016300:	eba0 0c0e 	sub.w	ip, r0, lr
 8016304:	b2bf      	uxth	r7, r7
 8016306:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801630a:	fa1f fc8c 	uxth.w	ip, ip
 801630e:	1bed      	subs	r5, r5, r7
 8016310:	b2ad      	uxth	r5, r5
 8016312:	fb0a f00c 	mul.w	r0, sl, ip
 8016316:	fb0b 0005 	mla	r0, fp, r5, r0
 801631a:	fb07 0009 	mla	r0, r7, r9, r0
 801631e:	fb0e 0008 	mla	r0, lr, r8, r0
 8016322:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016326:	9001      	str	r0, [sp, #4]
 8016328:	2800      	cmp	r0, #0
 801632a:	f000 80de 	beq.w	80164ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 801632e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016332:	d018      	beq.n	8016366 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 8016334:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016338:	fb0b f000 	mul.w	r0, fp, r0
 801633c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016340:	fb0b fb02 	mul.w	fp, fp, r2
 8016344:	0a02      	lsrs	r2, r0, #8
 8016346:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801634a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801634e:	4402      	add	r2, r0
 8016350:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8016354:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016358:	0a12      	lsrs	r2, r2, #8
 801635a:	0a00      	lsrs	r0, r0, #8
 801635c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016360:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016364:	4302      	orrs	r2, r0
 8016366:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801636a:	d01a      	beq.n	80163a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 801636c:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8016370:	fb0a f000 	mul.w	r0, sl, r0
 8016374:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016378:	fb0a fa06 	mul.w	sl, sl, r6
 801637c:	0a06      	lsrs	r6, r0, #8
 801637e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016382:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8016386:	4406      	add	r6, r0
 8016388:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801638c:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8016390:	0a36      	lsrs	r6, r6, #8
 8016392:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016396:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801639a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801639e:	ea46 060a 	orr.w	r6, r6, sl
 80163a2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80163a6:	d01b      	beq.n	80163e0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 80163a8:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80163ac:	fb09 fa0a 	mul.w	sl, r9, sl
 80163b0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80163b4:	fb09 f004 	mul.w	r0, r9, r4
 80163b8:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80163bc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80163c0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80163c4:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80163c8:	4454      	add	r4, sl
 80163ca:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80163ce:	0a24      	lsrs	r4, r4, #8
 80163d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80163d4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80163d8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80163dc:	ea44 0409 	orr.w	r4, r4, r9
 80163e0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80163e4:	d01b      	beq.n	801641e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 80163e6:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80163ea:	fb08 f909 	mul.w	r9, r8, r9
 80163ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80163f2:	fb08 f003 	mul.w	r0, r8, r3
 80163f6:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80163fa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80163fe:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016402:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8016406:	444b      	add	r3, r9
 8016408:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801640c:	0a1b      	lsrs	r3, r3, #8
 801640e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016412:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016416:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801641a:	ea43 0308 	orr.w	r3, r3, r8
 801641e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016422:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016426:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801642a:	fb0c f808 	mul.w	r8, ip, r8
 801642e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016432:	fb0c f606 	mul.w	r6, ip, r6
 8016436:	fb05 8909 	mla	r9, r5, r9, r8
 801643a:	fb05 6502 	mla	r5, r5, r2, r6
 801643e:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8016442:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8016446:	9a01      	ldr	r2, [sp, #4]
 8016448:	8808      	ldrh	r0, [r1, #0]
 801644a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801644e:	fb07 9908 	mla	r9, r7, r8, r9
 8016452:	fb07 5704 	mla	r7, r7, r4, r5
 8016456:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801645a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801645e:	b2b6      	uxth	r6, r6
 8016460:	fb0e 9808 	mla	r8, lr, r8, r9
 8016464:	fb0e 7e03 	mla	lr, lr, r3, r7
 8016468:	4372      	muls	r2, r6
 801646a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801646e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016472:	1c53      	adds	r3, r2, #1
 8016474:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8016478:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801647c:	ea48 0e0e 	orr.w	lr, r8, lr
 8016480:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016484:	1205      	asrs	r5, r0, #8
 8016486:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801648a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801648e:	b2db      	uxtb	r3, r3
 8016490:	fb12 f206 	smulbb	r2, r2, r6
 8016494:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016498:	fb05 2503 	mla	r5, r5, r3, r2
 801649c:	f3ce 2407 	ubfx	r4, lr, #8, #8
 80164a0:	10c2      	asrs	r2, r0, #3
 80164a2:	fa5f fe8e 	uxtb.w	lr, lr
 80164a6:	00c0      	lsls	r0, r0, #3
 80164a8:	fb14 f406 	smulbb	r4, r4, r6
 80164ac:	b2c0      	uxtb	r0, r0
 80164ae:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80164b2:	fb1e fe06 	smulbb	lr, lr, r6
 80164b6:	fb02 4203 	mla	r2, r2, r3, r4
 80164ba:	b2ad      	uxth	r5, r5
 80164bc:	fb00 e303 	mla	r3, r0, r3, lr
 80164c0:	b298      	uxth	r0, r3
 80164c2:	b294      	uxth	r4, r2
 80164c4:	1c6b      	adds	r3, r5, #1
 80164c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80164ca:	1c62      	adds	r2, r4, #1
 80164cc:	1c43      	adds	r3, r0, #1
 80164ce:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80164d2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80164d6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80164da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80164de:	0952      	lsrs	r2, r2, #5
 80164e0:	432b      	orrs	r3, r5
 80164e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80164e6:	4313      	orrs	r3, r2
 80164e8:	800b      	strh	r3, [r1, #0]
 80164ea:	b003      	add	sp, #12
 80164ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164f0:	0801fdd3 	.word	0x0801fdd3
 80164f4:	08020302 	.word	0x08020302
 80164f8:	0801fda0 	.word	0x0801fda0

080164fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80164fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016500:	ed2d 8b08 	vpush	{d8-d11}
 8016504:	b09f      	sub	sp, #124	; 0x7c
 8016506:	eeb0 aa40 	vmov.f32	s20, s0
 801650a:	921b      	str	r2, [sp, #108]	; 0x6c
 801650c:	9309      	str	r3, [sp, #36]	; 0x24
 801650e:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8016510:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8016514:	931c      	str	r3, [sp, #112]	; 0x70
 8016516:	9119      	str	r1, [sp, #100]	; 0x64
 8016518:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 801651c:	901d      	str	r0, [sp, #116]	; 0x74
 801651e:	6850      	ldr	r0, [r2, #4]
 8016520:	6812      	ldr	r2, [r2, #0]
 8016522:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8016524:	fb00 1303 	mla	r3, r0, r3, r1
 8016528:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801652c:	930c      	str	r3, [sp, #48]	; 0x30
 801652e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016530:	681b      	ldr	r3, [r3, #0]
 8016532:	9312      	str	r3, [sp, #72]	; 0x48
 8016534:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8016536:	685e      	ldr	r6, [r3, #4]
 8016538:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801653c:	930d      	str	r3, [sp, #52]	; 0x34
 801653e:	eef0 9a60 	vmov.f32	s19, s1
 8016542:	eeb0 9a41 	vmov.f32	s18, s2
 8016546:	eeb0 8a62 	vmov.f32	s16, s5
 801654a:	eef0 8a43 	vmov.f32	s17, s6
 801654e:	eef0 ba44 	vmov.f32	s23, s8
 8016552:	eeb0 ba64 	vmov.f32	s22, s9
 8016556:	eef0 aa45 	vmov.f32	s21, s10
 801655a:	3604      	adds	r6, #4
 801655c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801655e:	2b00      	cmp	r3, #0
 8016560:	dc03      	bgt.n	801656a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016562:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016564:	2b00      	cmp	r3, #0
 8016566:	f340 8388 	ble.w	8016c7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801656a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801656c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016570:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016574:	1e48      	subs	r0, r1, #1
 8016576:	1e57      	subs	r7, r2, #1
 8016578:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801657a:	2b00      	cmp	r3, #0
 801657c:	f340 8195 	ble.w	80168aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8016580:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8016582:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016586:	ea4f 4325 	mov.w	r3, r5, asr #16
 801658a:	d406      	bmi.n	801659a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801658c:	4584      	cmp	ip, r0
 801658e:	da04      	bge.n	801659a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016590:	2b00      	cmp	r3, #0
 8016592:	db02      	blt.n	801659a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016594:	42bb      	cmp	r3, r7
 8016596:	f2c0 8189 	blt.w	80168ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801659a:	f11c 0c01 	adds.w	ip, ip, #1
 801659e:	f100 8177 	bmi.w	8016890 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80165a2:	4561      	cmp	r1, ip
 80165a4:	f2c0 8174 	blt.w	8016890 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80165a8:	3301      	adds	r3, #1
 80165aa:	f100 8171 	bmi.w	8016890 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80165ae:	429a      	cmp	r2, r3
 80165b0:	f2c0 816e 	blt.w	8016890 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 80165b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80165b6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80165b8:	931a      	str	r3, [sp, #104]	; 0x68
 80165ba:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80165bc:	2b00      	cmp	r3, #0
 80165be:	f340 8193 	ble.w	80168e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80165c2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80165c4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80165c8:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80165ca:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80165ce:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80165d0:	141b      	asrs	r3, r3, #16
 80165d2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80165d6:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80165da:	f100 81d6 	bmi.w	801698a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80165de:	f100 38ff 	add.w	r8, r0, #4294967295
 80165e2:	4543      	cmp	r3, r8
 80165e4:	f280 81d1 	bge.w	801698a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80165e8:	f1bc 0f00 	cmp.w	ip, #0
 80165ec:	f2c0 81cd 	blt.w	801698a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80165f0:	f10e 38ff 	add.w	r8, lr, #4294967295
 80165f4:	45c4      	cmp	ip, r8
 80165f6:	f280 81c8 	bge.w	801698a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80165fa:	b200      	sxth	r0, r0
 80165fc:	fb0c 3300 	mla	r3, ip, r0, r3
 8016600:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016602:	eb04 0803 	add.w	r8, r4, r3
 8016606:	5ce3      	ldrb	r3, [r4, r3]
 8016608:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801660c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8016610:	2a00      	cmp	r2, #0
 8016612:	f000 81af 	beq.w	8016974 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8016616:	f898 c001 	ldrb.w	ip, [r8, #1]
 801661a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801661e:	940e      	str	r4, [sp, #56]	; 0x38
 8016620:	0e24      	lsrs	r4, r4, #24
 8016622:	9415      	str	r4, [sp, #84]	; 0x54
 8016624:	b179      	cbz	r1, 8016646 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8016626:	eb08 0c00 	add.w	ip, r8, r0
 801662a:	f818 0000 	ldrb.w	r0, [r8, r0]
 801662e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016632:	900a      	str	r0, [sp, #40]	; 0x28
 8016634:	0e00      	lsrs	r0, r0, #24
 8016636:	9013      	str	r0, [sp, #76]	; 0x4c
 8016638:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801663c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016640:	900f      	str	r0, [sp, #60]	; 0x3c
 8016642:	0e00      	lsrs	r0, r0, #24
 8016644:	9016      	str	r0, [sp, #88]	; 0x58
 8016646:	b292      	uxth	r2, r2
 8016648:	b289      	uxth	r1, r1
 801664a:	fb02 f901 	mul.w	r9, r2, r1
 801664e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016652:	0112      	lsls	r2, r2, #4
 8016654:	eba2 0809 	sub.w	r8, r2, r9
 8016658:	b289      	uxth	r1, r1
 801665a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801665e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016660:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016662:	fa1f f888 	uxth.w	r8, r8
 8016666:	1a52      	subs	r2, r2, r1
 8016668:	b292      	uxth	r2, r2
 801666a:	fb08 f000 	mul.w	r0, r8, r0
 801666e:	fb02 000e 	mla	r0, r2, lr, r0
 8016672:	fb01 0004 	mla	r0, r1, r4, r0
 8016676:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016678:	fb09 0004 	mla	r0, r9, r4, r0
 801667c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016680:	2800      	cmp	r0, #0
 8016682:	f000 80fa 	beq.w	801687a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016686:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801668a:	d01b      	beq.n	80166c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801668c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016690:	fb0e fa0a 	mul.w	sl, lr, sl
 8016694:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016698:	fb0e fe03 	mul.w	lr, lr, r3
 801669c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80166a0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80166a4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80166a8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80166ac:	4453      	add	r3, sl
 80166ae:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80166b2:	0a1b      	lsrs	r3, r3, #8
 80166b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80166b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80166bc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80166c0:	ea43 030c 	orr.w	r3, r3, ip
 80166c4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80166c6:	2cff      	cmp	r4, #255	; 0xff
 80166c8:	d021      	beq.n	801670e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80166ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80166cc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80166d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80166d2:	fb04 fb0b 	mul.w	fp, r4, fp
 80166d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80166d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80166dc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80166de:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80166e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80166e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80166ea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80166ee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80166f2:	44de      	add	lr, fp
 80166f4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80166f8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80166fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016700:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016704:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016708:	ea4e 040a 	orr.w	r4, lr, sl
 801670c:	940e      	str	r4, [sp, #56]	; 0x38
 801670e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016710:	2cff      	cmp	r4, #255	; 0xff
 8016712:	d021      	beq.n	8016758 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8016714:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016716:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801671a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801671c:	fb04 fb0b 	mul.w	fp, r4, fp
 8016720:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016722:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016726:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016728:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801672c:	fb04 fa0a 	mul.w	sl, r4, sl
 8016730:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016734:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016738:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801673c:	44de      	add	lr, fp
 801673e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016742:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016746:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801674a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801674e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016752:	ea4e 040a 	orr.w	r4, lr, sl
 8016756:	940a      	str	r4, [sp, #40]	; 0x28
 8016758:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801675a:	2cff      	cmp	r4, #255	; 0xff
 801675c:	d021      	beq.n	80167a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801675e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016760:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016764:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016766:	fb04 fb0b 	mul.w	fp, r4, fp
 801676a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801676c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016770:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016772:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016776:	fb04 fa0a 	mul.w	sl, r4, sl
 801677a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801677e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016782:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016786:	44de      	add	lr, fp
 8016788:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801678c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016790:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016794:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016798:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801679c:	ea4e 040a 	orr.w	r4, lr, sl
 80167a0:	940f      	str	r4, [sp, #60]	; 0x3c
 80167a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80167a4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80167a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80167aa:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80167ae:	fb08 fc0c 	mul.w	ip, r8, ip
 80167b2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80167b6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80167ba:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80167bc:	fb01 cc0e 	mla	ip, r1, lr, ip
 80167c0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80167c4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80167c6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80167ca:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80167ce:	fb08 f80e 	mul.w	r8, r8, lr
 80167d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80167d6:	fb02 8303 	mla	r3, r2, r3, r8
 80167da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80167dc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80167de:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80167e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80167e4:	fb01 330a 	mla	r3, r1, sl, r3
 80167e8:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80167ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80167ee:	fb09 3901 	mla	r9, r9, r1, r3
 80167f2:	4342      	muls	r2, r0
 80167f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80167f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80167fc:	883b      	ldrh	r3, [r7, #0]
 80167fe:	1c50      	adds	r0, r2, #1
 8016800:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016804:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016808:	ea4c 0c09 	orr.w	ip, ip, r9
 801680c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016810:	1219      	asrs	r1, r3, #8
 8016812:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8016816:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801681a:	b2c0      	uxtb	r0, r0
 801681c:	fb12 f204 	smulbb	r2, r2, r4
 8016820:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016824:	fb01 2100 	mla	r1, r1, r0, r2
 8016828:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801682c:	10da      	asrs	r2, r3, #3
 801682e:	fa5f fc8c 	uxtb.w	ip, ip
 8016832:	00db      	lsls	r3, r3, #3
 8016834:	fb1c fc04 	smulbb	ip, ip, r4
 8016838:	b2db      	uxtb	r3, r3
 801683a:	b289      	uxth	r1, r1
 801683c:	fb03 c300 	mla	r3, r3, r0, ip
 8016840:	fa1f fc83 	uxth.w	ip, r3
 8016844:	1c4b      	adds	r3, r1, #1
 8016846:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801684a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801684e:	fb1e fe04 	smulbb	lr, lr, r4
 8016852:	f10c 0301 	add.w	r3, ip, #1
 8016856:	fb02 e200 	mla	r2, r2, r0, lr
 801685a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801685e:	b292      	uxth	r2, r2
 8016860:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8016864:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016868:	430b      	orrs	r3, r1
 801686a:	1c51      	adds	r1, r2, #1
 801686c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016870:	0952      	lsrs	r2, r2, #5
 8016872:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016876:	4313      	orrs	r3, r2
 8016878:	803b      	strh	r3, [r7, #0]
 801687a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801687c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801687e:	441a      	add	r2, r3
 8016880:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016882:	9231      	str	r2, [sp, #196]	; 0xc4
 8016884:	441d      	add	r5, r3
 8016886:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8016888:	3b01      	subs	r3, #1
 801688a:	3702      	adds	r7, #2
 801688c:	931a      	str	r3, [sp, #104]	; 0x68
 801688e:	e694      	b.n	80165ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8016890:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016892:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8016894:	441c      	add	r4, r3
 8016896:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016898:	9431      	str	r4, [sp, #196]	; 0xc4
 801689a:	441d      	add	r5, r3
 801689c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801689e:	3b01      	subs	r3, #1
 80168a0:	9309      	str	r3, [sp, #36]	; 0x24
 80168a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80168a4:	3302      	adds	r3, #2
 80168a6:	930c      	str	r3, [sp, #48]	; 0x30
 80168a8:	e666      	b.n	8016578 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80168aa:	d024      	beq.n	80168f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 80168ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80168ae:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80168b0:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80168b2:	3b01      	subs	r3, #1
 80168b4:	fb00 4003 	mla	r0, r0, r3, r4
 80168b8:	1400      	asrs	r0, r0, #16
 80168ba:	f53f ae7b 	bmi.w	80165b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80168be:	3901      	subs	r1, #1
 80168c0:	4288      	cmp	r0, r1
 80168c2:	f6bf ae77 	bge.w	80165b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80168c6:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80168c8:	fb01 5303 	mla	r3, r1, r3, r5
 80168cc:	141b      	asrs	r3, r3, #16
 80168ce:	f53f ae71 	bmi.w	80165b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80168d2:	3a01      	subs	r2, #1
 80168d4:	4293      	cmp	r3, r2
 80168d6:	f6bf ae6d 	bge.w	80165b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80168da:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80168de:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80168e2:	f1bb 0f00 	cmp.w	fp, #0
 80168e6:	dc70      	bgt.n	80169ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 80168e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80168ea:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80168ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80168f0:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80168f4:	930c      	str	r3, [sp, #48]	; 0x30
 80168f6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80168f8:	2b00      	cmp	r3, #0
 80168fa:	f340 81be 	ble.w	8016c7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80168fe:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016902:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016906:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801690a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801690c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016910:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016914:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016918:	eef0 6a48 	vmov.f32	s13, s16
 801691c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016920:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016924:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016928:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 801692c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016930:	eef0 6a68 	vmov.f32	s13, s17
 8016934:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016938:	ee18 2a10 	vmov	r2, s16
 801693c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016940:	fb92 f3f3 	sdiv	r3, r2, r3
 8016944:	ee18 2a90 	vmov	r2, s17
 8016948:	9333      	str	r3, [sp, #204]	; 0xcc
 801694a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801694c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016950:	9334      	str	r3, [sp, #208]	; 0xd0
 8016952:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016954:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8016956:	3b01      	subs	r3, #1
 8016958:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801695c:	9319      	str	r3, [sp, #100]	; 0x64
 801695e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016960:	bf08      	it	eq
 8016962:	4613      	moveq	r3, r2
 8016964:	ee16 5a90 	vmov	r5, s13
 8016968:	9309      	str	r3, [sp, #36]	; 0x24
 801696a:	eef0 8a67 	vmov.f32	s17, s15
 801696e:	eeb0 8a47 	vmov.f32	s16, s14
 8016972:	e5f3      	b.n	801655c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016974:	2900      	cmp	r1, #0
 8016976:	f43f ae66 	beq.w	8016646 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801697a:	f818 0000 	ldrb.w	r0, [r8, r0]
 801697e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016982:	900a      	str	r0, [sp, #40]	; 0x28
 8016984:	0e00      	lsrs	r0, r0, #24
 8016986:	9013      	str	r0, [sp, #76]	; 0x4c
 8016988:	e65d      	b.n	8016646 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801698a:	f113 0801 	adds.w	r8, r3, #1
 801698e:	f53f af74 	bmi.w	801687a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016992:	4540      	cmp	r0, r8
 8016994:	f6ff af71 	blt.w	801687a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016998:	f11c 0801 	adds.w	r8, ip, #1
 801699c:	f53f af6d 	bmi.w	801687a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80169a0:	45c6      	cmp	lr, r8
 80169a2:	f6ff af6a 	blt.w	801687a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80169a6:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80169a8:	9302      	str	r3, [sp, #8]
 80169aa:	b200      	sxth	r0, r0
 80169ac:	fa0f f38e 	sxth.w	r3, lr
 80169b0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80169b4:	e9cd c203 	strd	ip, r2, [sp, #12]
 80169b8:	9301      	str	r3, [sp, #4]
 80169ba:	9000      	str	r0, [sp, #0]
 80169bc:	4633      	mov	r3, r6
 80169be:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80169c0:	981d      	ldr	r0, [sp, #116]	; 0x74
 80169c2:	4639      	mov	r1, r7
 80169c4:	f7ff fc32 	bl	801622c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80169c8:	e757      	b.n	801687a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80169ca:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80169cc:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80169ce:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80169d2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80169d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80169d8:	1427      	asrs	r7, r4, #16
 80169da:	142b      	asrs	r3, r5, #16
 80169dc:	fb01 7303 	mla	r3, r1, r3, r7
 80169e0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80169e2:	18e7      	adds	r7, r4, r3
 80169e4:	5ce3      	ldrb	r3, [r4, r3]
 80169e6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80169ea:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80169ee:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80169f2:	2a00      	cmp	r2, #0
 80169f4:	f000 8137 	beq.w	8016c66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80169f8:	f897 e001 	ldrb.w	lr, [r7, #1]
 80169fc:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8016a00:	9410      	str	r4, [sp, #64]	; 0x40
 8016a02:	0e24      	lsrs	r4, r4, #24
 8016a04:	9417      	str	r4, [sp, #92]	; 0x5c
 8016a06:	b170      	cbz	r0, 8016a26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016a08:	eb07 0e01 	add.w	lr, r7, r1
 8016a0c:	5c79      	ldrb	r1, [r7, r1]
 8016a0e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016a12:	910b      	str	r1, [sp, #44]	; 0x2c
 8016a14:	0e09      	lsrs	r1, r1, #24
 8016a16:	9114      	str	r1, [sp, #80]	; 0x50
 8016a18:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016a1c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016a20:	9111      	str	r1, [sp, #68]	; 0x44
 8016a22:	0e09      	lsrs	r1, r1, #24
 8016a24:	9118      	str	r1, [sp, #96]	; 0x60
 8016a26:	b292      	uxth	r2, r2
 8016a28:	b280      	uxth	r0, r0
 8016a2a:	fb02 f800 	mul.w	r8, r2, r0
 8016a2e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8016a32:	0112      	lsls	r2, r2, #4
 8016a34:	eba2 0e08 	sub.w	lr, r2, r8
 8016a38:	b280      	uxth	r0, r0
 8016a3a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016a3e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8016a40:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016a42:	fa1f fe8e 	uxth.w	lr, lr
 8016a46:	1a12      	subs	r2, r2, r0
 8016a48:	b292      	uxth	r2, r2
 8016a4a:	fb0e f101 	mul.w	r1, lr, r1
 8016a4e:	fb02 110c 	mla	r1, r2, ip, r1
 8016a52:	fb00 1104 	mla	r1, r0, r4, r1
 8016a56:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016a58:	fb08 1104 	mla	r1, r8, r4, r1
 8016a5c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016a60:	2900      	cmp	r1, #0
 8016a62:	f000 80f5 	beq.w	8016c50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8016a66:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016a6a:	d019      	beq.n	8016aa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8016a6c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016a70:	fb0c fa0a 	mul.w	sl, ip, sl
 8016a74:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016a78:	fb0c fc03 	mul.w	ip, ip, r3
 8016a7c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016a80:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016a84:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016a88:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016a8c:	4453      	add	r3, sl
 8016a8e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016a92:	0a1b      	lsrs	r3, r3, #8
 8016a94:	0a3f      	lsrs	r7, r7, #8
 8016a96:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016a9a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016a9e:	433b      	orrs	r3, r7
 8016aa0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016aa2:	2cff      	cmp	r4, #255	; 0xff
 8016aa4:	d020      	beq.n	8016ae8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8016aa6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016aa8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016aac:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016aae:	4367      	muls	r7, r4
 8016ab0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016ab2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016ab6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016ab8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016abc:	fb04 fa0a 	mul.w	sl, r4, sl
 8016ac0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016ac4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ac8:	44bc      	add	ip, r7
 8016aca:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016ace:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016ad2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016ad6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016ada:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ade:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016ae2:	ea4c 040a 	orr.w	r4, ip, sl
 8016ae6:	9410      	str	r4, [sp, #64]	; 0x40
 8016ae8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016aea:	2cff      	cmp	r4, #255	; 0xff
 8016aec:	d020      	beq.n	8016b30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8016aee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016af0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016af4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016af6:	4367      	muls	r7, r4
 8016af8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016afa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016afe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016b00:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016b04:	fb04 fa0a 	mul.w	sl, r4, sl
 8016b08:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016b0c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b10:	44bc      	add	ip, r7
 8016b12:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016b16:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016b1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016b22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b26:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016b2a:	ea4c 040a 	orr.w	r4, ip, sl
 8016b2e:	940b      	str	r4, [sp, #44]	; 0x2c
 8016b30:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016b32:	2cff      	cmp	r4, #255	; 0xff
 8016b34:	d020      	beq.n	8016b78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8016b36:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016b38:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016b3c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016b3e:	4367      	muls	r7, r4
 8016b40:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016b42:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016b46:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016b48:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016b4c:	fb04 fa0a 	mul.w	sl, r4, sl
 8016b50:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016b54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b58:	44bc      	add	ip, r7
 8016b5a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016b5e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016b62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016b6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016b72:	ea4c 040a 	orr.w	r4, ip, sl
 8016b76:	9411      	str	r4, [sp, #68]	; 0x44
 8016b78:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016b7a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016b7e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016b80:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016b84:	fb0e f707 	mul.w	r7, lr, r7
 8016b88:	fb02 770c 	mla	r7, r2, ip, r7
 8016b8c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016b90:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016b92:	fb00 770c 	mla	r7, r0, ip, r7
 8016b96:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016b9a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016b9c:	fb08 770c 	mla	r7, r8, ip, r7
 8016ba0:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016ba4:	fb0e fe0c 	mul.w	lr, lr, ip
 8016ba8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016bac:	fb02 e303 	mla	r3, r2, r3, lr
 8016bb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016bb2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016bb4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016bb8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016bba:	fb00 330a 	mla	r3, r0, sl, r3
 8016bbe:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016bc2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016bc6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016bc8:	f8b9 0000 	ldrh.w	r0, [r9]
 8016bcc:	434b      	muls	r3, r1
 8016bce:	0a3f      	lsrs	r7, r7, #8
 8016bd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016bd4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016bd8:	1c59      	adds	r1, r3, #1
 8016bda:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016bde:	ea47 070c 	orr.w	r7, r7, ip
 8016be2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016be6:	1202      	asrs	r2, r0, #8
 8016be8:	0c3b      	lsrs	r3, r7, #16
 8016bea:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8016bee:	b2c9      	uxtb	r1, r1
 8016bf0:	fb13 f304 	smulbb	r3, r3, r4
 8016bf4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016bf8:	fb02 3201 	mla	r2, r2, r1, r3
 8016bfc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8016c00:	10c3      	asrs	r3, r0, #3
 8016c02:	b2ff      	uxtb	r7, r7
 8016c04:	00c0      	lsls	r0, r0, #3
 8016c06:	b292      	uxth	r2, r2
 8016c08:	fb1c fc04 	smulbb	ip, ip, r4
 8016c0c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016c10:	b2c0      	uxtb	r0, r0
 8016c12:	fb17 f704 	smulbb	r7, r7, r4
 8016c16:	fb03 c301 	mla	r3, r3, r1, ip
 8016c1a:	fb00 7001 	mla	r0, r0, r1, r7
 8016c1e:	f102 0c01 	add.w	ip, r2, #1
 8016c22:	b280      	uxth	r0, r0
 8016c24:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016c28:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016c2c:	1c42      	adds	r2, r0, #1
 8016c2e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8016c32:	b29b      	uxth	r3, r3
 8016c34:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016c38:	ea42 020c 	orr.w	r2, r2, ip
 8016c3c:	f103 0c01 	add.w	ip, r3, #1
 8016c40:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016c44:	095b      	lsrs	r3, r3, #5
 8016c46:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016c4a:	431a      	orrs	r2, r3
 8016c4c:	f8a9 2000 	strh.w	r2, [r9]
 8016c50:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8016c52:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016c54:	441a      	add	r2, r3
 8016c56:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016c58:	9231      	str	r2, [sp, #196]	; 0xc4
 8016c5a:	f109 0902 	add.w	r9, r9, #2
 8016c5e:	441d      	add	r5, r3
 8016c60:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016c64:	e63d      	b.n	80168e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8016c66:	2800      	cmp	r0, #0
 8016c68:	f43f aedd 	beq.w	8016a26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016c6c:	5c79      	ldrb	r1, [r7, r1]
 8016c6e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016c72:	910b      	str	r1, [sp, #44]	; 0x2c
 8016c74:	0e09      	lsrs	r1, r1, #24
 8016c76:	9114      	str	r1, [sp, #80]	; 0x50
 8016c78:	e6d5      	b.n	8016a26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8016c7a:	b01f      	add	sp, #124	; 0x7c
 8016c7c:	ecbd 8b08 	vpop	{d8-d11}
 8016c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016c84 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8016c84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c88:	880e      	ldrh	r6, [r1, #0]
 8016c8a:	b085      	sub	sp, #20
 8016c8c:	ea4f 2826 	mov.w	r8, r6, asr #8
 8016c90:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8016c94:	4691      	mov	r9, r2
 8016c96:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016c9a:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8016c9e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016ca2:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016ca6:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8016caa:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016cae:	9200      	str	r2, [sp, #0]
 8016cb0:	00f6      	lsls	r6, r6, #3
 8016cb2:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8016cb6:	9201      	str	r2, [sp, #4]
 8016cb8:	2c00      	cmp	r4, #0
 8016cba:	b2f2      	uxtb	r2, r6
 8016cbc:	fb04 560c 	mla	r6, r4, ip, r5
 8016cc0:	9202      	str	r2, [sp, #8]
 8016cc2:	eb09 0806 	add.w	r8, r9, r6
 8016cc6:	db3f      	blt.n	8016d48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016cc8:	45a6      	cmp	lr, r4
 8016cca:	dd3d      	ble.n	8016d48 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8016ccc:	2d00      	cmp	r5, #0
 8016cce:	db39      	blt.n	8016d44 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016cd0:	45ac      	cmp	ip, r5
 8016cd2:	dd37      	ble.n	8016d44 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8016cd4:	f819 2006 	ldrb.w	r2, [r9, r6]
 8016cd8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016cdc:	1c6e      	adds	r6, r5, #1
 8016cde:	d436      	bmi.n	8016d4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016ce0:	45b4      	cmp	ip, r6
 8016ce2:	dd34      	ble.n	8016d4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8016ce4:	b3a8      	cbz	r0, 8016d52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8016ce6:	f898 6001 	ldrb.w	r6, [r8, #1]
 8016cea:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8016cee:	3401      	adds	r4, #1
 8016cf0:	d433      	bmi.n	8016d5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016cf2:	45a6      	cmp	lr, r4
 8016cf4:	dd31      	ble.n	8016d5a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8016cf6:	b39f      	cbz	r7, 8016d60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8016cf8:	2d00      	cmp	r5, #0
 8016cfa:	eb08 0e0c 	add.w	lr, r8, ip
 8016cfe:	db2a      	blt.n	8016d56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016d00:	45ac      	cmp	ip, r5
 8016d02:	dd28      	ble.n	8016d56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8016d04:	f818 400c 	ldrb.w	r4, [r8, ip]
 8016d08:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8016d0c:	3501      	adds	r5, #1
 8016d0e:	d42a      	bmi.n	8016d66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016d10:	45ac      	cmp	ip, r5
 8016d12:	dd28      	ble.n	8016d66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016d14:	b348      	cbz	r0, 8016d6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8016d16:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8016d1a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8016d1e:	280f      	cmp	r0, #15
 8016d20:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016d24:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016d28:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016d2c:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016d30:	d801      	bhi.n	8016d36 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8016d32:	2f0f      	cmp	r7, #15
 8016d34:	d91b      	bls.n	8016d6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8016d36:	4b7d      	ldr	r3, [pc, #500]	; (8016f2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8016d38:	4a7d      	ldr	r2, [pc, #500]	; (8016f30 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8016d3a:	487e      	ldr	r0, [pc, #504]	; (8016f34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8016d3c:	f240 11f9 	movw	r1, #505	; 0x1f9
 8016d40:	f004 ffd8 	bl	801bcf4 <__assert_func>
 8016d44:	2200      	movs	r2, #0
 8016d46:	e7c9      	b.n	8016cdc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8016d48:	2600      	movs	r6, #0
 8016d4a:	4632      	mov	r2, r6
 8016d4c:	e7cf      	b.n	8016cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016d4e:	2600      	movs	r6, #0
 8016d50:	e7cd      	b.n	8016cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016d52:	4606      	mov	r6, r0
 8016d54:	e7cb      	b.n	8016cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8016d56:	2400      	movs	r4, #0
 8016d58:	e7d8      	b.n	8016d0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8016d5a:	2300      	movs	r3, #0
 8016d5c:	461c      	mov	r4, r3
 8016d5e:	e7de      	b.n	8016d1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016d60:	463b      	mov	r3, r7
 8016d62:	463c      	mov	r4, r7
 8016d64:	e7db      	b.n	8016d1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016d66:	2300      	movs	r3, #0
 8016d68:	e7d9      	b.n	8016d1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016d6a:	4603      	mov	r3, r0
 8016d6c:	e7d7      	b.n	8016d1e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8016d6e:	b280      	uxth	r0, r0
 8016d70:	b2bf      	uxth	r7, r7
 8016d72:	fb00 fe07 	mul.w	lr, r0, r7
 8016d76:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016d7a:	0100      	lsls	r0, r0, #4
 8016d7c:	eba0 0c0e 	sub.w	ip, r0, lr
 8016d80:	b2bf      	uxth	r7, r7
 8016d82:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016d86:	fa1f fc8c 	uxth.w	ip, ip
 8016d8a:	1bed      	subs	r5, r5, r7
 8016d8c:	b2ad      	uxth	r5, r5
 8016d8e:	fb0c f00a 	mul.w	r0, ip, sl
 8016d92:	fb05 000b 	mla	r0, r5, fp, r0
 8016d96:	fb07 0009 	mla	r0, r7, r9, r0
 8016d9a:	fb0e 0008 	mla	r0, lr, r8, r0
 8016d9e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016da2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016da6:	9003      	str	r0, [sp, #12]
 8016da8:	d018      	beq.n	8016ddc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8016daa:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016dae:	fb0b f000 	mul.w	r0, fp, r0
 8016db2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016db6:	fb0b fb02 	mul.w	fp, fp, r2
 8016dba:	0a02      	lsrs	r2, r0, #8
 8016dbc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016dc0:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8016dc4:	4402      	add	r2, r0
 8016dc6:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8016dca:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016dce:	0a12      	lsrs	r2, r2, #8
 8016dd0:	0a00      	lsrs	r0, r0, #8
 8016dd2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016dd6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016dda:	4302      	orrs	r2, r0
 8016ddc:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016de0:	d019      	beq.n	8016e16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8016de2:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016de6:	fb0a fb0b 	mul.w	fp, sl, fp
 8016dea:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016dee:	fb0a fa06 	mul.w	sl, sl, r6
 8016df2:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016df6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016dfa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016dfe:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8016e02:	445e      	add	r6, fp
 8016e04:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016e08:	0a36      	lsrs	r6, r6, #8
 8016e0a:	0a00      	lsrs	r0, r0, #8
 8016e0c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016e10:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016e14:	4306      	orrs	r6, r0
 8016e16:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016e1a:	d019      	beq.n	8016e50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8016e1c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016e20:	fb09 fa0a 	mul.w	sl, r9, sl
 8016e24:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016e28:	fb09 f904 	mul.w	r9, r9, r4
 8016e2c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016e30:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016e34:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016e38:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8016e3c:	4454      	add	r4, sl
 8016e3e:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8016e42:	0a24      	lsrs	r4, r4, #8
 8016e44:	0a00      	lsrs	r0, r0, #8
 8016e46:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016e4a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016e4e:	4304      	orrs	r4, r0
 8016e50:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016e54:	d019      	beq.n	8016e8a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8016e56:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8016e5a:	fb08 f909 	mul.w	r9, r8, r9
 8016e5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016e62:	fb08 f803 	mul.w	r8, r8, r3
 8016e66:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8016e6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016e6e:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016e72:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8016e76:	444b      	add	r3, r9
 8016e78:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8016e7c:	0a1b      	lsrs	r3, r3, #8
 8016e7e:	0a00      	lsrs	r0, r0, #8
 8016e80:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016e84:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016e88:	4303      	orrs	r3, r0
 8016e8a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016e8e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016e92:	fb0c f808 	mul.w	r8, ip, r8
 8016e96:	fb05 8800 	mla	r8, r5, r0, r8
 8016e9a:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8016e9e:	fb07 8800 	mla	r8, r7, r0, r8
 8016ea2:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8016ea6:	fb0e 8000 	mla	r0, lr, r0, r8
 8016eaa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016eae:	fb0c f606 	mul.w	r6, ip, r6
 8016eb2:	0a00      	lsrs	r0, r0, #8
 8016eb4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016eb8:	fb05 6202 	mla	r2, r5, r2, r6
 8016ebc:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8016ec0:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8016ec4:	fb07 2700 	mla	r7, r7, r0, r2
 8016ec8:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8016ecc:	9b03      	ldr	r3, [sp, #12]
 8016ece:	9d00      	ldr	r5, [sp, #0]
 8016ed0:	9a02      	ldr	r2, [sp, #8]
 8016ed2:	fb0e 7000 	mla	r0, lr, r0, r7
 8016ed6:	43dc      	mvns	r4, r3
 8016ed8:	9b01      	ldr	r3, [sp, #4]
 8016eda:	b2e4      	uxtb	r4, r4
 8016edc:	0a00      	lsrs	r0, r0, #8
 8016ede:	4363      	muls	r3, r4
 8016ee0:	4365      	muls	r5, r4
 8016ee2:	4362      	muls	r2, r4
 8016ee4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016ee8:	ea48 0000 	orr.w	r0, r8, r0
 8016eec:	4614      	mov	r4, r2
 8016eee:	1c5e      	adds	r6, r3, #1
 8016ef0:	1c6a      	adds	r2, r5, #1
 8016ef2:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8016ef6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016efa:	0a03      	lsrs	r3, r0, #8
 8016efc:	0c02      	lsrs	r2, r0, #16
 8016efe:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8016f02:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016f06:	00db      	lsls	r3, r3, #3
 8016f08:	0212      	lsls	r2, r2, #8
 8016f0a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8016f0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016f12:	4313      	orrs	r3, r2
 8016f14:	1c62      	adds	r2, r4, #1
 8016f16:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8016f1a:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8016f1e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016f22:	4318      	orrs	r0, r3
 8016f24:	8008      	strh	r0, [r1, #0]
 8016f26:	b005      	add	sp, #20
 8016f28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f2c:	0801fdd3 	.word	0x0801fdd3
 8016f30:	08020302 	.word	0x08020302
 8016f34:	0801fda0 	.word	0x0801fda0

08016f38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016f38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f3c:	ed2d 8b08 	vpush	{d8-d11}
 8016f40:	b09b      	sub	sp, #108	; 0x6c
 8016f42:	eeb0 aa40 	vmov.f32	s20, s0
 8016f46:	9218      	str	r2, [sp, #96]	; 0x60
 8016f48:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8016f4a:	9116      	str	r1, [sp, #88]	; 0x58
 8016f4c:	9307      	str	r3, [sp, #28]
 8016f4e:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8016f52:	9019      	str	r0, [sp, #100]	; 0x64
 8016f54:	6850      	ldr	r0, [r2, #4]
 8016f56:	6812      	ldr	r2, [r2, #0]
 8016f58:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8016f5a:	fb00 1303 	mla	r3, r0, r3, r1
 8016f5e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016f62:	930a      	str	r3, [sp, #40]	; 0x28
 8016f64:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016f66:	681b      	ldr	r3, [r3, #0]
 8016f68:	930f      	str	r3, [sp, #60]	; 0x3c
 8016f6a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016f6c:	685e      	ldr	r6, [r3, #4]
 8016f6e:	eef0 9a60 	vmov.f32	s19, s1
 8016f72:	eeb0 9a41 	vmov.f32	s18, s2
 8016f76:	eeb0 8a62 	vmov.f32	s16, s5
 8016f7a:	eef0 8a43 	vmov.f32	s17, s6
 8016f7e:	eef0 ba44 	vmov.f32	s23, s8
 8016f82:	eeb0 ba64 	vmov.f32	s22, s9
 8016f86:	eef0 aa45 	vmov.f32	s21, s10
 8016f8a:	3604      	adds	r6, #4
 8016f8c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016f8e:	2b00      	cmp	r3, #0
 8016f90:	dc03      	bgt.n	8016f9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8016f92:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016f94:	2b00      	cmp	r3, #0
 8016f96:	f340 8373 	ble.w	8017680 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8016f9a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016f9c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016fa0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016fa4:	1e48      	subs	r0, r1, #1
 8016fa6:	1e57      	subs	r7, r2, #1
 8016fa8:	9b07      	ldr	r3, [sp, #28]
 8016faa:	2b00      	cmp	r3, #0
 8016fac:	f340 8190 	ble.w	80172d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8016fb0:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016fb2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016fb6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016fba:	d406      	bmi.n	8016fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016fbc:	4584      	cmp	ip, r0
 8016fbe:	da04      	bge.n	8016fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016fc0:	2b00      	cmp	r3, #0
 8016fc2:	db02      	blt.n	8016fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016fc4:	42bb      	cmp	r3, r7
 8016fc6:	f2c0 8184 	blt.w	80172d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8016fca:	f11c 0c01 	adds.w	ip, ip, #1
 8016fce:	f100 8172 	bmi.w	80172b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016fd2:	4561      	cmp	r1, ip
 8016fd4:	f2c0 816f 	blt.w	80172b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016fd8:	3301      	adds	r3, #1
 8016fda:	f100 816c 	bmi.w	80172b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016fde:	429a      	cmp	r2, r3
 8016fe0:	f2c0 8169 	blt.w	80172b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8016fe4:	9b07      	ldr	r3, [sp, #28]
 8016fe6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016fe8:	9317      	str	r3, [sp, #92]	; 0x5c
 8016fea:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016fec:	2b00      	cmp	r3, #0
 8016fee:	f340 818e 	ble.w	801730e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8016ff2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016ff4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016ff8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8016ffa:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8016ffe:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017000:	141b      	asrs	r3, r3, #16
 8017002:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017006:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801700a:	f100 81d1 	bmi.w	80173b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801700e:	f101 38ff 	add.w	r8, r1, #4294967295
 8017012:	4543      	cmp	r3, r8
 8017014:	f280 81cc 	bge.w	80173b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017018:	f1bc 0f00 	cmp.w	ip, #0
 801701c:	f2c0 81c8 	blt.w	80173b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017020:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017024:	45c4      	cmp	ip, r8
 8017026:	f280 81c3 	bge.w	80173b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801702a:	b209      	sxth	r1, r1
 801702c:	fb0c 3301 	mla	r3, ip, r1, r3
 8017030:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017032:	eb04 0803 	add.w	r8, r4, r3
 8017036:	5ce3      	ldrb	r3, [r4, r3]
 8017038:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801703c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017040:	2a00      	cmp	r2, #0
 8017042:	f000 81aa 	beq.w	801739a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8017046:	f898 c001 	ldrb.w	ip, [r8, #1]
 801704a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801704e:	940b      	str	r4, [sp, #44]	; 0x2c
 8017050:	0e24      	lsrs	r4, r4, #24
 8017052:	9412      	str	r4, [sp, #72]	; 0x48
 8017054:	b178      	cbz	r0, 8017076 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017056:	eb08 0c01 	add.w	ip, r8, r1
 801705a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801705e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017062:	9108      	str	r1, [sp, #32]
 8017064:	0e09      	lsrs	r1, r1, #24
 8017066:	9110      	str	r1, [sp, #64]	; 0x40
 8017068:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801706c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017070:	910c      	str	r1, [sp, #48]	; 0x30
 8017072:	0e09      	lsrs	r1, r1, #24
 8017074:	9113      	str	r1, [sp, #76]	; 0x4c
 8017076:	b292      	uxth	r2, r2
 8017078:	b280      	uxth	r0, r0
 801707a:	fb02 f900 	mul.w	r9, r2, r0
 801707e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017082:	0112      	lsls	r2, r2, #4
 8017084:	eba2 0809 	sub.w	r8, r2, r9
 8017088:	b280      	uxth	r0, r0
 801708a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801708e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017090:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017092:	fa1f f888 	uxth.w	r8, r8
 8017096:	1a12      	subs	r2, r2, r0
 8017098:	b292      	uxth	r2, r2
 801709a:	fb08 f101 	mul.w	r1, r8, r1
 801709e:	fb02 110e 	mla	r1, r2, lr, r1
 80170a2:	fb00 1104 	mla	r1, r0, r4, r1
 80170a6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80170a8:	fb09 1104 	mla	r1, r9, r4, r1
 80170ac:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80170b0:	2900      	cmp	r1, #0
 80170b2:	f000 80f5 	beq.w	80172a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80170b6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80170ba:	d01b      	beq.n	80170f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80170bc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80170c0:	fb0e fa0a 	mul.w	sl, lr, sl
 80170c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80170c8:	fb0e fe03 	mul.w	lr, lr, r3
 80170cc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80170d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80170d4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80170d8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80170dc:	4453      	add	r3, sl
 80170de:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80170e2:	0a1b      	lsrs	r3, r3, #8
 80170e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80170e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80170ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80170f0:	ea43 030c 	orr.w	r3, r3, ip
 80170f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80170f6:	2cff      	cmp	r4, #255	; 0xff
 80170f8:	d021      	beq.n	801713e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80170fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80170fc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017100:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017102:	fb04 fb0b 	mul.w	fp, r4, fp
 8017106:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017108:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801710c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801710e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017112:	fb04 fa0a 	mul.w	sl, r4, sl
 8017116:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801711a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801711e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017122:	44de      	add	lr, fp
 8017124:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017128:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801712c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017130:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017134:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017138:	ea4e 040a 	orr.w	r4, lr, sl
 801713c:	940b      	str	r4, [sp, #44]	; 0x2c
 801713e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017140:	2cff      	cmp	r4, #255	; 0xff
 8017142:	d021      	beq.n	8017188 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8017144:	9c08      	ldr	r4, [sp, #32]
 8017146:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801714a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801714c:	fb04 fb0b 	mul.w	fp, r4, fp
 8017150:	9c08      	ldr	r4, [sp, #32]
 8017152:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017156:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017158:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801715c:	fb04 fa0a 	mul.w	sl, r4, sl
 8017160:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017164:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017168:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801716c:	44de      	add	lr, fp
 801716e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017172:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017176:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801717a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801717e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017182:	ea4e 040a 	orr.w	r4, lr, sl
 8017186:	9408      	str	r4, [sp, #32]
 8017188:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801718a:	2cff      	cmp	r4, #255	; 0xff
 801718c:	d021      	beq.n	80171d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801718e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017190:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017194:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017196:	fb04 fb0b 	mul.w	fp, r4, fp
 801719a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801719c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80171a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80171a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80171a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80171aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80171ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80171b2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80171b6:	44de      	add	lr, fp
 80171b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80171bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80171c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80171c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80171c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80171cc:	ea4e 040a 	orr.w	r4, lr, sl
 80171d0:	940c      	str	r4, [sp, #48]	; 0x30
 80171d2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80171d4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80171d8:	9c08      	ldr	r4, [sp, #32]
 80171da:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80171de:	fb08 fc0c 	mul.w	ip, r8, ip
 80171e2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80171e6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80171ea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80171ec:	fb00 cc0e 	mla	ip, r0, lr, ip
 80171f0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80171f4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80171f6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80171fa:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80171fe:	fb08 f80e 	mul.w	r8, r8, lr
 8017202:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017206:	fb02 8303 	mla	r3, r2, r3, r8
 801720a:	9a08      	ldr	r2, [sp, #32]
 801720c:	f8b7 8000 	ldrh.w	r8, [r7]
 8017210:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017214:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017216:	fb00 330a 	mla	r3, r0, sl, r3
 801721a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801721e:	fb09 3900 	mla	r9, r9, r0, r3
 8017222:	43c9      	mvns	r1, r1
 8017224:	ea4f 2228 	mov.w	r2, r8, asr #8
 8017228:	fa5f fe81 	uxtb.w	lr, r1
 801722c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017230:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017234:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017238:	fb02 f20e 	mul.w	r2, r2, lr
 801723c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017240:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017244:	ea4c 0c09 	orr.w	ip, ip, r9
 8017248:	1c53      	adds	r3, r2, #1
 801724a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801724e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8017252:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8017256:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801725a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801725e:	4a63      	ldr	r2, [pc, #396]	; (80173ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8017260:	fb00 f00e 	mul.w	r0, r0, lr
 8017264:	b2db      	uxtb	r3, r3
 8017266:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801726a:	1c43      	adds	r3, r0, #1
 801726c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017270:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8017274:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8017278:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801727c:	b2c9      	uxtb	r1, r1
 801727e:	00db      	lsls	r3, r3, #3
 8017280:	fb01 f10e 	mul.w	r1, r1, lr
 8017284:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017288:	4313      	orrs	r3, r2
 801728a:	1c4a      	adds	r2, r1, #1
 801728c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017290:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8017294:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8017298:	ea4c 0c03 	orr.w	ip, ip, r3
 801729c:	f8a7 c000 	strh.w	ip, [r7]
 80172a0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80172a2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80172a4:	441a      	add	r2, r3
 80172a6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80172a8:	922d      	str	r2, [sp, #180]	; 0xb4
 80172aa:	441d      	add	r5, r3
 80172ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80172ae:	3b01      	subs	r3, #1
 80172b0:	3702      	adds	r7, #2
 80172b2:	9317      	str	r3, [sp, #92]	; 0x5c
 80172b4:	e699      	b.n	8016fea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80172b6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80172b8:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80172ba:	441c      	add	r4, r3
 80172bc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80172be:	942d      	str	r4, [sp, #180]	; 0xb4
 80172c0:	441d      	add	r5, r3
 80172c2:	9b07      	ldr	r3, [sp, #28]
 80172c4:	3b01      	subs	r3, #1
 80172c6:	9307      	str	r3, [sp, #28]
 80172c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80172ca:	3302      	adds	r3, #2
 80172cc:	930a      	str	r3, [sp, #40]	; 0x28
 80172ce:	e66b      	b.n	8016fa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80172d0:	d024      	beq.n	801731c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 80172d2:	9b07      	ldr	r3, [sp, #28]
 80172d4:	982f      	ldr	r0, [sp, #188]	; 0xbc
 80172d6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80172d8:	3b01      	subs	r3, #1
 80172da:	fb00 4003 	mla	r0, r0, r3, r4
 80172de:	1400      	asrs	r0, r0, #16
 80172e0:	f53f ae80 	bmi.w	8016fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80172e4:	3901      	subs	r1, #1
 80172e6:	4288      	cmp	r0, r1
 80172e8:	f6bf ae7c 	bge.w	8016fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80172ec:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80172ee:	fb01 5303 	mla	r3, r1, r3, r5
 80172f2:	141b      	asrs	r3, r3, #16
 80172f4:	f53f ae76 	bmi.w	8016fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80172f8:	3a01      	subs	r2, #1
 80172fa:	4293      	cmp	r3, r2
 80172fc:	f6bf ae72 	bge.w	8016fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017300:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017304:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8017308:	f1bb 0f00 	cmp.w	fp, #0
 801730c:	dc70      	bgt.n	80173f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 801730e:	9b07      	ldr	r3, [sp, #28]
 8017310:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017314:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017316:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801731a:	930a      	str	r3, [sp, #40]	; 0x28
 801731c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801731e:	2b00      	cmp	r3, #0
 8017320:	f340 81ae 	ble.w	8017680 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8017324:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017328:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801732c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017330:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017332:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017336:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801733a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801733e:	eef0 6a48 	vmov.f32	s13, s16
 8017342:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017346:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801734a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801734e:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8017352:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017356:	eef0 6a68 	vmov.f32	s13, s17
 801735a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801735e:	ee18 2a10 	vmov	r2, s16
 8017362:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017366:	fb92 f3f3 	sdiv	r3, r2, r3
 801736a:	ee18 2a90 	vmov	r2, s17
 801736e:	932f      	str	r3, [sp, #188]	; 0xbc
 8017370:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017372:	fb92 f3f3 	sdiv	r3, r2, r3
 8017376:	9330      	str	r3, [sp, #192]	; 0xc0
 8017378:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801737a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801737c:	3b01      	subs	r3, #1
 801737e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017382:	9316      	str	r3, [sp, #88]	; 0x58
 8017384:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017386:	bf08      	it	eq
 8017388:	4613      	moveq	r3, r2
 801738a:	ee16 5a90 	vmov	r5, s13
 801738e:	9307      	str	r3, [sp, #28]
 8017390:	eef0 8a67 	vmov.f32	s17, s15
 8017394:	eeb0 8a47 	vmov.f32	s16, s14
 8017398:	e5f8      	b.n	8016f8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801739a:	2800      	cmp	r0, #0
 801739c:	f43f ae6b 	beq.w	8017076 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80173a0:	f818 1001 	ldrb.w	r1, [r8, r1]
 80173a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80173a8:	9108      	str	r1, [sp, #32]
 80173aa:	0e09      	lsrs	r1, r1, #24
 80173ac:	9110      	str	r1, [sp, #64]	; 0x40
 80173ae:	e662      	b.n	8017076 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80173b0:	f113 0801 	adds.w	r8, r3, #1
 80173b4:	f53f af74 	bmi.w	80172a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80173b8:	4541      	cmp	r1, r8
 80173ba:	f6ff af71 	blt.w	80172a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80173be:	f11c 0801 	adds.w	r8, ip, #1
 80173c2:	f53f af6d 	bmi.w	80172a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80173c6:	45c6      	cmp	lr, r8
 80173c8:	f6ff af6a 	blt.w	80172a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80173cc:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80173d0:	b209      	sxth	r1, r1
 80173d2:	fa0f f38e 	sxth.w	r3, lr
 80173d6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80173da:	9301      	str	r3, [sp, #4]
 80173dc:	9100      	str	r1, [sp, #0]
 80173de:	4633      	mov	r3, r6
 80173e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80173e2:	9819      	ldr	r0, [sp, #100]	; 0x64
 80173e4:	4639      	mov	r1, r7
 80173e6:	f7ff fc4d 	bl	8016c84 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80173ea:	e759      	b.n	80172a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80173ec:	fffff800 	.word	0xfffff800
 80173f0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80173f2:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80173f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80173f8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80173fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80173fe:	1427      	asrs	r7, r4, #16
 8017400:	142b      	asrs	r3, r5, #16
 8017402:	fb01 7303 	mla	r3, r1, r3, r7
 8017406:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017408:	18e7      	adds	r7, r4, r3
 801740a:	5ce3      	ldrb	r3, [r4, r3]
 801740c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017410:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017414:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017418:	2a00      	cmp	r2, #0
 801741a:	f000 8127 	beq.w	801766c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801741e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8017422:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8017426:	940d      	str	r4, [sp, #52]	; 0x34
 8017428:	0e24      	lsrs	r4, r4, #24
 801742a:	9414      	str	r4, [sp, #80]	; 0x50
 801742c:	b170      	cbz	r0, 801744c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 801742e:	eb07 0e01 	add.w	lr, r7, r1
 8017432:	5c79      	ldrb	r1, [r7, r1]
 8017434:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017438:	9109      	str	r1, [sp, #36]	; 0x24
 801743a:	0e09      	lsrs	r1, r1, #24
 801743c:	9111      	str	r1, [sp, #68]	; 0x44
 801743e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8017442:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017446:	910e      	str	r1, [sp, #56]	; 0x38
 8017448:	0e09      	lsrs	r1, r1, #24
 801744a:	9115      	str	r1, [sp, #84]	; 0x54
 801744c:	b292      	uxth	r2, r2
 801744e:	b280      	uxth	r0, r0
 8017450:	fb02 f800 	mul.w	r8, r2, r0
 8017454:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8017458:	0112      	lsls	r2, r2, #4
 801745a:	eba2 0e08 	sub.w	lr, r2, r8
 801745e:	b280      	uxth	r0, r0
 8017460:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8017464:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017466:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017468:	fa1f fe8e 	uxth.w	lr, lr
 801746c:	1a09      	subs	r1, r1, r0
 801746e:	b289      	uxth	r1, r1
 8017470:	fb0e f202 	mul.w	r2, lr, r2
 8017474:	fb01 220c 	mla	r2, r1, ip, r2
 8017478:	fb00 2204 	mla	r2, r0, r4, r2
 801747c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801747e:	fb08 2204 	mla	r2, r8, r4, r2
 8017482:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8017486:	2a00      	cmp	r2, #0
 8017488:	f000 80e5 	beq.w	8017656 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801748c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017490:	d019      	beq.n	80174c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8017492:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017496:	fb0c fa0a 	mul.w	sl, ip, sl
 801749a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801749e:	fb0c fc03 	mul.w	ip, ip, r3
 80174a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80174a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80174aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80174ae:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80174b2:	4453      	add	r3, sl
 80174b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80174b8:	0a1b      	lsrs	r3, r3, #8
 80174ba:	0a3f      	lsrs	r7, r7, #8
 80174bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80174c0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80174c4:	433b      	orrs	r3, r7
 80174c6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80174c8:	2cff      	cmp	r4, #255	; 0xff
 80174ca:	d020      	beq.n	801750e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 80174cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80174ce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80174d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80174d4:	4367      	muls	r7, r4
 80174d6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80174d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80174dc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80174de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80174e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80174e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80174ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80174ee:	44bc      	add	ip, r7
 80174f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80174f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80174f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80174fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017500:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017504:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017508:	ea4c 040a 	orr.w	r4, ip, sl
 801750c:	940d      	str	r4, [sp, #52]	; 0x34
 801750e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017510:	2cff      	cmp	r4, #255	; 0xff
 8017512:	d020      	beq.n	8017556 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8017514:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017516:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801751a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801751c:	4367      	muls	r7, r4
 801751e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017520:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017524:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017526:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801752a:	fb04 fa0a 	mul.w	sl, r4, sl
 801752e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017532:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017536:	44bc      	add	ip, r7
 8017538:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801753c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017540:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017544:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017548:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801754c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017550:	ea4c 040a 	orr.w	r4, ip, sl
 8017554:	9409      	str	r4, [sp, #36]	; 0x24
 8017556:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017558:	2cff      	cmp	r4, #255	; 0xff
 801755a:	d020      	beq.n	801759e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 801755c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801755e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017562:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017564:	4367      	muls	r7, r4
 8017566:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017568:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801756c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801756e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017572:	fb04 fa0a 	mul.w	sl, r4, sl
 8017576:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801757a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801757e:	44bc      	add	ip, r7
 8017580:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017584:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017588:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801758c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017590:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017594:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017598:	ea4c 040a 	orr.w	r4, ip, sl
 801759c:	940e      	str	r4, [sp, #56]	; 0x38
 801759e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80175a0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80175a4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80175a6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80175aa:	fb0e f707 	mul.w	r7, lr, r7
 80175ae:	fb01 770c 	mla	r7, r1, ip, r7
 80175b2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80175b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80175b8:	fb00 770c 	mla	r7, r0, ip, r7
 80175bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80175c0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80175c2:	fb08 770c 	mla	r7, r8, ip, r7
 80175c6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80175ca:	fb0e fe0c 	mul.w	lr, lr, ip
 80175ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80175d2:	fb01 e303 	mla	r3, r1, r3, lr
 80175d6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80175d8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80175dc:	990e      	ldr	r1, [sp, #56]	; 0x38
 80175de:	fb00 330a 	mla	r3, r0, sl, r3
 80175e2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80175e6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80175ea:	f8b9 3000 	ldrh.w	r3, [r9]
 80175ee:	43d2      	mvns	r2, r2
 80175f0:	1218      	asrs	r0, r3, #8
 80175f2:	b2d2      	uxtb	r2, r2
 80175f4:	10d9      	asrs	r1, r3, #3
 80175f6:	0a3f      	lsrs	r7, r7, #8
 80175f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80175fc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017600:	00db      	lsls	r3, r3, #3
 8017602:	4350      	muls	r0, r2
 8017604:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017608:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801760c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017610:	b2db      	uxtb	r3, r3
 8017612:	ea47 070c 	orr.w	r7, r7, ip
 8017616:	4351      	muls	r1, r2
 8017618:	4353      	muls	r3, r2
 801761a:	1c42      	adds	r2, r0, #1
 801761c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017620:	0c3a      	lsrs	r2, r7, #16
 8017622:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017626:	4a19      	ldr	r2, [pc, #100]	; (801768c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 8017628:	b2c0      	uxtb	r0, r0
 801762a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801762e:	1c4a      	adds	r2, r1, #1
 8017630:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017634:	0a3a      	lsrs	r2, r7, #8
 8017636:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801763a:	00c9      	lsls	r1, r1, #3
 801763c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017640:	4301      	orrs	r1, r0
 8017642:	1c58      	adds	r0, r3, #1
 8017644:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017648:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801764c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8017650:	4308      	orrs	r0, r1
 8017652:	f8a9 0000 	strh.w	r0, [r9]
 8017656:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8017658:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801765a:	441a      	add	r2, r3
 801765c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801765e:	922d      	str	r2, [sp, #180]	; 0xb4
 8017660:	f109 0902 	add.w	r9, r9, #2
 8017664:	441d      	add	r5, r3
 8017666:	f10b 3bff 	add.w	fp, fp, #4294967295
 801766a:	e64d      	b.n	8017308 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801766c:	2800      	cmp	r0, #0
 801766e:	f43f aeed 	beq.w	801744c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8017672:	5c79      	ldrb	r1, [r7, r1]
 8017674:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017678:	9109      	str	r1, [sp, #36]	; 0x24
 801767a:	0e09      	lsrs	r1, r1, #24
 801767c:	9111      	str	r1, [sp, #68]	; 0x44
 801767e:	e6e5      	b.n	801744c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8017680:	b01b      	add	sp, #108	; 0x6c
 8017682:	ecbd 8b08 	vpop	{d8-d11}
 8017686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801768a:	bf00      	nop
 801768c:	fffff800 	.word	0xfffff800

08017690 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8017690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017694:	b085      	sub	sp, #20
 8017696:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801769a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801769e:	9103      	str	r1, [sp, #12]
 80176a0:	fb05 7106 	mla	r1, r5, r6, r7
 80176a4:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 80176a8:	2d00      	cmp	r5, #0
 80176aa:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80176ae:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80176b2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80176b6:	9401      	str	r4, [sp, #4]
 80176b8:	eb03 0901 	add.w	r9, r3, r1
 80176bc:	f2c0 80c0 	blt.w	8017840 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80176c0:	45a8      	cmp	r8, r5
 80176c2:	f340 80bd 	ble.w	8017840 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80176c6:	2f00      	cmp	r7, #0
 80176c8:	f2c0 80b6 	blt.w	8017838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 80176cc:	42be      	cmp	r6, r7
 80176ce:	f340 80b3 	ble.w	8017838 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 80176d2:	f813 c001 	ldrb.w	ip, [r3, r1]
 80176d6:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 80176da:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80176de:	d019      	beq.n	8017714 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 80176e0:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80176e4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80176e8:	435a      	muls	r2, r3
 80176ea:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80176ee:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80176f2:	fb0c f403 	mul.w	r4, ip, r3
 80176f6:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80176fa:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80176fe:	441a      	add	r2, r3
 8017700:	f104 0320 	add.w	r3, r4, #32
 8017704:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017708:	0a1b      	lsrs	r3, r3, #8
 801770a:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801770e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017712:	4319      	orrs	r1, r3
 8017714:	b289      	uxth	r1, r1
 8017716:	1c7b      	adds	r3, r7, #1
 8017718:	f100 8097 	bmi.w	801784a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801771c:	429e      	cmp	r6, r3
 801771e:	f340 8094 	ble.w	801784a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8017722:	2800      	cmp	r0, #0
 8017724:	f000 8094 	beq.w	8017850 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8017728:	f899 4001 	ldrb.w	r4, [r9, #1]
 801772c:	9b01      	ldr	r3, [sp, #4]
 801772e:	2cff      	cmp	r4, #255	; 0xff
 8017730:	885b      	ldrh	r3, [r3, #2]
 8017732:	d01b      	beq.n	801776c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8017734:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017738:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801773c:	fb0a f202 	mul.w	r2, sl, r2
 8017740:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017744:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017748:	fb04 fa03 	mul.w	sl, r4, r3
 801774c:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8017750:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017754:	441a      	add	r2, r3
 8017756:	f10a 0320 	add.w	r3, sl, #32
 801775a:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801775e:	0a1b      	lsrs	r3, r3, #8
 8017760:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017764:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017768:	ea4b 0303 	orr.w	r3, fp, r3
 801776c:	b29b      	uxth	r3, r3
 801776e:	3501      	adds	r5, #1
 8017770:	d474      	bmi.n	801785c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8017772:	45a8      	cmp	r8, r5
 8017774:	dd72      	ble.n	801785c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8017776:	f1be 0f00 	cmp.w	lr, #0
 801777a:	f000 8120 	beq.w	80179be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 801777e:	2f00      	cmp	r7, #0
 8017780:	db69      	blt.n	8017856 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8017782:	42be      	cmp	r6, r7
 8017784:	dd67      	ble.n	8017856 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8017786:	f819 5006 	ldrb.w	r5, [r9, r6]
 801778a:	9a01      	ldr	r2, [sp, #4]
 801778c:	2dff      	cmp	r5, #255	; 0xff
 801778e:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8017792:	d01c      	beq.n	80177ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8017794:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8017798:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801779c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80177a0:	fb05 fa0b 	mul.w	sl, r5, fp
 80177a4:	fb08 f802 	mul.w	r8, r8, r2
 80177a8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80177ac:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80177b0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80177b4:	4490      	add	r8, r2
 80177b6:	f10a 0220 	add.w	r2, sl, #32
 80177ba:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80177be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80177c2:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80177c6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80177ca:	ea4b 0b0a 	orr.w	fp, fp, sl
 80177ce:	fa1f fb8b 	uxth.w	fp, fp
 80177d2:	3701      	adds	r7, #1
 80177d4:	d447      	bmi.n	8017866 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80177d6:	42be      	cmp	r6, r7
 80177d8:	dd45      	ble.n	8017866 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80177da:	2800      	cmp	r0, #0
 80177dc:	d046      	beq.n	801786c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 80177de:	3601      	adds	r6, #1
 80177e0:	9a01      	ldr	r2, [sp, #4]
 80177e2:	f819 7006 	ldrb.w	r7, [r9, r6]
 80177e6:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80177ea:	2fff      	cmp	r7, #255	; 0xff
 80177ec:	d01a      	beq.n	8017824 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 80177ee:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80177f2:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80177f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80177fa:	fb07 f902 	mul.w	r9, r7, r2
 80177fe:	fb08 f806 	mul.w	r8, r8, r6
 8017802:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8017806:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801780a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801780e:	44b0      	add	r8, r6
 8017810:	f109 0620 	add.w	r6, r9, #32
 8017814:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8017818:	0a36      	lsrs	r6, r6, #8
 801781a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801781e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017822:	4332      	orrs	r2, r6
 8017824:	b292      	uxth	r2, r2
 8017826:	280f      	cmp	r0, #15
 8017828:	d922      	bls.n	8017870 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801782a:	4b69      	ldr	r3, [pc, #420]	; (80179d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 801782c:	4a69      	ldr	r2, [pc, #420]	; (80179d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 801782e:	486a      	ldr	r0, [pc, #424]	; (80179d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 8017830:	f240 11f9 	movw	r1, #505	; 0x1f9
 8017834:	f004 fa5e 	bl	801bcf4 <__assert_func>
 8017838:	f04f 0c00 	mov.w	ip, #0
 801783c:	4661      	mov	r1, ip
 801783e:	e76a      	b.n	8017716 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8017840:	2400      	movs	r4, #0
 8017842:	46a4      	mov	ip, r4
 8017844:	4623      	mov	r3, r4
 8017846:	4621      	mov	r1, r4
 8017848:	e791      	b.n	801776e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801784a:	2400      	movs	r4, #0
 801784c:	4623      	mov	r3, r4
 801784e:	e78e      	b.n	801776e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8017850:	4604      	mov	r4, r0
 8017852:	4603      	mov	r3, r0
 8017854:	e78b      	b.n	801776e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8017856:	2500      	movs	r5, #0
 8017858:	46ab      	mov	fp, r5
 801785a:	e7ba      	b.n	80177d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 801785c:	2700      	movs	r7, #0
 801785e:	463d      	mov	r5, r7
 8017860:	463a      	mov	r2, r7
 8017862:	46bb      	mov	fp, r7
 8017864:	e7df      	b.n	8017826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8017866:	2700      	movs	r7, #0
 8017868:	463a      	mov	r2, r7
 801786a:	e7dc      	b.n	8017826 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801786c:	4607      	mov	r7, r0
 801786e:	4602      	mov	r2, r0
 8017870:	f1be 0f0f 	cmp.w	lr, #15
 8017874:	d8d9      	bhi.n	801782a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8017876:	b286      	uxth	r6, r0
 8017878:	fa1f f98e 	uxth.w	r9, lr
 801787c:	fb06 f809 	mul.w	r8, r6, r9
 8017880:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017884:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8017888:	0136      	lsls	r6, r6, #4
 801788a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801788e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017892:	9601      	str	r6, [sp, #4]
 8017894:	ea4a 0101 	orr.w	r1, sl, r1
 8017898:	fa1f f689 	uxth.w	r6, r9
 801789c:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80178a0:	fb10 f90e 	smulbb	r9, r0, lr
 80178a4:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80178a8:	9602      	str	r6, [sp, #8]
 80178aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80178ae:	460e      	mov	r6, r1
 80178b0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80178b4:	f1ce 0110 	rsb	r1, lr, #16
 80178b8:	1a09      	subs	r1, r1, r0
 80178ba:	ea4a 0303 	orr.w	r3, sl, r3
 80178be:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80178c2:	4343      	muls	r3, r0
 80178c4:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80178c8:	9801      	ldr	r0, [sp, #4]
 80178ca:	fb01 3106 	mla	r1, r1, r6, r3
 80178ce:	9e02      	ldr	r6, [sp, #8]
 80178d0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80178d4:	1b80      	subs	r0, r0, r6
 80178d6:	9e01      	ldr	r6, [sp, #4]
 80178d8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80178dc:	eba6 0608 	sub.w	r6, r6, r8
 80178e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80178e4:	b2b6      	uxth	r6, r6
 80178e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80178ea:	ea4a 0202 	orr.w	r2, sl, r2
 80178ee:	b280      	uxth	r0, r0
 80178f0:	4374      	muls	r4, r6
 80178f2:	fb09 1302 	mla	r3, r9, r2, r1
 80178f6:	fb0c 4400 	mla	r4, ip, r0, r4
 80178fa:	9a03      	ldr	r2, [sp, #12]
 80178fc:	9802      	ldr	r0, [sp, #8]
 80178fe:	8811      	ldrh	r1, [r2, #0]
 8017900:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8017904:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8017908:	fb00 4505 	mla	r5, r0, r5, r4
 801790c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017910:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017914:	fb08 5707 	mla	r7, r8, r7, r5
 8017918:	ea4a 0b0b 	orr.w	fp, sl, fp
 801791c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8017920:	b292      	uxth	r2, r2
 8017922:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017926:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801792a:	4357      	muls	r7, r2
 801792c:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017930:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017934:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017938:	f107 0801 	add.w	r8, r7, #1
 801793c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017940:	ea43 0e0e 	orr.w	lr, r3, lr
 8017944:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8017948:	fa1f f38e 	uxth.w	r3, lr
 801794c:	1208      	asrs	r0, r1, #8
 801794e:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8017952:	b2ff      	uxtb	r7, r7
 8017954:	121c      	asrs	r4, r3, #8
 8017956:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801795a:	fb10 f007 	smulbb	r0, r0, r7
 801795e:	10cd      	asrs	r5, r1, #3
 8017960:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017964:	fb04 0402 	mla	r4, r4, r2, r0
 8017968:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801796c:	10d8      	asrs	r0, r3, #3
 801796e:	fb15 f507 	smulbb	r5, r5, r7
 8017972:	00db      	lsls	r3, r3, #3
 8017974:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017978:	fb00 5002 	mla	r0, r0, r2, r5
 801797c:	b2dd      	uxtb	r5, r3
 801797e:	00cb      	lsls	r3, r1, #3
 8017980:	b2db      	uxtb	r3, r3
 8017982:	fb13 f307 	smulbb	r3, r3, r7
 8017986:	fb05 3202 	mla	r2, r5, r2, r3
 801798a:	b2a4      	uxth	r4, r4
 801798c:	b292      	uxth	r2, r2
 801798e:	1c63      	adds	r3, r4, #1
 8017990:	b280      	uxth	r0, r0
 8017992:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8017996:	1c53      	adds	r3, r2, #1
 8017998:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801799c:	1c42      	adds	r2, r0, #1
 801799e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80179a2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80179a6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80179aa:	0940      	lsrs	r0, r0, #5
 80179ac:	4323      	orrs	r3, r4
 80179ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80179b2:	9a03      	ldr	r2, [sp, #12]
 80179b4:	4303      	orrs	r3, r0
 80179b6:	8013      	strh	r3, [r2, #0]
 80179b8:	b005      	add	sp, #20
 80179ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179be:	280f      	cmp	r0, #15
 80179c0:	f63f af33 	bhi.w	801782a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80179c4:	4677      	mov	r7, lr
 80179c6:	4675      	mov	r5, lr
 80179c8:	4672      	mov	r2, lr
 80179ca:	46f3      	mov	fp, lr
 80179cc:	e753      	b.n	8017876 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 80179ce:	bf00      	nop
 80179d0:	0801fdd3 	.word	0x0801fdd3
 80179d4:	08020302 	.word	0x08020302
 80179d8:	0801fda0 	.word	0x0801fda0

080179dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80179dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179e0:	ed2d 8b08 	vpush	{d8-d11}
 80179e4:	b097      	sub	sp, #92	; 0x5c
 80179e6:	eeb0 aa40 	vmov.f32	s20, s0
 80179ea:	9214      	str	r2, [sp, #80]	; 0x50
 80179ec:	9308      	str	r3, [sp, #32]
 80179ee:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80179f0:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80179f4:	9312      	str	r3, [sp, #72]	; 0x48
 80179f6:	9111      	str	r1, [sp, #68]	; 0x44
 80179f8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80179fc:	9015      	str	r0, [sp, #84]	; 0x54
 80179fe:	6850      	ldr	r0, [r2, #4]
 8017a00:	6812      	ldr	r2, [r2, #0]
 8017a02:	fb00 1303 	mla	r3, r0, r3, r1
 8017a06:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017a0a:	9309      	str	r3, [sp, #36]	; 0x24
 8017a0c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017a0e:	681b      	ldr	r3, [r3, #0]
 8017a10:	930b      	str	r3, [sp, #44]	; 0x2c
 8017a12:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017a14:	685b      	ldr	r3, [r3, #4]
 8017a16:	930c      	str	r3, [sp, #48]	; 0x30
 8017a18:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017a1c:	930a      	str	r3, [sp, #40]	; 0x28
 8017a1e:	eef0 9a60 	vmov.f32	s19, s1
 8017a22:	eeb0 9a41 	vmov.f32	s18, s2
 8017a26:	eeb0 8a62 	vmov.f32	s16, s5
 8017a2a:	eef0 8a43 	vmov.f32	s17, s6
 8017a2e:	eef0 ba44 	vmov.f32	s23, s8
 8017a32:	eeb0 ba64 	vmov.f32	s22, s9
 8017a36:	eef0 aa45 	vmov.f32	s21, s10
 8017a3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017a3c:	2b00      	cmp	r3, #0
 8017a3e:	dc03      	bgt.n	8017a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017a40:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8017a42:	2b00      	cmp	r3, #0
 8017a44:	f340 83cb 	ble.w	80181de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8017a48:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017a4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017a4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017a52:	1e48      	subs	r0, r1, #1
 8017a54:	1e55      	subs	r5, r2, #1
 8017a56:	9b08      	ldr	r3, [sp, #32]
 8017a58:	2b00      	cmp	r3, #0
 8017a5a:	f340 81a3 	ble.w	8017da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8017a5e:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8017a60:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017a62:	1436      	asrs	r6, r6, #16
 8017a64:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017a68:	d406      	bmi.n	8017a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017a6a:	4286      	cmp	r6, r0
 8017a6c:	da04      	bge.n	8017a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017a6e:	2b00      	cmp	r3, #0
 8017a70:	db02      	blt.n	8017a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8017a72:	42ab      	cmp	r3, r5
 8017a74:	f2c0 8197 	blt.w	8017da6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8017a78:	3601      	adds	r6, #1
 8017a7a:	f100 8184 	bmi.w	8017d86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017a7e:	42b1      	cmp	r1, r6
 8017a80:	f2c0 8181 	blt.w	8017d86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017a84:	3301      	adds	r3, #1
 8017a86:	f100 817e 	bmi.w	8017d86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017a8a:	429a      	cmp	r2, r3
 8017a8c:	f2c0 817b 	blt.w	8017d86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017a90:	9b08      	ldr	r3, [sp, #32]
 8017a92:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8017a94:	9313      	str	r3, [sp, #76]	; 0x4c
 8017a96:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017a9a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017a9c:	2b00      	cmp	r3, #0
 8017a9e:	f340 81a4 	ble.w	8017dea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8017aa2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017aa4:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017aa6:	1418      	asrs	r0, r3, #16
 8017aa8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017aaa:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017aae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017ab0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017ab4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017ab6:	142d      	asrs	r5, r5, #16
 8017ab8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8017abc:	f100 81f8 	bmi.w	8017eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017ac0:	f102 3eff 	add.w	lr, r2, #4294967295
 8017ac4:	4575      	cmp	r5, lr
 8017ac6:	f280 81f3 	bge.w	8017eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017aca:	2800      	cmp	r0, #0
 8017acc:	f2c0 81f0 	blt.w	8017eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017ad0:	f103 3eff 	add.w	lr, r3, #4294967295
 8017ad4:	4570      	cmp	r0, lr
 8017ad6:	f280 81eb 	bge.w	8017eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8017ada:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017adc:	b212      	sxth	r2, r2
 8017ade:	fb00 5002 	mla	r0, r0, r2, r5
 8017ae2:	fa1f fe81 	uxth.w	lr, r1
 8017ae6:	eb03 0a00 	add.w	sl, r3, r0
 8017aea:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8017aee:	f813 9000 	ldrb.w	r9, [r3, r0]
 8017af2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017af6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8017afa:	b29b      	uxth	r3, r3
 8017afc:	f1bc 0f00 	cmp.w	ip, #0
 8017b00:	f000 81b9 	beq.w	8017e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8017b04:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017b08:	940d      	str	r4, [sp, #52]	; 0x34
 8017b0a:	eb0a 0b02 	add.w	fp, sl, r2
 8017b0e:	fa1f fa8c 	uxth.w	sl, ip
 8017b12:	fb0a fe0e 	mul.w	lr, sl, lr
 8017b16:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017b1a:	fa1f fa8a 	uxth.w	sl, sl
 8017b1e:	eba5 050e 	sub.w	r5, r5, lr
 8017b22:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017b26:	940e      	str	r4, [sp, #56]	; 0x38
 8017b28:	eba3 030a 	sub.w	r3, r3, sl
 8017b2c:	b2ad      	uxth	r5, r5
 8017b2e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017b30:	b29b      	uxth	r3, r3
 8017b32:	fb08 f505 	mul.w	r5, r8, r5
 8017b36:	fb09 5303 	mla	r3, r9, r3, r5
 8017b3a:	fb0a 3304 	mla	r3, sl, r4, r3
 8017b3e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017b40:	fb0e 3304 	mla	r3, lr, r4, r3
 8017b44:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017b48:	2b00      	cmp	r3, #0
 8017b4a:	f000 810f 	beq.w	8017d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017b4e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017b50:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017b54:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017b58:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8017b5c:	f000 8190 	beq.w	8017e80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8017b60:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017b64:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017b68:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017b6c:	fb09 f000 	mul.w	r0, r9, r0
 8017b70:	fb0a fe0e 	mul.w	lr, sl, lr
 8017b74:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017b78:	f100 0b20 	add.w	fp, r0, #32
 8017b7c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017b80:	44ce      	add	lr, r9
 8017b82:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8017b86:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017b8a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017b8e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017b92:	ea4e 0909 	orr.w	r9, lr, r9
 8017b96:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017b9a:	8868      	ldrh	r0, [r5, #2]
 8017b9c:	d019      	beq.n	8017bd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8017b9e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017ba2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017ba6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017baa:	fb08 f800 	mul.w	r8, r8, r0
 8017bae:	fb0a fe0e 	mul.w	lr, sl, lr
 8017bb2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017bb6:	f108 0b20 	add.w	fp, r8, #32
 8017bba:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017bbe:	4486      	add	lr, r0
 8017bc0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017bc4:	0a00      	lsrs	r0, r0, #8
 8017bc6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017bca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017bce:	ea4e 0000 	orr.w	r0, lr, r0
 8017bd2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017bd6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017bda:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017bde:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017be2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017be6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017bea:	ea4e 0909 	orr.w	r9, lr, r9
 8017bee:	ea4a 0000 	orr.w	r0, sl, r0
 8017bf2:	f1bc 0f00 	cmp.w	ip, #0
 8017bf6:	f000 8145 	beq.w	8017e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8017bfa:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8017bfe:	3a01      	subs	r2, #1
 8017c00:	0052      	lsls	r2, r2, #1
 8017c02:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017c04:	3202      	adds	r2, #2
 8017c06:	2cff      	cmp	r4, #255	; 0xff
 8017c08:	eb05 0e02 	add.w	lr, r5, r2
 8017c0c:	5aaa      	ldrh	r2, [r5, r2]
 8017c0e:	d018      	beq.n	8017c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8017c10:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017c14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c18:	fb04 fa02 	mul.w	sl, r4, r2
 8017c1c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017c20:	fb08 f805 	mul.w	r8, r8, r5
 8017c24:	f10a 0520 	add.w	r5, sl, #32
 8017c28:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017c2c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017c30:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017c34:	4442      	add	r2, r8
 8017c36:	0a2d      	lsrs	r5, r5, #8
 8017c38:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017c3c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017c40:	432a      	orrs	r2, r5
 8017c42:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017c44:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017c48:	2cff      	cmp	r4, #255	; 0xff
 8017c4a:	d01a      	beq.n	8017c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8017c4c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8017c50:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017c54:	fb04 fa05 	mul.w	sl, r4, r5
 8017c58:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017c5c:	fb08 f80e 	mul.w	r8, r8, lr
 8017c60:	f10a 0e20 	add.w	lr, sl, #32
 8017c64:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017c68:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017c6c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017c70:	4445      	add	r5, r8
 8017c72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017c76:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8017c7a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8017c7e:	ea45 050e 	orr.w	r5, r5, lr
 8017c82:	fb1c fe01 	smulbb	lr, ip, r1
 8017c86:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017c8a:	f1cc 0810 	rsb	r8, ip, #16
 8017c8e:	eba8 0801 	sub.w	r8, r8, r1
 8017c92:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017c96:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8017c9a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8017c9e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8017ca2:	4341      	muls	r1, r0
 8017ca4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017ca8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017cac:	ea4a 0202 	orr.w	r2, sl, r2
 8017cb0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017cb4:	fb09 1108 	mla	r1, r9, r8, r1
 8017cb8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017cbc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017cc0:	fb0c 1102 	mla	r1, ip, r2, r1
 8017cc4:	ea4b 0505 	orr.w	r5, fp, r5
 8017cc8:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017ccc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017cd0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017cd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017cd8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017cdc:	ea42 0e0e 	orr.w	lr, r2, lr
 8017ce0:	fa1f f28e 	uxth.w	r2, lr
 8017ce4:	2bff      	cmp	r3, #255	; 0xff
 8017ce6:	d103      	bne.n	8017cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017ce8:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017cea:	29ff      	cmp	r1, #255	; 0xff
 8017cec:	f000 80de 	beq.w	8017eac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8017cf0:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017cf2:	8838      	ldrh	r0, [r7, #0]
 8017cf4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017cf6:	434b      	muls	r3, r1
 8017cf8:	f103 0c01 	add.w	ip, r3, #1
 8017cfc:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8017d00:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017d04:	fa5f fc83 	uxtb.w	ip, r3
 8017d08:	1203      	asrs	r3, r0, #8
 8017d0a:	1215      	asrs	r5, r2, #8
 8017d0c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017d10:	fb13 f30c 	smulbb	r3, r3, ip
 8017d14:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017d18:	fb05 3501 	mla	r5, r5, r1, r3
 8017d1c:	10c3      	asrs	r3, r0, #3
 8017d1e:	10d1      	asrs	r1, r2, #3
 8017d20:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017d24:	fb13 f30c 	smulbb	r3, r3, ip
 8017d28:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017d2c:	fb01 3104 	mla	r1, r1, r4, r3
 8017d30:	00c3      	lsls	r3, r0, #3
 8017d32:	00d2      	lsls	r2, r2, #3
 8017d34:	b2db      	uxtb	r3, r3
 8017d36:	b2d2      	uxtb	r2, r2
 8017d38:	fb13 f30c 	smulbb	r3, r3, ip
 8017d3c:	b2ad      	uxth	r5, r5
 8017d3e:	fb02 3304 	mla	r3, r2, r4, r3
 8017d42:	b29a      	uxth	r2, r3
 8017d44:	1c6b      	adds	r3, r5, #1
 8017d46:	b289      	uxth	r1, r1
 8017d48:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017d4c:	1c53      	adds	r3, r2, #1
 8017d4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017d52:	1c4a      	adds	r2, r1, #1
 8017d54:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017d58:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017d5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017d60:	0949      	lsrs	r1, r1, #5
 8017d62:	432b      	orrs	r3, r5
 8017d64:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017d68:	430b      	orrs	r3, r1
 8017d6a:	803b      	strh	r3, [r7, #0]
 8017d6c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d6e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017d70:	4413      	add	r3, r2
 8017d72:	9329      	str	r3, [sp, #164]	; 0xa4
 8017d74:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017d76:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017d78:	441a      	add	r2, r3
 8017d7a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017d7c:	922a      	str	r2, [sp, #168]	; 0xa8
 8017d7e:	3b01      	subs	r3, #1
 8017d80:	3702      	adds	r7, #2
 8017d82:	9313      	str	r3, [sp, #76]	; 0x4c
 8017d84:	e689      	b.n	8017a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8017d86:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d88:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8017d8a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8017d8c:	4433      	add	r3, r6
 8017d8e:	9329      	str	r3, [sp, #164]	; 0xa4
 8017d90:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017d92:	441c      	add	r4, r3
 8017d94:	9b08      	ldr	r3, [sp, #32]
 8017d96:	942a      	str	r4, [sp, #168]	; 0xa8
 8017d98:	3b01      	subs	r3, #1
 8017d9a:	9308      	str	r3, [sp, #32]
 8017d9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d9e:	3302      	adds	r3, #2
 8017da0:	9309      	str	r3, [sp, #36]	; 0x24
 8017da2:	e658      	b.n	8017a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8017da4:	d028      	beq.n	8017df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8017da6:	9b08      	ldr	r3, [sp, #32]
 8017da8:	982b      	ldr	r0, [sp, #172]	; 0xac
 8017daa:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8017dac:	3b01      	subs	r3, #1
 8017dae:	fb00 5003 	mla	r0, r0, r3, r5
 8017db2:	1400      	asrs	r0, r0, #16
 8017db4:	f53f ae6c 	bmi.w	8017a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017db8:	3901      	subs	r1, #1
 8017dba:	4288      	cmp	r0, r1
 8017dbc:	f6bf ae68 	bge.w	8017a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017dc0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017dc2:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8017dc4:	fb01 0303 	mla	r3, r1, r3, r0
 8017dc8:	141b      	asrs	r3, r3, #16
 8017dca:	f53f ae61 	bmi.w	8017a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017dce:	3a01      	subs	r2, #1
 8017dd0:	4293      	cmp	r3, r2
 8017dd2:	f6bf ae5d 	bge.w	8017a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8017dd6:	9b08      	ldr	r3, [sp, #32]
 8017dd8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017ddc:	9313      	str	r3, [sp, #76]	; 0x4c
 8017dde:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017de2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017de4:	2b00      	cmp	r3, #0
 8017de6:	f300 8082 	bgt.w	8017eee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8017dea:	9b08      	ldr	r3, [sp, #32]
 8017dec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017df0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017df2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017df6:	9309      	str	r3, [sp, #36]	; 0x24
 8017df8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017dfa:	2b00      	cmp	r3, #0
 8017dfc:	f340 81ef 	ble.w	80181de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8017e00:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017e04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017e08:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017e0c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017e0e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017e12:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017e16:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017e1a:	eef0 6a48 	vmov.f32	s13, s16
 8017e1e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017e22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e26:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017e2a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017e2e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017e32:	eef0 6a68 	vmov.f32	s13, s17
 8017e36:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017e3a:	ee18 2a10 	vmov	r2, s16
 8017e3e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017e42:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e46:	ee18 2a90 	vmov	r2, s17
 8017e4a:	932b      	str	r3, [sp, #172]	; 0xac
 8017e4c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017e4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e52:	932c      	str	r3, [sp, #176]	; 0xb0
 8017e54:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017e56:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017e58:	3b01      	subs	r3, #1
 8017e5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e5e:	9311      	str	r3, [sp, #68]	; 0x44
 8017e60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017e62:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8017e66:	bf08      	it	eq
 8017e68:	4613      	moveq	r3, r2
 8017e6a:	9308      	str	r3, [sp, #32]
 8017e6c:	eef0 8a67 	vmov.f32	s17, s15
 8017e70:	eeb0 8a47 	vmov.f32	s16, s14
 8017e74:	e5e1      	b.n	8017a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017e76:	fb08 f505 	mul.w	r5, r8, r5
 8017e7a:	fb09 5303 	mla	r3, r9, r3, r5
 8017e7e:	e661      	b.n	8017b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8017e80:	4681      	mov	r9, r0
 8017e82:	e688      	b.n	8017b96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8017e84:	f1c1 0210 	rsb	r2, r1, #16
 8017e88:	4341      	muls	r1, r0
 8017e8a:	fb09 1902 	mla	r9, r9, r2, r1
 8017e8e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017e92:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017e96:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017e9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017e9e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017ea2:	ea42 0909 	orr.w	r9, r2, r9
 8017ea6:	fa1f f289 	uxth.w	r2, r9
 8017eaa:	e71b      	b.n	8017ce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8017eac:	803a      	strh	r2, [r7, #0]
 8017eae:	e75d      	b.n	8017d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017eb0:	f115 0e01 	adds.w	lr, r5, #1
 8017eb4:	f53f af5a 	bmi.w	8017d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017eb8:	4572      	cmp	r2, lr
 8017eba:	f6ff af57 	blt.w	8017d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017ebe:	f110 0e01 	adds.w	lr, r0, #1
 8017ec2:	f53f af53 	bmi.w	8017d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017ec6:	4573      	cmp	r3, lr
 8017ec8:	f6ff af50 	blt.w	8017d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017ecc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017ece:	9502      	str	r5, [sp, #8]
 8017ed0:	b21b      	sxth	r3, r3
 8017ed2:	b212      	sxth	r2, r2
 8017ed4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017ed8:	9301      	str	r3, [sp, #4]
 8017eda:	9200      	str	r2, [sp, #0]
 8017edc:	e9cd c405 	strd	ip, r4, [sp, #20]
 8017ee0:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017ee4:	4639      	mov	r1, r7
 8017ee6:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017ee8:	f7ff fbd2 	bl	8017690 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017eec:	e73e      	b.n	8017d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8017eee:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017ef0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017ef4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017ef6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017efa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017efc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017f00:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017f02:	141f      	asrs	r7, r3, #16
 8017f04:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017f06:	141b      	asrs	r3, r3, #16
 8017f08:	fb01 3707 	mla	r7, r1, r7, r3
 8017f0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017f0e:	fa1f fc82 	uxth.w	ip, r2
 8017f12:	eb03 0a07 	add.w	sl, r3, r7
 8017f16:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017f1a:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017f1e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017f22:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017f26:	b29b      	uxth	r3, r3
 8017f28:	2d00      	cmp	r5, #0
 8017f2a:	f000 813d 	beq.w	80181a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8017f2e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8017f32:	940f      	str	r4, [sp, #60]	; 0x3c
 8017f34:	eb0a 0b01 	add.w	fp, sl, r1
 8017f38:	fa1f fa85 	uxth.w	sl, r5
 8017f3c:	fb0a fc0c 	mul.w	ip, sl, ip
 8017f40:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017f44:	fa1f fa8a 	uxth.w	sl, sl
 8017f48:	eba0 000c 	sub.w	r0, r0, ip
 8017f4c:	eba3 030a 	sub.w	r3, r3, sl
 8017f50:	b280      	uxth	r0, r0
 8017f52:	fb08 f000 	mul.w	r0, r8, r0
 8017f56:	b29b      	uxth	r3, r3
 8017f58:	fb09 0303 	mla	r3, r9, r3, r0
 8017f5c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017f5e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017f62:	9410      	str	r4, [sp, #64]	; 0x40
 8017f64:	fb0a 3300 	mla	r3, sl, r0, r3
 8017f68:	fb0c 3304 	mla	r3, ip, r4, r3
 8017f6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017f70:	2b00      	cmp	r3, #0
 8017f72:	f000 810b 	beq.w	801818c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017f76:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017f78:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017f7a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017f7e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8017f82:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017f86:	f000 8114 	beq.w	80181b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8017f8a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017f8e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017f92:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017f96:	fb09 f707 	mul.w	r7, r9, r7
 8017f9a:	fb0a fc0c 	mul.w	ip, sl, ip
 8017f9e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017fa2:	f107 0b20 	add.w	fp, r7, #32
 8017fa6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017faa:	44cc      	add	ip, r9
 8017fac:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017fb0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017fb4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017fb8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017fbc:	ea4c 0909 	orr.w	r9, ip, r9
 8017fc0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017fc4:	8847      	ldrh	r7, [r0, #2]
 8017fc6:	d019      	beq.n	8017ffc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8017fc8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017fcc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017fd0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017fd4:	fb08 f807 	mul.w	r8, r8, r7
 8017fd8:	fb0a fc0c 	mul.w	ip, sl, ip
 8017fdc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017fe0:	f108 0b20 	add.w	fp, r8, #32
 8017fe4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017fe8:	44bc      	add	ip, r7
 8017fea:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017fee:	0a3f      	lsrs	r7, r7, #8
 8017ff0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017ff4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ff8:	ea4c 0707 	orr.w	r7, ip, r7
 8017ffc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018000:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018004:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018008:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801800c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018010:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018014:	ea4c 0909 	orr.w	r9, ip, r9
 8018018:	ea4a 0707 	orr.w	r7, sl, r7
 801801c:	2d00      	cmp	r5, #0
 801801e:	f000 80ca 	beq.w	80181b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8018022:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018026:	3901      	subs	r1, #1
 8018028:	0049      	lsls	r1, r1, #1
 801802a:	3102      	adds	r1, #2
 801802c:	eb00 0c01 	add.w	ip, r0, r1
 8018030:	5a41      	ldrh	r1, [r0, r1]
 8018032:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018034:	28ff      	cmp	r0, #255	; 0xff
 8018036:	d019      	beq.n	801806c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8018038:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801803a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801803e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018042:	fb04 fa01 	mul.w	sl, r4, r1
 8018046:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801804a:	fb08 f800 	mul.w	r8, r8, r0
 801804e:	f10a 0020 	add.w	r0, sl, #32
 8018052:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8018056:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801805a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801805e:	4441      	add	r1, r8
 8018060:	0a00      	lsrs	r0, r0, #8
 8018062:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018066:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801806a:	4301      	orrs	r1, r0
 801806c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801806e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8018072:	2cff      	cmp	r4, #255	; 0xff
 8018074:	d01a      	beq.n	80180ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8018076:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801807a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801807e:	fb04 fa00 	mul.w	sl, r4, r0
 8018082:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018086:	fb08 f80c 	mul.w	r8, r8, ip
 801808a:	f10a 0c20 	add.w	ip, sl, #32
 801808e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018092:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018096:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801809a:	4440      	add	r0, r8
 801809c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80180a0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80180a4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80180a8:	ea40 000c 	orr.w	r0, r0, ip
 80180ac:	fb15 fc02 	smulbb	ip, r5, r2
 80180b0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80180b4:	f1c5 0810 	rsb	r8, r5, #16
 80180b8:	eba8 0802 	sub.w	r8, r8, r2
 80180bc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80180c0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80180c4:	437a      	muls	r2, r7
 80180c6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80180ca:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80180ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80180d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80180d6:	fb09 2208 	mla	r2, r9, r8, r2
 80180da:	ea4a 0101 	orr.w	r1, sl, r1
 80180de:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80180e2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80180e6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80180ea:	fb05 2201 	mla	r2, r5, r1, r2
 80180ee:	ea4b 0000 	orr.w	r0, fp, r0
 80180f2:	fb0c 2200 	mla	r2, ip, r0, r2
 80180f6:	0d57      	lsrs	r7, r2, #21
 80180f8:	0952      	lsrs	r2, r2, #5
 80180fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80180fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018102:	433a      	orrs	r2, r7
 8018104:	2bff      	cmp	r3, #255	; 0xff
 8018106:	b292      	uxth	r2, r2
 8018108:	d102      	bne.n	8018110 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801810a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801810c:	29ff      	cmp	r1, #255	; 0xff
 801810e:	d063      	beq.n	80181d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8018110:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018112:	f8be 1000 	ldrh.w	r1, [lr]
 8018116:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018118:	4343      	muls	r3, r0
 801811a:	1c58      	adds	r0, r3, #1
 801811c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8018120:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8018124:	1208      	asrs	r0, r1, #8
 8018126:	b2db      	uxtb	r3, r3
 8018128:	1215      	asrs	r5, r2, #8
 801812a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801812e:	fb10 f003 	smulbb	r0, r0, r3
 8018132:	10cf      	asrs	r7, r1, #3
 8018134:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018138:	00c9      	lsls	r1, r1, #3
 801813a:	fb05 0504 	mla	r5, r5, r4, r0
 801813e:	b2c9      	uxtb	r1, r1
 8018140:	10d0      	asrs	r0, r2, #3
 8018142:	00d2      	lsls	r2, r2, #3
 8018144:	fb11 f103 	smulbb	r1, r1, r3
 8018148:	b2d2      	uxtb	r2, r2
 801814a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801814e:	fb02 1204 	mla	r2, r2, r4, r1
 8018152:	fb17 f703 	smulbb	r7, r7, r3
 8018156:	b2ad      	uxth	r5, r5
 8018158:	b292      	uxth	r2, r2
 801815a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801815e:	fb00 7004 	mla	r0, r0, r4, r7
 8018162:	1c6b      	adds	r3, r5, #1
 8018164:	1c57      	adds	r7, r2, #1
 8018166:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801816a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801816e:	b280      	uxth	r0, r0
 8018170:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018174:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018178:	433d      	orrs	r5, r7
 801817a:	1c47      	adds	r7, r0, #1
 801817c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018180:	097f      	lsrs	r7, r7, #5
 8018182:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018186:	433d      	orrs	r5, r7
 8018188:	f8ae 5000 	strh.w	r5, [lr]
 801818c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801818e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018190:	4413      	add	r3, r2
 8018192:	9329      	str	r3, [sp, #164]	; 0xa4
 8018194:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018196:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018198:	441a      	add	r2, r3
 801819a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801819c:	922a      	str	r2, [sp, #168]	; 0xa8
 801819e:	3b01      	subs	r3, #1
 80181a0:	f10e 0e02 	add.w	lr, lr, #2
 80181a4:	9313      	str	r3, [sp, #76]	; 0x4c
 80181a6:	e61c      	b.n	8017de2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 80181a8:	fb08 f000 	mul.w	r0, r8, r0
 80181ac:	fb09 0303 	mla	r3, r9, r3, r0
 80181b0:	e6dc      	b.n	8017f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 80181b2:	46b9      	mov	r9, r7
 80181b4:	e704      	b.n	8017fc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 80181b6:	f1c2 0110 	rsb	r1, r2, #16
 80181ba:	437a      	muls	r2, r7
 80181bc:	fb09 2901 	mla	r9, r9, r1, r2
 80181c0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80181c4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80181c8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80181cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80181d0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80181d4:	4302      	orrs	r2, r0
 80181d6:	e795      	b.n	8018104 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 80181d8:	f8ae 2000 	strh.w	r2, [lr]
 80181dc:	e7d6      	b.n	801818c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80181de:	b017      	add	sp, #92	; 0x5c
 80181e0:	ecbd 8b08 	vpop	{d8-d11}
 80181e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080181e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80181e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181ec:	b085      	sub	sp, #20
 80181ee:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80181f2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80181f6:	9103      	str	r1, [sp, #12]
 80181f8:	fb05 7106 	mla	r1, r5, r6, r7
 80181fc:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8018200:	2d00      	cmp	r5, #0
 8018202:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8018206:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801820a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801820e:	9401      	str	r4, [sp, #4]
 8018210:	eb02 0901 	add.w	r9, r2, r1
 8018214:	f2c0 80c0 	blt.w	8018398 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018218:	45a8      	cmp	r8, r5
 801821a:	f340 80bd 	ble.w	8018398 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801821e:	2f00      	cmp	r7, #0
 8018220:	f2c0 80b6 	blt.w	8018390 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8018224:	42be      	cmp	r6, r7
 8018226:	f340 80b3 	ble.w	8018390 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801822a:	f812 c001 	ldrb.w	ip, [r2, r1]
 801822e:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8018232:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018236:	d019      	beq.n	801826c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8018238:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801823c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018240:	435a      	muls	r2, r3
 8018242:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8018246:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801824a:	fb0c f403 	mul.w	r4, ip, r3
 801824e:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8018252:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8018256:	441a      	add	r2, r3
 8018258:	f104 0320 	add.w	r3, r4, #32
 801825c:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8018260:	0a1b      	lsrs	r3, r3, #8
 8018262:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8018266:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801826a:	4319      	orrs	r1, r3
 801826c:	b289      	uxth	r1, r1
 801826e:	1c7b      	adds	r3, r7, #1
 8018270:	f100 8097 	bmi.w	80183a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8018274:	429e      	cmp	r6, r3
 8018276:	f340 8094 	ble.w	80183a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801827a:	2800      	cmp	r0, #0
 801827c:	f000 8094 	beq.w	80183a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8018280:	f899 4001 	ldrb.w	r4, [r9, #1]
 8018284:	9b01      	ldr	r3, [sp, #4]
 8018286:	2cff      	cmp	r4, #255	; 0xff
 8018288:	885b      	ldrh	r3, [r3, #2]
 801828a:	d01b      	beq.n	80182c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 801828c:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8018290:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018294:	fb0a f202 	mul.w	r2, sl, r2
 8018298:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801829c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80182a0:	fb04 fa03 	mul.w	sl, r4, r3
 80182a4:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80182a8:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80182ac:	441a      	add	r2, r3
 80182ae:	f10a 0320 	add.w	r3, sl, #32
 80182b2:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80182b6:	0a1b      	lsrs	r3, r3, #8
 80182b8:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80182bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80182c0:	ea4b 0303 	orr.w	r3, fp, r3
 80182c4:	b29b      	uxth	r3, r3
 80182c6:	3501      	adds	r5, #1
 80182c8:	d474      	bmi.n	80183b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 80182ca:	45a8      	cmp	r8, r5
 80182cc:	dd72      	ble.n	80183b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 80182ce:	f1be 0f00 	cmp.w	lr, #0
 80182d2:	f000 8110 	beq.w	80184f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 80182d6:	2f00      	cmp	r7, #0
 80182d8:	db69      	blt.n	80183ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80182da:	42be      	cmp	r6, r7
 80182dc:	dd67      	ble.n	80183ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80182de:	f819 5006 	ldrb.w	r5, [r9, r6]
 80182e2:	9a01      	ldr	r2, [sp, #4]
 80182e4:	2dff      	cmp	r5, #255	; 0xff
 80182e6:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80182ea:	d01c      	beq.n	8018326 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 80182ec:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80182f0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80182f4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80182f8:	fb05 fa0b 	mul.w	sl, r5, fp
 80182fc:	fb08 f802 	mul.w	r8, r8, r2
 8018300:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018304:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8018308:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801830c:	4490      	add	r8, r2
 801830e:	f10a 0220 	add.w	r2, sl, #32
 8018312:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8018316:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801831a:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801831e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018322:	ea4b 0b0a 	orr.w	fp, fp, sl
 8018326:	fa1f fb8b 	uxth.w	fp, fp
 801832a:	3701      	adds	r7, #1
 801832c:	d447      	bmi.n	80183be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801832e:	42be      	cmp	r6, r7
 8018330:	dd45      	ble.n	80183be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8018332:	2800      	cmp	r0, #0
 8018334:	d046      	beq.n	80183c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8018336:	3601      	adds	r6, #1
 8018338:	9a01      	ldr	r2, [sp, #4]
 801833a:	f819 7006 	ldrb.w	r7, [r9, r6]
 801833e:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8018342:	2fff      	cmp	r7, #255	; 0xff
 8018344:	d01a      	beq.n	801837c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8018346:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801834a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801834e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018352:	fb07 f902 	mul.w	r9, r7, r2
 8018356:	fb08 f806 	mul.w	r8, r8, r6
 801835a:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801835e:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8018362:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018366:	44b0      	add	r8, r6
 8018368:	f109 0620 	add.w	r6, r9, #32
 801836c:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8018370:	0a36      	lsrs	r6, r6, #8
 8018372:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8018376:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801837a:	4332      	orrs	r2, r6
 801837c:	b292      	uxth	r2, r2
 801837e:	280f      	cmp	r0, #15
 8018380:	d922      	bls.n	80183c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8018382:	4b61      	ldr	r3, [pc, #388]	; (8018508 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8018384:	4a61      	ldr	r2, [pc, #388]	; (801850c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8018386:	4862      	ldr	r0, [pc, #392]	; (8018510 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8018388:	f240 11f9 	movw	r1, #505	; 0x1f9
 801838c:	f003 fcb2 	bl	801bcf4 <__assert_func>
 8018390:	f04f 0c00 	mov.w	ip, #0
 8018394:	4661      	mov	r1, ip
 8018396:	e76a      	b.n	801826e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8018398:	2400      	movs	r4, #0
 801839a:	46a4      	mov	ip, r4
 801839c:	4623      	mov	r3, r4
 801839e:	4621      	mov	r1, r4
 80183a0:	e791      	b.n	80182c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80183a2:	2400      	movs	r4, #0
 80183a4:	4623      	mov	r3, r4
 80183a6:	e78e      	b.n	80182c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80183a8:	4604      	mov	r4, r0
 80183aa:	4603      	mov	r3, r0
 80183ac:	e78b      	b.n	80182c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80183ae:	2500      	movs	r5, #0
 80183b0:	46ab      	mov	fp, r5
 80183b2:	e7ba      	b.n	801832a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 80183b4:	2700      	movs	r7, #0
 80183b6:	463d      	mov	r5, r7
 80183b8:	463a      	mov	r2, r7
 80183ba:	46bb      	mov	fp, r7
 80183bc:	e7df      	b.n	801837e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 80183be:	2700      	movs	r7, #0
 80183c0:	463a      	mov	r2, r7
 80183c2:	e7dc      	b.n	801837e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 80183c4:	4607      	mov	r7, r0
 80183c6:	4602      	mov	r2, r0
 80183c8:	f1be 0f0f 	cmp.w	lr, #15
 80183cc:	d8d9      	bhi.n	8018382 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80183ce:	b286      	uxth	r6, r0
 80183d0:	fa1f f98e 	uxth.w	r9, lr
 80183d4:	fb06 f809 	mul.w	r8, r6, r9
 80183d8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80183dc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80183e0:	0136      	lsls	r6, r6, #4
 80183e2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80183e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80183ea:	9601      	str	r6, [sp, #4]
 80183ec:	ea4a 0101 	orr.w	r1, sl, r1
 80183f0:	fa1f f689 	uxth.w	r6, r9
 80183f4:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80183f8:	fb10 f90e 	smulbb	r9, r0, lr
 80183fc:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8018400:	9602      	str	r6, [sp, #8]
 8018402:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018406:	460e      	mov	r6, r1
 8018408:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801840c:	f1ce 0110 	rsb	r1, lr, #16
 8018410:	1a09      	subs	r1, r1, r0
 8018412:	ea4a 0303 	orr.w	r3, sl, r3
 8018416:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801841a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801841e:	4343      	muls	r3, r0
 8018420:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8018424:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018428:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801842c:	fb01 3106 	mla	r1, r1, r6, r3
 8018430:	ea4a 0202 	orr.w	r2, sl, r2
 8018434:	fb09 1302 	mla	r3, r9, r2, r1
 8018438:	9a03      	ldr	r2, [sp, #12]
 801843a:	9802      	ldr	r0, [sp, #8]
 801843c:	8811      	ldrh	r1, [r2, #0]
 801843e:	9a01      	ldr	r2, [sp, #4]
 8018440:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018444:	1a12      	subs	r2, r2, r0
 8018446:	9801      	ldr	r0, [sp, #4]
 8018448:	eba0 0608 	sub.w	r6, r0, r8
 801844c:	b2b6      	uxth	r6, r6
 801844e:	b292      	uxth	r2, r2
 8018450:	4374      	muls	r4, r6
 8018452:	fb0c 4402 	mla	r4, ip, r2, r4
 8018456:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801845a:	9a02      	ldr	r2, [sp, #8]
 801845c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018460:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018464:	fb02 4505 	mla	r5, r2, r5, r4
 8018468:	ea4a 0b0b 	orr.w	fp, sl, fp
 801846c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018470:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8018474:	fb08 5707 	mla	r7, r8, r7, r5
 8018478:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801847c:	120a      	asrs	r2, r1, #8
 801847e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018482:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8018486:	b2ff      	uxtb	r7, r7
 8018488:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801848c:	10c8      	asrs	r0, r1, #3
 801848e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018492:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018496:	00c9      	lsls	r1, r1, #3
 8018498:	437a      	muls	r2, r7
 801849a:	ea43 0e0e 	orr.w	lr, r3, lr
 801849e:	b2c9      	uxtb	r1, r1
 80184a0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80184a4:	fa1f f38e 	uxth.w	r3, lr
 80184a8:	4378      	muls	r0, r7
 80184aa:	434f      	muls	r7, r1
 80184ac:	1c51      	adds	r1, r2, #1
 80184ae:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80184b2:	121a      	asrs	r2, r3, #8
 80184b4:	f022 0207 	bic.w	r2, r2, #7
 80184b8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80184bc:	1c41      	adds	r1, r0, #1
 80184be:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80184c2:	10d9      	asrs	r1, r3, #3
 80184c4:	f021 0103 	bic.w	r1, r1, #3
 80184c8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80184cc:	0212      	lsls	r2, r2, #8
 80184ce:	00c9      	lsls	r1, r1, #3
 80184d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80184d4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80184d8:	430a      	orrs	r2, r1
 80184da:	1c79      	adds	r1, r7, #1
 80184dc:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80184e0:	00db      	lsls	r3, r3, #3
 80184e2:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80184e6:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80184ea:	4313      	orrs	r3, r2
 80184ec:	9a03      	ldr	r2, [sp, #12]
 80184ee:	8013      	strh	r3, [r2, #0]
 80184f0:	b005      	add	sp, #20
 80184f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184f6:	280f      	cmp	r0, #15
 80184f8:	f63f af43 	bhi.w	8018382 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80184fc:	4677      	mov	r7, lr
 80184fe:	4675      	mov	r5, lr
 8018500:	4672      	mov	r2, lr
 8018502:	46f3      	mov	fp, lr
 8018504:	e763      	b.n	80183ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8018506:	bf00      	nop
 8018508:	0801fdd3 	.word	0x0801fdd3
 801850c:	08020302 	.word	0x08020302
 8018510:	0801fda0 	.word	0x0801fda0

08018514 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018518:	ed2d 8b08 	vpush	{d8-d11}
 801851c:	b093      	sub	sp, #76	; 0x4c
 801851e:	eeb0 aa40 	vmov.f32	s20, s0
 8018522:	9210      	str	r2, [sp, #64]	; 0x40
 8018524:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018526:	910e      	str	r1, [sp, #56]	; 0x38
 8018528:	9306      	str	r3, [sp, #24]
 801852a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801852e:	9011      	str	r0, [sp, #68]	; 0x44
 8018530:	6850      	ldr	r0, [r2, #4]
 8018532:	6812      	ldr	r2, [r2, #0]
 8018534:	fb00 1303 	mla	r3, r0, r3, r1
 8018538:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801853c:	9307      	str	r3, [sp, #28]
 801853e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018540:	681b      	ldr	r3, [r3, #0]
 8018542:	9308      	str	r3, [sp, #32]
 8018544:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018546:	685b      	ldr	r3, [r3, #4]
 8018548:	9309      	str	r3, [sp, #36]	; 0x24
 801854a:	eef0 9a60 	vmov.f32	s19, s1
 801854e:	eeb0 9a41 	vmov.f32	s18, s2
 8018552:	eeb0 8a62 	vmov.f32	s16, s5
 8018556:	eef0 8a43 	vmov.f32	s17, s6
 801855a:	eef0 ba44 	vmov.f32	s23, s8
 801855e:	eeb0 ba64 	vmov.f32	s22, s9
 8018562:	eef0 aa45 	vmov.f32	s21, s10
 8018566:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018568:	2b00      	cmp	r3, #0
 801856a:	dc03      	bgt.n	8018574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801856c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801856e:	2b00      	cmp	r3, #0
 8018570:	f340 83b4 	ble.w	8018cdc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8018574:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018576:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801857a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801857e:	1e48      	subs	r0, r1, #1
 8018580:	1e55      	subs	r5, r2, #1
 8018582:	9b06      	ldr	r3, [sp, #24]
 8018584:	2b00      	cmp	r3, #0
 8018586:	f340 8163 	ble.w	8018850 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801858a:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801858c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801858e:	1436      	asrs	r6, r6, #16
 8018590:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018594:	d406      	bmi.n	80185a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018596:	4286      	cmp	r6, r0
 8018598:	da04      	bge.n	80185a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801859a:	2b00      	cmp	r3, #0
 801859c:	db02      	blt.n	80185a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801859e:	42ab      	cmp	r3, r5
 80185a0:	f2c0 8157 	blt.w	8018852 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80185a4:	3601      	adds	r6, #1
 80185a6:	f100 8144 	bmi.w	8018832 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80185aa:	42b1      	cmp	r1, r6
 80185ac:	f2c0 8141 	blt.w	8018832 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80185b0:	3301      	adds	r3, #1
 80185b2:	f100 813e 	bmi.w	8018832 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80185b6:	429a      	cmp	r2, r3
 80185b8:	f2c0 813b 	blt.w	8018832 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80185bc:	9b06      	ldr	r3, [sp, #24]
 80185be:	9f07      	ldr	r7, [sp, #28]
 80185c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80185c2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80185c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80185c8:	2b00      	cmp	r3, #0
 80185ca:	f340 8164 	ble.w	8018896 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 80185ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80185d0:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80185d2:	1418      	asrs	r0, r3, #16
 80185d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80185d6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80185da:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80185dc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80185e0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80185e2:	142d      	asrs	r5, r5, #16
 80185e4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80185e8:	f100 81ee 	bmi.w	80189c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80185ec:	f102 3eff 	add.w	lr, r2, #4294967295
 80185f0:	4575      	cmp	r5, lr
 80185f2:	f280 81e9 	bge.w	80189c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80185f6:	2800      	cmp	r0, #0
 80185f8:	f2c0 81e6 	blt.w	80189c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80185fc:	f103 3eff 	add.w	lr, r3, #4294967295
 8018600:	4570      	cmp	r0, lr
 8018602:	f280 81e1 	bge.w	80189c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018606:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018608:	b212      	sxth	r2, r2
 801860a:	fb00 5002 	mla	r0, r0, r2, r5
 801860e:	fa1f fe81 	uxth.w	lr, r1
 8018612:	eb03 0a00 	add.w	sl, r3, r0
 8018616:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801861a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801861e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018622:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8018626:	b29b      	uxth	r3, r3
 8018628:	f1bc 0f00 	cmp.w	ip, #0
 801862c:	f000 8179 	beq.w	8018922 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8018630:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018634:	940a      	str	r4, [sp, #40]	; 0x28
 8018636:	eb0a 0b02 	add.w	fp, sl, r2
 801863a:	fa1f fa8c 	uxth.w	sl, ip
 801863e:	fb0a fe0e 	mul.w	lr, sl, lr
 8018642:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018646:	fa1f fa8a 	uxth.w	sl, sl
 801864a:	eba5 050e 	sub.w	r5, r5, lr
 801864e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018652:	940b      	str	r4, [sp, #44]	; 0x2c
 8018654:	eba3 030a 	sub.w	r3, r3, sl
 8018658:	b2ad      	uxth	r5, r5
 801865a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801865c:	b29b      	uxth	r3, r3
 801865e:	fb08 f505 	mul.w	r5, r8, r5
 8018662:	fb09 5303 	mla	r3, r9, r3, r5
 8018666:	fb0a 3304 	mla	r3, sl, r4, r3
 801866a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801866c:	fb0e 3304 	mla	r3, lr, r4, r3
 8018670:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018674:	2b00      	cmp	r3, #0
 8018676:	f000 80cf 	beq.w	8018818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801867a:	9c08      	ldr	r4, [sp, #32]
 801867c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018680:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018684:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018688:	f000 8150 	beq.w	801892c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801868c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018690:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018694:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018698:	fb09 f000 	mul.w	r0, r9, r0
 801869c:	fb0a fe0e 	mul.w	lr, sl, lr
 80186a0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80186a4:	f100 0b20 	add.w	fp, r0, #32
 80186a8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80186ac:	44ce      	add	lr, r9
 80186ae:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80186b2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80186b6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80186ba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80186be:	ea4e 0909 	orr.w	r9, lr, r9
 80186c2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80186c6:	8868      	ldrh	r0, [r5, #2]
 80186c8:	d019      	beq.n	80186fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80186ca:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80186ce:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80186d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80186d6:	fb08 f800 	mul.w	r8, r8, r0
 80186da:	fb0a fe0e 	mul.w	lr, sl, lr
 80186de:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80186e2:	f108 0b20 	add.w	fp, r8, #32
 80186e6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80186ea:	4486      	add	lr, r0
 80186ec:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80186f0:	0a00      	lsrs	r0, r0, #8
 80186f2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80186f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80186fa:	ea4e 0000 	orr.w	r0, lr, r0
 80186fe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8018702:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8018706:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801870a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801870e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018712:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018716:	ea4e 0909 	orr.w	r9, lr, r9
 801871a:	ea4a 0000 	orr.w	r0, sl, r0
 801871e:	f1bc 0f00 	cmp.w	ip, #0
 8018722:	f000 8105 	beq.w	8018930 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8018726:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801872a:	3a01      	subs	r2, #1
 801872c:	0052      	lsls	r2, r2, #1
 801872e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018730:	3202      	adds	r2, #2
 8018732:	2cff      	cmp	r4, #255	; 0xff
 8018734:	eb05 0e02 	add.w	lr, r5, r2
 8018738:	5aaa      	ldrh	r2, [r5, r2]
 801873a:	d018      	beq.n	801876e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801873c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8018740:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018744:	fb04 fa02 	mul.w	sl, r4, r2
 8018748:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801874c:	fb08 f805 	mul.w	r8, r8, r5
 8018750:	f10a 0520 	add.w	r5, sl, #32
 8018754:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8018758:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801875c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018760:	4442      	add	r2, r8
 8018762:	0a2d      	lsrs	r5, r5, #8
 8018764:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018768:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801876c:	432a      	orrs	r2, r5
 801876e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018770:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018774:	2cff      	cmp	r4, #255	; 0xff
 8018776:	d01a      	beq.n	80187ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018778:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801877c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018780:	fb04 fa05 	mul.w	sl, r4, r5
 8018784:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018788:	fb08 f80e 	mul.w	r8, r8, lr
 801878c:	f10a 0e20 	add.w	lr, sl, #32
 8018790:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018794:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8018798:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801879c:	4445      	add	r5, r8
 801879e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80187a2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80187a6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80187aa:	ea45 050e 	orr.w	r5, r5, lr
 80187ae:	fb1c fe01 	smulbb	lr, ip, r1
 80187b2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80187b6:	f1cc 0810 	rsb	r8, ip, #16
 80187ba:	eba8 0801 	sub.w	r8, r8, r1
 80187be:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80187c2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80187c6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80187ca:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80187ce:	4341      	muls	r1, r0
 80187d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80187d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80187d8:	ea4a 0202 	orr.w	r2, sl, r2
 80187dc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80187e0:	fb09 1108 	mla	r1, r9, r8, r1
 80187e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80187e8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80187ec:	fb0c 1102 	mla	r1, ip, r2, r1
 80187f0:	ea4b 0505 	orr.w	r5, fp, r5
 80187f4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80187f8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80187fc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018800:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018804:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018808:	ea42 0e0e 	orr.w	lr, r2, lr
 801880c:	fa1f f28e 	uxth.w	r2, lr
 8018810:	2bff      	cmp	r3, #255	; 0xff
 8018812:	f040 80a1 	bne.w	8018958 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 8018816:	803a      	strh	r2, [r7, #0]
 8018818:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801881a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801881c:	4413      	add	r3, r2
 801881e:	9325      	str	r3, [sp, #148]	; 0x94
 8018820:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018822:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018824:	441a      	add	r2, r3
 8018826:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018828:	9226      	str	r2, [sp, #152]	; 0x98
 801882a:	3b01      	subs	r3, #1
 801882c:	3702      	adds	r7, #2
 801882e:	930f      	str	r3, [sp, #60]	; 0x3c
 8018830:	e6c9      	b.n	80185c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018832:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018834:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8018836:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8018838:	4433      	add	r3, r6
 801883a:	9325      	str	r3, [sp, #148]	; 0x94
 801883c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801883e:	441c      	add	r4, r3
 8018840:	9b06      	ldr	r3, [sp, #24]
 8018842:	9426      	str	r4, [sp, #152]	; 0x98
 8018844:	3b01      	subs	r3, #1
 8018846:	9306      	str	r3, [sp, #24]
 8018848:	9b07      	ldr	r3, [sp, #28]
 801884a:	3302      	adds	r3, #2
 801884c:	9307      	str	r3, [sp, #28]
 801884e:	e698      	b.n	8018582 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018850:	d028      	beq.n	80188a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018852:	9b06      	ldr	r3, [sp, #24]
 8018854:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018856:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8018858:	3b01      	subs	r3, #1
 801885a:	fb00 5003 	mla	r0, r0, r3, r5
 801885e:	1400      	asrs	r0, r0, #16
 8018860:	f53f aeac 	bmi.w	80185bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018864:	3901      	subs	r1, #1
 8018866:	4288      	cmp	r0, r1
 8018868:	f6bf aea8 	bge.w	80185bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801886c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801886e:	9826      	ldr	r0, [sp, #152]	; 0x98
 8018870:	fb01 0303 	mla	r3, r1, r3, r0
 8018874:	141b      	asrs	r3, r3, #16
 8018876:	f53f aea1 	bmi.w	80185bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801887a:	3a01      	subs	r2, #1
 801887c:	4293      	cmp	r3, r2
 801887e:	f6bf ae9d 	bge.w	80185bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018882:	9b06      	ldr	r3, [sp, #24]
 8018884:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8018888:	930f      	str	r3, [sp, #60]	; 0x3c
 801888a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801888e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018890:	2b00      	cmp	r3, #0
 8018892:	f300 80b6 	bgt.w	8018a02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8018896:	9b06      	ldr	r3, [sp, #24]
 8018898:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801889c:	9b07      	ldr	r3, [sp, #28]
 801889e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80188a2:	9307      	str	r3, [sp, #28]
 80188a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80188a6:	2b00      	cmp	r3, #0
 80188a8:	f340 8218 	ble.w	8018cdc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 80188ac:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80188b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80188b4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80188b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80188ba:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80188be:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80188c2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80188c6:	eef0 6a48 	vmov.f32	s13, s16
 80188ca:	ee69 7a27 	vmul.f32	s15, s18, s15
 80188ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80188d2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80188d6:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80188da:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80188de:	eef0 6a68 	vmov.f32	s13, s17
 80188e2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80188e6:	ee18 2a10 	vmov	r2, s16
 80188ea:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80188ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80188f2:	ee18 2a90 	vmov	r2, s17
 80188f6:	9327      	str	r3, [sp, #156]	; 0x9c
 80188f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80188fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80188fe:	9328      	str	r3, [sp, #160]	; 0xa0
 8018900:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018902:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018904:	3b01      	subs	r3, #1
 8018906:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801890a:	930e      	str	r3, [sp, #56]	; 0x38
 801890c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801890e:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 8018912:	bf08      	it	eq
 8018914:	4613      	moveq	r3, r2
 8018916:	9306      	str	r3, [sp, #24]
 8018918:	eef0 8a67 	vmov.f32	s17, s15
 801891c:	eeb0 8a47 	vmov.f32	s16, s14
 8018920:	e621      	b.n	8018566 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018922:	fb08 f505 	mul.w	r5, r8, r5
 8018926:	fb09 5303 	mla	r3, r9, r3, r5
 801892a:	e6a1      	b.n	8018670 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801892c:	4681      	mov	r9, r0
 801892e:	e6c8      	b.n	80186c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8018930:	f1c1 0210 	rsb	r2, r1, #16
 8018934:	4341      	muls	r1, r0
 8018936:	fb09 1902 	mla	r9, r9, r2, r1
 801893a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801893e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8018942:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018946:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801894a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801894e:	ea42 0909 	orr.w	r9, r2, r9
 8018952:	fa1f f289 	uxth.w	r2, r9
 8018956:	e75b      	b.n	8018810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018958:	f8b7 c000 	ldrh.w	ip, [r7]
 801895c:	43db      	mvns	r3, r3
 801895e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8018962:	fa5f fe83 	uxtb.w	lr, r3
 8018966:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801896a:	fb00 f00e 	mul.w	r0, r0, lr
 801896e:	1c41      	adds	r1, r0, #1
 8018970:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018974:	1211      	asrs	r1, r2, #8
 8018976:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801897a:	f021 0107 	bic.w	r1, r1, #7
 801897e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8018982:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018986:	48d8      	ldr	r0, [pc, #864]	; (8018ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8018988:	fb05 f50e 	mul.w	r5, r5, lr
 801898c:	b2c9      	uxtb	r1, r1
 801898e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8018992:	1c69      	adds	r1, r5, #1
 8018994:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018998:	10d1      	asrs	r1, r2, #3
 801899a:	f021 0103 	bic.w	r1, r1, #3
 801899e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80189a2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80189a6:	b2db      	uxtb	r3, r3
 80189a8:	00c9      	lsls	r1, r1, #3
 80189aa:	fb03 f30e 	mul.w	r3, r3, lr
 80189ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80189b2:	4301      	orrs	r1, r0
 80189b4:	1c58      	adds	r0, r3, #1
 80189b6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80189ba:	00d2      	lsls	r2, r2, #3
 80189bc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80189c0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80189c4:	430a      	orrs	r2, r1
 80189c6:	e726      	b.n	8018816 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80189c8:	f115 0e01 	adds.w	lr, r5, #1
 80189cc:	f53f af24 	bmi.w	8018818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80189d0:	4572      	cmp	r2, lr
 80189d2:	f6ff af21 	blt.w	8018818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80189d6:	f110 0e01 	adds.w	lr, r0, #1
 80189da:	f53f af1d 	bmi.w	8018818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80189de:	4573      	cmp	r3, lr
 80189e0:	f6ff af1a 	blt.w	8018818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80189e4:	b21b      	sxth	r3, r3
 80189e6:	b212      	sxth	r2, r2
 80189e8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80189ec:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80189f0:	9301      	str	r3, [sp, #4]
 80189f2:	9200      	str	r2, [sp, #0]
 80189f4:	4639      	mov	r1, r7
 80189f6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80189fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80189fc:	f7ff fbf4 	bl	80181e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8018a00:	e70a      	b.n	8018818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8018a02:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018a04:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018a08:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018a0a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8018a0e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018a10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018a14:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018a16:	141f      	asrs	r7, r3, #16
 8018a18:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018a1a:	141b      	asrs	r3, r3, #16
 8018a1c:	fb01 3707 	mla	r7, r1, r7, r3
 8018a20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a22:	fa1f fc82 	uxth.w	ip, r2
 8018a26:	eb03 0a07 	add.w	sl, r3, r7
 8018a2a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8018a2e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018a32:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018a36:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018a3a:	b29b      	uxth	r3, r3
 8018a3c:	2d00      	cmp	r5, #0
 8018a3e:	f000 80fe 	beq.w	8018c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 8018a42:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8018a46:	940c      	str	r4, [sp, #48]	; 0x30
 8018a48:	eb0a 0b01 	add.w	fp, sl, r1
 8018a4c:	fa1f fa85 	uxth.w	sl, r5
 8018a50:	fb0a fc0c 	mul.w	ip, sl, ip
 8018a54:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8018a58:	fa1f fa8a 	uxth.w	sl, sl
 8018a5c:	eba0 000c 	sub.w	r0, r0, ip
 8018a60:	eba3 030a 	sub.w	r3, r3, sl
 8018a64:	b280      	uxth	r0, r0
 8018a66:	fb08 f000 	mul.w	r0, r8, r0
 8018a6a:	b29b      	uxth	r3, r3
 8018a6c:	fb09 0303 	mla	r3, r9, r3, r0
 8018a70:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018a72:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018a76:	940d      	str	r4, [sp, #52]	; 0x34
 8018a78:	fb0a 3300 	mla	r3, sl, r0, r3
 8018a7c:	fb0c 3304 	mla	r3, ip, r4, r3
 8018a80:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018a84:	2b00      	cmp	r3, #0
 8018a86:	f000 80cc 	beq.w	8018c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8018a8a:	9808      	ldr	r0, [sp, #32]
 8018a8c:	9c08      	ldr	r4, [sp, #32]
 8018a8e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018a92:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8018a96:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018a9a:	f000 80d5 	beq.w	8018c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8018a9e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018aa2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018aa6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018aaa:	fb09 f707 	mul.w	r7, r9, r7
 8018aae:	fb0a fc0c 	mul.w	ip, sl, ip
 8018ab2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018ab6:	f107 0b20 	add.w	fp, r7, #32
 8018aba:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018abe:	44cc      	add	ip, r9
 8018ac0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018ac4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018ac8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018acc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018ad0:	ea4c 0909 	orr.w	r9, ip, r9
 8018ad4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018ad8:	8847      	ldrh	r7, [r0, #2]
 8018ada:	d019      	beq.n	8018b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8018adc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018ae0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018ae4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018ae8:	fb08 f807 	mul.w	r8, r8, r7
 8018aec:	fb0a fc0c 	mul.w	ip, sl, ip
 8018af0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018af4:	f108 0b20 	add.w	fp, r8, #32
 8018af8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018afc:	44bc      	add	ip, r7
 8018afe:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018b02:	0a3f      	lsrs	r7, r7, #8
 8018b04:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018b08:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018b0c:	ea4c 0707 	orr.w	r7, ip, r7
 8018b10:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018b14:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018b18:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018b1c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018b20:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018b24:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018b28:	ea4c 0909 	orr.w	r9, ip, r9
 8018b2c:	ea4a 0707 	orr.w	r7, sl, r7
 8018b30:	2d00      	cmp	r5, #0
 8018b32:	f000 808b 	beq.w	8018c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 8018b36:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018b3a:	3901      	subs	r1, #1
 8018b3c:	0049      	lsls	r1, r1, #1
 8018b3e:	3102      	adds	r1, #2
 8018b40:	eb00 0c01 	add.w	ip, r0, r1
 8018b44:	5a41      	ldrh	r1, [r0, r1]
 8018b46:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018b48:	28ff      	cmp	r0, #255	; 0xff
 8018b4a:	d019      	beq.n	8018b80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8018b4c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018b4e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018b52:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018b56:	fb04 fa01 	mul.w	sl, r4, r1
 8018b5a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018b5e:	fb08 f800 	mul.w	r8, r8, r0
 8018b62:	f10a 0020 	add.w	r0, sl, #32
 8018b66:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8018b6a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8018b6e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018b72:	4441      	add	r1, r8
 8018b74:	0a00      	lsrs	r0, r0, #8
 8018b76:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018b7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018b7e:	4301      	orrs	r1, r0
 8018b80:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018b82:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8018b86:	2cff      	cmp	r4, #255	; 0xff
 8018b88:	d01a      	beq.n	8018bc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8018b8a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8018b8e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018b92:	fb04 fa00 	mul.w	sl, r4, r0
 8018b96:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018b9a:	fb08 f80c 	mul.w	r8, r8, ip
 8018b9e:	f10a 0c20 	add.w	ip, sl, #32
 8018ba2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018ba6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018baa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018bae:	4440      	add	r0, r8
 8018bb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018bb4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018bb8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018bbc:	ea40 000c 	orr.w	r0, r0, ip
 8018bc0:	fb15 fc02 	smulbb	ip, r5, r2
 8018bc4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018bc8:	f1c5 0810 	rsb	r8, r5, #16
 8018bcc:	eba8 0802 	sub.w	r8, r8, r2
 8018bd0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018bd4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018bd8:	437a      	muls	r2, r7
 8018bda:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018bde:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018be2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018be6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018bea:	fb09 2208 	mla	r2, r9, r8, r2
 8018bee:	ea4a 0101 	orr.w	r1, sl, r1
 8018bf2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018bf6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018bfa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018bfe:	fb05 2201 	mla	r2, r5, r1, r2
 8018c02:	ea4b 0000 	orr.w	r0, fp, r0
 8018c06:	fb0c 2200 	mla	r2, ip, r0, r2
 8018c0a:	0d57      	lsrs	r7, r2, #21
 8018c0c:	0952      	lsrs	r2, r2, #5
 8018c0e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018c12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018c16:	433a      	orrs	r2, r7
 8018c18:	2bff      	cmp	r3, #255	; 0xff
 8018c1a:	b292      	uxth	r2, r2
 8018c1c:	d127      	bne.n	8018c6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8018c1e:	f8ae 2000 	strh.w	r2, [lr]
 8018c22:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018c24:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8018c26:	4413      	add	r3, r2
 8018c28:	9325      	str	r3, [sp, #148]	; 0x94
 8018c2a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018c2c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c2e:	441a      	add	r2, r3
 8018c30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018c32:	9226      	str	r2, [sp, #152]	; 0x98
 8018c34:	3b01      	subs	r3, #1
 8018c36:	f10e 0e02 	add.w	lr, lr, #2
 8018c3a:	930f      	str	r3, [sp, #60]	; 0x3c
 8018c3c:	e627      	b.n	801888e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8018c3e:	fb08 f000 	mul.w	r0, r8, r0
 8018c42:	fb09 0303 	mla	r3, r9, r3, r0
 8018c46:	e71b      	b.n	8018a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8018c48:	46b9      	mov	r9, r7
 8018c4a:	e743      	b.n	8018ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8018c4c:	f1c2 0110 	rsb	r1, r2, #16
 8018c50:	437a      	muls	r2, r7
 8018c52:	fb09 2901 	mla	r9, r9, r1, r2
 8018c56:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018c5a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018c5e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018c62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018c66:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018c6a:	4302      	orrs	r2, r0
 8018c6c:	e7d4      	b.n	8018c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8018c6e:	f8be 7000 	ldrh.w	r7, [lr]
 8018c72:	4c1d      	ldr	r4, [pc, #116]	; (8018ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8018c74:	43db      	mvns	r3, r3
 8018c76:	1238      	asrs	r0, r7, #8
 8018c78:	fa5f fc83 	uxtb.w	ip, r3
 8018c7c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018c80:	10fd      	asrs	r5, r7, #3
 8018c82:	fb00 f00c 	mul.w	r0, r0, ip
 8018c86:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018c8a:	fb05 f10c 	mul.w	r1, r5, ip
 8018c8e:	1c45      	adds	r5, r0, #1
 8018c90:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018c94:	1215      	asrs	r5, r2, #8
 8018c96:	f025 0507 	bic.w	r5, r5, #7
 8018c9a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018c9e:	1c4d      	adds	r5, r1, #1
 8018ca0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8018ca4:	10d1      	asrs	r1, r2, #3
 8018ca6:	f021 0103 	bic.w	r1, r1, #3
 8018caa:	00fb      	lsls	r3, r7, #3
 8018cac:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018cb0:	b2db      	uxtb	r3, r3
 8018cb2:	b2c0      	uxtb	r0, r0
 8018cb4:	00c9      	lsls	r1, r1, #3
 8018cb6:	fb03 f30c 	mul.w	r3, r3, ip
 8018cba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018cbe:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018cc2:	4308      	orrs	r0, r1
 8018cc4:	1c59      	adds	r1, r3, #1
 8018cc6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018cca:	00d2      	lsls	r2, r2, #3
 8018ccc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018cd0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8018cd4:	4318      	orrs	r0, r3
 8018cd6:	f8ae 0000 	strh.w	r0, [lr]
 8018cda:	e7a2      	b.n	8018c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8018cdc:	b013      	add	sp, #76	; 0x4c
 8018cde:	ecbd 8b08 	vpop	{d8-d11}
 8018ce2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ce6:	bf00      	nop
 8018ce8:	fffff800 	.word	0xfffff800

08018cec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018cec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018cf0:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8018cf4:	fb0c 4e03 	mla	lr, ip, r3, r4
 8018cf8:	f1bc 0f00 	cmp.w	ip, #0
 8018cfc:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018d00:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8018d04:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8018d08:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8018d0c:	8808      	ldrh	r0, [r1, #0]
 8018d0e:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8018d12:	db2f      	blt.n	8018d74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018d14:	45e2      	cmp	sl, ip
 8018d16:	dd2d      	ble.n	8018d74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8018d18:	2c00      	cmp	r4, #0
 8018d1a:	db29      	blt.n	8018d70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018d1c:	42a3      	cmp	r3, r4
 8018d1e:	dd27      	ble.n	8018d70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8018d20:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8018d24:	1c62      	adds	r2, r4, #1
 8018d26:	d428      	bmi.n	8018d7a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018d28:	4293      	cmp	r3, r2
 8018d2a:	dd26      	ble.n	8018d7a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018d2c:	b32f      	cbz	r7, 8018d7a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8018d2e:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8018d32:	f11c 0c01 	adds.w	ip, ip, #1
 8018d36:	d424      	bmi.n	8018d82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018d38:	45e2      	cmp	sl, ip
 8018d3a:	dd22      	ble.n	8018d82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018d3c:	2e00      	cmp	r6, #0
 8018d3e:	f000 809d 	beq.w	8018e7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8018d42:	2c00      	cmp	r4, #0
 8018d44:	db1b      	blt.n	8018d7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018d46:	42a3      	cmp	r3, r4
 8018d48:	dd19      	ble.n	8018d7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8018d4a:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8018d4e:	3401      	adds	r4, #1
 8018d50:	d41a      	bmi.n	8018d88 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018d52:	42a3      	cmp	r3, r4
 8018d54:	dd18      	ble.n	8018d88 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018d56:	b1cf      	cbz	r7, 8018d8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8018d58:	3301      	adds	r3, #1
 8018d5a:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8018d5e:	2f0f      	cmp	r7, #15
 8018d60:	d915      	bls.n	8018d8e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8018d62:	4b49      	ldr	r3, [pc, #292]	; (8018e88 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8018d64:	4a49      	ldr	r2, [pc, #292]	; (8018e8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8018d66:	484a      	ldr	r0, [pc, #296]	; (8018e90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8018d68:	f240 11db 	movw	r1, #475	; 0x1db
 8018d6c:	f002 ffc2 	bl	801bcf4 <__assert_func>
 8018d70:	4681      	mov	r9, r0
 8018d72:	e7d7      	b.n	8018d24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8018d74:	4686      	mov	lr, r0
 8018d76:	4681      	mov	r9, r0
 8018d78:	e7db      	b.n	8018d32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018d7a:	4686      	mov	lr, r0
 8018d7c:	e7d9      	b.n	8018d32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018d7e:	4684      	mov	ip, r0
 8018d80:	e7e5      	b.n	8018d4e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8018d82:	4603      	mov	r3, r0
 8018d84:	4684      	mov	ip, r0
 8018d86:	e7ea      	b.n	8018d5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018d88:	4603      	mov	r3, r0
 8018d8a:	e7e8      	b.n	8018d5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018d8c:	4603      	mov	r3, r0
 8018d8e:	2e0f      	cmp	r6, #15
 8018d90:	d8e7      	bhi.n	8018d62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018d92:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8018d96:	fb17 f806 	smulbb	r8, r7, r6
 8018d9a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018d9e:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018da2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018da6:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8018daa:	ea44 0909 	orr.w	r9, r4, r9
 8018dae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018db2:	f1c6 0410 	rsb	r4, r6, #16
 8018db6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018dba:	1be4      	subs	r4, r4, r7
 8018dbc:	041a      	lsls	r2, r3, #16
 8018dbe:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018dc2:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018dc6:	fb07 fe0e 	mul.w	lr, r7, lr
 8018dca:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018dce:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018dd2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018dd6:	fb04 e409 	mla	r4, r4, r9, lr
 8018dda:	4313      	orrs	r3, r2
 8018ddc:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8018de0:	fb08 4303 	mla	r3, r8, r3, r4
 8018de4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018de8:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8018dec:	4322      	orrs	r2, r4
 8018dee:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8018df2:	fb06 3202 	mla	r2, r6, r2, r3
 8018df6:	0d53      	lsrs	r3, r2, #21
 8018df8:	0952      	lsrs	r2, r2, #5
 8018dfa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018dfe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018e02:	431a      	orrs	r2, r3
 8018e04:	b293      	uxth	r3, r2
 8018e06:	b2af      	uxth	r7, r5
 8018e08:	1202      	asrs	r2, r0, #8
 8018e0a:	43ed      	mvns	r5, r5
 8018e0c:	b2ed      	uxtb	r5, r5
 8018e0e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018e12:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018e16:	fb12 f205 	smulbb	r2, r2, r5
 8018e1a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018e1e:	fb0c 2c07 	mla	ip, ip, r7, r2
 8018e22:	00dc      	lsls	r4, r3, #3
 8018e24:	10da      	asrs	r2, r3, #3
 8018e26:	10c6      	asrs	r6, r0, #3
 8018e28:	00c3      	lsls	r3, r0, #3
 8018e2a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018e2e:	b2db      	uxtb	r3, r3
 8018e30:	fb16 f605 	smulbb	r6, r6, r5
 8018e34:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018e38:	b2e4      	uxtb	r4, r4
 8018e3a:	fb13 f305 	smulbb	r3, r3, r5
 8018e3e:	fa1f fc8c 	uxth.w	ip, ip
 8018e42:	fb02 6207 	mla	r2, r2, r7, r6
 8018e46:	fb04 3307 	mla	r3, r4, r7, r3
 8018e4a:	b296      	uxth	r6, r2
 8018e4c:	b29a      	uxth	r2, r3
 8018e4e:	f10c 0301 	add.w	r3, ip, #1
 8018e52:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018e56:	1c53      	adds	r3, r2, #1
 8018e58:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018e5c:	1c72      	adds	r2, r6, #1
 8018e5e:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8018e62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018e66:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018e6a:	0952      	lsrs	r2, r2, #5
 8018e6c:	ea43 030c 	orr.w	r3, r3, ip
 8018e70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e74:	4313      	orrs	r3, r2
 8018e76:	800b      	strh	r3, [r1, #0]
 8018e78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018e7c:	2f0f      	cmp	r7, #15
 8018e7e:	f63f af70 	bhi.w	8018d62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018e82:	4603      	mov	r3, r0
 8018e84:	4684      	mov	ip, r0
 8018e86:	e784      	b.n	8018d92 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8018e88:	0801fdd3 	.word	0x0801fdd3
 8018e8c:	080203ab 	.word	0x080203ab
 8018e90:	0801fda0 	.word	0x0801fda0

08018e94 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e98:	ed2d 8b08 	vpush	{d8-d11}
 8018e9c:	b093      	sub	sp, #76	; 0x4c
 8018e9e:	461d      	mov	r5, r3
 8018ea0:	9210      	str	r2, [sp, #64]	; 0x40
 8018ea2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018ea4:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8018ea8:	920b      	str	r2, [sp, #44]	; 0x2c
 8018eaa:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8018eae:	910a      	str	r1, [sp, #40]	; 0x28
 8018eb0:	6859      	ldr	r1, [r3, #4]
 8018eb2:	681b      	ldr	r3, [r3, #0]
 8018eb4:	9011      	str	r0, [sp, #68]	; 0x44
 8018eb6:	fb01 2707 	mla	r7, r1, r7, r2
 8018eba:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018ebe:	9307      	str	r3, [sp, #28]
 8018ec0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ec2:	681b      	ldr	r3, [r3, #0]
 8018ec4:	9309      	str	r3, [sp, #36]	; 0x24
 8018ec6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018ec8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8018ecc:	43db      	mvns	r3, r3
 8018ece:	b2db      	uxtb	r3, r3
 8018ed0:	eeb0 aa40 	vmov.f32	s20, s0
 8018ed4:	eef0 9a60 	vmov.f32	s19, s1
 8018ed8:	eeb0 9a41 	vmov.f32	s18, s2
 8018edc:	eeb0 8a62 	vmov.f32	s16, s5
 8018ee0:	eef0 8a43 	vmov.f32	s17, s6
 8018ee4:	eef0 ba44 	vmov.f32	s23, s8
 8018ee8:	eeb0 ba64 	vmov.f32	s22, s9
 8018eec:	eef0 aa45 	vmov.f32	s21, s10
 8018ef0:	9308      	str	r3, [sp, #32]
 8018ef2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018ef4:	2b00      	cmp	r3, #0
 8018ef6:	dc03      	bgt.n	8018f00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018ef8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018efa:	2b00      	cmp	r3, #0
 8018efc:	f340 8203 	ble.w	8019306 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8018f00:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018f02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018f06:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018f0a:	1e48      	subs	r0, r1, #1
 8018f0c:	f102 3cff 	add.w	ip, r2, #4294967295
 8018f10:	2d00      	cmp	r5, #0
 8018f12:	f340 80da 	ble.w	80190ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018f16:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018f1a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018f1e:	d406      	bmi.n	8018f2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018f20:	4586      	cmp	lr, r0
 8018f22:	da04      	bge.n	8018f2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018f24:	2b00      	cmp	r3, #0
 8018f26:	db02      	blt.n	8018f2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018f28:	4563      	cmp	r3, ip
 8018f2a:	f2c0 80cf 	blt.w	80190cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8018f2e:	f11e 0e01 	adds.w	lr, lr, #1
 8018f32:	f100 80c1 	bmi.w	80190b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018f36:	4571      	cmp	r1, lr
 8018f38:	f2c0 80be 	blt.w	80190b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018f3c:	3301      	adds	r3, #1
 8018f3e:	f100 80bb 	bmi.w	80190b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018f42:	429a      	cmp	r2, r3
 8018f44:	f2c0 80b8 	blt.w	80190b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8018f48:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8018f4c:	46a9      	mov	r9, r5
 8018f4e:	f1b9 0f00 	cmp.w	r9, #0
 8018f52:	f340 80d8 	ble.w	8019106 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8018f56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018f58:	1421      	asrs	r1, r4, #16
 8018f5a:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018f5e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018f62:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018f66:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018f6a:	f100 8111 	bmi.w	8019190 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018f6e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018f72:	4551      	cmp	r1, sl
 8018f74:	f280 810c 	bge.w	8019190 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018f78:	2800      	cmp	r0, #0
 8018f7a:	f2c0 8109 	blt.w	8019190 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018f7e:	f103 3aff 	add.w	sl, r3, #4294967295
 8018f82:	4550      	cmp	r0, sl
 8018f84:	f280 8104 	bge.w	8019190 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8018f88:	fa0f f38e 	sxth.w	r3, lr
 8018f8c:	fb00 1103 	mla	r1, r0, r3, r1
 8018f90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018f92:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8018f96:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8018f9a:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8018f9e:	f1bc 0f00 	cmp.w	ip, #0
 8018fa2:	d007      	beq.n	8018fb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8018fa4:	005b      	lsls	r3, r3, #1
 8018fa6:	eb0a 0003 	add.w	r0, sl, r3
 8018faa:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8018fae:	930c      	str	r3, [sp, #48]	; 0x30
 8018fb0:	8843      	ldrh	r3, [r0, #2]
 8018fb2:	930d      	str	r3, [sp, #52]	; 0x34
 8018fb4:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8018fb8:	fb12 f30c 	smulbb	r3, r2, ip
 8018fbc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018fc0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018fc4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018fc8:	10db      	asrs	r3, r3, #3
 8018fca:	ea40 000e 	orr.w	r0, r0, lr
 8018fce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018fd2:	f1cc 0e10 	rsb	lr, ip, #16
 8018fd6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018fda:	ebae 0e02 	sub.w	lr, lr, r2
 8018fde:	ea4a 0101 	orr.w	r1, sl, r1
 8018fe2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018fe6:	4351      	muls	r1, r2
 8018fe8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018fea:	9f08      	ldr	r7, [sp, #32]
 8018fec:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018ff0:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018ff4:	0410      	lsls	r0, r2, #16
 8018ff6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018ffa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018ffe:	4310      	orrs	r0, r2
 8019000:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019002:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019004:	0412      	lsls	r2, r2, #16
 8019006:	fb03 e000 	mla	r0, r3, r0, lr
 801900a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801900e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8019012:	ea42 020e 	orr.w	r2, r2, lr
 8019016:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801901a:	fb03 0302 	mla	r3, r3, r2, r0
 801901e:	0d5a      	lsrs	r2, r3, #21
 8019020:	095b      	lsrs	r3, r3, #5
 8019022:	f8b8 0000 	ldrh.w	r0, [r8]
 8019026:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801902a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801902e:	4313      	orrs	r3, r2
 8019030:	b29b      	uxth	r3, r3
 8019032:	1201      	asrs	r1, r0, #8
 8019034:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8019038:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801903c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019040:	fb11 f107 	smulbb	r1, r1, r7
 8019044:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019048:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801904c:	00c0      	lsls	r0, r0, #3
 801904e:	fb0c 1c02 	mla	ip, ip, r2, r1
 8019052:	b2c0      	uxtb	r0, r0
 8019054:	10d9      	asrs	r1, r3, #3
 8019056:	00db      	lsls	r3, r3, #3
 8019058:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801905c:	b2db      	uxtb	r3, r3
 801905e:	fb10 f007 	smulbb	r0, r0, r7
 8019062:	fa1f fc8c 	uxth.w	ip, ip
 8019066:	fb03 0302 	mla	r3, r3, r2, r0
 801906a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801906e:	fb1e fe07 	smulbb	lr, lr, r7
 8019072:	fb01 e102 	mla	r1, r1, r2, lr
 8019076:	b29a      	uxth	r2, r3
 8019078:	f10c 0301 	add.w	r3, ip, #1
 801907c:	b289      	uxth	r1, r1
 801907e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019082:	1c53      	adds	r3, r2, #1
 8019084:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019088:	1c4a      	adds	r2, r1, #1
 801908a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801908e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019092:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019096:	0949      	lsrs	r1, r1, #5
 8019098:	ea43 030c 	orr.w	r3, r3, ip
 801909c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80190a0:	430b      	orrs	r3, r1
 80190a2:	f8a8 3000 	strh.w	r3, [r8]
 80190a6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80190a8:	441c      	add	r4, r3
 80190aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80190ac:	f108 0802 	add.w	r8, r8, #2
 80190b0:	441e      	add	r6, r3
 80190b2:	f109 39ff 	add.w	r9, r9, #4294967295
 80190b6:	e74a      	b.n	8018f4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 80190b8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80190ba:	441c      	add	r4, r3
 80190bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80190be:	441e      	add	r6, r3
 80190c0:	9b07      	ldr	r3, [sp, #28]
 80190c2:	3302      	adds	r3, #2
 80190c4:	3d01      	subs	r5, #1
 80190c6:	9307      	str	r3, [sp, #28]
 80190c8:	e722      	b.n	8018f10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80190ca:	d022      	beq.n	8019112 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80190cc:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80190ce:	1e6b      	subs	r3, r5, #1
 80190d0:	fb00 4003 	mla	r0, r0, r3, r4
 80190d4:	1400      	asrs	r0, r0, #16
 80190d6:	f53f af37 	bmi.w	8018f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80190da:	3901      	subs	r1, #1
 80190dc:	4288      	cmp	r0, r1
 80190de:	f6bf af33 	bge.w	8018f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80190e2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80190e4:	fb01 6303 	mla	r3, r1, r3, r6
 80190e8:	141b      	asrs	r3, r3, #16
 80190ea:	f53f af2d 	bmi.w	8018f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80190ee:	3a01      	subs	r2, #1
 80190f0:	4293      	cmp	r3, r2
 80190f2:	f6bf af29 	bge.w	8018f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80190f6:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80190fa:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80190fe:	46a8      	mov	r8, r5
 8019100:	f1b8 0f00 	cmp.w	r8, #0
 8019104:	dc5e      	bgt.n	80191c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8019106:	9b07      	ldr	r3, [sp, #28]
 8019108:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801910c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019110:	9307      	str	r3, [sp, #28]
 8019112:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019114:	2b00      	cmp	r3, #0
 8019116:	f340 80f6 	ble.w	8019306 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801911a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801911e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019122:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019126:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019128:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801912c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019130:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019134:	eef0 6a48 	vmov.f32	s13, s16
 8019138:	ee69 7a27 	vmul.f32	s15, s18, s15
 801913c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019140:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019144:	ee16 4a90 	vmov	r4, s13
 8019148:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801914c:	eef0 6a68 	vmov.f32	s13, s17
 8019150:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019154:	ee18 2a10 	vmov	r2, s16
 8019158:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801915c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019160:	ee18 2a90 	vmov	r2, s17
 8019164:	9327      	str	r3, [sp, #156]	; 0x9c
 8019166:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019168:	fb92 f3f3 	sdiv	r3, r2, r3
 801916c:	9328      	str	r3, [sp, #160]	; 0xa0
 801916e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019170:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019172:	3b01      	subs	r3, #1
 8019174:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019178:	930a      	str	r3, [sp, #40]	; 0x28
 801917a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801917c:	ee16 6a90 	vmov	r6, s13
 8019180:	bf14      	ite	ne
 8019182:	461d      	movne	r5, r3
 8019184:	4615      	moveq	r5, r2
 8019186:	eef0 8a67 	vmov.f32	s17, s15
 801918a:	eeb0 8a47 	vmov.f32	s16, s14
 801918e:	e6b0      	b.n	8018ef2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019190:	f111 0a01 	adds.w	sl, r1, #1
 8019194:	d487      	bmi.n	80190a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019196:	45d6      	cmp	lr, sl
 8019198:	db85      	blt.n	80190a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801919a:	f110 0a01 	adds.w	sl, r0, #1
 801919e:	d482      	bmi.n	80190a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80191a0:	4553      	cmp	r3, sl
 80191a2:	db80      	blt.n	80190a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80191a4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80191a6:	9101      	str	r1, [sp, #4]
 80191a8:	b21b      	sxth	r3, r3
 80191aa:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80191ae:	9300      	str	r3, [sp, #0]
 80191b0:	e9cd c704 	strd	ip, r7, [sp, #16]
 80191b4:	fa0f f38e 	sxth.w	r3, lr
 80191b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80191ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 80191bc:	4641      	mov	r1, r8
 80191be:	f7ff fd95 	bl	8018cec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80191c2:	e770      	b.n	80190a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80191c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80191c6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80191c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80191cc:	1430      	asrs	r0, r6, #16
 80191ce:	1423      	asrs	r3, r4, #16
 80191d0:	fb01 3000 	mla	r0, r1, r0, r3
 80191d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191d6:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80191da:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80191de:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80191e2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80191e6:	8858      	ldrh	r0, [r3, #2]
 80191e8:	f1be 0f00 	cmp.w	lr, #0
 80191ec:	d00b      	beq.n	8019206 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80191ee:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80191f2:	3901      	subs	r1, #1
 80191f4:	0049      	lsls	r1, r1, #1
 80191f6:	3102      	adds	r1, #2
 80191f8:	eb03 0b01 	add.w	fp, r3, r1
 80191fc:	5a5b      	ldrh	r3, [r3, r1]
 80191fe:	930e      	str	r3, [sp, #56]	; 0x38
 8019200:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019204:	930f      	str	r3, [sp, #60]	; 0x3c
 8019206:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801920a:	fb12 f30e 	smulbb	r3, r2, lr
 801920e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019212:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019216:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801921a:	10db      	asrs	r3, r3, #3
 801921c:	ea41 010c 	orr.w	r1, r1, ip
 8019220:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019224:	f1ce 0c10 	rsb	ip, lr, #16
 8019228:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801922c:	ebac 0c02 	sub.w	ip, ip, r2
 8019230:	ea4b 0000 	orr.w	r0, fp, r0
 8019234:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019238:	4350      	muls	r0, r2
 801923a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801923c:	9f08      	ldr	r7, [sp, #32]
 801923e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019242:	fb0c 0c01 	mla	ip, ip, r1, r0
 8019246:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801924a:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801924e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019250:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019252:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019256:	0412      	lsls	r2, r2, #16
 8019258:	ea4b 0101 	orr.w	r1, fp, r1
 801925c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019260:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019264:	fb03 c101 	mla	r1, r3, r1, ip
 8019268:	4302      	orrs	r2, r0
 801926a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801926e:	fb03 1202 	mla	r2, r3, r2, r1
 8019272:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8019276:	0952      	lsrs	r2, r2, #5
 8019278:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801927c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019280:	f8b9 2000 	ldrh.w	r2, [r9]
 8019284:	ea4b 0303 	orr.w	r3, fp, r3
 8019288:	b29b      	uxth	r3, r3
 801928a:	1211      	asrs	r1, r2, #8
 801928c:	1218      	asrs	r0, r3, #8
 801928e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019292:	fb11 f107 	smulbb	r1, r1, r7
 8019296:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801929a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801929e:	00d2      	lsls	r2, r2, #3
 80192a0:	fb00 100a 	mla	r0, r0, sl, r1
 80192a4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80192a8:	10d9      	asrs	r1, r3, #3
 80192aa:	b2d2      	uxtb	r2, r2
 80192ac:	00db      	lsls	r3, r3, #3
 80192ae:	fb1c fc07 	smulbb	ip, ip, r7
 80192b2:	fb12 f207 	smulbb	r2, r2, r7
 80192b6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80192ba:	b2db      	uxtb	r3, r3
 80192bc:	b280      	uxth	r0, r0
 80192be:	fb01 c10a 	mla	r1, r1, sl, ip
 80192c2:	fb03 230a 	mla	r3, r3, sl, r2
 80192c6:	b29b      	uxth	r3, r3
 80192c8:	b289      	uxth	r1, r1
 80192ca:	1c42      	adds	r2, r0, #1
 80192cc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80192d0:	f101 0c01 	add.w	ip, r1, #1
 80192d4:	1c5a      	adds	r2, r3, #1
 80192d6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80192da:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80192de:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80192e0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80192e4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80192e8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80192ec:	4310      	orrs	r0, r2
 80192ee:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80192f2:	441c      	add	r4, r3
 80192f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80192f6:	ea40 000c 	orr.w	r0, r0, ip
 80192fa:	f829 0b02 	strh.w	r0, [r9], #2
 80192fe:	441e      	add	r6, r3
 8019300:	f108 38ff 	add.w	r8, r8, #4294967295
 8019304:	e6fc      	b.n	8019100 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8019306:	b013      	add	sp, #76	; 0x4c
 8019308:	ecbd 8b08 	vpop	{d8-d11}
 801930c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019310 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8019310:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019314:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8019318:	fb06 5c03 	mla	ip, r6, r3, r5
 801931c:	2e00      	cmp	r6, #0
 801931e:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8019322:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8019326:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801932a:	8808      	ldrh	r0, [r1, #0]
 801932c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8019330:	db2e      	blt.n	8019390 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019332:	45b0      	cmp	r8, r6
 8019334:	dd2c      	ble.n	8019390 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019336:	2d00      	cmp	r5, #0
 8019338:	db28      	blt.n	801938c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801933a:	42ab      	cmp	r3, r5
 801933c:	dd26      	ble.n	801938c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801933e:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8019342:	1c6a      	adds	r2, r5, #1
 8019344:	d427      	bmi.n	8019396 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8019346:	4293      	cmp	r3, r2
 8019348:	dd25      	ble.n	8019396 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801934a:	b324      	cbz	r4, 8019396 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801934c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8019350:	3601      	adds	r6, #1
 8019352:	d424      	bmi.n	801939e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8019354:	45b0      	cmp	r8, r6
 8019356:	dd22      	ble.n	801939e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8019358:	b31f      	cbz	r7, 80193a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801935a:	2d00      	cmp	r5, #0
 801935c:	db1d      	blt.n	801939a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801935e:	42ab      	cmp	r3, r5
 8019360:	dd1b      	ble.n	801939a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8019362:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8019366:	3501      	adds	r5, #1
 8019368:	d405      	bmi.n	8019376 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801936a:	42ab      	cmp	r3, r5
 801936c:	dd03      	ble.n	8019376 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801936e:	b124      	cbz	r4, 801937a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8019370:	3301      	adds	r3, #1
 8019372:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8019376:	2c0f      	cmp	r4, #15
 8019378:	d801      	bhi.n	801937e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801937a:	2f0f      	cmp	r7, #15
 801937c:	d914      	bls.n	80193a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801937e:	4b27      	ldr	r3, [pc, #156]	; (801941c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8019380:	4a27      	ldr	r2, [pc, #156]	; (8019420 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8019382:	4828      	ldr	r0, [pc, #160]	; (8019424 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8019384:	f240 11db 	movw	r1, #475	; 0x1db
 8019388:	f002 fcb4 	bl	801bcf4 <__assert_func>
 801938c:	4684      	mov	ip, r0
 801938e:	e7d8      	b.n	8019342 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8019390:	4602      	mov	r2, r0
 8019392:	4684      	mov	ip, r0
 8019394:	e7dc      	b.n	8019350 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8019396:	4602      	mov	r2, r0
 8019398:	e7da      	b.n	8019350 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801939a:	4606      	mov	r6, r0
 801939c:	e7e3      	b.n	8019366 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801939e:	4606      	mov	r6, r0
 80193a0:	e7e9      	b.n	8019376 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80193a2:	2c0f      	cmp	r4, #15
 80193a4:	d8eb      	bhi.n	801937e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80193a6:	4606      	mov	r6, r0
 80193a8:	ea4f 450c 	mov.w	r5, ip, lsl #16
 80193ac:	fb14 f307 	smulbb	r3, r4, r7
 80193b0:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80193b4:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80193b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80193bc:	10db      	asrs	r3, r3, #3
 80193be:	ea45 0c0c 	orr.w	ip, r5, ip
 80193c2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80193c6:	f1c7 0510 	rsb	r5, r7, #16
 80193ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80193ce:	1b2d      	subs	r5, r5, r4
 80193d0:	ea4e 0202 	orr.w	r2, lr, r2
 80193d4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80193d8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80193dc:	4354      	muls	r4, r2
 80193de:	fb05 450c 	mla	r5, r5, ip, r4
 80193e2:	0404      	lsls	r4, r0, #16
 80193e4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80193e8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80193ec:	4320      	orrs	r0, r4
 80193ee:	fb03 5400 	mla	r4, r3, r0, r5
 80193f2:	0430      	lsls	r0, r6, #16
 80193f4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80193f8:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80193fc:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8019400:	4330      	orrs	r0, r6
 8019402:	fb07 4000 	mla	r0, r7, r0, r4
 8019406:	0d43      	lsrs	r3, r0, #21
 8019408:	0940      	lsrs	r0, r0, #5
 801940a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801940e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019412:	4318      	orrs	r0, r3
 8019414:	8008      	strh	r0, [r1, #0]
 8019416:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801941a:	bf00      	nop
 801941c:	0801fdd3 	.word	0x0801fdd3
 8019420:	080203ab 	.word	0x080203ab
 8019424:	0801fda0 	.word	0x0801fda0

08019428 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801942c:	ed2d 8b08 	vpush	{d8-d11}
 8019430:	b08f      	sub	sp, #60	; 0x3c
 8019432:	461d      	mov	r5, r3
 8019434:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019436:	920c      	str	r2, [sp, #48]	; 0x30
 8019438:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 801943c:	9107      	str	r1, [sp, #28]
 801943e:	6859      	ldr	r1, [r3, #4]
 8019440:	681b      	ldr	r3, [r3, #0]
 8019442:	900d      	str	r0, [sp, #52]	; 0x34
 8019444:	fb01 2707 	mla	r7, r1, r7, r2
 8019448:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801944c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801944e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8019452:	f8d3 8000 	ldr.w	r8, [r3]
 8019456:	eeb0 aa40 	vmov.f32	s20, s0
 801945a:	eef0 9a60 	vmov.f32	s19, s1
 801945e:	eeb0 9a41 	vmov.f32	s18, s2
 8019462:	eeb0 8a62 	vmov.f32	s16, s5
 8019466:	eef0 8a43 	vmov.f32	s17, s6
 801946a:	eef0 ba44 	vmov.f32	s23, s8
 801946e:	eeb0 ba64 	vmov.f32	s22, s9
 8019472:	eef0 aa45 	vmov.f32	s21, s10
 8019476:	9b07      	ldr	r3, [sp, #28]
 8019478:	2b00      	cmp	r3, #0
 801947a:	dc03      	bgt.n	8019484 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801947c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801947e:	2b00      	cmp	r3, #0
 8019480:	f340 8181 	ble.w	8019786 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019484:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019486:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801948a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801948e:	1e48      	subs	r0, r1, #1
 8019490:	f102 3cff 	add.w	ip, r2, #4294967295
 8019494:	2d00      	cmp	r5, #0
 8019496:	f340 809b 	ble.w	80195d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801949a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801949e:	ea4f 4326 	mov.w	r3, r6, asr #16
 80194a2:	d406      	bmi.n	80194b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80194a4:	4586      	cmp	lr, r0
 80194a6:	da04      	bge.n	80194b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80194a8:	2b00      	cmp	r3, #0
 80194aa:	db02      	blt.n	80194b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80194ac:	4563      	cmp	r3, ip
 80194ae:	f2c0 8090 	blt.w	80195d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80194b2:	f11e 0e01 	adds.w	lr, lr, #1
 80194b6:	f100 8084 	bmi.w	80195c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80194ba:	4571      	cmp	r1, lr
 80194bc:	f2c0 8081 	blt.w	80195c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80194c0:	3301      	adds	r3, #1
 80194c2:	d47e      	bmi.n	80195c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80194c4:	429a      	cmp	r2, r3
 80194c6:	db7c      	blt.n	80195c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80194c8:	46aa      	mov	sl, r5
 80194ca:	46b9      	mov	r9, r7
 80194cc:	f1ba 0f00 	cmp.w	sl, #0
 80194d0:	f340 8099 	ble.w	8019606 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80194d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80194d6:	1421      	asrs	r1, r4, #16
 80194d8:	ea4f 4026 	mov.w	r0, r6, asr #16
 80194dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80194e0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80194e4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80194e8:	f100 80d0 	bmi.w	801968c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80194ec:	f10e 3bff 	add.w	fp, lr, #4294967295
 80194f0:	4559      	cmp	r1, fp
 80194f2:	f280 80cb 	bge.w	801968c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80194f6:	2800      	cmp	r0, #0
 80194f8:	f2c0 80c8 	blt.w	801968c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80194fc:	f103 3bff 	add.w	fp, r3, #4294967295
 8019500:	4558      	cmp	r0, fp
 8019502:	f280 80c3 	bge.w	801968c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019506:	fa0f fe8e 	sxth.w	lr, lr
 801950a:	fb00 110e 	mla	r1, r0, lr, r1
 801950e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8019512:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8019516:	8841      	ldrh	r1, [r0, #2]
 8019518:	f1bc 0f00 	cmp.w	ip, #0
 801951c:	d00b      	beq.n	8019536 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801951e:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8019522:	3b01      	subs	r3, #1
 8019524:	005b      	lsls	r3, r3, #1
 8019526:	3302      	adds	r3, #2
 8019528:	eb00 0e03 	add.w	lr, r0, r3
 801952c:	5ac3      	ldrh	r3, [r0, r3]
 801952e:	9308      	str	r3, [sp, #32]
 8019530:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8019534:	9309      	str	r3, [sp, #36]	; 0x24
 8019536:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801953a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801953e:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019542:	ea40 000b 	orr.w	r0, r0, fp
 8019546:	fb12 f30c 	smulbb	r3, r2, ip
 801954a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801954e:	10db      	asrs	r3, r3, #3
 8019550:	f1cc 0e10 	rsb	lr, ip, #16
 8019554:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019558:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801955c:	ebae 0e02 	sub.w	lr, lr, r2
 8019560:	ea4b 0101 	orr.w	r1, fp, r1
 8019564:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019568:	4351      	muls	r1, r2
 801956a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801956c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8019570:	fb0e 1e00 	mla	lr, lr, r0, r1
 8019574:	0410      	lsls	r0, r2, #16
 8019576:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801957a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801957e:	4310      	orrs	r0, r2
 8019580:	9a08      	ldr	r2, [sp, #32]
 8019582:	9908      	ldr	r1, [sp, #32]
 8019584:	0412      	lsls	r2, r2, #16
 8019586:	fb03 e000 	mla	r0, r3, r0, lr
 801958a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801958e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8019592:	ea42 020e 	orr.w	r2, r2, lr
 8019596:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801959a:	fb03 0302 	mla	r3, r3, r2, r0
 801959e:	0d5a      	lsrs	r2, r3, #21
 80195a0:	095b      	lsrs	r3, r3, #5
 80195a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80195a6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80195aa:	4313      	orrs	r3, r2
 80195ac:	f8a9 3000 	strh.w	r3, [r9]
 80195b0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80195b2:	441c      	add	r4, r3
 80195b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80195b6:	f109 0902 	add.w	r9, r9, #2
 80195ba:	441e      	add	r6, r3
 80195bc:	f10a 3aff 	add.w	sl, sl, #4294967295
 80195c0:	e784      	b.n	80194cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80195c2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80195c4:	441c      	add	r4, r3
 80195c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80195c8:	3d01      	subs	r5, #1
 80195ca:	441e      	add	r6, r3
 80195cc:	3702      	adds	r7, #2
 80195ce:	e761      	b.n	8019494 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80195d0:	d01d      	beq.n	801960e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80195d2:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80195d4:	1e6b      	subs	r3, r5, #1
 80195d6:	fb00 4003 	mla	r0, r0, r3, r4
 80195da:	1400      	asrs	r0, r0, #16
 80195dc:	f53f af74 	bmi.w	80194c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80195e0:	3901      	subs	r1, #1
 80195e2:	4288      	cmp	r0, r1
 80195e4:	f6bf af70 	bge.w	80194c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80195e8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80195ea:	fb01 6303 	mla	r3, r1, r3, r6
 80195ee:	141b      	asrs	r3, r3, #16
 80195f0:	f53f af6a 	bmi.w	80194c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80195f4:	3a01      	subs	r2, #1
 80195f6:	4293      	cmp	r3, r2
 80195f8:	f6bf af66 	bge.w	80194c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80195fc:	46a9      	mov	r9, r5
 80195fe:	46ba      	mov	sl, r7
 8019600:	f1b9 0f00 	cmp.w	r9, #0
 8019604:	dc5a      	bgt.n	80196bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019606:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801960a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801960e:	9b07      	ldr	r3, [sp, #28]
 8019610:	2b00      	cmp	r3, #0
 8019612:	f340 80b8 	ble.w	8019786 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019616:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801961a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801961e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019622:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019624:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019628:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801962c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019630:	eef0 6a48 	vmov.f32	s13, s16
 8019634:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019638:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801963c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019640:	ee16 4a90 	vmov	r4, s13
 8019644:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019648:	eef0 6a68 	vmov.f32	s13, s17
 801964c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019650:	ee18 2a10 	vmov	r2, s16
 8019654:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019658:	fb92 f3f3 	sdiv	r3, r2, r3
 801965c:	ee18 2a90 	vmov	r2, s17
 8019660:	9323      	str	r3, [sp, #140]	; 0x8c
 8019662:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019664:	fb92 f3f3 	sdiv	r3, r2, r3
 8019668:	9324      	str	r3, [sp, #144]	; 0x90
 801966a:	9b07      	ldr	r3, [sp, #28]
 801966c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801966e:	3b01      	subs	r3, #1
 8019670:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019674:	9307      	str	r3, [sp, #28]
 8019676:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019678:	ee16 6a90 	vmov	r6, s13
 801967c:	bf14      	ite	ne
 801967e:	461d      	movne	r5, r3
 8019680:	4615      	moveq	r5, r2
 8019682:	eef0 8a67 	vmov.f32	s17, s15
 8019686:	eeb0 8a47 	vmov.f32	s16, s14
 801968a:	e6f4      	b.n	8019476 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801968c:	f111 0b01 	adds.w	fp, r1, #1
 8019690:	d48e      	bmi.n	80195b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019692:	45de      	cmp	lr, fp
 8019694:	db8c      	blt.n	80195b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8019696:	f110 0b01 	adds.w	fp, r0, #1
 801969a:	d489      	bmi.n	80195b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801969c:	455b      	cmp	r3, fp
 801969e:	db87      	blt.n	80195b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80196a0:	b21b      	sxth	r3, r3
 80196a2:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80196a6:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80196aa:	9300      	str	r3, [sp, #0]
 80196ac:	4642      	mov	r2, r8
 80196ae:	fa0f f38e 	sxth.w	r3, lr
 80196b2:	4649      	mov	r1, r9
 80196b4:	980d      	ldr	r0, [sp, #52]	; 0x34
 80196b6:	f7ff fe2b 	bl	8019310 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80196ba:	e779      	b.n	80195b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80196bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80196be:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80196c2:	1420      	asrs	r0, r4, #16
 80196c4:	1431      	asrs	r1, r6, #16
 80196c6:	fb03 0101 	mla	r1, r3, r1, r0
 80196ca:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80196ce:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80196d2:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80196d6:	8841      	ldrh	r1, [r0, #2]
 80196d8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80196dc:	f1be 0f00 	cmp.w	lr, #0
 80196e0:	d00b      	beq.n	80196fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 80196e2:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80196e6:	3b01      	subs	r3, #1
 80196e8:	005b      	lsls	r3, r3, #1
 80196ea:	3302      	adds	r3, #2
 80196ec:	eb00 0b03 	add.w	fp, r0, r3
 80196f0:	5ac3      	ldrh	r3, [r0, r3]
 80196f2:	930a      	str	r3, [sp, #40]	; 0x28
 80196f4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80196f8:	930b      	str	r3, [sp, #44]	; 0x2c
 80196fa:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80196fe:	fb12 f30e 	smulbb	r3, r2, lr
 8019702:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019706:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801970a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801970e:	10db      	asrs	r3, r3, #3
 8019710:	ea40 000c 	orr.w	r0, r0, ip
 8019714:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019718:	f1ce 0c10 	rsb	ip, lr, #16
 801971c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019720:	ebac 0c02 	sub.w	ip, ip, r2
 8019724:	ea4b 0101 	orr.w	r1, fp, r1
 8019728:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801972c:	4351      	muls	r1, r2
 801972e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019730:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019734:	fb0c 1c00 	mla	ip, ip, r0, r1
 8019738:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801973c:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8019740:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019742:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019744:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019748:	0412      	lsls	r2, r2, #16
 801974a:	ea4b 0000 	orr.w	r0, fp, r0
 801974e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019752:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8019756:	fb03 c000 	mla	r0, r3, r0, ip
 801975a:	ea42 0b0b 	orr.w	fp, r2, fp
 801975e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8019762:	fb03 000b 	mla	r0, r3, fp, r0
 8019766:	0d43      	lsrs	r3, r0, #21
 8019768:	0940      	lsrs	r0, r0, #5
 801976a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801976e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019772:	4318      	orrs	r0, r3
 8019774:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019776:	f82a 0b02 	strh.w	r0, [sl], #2
 801977a:	441c      	add	r4, r3
 801977c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801977e:	f109 39ff 	add.w	r9, r9, #4294967295
 8019782:	441e      	add	r6, r3
 8019784:	e73c      	b.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8019786:	b00f      	add	sp, #60	; 0x3c
 8019788:	ecbd 8b08 	vpop	{d8-d11}
 801978c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019790 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8019790:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019794:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 8019798:	fb04 5603 	mla	r6, r4, r3, r5
 801979c:	2c00      	cmp	r4, #0
 801979e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80197a2:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 80197a6:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 80197aa:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 80197ae:	db36      	blt.n	801981e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 80197b0:	45a6      	cmp	lr, r4
 80197b2:	dd34      	ble.n	801981e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 80197b4:	2d00      	cmp	r5, #0
 80197b6:	db30      	blt.n	801981a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 80197b8:	42ab      	cmp	r3, r5
 80197ba:	dd2e      	ble.n	801981a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 80197bc:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 80197c0:	1c6e      	adds	r6, r5, #1
 80197c2:	d42f      	bmi.n	8019824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 80197c4:	42b3      	cmp	r3, r6
 80197c6:	dd2d      	ble.n	8019824 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 80197c8:	b370      	cbz	r0, 8019828 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80197ca:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80197ce:	3401      	adds	r4, #1
 80197d0:	d42e      	bmi.n	8019830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 80197d2:	45a6      	cmp	lr, r4
 80197d4:	dd2c      	ble.n	8019830 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 80197d6:	b377      	cbz	r7, 8019836 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 80197d8:	2d00      	cmp	r5, #0
 80197da:	db27      	blt.n	801982c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 80197dc:	42ab      	cmp	r3, r5
 80197de:	dd25      	ble.n	801982c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 80197e0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80197e4:	3501      	adds	r5, #1
 80197e6:	d429      	bmi.n	801983c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80197e8:	42ab      	cmp	r3, r5
 80197ea:	dd27      	ble.n	801983c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 80197ec:	b340      	cbz	r0, 8019840 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 80197ee:	3301      	adds	r3, #1
 80197f0:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 80197f4:	280f      	cmp	r0, #15
 80197f6:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80197fa:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80197fe:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019802:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8019806:	d801      	bhi.n	801980c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 8019808:	2f0f      	cmp	r7, #15
 801980a:	d91b      	bls.n	8019844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801980c:	4b8d      	ldr	r3, [pc, #564]	; (8019a44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801980e:	4a8e      	ldr	r2, [pc, #568]	; (8019a48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 8019810:	488e      	ldr	r0, [pc, #568]	; (8019a4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8019812:	f240 11f9 	movw	r1, #505	; 0x1f9
 8019816:	f002 fa6d 	bl	801bcf4 <__assert_func>
 801981a:	2200      	movs	r2, #0
 801981c:	e7d0      	b.n	80197c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 801981e:	2600      	movs	r6, #0
 8019820:	4632      	mov	r2, r6
 8019822:	e7d4      	b.n	80197ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8019824:	2600      	movs	r6, #0
 8019826:	e7d2      	b.n	80197ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 8019828:	4606      	mov	r6, r0
 801982a:	e7d0      	b.n	80197ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 801982c:	2400      	movs	r4, #0
 801982e:	e7d9      	b.n	80197e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 8019830:	2300      	movs	r3, #0
 8019832:	461c      	mov	r4, r3
 8019834:	e7de      	b.n	80197f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8019836:	463b      	mov	r3, r7
 8019838:	463c      	mov	r4, r7
 801983a:	e7db      	b.n	80197f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 801983c:	2300      	movs	r3, #0
 801983e:	e7d9      	b.n	80197f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8019840:	4603      	mov	r3, r0
 8019842:	e7d7      	b.n	80197f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 8019844:	b280      	uxth	r0, r0
 8019846:	b2bf      	uxth	r7, r7
 8019848:	fb07 fe00 	mul.w	lr, r7, r0
 801984c:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019850:	0100      	lsls	r0, r0, #4
 8019852:	eba0 0c0e 	sub.w	ip, r0, lr
 8019856:	b2bf      	uxth	r7, r7
 8019858:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801985c:	fa1f fc8c 	uxth.w	ip, ip
 8019860:	1bed      	subs	r5, r5, r7
 8019862:	b2ad      	uxth	r5, r5
 8019864:	fb0a f00c 	mul.w	r0, sl, ip
 8019868:	fb0b 0005 	mla	r0, fp, r5, r0
 801986c:	fb07 0009 	mla	r0, r7, r9, r0
 8019870:	fb0e 0008 	mla	r0, lr, r8, r0
 8019874:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019878:	9001      	str	r0, [sp, #4]
 801987a:	2800      	cmp	r0, #0
 801987c:	f000 80de 	beq.w	8019a3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 8019880:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019884:	d018      	beq.n	80198b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 8019886:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801988a:	fb0b f000 	mul.w	r0, fp, r0
 801988e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019892:	fb0b fb02 	mul.w	fp, fp, r2
 8019896:	0a02      	lsrs	r2, r0, #8
 8019898:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801989c:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80198a0:	4402      	add	r2, r0
 80198a2:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80198a6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80198aa:	0a12      	lsrs	r2, r2, #8
 80198ac:	0a00      	lsrs	r0, r0, #8
 80198ae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80198b2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80198b6:	4302      	orrs	r2, r0
 80198b8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80198bc:	d01a      	beq.n	80198f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 80198be:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 80198c2:	fb0a f000 	mul.w	r0, sl, r0
 80198c6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80198ca:	fb0a fa06 	mul.w	sl, sl, r6
 80198ce:	0a06      	lsrs	r6, r0, #8
 80198d0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80198d4:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80198d8:	4406      	add	r6, r0
 80198da:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80198de:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80198e2:	0a36      	lsrs	r6, r6, #8
 80198e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80198e8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80198ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80198f0:	ea46 060a 	orr.w	r6, r6, sl
 80198f4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80198f8:	d01b      	beq.n	8019932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 80198fa:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80198fe:	fb09 fa0a 	mul.w	sl, r9, sl
 8019902:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019906:	fb09 f004 	mul.w	r0, r9, r4
 801990a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801990e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019912:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019916:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801991a:	4454      	add	r4, sl
 801991c:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8019920:	0a24      	lsrs	r4, r4, #8
 8019922:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019926:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801992a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801992e:	ea44 0409 	orr.w	r4, r4, r9
 8019932:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019936:	d01b      	beq.n	8019970 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 8019938:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801993c:	fb08 f909 	mul.w	r9, r8, r9
 8019940:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019944:	fb08 f003 	mul.w	r0, r8, r3
 8019948:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801994c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019950:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8019954:	f500 7880 	add.w	r8, r0, #256	; 0x100
 8019958:	444b      	add	r3, r9
 801995a:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801995e:	0a1b      	lsrs	r3, r3, #8
 8019960:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019964:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019968:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801996c:	ea43 0308 	orr.w	r3, r3, r8
 8019970:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8019974:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019978:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801997c:	fb0c f808 	mul.w	r8, ip, r8
 8019980:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019984:	fb0c f606 	mul.w	r6, ip, r6
 8019988:	fb05 8909 	mla	r9, r5, r9, r8
 801998c:	fb05 6502 	mla	r5, r5, r2, r6
 8019990:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8019994:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8019998:	9a01      	ldr	r2, [sp, #4]
 801999a:	8808      	ldrh	r0, [r1, #0]
 801999c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80199a0:	fb07 9908 	mla	r9, r7, r8, r9
 80199a4:	fb07 5704 	mla	r7, r7, r4, r5
 80199a8:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80199ac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80199b0:	b2b6      	uxth	r6, r6
 80199b2:	fb0e 9808 	mla	r8, lr, r8, r9
 80199b6:	fb0e 7e03 	mla	lr, lr, r3, r7
 80199ba:	4372      	muls	r2, r6
 80199bc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80199c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80199c4:	1c53      	adds	r3, r2, #1
 80199c6:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 80199ca:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80199ce:	ea48 0e0e 	orr.w	lr, r8, lr
 80199d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80199d6:	1205      	asrs	r5, r0, #8
 80199d8:	ea4f 421e 	mov.w	r2, lr, lsr #16
 80199dc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80199e0:	b2db      	uxtb	r3, r3
 80199e2:	fb12 f206 	smulbb	r2, r2, r6
 80199e6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80199ea:	fb05 2503 	mla	r5, r5, r3, r2
 80199ee:	f3ce 2407 	ubfx	r4, lr, #8, #8
 80199f2:	10c2      	asrs	r2, r0, #3
 80199f4:	fa5f fe8e 	uxtb.w	lr, lr
 80199f8:	00c0      	lsls	r0, r0, #3
 80199fa:	fb14 f406 	smulbb	r4, r4, r6
 80199fe:	b2c0      	uxtb	r0, r0
 8019a00:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019a04:	fb1e fe06 	smulbb	lr, lr, r6
 8019a08:	fb02 4203 	mla	r2, r2, r3, r4
 8019a0c:	b2ad      	uxth	r5, r5
 8019a0e:	fb00 e303 	mla	r3, r0, r3, lr
 8019a12:	b298      	uxth	r0, r3
 8019a14:	b294      	uxth	r4, r2
 8019a16:	1c6b      	adds	r3, r5, #1
 8019a18:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019a1c:	1c62      	adds	r2, r4, #1
 8019a1e:	1c43      	adds	r3, r0, #1
 8019a20:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019a24:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019a28:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019a2c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019a30:	0952      	lsrs	r2, r2, #5
 8019a32:	432b      	orrs	r3, r5
 8019a34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019a38:	4313      	orrs	r3, r2
 8019a3a:	800b      	strh	r3, [r1, #0]
 8019a3c:	b003      	add	sp, #12
 8019a3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a42:	bf00      	nop
 8019a44:	0801fdd3 	.word	0x0801fdd3
 8019a48:	08020302 	.word	0x08020302
 8019a4c:	0801fda0 	.word	0x0801fda0

08019a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a54:	ed2d 8b08 	vpush	{d8-d11}
 8019a58:	b09d      	sub	sp, #116	; 0x74
 8019a5a:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 8019a5e:	9219      	str	r2, [sp, #100]	; 0x64
 8019a60:	9307      	str	r3, [sp, #28]
 8019a62:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8019a64:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8019a68:	931a      	str	r3, [sp, #104]	; 0x68
 8019a6a:	9117      	str	r1, [sp, #92]	; 0x5c
 8019a6c:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8019a70:	901b      	str	r0, [sp, #108]	; 0x6c
 8019a72:	6850      	ldr	r0, [r2, #4]
 8019a74:	6812      	ldr	r2, [r2, #0]
 8019a76:	fb00 1303 	mla	r3, r0, r3, r1
 8019a7a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019a7e:	930a      	str	r3, [sp, #40]	; 0x28
 8019a80:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019a82:	681b      	ldr	r3, [r3, #0]
 8019a84:	9310      	str	r3, [sp, #64]	; 0x40
 8019a86:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8019a8a:	930b      	str	r3, [sp, #44]	; 0x2c
 8019a8c:	eeb0 aa40 	vmov.f32	s20, s0
 8019a90:	eef0 9a60 	vmov.f32	s19, s1
 8019a94:	eeb0 9a41 	vmov.f32	s18, s2
 8019a98:	eeb0 8a62 	vmov.f32	s16, s5
 8019a9c:	eef0 8a43 	vmov.f32	s17, s6
 8019aa0:	eef0 ba44 	vmov.f32	s23, s8
 8019aa4:	eeb0 ba64 	vmov.f32	s22, s9
 8019aa8:	eef0 aa45 	vmov.f32	s21, s10
 8019aac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019aae:	2b00      	cmp	r3, #0
 8019ab0:	dc03      	bgt.n	8019aba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019ab2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019ab4:	2b00      	cmp	r3, #0
 8019ab6:	f340 8375 	ble.w	801a1a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8019aba:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019abc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019ac0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019ac4:	1e48      	subs	r0, r1, #1
 8019ac6:	1e57      	subs	r7, r2, #1
 8019ac8:	9b07      	ldr	r3, [sp, #28]
 8019aca:	2b00      	cmp	r3, #0
 8019acc:	f340 818e 	ble.w	8019dec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8019ad0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019ad4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019ad8:	d406      	bmi.n	8019ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019ada:	4584      	cmp	ip, r0
 8019adc:	da04      	bge.n	8019ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019ade:	2b00      	cmp	r3, #0
 8019ae0:	db02      	blt.n	8019ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019ae2:	42bb      	cmp	r3, r7
 8019ae4:	f2c0 8183 	blt.w	8019dee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8019ae8:	f11c 0c01 	adds.w	ip, ip, #1
 8019aec:	f100 8173 	bmi.w	8019dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019af0:	4561      	cmp	r1, ip
 8019af2:	f2c0 8170 	blt.w	8019dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019af6:	3301      	adds	r3, #1
 8019af8:	f100 816d 	bmi.w	8019dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019afc:	429a      	cmp	r2, r3
 8019afe:	f2c0 816a 	blt.w	8019dd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8019b02:	9b07      	ldr	r3, [sp, #28]
 8019b04:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019b06:	9318      	str	r3, [sp, #96]	; 0x60
 8019b08:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019b0a:	2b00      	cmp	r3, #0
 8019b0c:	f340 818c 	ble.w	8019e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8019b10:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8019b12:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019b14:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019b18:	689b      	ldr	r3, [r3, #8]
 8019b1a:	1422      	asrs	r2, r4, #16
 8019b1c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019b20:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019b24:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019b28:	f100 81cd 	bmi.w	8019ec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019b2c:	f103 38ff 	add.w	r8, r3, #4294967295
 8019b30:	4542      	cmp	r2, r8
 8019b32:	f280 81c8 	bge.w	8019ec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019b36:	f1bc 0f00 	cmp.w	ip, #0
 8019b3a:	f2c0 81c4 	blt.w	8019ec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019b3e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8019b42:	45c4      	cmp	ip, r8
 8019b44:	f280 81bf 	bge.w	8019ec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8019b48:	b21b      	sxth	r3, r3
 8019b4a:	fb0c 2203 	mla	r2, ip, r3, r2
 8019b4e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019b50:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019b54:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8019b58:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019b5c:	2800      	cmp	r0, #0
 8019b5e:	f000 81a9 	beq.w	8019eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8019b62:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019b66:	950c      	str	r5, [sp, #48]	; 0x30
 8019b68:	0e2d      	lsrs	r5, r5, #24
 8019b6a:	9513      	str	r5, [sp, #76]	; 0x4c
 8019b6c:	b181      	cbz	r1, 8019b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019b6e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019b72:	3b01      	subs	r3, #1
 8019b74:	009b      	lsls	r3, r3, #2
 8019b76:	3304      	adds	r3, #4
 8019b78:	eb08 0c03 	add.w	ip, r8, r3
 8019b7c:	f858 3003 	ldr.w	r3, [r8, r3]
 8019b80:	9308      	str	r3, [sp, #32]
 8019b82:	0e1b      	lsrs	r3, r3, #24
 8019b84:	9311      	str	r3, [sp, #68]	; 0x44
 8019b86:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019b8a:	930d      	str	r3, [sp, #52]	; 0x34
 8019b8c:	0e1b      	lsrs	r3, r3, #24
 8019b8e:	9314      	str	r3, [sp, #80]	; 0x50
 8019b90:	b280      	uxth	r0, r0
 8019b92:	b289      	uxth	r1, r1
 8019b94:	fb00 f901 	mul.w	r9, r0, r1
 8019b98:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019b9c:	0100      	lsls	r0, r0, #4
 8019b9e:	eba0 0809 	sub.w	r8, r0, r9
 8019ba2:	b289      	uxth	r1, r1
 8019ba4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019ba8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019baa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019bac:	fa1f f888 	uxth.w	r8, r8
 8019bb0:	1a5b      	subs	r3, r3, r1
 8019bb2:	b29b      	uxth	r3, r3
 8019bb4:	fb08 f000 	mul.w	r0, r8, r0
 8019bb8:	fb03 000e 	mla	r0, r3, lr, r0
 8019bbc:	fb01 0005 	mla	r0, r1, r5, r0
 8019bc0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019bc2:	fb09 0005 	mla	r0, r9, r5, r0
 8019bc6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8019bca:	2800      	cmp	r0, #0
 8019bcc:	f000 80fa 	beq.w	8019dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019bd0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019bd4:	d01b      	beq.n	8019c0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8019bd6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8019bda:	fb0e fa0a 	mul.w	sl, lr, sl
 8019bde:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019be2:	fb0e fe02 	mul.w	lr, lr, r2
 8019be6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8019bea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019bee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019bf2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019bf6:	4452      	add	r2, sl
 8019bf8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019bfc:	0a12      	lsrs	r2, r2, #8
 8019bfe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019c02:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019c06:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019c0a:	ea42 020c 	orr.w	r2, r2, ip
 8019c0e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019c10:	2dff      	cmp	r5, #255	; 0xff
 8019c12:	d021      	beq.n	8019c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019c14:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019c16:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019c1a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019c1c:	fb05 fb0b 	mul.w	fp, r5, fp
 8019c20:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019c22:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019c26:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019c28:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019c2c:	fb05 fa0a 	mul.w	sl, r5, sl
 8019c30:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c34:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019c38:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019c3c:	44de      	add	lr, fp
 8019c3e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019c42:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c46:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019c4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c4e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019c52:	ea4e 050a 	orr.w	r5, lr, sl
 8019c56:	950c      	str	r5, [sp, #48]	; 0x30
 8019c58:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c5a:	2dff      	cmp	r5, #255	; 0xff
 8019c5c:	d021      	beq.n	8019ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019c5e:	9d08      	ldr	r5, [sp, #32]
 8019c60:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019c64:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c66:	fb05 fb0b 	mul.w	fp, r5, fp
 8019c6a:	9d08      	ldr	r5, [sp, #32]
 8019c6c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019c70:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019c72:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019c76:	fb05 fa0a 	mul.w	sl, r5, sl
 8019c7a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c7e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019c82:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019c86:	44de      	add	lr, fp
 8019c88:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019c8c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019c94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c98:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019c9c:	ea4e 050a 	orr.w	r5, lr, sl
 8019ca0:	9508      	str	r5, [sp, #32]
 8019ca2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019ca4:	2dff      	cmp	r5, #255	; 0xff
 8019ca6:	d021      	beq.n	8019cec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019ca8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019caa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019cae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019cb0:	fb05 fb0b 	mul.w	fp, r5, fp
 8019cb4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019cb6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019cba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019cbc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019cc0:	fb05 fa0a 	mul.w	sl, r5, sl
 8019cc4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019cc8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019ccc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019cd0:	44de      	add	lr, fp
 8019cd2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019cd6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019cda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019cde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019ce2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019ce6:	ea4e 050a 	orr.w	r5, lr, sl
 8019cea:	950d      	str	r5, [sp, #52]	; 0x34
 8019cec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019cee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019cf2:	9d08      	ldr	r5, [sp, #32]
 8019cf4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019cf8:	fb08 fc0c 	mul.w	ip, r8, ip
 8019cfc:	fb03 cc0e 	mla	ip, r3, lr, ip
 8019d00:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019d04:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019d06:	fb01 cc0e 	mla	ip, r1, lr, ip
 8019d0a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8019d0e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019d10:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019d14:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019d18:	fb08 f80e 	mul.w	r8, r8, lr
 8019d1c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019d20:	fb03 8202 	mla	r2, r3, r2, r8
 8019d24:	9b08      	ldr	r3, [sp, #32]
 8019d26:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019d28:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019d2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019d2e:	fb01 220a 	mla	r2, r1, sl, r2
 8019d32:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019d36:	fb09 2901 	mla	r9, r9, r1, r2
 8019d3a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019d3c:	883b      	ldrh	r3, [r7, #0]
 8019d3e:	4342      	muls	r2, r0
 8019d40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d44:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019d48:	1c50      	adds	r0, r2, #1
 8019d4a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019d4e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019d52:	ea4c 0c09 	orr.w	ip, ip, r9
 8019d56:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019d5a:	1219      	asrs	r1, r3, #8
 8019d5c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019d60:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019d64:	b2c0      	uxtb	r0, r0
 8019d66:	fb12 f205 	smulbb	r2, r2, r5
 8019d6a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019d6e:	fb01 2100 	mla	r1, r1, r0, r2
 8019d72:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8019d76:	10da      	asrs	r2, r3, #3
 8019d78:	fa5f fc8c 	uxtb.w	ip, ip
 8019d7c:	00db      	lsls	r3, r3, #3
 8019d7e:	fb1c fc05 	smulbb	ip, ip, r5
 8019d82:	b2db      	uxtb	r3, r3
 8019d84:	b289      	uxth	r1, r1
 8019d86:	fb03 c300 	mla	r3, r3, r0, ip
 8019d8a:	fa1f fc83 	uxth.w	ip, r3
 8019d8e:	1c4b      	adds	r3, r1, #1
 8019d90:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019d94:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019d98:	fb1e fe05 	smulbb	lr, lr, r5
 8019d9c:	f10c 0301 	add.w	r3, ip, #1
 8019da0:	fb02 e200 	mla	r2, r2, r0, lr
 8019da4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019da8:	b292      	uxth	r2, r2
 8019daa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019dae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019db2:	430b      	orrs	r3, r1
 8019db4:	1c51      	adds	r1, r2, #1
 8019db6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019dba:	0952      	lsrs	r2, r2, #5
 8019dbc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019dc0:	4313      	orrs	r3, r2
 8019dc2:	803b      	strh	r3, [r7, #0]
 8019dc4:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019dc6:	441c      	add	r4, r3
 8019dc8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019dca:	441e      	add	r6, r3
 8019dcc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019dce:	3b01      	subs	r3, #1
 8019dd0:	3702      	adds	r7, #2
 8019dd2:	9318      	str	r3, [sp, #96]	; 0x60
 8019dd4:	e698      	b.n	8019b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8019dd6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019dd8:	441c      	add	r4, r3
 8019dda:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019ddc:	441e      	add	r6, r3
 8019dde:	9b07      	ldr	r3, [sp, #28]
 8019de0:	3b01      	subs	r3, #1
 8019de2:	9307      	str	r3, [sp, #28]
 8019de4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019de6:	3302      	adds	r3, #2
 8019de8:	930a      	str	r3, [sp, #40]	; 0x28
 8019dea:	e66d      	b.n	8019ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019dec:	d023      	beq.n	8019e36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8019dee:	9b07      	ldr	r3, [sp, #28]
 8019df0:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8019df2:	3b01      	subs	r3, #1
 8019df4:	fb00 4003 	mla	r0, r0, r3, r4
 8019df8:	1400      	asrs	r0, r0, #16
 8019dfa:	f53f ae82 	bmi.w	8019b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019dfe:	3901      	subs	r1, #1
 8019e00:	4288      	cmp	r0, r1
 8019e02:	f6bf ae7e 	bge.w	8019b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019e06:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8019e08:	fb01 6303 	mla	r3, r1, r3, r6
 8019e0c:	141b      	asrs	r3, r3, #16
 8019e0e:	f53f ae78 	bmi.w	8019b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019e12:	3a01      	subs	r2, #1
 8019e14:	4293      	cmp	r3, r2
 8019e16:	f6bf ae74 	bge.w	8019b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019e1a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019e1e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8019e22:	f1bb 0f00 	cmp.w	fp, #0
 8019e26:	dc6c      	bgt.n	8019f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8019e28:	9b07      	ldr	r3, [sp, #28]
 8019e2a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019e2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e30:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019e34:	930a      	str	r3, [sp, #40]	; 0x28
 8019e36:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019e38:	2b00      	cmp	r3, #0
 8019e3a:	f340 81b3 	ble.w	801a1a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8019e3e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019e42:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019e46:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019e4a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019e4c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019e50:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019e54:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019e58:	eef0 6a48 	vmov.f32	s13, s16
 8019e5c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019e60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e64:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019e68:	ee16 4a90 	vmov	r4, s13
 8019e6c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019e70:	eef0 6a68 	vmov.f32	s13, s17
 8019e74:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019e78:	ee18 2a10 	vmov	r2, s16
 8019e7c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019e80:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e84:	ee18 2a90 	vmov	r2, s17
 8019e88:	9331      	str	r3, [sp, #196]	; 0xc4
 8019e8a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019e8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e90:	9332      	str	r3, [sp, #200]	; 0xc8
 8019e92:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019e94:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8019e96:	3b01      	subs	r3, #1
 8019e98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e9c:	9317      	str	r3, [sp, #92]	; 0x5c
 8019e9e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019ea0:	bf08      	it	eq
 8019ea2:	4613      	moveq	r3, r2
 8019ea4:	ee16 6a90 	vmov	r6, s13
 8019ea8:	9307      	str	r3, [sp, #28]
 8019eaa:	eef0 8a67 	vmov.f32	s17, s15
 8019eae:	eeb0 8a47 	vmov.f32	s16, s14
 8019eb2:	e5fb      	b.n	8019aac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019eb4:	2900      	cmp	r1, #0
 8019eb6:	f43f ae6b 	beq.w	8019b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019eba:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019ebe:	9308      	str	r3, [sp, #32]
 8019ec0:	0e1b      	lsrs	r3, r3, #24
 8019ec2:	9311      	str	r3, [sp, #68]	; 0x44
 8019ec4:	e664      	b.n	8019b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8019ec6:	f112 0801 	adds.w	r8, r2, #1
 8019eca:	f53f af7b 	bmi.w	8019dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019ece:	4543      	cmp	r3, r8
 8019ed0:	f6ff af78 	blt.w	8019dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019ed4:	f11c 0801 	adds.w	r8, ip, #1
 8019ed8:	f53f af74 	bmi.w	8019dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019edc:	45c6      	cmp	lr, r8
 8019ede:	f6ff af71 	blt.w	8019dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019ee2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019ee4:	9201      	str	r2, [sp, #4]
 8019ee6:	fa0f f28e 	sxth.w	r2, lr
 8019eea:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019eee:	e9cd c002 	strd	ip, r0, [sp, #8]
 8019ef2:	9200      	str	r2, [sp, #0]
 8019ef4:	b21b      	sxth	r3, r3
 8019ef6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ef8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019efa:	4639      	mov	r1, r7
 8019efc:	f7ff fc48 	bl	8019790 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019f00:	e760      	b.n	8019dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8019f02:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8019f04:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019f06:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019f0a:	1427      	asrs	r7, r4, #16
 8019f0c:	1433      	asrs	r3, r6, #16
 8019f0e:	fb01 7303 	mla	r3, r1, r3, r7
 8019f12:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8019f16:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019f1a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019f1e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019f22:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019f26:	2a00      	cmp	r2, #0
 8019f28:	f000 8133 	beq.w	801a192 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8019f2c:	687d      	ldr	r5, [r7, #4]
 8019f2e:	950e      	str	r5, [sp, #56]	; 0x38
 8019f30:	0e2d      	lsrs	r5, r5, #24
 8019f32:	9515      	str	r5, [sp, #84]	; 0x54
 8019f34:	b178      	cbz	r0, 8019f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019f36:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8019f3a:	3901      	subs	r1, #1
 8019f3c:	0089      	lsls	r1, r1, #2
 8019f3e:	3104      	adds	r1, #4
 8019f40:	eb07 0e01 	add.w	lr, r7, r1
 8019f44:	5879      	ldr	r1, [r7, r1]
 8019f46:	9109      	str	r1, [sp, #36]	; 0x24
 8019f48:	0e09      	lsrs	r1, r1, #24
 8019f4a:	9112      	str	r1, [sp, #72]	; 0x48
 8019f4c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8019f50:	910f      	str	r1, [sp, #60]	; 0x3c
 8019f52:	0e09      	lsrs	r1, r1, #24
 8019f54:	9116      	str	r1, [sp, #88]	; 0x58
 8019f56:	b292      	uxth	r2, r2
 8019f58:	b280      	uxth	r0, r0
 8019f5a:	fb02 f800 	mul.w	r8, r2, r0
 8019f5e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019f62:	0112      	lsls	r2, r2, #4
 8019f64:	eba2 0e08 	sub.w	lr, r2, r8
 8019f68:	b280      	uxth	r0, r0
 8019f6a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019f6e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019f70:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019f72:	fa1f fe8e 	uxth.w	lr, lr
 8019f76:	1a12      	subs	r2, r2, r0
 8019f78:	b292      	uxth	r2, r2
 8019f7a:	fb0e f101 	mul.w	r1, lr, r1
 8019f7e:	fb02 110c 	mla	r1, r2, ip, r1
 8019f82:	fb00 1105 	mla	r1, r0, r5, r1
 8019f86:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019f88:	fb08 1105 	mla	r1, r8, r5, r1
 8019f8c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019f90:	2900      	cmp	r1, #0
 8019f92:	f000 80f5 	beq.w	801a180 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8019f96:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019f9a:	d019      	beq.n	8019fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8019f9c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019fa0:	fb0c fa0a 	mul.w	sl, ip, sl
 8019fa4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019fa8:	fb0c fc03 	mul.w	ip, ip, r3
 8019fac:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019fb0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019fb4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019fb8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019fbc:	4453      	add	r3, sl
 8019fbe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019fc2:	0a1b      	lsrs	r3, r3, #8
 8019fc4:	0a3f      	lsrs	r7, r7, #8
 8019fc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019fca:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019fce:	433b      	orrs	r3, r7
 8019fd0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019fd2:	2dff      	cmp	r5, #255	; 0xff
 8019fd4:	d020      	beq.n	801a018 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8019fd6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019fd8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019fdc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019fde:	436f      	muls	r7, r5
 8019fe0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019fe2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019fe6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019fe8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019fec:	fb05 fa0a 	mul.w	sl, r5, sl
 8019ff0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019ff4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019ff8:	44bc      	add	ip, r7
 8019ffa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019ffe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a002:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a006:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a00a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a00e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a012:	ea4c 050a 	orr.w	r5, ip, sl
 801a016:	950e      	str	r5, [sp, #56]	; 0x38
 801a018:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a01a:	2dff      	cmp	r5, #255	; 0xff
 801a01c:	d020      	beq.n	801a060 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801a01e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a020:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a024:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a026:	436f      	muls	r7, r5
 801a028:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a02a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a02e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a030:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a034:	fb05 fa0a 	mul.w	sl, r5, sl
 801a038:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a03c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a040:	44bc      	add	ip, r7
 801a042:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a046:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a04a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a04e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a052:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a056:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a05a:	ea4c 050a 	orr.w	r5, ip, sl
 801a05e:	9509      	str	r5, [sp, #36]	; 0x24
 801a060:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a062:	2dff      	cmp	r5, #255	; 0xff
 801a064:	d020      	beq.n	801a0a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801a066:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a068:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a06c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a06e:	436f      	muls	r7, r5
 801a070:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a072:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a076:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a078:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a07c:	fb05 fa0a 	mul.w	sl, r5, sl
 801a080:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a084:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a088:	44bc      	add	ip, r7
 801a08a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a08e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a092:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a096:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a09a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a09e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a0a2:	ea4c 050a 	orr.w	r5, ip, sl
 801a0a6:	950f      	str	r5, [sp, #60]	; 0x3c
 801a0a8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a0aa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a0ae:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a0b0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a0b4:	fb0e f707 	mul.w	r7, lr, r7
 801a0b8:	fb02 770c 	mla	r7, r2, ip, r7
 801a0bc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a0c0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a0c2:	fb00 770c 	mla	r7, r0, ip, r7
 801a0c6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a0ca:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a0cc:	fb08 770c 	mla	r7, r8, ip, r7
 801a0d0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a0d4:	fb0e fe0c 	mul.w	lr, lr, ip
 801a0d8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a0dc:	fb02 e303 	mla	r3, r2, r3, lr
 801a0e0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a0e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a0e4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801a0e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a0ea:	fb00 330a 	mla	r3, r0, sl, r3
 801a0ee:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801a0f2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801a0f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a0f8:	f8b9 0000 	ldrh.w	r0, [r9]
 801a0fc:	4359      	muls	r1, r3
 801a0fe:	0a3f      	lsrs	r7, r7, #8
 801a100:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a104:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a108:	1c4b      	adds	r3, r1, #1
 801a10a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a10e:	ea47 070c 	orr.w	r7, r7, ip
 801a112:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a116:	1202      	asrs	r2, r0, #8
 801a118:	0c3b      	lsrs	r3, r7, #16
 801a11a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801a11e:	b2c9      	uxtb	r1, r1
 801a120:	fb13 f305 	smulbb	r3, r3, r5
 801a124:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a128:	fb02 3201 	mla	r2, r2, r1, r3
 801a12c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801a130:	10c3      	asrs	r3, r0, #3
 801a132:	b2ff      	uxtb	r7, r7
 801a134:	00c0      	lsls	r0, r0, #3
 801a136:	b2c0      	uxtb	r0, r0
 801a138:	fb17 f705 	smulbb	r7, r7, r5
 801a13c:	fb00 7001 	mla	r0, r0, r1, r7
 801a140:	b292      	uxth	r2, r2
 801a142:	fb1c fc05 	smulbb	ip, ip, r5
 801a146:	b280      	uxth	r0, r0
 801a148:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801a14c:	fb03 c301 	mla	r3, r3, r1, ip
 801a150:	1c51      	adds	r1, r2, #1
 801a152:	f100 0c01 	add.w	ip, r0, #1
 801a156:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a15a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801a15e:	b29b      	uxth	r3, r3
 801a160:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a164:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801a168:	ea4c 0202 	orr.w	r2, ip, r2
 801a16c:	f103 0c01 	add.w	ip, r3, #1
 801a170:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a174:	095b      	lsrs	r3, r3, #5
 801a176:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a17a:	431a      	orrs	r2, r3
 801a17c:	f8a9 2000 	strh.w	r2, [r9]
 801a180:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801a182:	441c      	add	r4, r3
 801a184:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801a186:	f109 0902 	add.w	r9, r9, #2
 801a18a:	441e      	add	r6, r3
 801a18c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a190:	e647      	b.n	8019e22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 801a192:	2800      	cmp	r0, #0
 801a194:	f43f aedf 	beq.w	8019f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a198:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801a19c:	9109      	str	r1, [sp, #36]	; 0x24
 801a19e:	0e09      	lsrs	r1, r1, #24
 801a1a0:	9112      	str	r1, [sp, #72]	; 0x48
 801a1a2:	e6d8      	b.n	8019f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a1a4:	b01d      	add	sp, #116	; 0x74
 801a1a6:	ecbd 8b08 	vpop	{d8-d11}
 801a1aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801a1b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801a1b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1b4:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801a1b8:	fb04 5603 	mla	r6, r4, r3, r5
 801a1bc:	2c00      	cmp	r4, #0
 801a1be:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a1c2:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801a1c6:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801a1ca:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 801a1ce:	db37      	blt.n	801a240 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801a1d0:	45a6      	cmp	lr, r4
 801a1d2:	dd35      	ble.n	801a240 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 801a1d4:	2d00      	cmp	r5, #0
 801a1d6:	db31      	blt.n	801a23c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a1d8:	42ab      	cmp	r3, r5
 801a1da:	dd2f      	ble.n	801a23c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a1dc:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 801a1e0:	1c6e      	adds	r6, r5, #1
 801a1e2:	d430      	bmi.n	801a246 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801a1e4:	42b3      	cmp	r3, r6
 801a1e6:	dd2e      	ble.n	801a246 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801a1e8:	b378      	cbz	r0, 801a24a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 801a1ea:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801a1ee:	3401      	adds	r4, #1
 801a1f0:	d42f      	bmi.n	801a252 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801a1f2:	45a6      	cmp	lr, r4
 801a1f4:	dd2d      	ble.n	801a252 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801a1f6:	b37f      	cbz	r7, 801a258 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 801a1f8:	2d00      	cmp	r5, #0
 801a1fa:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 801a1fe:	db26      	blt.n	801a24e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801a200:	42ab      	cmp	r3, r5
 801a202:	dd24      	ble.n	801a24e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 801a204:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801a208:	3501      	adds	r5, #1
 801a20a:	d428      	bmi.n	801a25e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801a20c:	42ab      	cmp	r3, r5
 801a20e:	dd26      	ble.n	801a25e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801a210:	b338      	cbz	r0, 801a262 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 801a212:	f8de 3004 	ldr.w	r3, [lr, #4]
 801a216:	280f      	cmp	r0, #15
 801a218:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a21c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a220:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a224:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a228:	d801      	bhi.n	801a22e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 801a22a:	2f0f      	cmp	r7, #15
 801a22c:	d91b      	bls.n	801a266 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 801a22e:	4b87      	ldr	r3, [pc, #540]	; (801a44c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801a230:	4a87      	ldr	r2, [pc, #540]	; (801a450 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801a232:	4888      	ldr	r0, [pc, #544]	; (801a454 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801a234:	f240 11f9 	movw	r1, #505	; 0x1f9
 801a238:	f001 fd5c 	bl	801bcf4 <__assert_func>
 801a23c:	2200      	movs	r2, #0
 801a23e:	e7cf      	b.n	801a1e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 801a240:	2600      	movs	r6, #0
 801a242:	4632      	mov	r2, r6
 801a244:	e7d3      	b.n	801a1ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a246:	2600      	movs	r6, #0
 801a248:	e7d1      	b.n	801a1ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a24a:	4606      	mov	r6, r0
 801a24c:	e7cf      	b.n	801a1ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 801a24e:	2400      	movs	r4, #0
 801a250:	e7da      	b.n	801a208 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 801a252:	2300      	movs	r3, #0
 801a254:	461c      	mov	r4, r3
 801a256:	e7de      	b.n	801a216 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a258:	463b      	mov	r3, r7
 801a25a:	463c      	mov	r4, r7
 801a25c:	e7db      	b.n	801a216 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a25e:	2300      	movs	r3, #0
 801a260:	e7d9      	b.n	801a216 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a262:	4603      	mov	r3, r0
 801a264:	e7d7      	b.n	801a216 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801a266:	b280      	uxth	r0, r0
 801a268:	b2bf      	uxth	r7, r7
 801a26a:	fb07 fe00 	mul.w	lr, r7, r0
 801a26e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a272:	0100      	lsls	r0, r0, #4
 801a274:	eba0 0c0e 	sub.w	ip, r0, lr
 801a278:	b2bf      	uxth	r7, r7
 801a27a:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a27e:	fa1f fc8c 	uxth.w	ip, ip
 801a282:	1bed      	subs	r5, r5, r7
 801a284:	b2ad      	uxth	r5, r5
 801a286:	fb0c f00a 	mul.w	r0, ip, sl
 801a28a:	fb0b 0005 	mla	r0, fp, r5, r0
 801a28e:	fb07 0009 	mla	r0, r7, r9, r0
 801a292:	fb0e 0008 	mla	r0, lr, r8, r0
 801a296:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a29a:	9001      	str	r0, [sp, #4]
 801a29c:	2800      	cmp	r0, #0
 801a29e:	f000 80d1 	beq.w	801a444 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 801a2a2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a2a6:	d018      	beq.n	801a2da <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 801a2a8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a2ac:	fb0b f000 	mul.w	r0, fp, r0
 801a2b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a2b4:	fb0b fb02 	mul.w	fp, fp, r2
 801a2b8:	0a02      	lsrs	r2, r0, #8
 801a2ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a2be:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a2c2:	4402      	add	r2, r0
 801a2c4:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a2c8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a2cc:	0a12      	lsrs	r2, r2, #8
 801a2ce:	0a00      	lsrs	r0, r0, #8
 801a2d0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a2d4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a2d8:	4302      	orrs	r2, r0
 801a2da:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a2de:	d01a      	beq.n	801a316 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 801a2e0:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 801a2e4:	fb0a f000 	mul.w	r0, sl, r0
 801a2e8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a2ec:	fb0a fa06 	mul.w	sl, sl, r6
 801a2f0:	0a06      	lsrs	r6, r0, #8
 801a2f2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a2f6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a2fa:	4406      	add	r6, r0
 801a2fc:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a300:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 801a304:	0a36      	lsrs	r6, r6, #8
 801a306:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a30a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a30e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a312:	ea46 060a 	orr.w	r6, r6, sl
 801a316:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a31a:	d01b      	beq.n	801a354 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 801a31c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a320:	fb09 fa0a 	mul.w	sl, r9, sl
 801a324:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a328:	fb09 f004 	mul.w	r0, r9, r4
 801a32c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a330:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a334:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a338:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801a33c:	4454      	add	r4, sl
 801a33e:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 801a342:	0a24      	lsrs	r4, r4, #8
 801a344:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a348:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a34c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a350:	ea44 0409 	orr.w	r4, r4, r9
 801a354:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a358:	d01b      	beq.n	801a392 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 801a35a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a35e:	fb08 f909 	mul.w	r9, r8, r9
 801a362:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a366:	fb08 f003 	mul.w	r0, r8, r3
 801a36a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a36e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a372:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a376:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801a37a:	444b      	add	r3, r9
 801a37c:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 801a380:	0a1b      	lsrs	r3, r3, #8
 801a382:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a386:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a38a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a38e:	ea43 0308 	orr.w	r3, r3, r8
 801a392:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a396:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a39a:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 801a39e:	fb0c f808 	mul.w	r8, ip, r8
 801a3a2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a3a6:	fb0c f606 	mul.w	r6, ip, r6
 801a3aa:	fb05 8909 	mla	r9, r5, r9, r8
 801a3ae:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 801a3b2:	fb05 6502 	mla	r5, r5, r2, r6
 801a3b6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a3ba:	fb07 9908 	mla	r9, r7, r8, r9
 801a3be:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 801a3c2:	fb07 5704 	mla	r7, r7, r4, r5
 801a3c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a3ca:	8808      	ldrh	r0, [r1, #0]
 801a3cc:	fb0e 9808 	mla	r8, lr, r8, r9
 801a3d0:	fb0e 7e03 	mla	lr, lr, r3, r7
 801a3d4:	9b01      	ldr	r3, [sp, #4]
 801a3d6:	43da      	mvns	r2, r3
 801a3d8:	1203      	asrs	r3, r0, #8
 801a3da:	b2d2      	uxtb	r2, r2
 801a3dc:	10c4      	asrs	r4, r0, #3
 801a3de:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a3e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a3e6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801a3ea:	00c0      	lsls	r0, r0, #3
 801a3ec:	4353      	muls	r3, r2
 801a3ee:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801a3f2:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a3f6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801a3fa:	b2c0      	uxtb	r0, r0
 801a3fc:	ea48 0e0e 	orr.w	lr, r8, lr
 801a400:	4354      	muls	r4, r2
 801a402:	4350      	muls	r0, r2
 801a404:	1c5a      	adds	r2, r3, #1
 801a406:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a40a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 801a40e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a412:	1c62      	adds	r2, r4, #1
 801a414:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a418:	ea4f 221e 	mov.w	r2, lr, lsr #8
 801a41c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a420:	021b      	lsls	r3, r3, #8
 801a422:	00d2      	lsls	r2, r2, #3
 801a424:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a428:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a42c:	4313      	orrs	r3, r2
 801a42e:	1c42      	adds	r2, r0, #1
 801a430:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a434:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 801a438:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 801a43c:	ea4e 0e03 	orr.w	lr, lr, r3
 801a440:	f8a1 e000 	strh.w	lr, [r1]
 801a444:	b003      	add	sp, #12
 801a446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a44a:	bf00      	nop
 801a44c:	0801fdd3 	.word	0x0801fdd3
 801a450:	08020302 	.word	0x08020302
 801a454:	0801fda0 	.word	0x0801fda0

0801a458 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a45c:	ed2d 8b08 	vpush	{d8-d11}
 801a460:	b09b      	sub	sp, #108	; 0x6c
 801a462:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801a466:	9218      	str	r2, [sp, #96]	; 0x60
 801a468:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801a46a:	9116      	str	r1, [sp, #88]	; 0x58
 801a46c:	9307      	str	r3, [sp, #28]
 801a46e:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801a472:	9019      	str	r0, [sp, #100]	; 0x64
 801a474:	6850      	ldr	r0, [r2, #4]
 801a476:	6812      	ldr	r2, [r2, #0]
 801a478:	fb00 1303 	mla	r3, r0, r3, r1
 801a47c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a480:	930a      	str	r3, [sp, #40]	; 0x28
 801a482:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a484:	681b      	ldr	r3, [r3, #0]
 801a486:	930f      	str	r3, [sp, #60]	; 0x3c
 801a488:	eeb0 aa40 	vmov.f32	s20, s0
 801a48c:	eef0 9a60 	vmov.f32	s19, s1
 801a490:	eeb0 9a41 	vmov.f32	s18, s2
 801a494:	eeb0 8a62 	vmov.f32	s16, s5
 801a498:	eef0 8a43 	vmov.f32	s17, s6
 801a49c:	eef0 ba44 	vmov.f32	s23, s8
 801a4a0:	eeb0 ba64 	vmov.f32	s22, s9
 801a4a4:	eef0 aa45 	vmov.f32	s21, s10
 801a4a8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a4aa:	2b00      	cmp	r3, #0
 801a4ac:	dc03      	bgt.n	801a4b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a4ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a4b0:	2b00      	cmp	r3, #0
 801a4b2:	f340 8386 	ble.w	801abc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a4b6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a4b8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a4bc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a4c0:	1e48      	subs	r0, r1, #1
 801a4c2:	1e57      	subs	r7, r2, #1
 801a4c4:	9b07      	ldr	r3, [sp, #28]
 801a4c6:	2b00      	cmp	r3, #0
 801a4c8:	f340 8166 	ble.w	801a798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 801a4cc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a4d0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a4d4:	d406      	bmi.n	801a4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a4d6:	4584      	cmp	ip, r0
 801a4d8:	da04      	bge.n	801a4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a4da:	2b00      	cmp	r3, #0
 801a4dc:	db02      	blt.n	801a4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a4de:	42bb      	cmp	r3, r7
 801a4e0:	f2c0 815b 	blt.w	801a79a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a4e4:	f11c 0c01 	adds.w	ip, ip, #1
 801a4e8:	f100 814b 	bmi.w	801a782 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a4ec:	4561      	cmp	r1, ip
 801a4ee:	f2c0 8148 	blt.w	801a782 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a4f2:	3301      	adds	r3, #1
 801a4f4:	f100 8145 	bmi.w	801a782 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a4f8:	429a      	cmp	r2, r3
 801a4fa:	f2c0 8142 	blt.w	801a782 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801a4fe:	9b07      	ldr	r3, [sp, #28]
 801a500:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a502:	9317      	str	r3, [sp, #92]	; 0x5c
 801a504:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a506:	2b00      	cmp	r3, #0
 801a508:	f340 8165 	ble.w	801a7d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801a50c:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801a50e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a510:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a514:	689b      	ldr	r3, [r3, #8]
 801a516:	1422      	asrs	r2, r4, #16
 801a518:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a51c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a520:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a524:	f100 81d5 	bmi.w	801a8d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a528:	f103 38ff 	add.w	r8, r3, #4294967295
 801a52c:	4542      	cmp	r2, r8
 801a52e:	f280 81d0 	bge.w	801a8d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a532:	f1bc 0f00 	cmp.w	ip, #0
 801a536:	f2c0 81cc 	blt.w	801a8d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a53a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a53e:	45c4      	cmp	ip, r8
 801a540:	f280 81c7 	bge.w	801a8d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a544:	b21b      	sxth	r3, r3
 801a546:	fb0c 2203 	mla	r2, ip, r3, r2
 801a54a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a54c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801a550:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801a554:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801a558:	2900      	cmp	r1, #0
 801a55a:	f000 8182 	beq.w	801a862 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801a55e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a562:	950b      	str	r5, [sp, #44]	; 0x2c
 801a564:	0e2d      	lsrs	r5, r5, #24
 801a566:	9512      	str	r5, [sp, #72]	; 0x48
 801a568:	b180      	cbz	r0, 801a58c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a56a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801a56e:	3b01      	subs	r3, #1
 801a570:	009b      	lsls	r3, r3, #2
 801a572:	3304      	adds	r3, #4
 801a574:	eb08 0c03 	add.w	ip, r8, r3
 801a578:	f858 3003 	ldr.w	r3, [r8, r3]
 801a57c:	9308      	str	r3, [sp, #32]
 801a57e:	0e1b      	lsrs	r3, r3, #24
 801a580:	9310      	str	r3, [sp, #64]	; 0x40
 801a582:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801a586:	930c      	str	r3, [sp, #48]	; 0x30
 801a588:	0e1b      	lsrs	r3, r3, #24
 801a58a:	9313      	str	r3, [sp, #76]	; 0x4c
 801a58c:	b289      	uxth	r1, r1
 801a58e:	b280      	uxth	r0, r0
 801a590:	fb01 f900 	mul.w	r9, r1, r0
 801a594:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a598:	0109      	lsls	r1, r1, #4
 801a59a:	eba1 0809 	sub.w	r8, r1, r9
 801a59e:	b280      	uxth	r0, r0
 801a5a0:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801a5a4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a5a6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a5a8:	fa1f f888 	uxth.w	r8, r8
 801a5ac:	1a09      	subs	r1, r1, r0
 801a5ae:	b289      	uxth	r1, r1
 801a5b0:	fb08 f303 	mul.w	r3, r8, r3
 801a5b4:	fb01 330e 	mla	r3, r1, lr, r3
 801a5b8:	fb00 3305 	mla	r3, r0, r5, r3
 801a5bc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a5be:	fb09 3305 	mla	r3, r9, r5, r3
 801a5c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a5c6:	2b00      	cmp	r3, #0
 801a5c8:	f000 80d2 	beq.w	801a770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a5cc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a5d0:	d01b      	beq.n	801a60a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801a5d2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801a5d6:	fb0e fa0a 	mul.w	sl, lr, sl
 801a5da:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a5de:	fb0e fe02 	mul.w	lr, lr, r2
 801a5e2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801a5e6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a5ea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a5ee:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a5f2:	4452      	add	r2, sl
 801a5f4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a5f8:	0a12      	lsrs	r2, r2, #8
 801a5fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a5fe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a602:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a606:	ea42 020c 	orr.w	r2, r2, ip
 801a60a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a60c:	2dff      	cmp	r5, #255	; 0xff
 801a60e:	d021      	beq.n	801a654 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a610:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a612:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a616:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a618:	fb05 fb0b 	mul.w	fp, r5, fp
 801a61c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a61e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a622:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a624:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a628:	fb05 fa0a 	mul.w	sl, r5, sl
 801a62c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a630:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a634:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a638:	44de      	add	lr, fp
 801a63a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a63e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a642:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a646:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a64a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a64e:	ea4e 050a 	orr.w	r5, lr, sl
 801a652:	950b      	str	r5, [sp, #44]	; 0x2c
 801a654:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a656:	2dff      	cmp	r5, #255	; 0xff
 801a658:	d021      	beq.n	801a69e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a65a:	9d08      	ldr	r5, [sp, #32]
 801a65c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a660:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a662:	fb05 fb0b 	mul.w	fp, r5, fp
 801a666:	9d08      	ldr	r5, [sp, #32]
 801a668:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a66c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a66e:	fb05 fa0e 	mul.w	sl, r5, lr
 801a672:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a676:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a67a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a67e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a682:	44de      	add	lr, fp
 801a684:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a688:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a68c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a690:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a694:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a698:	ea4e 050a 	orr.w	r5, lr, sl
 801a69c:	9508      	str	r5, [sp, #32]
 801a69e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a6a0:	2dff      	cmp	r5, #255	; 0xff
 801a6a2:	d021      	beq.n	801a6e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a6a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a6a6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a6aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a6ac:	fb05 fb0b 	mul.w	fp, r5, fp
 801a6b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a6b2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a6b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a6b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a6bc:	fb05 fa0a 	mul.w	sl, r5, sl
 801a6c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a6c4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a6c8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a6cc:	44de      	add	lr, fp
 801a6ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a6d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a6d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a6da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a6de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a6e2:	ea4e 050a 	orr.w	r5, lr, sl
 801a6e6:	950c      	str	r5, [sp, #48]	; 0x30
 801a6e8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a6ea:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a6ee:	9d08      	ldr	r5, [sp, #32]
 801a6f0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801a6f4:	fb08 fc0c 	mul.w	ip, r8, ip
 801a6f8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a6fc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a700:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a702:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a706:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a70a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a70c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a710:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a714:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a718:	fb08 f80e 	mul.w	r8, r8, lr
 801a71c:	fb01 8202 	mla	r2, r1, r2, r8
 801a720:	9908      	ldr	r1, [sp, #32]
 801a722:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a726:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a728:	fb00 220a 	mla	r2, r0, sl, r2
 801a72c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a730:	fb09 2900 	mla	r9, r9, r0, r2
 801a734:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a738:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a73c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a740:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a744:	ea4c 0c09 	orr.w	ip, ip, r9
 801a748:	2bff      	cmp	r3, #255	; 0xff
 801a74a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801a74e:	f040 8091 	bne.w	801a874 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801a752:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801a756:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801a75a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a75e:	f022 0207 	bic.w	r2, r2, #7
 801a762:	431a      	orrs	r2, r3
 801a764:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a768:	ea4c 0c02 	orr.w	ip, ip, r2
 801a76c:	f8a7 c000 	strh.w	ip, [r7]
 801a770:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a772:	441c      	add	r4, r3
 801a774:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a776:	441e      	add	r6, r3
 801a778:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a77a:	3b01      	subs	r3, #1
 801a77c:	3702      	adds	r7, #2
 801a77e:	9317      	str	r3, [sp, #92]	; 0x5c
 801a780:	e6c0      	b.n	801a504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801a782:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a784:	441c      	add	r4, r3
 801a786:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a788:	441e      	add	r6, r3
 801a78a:	9b07      	ldr	r3, [sp, #28]
 801a78c:	3b01      	subs	r3, #1
 801a78e:	9307      	str	r3, [sp, #28]
 801a790:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a792:	3302      	adds	r3, #2
 801a794:	930a      	str	r3, [sp, #40]	; 0x28
 801a796:	e695      	b.n	801a4c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a798:	d024      	beq.n	801a7e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a79a:	9b07      	ldr	r3, [sp, #28]
 801a79c:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801a79e:	3b01      	subs	r3, #1
 801a7a0:	fb00 4003 	mla	r0, r0, r3, r4
 801a7a4:	1400      	asrs	r0, r0, #16
 801a7a6:	f53f aeaa 	bmi.w	801a4fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a7aa:	3901      	subs	r1, #1
 801a7ac:	4288      	cmp	r0, r1
 801a7ae:	f6bf aea6 	bge.w	801a4fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a7b2:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801a7b4:	fb01 6303 	mla	r3, r1, r3, r6
 801a7b8:	141b      	asrs	r3, r3, #16
 801a7ba:	f53f aea0 	bmi.w	801a4fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a7be:	3a01      	subs	r2, #1
 801a7c0:	4293      	cmp	r3, r2
 801a7c2:	f6bf ae9c 	bge.w	801a4fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a7c6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a7ca:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801a7ce:	f1bb 0f00 	cmp.w	fp, #0
 801a7d2:	f300 809a 	bgt.w	801a90a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801a7d6:	9b07      	ldr	r3, [sp, #28]
 801a7d8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a7dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a7de:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a7e2:	930a      	str	r3, [sp, #40]	; 0x28
 801a7e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a7e6:	2b00      	cmp	r3, #0
 801a7e8:	f340 81eb 	ble.w	801abc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801a7ec:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a7f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a7f4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a7f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a7fa:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a7fe:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a802:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a806:	eef0 6a48 	vmov.f32	s13, s16
 801a80a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a80e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a812:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a816:	ee16 4a90 	vmov	r4, s13
 801a81a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a81e:	eef0 6a68 	vmov.f32	s13, s17
 801a822:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a826:	ee18 2a10 	vmov	r2, s16
 801a82a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a82e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a832:	ee18 2a90 	vmov	r2, s17
 801a836:	932f      	str	r3, [sp, #188]	; 0xbc
 801a838:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a83a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a83e:	9330      	str	r3, [sp, #192]	; 0xc0
 801a840:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a842:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a844:	3b01      	subs	r3, #1
 801a846:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a84a:	9316      	str	r3, [sp, #88]	; 0x58
 801a84c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a84e:	bf08      	it	eq
 801a850:	4613      	moveq	r3, r2
 801a852:	ee16 6a90 	vmov	r6, s13
 801a856:	9307      	str	r3, [sp, #28]
 801a858:	eef0 8a67 	vmov.f32	s17, s15
 801a85c:	eeb0 8a47 	vmov.f32	s16, s14
 801a860:	e622      	b.n	801a4a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801a862:	2800      	cmp	r0, #0
 801a864:	f43f ae92 	beq.w	801a58c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a868:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a86c:	9308      	str	r3, [sp, #32]
 801a86e:	0e1b      	lsrs	r3, r3, #24
 801a870:	9310      	str	r3, [sp, #64]	; 0x40
 801a872:	e68b      	b.n	801a58c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801a874:	8839      	ldrh	r1, [r7, #0]
 801a876:	4dd5      	ldr	r5, [pc, #852]	; (801abcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801a878:	43db      	mvns	r3, r3
 801a87a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801a87e:	fa5f f883 	uxtb.w	r8, r3
 801a882:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a886:	fb0e fe08 	mul.w	lr, lr, r8
 801a88a:	10c8      	asrs	r0, r1, #3
 801a88c:	00cb      	lsls	r3, r1, #3
 801a88e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a892:	f10e 0101 	add.w	r1, lr, #1
 801a896:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801a89a:	fb00 f008 	mul.w	r0, r0, r8
 801a89e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801a8a2:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801a8a6:	f100 0e01 	add.w	lr, r0, #1
 801a8aa:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801a8ae:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a8b2:	b2db      	uxtb	r3, r3
 801a8b4:	b2c9      	uxtb	r1, r1
 801a8b6:	00d2      	lsls	r2, r2, #3
 801a8b8:	fb03 f308 	mul.w	r3, r3, r8
 801a8bc:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801a8c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a8c4:	430a      	orrs	r2, r1
 801a8c6:	1c59      	adds	r1, r3, #1
 801a8c8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a8cc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a8d0:	e748      	b.n	801a764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801a8d2:	f112 0801 	adds.w	r8, r2, #1
 801a8d6:	f53f af4b 	bmi.w	801a770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a8da:	4543      	cmp	r3, r8
 801a8dc:	f6ff af48 	blt.w	801a770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a8e0:	f11c 0801 	adds.w	r8, ip, #1
 801a8e4:	f53f af44 	bmi.w	801a770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a8e8:	45c6      	cmp	lr, r8
 801a8ea:	f6ff af41 	blt.w	801a770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a8ee:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a8f2:	fa0f f28e 	sxth.w	r2, lr
 801a8f6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a8fa:	9200      	str	r2, [sp, #0]
 801a8fc:	b21b      	sxth	r3, r3
 801a8fe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a900:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a902:	4639      	mov	r1, r7
 801a904:	f7ff fc54 	bl	801a1b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a908:	e732      	b.n	801a770 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801a90a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a90c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a90e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a912:	1421      	asrs	r1, r4, #16
 801a914:	1433      	asrs	r3, r6, #16
 801a916:	fb07 1303 	mla	r3, r7, r3, r1
 801a91a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a91c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a920:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a924:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a928:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a92c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a930:	2a00      	cmp	r2, #0
 801a932:	f000 8107 	beq.w	801ab44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 801a936:	684d      	ldr	r5, [r1, #4]
 801a938:	950d      	str	r5, [sp, #52]	; 0x34
 801a93a:	0e2d      	lsrs	r5, r5, #24
 801a93c:	9514      	str	r5, [sp, #80]	; 0x50
 801a93e:	b178      	cbz	r0, 801a960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801a940:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a944:	3f01      	subs	r7, #1
 801a946:	00bf      	lsls	r7, r7, #2
 801a948:	3704      	adds	r7, #4
 801a94a:	eb01 0e07 	add.w	lr, r1, r7
 801a94e:	59c9      	ldr	r1, [r1, r7]
 801a950:	9109      	str	r1, [sp, #36]	; 0x24
 801a952:	0e09      	lsrs	r1, r1, #24
 801a954:	9111      	str	r1, [sp, #68]	; 0x44
 801a956:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a95a:	910e      	str	r1, [sp, #56]	; 0x38
 801a95c:	0e09      	lsrs	r1, r1, #24
 801a95e:	9115      	str	r1, [sp, #84]	; 0x54
 801a960:	b292      	uxth	r2, r2
 801a962:	b280      	uxth	r0, r0
 801a964:	fb02 f900 	mul.w	r9, r2, r0
 801a968:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a96c:	0112      	lsls	r2, r2, #4
 801a96e:	eba2 0e09 	sub.w	lr, r2, r9
 801a972:	b280      	uxth	r0, r0
 801a974:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a978:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a97a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a97c:	fa1f fe8e 	uxth.w	lr, lr
 801a980:	1a09      	subs	r1, r1, r0
 801a982:	b289      	uxth	r1, r1
 801a984:	fb0e f202 	mul.w	r2, lr, r2
 801a988:	fb01 220c 	mla	r2, r1, ip, r2
 801a98c:	fb00 2205 	mla	r2, r0, r5, r2
 801a990:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a992:	fb09 2205 	mla	r2, r9, r5, r2
 801a996:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a99a:	2a00      	cmp	r2, #0
 801a99c:	f000 80c9 	beq.w	801ab32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801a9a0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a9a4:	d019      	beq.n	801a9da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 801a9a6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a9aa:	fb0c fa0a 	mul.w	sl, ip, sl
 801a9ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a9b2:	fb0c fc03 	mul.w	ip, ip, r3
 801a9b6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a9ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a9be:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a9c2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a9c6:	4453      	add	r3, sl
 801a9c8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a9cc:	0a1b      	lsrs	r3, r3, #8
 801a9ce:	0a3f      	lsrs	r7, r7, #8
 801a9d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a9d4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a9d8:	433b      	orrs	r3, r7
 801a9da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a9dc:	2dff      	cmp	r5, #255	; 0xff
 801a9de:	d020      	beq.n	801aa22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 801a9e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a9e2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a9e6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a9e8:	436f      	muls	r7, r5
 801a9ea:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a9ec:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a9f0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a9f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a9f6:	fb05 fa0a 	mul.w	sl, r5, sl
 801a9fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a9fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa02:	44bc      	add	ip, r7
 801aa04:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aa08:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aa0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aa10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa14:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa1c:	ea4c 050a 	orr.w	r5, ip, sl
 801aa20:	950d      	str	r5, [sp, #52]	; 0x34
 801aa22:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aa24:	2dff      	cmp	r5, #255	; 0xff
 801aa26:	d020      	beq.n	801aa6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 801aa28:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801aa2a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801aa2e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aa30:	436f      	muls	r7, r5
 801aa32:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801aa34:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801aa38:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801aa3a:	fb05 fa0c 	mul.w	sl, r5, ip
 801aa3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aa42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa46:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801aa4a:	44bc      	add	ip, r7
 801aa4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aa50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aa54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aa58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa64:	ea4c 050a 	orr.w	r5, ip, sl
 801aa68:	9509      	str	r5, [sp, #36]	; 0x24
 801aa6a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801aa6c:	2dff      	cmp	r5, #255	; 0xff
 801aa6e:	d020      	beq.n	801aab2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 801aa70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801aa72:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801aa76:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801aa78:	436f      	muls	r7, r5
 801aa7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801aa7c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801aa80:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801aa82:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aa86:	fb05 fa0a 	mul.w	sl, r5, sl
 801aa8a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801aa8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aa92:	44bc      	add	ip, r7
 801aa94:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801aa98:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801aa9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aaa0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aaa4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aaa8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aaac:	ea4c 050a 	orr.w	r5, ip, sl
 801aab0:	950e      	str	r5, [sp, #56]	; 0x38
 801aab2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801aab4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801aab8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801aaba:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801aabe:	fb0e f707 	mul.w	r7, lr, r7
 801aac2:	fb01 770c 	mla	r7, r1, ip, r7
 801aac6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aaca:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801aacc:	fb00 770c 	mla	r7, r0, ip, r7
 801aad0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aad4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801aad6:	fb09 770c 	mla	r7, r9, ip, r7
 801aada:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801aade:	fb0e fe0c 	mul.w	lr, lr, ip
 801aae2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aae6:	fb01 e303 	mla	r3, r1, r3, lr
 801aaea:	9909      	ldr	r1, [sp, #36]	; 0x24
 801aaec:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801aaf0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801aaf2:	fb00 330a 	mla	r3, r0, sl, r3
 801aaf6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801aafa:	fb09 3c0c 	mla	ip, r9, ip, r3
 801aafe:	0a3f      	lsrs	r7, r7, #8
 801ab00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ab04:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ab08:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ab0c:	ea47 070c 	orr.w	r7, r7, ip
 801ab10:	2aff      	cmp	r2, #255	; 0xff
 801ab12:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801ab16:	d11e      	bne.n	801ab56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 801ab18:	097a      	lsrs	r2, r7, #5
 801ab1a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801ab1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab22:	f023 0307 	bic.w	r3, r3, #7
 801ab26:	4313      	orrs	r3, r2
 801ab28:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ab2c:	431f      	orrs	r7, r3
 801ab2e:	f8a8 7000 	strh.w	r7, [r8]
 801ab32:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801ab34:	441c      	add	r4, r3
 801ab36:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ab38:	f108 0802 	add.w	r8, r8, #2
 801ab3c:	441e      	add	r6, r3
 801ab3e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ab42:	e644      	b.n	801a7ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801ab44:	2800      	cmp	r0, #0
 801ab46:	f43f af0b 	beq.w	801a960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801ab4a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801ab4e:	9109      	str	r1, [sp, #36]	; 0x24
 801ab50:	0e09      	lsrs	r1, r1, #24
 801ab52:	9111      	str	r1, [sp, #68]	; 0x44
 801ab54:	e704      	b.n	801a960 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801ab56:	f8b8 1000 	ldrh.w	r1, [r8]
 801ab5a:	43d2      	mvns	r2, r2
 801ab5c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801ab60:	fa5f fe82 	uxtb.w	lr, r2
 801ab64:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ab68:	fb0c fc0e 	mul.w	ip, ip, lr
 801ab6c:	10c8      	asrs	r0, r1, #3
 801ab6e:	00ca      	lsls	r2, r1, #3
 801ab70:	f10c 0101 	add.w	r1, ip, #1
 801ab74:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ab78:	0c39      	lsrs	r1, r7, #16
 801ab7a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ab7e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ab82:	4912      	ldr	r1, [pc, #72]	; (801abcc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801ab84:	fb00 f00e 	mul.w	r0, r0, lr
 801ab88:	fa5f fc8c 	uxtb.w	ip, ip
 801ab8c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ab90:	b2d2      	uxtb	r2, r2
 801ab92:	1c41      	adds	r1, r0, #1
 801ab94:	fb02 f20e 	mul.w	r2, r2, lr
 801ab98:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ab9c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801aba0:	1c51      	adds	r1, r2, #1
 801aba2:	00c0      	lsls	r0, r0, #3
 801aba4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801aba8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801abac:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801abb0:	ea4c 0c00 	orr.w	ip, ip, r0
 801abb4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801abb8:	ea47 0c0c 	orr.w	ip, r7, ip
 801abbc:	f8a8 c000 	strh.w	ip, [r8]
 801abc0:	e7b7      	b.n	801ab32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801abc2:	b01b      	add	sp, #108	; 0x6c
 801abc4:	ecbd 8b08 	vpop	{d8-d11}
 801abc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801abcc:	fffff800 	.word	0xfffff800

0801abd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801abd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801abd4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801abd8:	2c00      	cmp	r4, #0
 801abda:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801abde:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801abe2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801abe6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801abea:	fb04 ce03 	mla	lr, r4, r3, ip
 801abee:	db60      	blt.n	801acb2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801abf0:	45a1      	cmp	r9, r4
 801abf2:	dd5e      	ble.n	801acb2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801abf4:	f1bc 0f00 	cmp.w	ip, #0
 801abf8:	db59      	blt.n	801acae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801abfa:	45e0      	cmp	r8, ip
 801abfc:	dd57      	ble.n	801acae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801abfe:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801ac02:	f01e 0f01 	tst.w	lr, #1
 801ac06:	5c16      	ldrb	r6, [r2, r0]
 801ac08:	bf0c      	ite	eq
 801ac0a:	f006 060f 	andeq.w	r6, r6, #15
 801ac0e:	1136      	asrne	r6, r6, #4
 801ac10:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ac14:	b2f6      	uxtb	r6, r6
 801ac16:	f11c 0001 	adds.w	r0, ip, #1
 801ac1a:	d44d      	bmi.n	801acb8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801ac1c:	4580      	cmp	r8, r0
 801ac1e:	dd4b      	ble.n	801acb8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801ac20:	2d00      	cmp	r5, #0
 801ac22:	d04b      	beq.n	801acbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801ac24:	f10e 0a01 	add.w	sl, lr, #1
 801ac28:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801ac2c:	f01a 0f01 	tst.w	sl, #1
 801ac30:	5c10      	ldrb	r0, [r2, r0]
 801ac32:	bf0c      	ite	eq
 801ac34:	f000 000f 	andeq.w	r0, r0, #15
 801ac38:	1100      	asrne	r0, r0, #4
 801ac3a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ac3e:	b2c0      	uxtb	r0, r0
 801ac40:	3401      	adds	r4, #1
 801ac42:	d43f      	bmi.n	801acc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801ac44:	45a1      	cmp	r9, r4
 801ac46:	dd3d      	ble.n	801acc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801ac48:	2f00      	cmp	r7, #0
 801ac4a:	f000 80a8 	beq.w	801ad9e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 801ac4e:	f1bc 0f00 	cmp.w	ip, #0
 801ac52:	db35      	blt.n	801acc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801ac54:	45e0      	cmp	r8, ip
 801ac56:	dd33      	ble.n	801acc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801ac58:	eb03 090e 	add.w	r9, r3, lr
 801ac5c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801ac60:	f019 0f01 	tst.w	r9, #1
 801ac64:	5d14      	ldrb	r4, [r2, r4]
 801ac66:	bf0c      	ite	eq
 801ac68:	f004 040f 	andeq.w	r4, r4, #15
 801ac6c:	1124      	asrne	r4, r4, #4
 801ac6e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ac72:	b2e4      	uxtb	r4, r4
 801ac74:	f11c 0c01 	adds.w	ip, ip, #1
 801ac78:	d427      	bmi.n	801acca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801ac7a:	45e0      	cmp	r8, ip
 801ac7c:	dd25      	ble.n	801acca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801ac7e:	b335      	cbz	r5, 801acce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801ac80:	3301      	adds	r3, #1
 801ac82:	449e      	add	lr, r3
 801ac84:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ac88:	f01e 0f01 	tst.w	lr, #1
 801ac8c:	5cd2      	ldrb	r2, [r2, r3]
 801ac8e:	bf0c      	ite	eq
 801ac90:	f002 020f 	andeq.w	r2, r2, #15
 801ac94:	1112      	asrne	r2, r2, #4
 801ac96:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ac9a:	b2d3      	uxtb	r3, r2
 801ac9c:	2d0f      	cmp	r5, #15
 801ac9e:	d917      	bls.n	801acd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801aca0:	4b42      	ldr	r3, [pc, #264]	; (801adac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 801aca2:	4a43      	ldr	r2, [pc, #268]	; (801adb0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 801aca4:	4843      	ldr	r0, [pc, #268]	; (801adb4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 801aca6:	f240 11f9 	movw	r1, #505	; 0x1f9
 801acaa:	f001 f823 	bl	801bcf4 <__assert_func>
 801acae:	2600      	movs	r6, #0
 801acb0:	e7b1      	b.n	801ac16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801acb2:	2000      	movs	r0, #0
 801acb4:	4606      	mov	r6, r0
 801acb6:	e7c3      	b.n	801ac40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801acb8:	2000      	movs	r0, #0
 801acba:	e7c1      	b.n	801ac40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801acbc:	4628      	mov	r0, r5
 801acbe:	e7bf      	b.n	801ac40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801acc0:	2400      	movs	r4, #0
 801acc2:	e7d7      	b.n	801ac74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801acc4:	2300      	movs	r3, #0
 801acc6:	461c      	mov	r4, r3
 801acc8:	e7e8      	b.n	801ac9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801acca:	2300      	movs	r3, #0
 801accc:	e7e6      	b.n	801ac9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801acce:	462b      	mov	r3, r5
 801acd0:	2f0f      	cmp	r7, #15
 801acd2:	d8e5      	bhi.n	801aca0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801acd4:	b2ad      	uxth	r5, r5
 801acd6:	b2bf      	uxth	r7, r7
 801acd8:	fb05 fc07 	mul.w	ip, r5, r7
 801acdc:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801ace0:	012d      	lsls	r5, r5, #4
 801ace2:	b2bf      	uxth	r7, r7
 801ace4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801ace8:	eba5 050c 	sub.w	r5, r5, ip
 801acec:	1bd2      	subs	r2, r2, r7
 801acee:	b2ad      	uxth	r5, r5
 801acf0:	b292      	uxth	r2, r2
 801acf2:	4368      	muls	r0, r5
 801acf4:	fb06 0002 	mla	r0, r6, r2, r0
 801acf8:	fb07 0404 	mla	r4, r7, r4, r0
 801acfc:	fb0c 4303 	mla	r3, ip, r3, r4
 801ad00:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ad04:	b1b3      	cbz	r3, 801ad34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801ad06:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801ad0a:	435a      	muls	r2, r3
 801ad0c:	1c53      	adds	r3, r2, #1
 801ad0e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ad12:	4a29      	ldr	r2, [pc, #164]	; (801adb8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 801ad14:	121b      	asrs	r3, r3, #8
 801ad16:	6812      	ldr	r2, [r2, #0]
 801ad18:	2bff      	cmp	r3, #255	; 0xff
 801ad1a:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ad1e:	d10b      	bne.n	801ad38 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 801ad20:	4b26      	ldr	r3, [pc, #152]	; (801adbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 801ad22:	0950      	lsrs	r0, r2, #5
 801ad24:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ad28:	4033      	ands	r3, r6
 801ad2a:	4318      	orrs	r0, r3
 801ad2c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ad30:	4302      	orrs	r2, r0
 801ad32:	800a      	strh	r2, [r1, #0]
 801ad34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ad38:	880d      	ldrh	r5, [r1, #0]
 801ad3a:	b29f      	uxth	r7, r3
 801ad3c:	122c      	asrs	r4, r5, #8
 801ad3e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801ad42:	43db      	mvns	r3, r3
 801ad44:	b2db      	uxtb	r3, r3
 801ad46:	fb10 f007 	smulbb	r0, r0, r7
 801ad4a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ad4e:	fb04 0403 	mla	r4, r4, r3, r0
 801ad52:	b2f6      	uxtb	r6, r6
 801ad54:	10e8      	asrs	r0, r5, #3
 801ad56:	b2d2      	uxtb	r2, r2
 801ad58:	00ed      	lsls	r5, r5, #3
 801ad5a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ad5e:	fb12 f207 	smulbb	r2, r2, r7
 801ad62:	fb16 f607 	smulbb	r6, r6, r7
 801ad66:	b2ed      	uxtb	r5, r5
 801ad68:	b2a4      	uxth	r4, r4
 801ad6a:	fb00 6603 	mla	r6, r0, r3, r6
 801ad6e:	fb05 2303 	mla	r3, r5, r3, r2
 801ad72:	b29a      	uxth	r2, r3
 801ad74:	1c63      	adds	r3, r4, #1
 801ad76:	b2b0      	uxth	r0, r6
 801ad78:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801ad7c:	1c53      	adds	r3, r2, #1
 801ad7e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ad82:	1c42      	adds	r2, r0, #1
 801ad84:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ad88:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ad8c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad90:	0940      	lsrs	r0, r0, #5
 801ad92:	4323      	orrs	r3, r4
 801ad94:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ad98:	4303      	orrs	r3, r0
 801ad9a:	800b      	strh	r3, [r1, #0]
 801ad9c:	e7ca      	b.n	801ad34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 801ad9e:	2d0f      	cmp	r5, #15
 801ada0:	f63f af7e 	bhi.w	801aca0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801ada4:	463b      	mov	r3, r7
 801ada6:	463c      	mov	r4, r7
 801ada8:	e794      	b.n	801acd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801adaa:	bf00      	nop
 801adac:	0801fdd3 	.word	0x0801fdd3
 801adb0:	08020302 	.word	0x08020302
 801adb4:	0801fda0 	.word	0x0801fda0
 801adb8:	2000a608 	.word	0x2000a608
 801adbc:	00fff800 	.word	0x00fff800

0801adc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801adc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adc4:	ed2d 8b08 	vpush	{d8-d11}
 801adc8:	b097      	sub	sp, #92	; 0x5c
 801adca:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801adce:	9214      	str	r2, [sp, #80]	; 0x50
 801add0:	9309      	str	r3, [sp, #36]	; 0x24
 801add2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801add4:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801add8:	910d      	str	r1, [sp, #52]	; 0x34
 801adda:	930f      	str	r3, [sp, #60]	; 0x3c
 801addc:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ade0:	9015      	str	r0, [sp, #84]	; 0x54
 801ade2:	6850      	ldr	r0, [r2, #4]
 801ade4:	6812      	ldr	r2, [r2, #0]
 801ade6:	fb00 1303 	mla	r3, r0, r3, r1
 801adea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801adee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801adf0:	689b      	ldr	r3, [r3, #8]
 801adf2:	3301      	adds	r3, #1
 801adf4:	f023 0301 	bic.w	r3, r3, #1
 801adf8:	930a      	str	r3, [sp, #40]	; 0x28
 801adfa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801adfc:	681f      	ldr	r7, [r3, #0]
 801adfe:	eeb0 aa40 	vmov.f32	s20, s0
 801ae02:	eef0 9a60 	vmov.f32	s19, s1
 801ae06:	eeb0 9a41 	vmov.f32	s18, s2
 801ae0a:	eeb0 8a62 	vmov.f32	s16, s5
 801ae0e:	eef0 8a43 	vmov.f32	s17, s6
 801ae12:	eef0 ba44 	vmov.f32	s23, s8
 801ae16:	eeb0 ba64 	vmov.f32	s22, s9
 801ae1a:	eef0 aa45 	vmov.f32	s21, s10
 801ae1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ae20:	2b00      	cmp	r3, #0
 801ae22:	dc03      	bgt.n	801ae2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ae24:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ae26:	2b00      	cmp	r3, #0
 801ae28:	f340 8287 	ble.w	801b33a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801ae2c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ae2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ae32:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ae36:	1e48      	subs	r0, r1, #1
 801ae38:	f102 3cff 	add.w	ip, r2, #4294967295
 801ae3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae3e:	2b00      	cmp	r3, #0
 801ae40:	f340 80c4 	ble.w	801afcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801ae44:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ae48:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ae4c:	d406      	bmi.n	801ae5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ae4e:	4586      	cmp	lr, r0
 801ae50:	da04      	bge.n	801ae5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ae52:	2b00      	cmp	r3, #0
 801ae54:	db02      	blt.n	801ae5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ae56:	4563      	cmp	r3, ip
 801ae58:	f2c0 80b9 	blt.w	801afce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ae5c:	f11e 0e01 	adds.w	lr, lr, #1
 801ae60:	f100 80aa 	bmi.w	801afb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ae64:	4571      	cmp	r1, lr
 801ae66:	f2c0 80a7 	blt.w	801afb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ae6a:	3301      	adds	r3, #1
 801ae6c:	f100 80a4 	bmi.w	801afb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ae70:	429a      	cmp	r2, r3
 801ae72:	f2c0 80a1 	blt.w	801afb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ae76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae78:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801ae7c:	930e      	str	r3, [sp, #56]	; 0x38
 801ae7e:	46c8      	mov	r8, r9
 801ae80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae82:	2b00      	cmp	r3, #0
 801ae84:	f340 80c3 	ble.w	801b00e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801ae88:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ae8a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ae8e:	1423      	asrs	r3, r4, #16
 801ae90:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ae94:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ae98:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ae9c:	f100 814d 	bmi.w	801b13a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801aea0:	f10c 3bff 	add.w	fp, ip, #4294967295
 801aea4:	455b      	cmp	r3, fp
 801aea6:	f280 8148 	bge.w	801b13a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801aeaa:	2800      	cmp	r0, #0
 801aeac:	f2c0 8145 	blt.w	801b13a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801aeb0:	f10e 3bff 	add.w	fp, lr, #4294967295
 801aeb4:	4558      	cmp	r0, fp
 801aeb6:	f280 8140 	bge.w	801b13a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801aeba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801aebc:	fb00 3305 	mla	r3, r0, r5, r3
 801aec0:	0858      	lsrs	r0, r3, #1
 801aec2:	07dd      	lsls	r5, r3, #31
 801aec4:	f817 c000 	ldrb.w	ip, [r7, r0]
 801aec8:	bf54      	ite	pl
 801aeca:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aece:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aed2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aed6:	fa5f fc8c 	uxtb.w	ip, ip
 801aeda:	2a00      	cmp	r2, #0
 801aedc:	f000 80db 	beq.w	801b096 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801aee0:	1c58      	adds	r0, r3, #1
 801aee2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801aee6:	07c0      	lsls	r0, r0, #31
 801aee8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801aeec:	bf54      	ite	pl
 801aeee:	f00e 0e0f 	andpl.w	lr, lr, #15
 801aef2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801aef6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801aefa:	fa5f f08e 	uxtb.w	r0, lr
 801aefe:	9010      	str	r0, [sp, #64]	; 0x40
 801af00:	b1c9      	cbz	r1, 801af36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801af02:	4453      	add	r3, sl
 801af04:	0858      	lsrs	r0, r3, #1
 801af06:	07dd      	lsls	r5, r3, #31
 801af08:	5c38      	ldrb	r0, [r7, r0]
 801af0a:	bf54      	ite	pl
 801af0c:	f000 000f 	andpl.w	r0, r0, #15
 801af10:	1100      	asrmi	r0, r0, #4
 801af12:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801af16:	3301      	adds	r3, #1
 801af18:	b2c0      	uxtb	r0, r0
 801af1a:	900b      	str	r0, [sp, #44]	; 0x2c
 801af1c:	0858      	lsrs	r0, r3, #1
 801af1e:	07dd      	lsls	r5, r3, #31
 801af20:	f817 e000 	ldrb.w	lr, [r7, r0]
 801af24:	bf54      	ite	pl
 801af26:	f00e 030f 	andpl.w	r3, lr, #15
 801af2a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801af2e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801af32:	b2db      	uxtb	r3, r3
 801af34:	9311      	str	r3, [sp, #68]	; 0x44
 801af36:	b292      	uxth	r2, r2
 801af38:	b289      	uxth	r1, r1
 801af3a:	fb02 f301 	mul.w	r3, r2, r1
 801af3e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801af42:	0112      	lsls	r2, r2, #4
 801af44:	b289      	uxth	r1, r1
 801af46:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801af4a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801af4c:	1ad2      	subs	r2, r2, r3
 801af4e:	1a40      	subs	r0, r0, r1
 801af50:	b292      	uxth	r2, r2
 801af52:	436a      	muls	r2, r5
 801af54:	b280      	uxth	r0, r0
 801af56:	fb0c 2c00 	mla	ip, ip, r0, r2
 801af5a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801af5c:	fb01 c102 	mla	r1, r1, r2, ip
 801af60:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801af62:	fb03 1302 	mla	r3, r3, r2, r1
 801af66:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801af6a:	b1db      	cbz	r3, 801afa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801af6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801af6e:	4353      	muls	r3, r2
 801af70:	1c5a      	adds	r2, r3, #1
 801af72:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801af76:	4ac6      	ldr	r2, [pc, #792]	; (801b290 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801af78:	121b      	asrs	r3, r3, #8
 801af7a:	6812      	ldr	r2, [r2, #0]
 801af7c:	2bff      	cmp	r3, #255	; 0xff
 801af7e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801af82:	f040 8099 	bne.w	801b0b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 801af86:	0953      	lsrs	r3, r2, #5
 801af88:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801af8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801af90:	f02c 0c07 	bic.w	ip, ip, #7
 801af94:	ea43 0c0c 	orr.w	ip, r3, ip
 801af98:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801af9c:	ea4c 0202 	orr.w	r2, ip, r2
 801afa0:	f8a8 2000 	strh.w	r2, [r8]
 801afa4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801afa6:	441c      	add	r4, r3
 801afa8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801afaa:	441e      	add	r6, r3
 801afac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801afae:	3b01      	subs	r3, #1
 801afb0:	f108 0802 	add.w	r8, r8, #2
 801afb4:	930e      	str	r3, [sp, #56]	; 0x38
 801afb6:	e763      	b.n	801ae80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 801afb8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801afba:	441c      	add	r4, r3
 801afbc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801afbe:	441e      	add	r6, r3
 801afc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afc2:	3b01      	subs	r3, #1
 801afc4:	9309      	str	r3, [sp, #36]	; 0x24
 801afc6:	f109 0902 	add.w	r9, r9, #2
 801afca:	e737      	b.n	801ae3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801afcc:	d024      	beq.n	801b018 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801afce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afd0:	982b      	ldr	r0, [sp, #172]	; 0xac
 801afd2:	3b01      	subs	r3, #1
 801afd4:	fb00 4003 	mla	r0, r0, r3, r4
 801afd8:	1400      	asrs	r0, r0, #16
 801afda:	f53f af4c 	bmi.w	801ae76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801afde:	3901      	subs	r1, #1
 801afe0:	4288      	cmp	r0, r1
 801afe2:	f6bf af48 	bge.w	801ae76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801afe6:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801afe8:	fb01 6303 	mla	r3, r1, r3, r6
 801afec:	141b      	asrs	r3, r3, #16
 801afee:	f53f af42 	bmi.w	801ae76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801aff2:	3a01      	subs	r2, #1
 801aff4:	4293      	cmp	r3, r2
 801aff6:	f6bf af3e 	bge.w	801ae76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801affa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801affe:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b002:	930e      	str	r3, [sp, #56]	; 0x38
 801b004:	46c8      	mov	r8, r9
 801b006:	f1bb 0f00 	cmp.w	fp, #0
 801b00a:	f300 80b7 	bgt.w	801b17c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801b00e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b010:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b014:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b018:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b01a:	2b00      	cmp	r3, #0
 801b01c:	f340 818d 	ble.w	801b33a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 801b020:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b024:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b028:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b02c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b02e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b032:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b036:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b03a:	eef0 6a48 	vmov.f32	s13, s16
 801b03e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b042:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b046:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b04a:	ee16 4a90 	vmov	r4, s13
 801b04e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b052:	eef0 6a68 	vmov.f32	s13, s17
 801b056:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b05a:	ee18 2a10 	vmov	r2, s16
 801b05e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b062:	fb92 f3f3 	sdiv	r3, r2, r3
 801b066:	ee18 2a90 	vmov	r2, s17
 801b06a:	932b      	str	r3, [sp, #172]	; 0xac
 801b06c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b06e:	fb92 f3f3 	sdiv	r3, r2, r3
 801b072:	932c      	str	r3, [sp, #176]	; 0xb0
 801b074:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b076:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b078:	3b01      	subs	r3, #1
 801b07a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b07e:	930d      	str	r3, [sp, #52]	; 0x34
 801b080:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b082:	bf08      	it	eq
 801b084:	4613      	moveq	r3, r2
 801b086:	ee16 6a90 	vmov	r6, s13
 801b08a:	9309      	str	r3, [sp, #36]	; 0x24
 801b08c:	eef0 8a67 	vmov.f32	s17, s15
 801b090:	eeb0 8a47 	vmov.f32	s16, s14
 801b094:	e6c3      	b.n	801ae1e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b096:	2900      	cmp	r1, #0
 801b098:	f43f af4d 	beq.w	801af36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801b09c:	eb0a 0003 	add.w	r0, sl, r3
 801b0a0:	0843      	lsrs	r3, r0, #1
 801b0a2:	07c0      	lsls	r0, r0, #31
 801b0a4:	5cfb      	ldrb	r3, [r7, r3]
 801b0a6:	bf54      	ite	pl
 801b0a8:	f003 030f 	andpl.w	r3, r3, #15
 801b0ac:	111b      	asrmi	r3, r3, #4
 801b0ae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b0b2:	b2db      	uxtb	r3, r3
 801b0b4:	930b      	str	r3, [sp, #44]	; 0x2c
 801b0b6:	e73e      	b.n	801af36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801b0b8:	f8b8 e000 	ldrh.w	lr, [r8]
 801b0bc:	fa1f fb83 	uxth.w	fp, r3
 801b0c0:	ea4f 202e 	mov.w	r0, lr, asr #8
 801b0c4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b0c8:	43db      	mvns	r3, r3
 801b0ca:	b2db      	uxtb	r3, r3
 801b0cc:	fb11 f10b 	smulbb	r1, r1, fp
 801b0d0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b0d4:	fb00 1003 	mla	r0, r0, r3, r1
 801b0d8:	fa5f fc8c 	uxtb.w	ip, ip
 801b0dc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801b0e0:	b2d2      	uxtb	r2, r2
 801b0e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b0e6:	b280      	uxth	r0, r0
 801b0e8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b0ec:	fb1c fc0b 	smulbb	ip, ip, fp
 801b0f0:	fa5f fe8e 	uxtb.w	lr, lr
 801b0f4:	fb12 fb0b 	smulbb	fp, r2, fp
 801b0f8:	fb01 cc03 	mla	ip, r1, r3, ip
 801b0fc:	fb0e bb03 	mla	fp, lr, r3, fp
 801b100:	1c43      	adds	r3, r0, #1
 801b102:	fa1f fc8c 	uxth.w	ip, ip
 801b106:	fa1f fb8b 	uxth.w	fp, fp
 801b10a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b10e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801b112:	f10c 0101 	add.w	r1, ip, #1
 801b116:	f10b 0001 	add.w	r0, fp, #1
 801b11a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801b11e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b122:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b126:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b12a:	4318      	orrs	r0, r3
 801b12c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b130:	ea40 000c 	orr.w	r0, r0, ip
 801b134:	f8a8 0000 	strh.w	r0, [r8]
 801b138:	e734      	b.n	801afa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b13a:	f113 0b01 	adds.w	fp, r3, #1
 801b13e:	f53f af31 	bmi.w	801afa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b142:	45dc      	cmp	ip, fp
 801b144:	f6ff af2e 	blt.w	801afa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b148:	f110 0b01 	adds.w	fp, r0, #1
 801b14c:	f53f af2a 	bmi.w	801afa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b150:	45de      	cmp	lr, fp
 801b152:	f6ff af27 	blt.w	801afa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b156:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b158:	9302      	str	r3, [sp, #8]
 801b15a:	fa0f f38e 	sxth.w	r3, lr
 801b15e:	9301      	str	r3, [sp, #4]
 801b160:	fa0f f38c 	sxth.w	r3, ip
 801b164:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b168:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801b16c:	9300      	str	r3, [sp, #0]
 801b16e:	463a      	mov	r2, r7
 801b170:	4653      	mov	r3, sl
 801b172:	4641      	mov	r1, r8
 801b174:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b176:	f7ff fd2b 	bl	801abd0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801b17a:	e713      	b.n	801afa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801b17c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801b17e:	1422      	asrs	r2, r4, #16
 801b180:	1433      	asrs	r3, r6, #16
 801b182:	fb05 2303 	mla	r3, r5, r3, r2
 801b186:	085a      	lsrs	r2, r3, #1
 801b188:	07dd      	lsls	r5, r3, #31
 801b18a:	5cba      	ldrb	r2, [r7, r2]
 801b18c:	bf54      	ite	pl
 801b18e:	f002 020f 	andpl.w	r2, r2, #15
 801b192:	1112      	asrmi	r2, r2, #4
 801b194:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b198:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b19c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b1a0:	b2d2      	uxtb	r2, r2
 801b1a2:	2900      	cmp	r1, #0
 801b1a4:	d076      	beq.n	801b294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801b1a6:	f103 0e01 	add.w	lr, r3, #1
 801b1aa:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801b1ae:	f01e 0f01 	tst.w	lr, #1
 801b1b2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b1b6:	bf0c      	ite	eq
 801b1b8:	f00c 0c0f 	andeq.w	ip, ip, #15
 801b1bc:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801b1c0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b1c4:	fa5f f58c 	uxtb.w	r5, ip
 801b1c8:	9512      	str	r5, [sp, #72]	; 0x48
 801b1ca:	b300      	cbz	r0, 801b20e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b1cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b1ce:	442b      	add	r3, r5
 801b1d0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b1d4:	07dd      	lsls	r5, r3, #31
 801b1d6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b1da:	bf54      	ite	pl
 801b1dc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b1e0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b1e4:	3301      	adds	r3, #1
 801b1e6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b1ea:	fa5f f58c 	uxtb.w	r5, ip
 801b1ee:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b1f2:	950c      	str	r5, [sp, #48]	; 0x30
 801b1f4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b1f8:	07dd      	lsls	r5, r3, #31
 801b1fa:	bf54      	ite	pl
 801b1fc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b200:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b204:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b208:	fa5f f38c 	uxtb.w	r3, ip
 801b20c:	9313      	str	r3, [sp, #76]	; 0x4c
 801b20e:	b289      	uxth	r1, r1
 801b210:	b280      	uxth	r0, r0
 801b212:	fb01 f300 	mul.w	r3, r1, r0
 801b216:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801b21a:	0109      	lsls	r1, r1, #4
 801b21c:	b280      	uxth	r0, r0
 801b21e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801b222:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b224:	1ac9      	subs	r1, r1, r3
 801b226:	ebac 0c00 	sub.w	ip, ip, r0
 801b22a:	b289      	uxth	r1, r1
 801b22c:	4369      	muls	r1, r5
 801b22e:	fa1f fc8c 	uxth.w	ip, ip
 801b232:	fb02 120c 	mla	r2, r2, ip, r1
 801b236:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b238:	fb00 2001 	mla	r0, r0, r1, r2
 801b23c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b23e:	fb03 0302 	mla	r3, r3, r2, r0
 801b242:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b246:	b1d3      	cbz	r3, 801b27e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801b248:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b24a:	4353      	muls	r3, r2
 801b24c:	1c5a      	adds	r2, r3, #1
 801b24e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801b252:	4a0f      	ldr	r2, [pc, #60]	; (801b290 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801b254:	121b      	asrs	r3, r3, #8
 801b256:	6812      	ldr	r2, [r2, #0]
 801b258:	2bff      	cmp	r3, #255	; 0xff
 801b25a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801b25e:	d12d      	bne.n	801b2bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801b260:	0953      	lsrs	r3, r2, #5
 801b262:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801b266:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b26a:	f02c 0c07 	bic.w	ip, ip, #7
 801b26e:	ea43 0c0c 	orr.w	ip, r3, ip
 801b272:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b276:	ea4c 0202 	orr.w	r2, ip, r2
 801b27a:	f8a8 2000 	strh.w	r2, [r8]
 801b27e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b280:	441c      	add	r4, r3
 801b282:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b284:	f108 0802 	add.w	r8, r8, #2
 801b288:	441e      	add	r6, r3
 801b28a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b28e:	e6ba      	b.n	801b006 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801b290:	2000a608 	.word	0x2000a608
 801b294:	2800      	cmp	r0, #0
 801b296:	d0ba      	beq.n	801b20e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b298:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b29a:	442b      	add	r3, r5
 801b29c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801b2a0:	07db      	lsls	r3, r3, #31
 801b2a2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801b2a6:	bf54      	ite	pl
 801b2a8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b2ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b2b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b2b4:	fa5f f38c 	uxtb.w	r3, ip
 801b2b8:	930c      	str	r3, [sp, #48]	; 0x30
 801b2ba:	e7a8      	b.n	801b20e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b2bc:	f8b8 e000 	ldrh.w	lr, [r8]
 801b2c0:	fa1f fa83 	uxth.w	sl, r3
 801b2c4:	ea4f 202e 	mov.w	r0, lr, asr #8
 801b2c8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b2cc:	43db      	mvns	r3, r3
 801b2ce:	b2db      	uxtb	r3, r3
 801b2d0:	fb11 f10a 	smulbb	r1, r1, sl
 801b2d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b2d8:	fb00 1003 	mla	r0, r0, r3, r1
 801b2dc:	b2d2      	uxtb	r2, r2
 801b2de:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801b2e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b2e6:	fa5f fe8e 	uxtb.w	lr, lr
 801b2ea:	fb12 f20a 	smulbb	r2, r2, sl
 801b2ee:	fb0e 2203 	mla	r2, lr, r3, r2
 801b2f2:	fa5f fc8c 	uxtb.w	ip, ip
 801b2f6:	b280      	uxth	r0, r0
 801b2f8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b2fc:	b292      	uxth	r2, r2
 801b2fe:	fb1c fc0a 	smulbb	ip, ip, sl
 801b302:	fb01 cc03 	mla	ip, r1, r3, ip
 801b306:	1c43      	adds	r3, r0, #1
 801b308:	1c51      	adds	r1, r2, #1
 801b30a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b30e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801b312:	fa1f fc8c 	uxth.w	ip, ip
 801b316:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b31a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b31e:	4308      	orrs	r0, r1
 801b320:	f10c 0101 	add.w	r1, ip, #1
 801b324:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801b328:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b32c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b330:	ea40 000c 	orr.w	r0, r0, ip
 801b334:	f8a8 0000 	strh.w	r0, [r8]
 801b338:	e7a1      	b.n	801b27e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801b33a:	b017      	add	sp, #92	; 0x5c
 801b33c:	ecbd 8b08 	vpop	{d8-d11}
 801b340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b344 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801b344:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b348:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801b34c:	2c00      	cmp	r4, #0
 801b34e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b352:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b356:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b35a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801b35e:	fb04 ce03 	mla	lr, r4, r3, ip
 801b362:	db60      	blt.n	801b426 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b364:	45a1      	cmp	r9, r4
 801b366:	dd5e      	ble.n	801b426 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801b368:	f1bc 0f00 	cmp.w	ip, #0
 801b36c:	db59      	blt.n	801b422 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b36e:	45e0      	cmp	r8, ip
 801b370:	dd57      	ble.n	801b422 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801b372:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b376:	f01e 0f01 	tst.w	lr, #1
 801b37a:	5c16      	ldrb	r6, [r2, r0]
 801b37c:	bf0c      	ite	eq
 801b37e:	f006 060f 	andeq.w	r6, r6, #15
 801b382:	1136      	asrne	r6, r6, #4
 801b384:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b388:	b2f6      	uxtb	r6, r6
 801b38a:	f11c 0001 	adds.w	r0, ip, #1
 801b38e:	d44d      	bmi.n	801b42c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b390:	4580      	cmp	r8, r0
 801b392:	dd4b      	ble.n	801b42c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801b394:	2d00      	cmp	r5, #0
 801b396:	d04b      	beq.n	801b430 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801b398:	f10e 0a01 	add.w	sl, lr, #1
 801b39c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b3a0:	f01a 0f01 	tst.w	sl, #1
 801b3a4:	5c10      	ldrb	r0, [r2, r0]
 801b3a6:	bf0c      	ite	eq
 801b3a8:	f000 000f 	andeq.w	r0, r0, #15
 801b3ac:	1100      	asrne	r0, r0, #4
 801b3ae:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b3b2:	b2c0      	uxtb	r0, r0
 801b3b4:	3401      	adds	r4, #1
 801b3b6:	d43f      	bmi.n	801b438 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b3b8:	45a1      	cmp	r9, r4
 801b3ba:	dd3d      	ble.n	801b438 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801b3bc:	2f00      	cmp	r7, #0
 801b3be:	f000 8093 	beq.w	801b4e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801b3c2:	f1bc 0f00 	cmp.w	ip, #0
 801b3c6:	db35      	blt.n	801b434 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b3c8:	45e0      	cmp	r8, ip
 801b3ca:	dd33      	ble.n	801b434 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801b3cc:	eb03 090e 	add.w	r9, r3, lr
 801b3d0:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801b3d4:	f019 0f01 	tst.w	r9, #1
 801b3d8:	5d14      	ldrb	r4, [r2, r4]
 801b3da:	bf0c      	ite	eq
 801b3dc:	f004 040f 	andeq.w	r4, r4, #15
 801b3e0:	1124      	asrne	r4, r4, #4
 801b3e2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b3e6:	b2e4      	uxtb	r4, r4
 801b3e8:	f11c 0c01 	adds.w	ip, ip, #1
 801b3ec:	d427      	bmi.n	801b43e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b3ee:	45e0      	cmp	r8, ip
 801b3f0:	dd25      	ble.n	801b43e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801b3f2:	b335      	cbz	r5, 801b442 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801b3f4:	3301      	adds	r3, #1
 801b3f6:	449e      	add	lr, r3
 801b3f8:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b3fc:	f01e 0f01 	tst.w	lr, #1
 801b400:	5cd2      	ldrb	r2, [r2, r3]
 801b402:	bf0c      	ite	eq
 801b404:	f002 020f 	andeq.w	r2, r2, #15
 801b408:	1112      	asrne	r2, r2, #4
 801b40a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b40e:	b2d3      	uxtb	r3, r2
 801b410:	2d0f      	cmp	r5, #15
 801b412:	d917      	bls.n	801b444 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801b414:	4b37      	ldr	r3, [pc, #220]	; (801b4f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801b416:	4a38      	ldr	r2, [pc, #224]	; (801b4f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801b418:	4838      	ldr	r0, [pc, #224]	; (801b4fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801b41a:	f240 11f9 	movw	r1, #505	; 0x1f9
 801b41e:	f000 fc69 	bl	801bcf4 <__assert_func>
 801b422:	2600      	movs	r6, #0
 801b424:	e7b1      	b.n	801b38a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801b426:	2000      	movs	r0, #0
 801b428:	4606      	mov	r6, r0
 801b42a:	e7c3      	b.n	801b3b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b42c:	2000      	movs	r0, #0
 801b42e:	e7c1      	b.n	801b3b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b430:	4628      	mov	r0, r5
 801b432:	e7bf      	b.n	801b3b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801b434:	2400      	movs	r4, #0
 801b436:	e7d7      	b.n	801b3e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801b438:	2300      	movs	r3, #0
 801b43a:	461c      	mov	r4, r3
 801b43c:	e7e8      	b.n	801b410 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b43e:	2300      	movs	r3, #0
 801b440:	e7e6      	b.n	801b410 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801b442:	462b      	mov	r3, r5
 801b444:	2f0f      	cmp	r7, #15
 801b446:	d8e5      	bhi.n	801b414 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b448:	b2ad      	uxth	r5, r5
 801b44a:	b2bf      	uxth	r7, r7
 801b44c:	fb05 fc07 	mul.w	ip, r5, r7
 801b450:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801b454:	012d      	lsls	r5, r5, #4
 801b456:	b2bf      	uxth	r7, r7
 801b458:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801b45c:	eba5 050c 	sub.w	r5, r5, ip
 801b460:	1bd2      	subs	r2, r2, r7
 801b462:	b2ad      	uxth	r5, r5
 801b464:	b292      	uxth	r2, r2
 801b466:	4368      	muls	r0, r5
 801b468:	fb06 0002 	mla	r0, r6, r2, r0
 801b46c:	fb07 0404 	mla	r4, r7, r4, r0
 801b470:	fb0c 4303 	mla	r3, ip, r3, r4
 801b474:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b478:	b3a3      	cbz	r3, 801b4e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801b47a:	4a21      	ldr	r2, [pc, #132]	; (801b500 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801b47c:	880e      	ldrh	r6, [r1, #0]
 801b47e:	6815      	ldr	r5, [r2, #0]
 801b480:	1234      	asrs	r4, r6, #8
 801b482:	b29a      	uxth	r2, r3
 801b484:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801b488:	43db      	mvns	r3, r3
 801b48a:	b2db      	uxtb	r3, r3
 801b48c:	fb10 f002 	smulbb	r0, r0, r2
 801b490:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b494:	fb04 0403 	mla	r4, r4, r3, r0
 801b498:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801b49c:	10f0      	asrs	r0, r6, #3
 801b49e:	b2ed      	uxtb	r5, r5
 801b4a0:	00f6      	lsls	r6, r6, #3
 801b4a2:	fb17 f702 	smulbb	r7, r7, r2
 801b4a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b4aa:	fb15 f202 	smulbb	r2, r5, r2
 801b4ae:	b2f6      	uxtb	r6, r6
 801b4b0:	b2a4      	uxth	r4, r4
 801b4b2:	fb00 7003 	mla	r0, r0, r3, r7
 801b4b6:	fb06 2303 	mla	r3, r6, r3, r2
 801b4ba:	b29a      	uxth	r2, r3
 801b4bc:	1c63      	adds	r3, r4, #1
 801b4be:	b280      	uxth	r0, r0
 801b4c0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801b4c4:	1c53      	adds	r3, r2, #1
 801b4c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b4ca:	1c42      	adds	r2, r0, #1
 801b4cc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b4d0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b4d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b4d8:	0940      	lsrs	r0, r0, #5
 801b4da:	4323      	orrs	r3, r4
 801b4dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b4e0:	4303      	orrs	r3, r0
 801b4e2:	800b      	strh	r3, [r1, #0]
 801b4e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b4e8:	2d0f      	cmp	r5, #15
 801b4ea:	d893      	bhi.n	801b414 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801b4ec:	463b      	mov	r3, r7
 801b4ee:	463c      	mov	r4, r7
 801b4f0:	e7aa      	b.n	801b448 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801b4f2:	bf00      	nop
 801b4f4:	0801fdd3 	.word	0x0801fdd3
 801b4f8:	08020302 	.word	0x08020302
 801b4fc:	0801fda0 	.word	0x0801fda0
 801b500:	2000a608 	.word	0x2000a608

0801b504 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b508:	ed2d 8b08 	vpush	{d8-d11}
 801b50c:	b093      	sub	sp, #76	; 0x4c
 801b50e:	461d      	mov	r5, r3
 801b510:	920c      	str	r2, [sp, #48]	; 0x30
 801b512:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b514:	9107      	str	r1, [sp, #28]
 801b516:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b51a:	9011      	str	r0, [sp, #68]	; 0x44
 801b51c:	6850      	ldr	r0, [r2, #4]
 801b51e:	6812      	ldr	r2, [r2, #0]
 801b520:	fb00 1303 	mla	r3, r0, r3, r1
 801b524:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b528:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b52a:	689b      	ldr	r3, [r3, #8]
 801b52c:	3301      	adds	r3, #1
 801b52e:	f023 0301 	bic.w	r3, r3, #1
 801b532:	9306      	str	r3, [sp, #24]
 801b534:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b536:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801b53a:	681f      	ldr	r7, [r3, #0]
 801b53c:	eeb0 aa40 	vmov.f32	s20, s0
 801b540:	eef0 9a60 	vmov.f32	s19, s1
 801b544:	eeb0 9a41 	vmov.f32	s18, s2
 801b548:	eeb0 8a62 	vmov.f32	s16, s5
 801b54c:	eef0 8a43 	vmov.f32	s17, s6
 801b550:	eef0 ba44 	vmov.f32	s23, s8
 801b554:	eeb0 ba64 	vmov.f32	s22, s9
 801b558:	eef0 aa45 	vmov.f32	s21, s10
 801b55c:	9b07      	ldr	r3, [sp, #28]
 801b55e:	2b00      	cmp	r3, #0
 801b560:	dc03      	bgt.n	801b56a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b562:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b564:	2b00      	cmp	r3, #0
 801b566:	f340 8267 	ble.w	801ba38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b56a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b56c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b570:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b574:	1e48      	subs	r0, r1, #1
 801b576:	f102 3cff 	add.w	ip, r2, #4294967295
 801b57a:	2d00      	cmp	r5, #0
 801b57c:	f340 80b8 	ble.w	801b6f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801b580:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b584:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b588:	d406      	bmi.n	801b598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b58a:	4586      	cmp	lr, r0
 801b58c:	da04      	bge.n	801b598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b58e:	2b00      	cmp	r3, #0
 801b590:	db02      	blt.n	801b598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b592:	4563      	cmp	r3, ip
 801b594:	f2c0 80ad 	blt.w	801b6f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b598:	f11e 0e01 	adds.w	lr, lr, #1
 801b59c:	f100 80a0 	bmi.w	801b6e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b5a0:	4571      	cmp	r1, lr
 801b5a2:	f2c0 809d 	blt.w	801b6e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b5a6:	3301      	adds	r3, #1
 801b5a8:	f100 809a 	bmi.w	801b6e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b5ac:	429a      	cmp	r2, r3
 801b5ae:	f2c0 8097 	blt.w	801b6e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801b5b2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801b5b6:	9509      	str	r5, [sp, #36]	; 0x24
 801b5b8:	46c8      	mov	r8, r9
 801b5ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b5bc:	2b00      	cmp	r3, #0
 801b5be:	f340 80b6 	ble.w	801b72e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b5c2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801b5c6:	9308      	str	r3, [sp, #32]
 801b5c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5ca:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801b5ce:	1423      	asrs	r3, r4, #16
 801b5d0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b5d4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b5d8:	f100 813e 	bmi.w	801b858 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b5dc:	f10c 3bff 	add.w	fp, ip, #4294967295
 801b5e0:	455b      	cmp	r3, fp
 801b5e2:	f280 8139 	bge.w	801b858 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b5e6:	2800      	cmp	r0, #0
 801b5e8:	f2c0 8136 	blt.w	801b858 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b5ec:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b5f0:	4558      	cmp	r0, fp
 801b5f2:	f280 8131 	bge.w	801b858 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b5f6:	9a06      	ldr	r2, [sp, #24]
 801b5f8:	fb00 3302 	mla	r3, r0, r2, r3
 801b5fc:	0858      	lsrs	r0, r3, #1
 801b5fe:	07da      	lsls	r2, r3, #31
 801b600:	f817 c000 	ldrb.w	ip, [r7, r0]
 801b604:	9a08      	ldr	r2, [sp, #32]
 801b606:	bf54      	ite	pl
 801b608:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b60c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b610:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b614:	fa5f fc8c 	uxtb.w	ip, ip
 801b618:	2a00      	cmp	r2, #0
 801b61a:	f000 80cb 	beq.w	801b7b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801b61e:	1c58      	adds	r0, r3, #1
 801b620:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801b624:	07c0      	lsls	r0, r0, #31
 801b626:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b62a:	bf54      	ite	pl
 801b62c:	f00e 0e0f 	andpl.w	lr, lr, #15
 801b630:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801b634:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801b638:	fa5f fe8e 	uxtb.w	lr, lr
 801b63c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801b640:	b1b9      	cbz	r1, 801b672 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b642:	4453      	add	r3, sl
 801b644:	0858      	lsrs	r0, r3, #1
 801b646:	07da      	lsls	r2, r3, #31
 801b648:	5c38      	ldrb	r0, [r7, r0]
 801b64a:	bf54      	ite	pl
 801b64c:	f000 000f 	andpl.w	r0, r0, #15
 801b650:	1100      	asrmi	r0, r0, #4
 801b652:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b656:	b2c0      	uxtb	r0, r0
 801b658:	900a      	str	r0, [sp, #40]	; 0x28
 801b65a:	1c58      	adds	r0, r3, #1
 801b65c:	0843      	lsrs	r3, r0, #1
 801b65e:	07c2      	lsls	r2, r0, #31
 801b660:	5cfb      	ldrb	r3, [r7, r3]
 801b662:	bf54      	ite	pl
 801b664:	f003 030f 	andpl.w	r3, r3, #15
 801b668:	111b      	asrmi	r3, r3, #4
 801b66a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b66e:	b2db      	uxtb	r3, r3
 801b670:	930e      	str	r3, [sp, #56]	; 0x38
 801b672:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b676:	b289      	uxth	r1, r1
 801b678:	fb02 f301 	mul.w	r3, r2, r1
 801b67c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b680:	0112      	lsls	r2, r2, #4
 801b682:	b289      	uxth	r1, r1
 801b684:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801b688:	1a40      	subs	r0, r0, r1
 801b68a:	fa1f fe80 	uxth.w	lr, r0
 801b68e:	1ad2      	subs	r2, r2, r3
 801b690:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b692:	b292      	uxth	r2, r2
 801b694:	4342      	muls	r2, r0
 801b696:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801b69a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b69c:	fb01 c102 	mla	r1, r1, r2, ip
 801b6a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b6a2:	fb03 1302 	mla	r3, r3, r2, r1
 801b6a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b6aa:	2bff      	cmp	r3, #255	; 0xff
 801b6ac:	f040 8093 	bne.w	801b7d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801b6b0:	4bbe      	ldr	r3, [pc, #760]	; (801b9ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b6b2:	681a      	ldr	r2, [r3, #0]
 801b6b4:	4bbe      	ldr	r3, [pc, #760]	; (801b9b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b6b6:	0951      	lsrs	r1, r2, #5
 801b6b8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b6bc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b6c0:	430b      	orrs	r3, r1
 801b6c2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b6c6:	4313      	orrs	r3, r2
 801b6c8:	f8a8 3000 	strh.w	r3, [r8]
 801b6cc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b6ce:	441c      	add	r4, r3
 801b6d0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b6d2:	441e      	add	r6, r3
 801b6d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b6d6:	3b01      	subs	r3, #1
 801b6d8:	f108 0802 	add.w	r8, r8, #2
 801b6dc:	9309      	str	r3, [sp, #36]	; 0x24
 801b6de:	e76c      	b.n	801b5ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801b6e0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b6e2:	441c      	add	r4, r3
 801b6e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b6e6:	3d01      	subs	r5, #1
 801b6e8:	441e      	add	r6, r3
 801b6ea:	f109 0902 	add.w	r9, r9, #2
 801b6ee:	e744      	b.n	801b57a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b6f0:	d021      	beq.n	801b736 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801b6f2:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b6f4:	1e6b      	subs	r3, r5, #1
 801b6f6:	fb00 4003 	mla	r0, r0, r3, r4
 801b6fa:	1400      	asrs	r0, r0, #16
 801b6fc:	f53f af59 	bmi.w	801b5b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b700:	3901      	subs	r1, #1
 801b702:	4288      	cmp	r0, r1
 801b704:	f6bf af55 	bge.w	801b5b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b708:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b70a:	fb01 6303 	mla	r3, r1, r3, r6
 801b70e:	141b      	asrs	r3, r3, #16
 801b710:	f53f af4f 	bmi.w	801b5b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b714:	3a01      	subs	r2, #1
 801b716:	4293      	cmp	r3, r2
 801b718:	f6bf af4b 	bge.w	801b5b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b71c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801b720:	9308      	str	r3, [sp, #32]
 801b722:	46a8      	mov	r8, r5
 801b724:	46ce      	mov	lr, r9
 801b726:	f1b8 0f00 	cmp.w	r8, #0
 801b72a:	f300 80b5 	bgt.w	801b898 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801b72e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b732:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b736:	9b07      	ldr	r3, [sp, #28]
 801b738:	2b00      	cmp	r3, #0
 801b73a:	f340 817d 	ble.w	801ba38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801b73e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b742:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b746:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b74a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b74c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b750:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b754:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b758:	eef0 6a48 	vmov.f32	s13, s16
 801b75c:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b760:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b764:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b768:	ee16 4a90 	vmov	r4, s13
 801b76c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b770:	eef0 6a68 	vmov.f32	s13, s17
 801b774:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b778:	ee18 2a10 	vmov	r2, s16
 801b77c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b780:	fb92 f3f3 	sdiv	r3, r2, r3
 801b784:	ee18 2a90 	vmov	r2, s17
 801b788:	9327      	str	r3, [sp, #156]	; 0x9c
 801b78a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b78c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b790:	9328      	str	r3, [sp, #160]	; 0xa0
 801b792:	9b07      	ldr	r3, [sp, #28]
 801b794:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b796:	3b01      	subs	r3, #1
 801b798:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b79c:	9307      	str	r3, [sp, #28]
 801b79e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b7a0:	ee16 6a90 	vmov	r6, s13
 801b7a4:	bf14      	ite	ne
 801b7a6:	461d      	movne	r5, r3
 801b7a8:	4615      	moveq	r5, r2
 801b7aa:	eef0 8a67 	vmov.f32	s17, s15
 801b7ae:	eeb0 8a47 	vmov.f32	s16, s14
 801b7b2:	e6d3      	b.n	801b55c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b7b4:	2900      	cmp	r1, #0
 801b7b6:	f43f af5c 	beq.w	801b672 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b7ba:	eb0a 0003 	add.w	r0, sl, r3
 801b7be:	0843      	lsrs	r3, r0, #1
 801b7c0:	07c0      	lsls	r0, r0, #31
 801b7c2:	5cfb      	ldrb	r3, [r7, r3]
 801b7c4:	bf54      	ite	pl
 801b7c6:	f003 030f 	andpl.w	r3, r3, #15
 801b7ca:	111b      	asrmi	r3, r3, #4
 801b7cc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b7d0:	b2db      	uxtb	r3, r3
 801b7d2:	930a      	str	r3, [sp, #40]	; 0x28
 801b7d4:	e74d      	b.n	801b672 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b7d6:	2b00      	cmp	r3, #0
 801b7d8:	f43f af78 	beq.w	801b6cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b7dc:	4a73      	ldr	r2, [pc, #460]	; (801b9ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b7de:	f8b8 c000 	ldrh.w	ip, [r8]
 801b7e2:	6810      	ldr	r0, [r2, #0]
 801b7e4:	fa1f fe83 	uxth.w	lr, r3
 801b7e8:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b7ec:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b7f0:	43db      	mvns	r3, r3
 801b7f2:	b2db      	uxtb	r3, r3
 801b7f4:	fb12 f20e 	smulbb	r2, r2, lr
 801b7f8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b7fc:	fb01 2103 	mla	r1, r1, r3, r2
 801b800:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b804:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b808:	b2c0      	uxtb	r0, r0
 801b80a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b80e:	fb1b fb0e 	smulbb	fp, fp, lr
 801b812:	b289      	uxth	r1, r1
 801b814:	fb10 fe0e 	smulbb	lr, r0, lr
 801b818:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b81c:	fa5f fc8c 	uxtb.w	ip, ip
 801b820:	fb02 b203 	mla	r2, r2, r3, fp
 801b824:	1c48      	adds	r0, r1, #1
 801b826:	fb0c e303 	mla	r3, ip, r3, lr
 801b82a:	b292      	uxth	r2, r2
 801b82c:	b29b      	uxth	r3, r3
 801b82e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801b832:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801b836:	f102 0b01 	add.w	fp, r2, #1
 801b83a:	1c59      	adds	r1, r3, #1
 801b83c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b840:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b844:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b848:	0952      	lsrs	r2, r2, #5
 801b84a:	4301      	orrs	r1, r0
 801b84c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b850:	4311      	orrs	r1, r2
 801b852:	f8a8 1000 	strh.w	r1, [r8]
 801b856:	e739      	b.n	801b6cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b858:	f113 0b01 	adds.w	fp, r3, #1
 801b85c:	f53f af36 	bmi.w	801b6cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b860:	45dc      	cmp	ip, fp
 801b862:	f6ff af33 	blt.w	801b6cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b866:	f110 0b01 	adds.w	fp, r0, #1
 801b86a:	f53f af2f 	bmi.w	801b6cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b86e:	45de      	cmp	lr, fp
 801b870:	f6ff af2c 	blt.w	801b6cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b874:	9a08      	ldr	r2, [sp, #32]
 801b876:	9302      	str	r3, [sp, #8]
 801b878:	fa0f f38e 	sxth.w	r3, lr
 801b87c:	9301      	str	r3, [sp, #4]
 801b87e:	fa0f f38c 	sxth.w	r3, ip
 801b882:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b886:	9105      	str	r1, [sp, #20]
 801b888:	9300      	str	r3, [sp, #0]
 801b88a:	463a      	mov	r2, r7
 801b88c:	4653      	mov	r3, sl
 801b88e:	4641      	mov	r1, r8
 801b890:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b892:	f7ff fd57 	bl	801b344 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b896:	e719      	b.n	801b6cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b898:	9906      	ldr	r1, [sp, #24]
 801b89a:	1422      	asrs	r2, r4, #16
 801b89c:	1433      	asrs	r3, r6, #16
 801b89e:	fb01 2303 	mla	r3, r1, r3, r2
 801b8a2:	085a      	lsrs	r2, r3, #1
 801b8a4:	07d9      	lsls	r1, r3, #31
 801b8a6:	5cba      	ldrb	r2, [r7, r2]
 801b8a8:	bf54      	ite	pl
 801b8aa:	f002 020f 	andpl.w	r2, r2, #15
 801b8ae:	1112      	asrmi	r2, r2, #4
 801b8b0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b8b4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b8b8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b8bc:	b2d2      	uxtb	r2, r2
 801b8be:	2800      	cmp	r0, #0
 801b8c0:	d062      	beq.n	801b988 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b8c2:	f103 0a01 	add.w	sl, r3, #1
 801b8c6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801b8ca:	f01a 0f01 	tst.w	sl, #1
 801b8ce:	5c79      	ldrb	r1, [r7, r1]
 801b8d0:	bf0c      	ite	eq
 801b8d2:	f001 010f 	andeq.w	r1, r1, #15
 801b8d6:	1109      	asrne	r1, r1, #4
 801b8d8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b8dc:	b2c9      	uxtb	r1, r1
 801b8de:	910f      	str	r1, [sp, #60]	; 0x3c
 801b8e0:	f1bc 0f00 	cmp.w	ip, #0
 801b8e4:	d019      	beq.n	801b91a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b8e6:	9908      	ldr	r1, [sp, #32]
 801b8e8:	440b      	add	r3, r1
 801b8ea:	0859      	lsrs	r1, r3, #1
 801b8ec:	f013 0f01 	tst.w	r3, #1
 801b8f0:	5c79      	ldrb	r1, [r7, r1]
 801b8f2:	bf0c      	ite	eq
 801b8f4:	f001 010f 	andeq.w	r1, r1, #15
 801b8f8:	1109      	asrne	r1, r1, #4
 801b8fa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b8fe:	b2c9      	uxtb	r1, r1
 801b900:	3301      	adds	r3, #1
 801b902:	910b      	str	r1, [sp, #44]	; 0x2c
 801b904:	0859      	lsrs	r1, r3, #1
 801b906:	07db      	lsls	r3, r3, #31
 801b908:	5c79      	ldrb	r1, [r7, r1]
 801b90a:	bf54      	ite	pl
 801b90c:	f001 010f 	andpl.w	r1, r1, #15
 801b910:	1109      	asrmi	r1, r1, #4
 801b912:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b916:	b2c9      	uxtb	r1, r1
 801b918:	9110      	str	r1, [sp, #64]	; 0x40
 801b91a:	b280      	uxth	r0, r0
 801b91c:	fa1f fc8c 	uxth.w	ip, ip
 801b920:	fb00 f30c 	mul.w	r3, r0, ip
 801b924:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b928:	0100      	lsls	r0, r0, #4
 801b92a:	fa1f fc8c 	uxth.w	ip, ip
 801b92e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b932:	eba1 010c 	sub.w	r1, r1, ip
 801b936:	fa1f fa81 	uxth.w	sl, r1
 801b93a:	1ac0      	subs	r0, r0, r3
 801b93c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b93e:	b280      	uxth	r0, r0
 801b940:	4348      	muls	r0, r1
 801b942:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b944:	fb02 020a 	mla	r2, r2, sl, r0
 801b948:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b94c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b94e:	fb03 c302 	mla	r3, r3, r2, ip
 801b952:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b956:	2bff      	cmp	r3, #255	; 0xff
 801b958:	d12c      	bne.n	801b9b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b95a:	4b14      	ldr	r3, [pc, #80]	; (801b9ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801b95c:	681a      	ldr	r2, [r3, #0]
 801b95e:	4b14      	ldr	r3, [pc, #80]	; (801b9b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801b960:	0951      	lsrs	r1, r2, #5
 801b962:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b966:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b96a:	430b      	orrs	r3, r1
 801b96c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b970:	4313      	orrs	r3, r2
 801b972:	f8ae 3000 	strh.w	r3, [lr]
 801b976:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b978:	441c      	add	r4, r3
 801b97a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b97c:	f10e 0e02 	add.w	lr, lr, #2
 801b980:	441e      	add	r6, r3
 801b982:	f108 38ff 	add.w	r8, r8, #4294967295
 801b986:	e6ce      	b.n	801b726 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801b988:	f1bc 0f00 	cmp.w	ip, #0
 801b98c:	d0c5      	beq.n	801b91a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b98e:	9908      	ldr	r1, [sp, #32]
 801b990:	440b      	add	r3, r1
 801b992:	0859      	lsrs	r1, r3, #1
 801b994:	07db      	lsls	r3, r3, #31
 801b996:	5c79      	ldrb	r1, [r7, r1]
 801b998:	bf54      	ite	pl
 801b99a:	f001 010f 	andpl.w	r1, r1, #15
 801b99e:	1109      	asrmi	r1, r1, #4
 801b9a0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b9a4:	b2c9      	uxtb	r1, r1
 801b9a6:	910b      	str	r1, [sp, #44]	; 0x2c
 801b9a8:	e7b7      	b.n	801b91a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801b9aa:	bf00      	nop
 801b9ac:	2000a608 	.word	0x2000a608
 801b9b0:	fffff800 	.word	0xfffff800
 801b9b4:	2b00      	cmp	r3, #0
 801b9b6:	d0de      	beq.n	801b976 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801b9b8:	4a22      	ldr	r2, [pc, #136]	; (801ba44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801b9ba:	f8be c000 	ldrh.w	ip, [lr]
 801b9be:	6810      	ldr	r0, [r2, #0]
 801b9c0:	fa1f fa83 	uxth.w	sl, r3
 801b9c4:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b9c8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b9cc:	43db      	mvns	r3, r3
 801b9ce:	b2db      	uxtb	r3, r3
 801b9d0:	fb12 f20a 	smulbb	r2, r2, sl
 801b9d4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b9d8:	fb01 2103 	mla	r1, r1, r3, r2
 801b9dc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b9e0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b9e4:	b2c0      	uxtb	r0, r0
 801b9e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b9ea:	fa5f fc8c 	uxtb.w	ip, ip
 801b9ee:	fb10 f00a 	smulbb	r0, r0, sl
 801b9f2:	fb0c 0003 	mla	r0, ip, r3, r0
 801b9f6:	b289      	uxth	r1, r1
 801b9f8:	fb1b fb0a 	smulbb	fp, fp, sl
 801b9fc:	b280      	uxth	r0, r0
 801b9fe:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ba02:	fb02 b203 	mla	r2, r2, r3, fp
 801ba06:	1c4b      	adds	r3, r1, #1
 801ba08:	f100 0b01 	add.w	fp, r0, #1
 801ba0c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ba10:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801ba14:	b292      	uxth	r2, r2
 801ba16:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801ba1a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ba1e:	ea4b 0101 	orr.w	r1, fp, r1
 801ba22:	f102 0b01 	add.w	fp, r2, #1
 801ba26:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ba2a:	0952      	lsrs	r2, r2, #5
 801ba2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ba30:	4311      	orrs	r1, r2
 801ba32:	f8ae 1000 	strh.w	r1, [lr]
 801ba36:	e79e      	b.n	801b976 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801ba38:	b013      	add	sp, #76	; 0x4c
 801ba3a:	ecbd 8b08 	vpop	{d8-d11}
 801ba3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba42:	bf00      	nop
 801ba44:	2000a608 	.word	0x2000a608

0801ba48 <CRC_Lock>:
 801ba48:	b530      	push	{r4, r5, lr}
 801ba4a:	4a20      	ldr	r2, [pc, #128]	; (801bacc <CRC_Lock+0x84>)
 801ba4c:	6813      	ldr	r3, [r2, #0]
 801ba4e:	f023 0301 	bic.w	r3, r3, #1
 801ba52:	6013      	str	r3, [r2, #0]
 801ba54:	4b1e      	ldr	r3, [pc, #120]	; (801bad0 <CRC_Lock+0x88>)
 801ba56:	681a      	ldr	r2, [r3, #0]
 801ba58:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801ba5c:	4022      	ands	r2, r4
 801ba5e:	f24c 2540 	movw	r5, #49728	; 0xc240
 801ba62:	42aa      	cmp	r2, r5
 801ba64:	d005      	beq.n	801ba72 <CRC_Lock+0x2a>
 801ba66:	681b      	ldr	r3, [r3, #0]
 801ba68:	f24c 2270 	movw	r2, #49776	; 0xc270
 801ba6c:	4023      	ands	r3, r4
 801ba6e:	4293      	cmp	r3, r2
 801ba70:	d124      	bne.n	801babc <CRC_Lock+0x74>
 801ba72:	4b18      	ldr	r3, [pc, #96]	; (801bad4 <CRC_Lock+0x8c>)
 801ba74:	681b      	ldr	r3, [r3, #0]
 801ba76:	bb0b      	cbnz	r3, 801babc <CRC_Lock+0x74>
 801ba78:	4b17      	ldr	r3, [pc, #92]	; (801bad8 <CRC_Lock+0x90>)
 801ba7a:	681a      	ldr	r2, [r3, #0]
 801ba7c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ba80:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801ba84:	d00d      	beq.n	801baa2 <CRC_Lock+0x5a>
 801ba86:	681a      	ldr	r2, [r3, #0]
 801ba88:	f240 4483 	movw	r4, #1155	; 0x483
 801ba8c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ba90:	42a2      	cmp	r2, r4
 801ba92:	d006      	beq.n	801baa2 <CRC_Lock+0x5a>
 801ba94:	681b      	ldr	r3, [r3, #0]
 801ba96:	f240 4285 	movw	r2, #1157	; 0x485
 801ba9a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ba9e:	4293      	cmp	r3, r2
 801baa0:	d10c      	bne.n	801babc <CRC_Lock+0x74>
 801baa2:	4b0e      	ldr	r3, [pc, #56]	; (801badc <CRC_Lock+0x94>)
 801baa4:	2201      	movs	r2, #1
 801baa6:	601a      	str	r2, [r3, #0]
 801baa8:	681a      	ldr	r2, [r3, #0]
 801baaa:	2a00      	cmp	r2, #0
 801baac:	d1fc      	bne.n	801baa8 <CRC_Lock+0x60>
 801baae:	4b0c      	ldr	r3, [pc, #48]	; (801bae0 <CRC_Lock+0x98>)
 801bab0:	6018      	str	r0, [r3, #0]
 801bab2:	6818      	ldr	r0, [r3, #0]
 801bab4:	1a43      	subs	r3, r0, r1
 801bab6:	4258      	negs	r0, r3
 801bab8:	4158      	adcs	r0, r3
 801baba:	bd30      	pop	{r4, r5, pc}
 801babc:	4b09      	ldr	r3, [pc, #36]	; (801bae4 <CRC_Lock+0x9c>)
 801babe:	2201      	movs	r2, #1
 801bac0:	601a      	str	r2, [r3, #0]
 801bac2:	681a      	ldr	r2, [r3, #0]
 801bac4:	2a00      	cmp	r2, #0
 801bac6:	d1fc      	bne.n	801bac2 <CRC_Lock+0x7a>
 801bac8:	4b07      	ldr	r3, [pc, #28]	; (801bae8 <CRC_Lock+0xa0>)
 801baca:	e7f1      	b.n	801bab0 <CRC_Lock+0x68>
 801bacc:	e0002000 	.word	0xe0002000
 801bad0:	e000ed00 	.word	0xe000ed00
 801bad4:	e0042000 	.word	0xe0042000
 801bad8:	5c001000 	.word	0x5c001000
 801badc:	58024c08 	.word	0x58024c08
 801bae0:	58024c00 	.word	0x58024c00
 801bae4:	40023008 	.word	0x40023008
 801bae8:	40023000 	.word	0x40023000

0801baec <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801baec:	6101      	str	r1, [r0, #16]
 801baee:	4770      	bx	lr

0801baf0 <_ZN8touchgfx8Gestures4tickEv>:
 801baf0:	7b83      	ldrb	r3, [r0, #14]
 801baf2:	b14b      	cbz	r3, 801bb08 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801baf4:	8903      	ldrh	r3, [r0, #8]
 801baf6:	3301      	adds	r3, #1
 801baf8:	b29b      	uxth	r3, r3
 801bafa:	2b07      	cmp	r3, #7
 801bafc:	8103      	strh	r3, [r0, #8]
 801bafe:	bf81      	itttt	hi
 801bb00:	2300      	movhi	r3, #0
 801bb02:	8143      	strhhi	r3, [r0, #10]
 801bb04:	8183      	strhhi	r3, [r0, #12]
 801bb06:	7383      	strbhi	r3, [r0, #14]
 801bb08:	4770      	bx	lr
	...

0801bb0c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801bb0c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801bb10:	4698      	mov	r8, r3
 801bb12:	8883      	ldrh	r3, [r0, #4]
 801bb14:	f8ad 3006 	strh.w	r3, [sp, #6]
 801bb18:	eba8 0303 	sub.w	r3, r8, r3
 801bb1c:	b21b      	sxth	r3, r3
 801bb1e:	4604      	mov	r4, r0
 801bb20:	2b00      	cmp	r3, #0
 801bb22:	4617      	mov	r7, r2
 801bb24:	4a18      	ldr	r2, [pc, #96]	; (801bb88 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801bb26:	9200      	str	r2, [sp, #0]
 801bb28:	bfb8      	it	lt
 801bb2a:	425b      	neglt	r3, r3
 801bb2c:	8aa2      	ldrh	r2, [r4, #20]
 801bb2e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801bb32:	f8ad 800a 	strh.w	r8, [sp, #10]
 801bb36:	b21b      	sxth	r3, r3
 801bb38:	460e      	mov	r6, r1
 801bb3a:	4293      	cmp	r3, r2
 801bb3c:	88c1      	ldrh	r1, [r0, #6]
 801bb3e:	f8ad 1008 	strh.w	r1, [sp, #8]
 801bb42:	f04f 0000 	mov.w	r0, #0
 801bb46:	f88d 0004 	strb.w	r0, [sp, #4]
 801bb4a:	f8ad 500c 	strh.w	r5, [sp, #12]
 801bb4e:	dc07      	bgt.n	801bb60 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801bb50:	1a69      	subs	r1, r5, r1
 801bb52:	b209      	sxth	r1, r1
 801bb54:	2900      	cmp	r1, #0
 801bb56:	bfb8      	it	lt
 801bb58:	4249      	neglt	r1, r1
 801bb5a:	b209      	sxth	r1, r1
 801bb5c:	428a      	cmp	r2, r1
 801bb5e:	da10      	bge.n	801bb82 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801bb60:	6920      	ldr	r0, [r4, #16]
 801bb62:	6803      	ldr	r3, [r0, #0]
 801bb64:	4669      	mov	r1, sp
 801bb66:	685b      	ldr	r3, [r3, #4]
 801bb68:	4798      	blx	r3
 801bb6a:	eba8 0606 	sub.w	r6, r8, r6
 801bb6e:	2300      	movs	r3, #0
 801bb70:	1bef      	subs	r7, r5, r7
 801bb72:	2001      	movs	r0, #1
 801bb74:	8123      	strh	r3, [r4, #8]
 801bb76:	8166      	strh	r6, [r4, #10]
 801bb78:	81a7      	strh	r7, [r4, #12]
 801bb7a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801bb7e:	80e5      	strh	r5, [r4, #6]
 801bb80:	73a0      	strb	r0, [r4, #14]
 801bb82:	b004      	add	sp, #16
 801bb84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bb88:	0801f200 	.word	0x0801f200

0801bb8c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801bb8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bb8e:	461e      	mov	r6, r3
 801bb90:	1e4b      	subs	r3, r1, #1
 801bb92:	2b01      	cmp	r3, #1
 801bb94:	b085      	sub	sp, #20
 801bb96:	4604      	mov	r4, r0
 801bb98:	460d      	mov	r5, r1
 801bb9a:	4617      	mov	r7, r2
 801bb9c:	d84b      	bhi.n	801bc36 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801bb9e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801bba2:	1cd3      	adds	r3, r2, #3
 801bba4:	b29b      	uxth	r3, r3
 801bba6:	2b06      	cmp	r3, #6
 801bba8:	d916      	bls.n	801bbd8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801bbaa:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801bc4c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801bbae:	f8cd c004 	str.w	ip, [sp, #4]
 801bbb2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801bbb6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801bbba:	6900      	ldr	r0, [r0, #16]
 801bbbc:	f8ad 100c 	strh.w	r1, [sp, #12]
 801bbc0:	f04f 0c00 	mov.w	ip, #0
 801bbc4:	f88d c008 	strb.w	ip, [sp, #8]
 801bbc8:	f8ad 200a 	strh.w	r2, [sp, #10]
 801bbcc:	f8ad 300e 	strh.w	r3, [sp, #14]
 801bbd0:	6803      	ldr	r3, [r0, #0]
 801bbd2:	a901      	add	r1, sp, #4
 801bbd4:	689b      	ldr	r3, [r3, #8]
 801bbd6:	4798      	blx	r3
 801bbd8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801bbdc:	1cd3      	adds	r3, r2, #3
 801bbde:	b29b      	uxth	r3, r3
 801bbe0:	2b06      	cmp	r3, #6
 801bbe2:	d916      	bls.n	801bc12 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801bbe4:	f8df c064 	ldr.w	ip, [pc, #100]	; 801bc4c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801bbe8:	f8cd c004 	str.w	ip, [sp, #4]
 801bbec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801bbf0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801bbf4:	6920      	ldr	r0, [r4, #16]
 801bbf6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801bbfa:	f04f 0c01 	mov.w	ip, #1
 801bbfe:	f88d c008 	strb.w	ip, [sp, #8]
 801bc02:	f8ad 200a 	strh.w	r2, [sp, #10]
 801bc06:	f8ad 300e 	strh.w	r3, [sp, #14]
 801bc0a:	6803      	ldr	r3, [r0, #0]
 801bc0c:	a901      	add	r1, sp, #4
 801bc0e:	689b      	ldr	r3, [r3, #8]
 801bc10:	4798      	blx	r3
 801bc12:	4b0d      	ldr	r3, [pc, #52]	; (801bc48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801bc14:	9301      	str	r3, [sp, #4]
 801bc16:	6920      	ldr	r0, [r4, #16]
 801bc18:	f88d 5008 	strb.w	r5, [sp, #8]
 801bc1c:	2300      	movs	r3, #0
 801bc1e:	f8ad 700a 	strh.w	r7, [sp, #10]
 801bc22:	f8ad 600c 	strh.w	r6, [sp, #12]
 801bc26:	f8ad 300e 	strh.w	r3, [sp, #14]
 801bc2a:	6803      	ldr	r3, [r0, #0]
 801bc2c:	a901      	add	r1, sp, #4
 801bc2e:	681b      	ldr	r3, [r3, #0]
 801bc30:	4798      	blx	r3
 801bc32:	b005      	add	sp, #20
 801bc34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801bc36:	2900      	cmp	r1, #0
 801bc38:	d1eb      	bne.n	801bc12 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801bc3a:	80a2      	strh	r2, [r4, #4]
 801bc3c:	80c6      	strh	r6, [r0, #6]
 801bc3e:	60a1      	str	r1, [r4, #8]
 801bc40:	81a1      	strh	r1, [r4, #12]
 801bc42:	73a1      	strb	r1, [r4, #14]
 801bc44:	e7e5      	b.n	801bc12 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801bc46:	bf00      	nop
 801bc48:	0801f1ec 	.word	0x0801f1ec
 801bc4c:	0801f214 	.word	0x0801f214

0801bc50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801bc50:	b570      	push	{r4, r5, r6, lr}
 801bc52:	790b      	ldrb	r3, [r1, #4]
 801bc54:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801bc58:	2b00      	cmp	r3, #0
 801bc5a:	bf0c      	ite	eq
 801bc5c:	2301      	moveq	r3, #1
 801bc5e:	2300      	movne	r3, #0
 801bc60:	4604      	mov	r4, r0
 801bc62:	460e      	mov	r6, r1
 801bc64:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801bc68:	d109      	bne.n	801bc7e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801bc6a:	b14d      	cbz	r5, 801bc80 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801bc6c:	7933      	ldrb	r3, [r6, #4]
 801bc6e:	2b01      	cmp	r3, #1
 801bc70:	d10c      	bne.n	801bc8c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801bc72:	6823      	ldr	r3, [r4, #0]
 801bc74:	4620      	mov	r0, r4
 801bc76:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801bc78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801bc7c:	4718      	bx	r3
 801bc7e:	b12d      	cbz	r5, 801bc8c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801bc80:	6823      	ldr	r3, [r4, #0]
 801bc82:	4620      	mov	r0, r4
 801bc84:	695b      	ldr	r3, [r3, #20]
 801bc86:	4798      	blx	r3
 801bc88:	2d00      	cmp	r5, #0
 801bc8a:	d1ef      	bne.n	801bc6c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801bc8c:	bd70      	pop	{r4, r5, r6, pc}

0801bc8e <__aeabi_atexit>:
 801bc8e:	460b      	mov	r3, r1
 801bc90:	4601      	mov	r1, r0
 801bc92:	4618      	mov	r0, r3
 801bc94:	f000 b852 	b.w	801bd3c <__cxa_atexit>

0801bc98 <_ZdlPvj>:
 801bc98:	f000 b812 	b.w	801bcc0 <_ZdlPv>

0801bc9c <__cxa_guard_acquire>:
 801bc9c:	6803      	ldr	r3, [r0, #0]
 801bc9e:	07db      	lsls	r3, r3, #31
 801bca0:	d406      	bmi.n	801bcb0 <__cxa_guard_acquire+0x14>
 801bca2:	7843      	ldrb	r3, [r0, #1]
 801bca4:	b103      	cbz	r3, 801bca8 <__cxa_guard_acquire+0xc>
 801bca6:	deff      	udf	#255	; 0xff
 801bca8:	2301      	movs	r3, #1
 801bcaa:	7043      	strb	r3, [r0, #1]
 801bcac:	4618      	mov	r0, r3
 801bcae:	4770      	bx	lr
 801bcb0:	2000      	movs	r0, #0
 801bcb2:	4770      	bx	lr

0801bcb4 <__cxa_guard_release>:
 801bcb4:	2301      	movs	r3, #1
 801bcb6:	6003      	str	r3, [r0, #0]
 801bcb8:	4770      	bx	lr

0801bcba <__cxa_pure_virtual>:
 801bcba:	b508      	push	{r3, lr}
 801bcbc:	f000 f80e 	bl	801bcdc <_ZSt9terminatev>

0801bcc0 <_ZdlPv>:
 801bcc0:	f000 b88e 	b.w	801bde0 <free>

0801bcc4 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801bcc4:	b508      	push	{r3, lr}
 801bcc6:	4780      	blx	r0
 801bcc8:	f000 f80d 	bl	801bce6 <abort>

0801bccc <_ZSt13get_terminatev>:
 801bccc:	4b02      	ldr	r3, [pc, #8]	; (801bcd8 <_ZSt13get_terminatev+0xc>)
 801bcce:	6818      	ldr	r0, [r3, #0]
 801bcd0:	f3bf 8f5b 	dmb	ish
 801bcd4:	4770      	bx	lr
 801bcd6:	bf00      	nop
 801bcd8:	200000d4 	.word	0x200000d4

0801bcdc <_ZSt9terminatev>:
 801bcdc:	b508      	push	{r3, lr}
 801bcde:	f7ff fff5 	bl	801bccc <_ZSt13get_terminatev>
 801bce2:	f7ff ffef 	bl	801bcc4 <_ZN10__cxxabiv111__terminateEPFvvE>

0801bce6 <abort>:
 801bce6:	b508      	push	{r3, lr}
 801bce8:	2006      	movs	r0, #6
 801bcea:	f000 fc9d 	bl	801c628 <raise>
 801bcee:	2001      	movs	r0, #1
 801bcf0:	f7e6 f96c 	bl	8001fcc <_exit>

0801bcf4 <__assert_func>:
 801bcf4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801bcf6:	4614      	mov	r4, r2
 801bcf8:	461a      	mov	r2, r3
 801bcfa:	4b09      	ldr	r3, [pc, #36]	; (801bd20 <__assert_func+0x2c>)
 801bcfc:	681b      	ldr	r3, [r3, #0]
 801bcfe:	4605      	mov	r5, r0
 801bd00:	68d8      	ldr	r0, [r3, #12]
 801bd02:	b14c      	cbz	r4, 801bd18 <__assert_func+0x24>
 801bd04:	4b07      	ldr	r3, [pc, #28]	; (801bd24 <__assert_func+0x30>)
 801bd06:	9100      	str	r1, [sp, #0]
 801bd08:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801bd0c:	4906      	ldr	r1, [pc, #24]	; (801bd28 <__assert_func+0x34>)
 801bd0e:	462b      	mov	r3, r5
 801bd10:	f000 f828 	bl	801bd64 <fiprintf>
 801bd14:	f7ff ffe7 	bl	801bce6 <abort>
 801bd18:	4b04      	ldr	r3, [pc, #16]	; (801bd2c <__assert_func+0x38>)
 801bd1a:	461c      	mov	r4, r3
 801bd1c:	e7f3      	b.n	801bd06 <__assert_func+0x12>
 801bd1e:	bf00      	nop
 801bd20:	200000d8 	.word	0x200000d8
 801bd24:	080205d0 	.word	0x080205d0
 801bd28:	080205dd 	.word	0x080205dd
 801bd2c:	0802060b 	.word	0x0802060b

0801bd30 <atexit>:
 801bd30:	2300      	movs	r3, #0
 801bd32:	4601      	mov	r1, r0
 801bd34:	461a      	mov	r2, r3
 801bd36:	4618      	mov	r0, r3
 801bd38:	f000 bd52 	b.w	801c7e0 <__register_exitproc>

0801bd3c <__cxa_atexit>:
 801bd3c:	b510      	push	{r4, lr}
 801bd3e:	4c05      	ldr	r4, [pc, #20]	; (801bd54 <__cxa_atexit+0x18>)
 801bd40:	4613      	mov	r3, r2
 801bd42:	b12c      	cbz	r4, 801bd50 <__cxa_atexit+0x14>
 801bd44:	460a      	mov	r2, r1
 801bd46:	4601      	mov	r1, r0
 801bd48:	2002      	movs	r0, #2
 801bd4a:	f000 fd49 	bl	801c7e0 <__register_exitproc>
 801bd4e:	bd10      	pop	{r4, pc}
 801bd50:	4620      	mov	r0, r4
 801bd52:	e7fc      	b.n	801bd4e <__cxa_atexit+0x12>
 801bd54:	0801c7e1 	.word	0x0801c7e1

0801bd58 <__errno>:
 801bd58:	4b01      	ldr	r3, [pc, #4]	; (801bd60 <__errno+0x8>)
 801bd5a:	6818      	ldr	r0, [r3, #0]
 801bd5c:	4770      	bx	lr
 801bd5e:	bf00      	nop
 801bd60:	200000d8 	.word	0x200000d8

0801bd64 <fiprintf>:
 801bd64:	b40e      	push	{r1, r2, r3}
 801bd66:	b503      	push	{r0, r1, lr}
 801bd68:	4601      	mov	r1, r0
 801bd6a:	ab03      	add	r3, sp, #12
 801bd6c:	4805      	ldr	r0, [pc, #20]	; (801bd84 <fiprintf+0x20>)
 801bd6e:	f853 2b04 	ldr.w	r2, [r3], #4
 801bd72:	6800      	ldr	r0, [r0, #0]
 801bd74:	9301      	str	r3, [sp, #4]
 801bd76:	f000 f95b 	bl	801c030 <_vfiprintf_r>
 801bd7a:	b002      	add	sp, #8
 801bd7c:	f85d eb04 	ldr.w	lr, [sp], #4
 801bd80:	b003      	add	sp, #12
 801bd82:	4770      	bx	lr
 801bd84:	200000d8 	.word	0x200000d8

0801bd88 <__libc_init_array>:
 801bd88:	b570      	push	{r4, r5, r6, lr}
 801bd8a:	4d0d      	ldr	r5, [pc, #52]	; (801bdc0 <__libc_init_array+0x38>)
 801bd8c:	4c0d      	ldr	r4, [pc, #52]	; (801bdc4 <__libc_init_array+0x3c>)
 801bd8e:	1b64      	subs	r4, r4, r5
 801bd90:	10a4      	asrs	r4, r4, #2
 801bd92:	2600      	movs	r6, #0
 801bd94:	42a6      	cmp	r6, r4
 801bd96:	d109      	bne.n	801bdac <__libc_init_array+0x24>
 801bd98:	4d0b      	ldr	r5, [pc, #44]	; (801bdc8 <__libc_init_array+0x40>)
 801bd9a:	4c0c      	ldr	r4, [pc, #48]	; (801bdcc <__libc_init_array+0x44>)
 801bd9c:	f001 f85a 	bl	801ce54 <_init>
 801bda0:	1b64      	subs	r4, r4, r5
 801bda2:	10a4      	asrs	r4, r4, #2
 801bda4:	2600      	movs	r6, #0
 801bda6:	42a6      	cmp	r6, r4
 801bda8:	d105      	bne.n	801bdb6 <__libc_init_array+0x2e>
 801bdaa:	bd70      	pop	{r4, r5, r6, pc}
 801bdac:	f855 3b04 	ldr.w	r3, [r5], #4
 801bdb0:	4798      	blx	r3
 801bdb2:	3601      	adds	r6, #1
 801bdb4:	e7ee      	b.n	801bd94 <__libc_init_array+0xc>
 801bdb6:	f855 3b04 	ldr.w	r3, [r5], #4
 801bdba:	4798      	blx	r3
 801bdbc:	3601      	adds	r6, #1
 801bdbe:	e7f2      	b.n	801bda6 <__libc_init_array+0x1e>
 801bdc0:	080206e8 	.word	0x080206e8
 801bdc4:	080206e8 	.word	0x080206e8
 801bdc8:	080206e8 	.word	0x080206e8
 801bdcc:	08020700 	.word	0x08020700

0801bdd0 <malloc>:
 801bdd0:	4b02      	ldr	r3, [pc, #8]	; (801bddc <malloc+0xc>)
 801bdd2:	4601      	mov	r1, r0
 801bdd4:	6818      	ldr	r0, [r3, #0]
 801bdd6:	f000 b88d 	b.w	801bef4 <_malloc_r>
 801bdda:	bf00      	nop
 801bddc:	200000d8 	.word	0x200000d8

0801bde0 <free>:
 801bde0:	4b02      	ldr	r3, [pc, #8]	; (801bdec <free+0xc>)
 801bde2:	4601      	mov	r1, r0
 801bde4:	6818      	ldr	r0, [r3, #0]
 801bde6:	f000 b819 	b.w	801be1c <_free_r>
 801bdea:	bf00      	nop
 801bdec:	200000d8 	.word	0x200000d8

0801bdf0 <memcpy>:
 801bdf0:	440a      	add	r2, r1
 801bdf2:	4291      	cmp	r1, r2
 801bdf4:	f100 33ff 	add.w	r3, r0, #4294967295
 801bdf8:	d100      	bne.n	801bdfc <memcpy+0xc>
 801bdfa:	4770      	bx	lr
 801bdfc:	b510      	push	{r4, lr}
 801bdfe:	f811 4b01 	ldrb.w	r4, [r1], #1
 801be02:	f803 4f01 	strb.w	r4, [r3, #1]!
 801be06:	4291      	cmp	r1, r2
 801be08:	d1f9      	bne.n	801bdfe <memcpy+0xe>
 801be0a:	bd10      	pop	{r4, pc}

0801be0c <memset>:
 801be0c:	4402      	add	r2, r0
 801be0e:	4603      	mov	r3, r0
 801be10:	4293      	cmp	r3, r2
 801be12:	d100      	bne.n	801be16 <memset+0xa>
 801be14:	4770      	bx	lr
 801be16:	f803 1b01 	strb.w	r1, [r3], #1
 801be1a:	e7f9      	b.n	801be10 <memset+0x4>

0801be1c <_free_r>:
 801be1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801be1e:	2900      	cmp	r1, #0
 801be20:	d044      	beq.n	801beac <_free_r+0x90>
 801be22:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801be26:	9001      	str	r0, [sp, #4]
 801be28:	2b00      	cmp	r3, #0
 801be2a:	f1a1 0404 	sub.w	r4, r1, #4
 801be2e:	bfb8      	it	lt
 801be30:	18e4      	addlt	r4, r4, r3
 801be32:	f000 ff57 	bl	801cce4 <__malloc_lock>
 801be36:	4a1e      	ldr	r2, [pc, #120]	; (801beb0 <_free_r+0x94>)
 801be38:	9801      	ldr	r0, [sp, #4]
 801be3a:	6813      	ldr	r3, [r2, #0]
 801be3c:	b933      	cbnz	r3, 801be4c <_free_r+0x30>
 801be3e:	6063      	str	r3, [r4, #4]
 801be40:	6014      	str	r4, [r2, #0]
 801be42:	b003      	add	sp, #12
 801be44:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801be48:	f000 bf52 	b.w	801ccf0 <__malloc_unlock>
 801be4c:	42a3      	cmp	r3, r4
 801be4e:	d908      	bls.n	801be62 <_free_r+0x46>
 801be50:	6825      	ldr	r5, [r4, #0]
 801be52:	1961      	adds	r1, r4, r5
 801be54:	428b      	cmp	r3, r1
 801be56:	bf01      	itttt	eq
 801be58:	6819      	ldreq	r1, [r3, #0]
 801be5a:	685b      	ldreq	r3, [r3, #4]
 801be5c:	1949      	addeq	r1, r1, r5
 801be5e:	6021      	streq	r1, [r4, #0]
 801be60:	e7ed      	b.n	801be3e <_free_r+0x22>
 801be62:	461a      	mov	r2, r3
 801be64:	685b      	ldr	r3, [r3, #4]
 801be66:	b10b      	cbz	r3, 801be6c <_free_r+0x50>
 801be68:	42a3      	cmp	r3, r4
 801be6a:	d9fa      	bls.n	801be62 <_free_r+0x46>
 801be6c:	6811      	ldr	r1, [r2, #0]
 801be6e:	1855      	adds	r5, r2, r1
 801be70:	42a5      	cmp	r5, r4
 801be72:	d10b      	bne.n	801be8c <_free_r+0x70>
 801be74:	6824      	ldr	r4, [r4, #0]
 801be76:	4421      	add	r1, r4
 801be78:	1854      	adds	r4, r2, r1
 801be7a:	42a3      	cmp	r3, r4
 801be7c:	6011      	str	r1, [r2, #0]
 801be7e:	d1e0      	bne.n	801be42 <_free_r+0x26>
 801be80:	681c      	ldr	r4, [r3, #0]
 801be82:	685b      	ldr	r3, [r3, #4]
 801be84:	6053      	str	r3, [r2, #4]
 801be86:	4421      	add	r1, r4
 801be88:	6011      	str	r1, [r2, #0]
 801be8a:	e7da      	b.n	801be42 <_free_r+0x26>
 801be8c:	d902      	bls.n	801be94 <_free_r+0x78>
 801be8e:	230c      	movs	r3, #12
 801be90:	6003      	str	r3, [r0, #0]
 801be92:	e7d6      	b.n	801be42 <_free_r+0x26>
 801be94:	6825      	ldr	r5, [r4, #0]
 801be96:	1961      	adds	r1, r4, r5
 801be98:	428b      	cmp	r3, r1
 801be9a:	bf04      	itt	eq
 801be9c:	6819      	ldreq	r1, [r3, #0]
 801be9e:	685b      	ldreq	r3, [r3, #4]
 801bea0:	6063      	str	r3, [r4, #4]
 801bea2:	bf04      	itt	eq
 801bea4:	1949      	addeq	r1, r1, r5
 801bea6:	6021      	streq	r1, [r4, #0]
 801bea8:	6054      	str	r4, [r2, #4]
 801beaa:	e7ca      	b.n	801be42 <_free_r+0x26>
 801beac:	b003      	add	sp, #12
 801beae:	bd30      	pop	{r4, r5, pc}
 801beb0:	2000a6fc 	.word	0x2000a6fc

0801beb4 <sbrk_aligned>:
 801beb4:	b570      	push	{r4, r5, r6, lr}
 801beb6:	4e0e      	ldr	r6, [pc, #56]	; (801bef0 <sbrk_aligned+0x3c>)
 801beb8:	460c      	mov	r4, r1
 801beba:	6831      	ldr	r1, [r6, #0]
 801bebc:	4605      	mov	r5, r0
 801bebe:	b911      	cbnz	r1, 801bec6 <sbrk_aligned+0x12>
 801bec0:	f000 fb7a 	bl	801c5b8 <_sbrk_r>
 801bec4:	6030      	str	r0, [r6, #0]
 801bec6:	4621      	mov	r1, r4
 801bec8:	4628      	mov	r0, r5
 801beca:	f000 fb75 	bl	801c5b8 <_sbrk_r>
 801bece:	1c43      	adds	r3, r0, #1
 801bed0:	d00a      	beq.n	801bee8 <sbrk_aligned+0x34>
 801bed2:	1cc4      	adds	r4, r0, #3
 801bed4:	f024 0403 	bic.w	r4, r4, #3
 801bed8:	42a0      	cmp	r0, r4
 801beda:	d007      	beq.n	801beec <sbrk_aligned+0x38>
 801bedc:	1a21      	subs	r1, r4, r0
 801bede:	4628      	mov	r0, r5
 801bee0:	f000 fb6a 	bl	801c5b8 <_sbrk_r>
 801bee4:	3001      	adds	r0, #1
 801bee6:	d101      	bne.n	801beec <sbrk_aligned+0x38>
 801bee8:	f04f 34ff 	mov.w	r4, #4294967295
 801beec:	4620      	mov	r0, r4
 801beee:	bd70      	pop	{r4, r5, r6, pc}
 801bef0:	2000a700 	.word	0x2000a700

0801bef4 <_malloc_r>:
 801bef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bef8:	1ccd      	adds	r5, r1, #3
 801befa:	f025 0503 	bic.w	r5, r5, #3
 801befe:	3508      	adds	r5, #8
 801bf00:	2d0c      	cmp	r5, #12
 801bf02:	bf38      	it	cc
 801bf04:	250c      	movcc	r5, #12
 801bf06:	2d00      	cmp	r5, #0
 801bf08:	4607      	mov	r7, r0
 801bf0a:	db01      	blt.n	801bf10 <_malloc_r+0x1c>
 801bf0c:	42a9      	cmp	r1, r5
 801bf0e:	d905      	bls.n	801bf1c <_malloc_r+0x28>
 801bf10:	230c      	movs	r3, #12
 801bf12:	603b      	str	r3, [r7, #0]
 801bf14:	2600      	movs	r6, #0
 801bf16:	4630      	mov	r0, r6
 801bf18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bf1c:	4e2e      	ldr	r6, [pc, #184]	; (801bfd8 <_malloc_r+0xe4>)
 801bf1e:	f000 fee1 	bl	801cce4 <__malloc_lock>
 801bf22:	6833      	ldr	r3, [r6, #0]
 801bf24:	461c      	mov	r4, r3
 801bf26:	bb34      	cbnz	r4, 801bf76 <_malloc_r+0x82>
 801bf28:	4629      	mov	r1, r5
 801bf2a:	4638      	mov	r0, r7
 801bf2c:	f7ff ffc2 	bl	801beb4 <sbrk_aligned>
 801bf30:	1c43      	adds	r3, r0, #1
 801bf32:	4604      	mov	r4, r0
 801bf34:	d14d      	bne.n	801bfd2 <_malloc_r+0xde>
 801bf36:	6834      	ldr	r4, [r6, #0]
 801bf38:	4626      	mov	r6, r4
 801bf3a:	2e00      	cmp	r6, #0
 801bf3c:	d140      	bne.n	801bfc0 <_malloc_r+0xcc>
 801bf3e:	6823      	ldr	r3, [r4, #0]
 801bf40:	4631      	mov	r1, r6
 801bf42:	4638      	mov	r0, r7
 801bf44:	eb04 0803 	add.w	r8, r4, r3
 801bf48:	f000 fb36 	bl	801c5b8 <_sbrk_r>
 801bf4c:	4580      	cmp	r8, r0
 801bf4e:	d13a      	bne.n	801bfc6 <_malloc_r+0xd2>
 801bf50:	6821      	ldr	r1, [r4, #0]
 801bf52:	3503      	adds	r5, #3
 801bf54:	1a6d      	subs	r5, r5, r1
 801bf56:	f025 0503 	bic.w	r5, r5, #3
 801bf5a:	3508      	adds	r5, #8
 801bf5c:	2d0c      	cmp	r5, #12
 801bf5e:	bf38      	it	cc
 801bf60:	250c      	movcc	r5, #12
 801bf62:	4629      	mov	r1, r5
 801bf64:	4638      	mov	r0, r7
 801bf66:	f7ff ffa5 	bl	801beb4 <sbrk_aligned>
 801bf6a:	3001      	adds	r0, #1
 801bf6c:	d02b      	beq.n	801bfc6 <_malloc_r+0xd2>
 801bf6e:	6823      	ldr	r3, [r4, #0]
 801bf70:	442b      	add	r3, r5
 801bf72:	6023      	str	r3, [r4, #0]
 801bf74:	e00e      	b.n	801bf94 <_malloc_r+0xa0>
 801bf76:	6822      	ldr	r2, [r4, #0]
 801bf78:	1b52      	subs	r2, r2, r5
 801bf7a:	d41e      	bmi.n	801bfba <_malloc_r+0xc6>
 801bf7c:	2a0b      	cmp	r2, #11
 801bf7e:	d916      	bls.n	801bfae <_malloc_r+0xba>
 801bf80:	1961      	adds	r1, r4, r5
 801bf82:	42a3      	cmp	r3, r4
 801bf84:	6025      	str	r5, [r4, #0]
 801bf86:	bf18      	it	ne
 801bf88:	6059      	strne	r1, [r3, #4]
 801bf8a:	6863      	ldr	r3, [r4, #4]
 801bf8c:	bf08      	it	eq
 801bf8e:	6031      	streq	r1, [r6, #0]
 801bf90:	5162      	str	r2, [r4, r5]
 801bf92:	604b      	str	r3, [r1, #4]
 801bf94:	4638      	mov	r0, r7
 801bf96:	f104 060b 	add.w	r6, r4, #11
 801bf9a:	f000 fea9 	bl	801ccf0 <__malloc_unlock>
 801bf9e:	f026 0607 	bic.w	r6, r6, #7
 801bfa2:	1d23      	adds	r3, r4, #4
 801bfa4:	1af2      	subs	r2, r6, r3
 801bfa6:	d0b6      	beq.n	801bf16 <_malloc_r+0x22>
 801bfa8:	1b9b      	subs	r3, r3, r6
 801bfaa:	50a3      	str	r3, [r4, r2]
 801bfac:	e7b3      	b.n	801bf16 <_malloc_r+0x22>
 801bfae:	6862      	ldr	r2, [r4, #4]
 801bfb0:	42a3      	cmp	r3, r4
 801bfb2:	bf0c      	ite	eq
 801bfb4:	6032      	streq	r2, [r6, #0]
 801bfb6:	605a      	strne	r2, [r3, #4]
 801bfb8:	e7ec      	b.n	801bf94 <_malloc_r+0xa0>
 801bfba:	4623      	mov	r3, r4
 801bfbc:	6864      	ldr	r4, [r4, #4]
 801bfbe:	e7b2      	b.n	801bf26 <_malloc_r+0x32>
 801bfc0:	4634      	mov	r4, r6
 801bfc2:	6876      	ldr	r6, [r6, #4]
 801bfc4:	e7b9      	b.n	801bf3a <_malloc_r+0x46>
 801bfc6:	230c      	movs	r3, #12
 801bfc8:	603b      	str	r3, [r7, #0]
 801bfca:	4638      	mov	r0, r7
 801bfcc:	f000 fe90 	bl	801ccf0 <__malloc_unlock>
 801bfd0:	e7a1      	b.n	801bf16 <_malloc_r+0x22>
 801bfd2:	6025      	str	r5, [r4, #0]
 801bfd4:	e7de      	b.n	801bf94 <_malloc_r+0xa0>
 801bfd6:	bf00      	nop
 801bfd8:	2000a6fc 	.word	0x2000a6fc

0801bfdc <__sfputc_r>:
 801bfdc:	6893      	ldr	r3, [r2, #8]
 801bfde:	3b01      	subs	r3, #1
 801bfe0:	2b00      	cmp	r3, #0
 801bfe2:	b410      	push	{r4}
 801bfe4:	6093      	str	r3, [r2, #8]
 801bfe6:	da08      	bge.n	801bffa <__sfputc_r+0x1e>
 801bfe8:	6994      	ldr	r4, [r2, #24]
 801bfea:	42a3      	cmp	r3, r4
 801bfec:	db01      	blt.n	801bff2 <__sfputc_r+0x16>
 801bfee:	290a      	cmp	r1, #10
 801bff0:	d103      	bne.n	801bffa <__sfputc_r+0x1e>
 801bff2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bff6:	f000 bb33 	b.w	801c660 <__swbuf_r>
 801bffa:	6813      	ldr	r3, [r2, #0]
 801bffc:	1c58      	adds	r0, r3, #1
 801bffe:	6010      	str	r0, [r2, #0]
 801c000:	7019      	strb	r1, [r3, #0]
 801c002:	4608      	mov	r0, r1
 801c004:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c008:	4770      	bx	lr

0801c00a <__sfputs_r>:
 801c00a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c00c:	4606      	mov	r6, r0
 801c00e:	460f      	mov	r7, r1
 801c010:	4614      	mov	r4, r2
 801c012:	18d5      	adds	r5, r2, r3
 801c014:	42ac      	cmp	r4, r5
 801c016:	d101      	bne.n	801c01c <__sfputs_r+0x12>
 801c018:	2000      	movs	r0, #0
 801c01a:	e007      	b.n	801c02c <__sfputs_r+0x22>
 801c01c:	f814 1b01 	ldrb.w	r1, [r4], #1
 801c020:	463a      	mov	r2, r7
 801c022:	4630      	mov	r0, r6
 801c024:	f7ff ffda 	bl	801bfdc <__sfputc_r>
 801c028:	1c43      	adds	r3, r0, #1
 801c02a:	d1f3      	bne.n	801c014 <__sfputs_r+0xa>
 801c02c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801c030 <_vfiprintf_r>:
 801c030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c034:	460d      	mov	r5, r1
 801c036:	b09d      	sub	sp, #116	; 0x74
 801c038:	4614      	mov	r4, r2
 801c03a:	4698      	mov	r8, r3
 801c03c:	4606      	mov	r6, r0
 801c03e:	b118      	cbz	r0, 801c048 <_vfiprintf_r+0x18>
 801c040:	6983      	ldr	r3, [r0, #24]
 801c042:	b90b      	cbnz	r3, 801c048 <_vfiprintf_r+0x18>
 801c044:	f000 fd48 	bl	801cad8 <__sinit>
 801c048:	4b89      	ldr	r3, [pc, #548]	; (801c270 <_vfiprintf_r+0x240>)
 801c04a:	429d      	cmp	r5, r3
 801c04c:	d11b      	bne.n	801c086 <_vfiprintf_r+0x56>
 801c04e:	6875      	ldr	r5, [r6, #4]
 801c050:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801c052:	07d9      	lsls	r1, r3, #31
 801c054:	d405      	bmi.n	801c062 <_vfiprintf_r+0x32>
 801c056:	89ab      	ldrh	r3, [r5, #12]
 801c058:	059a      	lsls	r2, r3, #22
 801c05a:	d402      	bmi.n	801c062 <_vfiprintf_r+0x32>
 801c05c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801c05e:	f000 fdd9 	bl	801cc14 <__retarget_lock_acquire_recursive>
 801c062:	89ab      	ldrh	r3, [r5, #12]
 801c064:	071b      	lsls	r3, r3, #28
 801c066:	d501      	bpl.n	801c06c <_vfiprintf_r+0x3c>
 801c068:	692b      	ldr	r3, [r5, #16]
 801c06a:	b9eb      	cbnz	r3, 801c0a8 <_vfiprintf_r+0x78>
 801c06c:	4629      	mov	r1, r5
 801c06e:	4630      	mov	r0, r6
 801c070:	f000 fb48 	bl	801c704 <__swsetup_r>
 801c074:	b1c0      	cbz	r0, 801c0a8 <_vfiprintf_r+0x78>
 801c076:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801c078:	07dc      	lsls	r4, r3, #31
 801c07a:	d50e      	bpl.n	801c09a <_vfiprintf_r+0x6a>
 801c07c:	f04f 30ff 	mov.w	r0, #4294967295
 801c080:	b01d      	add	sp, #116	; 0x74
 801c082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c086:	4b7b      	ldr	r3, [pc, #492]	; (801c274 <_vfiprintf_r+0x244>)
 801c088:	429d      	cmp	r5, r3
 801c08a:	d101      	bne.n	801c090 <_vfiprintf_r+0x60>
 801c08c:	68b5      	ldr	r5, [r6, #8]
 801c08e:	e7df      	b.n	801c050 <_vfiprintf_r+0x20>
 801c090:	4b79      	ldr	r3, [pc, #484]	; (801c278 <_vfiprintf_r+0x248>)
 801c092:	429d      	cmp	r5, r3
 801c094:	bf08      	it	eq
 801c096:	68f5      	ldreq	r5, [r6, #12]
 801c098:	e7da      	b.n	801c050 <_vfiprintf_r+0x20>
 801c09a:	89ab      	ldrh	r3, [r5, #12]
 801c09c:	0598      	lsls	r0, r3, #22
 801c09e:	d4ed      	bmi.n	801c07c <_vfiprintf_r+0x4c>
 801c0a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801c0a2:	f000 fdb9 	bl	801cc18 <__retarget_lock_release_recursive>
 801c0a6:	e7e9      	b.n	801c07c <_vfiprintf_r+0x4c>
 801c0a8:	2300      	movs	r3, #0
 801c0aa:	9309      	str	r3, [sp, #36]	; 0x24
 801c0ac:	2320      	movs	r3, #32
 801c0ae:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801c0b2:	f8cd 800c 	str.w	r8, [sp, #12]
 801c0b6:	2330      	movs	r3, #48	; 0x30
 801c0b8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801c27c <_vfiprintf_r+0x24c>
 801c0bc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801c0c0:	f04f 0901 	mov.w	r9, #1
 801c0c4:	4623      	mov	r3, r4
 801c0c6:	469a      	mov	sl, r3
 801c0c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 801c0cc:	b10a      	cbz	r2, 801c0d2 <_vfiprintf_r+0xa2>
 801c0ce:	2a25      	cmp	r2, #37	; 0x25
 801c0d0:	d1f9      	bne.n	801c0c6 <_vfiprintf_r+0x96>
 801c0d2:	ebba 0b04 	subs.w	fp, sl, r4
 801c0d6:	d00b      	beq.n	801c0f0 <_vfiprintf_r+0xc0>
 801c0d8:	465b      	mov	r3, fp
 801c0da:	4622      	mov	r2, r4
 801c0dc:	4629      	mov	r1, r5
 801c0de:	4630      	mov	r0, r6
 801c0e0:	f7ff ff93 	bl	801c00a <__sfputs_r>
 801c0e4:	3001      	adds	r0, #1
 801c0e6:	f000 80aa 	beq.w	801c23e <_vfiprintf_r+0x20e>
 801c0ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c0ec:	445a      	add	r2, fp
 801c0ee:	9209      	str	r2, [sp, #36]	; 0x24
 801c0f0:	f89a 3000 	ldrb.w	r3, [sl]
 801c0f4:	2b00      	cmp	r3, #0
 801c0f6:	f000 80a2 	beq.w	801c23e <_vfiprintf_r+0x20e>
 801c0fa:	2300      	movs	r3, #0
 801c0fc:	f04f 32ff 	mov.w	r2, #4294967295
 801c100:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801c104:	f10a 0a01 	add.w	sl, sl, #1
 801c108:	9304      	str	r3, [sp, #16]
 801c10a:	9307      	str	r3, [sp, #28]
 801c10c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801c110:	931a      	str	r3, [sp, #104]	; 0x68
 801c112:	4654      	mov	r4, sl
 801c114:	2205      	movs	r2, #5
 801c116:	f814 1b01 	ldrb.w	r1, [r4], #1
 801c11a:	4858      	ldr	r0, [pc, #352]	; (801c27c <_vfiprintf_r+0x24c>)
 801c11c:	f7e4 f870 	bl	8000200 <memchr>
 801c120:	9a04      	ldr	r2, [sp, #16]
 801c122:	b9d8      	cbnz	r0, 801c15c <_vfiprintf_r+0x12c>
 801c124:	06d1      	lsls	r1, r2, #27
 801c126:	bf44      	itt	mi
 801c128:	2320      	movmi	r3, #32
 801c12a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801c12e:	0713      	lsls	r3, r2, #28
 801c130:	bf44      	itt	mi
 801c132:	232b      	movmi	r3, #43	; 0x2b
 801c134:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801c138:	f89a 3000 	ldrb.w	r3, [sl]
 801c13c:	2b2a      	cmp	r3, #42	; 0x2a
 801c13e:	d015      	beq.n	801c16c <_vfiprintf_r+0x13c>
 801c140:	9a07      	ldr	r2, [sp, #28]
 801c142:	4654      	mov	r4, sl
 801c144:	2000      	movs	r0, #0
 801c146:	f04f 0c0a 	mov.w	ip, #10
 801c14a:	4621      	mov	r1, r4
 801c14c:	f811 3b01 	ldrb.w	r3, [r1], #1
 801c150:	3b30      	subs	r3, #48	; 0x30
 801c152:	2b09      	cmp	r3, #9
 801c154:	d94e      	bls.n	801c1f4 <_vfiprintf_r+0x1c4>
 801c156:	b1b0      	cbz	r0, 801c186 <_vfiprintf_r+0x156>
 801c158:	9207      	str	r2, [sp, #28]
 801c15a:	e014      	b.n	801c186 <_vfiprintf_r+0x156>
 801c15c:	eba0 0308 	sub.w	r3, r0, r8
 801c160:	fa09 f303 	lsl.w	r3, r9, r3
 801c164:	4313      	orrs	r3, r2
 801c166:	9304      	str	r3, [sp, #16]
 801c168:	46a2      	mov	sl, r4
 801c16a:	e7d2      	b.n	801c112 <_vfiprintf_r+0xe2>
 801c16c:	9b03      	ldr	r3, [sp, #12]
 801c16e:	1d19      	adds	r1, r3, #4
 801c170:	681b      	ldr	r3, [r3, #0]
 801c172:	9103      	str	r1, [sp, #12]
 801c174:	2b00      	cmp	r3, #0
 801c176:	bfbb      	ittet	lt
 801c178:	425b      	neglt	r3, r3
 801c17a:	f042 0202 	orrlt.w	r2, r2, #2
 801c17e:	9307      	strge	r3, [sp, #28]
 801c180:	9307      	strlt	r3, [sp, #28]
 801c182:	bfb8      	it	lt
 801c184:	9204      	strlt	r2, [sp, #16]
 801c186:	7823      	ldrb	r3, [r4, #0]
 801c188:	2b2e      	cmp	r3, #46	; 0x2e
 801c18a:	d10c      	bne.n	801c1a6 <_vfiprintf_r+0x176>
 801c18c:	7863      	ldrb	r3, [r4, #1]
 801c18e:	2b2a      	cmp	r3, #42	; 0x2a
 801c190:	d135      	bne.n	801c1fe <_vfiprintf_r+0x1ce>
 801c192:	9b03      	ldr	r3, [sp, #12]
 801c194:	1d1a      	adds	r2, r3, #4
 801c196:	681b      	ldr	r3, [r3, #0]
 801c198:	9203      	str	r2, [sp, #12]
 801c19a:	2b00      	cmp	r3, #0
 801c19c:	bfb8      	it	lt
 801c19e:	f04f 33ff 	movlt.w	r3, #4294967295
 801c1a2:	3402      	adds	r4, #2
 801c1a4:	9305      	str	r3, [sp, #20]
 801c1a6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801c28c <_vfiprintf_r+0x25c>
 801c1aa:	7821      	ldrb	r1, [r4, #0]
 801c1ac:	2203      	movs	r2, #3
 801c1ae:	4650      	mov	r0, sl
 801c1b0:	f7e4 f826 	bl	8000200 <memchr>
 801c1b4:	b140      	cbz	r0, 801c1c8 <_vfiprintf_r+0x198>
 801c1b6:	2340      	movs	r3, #64	; 0x40
 801c1b8:	eba0 000a 	sub.w	r0, r0, sl
 801c1bc:	fa03 f000 	lsl.w	r0, r3, r0
 801c1c0:	9b04      	ldr	r3, [sp, #16]
 801c1c2:	4303      	orrs	r3, r0
 801c1c4:	3401      	adds	r4, #1
 801c1c6:	9304      	str	r3, [sp, #16]
 801c1c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 801c1cc:	482c      	ldr	r0, [pc, #176]	; (801c280 <_vfiprintf_r+0x250>)
 801c1ce:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801c1d2:	2206      	movs	r2, #6
 801c1d4:	f7e4 f814 	bl	8000200 <memchr>
 801c1d8:	2800      	cmp	r0, #0
 801c1da:	d03f      	beq.n	801c25c <_vfiprintf_r+0x22c>
 801c1dc:	4b29      	ldr	r3, [pc, #164]	; (801c284 <_vfiprintf_r+0x254>)
 801c1de:	bb1b      	cbnz	r3, 801c228 <_vfiprintf_r+0x1f8>
 801c1e0:	9b03      	ldr	r3, [sp, #12]
 801c1e2:	3307      	adds	r3, #7
 801c1e4:	f023 0307 	bic.w	r3, r3, #7
 801c1e8:	3308      	adds	r3, #8
 801c1ea:	9303      	str	r3, [sp, #12]
 801c1ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c1ee:	443b      	add	r3, r7
 801c1f0:	9309      	str	r3, [sp, #36]	; 0x24
 801c1f2:	e767      	b.n	801c0c4 <_vfiprintf_r+0x94>
 801c1f4:	fb0c 3202 	mla	r2, ip, r2, r3
 801c1f8:	460c      	mov	r4, r1
 801c1fa:	2001      	movs	r0, #1
 801c1fc:	e7a5      	b.n	801c14a <_vfiprintf_r+0x11a>
 801c1fe:	2300      	movs	r3, #0
 801c200:	3401      	adds	r4, #1
 801c202:	9305      	str	r3, [sp, #20]
 801c204:	4619      	mov	r1, r3
 801c206:	f04f 0c0a 	mov.w	ip, #10
 801c20a:	4620      	mov	r0, r4
 801c20c:	f810 2b01 	ldrb.w	r2, [r0], #1
 801c210:	3a30      	subs	r2, #48	; 0x30
 801c212:	2a09      	cmp	r2, #9
 801c214:	d903      	bls.n	801c21e <_vfiprintf_r+0x1ee>
 801c216:	2b00      	cmp	r3, #0
 801c218:	d0c5      	beq.n	801c1a6 <_vfiprintf_r+0x176>
 801c21a:	9105      	str	r1, [sp, #20]
 801c21c:	e7c3      	b.n	801c1a6 <_vfiprintf_r+0x176>
 801c21e:	fb0c 2101 	mla	r1, ip, r1, r2
 801c222:	4604      	mov	r4, r0
 801c224:	2301      	movs	r3, #1
 801c226:	e7f0      	b.n	801c20a <_vfiprintf_r+0x1da>
 801c228:	ab03      	add	r3, sp, #12
 801c22a:	9300      	str	r3, [sp, #0]
 801c22c:	462a      	mov	r2, r5
 801c22e:	4b16      	ldr	r3, [pc, #88]	; (801c288 <_vfiprintf_r+0x258>)
 801c230:	a904      	add	r1, sp, #16
 801c232:	4630      	mov	r0, r6
 801c234:	f3af 8000 	nop.w
 801c238:	4607      	mov	r7, r0
 801c23a:	1c78      	adds	r0, r7, #1
 801c23c:	d1d6      	bne.n	801c1ec <_vfiprintf_r+0x1bc>
 801c23e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801c240:	07d9      	lsls	r1, r3, #31
 801c242:	d405      	bmi.n	801c250 <_vfiprintf_r+0x220>
 801c244:	89ab      	ldrh	r3, [r5, #12]
 801c246:	059a      	lsls	r2, r3, #22
 801c248:	d402      	bmi.n	801c250 <_vfiprintf_r+0x220>
 801c24a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801c24c:	f000 fce4 	bl	801cc18 <__retarget_lock_release_recursive>
 801c250:	89ab      	ldrh	r3, [r5, #12]
 801c252:	065b      	lsls	r3, r3, #25
 801c254:	f53f af12 	bmi.w	801c07c <_vfiprintf_r+0x4c>
 801c258:	9809      	ldr	r0, [sp, #36]	; 0x24
 801c25a:	e711      	b.n	801c080 <_vfiprintf_r+0x50>
 801c25c:	ab03      	add	r3, sp, #12
 801c25e:	9300      	str	r3, [sp, #0]
 801c260:	462a      	mov	r2, r5
 801c262:	4b09      	ldr	r3, [pc, #36]	; (801c288 <_vfiprintf_r+0x258>)
 801c264:	a904      	add	r1, sp, #16
 801c266:	4630      	mov	r0, r6
 801c268:	f000 f880 	bl	801c36c <_printf_i>
 801c26c:	e7e4      	b.n	801c238 <_vfiprintf_r+0x208>
 801c26e:	bf00      	nop
 801c270:	08020668 	.word	0x08020668
 801c274:	08020688 	.word	0x08020688
 801c278:	08020648 	.word	0x08020648
 801c27c:	08020610 	.word	0x08020610
 801c280:	0802061a 	.word	0x0802061a
 801c284:	00000000 	.word	0x00000000
 801c288:	0801c00b 	.word	0x0801c00b
 801c28c:	08020616 	.word	0x08020616

0801c290 <_printf_common>:
 801c290:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c294:	4616      	mov	r6, r2
 801c296:	4699      	mov	r9, r3
 801c298:	688a      	ldr	r2, [r1, #8]
 801c29a:	690b      	ldr	r3, [r1, #16]
 801c29c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801c2a0:	4293      	cmp	r3, r2
 801c2a2:	bfb8      	it	lt
 801c2a4:	4613      	movlt	r3, r2
 801c2a6:	6033      	str	r3, [r6, #0]
 801c2a8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801c2ac:	4607      	mov	r7, r0
 801c2ae:	460c      	mov	r4, r1
 801c2b0:	b10a      	cbz	r2, 801c2b6 <_printf_common+0x26>
 801c2b2:	3301      	adds	r3, #1
 801c2b4:	6033      	str	r3, [r6, #0]
 801c2b6:	6823      	ldr	r3, [r4, #0]
 801c2b8:	0699      	lsls	r1, r3, #26
 801c2ba:	bf42      	ittt	mi
 801c2bc:	6833      	ldrmi	r3, [r6, #0]
 801c2be:	3302      	addmi	r3, #2
 801c2c0:	6033      	strmi	r3, [r6, #0]
 801c2c2:	6825      	ldr	r5, [r4, #0]
 801c2c4:	f015 0506 	ands.w	r5, r5, #6
 801c2c8:	d106      	bne.n	801c2d8 <_printf_common+0x48>
 801c2ca:	f104 0a19 	add.w	sl, r4, #25
 801c2ce:	68e3      	ldr	r3, [r4, #12]
 801c2d0:	6832      	ldr	r2, [r6, #0]
 801c2d2:	1a9b      	subs	r3, r3, r2
 801c2d4:	42ab      	cmp	r3, r5
 801c2d6:	dc26      	bgt.n	801c326 <_printf_common+0x96>
 801c2d8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801c2dc:	1e13      	subs	r3, r2, #0
 801c2de:	6822      	ldr	r2, [r4, #0]
 801c2e0:	bf18      	it	ne
 801c2e2:	2301      	movne	r3, #1
 801c2e4:	0692      	lsls	r2, r2, #26
 801c2e6:	d42b      	bmi.n	801c340 <_printf_common+0xb0>
 801c2e8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801c2ec:	4649      	mov	r1, r9
 801c2ee:	4638      	mov	r0, r7
 801c2f0:	47c0      	blx	r8
 801c2f2:	3001      	adds	r0, #1
 801c2f4:	d01e      	beq.n	801c334 <_printf_common+0xa4>
 801c2f6:	6823      	ldr	r3, [r4, #0]
 801c2f8:	68e5      	ldr	r5, [r4, #12]
 801c2fa:	6832      	ldr	r2, [r6, #0]
 801c2fc:	f003 0306 	and.w	r3, r3, #6
 801c300:	2b04      	cmp	r3, #4
 801c302:	bf08      	it	eq
 801c304:	1aad      	subeq	r5, r5, r2
 801c306:	68a3      	ldr	r3, [r4, #8]
 801c308:	6922      	ldr	r2, [r4, #16]
 801c30a:	bf0c      	ite	eq
 801c30c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801c310:	2500      	movne	r5, #0
 801c312:	4293      	cmp	r3, r2
 801c314:	bfc4      	itt	gt
 801c316:	1a9b      	subgt	r3, r3, r2
 801c318:	18ed      	addgt	r5, r5, r3
 801c31a:	2600      	movs	r6, #0
 801c31c:	341a      	adds	r4, #26
 801c31e:	42b5      	cmp	r5, r6
 801c320:	d11a      	bne.n	801c358 <_printf_common+0xc8>
 801c322:	2000      	movs	r0, #0
 801c324:	e008      	b.n	801c338 <_printf_common+0xa8>
 801c326:	2301      	movs	r3, #1
 801c328:	4652      	mov	r2, sl
 801c32a:	4649      	mov	r1, r9
 801c32c:	4638      	mov	r0, r7
 801c32e:	47c0      	blx	r8
 801c330:	3001      	adds	r0, #1
 801c332:	d103      	bne.n	801c33c <_printf_common+0xac>
 801c334:	f04f 30ff 	mov.w	r0, #4294967295
 801c338:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c33c:	3501      	adds	r5, #1
 801c33e:	e7c6      	b.n	801c2ce <_printf_common+0x3e>
 801c340:	18e1      	adds	r1, r4, r3
 801c342:	1c5a      	adds	r2, r3, #1
 801c344:	2030      	movs	r0, #48	; 0x30
 801c346:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801c34a:	4422      	add	r2, r4
 801c34c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801c350:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801c354:	3302      	adds	r3, #2
 801c356:	e7c7      	b.n	801c2e8 <_printf_common+0x58>
 801c358:	2301      	movs	r3, #1
 801c35a:	4622      	mov	r2, r4
 801c35c:	4649      	mov	r1, r9
 801c35e:	4638      	mov	r0, r7
 801c360:	47c0      	blx	r8
 801c362:	3001      	adds	r0, #1
 801c364:	d0e6      	beq.n	801c334 <_printf_common+0xa4>
 801c366:	3601      	adds	r6, #1
 801c368:	e7d9      	b.n	801c31e <_printf_common+0x8e>
	...

0801c36c <_printf_i>:
 801c36c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c370:	7e0f      	ldrb	r7, [r1, #24]
 801c372:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c374:	2f78      	cmp	r7, #120	; 0x78
 801c376:	4691      	mov	r9, r2
 801c378:	4680      	mov	r8, r0
 801c37a:	460c      	mov	r4, r1
 801c37c:	469a      	mov	sl, r3
 801c37e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801c382:	d807      	bhi.n	801c394 <_printf_i+0x28>
 801c384:	2f62      	cmp	r7, #98	; 0x62
 801c386:	d80a      	bhi.n	801c39e <_printf_i+0x32>
 801c388:	2f00      	cmp	r7, #0
 801c38a:	f000 80d8 	beq.w	801c53e <_printf_i+0x1d2>
 801c38e:	2f58      	cmp	r7, #88	; 0x58
 801c390:	f000 80a3 	beq.w	801c4da <_printf_i+0x16e>
 801c394:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801c398:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801c39c:	e03a      	b.n	801c414 <_printf_i+0xa8>
 801c39e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801c3a2:	2b15      	cmp	r3, #21
 801c3a4:	d8f6      	bhi.n	801c394 <_printf_i+0x28>
 801c3a6:	a101      	add	r1, pc, #4	; (adr r1, 801c3ac <_printf_i+0x40>)
 801c3a8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801c3ac:	0801c405 	.word	0x0801c405
 801c3b0:	0801c419 	.word	0x0801c419
 801c3b4:	0801c395 	.word	0x0801c395
 801c3b8:	0801c395 	.word	0x0801c395
 801c3bc:	0801c395 	.word	0x0801c395
 801c3c0:	0801c395 	.word	0x0801c395
 801c3c4:	0801c419 	.word	0x0801c419
 801c3c8:	0801c395 	.word	0x0801c395
 801c3cc:	0801c395 	.word	0x0801c395
 801c3d0:	0801c395 	.word	0x0801c395
 801c3d4:	0801c395 	.word	0x0801c395
 801c3d8:	0801c525 	.word	0x0801c525
 801c3dc:	0801c449 	.word	0x0801c449
 801c3e0:	0801c507 	.word	0x0801c507
 801c3e4:	0801c395 	.word	0x0801c395
 801c3e8:	0801c395 	.word	0x0801c395
 801c3ec:	0801c547 	.word	0x0801c547
 801c3f0:	0801c395 	.word	0x0801c395
 801c3f4:	0801c449 	.word	0x0801c449
 801c3f8:	0801c395 	.word	0x0801c395
 801c3fc:	0801c395 	.word	0x0801c395
 801c400:	0801c50f 	.word	0x0801c50f
 801c404:	682b      	ldr	r3, [r5, #0]
 801c406:	1d1a      	adds	r2, r3, #4
 801c408:	681b      	ldr	r3, [r3, #0]
 801c40a:	602a      	str	r2, [r5, #0]
 801c40c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801c410:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801c414:	2301      	movs	r3, #1
 801c416:	e0a3      	b.n	801c560 <_printf_i+0x1f4>
 801c418:	6820      	ldr	r0, [r4, #0]
 801c41a:	6829      	ldr	r1, [r5, #0]
 801c41c:	0606      	lsls	r6, r0, #24
 801c41e:	f101 0304 	add.w	r3, r1, #4
 801c422:	d50a      	bpl.n	801c43a <_printf_i+0xce>
 801c424:	680e      	ldr	r6, [r1, #0]
 801c426:	602b      	str	r3, [r5, #0]
 801c428:	2e00      	cmp	r6, #0
 801c42a:	da03      	bge.n	801c434 <_printf_i+0xc8>
 801c42c:	232d      	movs	r3, #45	; 0x2d
 801c42e:	4276      	negs	r6, r6
 801c430:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c434:	485e      	ldr	r0, [pc, #376]	; (801c5b0 <_printf_i+0x244>)
 801c436:	230a      	movs	r3, #10
 801c438:	e019      	b.n	801c46e <_printf_i+0x102>
 801c43a:	680e      	ldr	r6, [r1, #0]
 801c43c:	602b      	str	r3, [r5, #0]
 801c43e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c442:	bf18      	it	ne
 801c444:	b236      	sxthne	r6, r6
 801c446:	e7ef      	b.n	801c428 <_printf_i+0xbc>
 801c448:	682b      	ldr	r3, [r5, #0]
 801c44a:	6820      	ldr	r0, [r4, #0]
 801c44c:	1d19      	adds	r1, r3, #4
 801c44e:	6029      	str	r1, [r5, #0]
 801c450:	0601      	lsls	r1, r0, #24
 801c452:	d501      	bpl.n	801c458 <_printf_i+0xec>
 801c454:	681e      	ldr	r6, [r3, #0]
 801c456:	e002      	b.n	801c45e <_printf_i+0xf2>
 801c458:	0646      	lsls	r6, r0, #25
 801c45a:	d5fb      	bpl.n	801c454 <_printf_i+0xe8>
 801c45c:	881e      	ldrh	r6, [r3, #0]
 801c45e:	4854      	ldr	r0, [pc, #336]	; (801c5b0 <_printf_i+0x244>)
 801c460:	2f6f      	cmp	r7, #111	; 0x6f
 801c462:	bf0c      	ite	eq
 801c464:	2308      	moveq	r3, #8
 801c466:	230a      	movne	r3, #10
 801c468:	2100      	movs	r1, #0
 801c46a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801c46e:	6865      	ldr	r5, [r4, #4]
 801c470:	60a5      	str	r5, [r4, #8]
 801c472:	2d00      	cmp	r5, #0
 801c474:	bfa2      	ittt	ge
 801c476:	6821      	ldrge	r1, [r4, #0]
 801c478:	f021 0104 	bicge.w	r1, r1, #4
 801c47c:	6021      	strge	r1, [r4, #0]
 801c47e:	b90e      	cbnz	r6, 801c484 <_printf_i+0x118>
 801c480:	2d00      	cmp	r5, #0
 801c482:	d04d      	beq.n	801c520 <_printf_i+0x1b4>
 801c484:	4615      	mov	r5, r2
 801c486:	fbb6 f1f3 	udiv	r1, r6, r3
 801c48a:	fb03 6711 	mls	r7, r3, r1, r6
 801c48e:	5dc7      	ldrb	r7, [r0, r7]
 801c490:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801c494:	4637      	mov	r7, r6
 801c496:	42bb      	cmp	r3, r7
 801c498:	460e      	mov	r6, r1
 801c49a:	d9f4      	bls.n	801c486 <_printf_i+0x11a>
 801c49c:	2b08      	cmp	r3, #8
 801c49e:	d10b      	bne.n	801c4b8 <_printf_i+0x14c>
 801c4a0:	6823      	ldr	r3, [r4, #0]
 801c4a2:	07de      	lsls	r6, r3, #31
 801c4a4:	d508      	bpl.n	801c4b8 <_printf_i+0x14c>
 801c4a6:	6923      	ldr	r3, [r4, #16]
 801c4a8:	6861      	ldr	r1, [r4, #4]
 801c4aa:	4299      	cmp	r1, r3
 801c4ac:	bfde      	ittt	le
 801c4ae:	2330      	movle	r3, #48	; 0x30
 801c4b0:	f805 3c01 	strble.w	r3, [r5, #-1]
 801c4b4:	f105 35ff 	addle.w	r5, r5, #4294967295
 801c4b8:	1b52      	subs	r2, r2, r5
 801c4ba:	6122      	str	r2, [r4, #16]
 801c4bc:	f8cd a000 	str.w	sl, [sp]
 801c4c0:	464b      	mov	r3, r9
 801c4c2:	aa03      	add	r2, sp, #12
 801c4c4:	4621      	mov	r1, r4
 801c4c6:	4640      	mov	r0, r8
 801c4c8:	f7ff fee2 	bl	801c290 <_printf_common>
 801c4cc:	3001      	adds	r0, #1
 801c4ce:	d14c      	bne.n	801c56a <_printf_i+0x1fe>
 801c4d0:	f04f 30ff 	mov.w	r0, #4294967295
 801c4d4:	b004      	add	sp, #16
 801c4d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c4da:	4835      	ldr	r0, [pc, #212]	; (801c5b0 <_printf_i+0x244>)
 801c4dc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801c4e0:	6829      	ldr	r1, [r5, #0]
 801c4e2:	6823      	ldr	r3, [r4, #0]
 801c4e4:	f851 6b04 	ldr.w	r6, [r1], #4
 801c4e8:	6029      	str	r1, [r5, #0]
 801c4ea:	061d      	lsls	r5, r3, #24
 801c4ec:	d514      	bpl.n	801c518 <_printf_i+0x1ac>
 801c4ee:	07df      	lsls	r7, r3, #31
 801c4f0:	bf44      	itt	mi
 801c4f2:	f043 0320 	orrmi.w	r3, r3, #32
 801c4f6:	6023      	strmi	r3, [r4, #0]
 801c4f8:	b91e      	cbnz	r6, 801c502 <_printf_i+0x196>
 801c4fa:	6823      	ldr	r3, [r4, #0]
 801c4fc:	f023 0320 	bic.w	r3, r3, #32
 801c500:	6023      	str	r3, [r4, #0]
 801c502:	2310      	movs	r3, #16
 801c504:	e7b0      	b.n	801c468 <_printf_i+0xfc>
 801c506:	6823      	ldr	r3, [r4, #0]
 801c508:	f043 0320 	orr.w	r3, r3, #32
 801c50c:	6023      	str	r3, [r4, #0]
 801c50e:	2378      	movs	r3, #120	; 0x78
 801c510:	4828      	ldr	r0, [pc, #160]	; (801c5b4 <_printf_i+0x248>)
 801c512:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801c516:	e7e3      	b.n	801c4e0 <_printf_i+0x174>
 801c518:	0659      	lsls	r1, r3, #25
 801c51a:	bf48      	it	mi
 801c51c:	b2b6      	uxthmi	r6, r6
 801c51e:	e7e6      	b.n	801c4ee <_printf_i+0x182>
 801c520:	4615      	mov	r5, r2
 801c522:	e7bb      	b.n	801c49c <_printf_i+0x130>
 801c524:	682b      	ldr	r3, [r5, #0]
 801c526:	6826      	ldr	r6, [r4, #0]
 801c528:	6961      	ldr	r1, [r4, #20]
 801c52a:	1d18      	adds	r0, r3, #4
 801c52c:	6028      	str	r0, [r5, #0]
 801c52e:	0635      	lsls	r5, r6, #24
 801c530:	681b      	ldr	r3, [r3, #0]
 801c532:	d501      	bpl.n	801c538 <_printf_i+0x1cc>
 801c534:	6019      	str	r1, [r3, #0]
 801c536:	e002      	b.n	801c53e <_printf_i+0x1d2>
 801c538:	0670      	lsls	r0, r6, #25
 801c53a:	d5fb      	bpl.n	801c534 <_printf_i+0x1c8>
 801c53c:	8019      	strh	r1, [r3, #0]
 801c53e:	2300      	movs	r3, #0
 801c540:	6123      	str	r3, [r4, #16]
 801c542:	4615      	mov	r5, r2
 801c544:	e7ba      	b.n	801c4bc <_printf_i+0x150>
 801c546:	682b      	ldr	r3, [r5, #0]
 801c548:	1d1a      	adds	r2, r3, #4
 801c54a:	602a      	str	r2, [r5, #0]
 801c54c:	681d      	ldr	r5, [r3, #0]
 801c54e:	6862      	ldr	r2, [r4, #4]
 801c550:	2100      	movs	r1, #0
 801c552:	4628      	mov	r0, r5
 801c554:	f7e3 fe54 	bl	8000200 <memchr>
 801c558:	b108      	cbz	r0, 801c55e <_printf_i+0x1f2>
 801c55a:	1b40      	subs	r0, r0, r5
 801c55c:	6060      	str	r0, [r4, #4]
 801c55e:	6863      	ldr	r3, [r4, #4]
 801c560:	6123      	str	r3, [r4, #16]
 801c562:	2300      	movs	r3, #0
 801c564:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c568:	e7a8      	b.n	801c4bc <_printf_i+0x150>
 801c56a:	6923      	ldr	r3, [r4, #16]
 801c56c:	462a      	mov	r2, r5
 801c56e:	4649      	mov	r1, r9
 801c570:	4640      	mov	r0, r8
 801c572:	47d0      	blx	sl
 801c574:	3001      	adds	r0, #1
 801c576:	d0ab      	beq.n	801c4d0 <_printf_i+0x164>
 801c578:	6823      	ldr	r3, [r4, #0]
 801c57a:	079b      	lsls	r3, r3, #30
 801c57c:	d413      	bmi.n	801c5a6 <_printf_i+0x23a>
 801c57e:	68e0      	ldr	r0, [r4, #12]
 801c580:	9b03      	ldr	r3, [sp, #12]
 801c582:	4298      	cmp	r0, r3
 801c584:	bfb8      	it	lt
 801c586:	4618      	movlt	r0, r3
 801c588:	e7a4      	b.n	801c4d4 <_printf_i+0x168>
 801c58a:	2301      	movs	r3, #1
 801c58c:	4632      	mov	r2, r6
 801c58e:	4649      	mov	r1, r9
 801c590:	4640      	mov	r0, r8
 801c592:	47d0      	blx	sl
 801c594:	3001      	adds	r0, #1
 801c596:	d09b      	beq.n	801c4d0 <_printf_i+0x164>
 801c598:	3501      	adds	r5, #1
 801c59a:	68e3      	ldr	r3, [r4, #12]
 801c59c:	9903      	ldr	r1, [sp, #12]
 801c59e:	1a5b      	subs	r3, r3, r1
 801c5a0:	42ab      	cmp	r3, r5
 801c5a2:	dcf2      	bgt.n	801c58a <_printf_i+0x21e>
 801c5a4:	e7eb      	b.n	801c57e <_printf_i+0x212>
 801c5a6:	2500      	movs	r5, #0
 801c5a8:	f104 0619 	add.w	r6, r4, #25
 801c5ac:	e7f5      	b.n	801c59a <_printf_i+0x22e>
 801c5ae:	bf00      	nop
 801c5b0:	08020621 	.word	0x08020621
 801c5b4:	08020632 	.word	0x08020632

0801c5b8 <_sbrk_r>:
 801c5b8:	b538      	push	{r3, r4, r5, lr}
 801c5ba:	4d06      	ldr	r5, [pc, #24]	; (801c5d4 <_sbrk_r+0x1c>)
 801c5bc:	2300      	movs	r3, #0
 801c5be:	4604      	mov	r4, r0
 801c5c0:	4608      	mov	r0, r1
 801c5c2:	602b      	str	r3, [r5, #0]
 801c5c4:	f7e5 fd30 	bl	8002028 <_sbrk>
 801c5c8:	1c43      	adds	r3, r0, #1
 801c5ca:	d102      	bne.n	801c5d2 <_sbrk_r+0x1a>
 801c5cc:	682b      	ldr	r3, [r5, #0]
 801c5ce:	b103      	cbz	r3, 801c5d2 <_sbrk_r+0x1a>
 801c5d0:	6023      	str	r3, [r4, #0]
 801c5d2:	bd38      	pop	{r3, r4, r5, pc}
 801c5d4:	2000a8a0 	.word	0x2000a8a0

0801c5d8 <_raise_r>:
 801c5d8:	291f      	cmp	r1, #31
 801c5da:	b538      	push	{r3, r4, r5, lr}
 801c5dc:	4604      	mov	r4, r0
 801c5de:	460d      	mov	r5, r1
 801c5e0:	d904      	bls.n	801c5ec <_raise_r+0x14>
 801c5e2:	2316      	movs	r3, #22
 801c5e4:	6003      	str	r3, [r0, #0]
 801c5e6:	f04f 30ff 	mov.w	r0, #4294967295
 801c5ea:	bd38      	pop	{r3, r4, r5, pc}
 801c5ec:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801c5ee:	b112      	cbz	r2, 801c5f6 <_raise_r+0x1e>
 801c5f0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801c5f4:	b94b      	cbnz	r3, 801c60a <_raise_r+0x32>
 801c5f6:	4620      	mov	r0, r4
 801c5f8:	f000 f830 	bl	801c65c <_getpid_r>
 801c5fc:	462a      	mov	r2, r5
 801c5fe:	4601      	mov	r1, r0
 801c600:	4620      	mov	r0, r4
 801c602:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c606:	f000 b817 	b.w	801c638 <_kill_r>
 801c60a:	2b01      	cmp	r3, #1
 801c60c:	d00a      	beq.n	801c624 <_raise_r+0x4c>
 801c60e:	1c59      	adds	r1, r3, #1
 801c610:	d103      	bne.n	801c61a <_raise_r+0x42>
 801c612:	2316      	movs	r3, #22
 801c614:	6003      	str	r3, [r0, #0]
 801c616:	2001      	movs	r0, #1
 801c618:	e7e7      	b.n	801c5ea <_raise_r+0x12>
 801c61a:	2400      	movs	r4, #0
 801c61c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801c620:	4628      	mov	r0, r5
 801c622:	4798      	blx	r3
 801c624:	2000      	movs	r0, #0
 801c626:	e7e0      	b.n	801c5ea <_raise_r+0x12>

0801c628 <raise>:
 801c628:	4b02      	ldr	r3, [pc, #8]	; (801c634 <raise+0xc>)
 801c62a:	4601      	mov	r1, r0
 801c62c:	6818      	ldr	r0, [r3, #0]
 801c62e:	f7ff bfd3 	b.w	801c5d8 <_raise_r>
 801c632:	bf00      	nop
 801c634:	200000d8 	.word	0x200000d8

0801c638 <_kill_r>:
 801c638:	b538      	push	{r3, r4, r5, lr}
 801c63a:	4d07      	ldr	r5, [pc, #28]	; (801c658 <_kill_r+0x20>)
 801c63c:	2300      	movs	r3, #0
 801c63e:	4604      	mov	r4, r0
 801c640:	4608      	mov	r0, r1
 801c642:	4611      	mov	r1, r2
 801c644:	602b      	str	r3, [r5, #0]
 801c646:	f7e5 fcb9 	bl	8001fbc <_kill>
 801c64a:	1c43      	adds	r3, r0, #1
 801c64c:	d102      	bne.n	801c654 <_kill_r+0x1c>
 801c64e:	682b      	ldr	r3, [r5, #0]
 801c650:	b103      	cbz	r3, 801c654 <_kill_r+0x1c>
 801c652:	6023      	str	r3, [r4, #0]
 801c654:	bd38      	pop	{r3, r4, r5, pc}
 801c656:	bf00      	nop
 801c658:	2000a8a0 	.word	0x2000a8a0

0801c65c <_getpid_r>:
 801c65c:	f7e5 bcac 	b.w	8001fb8 <_getpid>

0801c660 <__swbuf_r>:
 801c660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c662:	460e      	mov	r6, r1
 801c664:	4614      	mov	r4, r2
 801c666:	4605      	mov	r5, r0
 801c668:	b118      	cbz	r0, 801c672 <__swbuf_r+0x12>
 801c66a:	6983      	ldr	r3, [r0, #24]
 801c66c:	b90b      	cbnz	r3, 801c672 <__swbuf_r+0x12>
 801c66e:	f000 fa33 	bl	801cad8 <__sinit>
 801c672:	4b21      	ldr	r3, [pc, #132]	; (801c6f8 <__swbuf_r+0x98>)
 801c674:	429c      	cmp	r4, r3
 801c676:	d12b      	bne.n	801c6d0 <__swbuf_r+0x70>
 801c678:	686c      	ldr	r4, [r5, #4]
 801c67a:	69a3      	ldr	r3, [r4, #24]
 801c67c:	60a3      	str	r3, [r4, #8]
 801c67e:	89a3      	ldrh	r3, [r4, #12]
 801c680:	071a      	lsls	r2, r3, #28
 801c682:	d52f      	bpl.n	801c6e4 <__swbuf_r+0x84>
 801c684:	6923      	ldr	r3, [r4, #16]
 801c686:	b36b      	cbz	r3, 801c6e4 <__swbuf_r+0x84>
 801c688:	6923      	ldr	r3, [r4, #16]
 801c68a:	6820      	ldr	r0, [r4, #0]
 801c68c:	1ac0      	subs	r0, r0, r3
 801c68e:	6963      	ldr	r3, [r4, #20]
 801c690:	b2f6      	uxtb	r6, r6
 801c692:	4283      	cmp	r3, r0
 801c694:	4637      	mov	r7, r6
 801c696:	dc04      	bgt.n	801c6a2 <__swbuf_r+0x42>
 801c698:	4621      	mov	r1, r4
 801c69a:	4628      	mov	r0, r5
 801c69c:	f000 f988 	bl	801c9b0 <_fflush_r>
 801c6a0:	bb30      	cbnz	r0, 801c6f0 <__swbuf_r+0x90>
 801c6a2:	68a3      	ldr	r3, [r4, #8]
 801c6a4:	3b01      	subs	r3, #1
 801c6a6:	60a3      	str	r3, [r4, #8]
 801c6a8:	6823      	ldr	r3, [r4, #0]
 801c6aa:	1c5a      	adds	r2, r3, #1
 801c6ac:	6022      	str	r2, [r4, #0]
 801c6ae:	701e      	strb	r6, [r3, #0]
 801c6b0:	6963      	ldr	r3, [r4, #20]
 801c6b2:	3001      	adds	r0, #1
 801c6b4:	4283      	cmp	r3, r0
 801c6b6:	d004      	beq.n	801c6c2 <__swbuf_r+0x62>
 801c6b8:	89a3      	ldrh	r3, [r4, #12]
 801c6ba:	07db      	lsls	r3, r3, #31
 801c6bc:	d506      	bpl.n	801c6cc <__swbuf_r+0x6c>
 801c6be:	2e0a      	cmp	r6, #10
 801c6c0:	d104      	bne.n	801c6cc <__swbuf_r+0x6c>
 801c6c2:	4621      	mov	r1, r4
 801c6c4:	4628      	mov	r0, r5
 801c6c6:	f000 f973 	bl	801c9b0 <_fflush_r>
 801c6ca:	b988      	cbnz	r0, 801c6f0 <__swbuf_r+0x90>
 801c6cc:	4638      	mov	r0, r7
 801c6ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c6d0:	4b0a      	ldr	r3, [pc, #40]	; (801c6fc <__swbuf_r+0x9c>)
 801c6d2:	429c      	cmp	r4, r3
 801c6d4:	d101      	bne.n	801c6da <__swbuf_r+0x7a>
 801c6d6:	68ac      	ldr	r4, [r5, #8]
 801c6d8:	e7cf      	b.n	801c67a <__swbuf_r+0x1a>
 801c6da:	4b09      	ldr	r3, [pc, #36]	; (801c700 <__swbuf_r+0xa0>)
 801c6dc:	429c      	cmp	r4, r3
 801c6de:	bf08      	it	eq
 801c6e0:	68ec      	ldreq	r4, [r5, #12]
 801c6e2:	e7ca      	b.n	801c67a <__swbuf_r+0x1a>
 801c6e4:	4621      	mov	r1, r4
 801c6e6:	4628      	mov	r0, r5
 801c6e8:	f000 f80c 	bl	801c704 <__swsetup_r>
 801c6ec:	2800      	cmp	r0, #0
 801c6ee:	d0cb      	beq.n	801c688 <__swbuf_r+0x28>
 801c6f0:	f04f 37ff 	mov.w	r7, #4294967295
 801c6f4:	e7ea      	b.n	801c6cc <__swbuf_r+0x6c>
 801c6f6:	bf00      	nop
 801c6f8:	08020668 	.word	0x08020668
 801c6fc:	08020688 	.word	0x08020688
 801c700:	08020648 	.word	0x08020648

0801c704 <__swsetup_r>:
 801c704:	4b32      	ldr	r3, [pc, #200]	; (801c7d0 <__swsetup_r+0xcc>)
 801c706:	b570      	push	{r4, r5, r6, lr}
 801c708:	681d      	ldr	r5, [r3, #0]
 801c70a:	4606      	mov	r6, r0
 801c70c:	460c      	mov	r4, r1
 801c70e:	b125      	cbz	r5, 801c71a <__swsetup_r+0x16>
 801c710:	69ab      	ldr	r3, [r5, #24]
 801c712:	b913      	cbnz	r3, 801c71a <__swsetup_r+0x16>
 801c714:	4628      	mov	r0, r5
 801c716:	f000 f9df 	bl	801cad8 <__sinit>
 801c71a:	4b2e      	ldr	r3, [pc, #184]	; (801c7d4 <__swsetup_r+0xd0>)
 801c71c:	429c      	cmp	r4, r3
 801c71e:	d10f      	bne.n	801c740 <__swsetup_r+0x3c>
 801c720:	686c      	ldr	r4, [r5, #4]
 801c722:	89a3      	ldrh	r3, [r4, #12]
 801c724:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c728:	0719      	lsls	r1, r3, #28
 801c72a:	d42c      	bmi.n	801c786 <__swsetup_r+0x82>
 801c72c:	06dd      	lsls	r5, r3, #27
 801c72e:	d411      	bmi.n	801c754 <__swsetup_r+0x50>
 801c730:	2309      	movs	r3, #9
 801c732:	6033      	str	r3, [r6, #0]
 801c734:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801c738:	81a3      	strh	r3, [r4, #12]
 801c73a:	f04f 30ff 	mov.w	r0, #4294967295
 801c73e:	e03e      	b.n	801c7be <__swsetup_r+0xba>
 801c740:	4b25      	ldr	r3, [pc, #148]	; (801c7d8 <__swsetup_r+0xd4>)
 801c742:	429c      	cmp	r4, r3
 801c744:	d101      	bne.n	801c74a <__swsetup_r+0x46>
 801c746:	68ac      	ldr	r4, [r5, #8]
 801c748:	e7eb      	b.n	801c722 <__swsetup_r+0x1e>
 801c74a:	4b24      	ldr	r3, [pc, #144]	; (801c7dc <__swsetup_r+0xd8>)
 801c74c:	429c      	cmp	r4, r3
 801c74e:	bf08      	it	eq
 801c750:	68ec      	ldreq	r4, [r5, #12]
 801c752:	e7e6      	b.n	801c722 <__swsetup_r+0x1e>
 801c754:	0758      	lsls	r0, r3, #29
 801c756:	d512      	bpl.n	801c77e <__swsetup_r+0x7a>
 801c758:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c75a:	b141      	cbz	r1, 801c76e <__swsetup_r+0x6a>
 801c75c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c760:	4299      	cmp	r1, r3
 801c762:	d002      	beq.n	801c76a <__swsetup_r+0x66>
 801c764:	4630      	mov	r0, r6
 801c766:	f7ff fb59 	bl	801be1c <_free_r>
 801c76a:	2300      	movs	r3, #0
 801c76c:	6363      	str	r3, [r4, #52]	; 0x34
 801c76e:	89a3      	ldrh	r3, [r4, #12]
 801c770:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801c774:	81a3      	strh	r3, [r4, #12]
 801c776:	2300      	movs	r3, #0
 801c778:	6063      	str	r3, [r4, #4]
 801c77a:	6923      	ldr	r3, [r4, #16]
 801c77c:	6023      	str	r3, [r4, #0]
 801c77e:	89a3      	ldrh	r3, [r4, #12]
 801c780:	f043 0308 	orr.w	r3, r3, #8
 801c784:	81a3      	strh	r3, [r4, #12]
 801c786:	6923      	ldr	r3, [r4, #16]
 801c788:	b94b      	cbnz	r3, 801c79e <__swsetup_r+0x9a>
 801c78a:	89a3      	ldrh	r3, [r4, #12]
 801c78c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801c790:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801c794:	d003      	beq.n	801c79e <__swsetup_r+0x9a>
 801c796:	4621      	mov	r1, r4
 801c798:	4630      	mov	r0, r6
 801c79a:	f000 fa63 	bl	801cc64 <__smakebuf_r>
 801c79e:	89a0      	ldrh	r0, [r4, #12]
 801c7a0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c7a4:	f010 0301 	ands.w	r3, r0, #1
 801c7a8:	d00a      	beq.n	801c7c0 <__swsetup_r+0xbc>
 801c7aa:	2300      	movs	r3, #0
 801c7ac:	60a3      	str	r3, [r4, #8]
 801c7ae:	6963      	ldr	r3, [r4, #20]
 801c7b0:	425b      	negs	r3, r3
 801c7b2:	61a3      	str	r3, [r4, #24]
 801c7b4:	6923      	ldr	r3, [r4, #16]
 801c7b6:	b943      	cbnz	r3, 801c7ca <__swsetup_r+0xc6>
 801c7b8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801c7bc:	d1ba      	bne.n	801c734 <__swsetup_r+0x30>
 801c7be:	bd70      	pop	{r4, r5, r6, pc}
 801c7c0:	0781      	lsls	r1, r0, #30
 801c7c2:	bf58      	it	pl
 801c7c4:	6963      	ldrpl	r3, [r4, #20]
 801c7c6:	60a3      	str	r3, [r4, #8]
 801c7c8:	e7f4      	b.n	801c7b4 <__swsetup_r+0xb0>
 801c7ca:	2000      	movs	r0, #0
 801c7cc:	e7f7      	b.n	801c7be <__swsetup_r+0xba>
 801c7ce:	bf00      	nop
 801c7d0:	200000d8 	.word	0x200000d8
 801c7d4:	08020668 	.word	0x08020668
 801c7d8:	08020688 	.word	0x08020688
 801c7dc:	08020648 	.word	0x08020648

0801c7e0 <__register_exitproc>:
 801c7e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c7e4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801c8a0 <__register_exitproc+0xc0>
 801c7e8:	4606      	mov	r6, r0
 801c7ea:	f8d8 0000 	ldr.w	r0, [r8]
 801c7ee:	461f      	mov	r7, r3
 801c7f0:	460d      	mov	r5, r1
 801c7f2:	4691      	mov	r9, r2
 801c7f4:	f000 fa0e 	bl	801cc14 <__retarget_lock_acquire_recursive>
 801c7f8:	4b25      	ldr	r3, [pc, #148]	; (801c890 <__register_exitproc+0xb0>)
 801c7fa:	681c      	ldr	r4, [r3, #0]
 801c7fc:	b934      	cbnz	r4, 801c80c <__register_exitproc+0x2c>
 801c7fe:	4c25      	ldr	r4, [pc, #148]	; (801c894 <__register_exitproc+0xb4>)
 801c800:	601c      	str	r4, [r3, #0]
 801c802:	4b25      	ldr	r3, [pc, #148]	; (801c898 <__register_exitproc+0xb8>)
 801c804:	b113      	cbz	r3, 801c80c <__register_exitproc+0x2c>
 801c806:	681b      	ldr	r3, [r3, #0]
 801c808:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801c80c:	6863      	ldr	r3, [r4, #4]
 801c80e:	2b1f      	cmp	r3, #31
 801c810:	dd07      	ble.n	801c822 <__register_exitproc+0x42>
 801c812:	f8d8 0000 	ldr.w	r0, [r8]
 801c816:	f000 f9ff 	bl	801cc18 <__retarget_lock_release_recursive>
 801c81a:	f04f 30ff 	mov.w	r0, #4294967295
 801c81e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c822:	b34e      	cbz	r6, 801c878 <__register_exitproc+0x98>
 801c824:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c828:	b988      	cbnz	r0, 801c84e <__register_exitproc+0x6e>
 801c82a:	4b1c      	ldr	r3, [pc, #112]	; (801c89c <__register_exitproc+0xbc>)
 801c82c:	b923      	cbnz	r3, 801c838 <__register_exitproc+0x58>
 801c82e:	f8d8 0000 	ldr.w	r0, [r8]
 801c832:	f000 f9f0 	bl	801cc16 <__retarget_lock_release>
 801c836:	e7f0      	b.n	801c81a <__register_exitproc+0x3a>
 801c838:	f44f 7084 	mov.w	r0, #264	; 0x108
 801c83c:	f7ff fac8 	bl	801bdd0 <malloc>
 801c840:	2800      	cmp	r0, #0
 801c842:	d0f4      	beq.n	801c82e <__register_exitproc+0x4e>
 801c844:	2300      	movs	r3, #0
 801c846:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801c84a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801c84e:	6863      	ldr	r3, [r4, #4]
 801c850:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801c854:	2201      	movs	r2, #1
 801c856:	409a      	lsls	r2, r3
 801c858:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801c85c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801c860:	4313      	orrs	r3, r2
 801c862:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801c866:	2e02      	cmp	r6, #2
 801c868:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801c86c:	bf02      	ittt	eq
 801c86e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801c872:	4313      	orreq	r3, r2
 801c874:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801c878:	6863      	ldr	r3, [r4, #4]
 801c87a:	f8d8 0000 	ldr.w	r0, [r8]
 801c87e:	1c5a      	adds	r2, r3, #1
 801c880:	3302      	adds	r3, #2
 801c882:	6062      	str	r2, [r4, #4]
 801c884:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801c888:	f000 f9c6 	bl	801cc18 <__retarget_lock_release_recursive>
 801c88c:	2000      	movs	r0, #0
 801c88e:	e7c6      	b.n	801c81e <__register_exitproc+0x3e>
 801c890:	2000a898 	.word	0x2000a898
 801c894:	2000a80c 	.word	0x2000a80c
 801c898:	08020644 	.word	0x08020644
 801c89c:	0801bdd1 	.word	0x0801bdd1
 801c8a0:	2000013c 	.word	0x2000013c

0801c8a4 <__sflush_r>:
 801c8a4:	898a      	ldrh	r2, [r1, #12]
 801c8a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c8aa:	4605      	mov	r5, r0
 801c8ac:	0710      	lsls	r0, r2, #28
 801c8ae:	460c      	mov	r4, r1
 801c8b0:	d458      	bmi.n	801c964 <__sflush_r+0xc0>
 801c8b2:	684b      	ldr	r3, [r1, #4]
 801c8b4:	2b00      	cmp	r3, #0
 801c8b6:	dc05      	bgt.n	801c8c4 <__sflush_r+0x20>
 801c8b8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801c8ba:	2b00      	cmp	r3, #0
 801c8bc:	dc02      	bgt.n	801c8c4 <__sflush_r+0x20>
 801c8be:	2000      	movs	r0, #0
 801c8c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c8c4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c8c6:	2e00      	cmp	r6, #0
 801c8c8:	d0f9      	beq.n	801c8be <__sflush_r+0x1a>
 801c8ca:	2300      	movs	r3, #0
 801c8cc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801c8d0:	682f      	ldr	r7, [r5, #0]
 801c8d2:	602b      	str	r3, [r5, #0]
 801c8d4:	d032      	beq.n	801c93c <__sflush_r+0x98>
 801c8d6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801c8d8:	89a3      	ldrh	r3, [r4, #12]
 801c8da:	075a      	lsls	r2, r3, #29
 801c8dc:	d505      	bpl.n	801c8ea <__sflush_r+0x46>
 801c8de:	6863      	ldr	r3, [r4, #4]
 801c8e0:	1ac0      	subs	r0, r0, r3
 801c8e2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801c8e4:	b10b      	cbz	r3, 801c8ea <__sflush_r+0x46>
 801c8e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c8e8:	1ac0      	subs	r0, r0, r3
 801c8ea:	2300      	movs	r3, #0
 801c8ec:	4602      	mov	r2, r0
 801c8ee:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c8f0:	6a21      	ldr	r1, [r4, #32]
 801c8f2:	4628      	mov	r0, r5
 801c8f4:	47b0      	blx	r6
 801c8f6:	1c43      	adds	r3, r0, #1
 801c8f8:	89a3      	ldrh	r3, [r4, #12]
 801c8fa:	d106      	bne.n	801c90a <__sflush_r+0x66>
 801c8fc:	6829      	ldr	r1, [r5, #0]
 801c8fe:	291d      	cmp	r1, #29
 801c900:	d82c      	bhi.n	801c95c <__sflush_r+0xb8>
 801c902:	4a2a      	ldr	r2, [pc, #168]	; (801c9ac <__sflush_r+0x108>)
 801c904:	40ca      	lsrs	r2, r1
 801c906:	07d6      	lsls	r6, r2, #31
 801c908:	d528      	bpl.n	801c95c <__sflush_r+0xb8>
 801c90a:	2200      	movs	r2, #0
 801c90c:	6062      	str	r2, [r4, #4]
 801c90e:	04d9      	lsls	r1, r3, #19
 801c910:	6922      	ldr	r2, [r4, #16]
 801c912:	6022      	str	r2, [r4, #0]
 801c914:	d504      	bpl.n	801c920 <__sflush_r+0x7c>
 801c916:	1c42      	adds	r2, r0, #1
 801c918:	d101      	bne.n	801c91e <__sflush_r+0x7a>
 801c91a:	682b      	ldr	r3, [r5, #0]
 801c91c:	b903      	cbnz	r3, 801c920 <__sflush_r+0x7c>
 801c91e:	6560      	str	r0, [r4, #84]	; 0x54
 801c920:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c922:	602f      	str	r7, [r5, #0]
 801c924:	2900      	cmp	r1, #0
 801c926:	d0ca      	beq.n	801c8be <__sflush_r+0x1a>
 801c928:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c92c:	4299      	cmp	r1, r3
 801c92e:	d002      	beq.n	801c936 <__sflush_r+0x92>
 801c930:	4628      	mov	r0, r5
 801c932:	f7ff fa73 	bl	801be1c <_free_r>
 801c936:	2000      	movs	r0, #0
 801c938:	6360      	str	r0, [r4, #52]	; 0x34
 801c93a:	e7c1      	b.n	801c8c0 <__sflush_r+0x1c>
 801c93c:	6a21      	ldr	r1, [r4, #32]
 801c93e:	2301      	movs	r3, #1
 801c940:	4628      	mov	r0, r5
 801c942:	47b0      	blx	r6
 801c944:	1c41      	adds	r1, r0, #1
 801c946:	d1c7      	bne.n	801c8d8 <__sflush_r+0x34>
 801c948:	682b      	ldr	r3, [r5, #0]
 801c94a:	2b00      	cmp	r3, #0
 801c94c:	d0c4      	beq.n	801c8d8 <__sflush_r+0x34>
 801c94e:	2b1d      	cmp	r3, #29
 801c950:	d001      	beq.n	801c956 <__sflush_r+0xb2>
 801c952:	2b16      	cmp	r3, #22
 801c954:	d101      	bne.n	801c95a <__sflush_r+0xb6>
 801c956:	602f      	str	r7, [r5, #0]
 801c958:	e7b1      	b.n	801c8be <__sflush_r+0x1a>
 801c95a:	89a3      	ldrh	r3, [r4, #12]
 801c95c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c960:	81a3      	strh	r3, [r4, #12]
 801c962:	e7ad      	b.n	801c8c0 <__sflush_r+0x1c>
 801c964:	690f      	ldr	r7, [r1, #16]
 801c966:	2f00      	cmp	r7, #0
 801c968:	d0a9      	beq.n	801c8be <__sflush_r+0x1a>
 801c96a:	0793      	lsls	r3, r2, #30
 801c96c:	680e      	ldr	r6, [r1, #0]
 801c96e:	bf08      	it	eq
 801c970:	694b      	ldreq	r3, [r1, #20]
 801c972:	600f      	str	r7, [r1, #0]
 801c974:	bf18      	it	ne
 801c976:	2300      	movne	r3, #0
 801c978:	eba6 0807 	sub.w	r8, r6, r7
 801c97c:	608b      	str	r3, [r1, #8]
 801c97e:	f1b8 0f00 	cmp.w	r8, #0
 801c982:	dd9c      	ble.n	801c8be <__sflush_r+0x1a>
 801c984:	6a21      	ldr	r1, [r4, #32]
 801c986:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c988:	4643      	mov	r3, r8
 801c98a:	463a      	mov	r2, r7
 801c98c:	4628      	mov	r0, r5
 801c98e:	47b0      	blx	r6
 801c990:	2800      	cmp	r0, #0
 801c992:	dc06      	bgt.n	801c9a2 <__sflush_r+0xfe>
 801c994:	89a3      	ldrh	r3, [r4, #12]
 801c996:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c99a:	81a3      	strh	r3, [r4, #12]
 801c99c:	f04f 30ff 	mov.w	r0, #4294967295
 801c9a0:	e78e      	b.n	801c8c0 <__sflush_r+0x1c>
 801c9a2:	4407      	add	r7, r0
 801c9a4:	eba8 0800 	sub.w	r8, r8, r0
 801c9a8:	e7e9      	b.n	801c97e <__sflush_r+0xda>
 801c9aa:	bf00      	nop
 801c9ac:	20400001 	.word	0x20400001

0801c9b0 <_fflush_r>:
 801c9b0:	b538      	push	{r3, r4, r5, lr}
 801c9b2:	690b      	ldr	r3, [r1, #16]
 801c9b4:	4605      	mov	r5, r0
 801c9b6:	460c      	mov	r4, r1
 801c9b8:	b913      	cbnz	r3, 801c9c0 <_fflush_r+0x10>
 801c9ba:	2500      	movs	r5, #0
 801c9bc:	4628      	mov	r0, r5
 801c9be:	bd38      	pop	{r3, r4, r5, pc}
 801c9c0:	b118      	cbz	r0, 801c9ca <_fflush_r+0x1a>
 801c9c2:	6983      	ldr	r3, [r0, #24]
 801c9c4:	b90b      	cbnz	r3, 801c9ca <_fflush_r+0x1a>
 801c9c6:	f000 f887 	bl	801cad8 <__sinit>
 801c9ca:	4b14      	ldr	r3, [pc, #80]	; (801ca1c <_fflush_r+0x6c>)
 801c9cc:	429c      	cmp	r4, r3
 801c9ce:	d11b      	bne.n	801ca08 <_fflush_r+0x58>
 801c9d0:	686c      	ldr	r4, [r5, #4]
 801c9d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c9d6:	2b00      	cmp	r3, #0
 801c9d8:	d0ef      	beq.n	801c9ba <_fflush_r+0xa>
 801c9da:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801c9dc:	07d0      	lsls	r0, r2, #31
 801c9de:	d404      	bmi.n	801c9ea <_fflush_r+0x3a>
 801c9e0:	0599      	lsls	r1, r3, #22
 801c9e2:	d402      	bmi.n	801c9ea <_fflush_r+0x3a>
 801c9e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c9e6:	f000 f915 	bl	801cc14 <__retarget_lock_acquire_recursive>
 801c9ea:	4628      	mov	r0, r5
 801c9ec:	4621      	mov	r1, r4
 801c9ee:	f7ff ff59 	bl	801c8a4 <__sflush_r>
 801c9f2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c9f4:	07da      	lsls	r2, r3, #31
 801c9f6:	4605      	mov	r5, r0
 801c9f8:	d4e0      	bmi.n	801c9bc <_fflush_r+0xc>
 801c9fa:	89a3      	ldrh	r3, [r4, #12]
 801c9fc:	059b      	lsls	r3, r3, #22
 801c9fe:	d4dd      	bmi.n	801c9bc <_fflush_r+0xc>
 801ca00:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ca02:	f000 f909 	bl	801cc18 <__retarget_lock_release_recursive>
 801ca06:	e7d9      	b.n	801c9bc <_fflush_r+0xc>
 801ca08:	4b05      	ldr	r3, [pc, #20]	; (801ca20 <_fflush_r+0x70>)
 801ca0a:	429c      	cmp	r4, r3
 801ca0c:	d101      	bne.n	801ca12 <_fflush_r+0x62>
 801ca0e:	68ac      	ldr	r4, [r5, #8]
 801ca10:	e7df      	b.n	801c9d2 <_fflush_r+0x22>
 801ca12:	4b04      	ldr	r3, [pc, #16]	; (801ca24 <_fflush_r+0x74>)
 801ca14:	429c      	cmp	r4, r3
 801ca16:	bf08      	it	eq
 801ca18:	68ec      	ldreq	r4, [r5, #12]
 801ca1a:	e7da      	b.n	801c9d2 <_fflush_r+0x22>
 801ca1c:	08020668 	.word	0x08020668
 801ca20:	08020688 	.word	0x08020688
 801ca24:	08020648 	.word	0x08020648

0801ca28 <std>:
 801ca28:	2300      	movs	r3, #0
 801ca2a:	b510      	push	{r4, lr}
 801ca2c:	4604      	mov	r4, r0
 801ca2e:	e9c0 3300 	strd	r3, r3, [r0]
 801ca32:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ca36:	6083      	str	r3, [r0, #8]
 801ca38:	8181      	strh	r1, [r0, #12]
 801ca3a:	6643      	str	r3, [r0, #100]	; 0x64
 801ca3c:	81c2      	strh	r2, [r0, #14]
 801ca3e:	6183      	str	r3, [r0, #24]
 801ca40:	4619      	mov	r1, r3
 801ca42:	2208      	movs	r2, #8
 801ca44:	305c      	adds	r0, #92	; 0x5c
 801ca46:	f7ff f9e1 	bl	801be0c <memset>
 801ca4a:	4b05      	ldr	r3, [pc, #20]	; (801ca60 <std+0x38>)
 801ca4c:	6263      	str	r3, [r4, #36]	; 0x24
 801ca4e:	4b05      	ldr	r3, [pc, #20]	; (801ca64 <std+0x3c>)
 801ca50:	62a3      	str	r3, [r4, #40]	; 0x28
 801ca52:	4b05      	ldr	r3, [pc, #20]	; (801ca68 <std+0x40>)
 801ca54:	62e3      	str	r3, [r4, #44]	; 0x2c
 801ca56:	4b05      	ldr	r3, [pc, #20]	; (801ca6c <std+0x44>)
 801ca58:	6224      	str	r4, [r4, #32]
 801ca5a:	6323      	str	r3, [r4, #48]	; 0x30
 801ca5c:	bd10      	pop	{r4, pc}
 801ca5e:	bf00      	nop
 801ca60:	0801ccfd 	.word	0x0801ccfd
 801ca64:	0801cd1f 	.word	0x0801cd1f
 801ca68:	0801cd57 	.word	0x0801cd57
 801ca6c:	0801cd7b 	.word	0x0801cd7b

0801ca70 <_cleanup_r>:
 801ca70:	4901      	ldr	r1, [pc, #4]	; (801ca78 <_cleanup_r+0x8>)
 801ca72:	f000 b8af 	b.w	801cbd4 <_fwalk_reent>
 801ca76:	bf00      	nop
 801ca78:	0801c9b1 	.word	0x0801c9b1

0801ca7c <__sfmoreglue>:
 801ca7c:	b570      	push	{r4, r5, r6, lr}
 801ca7e:	2268      	movs	r2, #104	; 0x68
 801ca80:	1e4d      	subs	r5, r1, #1
 801ca82:	4355      	muls	r5, r2
 801ca84:	460e      	mov	r6, r1
 801ca86:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801ca8a:	f7ff fa33 	bl	801bef4 <_malloc_r>
 801ca8e:	4604      	mov	r4, r0
 801ca90:	b140      	cbz	r0, 801caa4 <__sfmoreglue+0x28>
 801ca92:	2100      	movs	r1, #0
 801ca94:	e9c0 1600 	strd	r1, r6, [r0]
 801ca98:	300c      	adds	r0, #12
 801ca9a:	60a0      	str	r0, [r4, #8]
 801ca9c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801caa0:	f7ff f9b4 	bl	801be0c <memset>
 801caa4:	4620      	mov	r0, r4
 801caa6:	bd70      	pop	{r4, r5, r6, pc}

0801caa8 <__sfp_lock_acquire>:
 801caa8:	4801      	ldr	r0, [pc, #4]	; (801cab0 <__sfp_lock_acquire+0x8>)
 801caaa:	f000 b8b3 	b.w	801cc14 <__retarget_lock_acquire_recursive>
 801caae:	bf00      	nop
 801cab0:	2000a89e 	.word	0x2000a89e

0801cab4 <__sfp_lock_release>:
 801cab4:	4801      	ldr	r0, [pc, #4]	; (801cabc <__sfp_lock_release+0x8>)
 801cab6:	f000 b8af 	b.w	801cc18 <__retarget_lock_release_recursive>
 801caba:	bf00      	nop
 801cabc:	2000a89e 	.word	0x2000a89e

0801cac0 <__sinit_lock_acquire>:
 801cac0:	4801      	ldr	r0, [pc, #4]	; (801cac8 <__sinit_lock_acquire+0x8>)
 801cac2:	f000 b8a7 	b.w	801cc14 <__retarget_lock_acquire_recursive>
 801cac6:	bf00      	nop
 801cac8:	2000a89f 	.word	0x2000a89f

0801cacc <__sinit_lock_release>:
 801cacc:	4801      	ldr	r0, [pc, #4]	; (801cad4 <__sinit_lock_release+0x8>)
 801cace:	f000 b8a3 	b.w	801cc18 <__retarget_lock_release_recursive>
 801cad2:	bf00      	nop
 801cad4:	2000a89f 	.word	0x2000a89f

0801cad8 <__sinit>:
 801cad8:	b510      	push	{r4, lr}
 801cada:	4604      	mov	r4, r0
 801cadc:	f7ff fff0 	bl	801cac0 <__sinit_lock_acquire>
 801cae0:	69a3      	ldr	r3, [r4, #24]
 801cae2:	b11b      	cbz	r3, 801caec <__sinit+0x14>
 801cae4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cae8:	f7ff bff0 	b.w	801cacc <__sinit_lock_release>
 801caec:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801caf0:	6523      	str	r3, [r4, #80]	; 0x50
 801caf2:	4b13      	ldr	r3, [pc, #76]	; (801cb40 <__sinit+0x68>)
 801caf4:	4a13      	ldr	r2, [pc, #76]	; (801cb44 <__sinit+0x6c>)
 801caf6:	681b      	ldr	r3, [r3, #0]
 801caf8:	62a2      	str	r2, [r4, #40]	; 0x28
 801cafa:	42a3      	cmp	r3, r4
 801cafc:	bf04      	itt	eq
 801cafe:	2301      	moveq	r3, #1
 801cb00:	61a3      	streq	r3, [r4, #24]
 801cb02:	4620      	mov	r0, r4
 801cb04:	f000 f820 	bl	801cb48 <__sfp>
 801cb08:	6060      	str	r0, [r4, #4]
 801cb0a:	4620      	mov	r0, r4
 801cb0c:	f000 f81c 	bl	801cb48 <__sfp>
 801cb10:	60a0      	str	r0, [r4, #8]
 801cb12:	4620      	mov	r0, r4
 801cb14:	f000 f818 	bl	801cb48 <__sfp>
 801cb18:	2200      	movs	r2, #0
 801cb1a:	60e0      	str	r0, [r4, #12]
 801cb1c:	2104      	movs	r1, #4
 801cb1e:	6860      	ldr	r0, [r4, #4]
 801cb20:	f7ff ff82 	bl	801ca28 <std>
 801cb24:	68a0      	ldr	r0, [r4, #8]
 801cb26:	2201      	movs	r2, #1
 801cb28:	2109      	movs	r1, #9
 801cb2a:	f7ff ff7d 	bl	801ca28 <std>
 801cb2e:	68e0      	ldr	r0, [r4, #12]
 801cb30:	2202      	movs	r2, #2
 801cb32:	2112      	movs	r1, #18
 801cb34:	f7ff ff78 	bl	801ca28 <std>
 801cb38:	2301      	movs	r3, #1
 801cb3a:	61a3      	str	r3, [r4, #24]
 801cb3c:	e7d2      	b.n	801cae4 <__sinit+0xc>
 801cb3e:	bf00      	nop
 801cb40:	0802060c 	.word	0x0802060c
 801cb44:	0801ca71 	.word	0x0801ca71

0801cb48 <__sfp>:
 801cb48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cb4a:	4607      	mov	r7, r0
 801cb4c:	f7ff ffac 	bl	801caa8 <__sfp_lock_acquire>
 801cb50:	4b1e      	ldr	r3, [pc, #120]	; (801cbcc <__sfp+0x84>)
 801cb52:	681e      	ldr	r6, [r3, #0]
 801cb54:	69b3      	ldr	r3, [r6, #24]
 801cb56:	b913      	cbnz	r3, 801cb5e <__sfp+0x16>
 801cb58:	4630      	mov	r0, r6
 801cb5a:	f7ff ffbd 	bl	801cad8 <__sinit>
 801cb5e:	3648      	adds	r6, #72	; 0x48
 801cb60:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801cb64:	3b01      	subs	r3, #1
 801cb66:	d503      	bpl.n	801cb70 <__sfp+0x28>
 801cb68:	6833      	ldr	r3, [r6, #0]
 801cb6a:	b30b      	cbz	r3, 801cbb0 <__sfp+0x68>
 801cb6c:	6836      	ldr	r6, [r6, #0]
 801cb6e:	e7f7      	b.n	801cb60 <__sfp+0x18>
 801cb70:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801cb74:	b9d5      	cbnz	r5, 801cbac <__sfp+0x64>
 801cb76:	4b16      	ldr	r3, [pc, #88]	; (801cbd0 <__sfp+0x88>)
 801cb78:	60e3      	str	r3, [r4, #12]
 801cb7a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801cb7e:	6665      	str	r5, [r4, #100]	; 0x64
 801cb80:	f000 f847 	bl	801cc12 <__retarget_lock_init_recursive>
 801cb84:	f7ff ff96 	bl	801cab4 <__sfp_lock_release>
 801cb88:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801cb8c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801cb90:	6025      	str	r5, [r4, #0]
 801cb92:	61a5      	str	r5, [r4, #24]
 801cb94:	2208      	movs	r2, #8
 801cb96:	4629      	mov	r1, r5
 801cb98:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801cb9c:	f7ff f936 	bl	801be0c <memset>
 801cba0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801cba4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801cba8:	4620      	mov	r0, r4
 801cbaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801cbac:	3468      	adds	r4, #104	; 0x68
 801cbae:	e7d9      	b.n	801cb64 <__sfp+0x1c>
 801cbb0:	2104      	movs	r1, #4
 801cbb2:	4638      	mov	r0, r7
 801cbb4:	f7ff ff62 	bl	801ca7c <__sfmoreglue>
 801cbb8:	4604      	mov	r4, r0
 801cbba:	6030      	str	r0, [r6, #0]
 801cbbc:	2800      	cmp	r0, #0
 801cbbe:	d1d5      	bne.n	801cb6c <__sfp+0x24>
 801cbc0:	f7ff ff78 	bl	801cab4 <__sfp_lock_release>
 801cbc4:	230c      	movs	r3, #12
 801cbc6:	603b      	str	r3, [r7, #0]
 801cbc8:	e7ee      	b.n	801cba8 <__sfp+0x60>
 801cbca:	bf00      	nop
 801cbcc:	0802060c 	.word	0x0802060c
 801cbd0:	ffff0001 	.word	0xffff0001

0801cbd4 <_fwalk_reent>:
 801cbd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801cbd8:	4606      	mov	r6, r0
 801cbda:	4688      	mov	r8, r1
 801cbdc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801cbe0:	2700      	movs	r7, #0
 801cbe2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801cbe6:	f1b9 0901 	subs.w	r9, r9, #1
 801cbea:	d505      	bpl.n	801cbf8 <_fwalk_reent+0x24>
 801cbec:	6824      	ldr	r4, [r4, #0]
 801cbee:	2c00      	cmp	r4, #0
 801cbf0:	d1f7      	bne.n	801cbe2 <_fwalk_reent+0xe>
 801cbf2:	4638      	mov	r0, r7
 801cbf4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801cbf8:	89ab      	ldrh	r3, [r5, #12]
 801cbfa:	2b01      	cmp	r3, #1
 801cbfc:	d907      	bls.n	801cc0e <_fwalk_reent+0x3a>
 801cbfe:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801cc02:	3301      	adds	r3, #1
 801cc04:	d003      	beq.n	801cc0e <_fwalk_reent+0x3a>
 801cc06:	4629      	mov	r1, r5
 801cc08:	4630      	mov	r0, r6
 801cc0a:	47c0      	blx	r8
 801cc0c:	4307      	orrs	r7, r0
 801cc0e:	3568      	adds	r5, #104	; 0x68
 801cc10:	e7e9      	b.n	801cbe6 <_fwalk_reent+0x12>

0801cc12 <__retarget_lock_init_recursive>:
 801cc12:	4770      	bx	lr

0801cc14 <__retarget_lock_acquire_recursive>:
 801cc14:	4770      	bx	lr

0801cc16 <__retarget_lock_release>:
 801cc16:	4770      	bx	lr

0801cc18 <__retarget_lock_release_recursive>:
 801cc18:	4770      	bx	lr

0801cc1a <__swhatbuf_r>:
 801cc1a:	b570      	push	{r4, r5, r6, lr}
 801cc1c:	460e      	mov	r6, r1
 801cc1e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cc22:	2900      	cmp	r1, #0
 801cc24:	b096      	sub	sp, #88	; 0x58
 801cc26:	4614      	mov	r4, r2
 801cc28:	461d      	mov	r5, r3
 801cc2a:	da08      	bge.n	801cc3e <__swhatbuf_r+0x24>
 801cc2c:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801cc30:	2200      	movs	r2, #0
 801cc32:	602a      	str	r2, [r5, #0]
 801cc34:	061a      	lsls	r2, r3, #24
 801cc36:	d410      	bmi.n	801cc5a <__swhatbuf_r+0x40>
 801cc38:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801cc3c:	e00e      	b.n	801cc5c <__swhatbuf_r+0x42>
 801cc3e:	466a      	mov	r2, sp
 801cc40:	f000 f8c2 	bl	801cdc8 <_fstat_r>
 801cc44:	2800      	cmp	r0, #0
 801cc46:	dbf1      	blt.n	801cc2c <__swhatbuf_r+0x12>
 801cc48:	9a01      	ldr	r2, [sp, #4]
 801cc4a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801cc4e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801cc52:	425a      	negs	r2, r3
 801cc54:	415a      	adcs	r2, r3
 801cc56:	602a      	str	r2, [r5, #0]
 801cc58:	e7ee      	b.n	801cc38 <__swhatbuf_r+0x1e>
 801cc5a:	2340      	movs	r3, #64	; 0x40
 801cc5c:	2000      	movs	r0, #0
 801cc5e:	6023      	str	r3, [r4, #0]
 801cc60:	b016      	add	sp, #88	; 0x58
 801cc62:	bd70      	pop	{r4, r5, r6, pc}

0801cc64 <__smakebuf_r>:
 801cc64:	898b      	ldrh	r3, [r1, #12]
 801cc66:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801cc68:	079d      	lsls	r5, r3, #30
 801cc6a:	4606      	mov	r6, r0
 801cc6c:	460c      	mov	r4, r1
 801cc6e:	d507      	bpl.n	801cc80 <__smakebuf_r+0x1c>
 801cc70:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801cc74:	6023      	str	r3, [r4, #0]
 801cc76:	6123      	str	r3, [r4, #16]
 801cc78:	2301      	movs	r3, #1
 801cc7a:	6163      	str	r3, [r4, #20]
 801cc7c:	b002      	add	sp, #8
 801cc7e:	bd70      	pop	{r4, r5, r6, pc}
 801cc80:	ab01      	add	r3, sp, #4
 801cc82:	466a      	mov	r2, sp
 801cc84:	f7ff ffc9 	bl	801cc1a <__swhatbuf_r>
 801cc88:	9900      	ldr	r1, [sp, #0]
 801cc8a:	4605      	mov	r5, r0
 801cc8c:	4630      	mov	r0, r6
 801cc8e:	f7ff f931 	bl	801bef4 <_malloc_r>
 801cc92:	b948      	cbnz	r0, 801cca8 <__smakebuf_r+0x44>
 801cc94:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cc98:	059a      	lsls	r2, r3, #22
 801cc9a:	d4ef      	bmi.n	801cc7c <__smakebuf_r+0x18>
 801cc9c:	f023 0303 	bic.w	r3, r3, #3
 801cca0:	f043 0302 	orr.w	r3, r3, #2
 801cca4:	81a3      	strh	r3, [r4, #12]
 801cca6:	e7e3      	b.n	801cc70 <__smakebuf_r+0xc>
 801cca8:	4b0d      	ldr	r3, [pc, #52]	; (801cce0 <__smakebuf_r+0x7c>)
 801ccaa:	62b3      	str	r3, [r6, #40]	; 0x28
 801ccac:	89a3      	ldrh	r3, [r4, #12]
 801ccae:	6020      	str	r0, [r4, #0]
 801ccb0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801ccb4:	81a3      	strh	r3, [r4, #12]
 801ccb6:	9b00      	ldr	r3, [sp, #0]
 801ccb8:	6163      	str	r3, [r4, #20]
 801ccba:	9b01      	ldr	r3, [sp, #4]
 801ccbc:	6120      	str	r0, [r4, #16]
 801ccbe:	b15b      	cbz	r3, 801ccd8 <__smakebuf_r+0x74>
 801ccc0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ccc4:	4630      	mov	r0, r6
 801ccc6:	f000 f891 	bl	801cdec <_isatty_r>
 801ccca:	b128      	cbz	r0, 801ccd8 <__smakebuf_r+0x74>
 801cccc:	89a3      	ldrh	r3, [r4, #12]
 801ccce:	f023 0303 	bic.w	r3, r3, #3
 801ccd2:	f043 0301 	orr.w	r3, r3, #1
 801ccd6:	81a3      	strh	r3, [r4, #12]
 801ccd8:	89a0      	ldrh	r0, [r4, #12]
 801ccda:	4305      	orrs	r5, r0
 801ccdc:	81a5      	strh	r5, [r4, #12]
 801ccde:	e7cd      	b.n	801cc7c <__smakebuf_r+0x18>
 801cce0:	0801ca71 	.word	0x0801ca71

0801cce4 <__malloc_lock>:
 801cce4:	4801      	ldr	r0, [pc, #4]	; (801ccec <__malloc_lock+0x8>)
 801cce6:	f7ff bf95 	b.w	801cc14 <__retarget_lock_acquire_recursive>
 801ccea:	bf00      	nop
 801ccec:	2000a89d 	.word	0x2000a89d

0801ccf0 <__malloc_unlock>:
 801ccf0:	4801      	ldr	r0, [pc, #4]	; (801ccf8 <__malloc_unlock+0x8>)
 801ccf2:	f7ff bf91 	b.w	801cc18 <__retarget_lock_release_recursive>
 801ccf6:	bf00      	nop
 801ccf8:	2000a89d 	.word	0x2000a89d

0801ccfc <__sread>:
 801ccfc:	b510      	push	{r4, lr}
 801ccfe:	460c      	mov	r4, r1
 801cd00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cd04:	f000 f894 	bl	801ce30 <_read_r>
 801cd08:	2800      	cmp	r0, #0
 801cd0a:	bfab      	itete	ge
 801cd0c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801cd0e:	89a3      	ldrhlt	r3, [r4, #12]
 801cd10:	181b      	addge	r3, r3, r0
 801cd12:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801cd16:	bfac      	ite	ge
 801cd18:	6563      	strge	r3, [r4, #84]	; 0x54
 801cd1a:	81a3      	strhlt	r3, [r4, #12]
 801cd1c:	bd10      	pop	{r4, pc}

0801cd1e <__swrite>:
 801cd1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cd22:	461f      	mov	r7, r3
 801cd24:	898b      	ldrh	r3, [r1, #12]
 801cd26:	05db      	lsls	r3, r3, #23
 801cd28:	4605      	mov	r5, r0
 801cd2a:	460c      	mov	r4, r1
 801cd2c:	4616      	mov	r6, r2
 801cd2e:	d505      	bpl.n	801cd3c <__swrite+0x1e>
 801cd30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cd34:	2302      	movs	r3, #2
 801cd36:	2200      	movs	r2, #0
 801cd38:	f000 f868 	bl	801ce0c <_lseek_r>
 801cd3c:	89a3      	ldrh	r3, [r4, #12]
 801cd3e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801cd42:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801cd46:	81a3      	strh	r3, [r4, #12]
 801cd48:	4632      	mov	r2, r6
 801cd4a:	463b      	mov	r3, r7
 801cd4c:	4628      	mov	r0, r5
 801cd4e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801cd52:	f000 b817 	b.w	801cd84 <_write_r>

0801cd56 <__sseek>:
 801cd56:	b510      	push	{r4, lr}
 801cd58:	460c      	mov	r4, r1
 801cd5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cd5e:	f000 f855 	bl	801ce0c <_lseek_r>
 801cd62:	1c43      	adds	r3, r0, #1
 801cd64:	89a3      	ldrh	r3, [r4, #12]
 801cd66:	bf15      	itete	ne
 801cd68:	6560      	strne	r0, [r4, #84]	; 0x54
 801cd6a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801cd6e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801cd72:	81a3      	strheq	r3, [r4, #12]
 801cd74:	bf18      	it	ne
 801cd76:	81a3      	strhne	r3, [r4, #12]
 801cd78:	bd10      	pop	{r4, pc}

0801cd7a <__sclose>:
 801cd7a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cd7e:	f000 b813 	b.w	801cda8 <_close_r>
	...

0801cd84 <_write_r>:
 801cd84:	b538      	push	{r3, r4, r5, lr}
 801cd86:	4d07      	ldr	r5, [pc, #28]	; (801cda4 <_write_r+0x20>)
 801cd88:	4604      	mov	r4, r0
 801cd8a:	4608      	mov	r0, r1
 801cd8c:	4611      	mov	r1, r2
 801cd8e:	2200      	movs	r2, #0
 801cd90:	602a      	str	r2, [r5, #0]
 801cd92:	461a      	mov	r2, r3
 801cd94:	f7e5 f92e 	bl	8001ff4 <_write>
 801cd98:	1c43      	adds	r3, r0, #1
 801cd9a:	d102      	bne.n	801cda2 <_write_r+0x1e>
 801cd9c:	682b      	ldr	r3, [r5, #0]
 801cd9e:	b103      	cbz	r3, 801cda2 <_write_r+0x1e>
 801cda0:	6023      	str	r3, [r4, #0]
 801cda2:	bd38      	pop	{r3, r4, r5, pc}
 801cda4:	2000a8a0 	.word	0x2000a8a0

0801cda8 <_close_r>:
 801cda8:	b538      	push	{r3, r4, r5, lr}
 801cdaa:	4d06      	ldr	r5, [pc, #24]	; (801cdc4 <_close_r+0x1c>)
 801cdac:	2300      	movs	r3, #0
 801cdae:	4604      	mov	r4, r0
 801cdb0:	4608      	mov	r0, r1
 801cdb2:	602b      	str	r3, [r5, #0]
 801cdb4:	f7e5 f92c 	bl	8002010 <_close>
 801cdb8:	1c43      	adds	r3, r0, #1
 801cdba:	d102      	bne.n	801cdc2 <_close_r+0x1a>
 801cdbc:	682b      	ldr	r3, [r5, #0]
 801cdbe:	b103      	cbz	r3, 801cdc2 <_close_r+0x1a>
 801cdc0:	6023      	str	r3, [r4, #0]
 801cdc2:	bd38      	pop	{r3, r4, r5, pc}
 801cdc4:	2000a8a0 	.word	0x2000a8a0

0801cdc8 <_fstat_r>:
 801cdc8:	b538      	push	{r3, r4, r5, lr}
 801cdca:	4d07      	ldr	r5, [pc, #28]	; (801cde8 <_fstat_r+0x20>)
 801cdcc:	2300      	movs	r3, #0
 801cdce:	4604      	mov	r4, r0
 801cdd0:	4608      	mov	r0, r1
 801cdd2:	4611      	mov	r1, r2
 801cdd4:	602b      	str	r3, [r5, #0]
 801cdd6:	f7e5 f91e 	bl	8002016 <_fstat>
 801cdda:	1c43      	adds	r3, r0, #1
 801cddc:	d102      	bne.n	801cde4 <_fstat_r+0x1c>
 801cdde:	682b      	ldr	r3, [r5, #0]
 801cde0:	b103      	cbz	r3, 801cde4 <_fstat_r+0x1c>
 801cde2:	6023      	str	r3, [r4, #0]
 801cde4:	bd38      	pop	{r3, r4, r5, pc}
 801cde6:	bf00      	nop
 801cde8:	2000a8a0 	.word	0x2000a8a0

0801cdec <_isatty_r>:
 801cdec:	b538      	push	{r3, r4, r5, lr}
 801cdee:	4d06      	ldr	r5, [pc, #24]	; (801ce08 <_isatty_r+0x1c>)
 801cdf0:	2300      	movs	r3, #0
 801cdf2:	4604      	mov	r4, r0
 801cdf4:	4608      	mov	r0, r1
 801cdf6:	602b      	str	r3, [r5, #0]
 801cdf8:	f7e5 f912 	bl	8002020 <_isatty>
 801cdfc:	1c43      	adds	r3, r0, #1
 801cdfe:	d102      	bne.n	801ce06 <_isatty_r+0x1a>
 801ce00:	682b      	ldr	r3, [r5, #0]
 801ce02:	b103      	cbz	r3, 801ce06 <_isatty_r+0x1a>
 801ce04:	6023      	str	r3, [r4, #0]
 801ce06:	bd38      	pop	{r3, r4, r5, pc}
 801ce08:	2000a8a0 	.word	0x2000a8a0

0801ce0c <_lseek_r>:
 801ce0c:	b538      	push	{r3, r4, r5, lr}
 801ce0e:	4d07      	ldr	r5, [pc, #28]	; (801ce2c <_lseek_r+0x20>)
 801ce10:	4604      	mov	r4, r0
 801ce12:	4608      	mov	r0, r1
 801ce14:	4611      	mov	r1, r2
 801ce16:	2200      	movs	r2, #0
 801ce18:	602a      	str	r2, [r5, #0]
 801ce1a:	461a      	mov	r2, r3
 801ce1c:	f7e5 f902 	bl	8002024 <_lseek>
 801ce20:	1c43      	adds	r3, r0, #1
 801ce22:	d102      	bne.n	801ce2a <_lseek_r+0x1e>
 801ce24:	682b      	ldr	r3, [r5, #0]
 801ce26:	b103      	cbz	r3, 801ce2a <_lseek_r+0x1e>
 801ce28:	6023      	str	r3, [r4, #0]
 801ce2a:	bd38      	pop	{r3, r4, r5, pc}
 801ce2c:	2000a8a0 	.word	0x2000a8a0

0801ce30 <_read_r>:
 801ce30:	b538      	push	{r3, r4, r5, lr}
 801ce32:	4d07      	ldr	r5, [pc, #28]	; (801ce50 <_read_r+0x20>)
 801ce34:	4604      	mov	r4, r0
 801ce36:	4608      	mov	r0, r1
 801ce38:	4611      	mov	r1, r2
 801ce3a:	2200      	movs	r2, #0
 801ce3c:	602a      	str	r2, [r5, #0]
 801ce3e:	461a      	mov	r2, r3
 801ce40:	f7e5 f8ca 	bl	8001fd8 <_read>
 801ce44:	1c43      	adds	r3, r0, #1
 801ce46:	d102      	bne.n	801ce4e <_read_r+0x1e>
 801ce48:	682b      	ldr	r3, [r5, #0]
 801ce4a:	b103      	cbz	r3, 801ce4e <_read_r+0x1e>
 801ce4c:	6023      	str	r3, [r4, #0]
 801ce4e:	bd38      	pop	{r3, r4, r5, pc}
 801ce50:	2000a8a0 	.word	0x2000a8a0

0801ce54 <_init>:
 801ce54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ce56:	bf00      	nop
 801ce58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801ce5a:	bc08      	pop	{r3}
 801ce5c:	469e      	mov	lr, r3
 801ce5e:	4770      	bx	lr

0801ce60 <_fini>:
 801ce60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ce62:	bf00      	nop
 801ce64:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801ce66:	bc08      	pop	{r3}
 801ce68:	469e      	mov	lr, r3
 801ce6a:	4770      	bx	lr
