
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001bc50  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000035c4  0801be10  0801be10  0002be10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  0801f3d4  0801f3d4  0002f3d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0801f3ec  0801f3ec  000541ac  2**0
                  CONTENTS
  5 .ARM          00000008  0801f3ec  0801f3ec  0002f3ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0801f3f4  0801f3f4  000541ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0801f3f4  0801f3f4  0002f3f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0801f40c  0801f40c  0002f40c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0801f414  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a654  20000140  0801f554  00030140  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  2000a794  0801f554  0003a794  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000541ac  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00013ec0  90000000  90000000  00040000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 000002d8  90013ec0  90013ec0  00053ec0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000014  90014198  90014198  00054198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00049794  00000000  00000000  000541dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   00096824  00000000  00000000  0009d970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 000131f2  00000000  00000000  00134194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002978  00000000  00000000  00147388  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012b651  00000000  00000000  00149d00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00004310  00000000  00000000  00275358  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    000257f2  00000000  00000000  00279668  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00037e5d  00000000  00000000  0029ee5a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  002d6cb7  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007da4  00000000  00000000  002d6d88  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801bdf8 	.word	0x0801bdf8

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801bdf8 	.word	0x0801bdf8

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f003 fa13 	bl	80039f8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f01a fbab 	bl	801ad2c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ff79 	bl	80014cc <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005dc:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005e0:	0801f414 	.word	0x0801f414
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005ec:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005f0:	2000a794 	.word	0x2000a794

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005f6:	f000 bdf5 	b.w	80011e4 <touchgfx_init>

080005fa <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005fa:	f000 be63 	b.w	80012c4 <touchgfx_taskEntry>

080005fe <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005fe:	2100      	movs	r1, #0
 8000600:	4608      	mov	r0, r1
 8000602:	f002 bd61 	b.w	80030c8 <BSP_PB_Init>

08000606 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000606:	2000      	movs	r0, #0
 8000608:	f002 bd98 	b.w	800313c <BSP_PB_GetState>

0800060c <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800060c:	6840      	ldr	r0, [r0, #4]
    }
 800060e:	4770      	bx	lr

08000610 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000610:	6041      	str	r1, [r0, #4]
    }
 8000612:	4770      	bx	lr

08000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000614:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000618:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 800061c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000620:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000624:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000628:	6813      	ldr	r3, [r2, #0]
 800062a:	f043 0301 	orr.w	r3, r3, #1
 800062e:	6013      	str	r3, [r2, #0]
}
 8000630:	4770      	bx	lr

08000632 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000632:	1a51      	subs	r1, r2, r1
 8000634:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000638:	fbb1 f0f3 	udiv	r0, r1, r3
 800063c:	4770      	bx	lr
	...

08000640 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000640:	4b01      	ldr	r3, [pc, #4]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000642:	6858      	ldr	r0, [r3, #4]
}
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800064c:	4770      	bx	lr

0800064e <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800064e:	b510      	push	{r4, lr}
 8000650:	210c      	movs	r1, #12
 8000652:	4604      	mov	r4, r0
 8000654:	f01a faf2 	bl	801ac3c <_ZdlPvj>
 8000658:	4620      	mov	r0, r4
 800065a:	bd10      	pop	{r4, pc}

0800065c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065c:	6803      	ldr	r3, [r0, #0]
{
 800065e:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000660:	691b      	ldr	r3, [r3, #16]
{
 8000662:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000664:	b131      	cbz	r1, 8000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000666:	4798      	blx	r3
 8000668:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800066a:	6863      	ldr	r3, [r4, #4]
 800066c:	1a9b      	subs	r3, r3, r2
 800066e:	4418      	add	r0, r3
 8000670:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000672:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000674:	4798      	blx	r3
 8000676:	60a0      	str	r0, [r4, #8]
}
 8000678:	e7fb      	b.n	8000672 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800067a <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800067a:	4770      	bx	lr

0800067c <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 800067c:	4770      	bx	lr
	...

08000680 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000680:	b508      	push	{r3, lr}
    Buttons::init();
 8000682:	f7ff ffbc 	bl	80005fe <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000686:	4b02      	ldr	r3, [pc, #8]	; (8000690 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000688:	2200      	movs	r2, #0
 800068a:	601a      	str	r2, [r3, #0]
}
 800068c:	bd08      	pop	{r3, pc}
 800068e:	bf00      	nop
 8000690:	2000015c 	.word	0x2000015c

08000694 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000694:	b570      	push	{r4, r5, r6, lr}
 8000696:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000698:	f7ff ffb5 	bl	8000606 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 800069c:	4a0b      	ldr	r2, [pc, #44]	; (80006cc <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 800069e:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006a0:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006a2:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006a4:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006a6:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a8:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006ac:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006ae:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006b0:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006b2:	d00a      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006b4:	f016 0001 	ands.w	r0, r6, #1
 80006b8:	d007      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ba:	f011 0001 	ands.w	r0, r1, #1
 80006be:	d004      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006c0:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006c2:	bf5a      	itte	pl
 80006c4:	2001      	movpl	r0, #1
 80006c6:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006c8:	2000      	movmi	r0, #0
}
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	2000015c 	.word	0x2000015c

080006d0 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	2104      	movs	r1, #4
 80006d4:	4604      	mov	r4, r0
 80006d6:	f01a fab1 	bl	801ac3c <_ZdlPvj>
 80006da:	4620      	mov	r0, r4
 80006dc:	bd10      	pop	{r4, pc}

080006de <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006de:	4770      	bx	lr

080006e0 <_ZN20STM32TouchControllerD0Ev>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	2104      	movs	r1, #4
 80006e4:	4604      	mov	r4, r0
 80006e6:	f01a faa9 	bl	801ac3c <_ZdlPvj>
 80006ea:	4620      	mov	r0, r4
 80006ec:	bd10      	pop	{r4, pc}
	...

080006f0 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006f0:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006f2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006f6:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006fa:	f003 f8cf 	bl	800389c <BSP_TS_Init>
 80006fe:	4b07      	ldr	r3, [pc, #28]	; (800071c <_ZN20STM32TouchController4initEv+0x2c>)
 8000700:	b910      	cbnz	r0, 8000708 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000702:	2201      	movs	r2, #1
 8000704:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000706:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000708:	781b      	ldrb	r3, [r3, #0]
 800070a:	2b00      	cmp	r3, #0
 800070c:	d1fb      	bne.n	8000706 <_ZN20STM32TouchController4initEv+0x16>
 800070e:	4b04      	ldr	r3, [pc, #16]	; (8000720 <_ZN20STM32TouchController4initEv+0x30>)
 8000710:	4a04      	ldr	r2, [pc, #16]	; (8000724 <_ZN20STM32TouchController4initEv+0x34>)
 8000712:	4805      	ldr	r0, [pc, #20]	; (8000728 <_ZN20STM32TouchController4initEv+0x38>)
 8000714:	2127      	movs	r1, #39	; 0x27
 8000716:	f01a fabf 	bl	801ac98 <__assert_func>
 800071a:	bf00      	nop
 800071c:	20000160 	.word	0x20000160
 8000720:	0801be94 	.word	0x0801be94
 8000724:	0801bea7 	.word	0x0801bea7
 8000728:	0801bed1 	.word	0x0801bed1

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800072c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 800072e:	4b0b      	ldr	r3, [pc, #44]	; (800075c <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000730:	781c      	ldrb	r4, [r3, #0]
{
 8000732:	460e      	mov	r6, r1
 8000734:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000736:	b15c      	cbz	r4, 8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000738:	a801      	add	r0, sp, #4
 800073a:	f003 f8e7 	bl	800390c <BSP_TS_GetState>
        if (state.touchDetected)
 800073e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000742:	b143      	cbz	r3, 8000756 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000744:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000748:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800074a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800074e:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000750:	4620      	mov	r0, r4
 8000752:	b004      	add	sp, #16
 8000754:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000756:	461c      	mov	r4, r3
 8000758:	e7fa      	b.n	8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800075a:	bf00      	nop
 800075c:	20000160 	.word	0x20000160

08000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000760:	2801      	cmp	r0, #1
 8000762:	d00b      	beq.n	800077c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1c>
 8000764:	2803      	cmp	r0, #3
 8000766:	d010      	beq.n	800078a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 8000768:	b9c0      	cbnz	r0, 800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800076a:	4b0d      	ldr	r3, [pc, #52]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800076c:	681a      	ldr	r2, [r3, #0]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000776:	480b      	ldr	r0, [pc, #44]	; (80007a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000778:	f004 b962 	b.w	8004a40 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800077c:	4b08      	ldr	r3, [pc, #32]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800077e:	685a      	ldr	r2, [r3, #4]
 8000780:	fab2 f282 	clz	r2, r2
 8000784:	0952      	lsrs	r2, r2, #5
 8000786:	2140      	movs	r1, #64	; 0x40
 8000788:	e7f5      	b.n	8000776 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800078a:	4b05      	ldr	r3, [pc, #20]	; (80007a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x40>)
 800078c:	4806      	ldr	r0, [pc, #24]	; (80007a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>)
 800078e:	68da      	ldr	r2, [r3, #12]
 8000790:	fab2 f282 	clz	r2, r2
 8000794:	0952      	lsrs	r2, r2, #5
 8000796:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800079a:	e7ed      	b.n	8000778 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 800079c:	4770      	bx	lr
 800079e:	bf00      	nop
 80007a0:	20000164 	.word	0x20000164
 80007a4:	40020000 	.word	0x40020000
 80007a8:	40021800 	.word	0x40021800

080007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007ac:	2801      	cmp	r0, #1
 80007ae:	d00b      	beq.n	80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1c>
 80007b0:	2803      	cmp	r0, #3
 80007b2:	d010      	beq.n	80007d6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 80007b4:	b9c0      	cbnz	r0, 80007e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x3c>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007b6:	4b0d      	ldr	r3, [pc, #52]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007b8:	681a      	ldr	r2, [r3, #0]
 80007ba:	3a00      	subs	r2, #0
 80007bc:	bf18      	it	ne
 80007be:	2201      	movne	r2, #1
 80007c0:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c2:	480b      	ldr	r0, [pc, #44]	; (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x44>)
        HAL_GPIO_WritePin(FRAME_RATE_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007c4:	f004 b93c 	b.w	8004a40 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007c8:	4b08      	ldr	r3, [pc, #32]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007ca:	685a      	ldr	r2, [r3, #4]
 80007cc:	3a00      	subs	r2, #0
 80007ce:	bf18      	it	ne
 80007d0:	2201      	movne	r2, #1
 80007d2:	2140      	movs	r1, #64	; 0x40
 80007d4:	e7f5      	b.n	80007c2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007d6:	4b05      	ldr	r3, [pc, #20]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x40>)
 80007d8:	4806      	ldr	r0, [pc, #24]	; (80007f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>)
 80007da:	68da      	ldr	r2, [r3, #12]
 80007dc:	3a00      	subs	r2, #0
 80007de:	bf18      	it	ne
 80007e0:	2201      	movne	r2, #1
 80007e2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80007e6:	e7ed      	b.n	80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007e8:	4770      	bx	lr
 80007ea:	bf00      	nop
 80007ec:	20000164 	.word	0x20000164
 80007f0:	40020000 	.word	0x40020000
 80007f4:	40021800 	.word	0x40021800

080007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007f8:	2801      	cmp	r0, #1
 80007fa:	d006      	beq.n	800080a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x12>
 80007fc:	2803      	cmp	r0, #3
 80007fe:	d006      	beq.n	800080e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x16>
 8000800:	b948      	cbnz	r0, 8000816 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1e>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000802:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000804:	4804      	ldr	r0, [pc, #16]	; (8000818 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>)
        HAL_GPIO_TogglePin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000806:	f004 b920 	b.w	8004a4a <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800080a:	2140      	movs	r1, #64	; 0x40
 800080c:	e7fa      	b.n	8000804 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800080e:	4803      	ldr	r0, [pc, #12]	; (800081c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000810:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000814:	e7f7      	b.n	8000806 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000816:	4770      	bx	lr
 8000818:	40020000 	.word	0x40020000
 800081c:	40021800 	.word	0x40021800

08000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000820:	2801      	cmp	r0, #1
{
 8000822:	b508      	push	{r3, lr}
    switch (id)
 8000824:	d00a      	beq.n	800083c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000826:	2803      	cmp	r0, #3
 8000828:	d00a      	beq.n	8000840 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>
 800082a:	b968      	cbnz	r0, 8000848 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800082c:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800082e:	4807      	ldr	r0, [pc, #28]	; (800084c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2c>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000830:	f004 f900 	bl	8004a34 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000834:	1e43      	subs	r3, r0, #1
 8000836:	4258      	negs	r0, r3
 8000838:	4158      	adcs	r0, r3
 800083a:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800083c:	2140      	movs	r1, #64	; 0x40
 800083e:	e7f6      	b.n	800082e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xe>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000840:	4803      	ldr	r0, [pc, #12]	; (8000850 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 8000842:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000846:	e7f3      	b.n	8000830 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000848:	2000      	movs	r0, #0
 800084a:	e7f3      	b.n	8000834 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 800084c:	40020000 	.word	0x40020000
 8000850:	40021800 	.word	0x40021800

08000854 <_ZN8touchgfx4GPIO4initEv>:
{
 8000854:	b570      	push	{r4, r5, r6, lr}
 8000856:	4d08      	ldr	r5, [pc, #32]	; (8000878 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000858:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800085a:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 800085c:	b2e0      	uxtb	r0, r4
 800085e:	f7ff ffdf 	bl	8000820 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000862:	b118      	cbz	r0, 800086c <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000864:	682b      	ldr	r3, [r5, #0]
 8000866:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000868:	bf18      	it	ne
 800086a:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 800086c:	3401      	adds	r4, #1
 800086e:	2c05      	cmp	r4, #5
 8000870:	f105 0504 	add.w	r5, r5, #4
 8000874:	d1f2      	bne.n	800085c <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000876:	bd70      	pop	{r4, r5, r6, pc}
 8000878:	20000164 	.word	0x20000164

0800087c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800087c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800087e:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000882:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000886:	4770      	bx	lr

08000888 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000888:	2000      	movs	r0, #0
 800088a:	4770      	bx	lr

0800088c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800088c:	4b03      	ldr	r3, [pc, #12]	; (800089c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800088e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000890:	3900      	subs	r1, #0
 8000892:	bf18      	it	ne
 8000894:	2101      	movne	r1, #1
 8000896:	7019      	strb	r1, [r3, #0]
    }
 8000898:	4770      	bx	lr
 800089a:	bf00      	nop
 800089c:	2000a4ef 	.word	0x2000a4ef

080008a0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80008a0:	2000      	movs	r0, #0
 80008a2:	4770      	bx	lr

080008a4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008a4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80008a6:	b10b      	cbz	r3, 80008ac <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008a8:	4608      	mov	r0, r1
 80008aa:	4718      	bx	r3
        }
    }
 80008ac:	4770      	bx	lr

080008ae <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80008ae:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80008b2:	4770      	bx	lr

080008b4 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008b4:	6840      	ldr	r0, [r0, #4]
 80008b6:	6803      	ldr	r3, [r0, #0]
 80008b8:	699b      	ldr	r3, [r3, #24]
 80008ba:	4718      	bx	r3

080008bc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008bc:	4770      	bx	lr

080008be <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008be:	4770      	bx	lr

080008c0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 80008c0:	4b01      	ldr	r3, [pc, #4]	; (80008c8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 80008c2:	6818      	ldr	r0, [r3, #0]
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	20000174 	.word	0x20000174

080008cc <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008cc:	4770      	bx	lr
	...

080008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
 80008d0:	b538      	push	{r3, r4, r5, lr}
 80008d2:	4604      	mov	r4, r0
    mcuInstr.init();
 80008d4:	4d09      	ldr	r5, [pc, #36]	; (80008fc <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80008d6:	f7ff ffbd 	bl	8000854 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80008da:	4620      	mov	r0, r4
 80008dc:	f000 fd72 	bl	80013c4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 80008e0:	2300      	movs	r3, #0
 80008e2:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 80008e6:	4628      	mov	r0, r5
 80008e8:	f7ff fe94 	bl	8000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 80008ec:	2301      	movs	r3, #1
 80008ee:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 80008f2:	4b03      	ldr	r3, [pc, #12]	; (8000900 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 80008f4:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 80008f6:	6163      	str	r3, [r4, #20]
}
 80008f8:	bd38      	pop	{r3, r4, r5, pc}
 80008fa:	bf00      	nop
 80008fc:	20000180 	.word	0x20000180
 8000900:	2000017c 	.word	0x2000017c

08000904 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000904:	6803      	ldr	r3, [r0, #0]
{
 8000906:	4604      	mov	r4, r0
 8000908:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800090a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800090e:	4798      	blx	r3
    enableInterrupts();
 8000910:	6823      	ldr	r3, [r4, #0]
 8000912:	4620      	mov	r0, r4
 8000914:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000916:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000918:	f000 fa2e 	bl	8000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800091c:	6823      	ldr	r3, [r4, #0]
 800091e:	4620      	mov	r0, r4
 8000920:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000922:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 8000924:	2100      	movs	r1, #0
 8000926:	4806      	ldr	r0, [pc, #24]	; (8000940 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8000928:	9100      	str	r1, [sp, #0]
 800092a:	2329      	movs	r3, #41	; 0x29
 800092c:	2215      	movs	r2, #21
 800092e:	f003 fe70 	bl	8004612 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 8000932:	f000 fa21 	bl	8000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000936:	6823      	ldr	r3, [r4, #0]
 8000938:	4620      	mov	r0, r4
 800093a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800093c:	4798      	blx	r3
    for (;;)
 800093e:	e7f8      	b.n	8000932 <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 8000940:	2000131c 	.word	0x2000131c

08000944 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000944:	b510      	push	{r4, lr}
 8000946:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000948:	f009 fb5e 	bl	800a008 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800094c:	6823      	ldr	r3, [r4, #0]
 800094e:	4620      	mov	r0, r4
 8000950:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000954:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000958:	4718      	bx	r3

0800095a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800095a:	f000 bd32 	b.w	80013c2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800095e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800095e:	f000 bd48 	b.w	80013f2 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000962 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8000962:	f000 bd48 	b.w	80013f6 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08000966 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000966:	f000 bd1b 	b.w	80013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800096a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800096a:	f000 bd21 	b.w	80013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800096e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800096e:	f000 bd45 	b.w	80013fc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

08000974 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000974:	4b02      	ldr	r3, [pc, #8]	; (8000980 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000976:	2200      	movs	r2, #0
 8000978:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 800097a:	f008 bd0d 	b.w	8009398 <_ZN8touchgfx3HAL10beginFrameEv>
 800097e:	bf00      	nop
 8000980:	20000014 	.word	0x20000014

08000984 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000984:	b510      	push	{r4, lr}
 8000986:	4604      	mov	r4, r0
    HAL::endFrame();
 8000988:	f008 fd12 	bl	80093b0 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800098c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000990:	b113      	cbz	r3, 8000998 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000992:	4b02      	ldr	r3, [pc, #8]	; (800099c <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000994:	2201      	movs	r2, #1
 8000996:	701a      	strb	r2, [r3, #0]
    }
}
 8000998:	bd10      	pop	{r4, pc}
 800099a:	bf00      	nop
 800099c:	20000014 	.word	0x20000014

080009a0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009a0:	f008 bcbe 	b.w	8009320 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009a4 <_ZN11TouchGFXHALD0Ev>:
 80009a4:	b510      	push	{r4, lr}
 80009a6:	217c      	movs	r1, #124	; 0x7c
 80009a8:	4604      	mov	r4, r0
 80009aa:	f01a f947 	bl	801ac3c <_ZdlPvj>
 80009ae:	4620      	mov	r0, r4
 80009b0:	bd10      	pop	{r4, pc}

080009b2 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009b2:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80009b6:	b11b      	cbz	r3, 80009c0 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009b8:	6840      	ldr	r0, [r0, #4]
 80009ba:	6803      	ldr	r3, [r0, #0]
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	4718      	bx	r3
    }
 80009c0:	4618      	mov	r0, r3
 80009c2:	4770      	bx	lr

080009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009c4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009c6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009ca:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 80009ce:	4b0c      	ldr	r3, [pc, #48]	; (8000a00 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009d0:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009d2:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009d4:	d009      	beq.n	80009ea <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009d6:	b93a      	cbnz	r2, 80009e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009d8:	4a0a      	ldr	r2, [pc, #40]	; (8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009da:	490b      	ldr	r1, [pc, #44]	; (8000a08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009dc:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009de:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009e0:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009e2:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80009e4:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80009e6:	701a      	strb	r2, [r3, #0]
    }
 80009e8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80009ea:	2a00      	cmp	r2, #0
 80009ec:	d0fc      	beq.n	80009e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009ee:	4a05      	ldr	r2, [pc, #20]	; (8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009f0:	4905      	ldr	r1, [pc, #20]	; (8000a08 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009f4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009f6:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009fa:	2200      	movs	r2, #0
 80009fc:	e7f3      	b.n	80009e6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009fe:	bf00      	nop
 8000a00:	2000a4e8 	.word	0x2000a4e8
 8000a04:	2000a4e4 	.word	0x2000a4e4
 8000a08:	2000a4e6 	.word	0x2000a4e6

08000a0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a0c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a0e:	4b09      	ldr	r3, [pc, #36]	; (8000a34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a10:	881b      	ldrh	r3, [r3, #0]
 8000a12:	428b      	cmp	r3, r1
 8000a14:	d803      	bhi.n	8000a1e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a16:	4b08      	ldr	r3, [pc, #32]	; (8000a38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a18:	881b      	ldrh	r3, [r3, #0]
 8000a1a:	4293      	cmp	r3, r2
 8000a1c:	d905      	bls.n	8000a2a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a1e:	4b07      	ldr	r3, [pc, #28]	; (8000a3c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a20:	4a07      	ldr	r2, [pc, #28]	; (8000a40 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a22:	4808      	ldr	r0, [pc, #32]	; (8000a44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a24:	219e      	movs	r1, #158	; 0x9e
 8000a26:	f01a f937 	bl	801ac98 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a2a:	4b07      	ldr	r3, [pc, #28]	; (8000a48 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a2c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a2e:	4b07      	ldr	r3, [pc, #28]	; (8000a4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a30:	801a      	strh	r2, [r3, #0]
    }
 8000a32:	bd08      	pop	{r3, pc}
 8000a34:	2000a4e4 	.word	0x2000a4e4
 8000a38:	2000a4e6 	.word	0x2000a4e6
 8000a3c:	0801bf38 	.word	0x0801bf38
 8000a40:	0801bf9b 	.word	0x0801bf9b
 8000a44:	0801bfde 	.word	0x0801bfde
 8000a48:	2000a4ea 	.word	0x2000a4ea
 8000a4c:	2000a4ec 	.word	0x2000a4ec

08000a50 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8000a50:	b570      	push	{r4, r5, r6, lr}
 8000a52:	460d      	mov	r5, r1
 8000a54:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 8000a56:	4b0b      	ldr	r3, [pc, #44]	; (8000a84 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8000a58:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a5a:	b935      	cbnz	r5, 8000a6a <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 8000a5c:	4b0a      	ldr	r3, [pc, #40]	; (8000a88 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000a5e:	4a0b      	ldr	r2, [pc, #44]	; (8000a8c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000a60:	480b      	ldr	r0, [pc, #44]	; (8000a90 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000a62:	f240 21bb 	movw	r1, #699	; 0x2bb
 8000a66:	f01a f917 	bl	801ac98 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a6a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a6e:	4b09      	ldr	r3, [pc, #36]	; (8000a94 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 8000a70:	3a00      	subs	r2, #0
 8000a72:	bf18      	it	ne
 8000a74:	2201      	movne	r2, #1
 8000a76:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a78:	6803      	ldr	r3, [r0, #0]
}
 8000a7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000a7e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a82:	4718      	bx	r3
 8000a84:	20000174 	.word	0x20000174
 8000a88:	0801c023 	.word	0x0801c023
 8000a8c:	0801c05b 	.word	0x0801c05b
 8000a90:	0801bfde 	.word	0x0801bfde
 8000a94:	2000a4ee 	.word	0x2000a4ee

08000a98 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a98:	2801      	cmp	r0, #1
    {
 8000a9a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a9c:	d80a      	bhi.n	8000ab4 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a9e:	784b      	ldrb	r3, [r1, #1]
 8000aa0:	9300      	str	r3, [sp, #0]
 8000aa2:	780b      	ldrb	r3, [r1, #0]
 8000aa4:	4808      	ldr	r0, [pc, #32]	; (8000ac8 <DSI_IO_WriteCmd+0x30>)
 8000aa6:	2215      	movs	r2, #21
 8000aa8:	2100      	movs	r1, #0
 8000aaa:	f003 fdb2 	bl	8004612 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000aae:	b003      	add	sp, #12
 8000ab0:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000ab4:	9101      	str	r1, [sp, #4]
 8000ab6:	5c0b      	ldrb	r3, [r1, r0]
 8000ab8:	9300      	str	r3, [sp, #0]
 8000aba:	2239      	movs	r2, #57	; 0x39
 8000abc:	4603      	mov	r3, r0
 8000abe:	2100      	movs	r1, #0
 8000ac0:	4801      	ldr	r0, [pc, #4]	; (8000ac8 <DSI_IO_WriteCmd+0x30>)
 8000ac2:	f003 fdb7 	bl	8004634 <HAL_DSI_LongWrite>
    }
 8000ac6:	e7f2      	b.n	8000aae <DSI_IO_WriteCmd+0x16>
 8000ac8:	2000131c 	.word	0x2000131c

08000acc <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000acc:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000ace:	4a0b      	ldr	r2, [pc, #44]	; (8000afc <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000ad0:	4c0b      	ldr	r4, [pc, #44]	; (8000b00 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000ad2:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000ad4:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000ad6:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000ad8:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000ada:	9201      	str	r2, [sp, #4]
 8000adc:	2244      	movs	r2, #68	; 0x44
 8000ade:	9200      	str	r2, [sp, #0]
 8000ae0:	2100      	movs	r1, #0
 8000ae2:	2239      	movs	r2, #57	; 0x39
 8000ae4:	4620      	mov	r0, r4
 8000ae6:	f003 fda5 	bl	8004634 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000aea:	2100      	movs	r1, #0
 8000aec:	9100      	str	r1, [sp, #0]
 8000aee:	2335      	movs	r3, #53	; 0x35
 8000af0:	462a      	mov	r2, r5
 8000af2:	4620      	mov	r0, r4
 8000af4:	f003 fd8d 	bl	8004612 <HAL_DSI_ShortWrite>
    }
 8000af8:	b003      	add	sp, #12
 8000afa:	bd30      	pop	{r4, r5, pc}
 8000afc:	2000018c 	.word	0x2000018c
 8000b00:	2000131c 	.word	0x2000131c

08000b04 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000b04:	b507      	push	{r0, r1, r2, lr}
 8000b06:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000b08:	f7ff ffe0 	bl	8000acc <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000b0c:	9801      	ldr	r0, [sp, #4]
}
 8000b0e:	b003      	add	sp, #12
 8000b10:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000b14:	f000 bc54 	b.w	80013c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000b18 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000b18:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000b1a:	4b07      	ldr	r3, [pc, #28]	; (8000b38 <LCD_SetUpdateRegion+0x20>)
 8000b1c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000b20:	232a      	movs	r3, #42	; 0x2a
 8000b22:	9001      	str	r0, [sp, #4]
 8000b24:	9300      	str	r3, [sp, #0]
 8000b26:	2239      	movs	r2, #57	; 0x39
 8000b28:	2304      	movs	r3, #4
 8000b2a:	2100      	movs	r1, #0
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <LCD_SetUpdateRegion+0x24>)
 8000b2e:	f003 fd81 	bl	8004634 <HAL_DSI_LongWrite>
    }
 8000b32:	b003      	add	sp, #12
 8000b34:	f85d fb04 	ldr.w	pc, [sp], #4
 8000b38:	20000004 	.word	0x20000004
 8000b3c:	2000131c 	.word	0x2000131c

08000b40 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000b40:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000b42:	4d15      	ldr	r5, [pc, #84]	; (8000b98 <HAL_DSI_TearingEffectCallback+0x58>)
 8000b44:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000b46:	2000      	movs	r0, #0
 8000b48:	f7ff fe0a 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000b4c:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000b4e:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000b52:	3301      	adds	r3, #1
 8000b54:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000b58:	f000 f902 	bl	8000d60 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000b5c:	4b0f      	ldr	r3, [pc, #60]	; (8000b9c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000b5e:	6828      	ldr	r0, [r5, #0]
 8000b60:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000b62:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000b64:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000b68:	b123      	cbz	r3, 8000b74 <HAL_DSI_TearingEffectCallback+0x34>
 8000b6a:	4d0d      	ldr	r5, [pc, #52]	; (8000ba0 <HAL_DSI_TearingEffectCallback+0x60>)
 8000b6c:	782b      	ldrb	r3, [r5, #0]
 8000b6e:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000b72:	b123      	cbz	r3, 8000b7e <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b78:	2000      	movs	r0, #0
 8000b7a:	f7ff be17 	b.w	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b7e:	f009 fa43 	bl	800a008 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b82:	4b08      	ldr	r3, [pc, #32]	; (8000ba4 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b84:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b86:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b88:	f7ff ffc6 	bl	8000b18 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b8c:	4620      	mov	r0, r4
 8000b8e:	f003 fd30 	bl	80045f2 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b92:	2301      	movs	r3, #1
 8000b94:	702b      	strb	r3, [r5, #0]
    }
 8000b96:	bd70      	pop	{r4, r5, r6, pc}
 8000b98:	2000a4f0 	.word	0x2000a4f0
 8000b9c:	20000014 	.word	0x20000014
 8000ba0:	2000018e 	.word	0x2000018e
 8000ba4:	20000178 	.word	0x20000178

08000ba8 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000ba8:	4b33      	ldr	r3, [pc, #204]	; (8000c78 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000baa:	681a      	ldr	r2, [r3, #0]
 8000bac:	3201      	adds	r2, #1
    {
 8000bae:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8000bb0:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000bb2:	4b32      	ldr	r3, [pc, #200]	; (8000c7c <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000bb4:	4c32      	ldr	r4, [pc, #200]	; (8000c80 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000bb6:	6819      	ldr	r1, [r3, #0]
 8000bb8:	4b32      	ldr	r3, [pc, #200]	; (8000c84 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8000bba:	2a03      	cmp	r2, #3
    {
 8000bbc:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8000bbe:	dc2e      	bgt.n	8000c1e <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000bc0:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8000bc4:	f020 0008 	bic.w	r0, r0, #8
 8000bc8:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000bcc:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000bd0:	fb00 1102 	mla	r1, r0, r2, r1
 8000bd4:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000bd8:	bf0c      	ite	eq
 8000bda:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000bdc:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000bde:	3302      	adds	r3, #2
 8000be0:	4928      	ldr	r1, [pc, #160]	; (8000c84 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000be2:	041b      	lsls	r3, r3, #16
 8000be4:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000be8:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000bea:	4b27      	ldr	r3, [pc, #156]	; (8000c88 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8000bec:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000bee:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000bf2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000bf6:	4b25      	ldr	r3, [pc, #148]	; (8000c8c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bf8:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bfc:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8000bfe:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c00:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000c02:	f7ff ff89 	bl	8000b18 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000c06:	4a1e      	ldr	r2, [pc, #120]	; (8000c80 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000c08:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000c0c:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000c10:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c12:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000c16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000c1a:	f003 bcea 	b.w	80045f2 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000c1e:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 8000c22:	f022 0208 	bic.w	r2, r2, #8
 8000c26:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000c2a:	4a19      	ldr	r2, [pc, #100]	; (8000c90 <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000c2c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000c30:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000c32:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 8000c36:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000c38:	4a16      	ldr	r2, [pc, #88]	; (8000c94 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000c3a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000c3e:	4a13      	ldr	r2, [pc, #76]	; (8000c8c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000c40:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000c44:	2201      	movs	r2, #1
 8000c46:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000c48:	2000      	movs	r0, #0
 8000c4a:	f7ff ff65 	bl	8000b18 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000c4e:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000c52:	f043 0308 	orr.w	r3, r3, #8
 8000c56:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000c5a:	2000      	movs	r0, #0
 8000c5c:	f7ff fda6 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000c60:	4b0d      	ldr	r3, [pc, #52]	; (8000c98 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 8000c62:	2200      	movs	r2, #0
 8000c64:	701a      	strb	r2, [r3, #0]
        return instance;
 8000c66:	4b0d      	ldr	r3, [pc, #52]	; (8000c9c <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8000c68:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000c6a:	b120      	cbz	r0, 8000c76 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8000c6c:	6803      	ldr	r3, [r0, #0]
    }
 8000c6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000c72:	6a1b      	ldr	r3, [r3, #32]
 8000c74:	4718      	bx	r3
 8000c76:	bd70      	pop	{r4, r5, r6, pc}
 8000c78:	20000178 	.word	0x20000178
 8000c7c:	20000174 	.word	0x20000174
 8000c80:	40016c00 	.word	0x40016c00
 8000c84:	40016800 	.word	0x40016800
 8000c88:	00ca01e3 	.word	0x00ca01e3
 8000c8c:	06800193 	.word	0x06800193
 8000c90:	00ca01e2 	.word	0x00ca01e2
 8000c94:	00ca0003 	.word	0x00ca0003
 8000c98:	2000018e 	.word	0x2000018e
 8000c9c:	2000a4f0 	.word	0x2000a4f0

08000ca0 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000ca0:	b508      	push	{r3, lr}
        return instance;
 8000ca2:	4b04      	ldr	r3, [pc, #16]	; (8000cb4 <IdleTaskHook+0x14>)
 8000ca4:	4601      	mov	r1, r0
 8000ca6:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000ca8:	b101      	cbz	r1, 8000cac <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000caa:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000cac:	f009 f9c6 	bl	800a03c <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000cb0:	2001      	movs	r0, #1
 8000cb2:	bd08      	pop	{r3, pc}
 8000cb4:	2000a4f0 	.word	0x2000a4f0

08000cb8 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000cb8:	4b05      	ldr	r3, [pc, #20]	; (8000cd0 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000cba:	4806      	ldr	r0, [pc, #24]	; (8000cd4 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000cbc:	2200      	movs	r2, #0
 8000cbe:	605a      	str	r2, [r3, #4]
 8000cc0:	609a      	str	r2, [r3, #8]
 8000cc2:	4a05      	ldr	r2, [pc, #20]	; (8000cd8 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000cc4:	601a      	str	r2, [r3, #0]
 8000cc6:	4b05      	ldr	r3, [pc, #20]	; (8000cdc <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000cc8:	6003      	str	r3, [r0, #0]
        init();
 8000cca:	f7ff bcd9 	b.w	8000680 <_ZN8touchgfx10KeySampler4initEv>
 8000cce:	bf00      	nop
 8000cd0:	20000180 	.word	0x20000180
 8000cd4:	2000017c 	.word	0x2000017c
 8000cd8:	0801be58 	.word	0x0801be58
 8000cdc:	0801be80 	.word	0x0801be80

08000ce0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ce0:	2101      	movs	r1, #1
{
 8000ce2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ce4:	2200      	movs	r2, #0
 8000ce6:	4608      	mov	r0, r1
 8000ce8:	f005 ff2b 	bl	8006b42 <osSemaphoreNew>
 8000cec:	4b0a      	ldr	r3, [pc, #40]	; (8000d18 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000cee:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000cf0:	b928      	cbnz	r0, 8000cfe <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000cf2:	4b0a      	ldr	r3, [pc, #40]	; (8000d1c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000cf4:	4a0a      	ldr	r2, [pc, #40]	; (8000d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000cf6:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000cf8:	480a      	ldr	r0, [pc, #40]	; (8000d24 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000cfa:	f019 ffcd 	bl	801ac98 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000cfe:	2200      	movs	r2, #0
 8000d00:	2104      	movs	r1, #4
 8000d02:	2001      	movs	r0, #1
 8000d04:	f005 ffba 	bl	8006c7c <osMessageQueueNew>
 8000d08:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000d0a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000d0c:	b918      	cbnz	r0, 8000d16 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000d0e:	4b07      	ldr	r3, [pc, #28]	; (8000d2c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000d10:	4a03      	ldr	r2, [pc, #12]	; (8000d20 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000d12:	212c      	movs	r1, #44	; 0x2c
 8000d14:	e7f0      	b.n	8000cf8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000d16:	bd08      	pop	{r3, pc}
 8000d18:	20000194 	.word	0x20000194
 8000d1c:	0801c184 	.word	0x0801c184
 8000d20:	0801c1cd 	.word	0x0801c1cd
 8000d24:	0801c1fc 	.word	0x0801c1fc
 8000d28:	20000190 	.word	0x20000190
 8000d2c:	0801c24a 	.word	0x0801c24a

08000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000d30:	4b02      	ldr	r3, [pc, #8]	; (8000d3c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000d32:	f04f 31ff 	mov.w	r1, #4294967295
 8000d36:	6818      	ldr	r0, [r3, #0]
 8000d38:	f005 bf4d 	b.w	8006bd6 <osSemaphoreAcquire>
 8000d3c:	20000194 	.word	0x20000194

08000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000d40:	4b01      	ldr	r3, [pc, #4]	; (8000d48 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000d42:	6818      	ldr	r0, [r3, #0]
 8000d44:	f005 bf72 	b.w	8006c2c <osSemaphoreRelease>
 8000d48:	20000194 	.word	0x20000194

08000d4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000d4c:	4b02      	ldr	r3, [pc, #8]	; (8000d58 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000d4e:	2100      	movs	r1, #0
 8000d50:	6818      	ldr	r0, [r3, #0]
 8000d52:	f005 bf40 	b.w	8006bd6 <osSemaphoreAcquire>
 8000d56:	bf00      	nop
 8000d58:	20000194 	.word	0x20000194

08000d5c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000d5c:	f7ff bff0 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000d60 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000d60:	4803      	ldr	r0, [pc, #12]	; (8000d70 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000d62:	4904      	ldr	r1, [pc, #16]	; (8000d74 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000d64:	6800      	ldr	r0, [r0, #0]
 8000d66:	2300      	movs	r3, #0
 8000d68:	461a      	mov	r2, r3
 8000d6a:	f005 bfc2 	b.w	8006cf2 <osMessageQueuePut>
 8000d6e:	bf00      	nop
 8000d70:	20000190 	.word	0x20000190
 8000d74:	20000018 	.word	0x20000018

08000d78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d78:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d7a:	4c08      	ldr	r4, [pc, #32]	; (8000d9c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d7c:	2300      	movs	r3, #0
 8000d7e:	461a      	mov	r2, r3
 8000d80:	a901      	add	r1, sp, #4
 8000d82:	6820      	ldr	r0, [r4, #0]
 8000d84:	f005 ffe5 	bl	8006d52 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d88:	6820      	ldr	r0, [r4, #0]
 8000d8a:	f04f 33ff 	mov.w	r3, #4294967295
 8000d8e:	2200      	movs	r2, #0
 8000d90:	a901      	add	r1, sp, #4
 8000d92:	f005 ffde 	bl	8006d52 <osMessageQueueGet>
}
 8000d96:	b002      	add	sp, #8
 8000d98:	bd10      	pop	{r4, pc}
 8000d9a:	bf00      	nop
 8000d9c:	20000190 	.word	0x20000190

08000da0 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000da0:	6803      	ldr	r3, [r0, #0]
 8000da2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000da4:	4718      	bx	r3

08000da6 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000da6:	2001      	movs	r0, #1
 8000da8:	4770      	bx	lr

08000daa <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000daa:	6803      	ldr	r3, [r0, #0]
 8000dac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000dae:	4718      	bx	r3

08000db0 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000db0:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000db2:	2300      	movs	r3, #0
 8000db4:	9301      	str	r3, [sp, #4]
 8000db6:	4b0d      	ldr	r3, [pc, #52]	; (8000dec <_ZN8STM32DMA10initializeEv+0x3c>)
 8000db8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dba:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dbe:	631a      	str	r2, [r3, #48]	; 0x30
 8000dc0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000dc2:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000dc6:	9201      	str	r2, [sp, #4]
 8000dc8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000dca:	691a      	ldr	r2, [r3, #16]
 8000dcc:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000dd0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000dd2:	691a      	ldr	r2, [r3, #16]
 8000dd4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000dd8:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000dda:	4b05      	ldr	r3, [pc, #20]	; (8000df0 <_ZN8STM32DMA10initializeEv+0x40>)
 8000ddc:	4a05      	ldr	r2, [pc, #20]	; (8000df4 <_ZN8STM32DMA10initializeEv+0x44>)
 8000dde:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000de0:	4b05      	ldr	r3, [pc, #20]	; (8000df8 <_ZN8STM32DMA10initializeEv+0x48>)
 8000de2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000de6:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000de8:	b002      	add	sp, #8
 8000dea:	4770      	bx	lr
 8000dec:	40023800 	.word	0x40023800
 8000df0:	200012dc 	.word	0x200012dc
 8000df4:	08000e3d 	.word	0x08000e3d
 8000df8:	e000e100 	.word	0xe000e100

08000dfc <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000dfc:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000e00:	4770      	bx	lr
	...

08000e04 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000e04:	4b05      	ldr	r3, [pc, #20]	; (8000e1c <_ZN8STM32DMAD1Ev+0x18>)
 8000e06:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000e08:	4b05      	ldr	r3, [pc, #20]	; (8000e20 <_ZN8STM32DMAD1Ev+0x1c>)
 8000e0a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000e0e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000e12:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000e16:	f3bf 8f6f 	isb	sy
}
 8000e1a:	4770      	bx	lr
 8000e1c:	0801c3e8 	.word	0x0801c3e8
 8000e20:	e000e100 	.word	0xe000e100

08000e24 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000e24:	b510      	push	{r4, lr}
 8000e26:	4604      	mov	r4, r0
}
 8000e28:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000e2c:	f7ff ffea 	bl	8000e04 <_ZN8STM32DMAD1Ev>
 8000e30:	4620      	mov	r0, r4
 8000e32:	f019 ff03 	bl	801ac3c <_ZdlPvj>
 8000e36:	4620      	mov	r0, r4
 8000e38:	bd10      	pop	{r4, pc}
	...

08000e3c <DMA2D_XferCpltCallback>:
 8000e3c:	4b02      	ldr	r3, [pc, #8]	; (8000e48 <DMA2D_XferCpltCallback+0xc>)
 8000e3e:	681b      	ldr	r3, [r3, #0]
 8000e40:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000e42:	6803      	ldr	r3, [r0, #0]
 8000e44:	695b      	ldr	r3, [r3, #20]
 8000e46:	4718      	bx	r3
 8000e48:	2000a4f0 	.word	0x2000a4f0

08000e4c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000e4c:	b570      	push	{r4, r5, r6, lr}
 8000e4e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000e50:	4625      	mov	r5, r4
 8000e52:	4b0a      	ldr	r3, [pc, #40]	; (8000e7c <_ZN8STM32DMAC1Ev+0x30>)
 8000e54:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000e56:	2600      	movs	r6, #0
 8000e58:	6060      	str	r0, [r4, #4]
 8000e5a:	7226      	strb	r6, [r4, #8]
 8000e5c:	7266      	strb	r6, [r4, #9]
 8000e5e:	f845 3b20 	str.w	r3, [r5], #32
 8000e62:	2260      	movs	r2, #96	; 0x60
 8000e64:	4629      	mov	r1, r5
 8000e66:	f009 fa4f 	bl	800a308 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000e6a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000e6e:	60ee      	str	r6, [r5, #12]
 8000e70:	3524      	adds	r5, #36	; 0x24
 8000e72:	42ab      	cmp	r3, r5
 8000e74:	d1fb      	bne.n	8000e6e <_ZN8STM32DMAC1Ev+0x22>
}
 8000e76:	4620      	mov	r0, r4
 8000e78:	bd70      	pop	{r4, r5, r6, pc}
 8000e7a:	bf00      	nop
 8000e7c:	0801c3e8 	.word	0x0801c3e8

08000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000e80:	b508      	push	{r3, lr}
    switch (format)
 8000e82:	290b      	cmp	r1, #11
 8000e84:	d80b      	bhi.n	8000e9e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000e86:	e8df f001 	tbb	[pc, r1]
 8000e8a:	0612      	.short	0x0612
 8000e8c:	0a0a0a10 	.word	0x0a0a0a10
 8000e90:	0808080a 	.word	0x0808080a
 8000e94:	0808      	.short	0x0808
 8000e96:	2001      	movs	r0, #1
}
 8000e98:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000e9a:	2005      	movs	r0, #5
        break;
 8000e9c:	e7fc      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000e9e:	4b05      	ldr	r3, [pc, #20]	; (8000eb4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ea0:	4a05      	ldr	r2, [pc, #20]	; (8000eb8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ea2:	4806      	ldr	r0, [pc, #24]	; (8000ebc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000ea4:	2166      	movs	r1, #102	; 0x66
 8000ea6:	f019 fef7 	bl	801ac98 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000eaa:	2000      	movs	r0, #0
 8000eac:	e7f4      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000eae:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000eb0:	e7f2      	b.n	8000e98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000eb2:	bf00      	nop
 8000eb4:	0801c28c 	.word	0x0801c28c
 8000eb8:	0801c2a7 	.word	0x0801c2a7
 8000ebc:	0801c2f1 	.word	0x0801c2f1

08000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ec0:	b508      	push	{r3, lr}
    switch (format)
 8000ec2:	290a      	cmp	r1, #10
 8000ec4:	d809      	bhi.n	8000eda <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ec6:	e8df f001 	tbb	[pc, r1]
 8000eca:	0610      	.short	0x0610
 8000ecc:	0808080e 	.word	0x0808080e
 8000ed0:	06060608 	.word	0x06060608
 8000ed4:	06          	.byte	0x06
 8000ed5:	00          	.byte	0x00
 8000ed6:	2001      	movs	r0, #1
}
 8000ed8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000eda:	4b05      	ldr	r3, [pc, #20]	; (8000ef0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000edc:	4a05      	ldr	r2, [pc, #20]	; (8000ef4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ede:	4806      	ldr	r0, [pc, #24]	; (8000ef8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ee0:	2187      	movs	r1, #135	; 0x87
 8000ee2:	f019 fed9 	bl	801ac98 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000ee6:	2000      	movs	r0, #0
 8000ee8:	e7f6      	b.n	8000ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000eea:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000eec:	e7f4      	b.n	8000ed8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000eee:	bf00      	nop
 8000ef0:	0801c28c 	.word	0x0801c28c
 8000ef4:	0801c33d 	.word	0x0801c33d
 8000ef8:	0801c2f1 	.word	0x0801c2f1

08000efc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f00:	7f4f      	ldrb	r7, [r1, #29]
{
 8000f02:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f04:	4639      	mov	r1, r7
{
 8000f06:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f08:	f7ff ffba 	bl	8000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f0c:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000f10:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f12:	4641      	mov	r1, r8
 8000f14:	4648      	mov	r0, r9
 8000f16:	f7ff ffb3 	bl	8000e80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1a:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1c:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f1e:	4648      	mov	r0, r9
 8000f20:	f7ff ffce 	bl	8000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f24:	8aa1      	ldrh	r1, [r4, #20]
 8000f26:	8b62      	ldrh	r2, [r4, #26]
 8000f28:	4b42      	ldr	r3, [pc, #264]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000f2a:	1a52      	subs	r2, r2, r1
 8000f2c:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000f2e:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000f30:	8b22      	ldrh	r2, [r4, #24]
 8000f32:	1a52      	subs	r2, r2, r1
 8000f34:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f36:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000f38:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000f3a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f3e:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f40:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000f42:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f44:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000f46:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000f48:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f4a:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000f4e:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f50:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000f54:	d026      	beq.n	8000fa4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000f56:	d810      	bhi.n	8000f7a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000f58:	2920      	cmp	r1, #32
 8000f5a:	ea45 0402 	orr.w	r4, r5, r2
 8000f5e:	d061      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000f60:	2940      	cmp	r1, #64	; 0x40
 8000f62:	d05f      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000f64:	2904      	cmp	r1, #4
 8000f66:	d05d      	beq.n	8001024 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f68:	4b32      	ldr	r3, [pc, #200]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000f6a:	432a      	orrs	r2, r5
 8000f6c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000f70:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f72:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000f74:	d05a      	beq.n	800102c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f76:	4a30      	ldr	r2, [pc, #192]	; (8001038 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000f78:	e040      	b.n	8000ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000f7a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000f7e:	d007      	beq.n	8000f90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000f80:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000f84:	d1f0      	bne.n	8000f68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f86:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000f8a:	f042 0209 	orr.w	r2, r2, #9
 8000f8e:	e003      	b.n	8000f98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f90:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000f94:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f98:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000f9a:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000f9c:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f9e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fa0:	6158      	str	r0, [r3, #20]
 8000fa2:	e02a      	b.n	8000ffa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000fa4:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000fa6:	432a      	orrs	r2, r5
 8000fa8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000fac:	1d21      	adds	r1, r4, #4
 8000fae:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000fb0:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000fb2:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fb4:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fb6:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000fb8:	b142      	cbz	r2, 8000fcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000fba:	2a01      	cmp	r2, #1
 8000fbc:	d021      	beq.n	8001002 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000fbe:	4b1f      	ldr	r3, [pc, #124]	; (800103c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000fc0:	4a1f      	ldr	r2, [pc, #124]	; (8001040 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000fc2:	4820      	ldr	r0, [pc, #128]	; (8001044 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000fc4:	f240 1111 	movw	r1, #273	; 0x111
 8000fc8:	f019 fe66 	bl	801ac98 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000fcc:	69da      	ldr	r2, [r3, #28]
 8000fce:	8861      	ldrh	r1, [r4, #2]
 8000fd0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000fd4:	3901      	subs	r1, #1
 8000fd6:	f022 0210 	bic.w	r2, r2, #16
 8000fda:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000fde:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000fe0:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000fe2:	4b14      	ldr	r3, [pc, #80]	; (8001034 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000fe4:	69da      	ldr	r2, [r3, #28]
 8000fe6:	f042 0220 	orr.w	r2, r2, #32
 8000fea:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000fec:	69da      	ldr	r2, [r3, #28]
 8000fee:	0692      	lsls	r2, r2, #26
 8000ff0:	d4fc      	bmi.n	8000fec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000ff2:	2210      	movs	r2, #16
 8000ff4:	609a      	str	r2, [r3, #8]
            if(blend)
 8000ff6:	2800      	cmp	r0, #0
 8000ff8:	d0bd      	beq.n	8000f76 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ffa:	4a13      	ldr	r2, [pc, #76]	; (8001048 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ffc:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ffe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001002:	8862      	ldrh	r2, [r4, #2]
 8001004:	69d9      	ldr	r1, [r3, #28]
 8001006:	1e54      	subs	r4, r2, #1
 8001008:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 800100c:	f022 0210 	bic.w	r2, r2, #16
 8001010:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8001014:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001018:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 800101c:	bf18      	it	ne
 800101e:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001020:	61da      	str	r2, [r3, #28]
                break;
 8001022:	e7de      	b.n	8000fe2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001024:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001028:	61dc      	str	r4, [r3, #28]
 800102a:	e7b8      	b.n	8000f9e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800102c:	f240 2201 	movw	r2, #513	; 0x201
 8001030:	e7e4      	b.n	8000ffc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8001032:	bf00      	nop
 8001034:	4002b000 	.word	0x4002b000
 8001038:	00010201 	.word	0x00010201
 800103c:	0801c388 	.word	0x0801c388
 8001040:	0801c3a2 	.word	0x0801c3a2
 8001044:	0801c2f1 	.word	0x0801c2f1
 8001048:	00020201 	.word	0x00020201

0800104c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800104c:	b570      	push	{r4, r5, r6, lr}
 800104e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001050:	7f89      	ldrb	r1, [r1, #30]
 8001052:	f7ff ff35 	bl	8000ec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001056:	8aa6      	ldrh	r6, [r4, #20]
 8001058:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800105a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800105c:	4b15      	ldr	r3, [pc, #84]	; (80010b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800105e:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001060:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001062:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001066:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001068:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800106a:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800106c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800106e:	6826      	ldr	r6, [r4, #0]
 8001070:	68e1      	ldr	r1, [r4, #12]
 8001072:	2e08      	cmp	r6, #8
 8001074:	d10d      	bne.n	8001092 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001076:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001078:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800107a:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 800107c:	7f20      	ldrb	r0, [r4, #28]
 800107e:	4a0e      	ldr	r2, [pc, #56]	; (80010b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001080:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001084:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001086:	4a0d      	ldr	r2, [pc, #52]	; (80010bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001088:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800108a:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800108c:	60dd      	str	r5, [r3, #12]

        // set color
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800108e:	601a      	str	r2, [r3, #0]
    }
}
 8001090:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001092:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001094:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001096:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001098:	0948      	lsrs	r0, r1, #5
 800109a:	0a0a      	lsrs	r2, r1, #8
 800109c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80010a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80010a4:	4302      	orrs	r2, r0
 80010a6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80010aa:	430a      	orrs	r2, r1
 80010ac:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80010ae:	4a04      	ldr	r2, [pc, #16]	; (80010c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 80010b0:	e7ed      	b.n	800108e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 80010b2:	bf00      	nop
 80010b4:	4002b000 	.word	0x4002b000
 80010b8:	00010009 	.word	0x00010009
 80010bc:	00020201 	.word	0x00020201
 80010c0:	00030201 	.word	0x00030201

080010c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010c4:	2001      	movs	r0, #1
 80010c6:	4770      	bx	lr

080010c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010c8:	200c      	movs	r0, #12
 80010ca:	4770      	bx	lr

080010cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010cc:	230c      	movs	r3, #12
 80010ce:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d2:	3008      	adds	r0, #8
 80010d4:	4770      	bx	lr

080010d6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010d6:	230c      	movs	r3, #12
 80010d8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010dc:	3008      	adds	r0, #8
 80010de:	4770      	bx	lr

080010e0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010e0:	2001      	movs	r0, #1
 80010e2:	4770      	bx	lr

080010e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010e4:	20f0      	movs	r0, #240	; 0xf0
 80010e6:	4770      	bx	lr

080010e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010e8:	23f0      	movs	r3, #240	; 0xf0
 80010ea:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010ee:	3008      	adds	r0, #8
 80010f0:	4770      	bx	lr

080010f2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010f2:	23f0      	movs	r3, #240	; 0xf0
 80010f4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010f8:	3008      	adds	r0, #8
 80010fa:	4770      	bx	lr

080010fc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010fc:	2001      	movs	r0, #1
 80010fe:	4770      	bx	lr

08001100 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001100:	2010      	movs	r0, #16
 8001102:	4770      	bx	lr

08001104 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001104:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001108:	3008      	adds	r0, #8
 800110a:	4770      	bx	lr

0800110c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800110c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001110:	3008      	adds	r0, #8
 8001112:	4770      	bx	lr

08001114 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8001114:	4608      	mov	r0, r1
 8001116:	f001 b8fd 	b.w	8002314 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
	...

0800111c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800111c:	b510      	push	{r4, lr}
 800111e:	4b03      	ldr	r3, [pc, #12]	; (800112c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001120:	6003      	str	r3, [r0, #0]
 8001122:	4604      	mov	r4, r0
 8001124:	f007 fe22 	bl	8008d6c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001128:	4620      	mov	r0, r4
 800112a:	bd10      	pop	{r4, pc}
 800112c:	0801c4a0 	.word	0x0801c4a0

08001130 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001130:	b510      	push	{r4, lr}
 8001132:	4604      	mov	r4, r0
 8001134:	f7ff fff2 	bl	800111c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001138:	4620      	mov	r0, r4
 800113a:	2114      	movs	r1, #20
 800113c:	f019 fd7e 	bl	801ac3c <_ZdlPvj>
 8001140:	4620      	mov	r0, r4
 8001142:	bd10      	pop	{r4, pc}

08001144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001144:	b510      	push	{r4, lr}
 8001146:	4b03      	ldr	r3, [pc, #12]	; (8001154 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001148:	6003      	str	r3, [r0, #0]
 800114a:	4604      	mov	r4, r0
 800114c:	f007 fe0e 	bl	8008d6c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001150:	4620      	mov	r0, r4
 8001152:	bd10      	pop	{r4, pc}
 8001154:	0801c46c 	.word	0x0801c46c

08001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001158:	b510      	push	{r4, lr}
 800115a:	4604      	mov	r4, r0
 800115c:	f7ff fff2 	bl	8001144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001160:	4620      	mov	r0, r4
 8001162:	21f8      	movs	r1, #248	; 0xf8
 8001164:	f019 fd6a 	bl	801ac3c <_ZdlPvj>
 8001168:	4620      	mov	r0, r4
 800116a:	bd10      	pop	{r4, pc}

0800116c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800116c:	b510      	push	{r4, lr}
 800116e:	4b03      	ldr	r3, [pc, #12]	; (800117c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001170:	6003      	str	r3, [r0, #0]
 8001172:	4604      	mov	r4, r0
 8001174:	f007 fdfa 	bl	8008d6c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001178:	4620      	mov	r0, r4
 800117a:	bd10      	pop	{r4, pc}
 800117c:	0801c438 	.word	0x0801c438

08001180 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001180:	b510      	push	{r4, lr}
 8001182:	4604      	mov	r4, r0
 8001184:	f7ff fff2 	bl	800116c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001188:	4620      	mov	r0, r4
 800118a:	2118      	movs	r1, #24
 800118c:	f019 fd56 	bl	801ac3c <_ZdlPvj>
 8001190:	4620      	mov	r0, r4
 8001192:	bd10      	pop	{r4, pc}

08001194 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001194:	b510      	push	{r4, lr}
 8001196:	4b08      	ldr	r3, [pc, #32]	; (80011b8 <_ZN12FrontendHeapD1Ev+0x24>)
 8001198:	6003      	str	r3, [r0, #0]
 800119a:	4604      	mov	r4, r0
 800119c:	f500 7092 	add.w	r0, r0, #292	; 0x124
 80011a0:	f7ff ffbc 	bl	800111c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011a4:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80011a8:	f7ff ffcc 	bl	8001144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011ac:	f104 0014 	add.w	r0, r4, #20
 80011b0:	f7ff ffdc 	bl	800116c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011b4:	4620      	mov	r0, r4
 80011b6:	bd10      	pop	{r4, pc}
 80011b8:	0801c4d4 	.word	0x0801c4d4

080011bc <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011bc:	b508      	push	{r3, lr}
 80011be:	4802      	ldr	r0, [pc, #8]	; (80011c8 <__tcf_0+0xc>)
 80011c0:	f7ff ffe8 	bl	8001194 <_ZN12FrontendHeapD1Ev>
 80011c4:	bd08      	pop	{r3, pc}
 80011c6:	bf00      	nop
 80011c8:	2000019c 	.word	0x2000019c

080011cc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011cc:	b510      	push	{r4, lr}
 80011ce:	4604      	mov	r4, r0
 80011d0:	f7ff ffe0 	bl	8001194 <_ZN12FrontendHeapD1Ev>
 80011d4:	4620      	mov	r0, r4
 80011d6:	f44f 7125 	mov.w	r1, #660	; 0x294
 80011da:	f019 fd2f 	bl	801ac3c <_ZdlPvj>
 80011de:	4620      	mov	r0, r4
 80011e0:	bd10      	pop	{r4, pc}
	...

080011e4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011e8:	f000 ff20 	bl	800202c <_ZN14BitmapDatabase11getInstanceEv>
 80011ec:	4605      	mov	r5, r0
 80011ee:	f000 ff21 	bl	8002034 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011f2:	2400      	movs	r4, #0
 80011f4:	4601      	mov	r1, r0
 80011f6:	4623      	mov	r3, r4
 80011f8:	4628      	mov	r0, r5
 80011fa:	4622      	mov	r2, r4
 80011fc:	9400      	str	r4, [sp, #0]
 80011fe:	f00d fbd5 	bl	800e9ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001202:	4b25      	ldr	r3, [pc, #148]	; (8001298 <touchgfx_init+0xb4>)
 8001204:	4a25      	ldr	r2, [pc, #148]	; (800129c <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8001206:	4d26      	ldr	r5, [pc, #152]	; (80012a0 <touchgfx_init+0xbc>)
 8001208:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800120a:	4620      	mov	r0, r4
 800120c:	f001 fb66 	bl	80028dc <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001210:	4824      	ldr	r0, [pc, #144]	; (80012a4 <touchgfx_init+0xc0>)
 8001212:	f00d fb17 	bl	800e844 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001216:	782b      	ldrb	r3, [r5, #0]
 8001218:	f3bf 8f5b 	dmb	ish
 800121c:	07db      	lsls	r3, r3, #31
 800121e:	d435      	bmi.n	800128c <touchgfx_init+0xa8>
 8001220:	4628      	mov	r0, r5
 8001222:	f019 fd0d 	bl	801ac40 <__cxa_guard_acquire>
 8001226:	b388      	cbz	r0, 800128c <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001228:	4c1f      	ldr	r4, [pc, #124]	; (80012a8 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800122a:	4b20      	ldr	r3, [pc, #128]	; (80012ac <touchgfx_init+0xc8>)
 800122c:	6023      	str	r3, [r4, #0]
 800122e:	f504 769e 	add.w	r6, r4, #316	; 0x13c
 8001232:	f104 0014 	add.w	r0, r4, #20
 8001236:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800123a:	f504 7792 	add.w	r7, r4, #292	; 0x124
 800123e:	6060      	str	r0, [r4, #4]
 8001240:	f8c4 8008 	str.w	r8, [r4, #8]
 8001244:	60e7      	str	r7, [r4, #12]
 8001246:	6126      	str	r6, [r4, #16]
 8001248:	f007 fd92 	bl	8008d70 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800124c:	4b18      	ldr	r3, [pc, #96]	; (80012b0 <touchgfx_init+0xcc>)
 800124e:	6163      	str	r3, [r4, #20]
 8001250:	4640      	mov	r0, r8
 8001252:	f007 fd8d 	bl	8008d70 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001256:	4b17      	ldr	r3, [pc, #92]	; (80012b4 <touchgfx_init+0xd0>)
 8001258:	62e3      	str	r3, [r4, #44]	; 0x2c
 800125a:	4638      	mov	r0, r7
 800125c:	f007 fd88 	bl	8008d70 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001260:	4b15      	ldr	r3, [pc, #84]	; (80012b8 <touchgfx_init+0xd4>)
 8001262:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8001266:	f504 709c 	add.w	r0, r4, #312	; 0x138
 800126a:	f001 fbb3 	bl	80029d4 <_ZN5ModelC1Ev>
 800126e:	4622      	mov	r2, r4
 8001270:	f504 719c 	add.w	r1, r4, #312	; 0x138
 8001274:	4630      	mov	r0, r6
 8001276:	f001 fba3 	bl	80029c0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800127a:	4630      	mov	r0, r6
 800127c:	f001 f84a 	bl	8002314 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001280:	480e      	ldr	r0, [pc, #56]	; (80012bc <touchgfx_init+0xd8>)
 8001282:	f019 fd27 	bl	801acd4 <atexit>
 8001286:	4628      	mov	r0, r5
 8001288:	f019 fce6 	bl	801ac58 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800128c:	480c      	ldr	r0, [pc, #48]	; (80012c0 <touchgfx_init+0xdc>)
}
 800128e:	b002      	add	sp, #8
 8001290:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001294:	f7ff bb1c 	b.w	80008d0 <_ZN11TouchGFXHAL10initializeEv>
 8001298:	2000a54c 	.word	0x2000a54c
 800129c:	20001250 	.word	0x20001250
 80012a0:	20000198 	.word	0x20000198
 80012a4:	2000001c 	.word	0x2000001c
 80012a8:	2000019c 	.word	0x2000019c
 80012ac:	0801c4d4 	.word	0x0801c4d4
 80012b0:	0801c438 	.word	0x0801c438
 80012b4:	0801c46c 	.word	0x0801c46c
 80012b8:	0801c4a0 	.word	0x0801c4a0
 80012bc:	080011bd 	.word	0x080011bd
 80012c0:	200011d4 	.word	0x200011d4

080012c4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012c4:	4801      	ldr	r0, [pc, #4]	; (80012cc <touchgfx_taskEntry+0x8>)
 80012c6:	f7ff bb1d 	b.w	8000904 <_ZN11TouchGFXHAL9taskEntryEv>
 80012ca:	bf00      	nop
 80012cc:	200011d4 	.word	0x200011d4

080012d0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012d0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80012d2:	4e23      	ldr	r6, [pc, #140]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0x90>)
{
public:

    STM32TouchController() {}
 80012d4:	4c23      	ldr	r4, [pc, #140]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static LCD16bpp display;
 80012d6:	4d24      	ldr	r5, [pc, #144]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012d8:	4b24      	ldr	r3, [pc, #144]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 80012da:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80012dc:	4630      	mov	r0, r6
 80012de:	f7ff fdb5 	bl	8000e4c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80012e2:	4628      	mov	r0, r5
 80012e4:	f010 fd0e 	bl	8011d04 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012e8:	4b21      	ldr	r3, [pc, #132]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012ea:	4822      	ldr	r0, [pc, #136]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 80012ec:	60dc      	str	r4, [r3, #12]
 80012ee:	2200      	movs	r2, #0
 80012f0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012f4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012f8:	491f      	ldr	r1, [pc, #124]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80012fa:	861a      	strh	r2, [r3, #48]	; 0x30
 80012fc:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 8001300:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001304:	6759      	str	r1, [r3, #116]	; 0x74
 8001306:	2101      	movs	r1, #1
 8001308:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 800130c:	491b      	ldr	r1, [pc, #108]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 800130e:	661a      	str	r2, [r3, #96]	; 0x60
        instance = this;
 8001310:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001312:	f44f 7150 	mov.w	r1, #832	; 0x340
 8001316:	8001      	strh	r1, [r0, #0]
 8001318:	4819      	ldr	r0, [pc, #100]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 800131a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800131e:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001320:	4818      	ldr	r0, [pc, #96]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8001322:	671a      	str	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001324:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001328:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800132c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001330:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001334:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001338:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 800133c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001340:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001344:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001348:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800134c:	8001      	strh	r1, [r0, #0]
 800134e:	480e      	ldr	r0, [pc, #56]	; (8001388 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001350:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001354:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001356:	490d      	ldr	r1, [pc, #52]	; (800138c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001358:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800135a:	4a0d      	ldr	r2, [pc, #52]	; (8001390 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 800135c:	601a      	str	r2, [r3, #0]
}
 800135e:	bd70      	pop	{r4, r5, r6, pc}
 8001360:	20000434 	.word	0x20000434
 8001364:	20000430 	.word	0x20000430
 8001368:	20001254 	.word	0x20001254
 800136c:	0801bf28 	.word	0x0801bf28
 8001370:	200011d4 	.word	0x200011d4
 8001374:	2000a4e4 	.word	0x2000a4e4
 8001378:	01000001 	.word	0x01000001
 800137c:	2000a4f0 	.word	0x2000a4f0
 8001380:	2000a4ea 	.word	0x2000a4ea
 8001384:	2000a4e6 	.word	0x2000a4e6
 8001388:	2000a4ec 	.word	0x2000a4ec
 800138c:	2000a4e8 	.word	0x2000a4e8
 8001390:	0801c0b4 	.word	0x0801c0b4

08001394 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001394:	4801      	ldr	r0, [pc, #4]	; (800139c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001396:	f7ff bd35 	b.w	8000e04 <_ZN8STM32DMAD1Ev>
 800139a:	bf00      	nop
 800139c:	20000434 	.word	0x20000434

080013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a0:	4b02      	ldr	r3, [pc, #8]	; (80013ac <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80013a2:	2290      	movs	r2, #144	; 0x90
 80013a4:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 80013a8:	4770      	bx	lr
 80013aa:	bf00      	nop
 80013ac:	e000e100 	.word	0xe000e100

080013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013b0:	4b02      	ldr	r3, [pc, #8]	; (80013bc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013b2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013b6:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013b8:	4770      	bx	lr
 80013ba:	bf00      	nop
 80013bc:	e000e100 	.word	0xe000e100

080013c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013c0:	4770      	bx	lr

080013c2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013c2:	4770      	bx	lr

080013c4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013c4:	b570      	push	{r4, r5, r6, lr}
 80013c6:	4604      	mov	r4, r0
    HAL::initialize();
 80013c8:	f007 ffff 	bl	80093ca <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013cc:	6823      	ldr	r3, [r4, #0]
 80013ce:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80013d0:	f00a fe9c 	bl	800c10c <_ZN8touchgfx11Application11getInstanceEv>
 80013d4:	4601      	mov	r1, r0
 80013d6:	4620      	mov	r0, r4
 80013d8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013da:	6823      	ldr	r3, [r4, #0]
 80013dc:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80013e0:	2300      	movs	r3, #0
 80013e2:	4620      	mov	r0, r4
 80013e4:	46ac      	mov	ip, r5
 80013e6:	461a      	mov	r2, r3
}
 80013e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013ec:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013f0:	4760      	bx	ip

080013f2 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013f2:	f007 bf9b 	b.w	800932c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013f6 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013f6:	f008 b8f4 	b.w	80095e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
	...

080013fc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013fc:	4b04      	ldr	r3, [pc, #16]	; (8001410 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013fe:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001402:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001406:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800140a:	f3bf 8f6f 	isb	sy
}
 800140e:	4770      	bx	lr
 8001410:	e000e100 	.word	0xe000e100

08001414 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001414:	4901      	ldr	r1, [pc, #4]	; (800141c <vApplicationIdleHook+0x8>)
 8001416:	2000      	movs	r0, #0
 8001418:	f006 bfcc 	b.w	80083b4 <vTaskSetApplicationTaskTag>
 800141c:	08000ca1 	.word	0x08000ca1

08001420 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001420:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001422:	2064      	movs	r0, #100	; 0x64
 8001424:	f005 fb81 	bl	8006b2a <osDelay>
  for(;;)
 8001428:	e7fb      	b.n	8001422 <StartDefaultTask+0x2>
	...

0800142c <SystemClock_Config>:
{
 800142c:	b530      	push	{r4, r5, lr}
 800142e:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001430:	2210      	movs	r2, #16
 8001432:	2100      	movs	r1, #0
 8001434:	a809      	add	r0, sp, #36	; 0x24
 8001436:	f019 fcbb 	bl	801adb0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800143a:	2214      	movs	r2, #20
 800143c:	2100      	movs	r1, #0
 800143e:	a802      	add	r0, sp, #8
 8001440:	f019 fcb6 	bl	801adb0 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001444:	2400      	movs	r4, #0
 8001446:	4b1f      	ldr	r3, [pc, #124]	; (80014c4 <SystemClock_Config+0x98>)
 8001448:	9400      	str	r4, [sp, #0]
 800144a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800144c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001450:	641a      	str	r2, [r3, #64]	; 0x40
 8001452:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001454:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001458:	9300      	str	r3, [sp, #0]
 800145a:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800145c:	4b1a      	ldr	r3, [pc, #104]	; (80014c8 <SystemClock_Config+0x9c>)
 800145e:	9401      	str	r4, [sp, #4]
 8001460:	681a      	ldr	r2, [r3, #0]
 8001462:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001466:	601a      	str	r2, [r3, #0]
 8001468:	681b      	ldr	r3, [r3, #0]
 800146a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800146e:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001470:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001472:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001474:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001478:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800147c:	2502      	movs	r5, #2
 800147e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001482:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001484:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001488:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800148c:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001490:	2004      	movs	r0, #4
 8001492:	2306      	movs	r3, #6
 8001494:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001498:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800149a:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800149c:	f004 fe7e 	bl	800619c <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80014a0:	f004 f8d2 	bl	8005648 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014a4:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014a6:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014aa:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014ac:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014b0:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014b4:	2105      	movs	r1, #5
 80014b6:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014b8:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014bc:	f004 fc42 	bl	8005d44 <HAL_RCC_ClockConfig>
}
 80014c0:	b015      	add	sp, #84	; 0x54
 80014c2:	bd30      	pop	{r4, r5, pc}
 80014c4:	40023800 	.word	0x40023800
 80014c8:	40007000 	.word	0x40007000

080014cc <main>:
{
 80014cc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014d0:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 80014d2:	f002 fa9f 	bl	8003a14 <HAL_Init>
  SystemClock_Config();
 80014d6:	f7ff ffa9 	bl	800142c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014da:	2214      	movs	r2, #20
 80014dc:	2100      	movs	r1, #0
 80014de:	a82d      	add	r0, sp, #180	; 0xb4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014e0:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014e2:	f019 fc65 	bl	801adb0 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014e6:	4bc8      	ldr	r3, [pc, #800]	; (8001808 <main+0x33c>)
 80014e8:	9403      	str	r4, [sp, #12]
 80014ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80014ec:	48c7      	ldr	r0, [pc, #796]	; (800180c <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ee:	f042 0210 	orr.w	r2, r2, #16
 80014f2:	631a      	str	r2, [r3, #48]	; 0x30
 80014f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f6:	f002 0210 	and.w	r2, r2, #16
 80014fa:	9203      	str	r2, [sp, #12]
 80014fc:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014fe:	9404      	str	r4, [sp, #16]
 8001500:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001502:	f042 0202 	orr.w	r2, r2, #2
 8001506:	631a      	str	r2, [r3, #48]	; 0x30
 8001508:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150a:	f002 0202 	and.w	r2, r2, #2
 800150e:	9204      	str	r2, [sp, #16]
 8001510:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001512:	9405      	str	r4, [sp, #20]
 8001514:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001516:	f042 0201 	orr.w	r2, r2, #1
 800151a:	631a      	str	r2, [r3, #48]	; 0x30
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f002 0201 	and.w	r2, r2, #1
 8001522:	9205      	str	r2, [sp, #20]
 8001524:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001526:	9406      	str	r4, [sp, #24]
 8001528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800152e:	631a      	str	r2, [r3, #48]	; 0x30
 8001530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001532:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001536:	9206      	str	r2, [sp, #24]
 8001538:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800153a:	9407      	str	r4, [sp, #28]
 800153c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153e:	f042 0208 	orr.w	r2, r2, #8
 8001542:	631a      	str	r2, [r3, #48]	; 0x30
 8001544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001546:	f002 0208 	and.w	r2, r2, #8
 800154a:	9207      	str	r2, [sp, #28]
 800154c:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800154e:	9408      	str	r4, [sp, #32]
 8001550:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001552:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001556:	631a      	str	r2, [r3, #48]	; 0x30
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800155e:	9208      	str	r2, [sp, #32]
 8001560:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001562:	9409      	str	r4, [sp, #36]	; 0x24
 8001564:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001566:	f042 0220 	orr.w	r2, r2, #32
 800156a:	631a      	str	r2, [r3, #48]	; 0x30
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f002 0220 	and.w	r2, r2, #32
 8001572:	9209      	str	r2, [sp, #36]	; 0x24
 8001574:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001576:	940a      	str	r4, [sp, #40]	; 0x28
 8001578:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800157e:	631a      	str	r2, [r3, #48]	; 0x30
 8001580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001582:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001586:	920a      	str	r2, [sp, #40]	; 0x28
 8001588:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800158a:	940b      	str	r4, [sp, #44]	; 0x2c
 800158c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001592:	631a      	str	r2, [r3, #48]	; 0x30
 8001594:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001596:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800159a:	920b      	str	r2, [sp, #44]	; 0x2c
 800159c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800159e:	940c      	str	r4, [sp, #48]	; 0x30
 80015a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015a2:	f042 0204 	orr.w	r2, r2, #4
 80015a6:	631a      	str	r2, [r3, #48]	; 0x30
 80015a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015aa:	f002 0204 	and.w	r2, r2, #4
 80015ae:	920c      	str	r2, [sp, #48]	; 0x30
 80015b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015b2:	940d      	str	r4, [sp, #52]	; 0x34
 80015b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015b6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80015ba:	631a      	str	r2, [r3, #48]	; 0x30
 80015bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015be:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80015c2:	4622      	mov	r2, r4
 80015c4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015c8:	930d      	str	r3, [sp, #52]	; 0x34
 80015ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80015cc:	f003 fa38 	bl	8004a40 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015d0:	488f      	ldr	r0, [pc, #572]	; (8001810 <main+0x344>)
 80015d2:	2201      	movs	r2, #1
 80015d4:	2108      	movs	r1, #8
 80015d6:	f003 fa33 	bl	8004a40 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015da:	488e      	ldr	r0, [pc, #568]	; (8001814 <main+0x348>)
 80015dc:	4622      	mov	r2, r4
 80015de:	2146      	movs	r1, #70	; 0x46
 80015e0:	f003 fa2e 	bl	8004a40 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7|D10_Pin, GPIO_PIN_RESET);
 80015e4:	4622      	mov	r2, r4
 80015e6:	488c      	ldr	r0, [pc, #560]	; (8001818 <main+0x34c>)
 80015e8:	21c0      	movs	r1, #192	; 0xc0
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015ea:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7|D10_Pin, GPIO_PIN_RESET);
 80015ec:	f003 fa28 	bl	8004a40 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015f0:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80015f8:	4884      	ldr	r0, [pc, #528]	; (800180c <main+0x340>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015fa:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 80015fe:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001600:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001604:	2511      	movs	r5, #17
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001606:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001608:	f003 f88c 	bl	8004724 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 800160c:	2208      	movs	r2, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800160e:	4880      	ldr	r0, [pc, #512]	; (8001810 <main+0x344>)
 8001610:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001612:	e9cd 252d 	strd	r2, r5, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001616:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800161a:	f003 f883 	bl	8004724 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 800161e:	2246      	movs	r2, #70	; 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001620:	487c      	ldr	r0, [pc, #496]	; (8001814 <main+0x348>)
 8001622:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001624:	2780      	movs	r7, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001626:	e9cd 262d 	strd	r2, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800162a:	e9cd 482f 	strd	r4, r8, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800162e:	f003 f879 	bl	8004724 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001632:	4879      	ldr	r0, [pc, #484]	; (8001818 <main+0x34c>)
 8001634:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001636:	e9cd 752d 	strd	r7, r5, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800163a:	e9cd 482f 	strd	r4, r8, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800163e:	f003 f871 	bl	8004724 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = D10_Pin;
 8001642:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(D10_GPIO_Port, &GPIO_InitStruct);
 8001644:	a92d      	add	r1, sp, #180	; 0xb4
 8001646:	4874      	ldr	r0, [pc, #464]	; (8001818 <main+0x34c>)
  hdma2d.Instance = DMA2D;
 8001648:	4d74      	ldr	r5, [pc, #464]	; (800181c <main+0x350>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800164a:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800164e:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(D10_GPIO_Port, &GPIO_InitStruct);
 8001652:	f003 f867 	bl	8004724 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001656:	4872      	ldr	r0, [pc, #456]	; (8001820 <main+0x354>)
 8001658:	4a72      	ldr	r2, [pc, #456]	; (8001824 <main+0x358>)
 800165a:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800165c:	f002 fa80 	bl	8003b60 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001660:	4a71      	ldr	r2, [pc, #452]	; (8001828 <main+0x35c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001662:	e9c5 440a 	strd	r4, r4, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001666:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800166a:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 800166c:	e9c5 2400 	strd	r2, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001670:	e9c5 4402 	strd	r4, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001674:	f002 fb88 	bl	8003d88 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001678:	4631      	mov	r1, r6
 800167a:	4628      	mov	r0, r5
 800167c:	f002 fc3c 	bl	8003ef8 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001680:	4639      	mov	r1, r7
 8001682:	4622      	mov	r2, r4
 8001684:	4864      	ldr	r0, [pc, #400]	; (8001818 <main+0x34c>)
  hdsi.Instance = DSI;
 8001686:	4d69      	ldr	r5, [pc, #420]	; (800182c <main+0x360>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001688:	f003 f9da 	bl	8004a40 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800168c:	2014      	movs	r0, #20
 800168e:	f002 f9ed 	bl	8003a6c <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001692:	4639      	mov	r1, r7
 8001694:	4632      	mov	r2, r6
 8001696:	4860      	ldr	r0, [pc, #384]	; (8001818 <main+0x34c>)
 8001698:	f003 f9d2 	bl	8004a40 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 800169c:	200a      	movs	r0, #10
 800169e:	f002 f9e5 	bl	8003a6c <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80016a2:	2224      	movs	r2, #36	; 0x24
 80016a4:	4621      	mov	r1, r4
 80016a6:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 80016a8:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80016aa:	f019 fb81 	bl	801adb0 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80016ae:	2218      	movs	r2, #24
 80016b0:	4621      	mov	r1, r4
 80016b2:	a811      	add	r0, sp, #68	; 0x44
 80016b4:	f019 fb7c 	bl	801adb0 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80016b8:	2234      	movs	r2, #52	; 0x34
 80016ba:	4621      	mov	r1, r4
 80016bc:	a82d      	add	r0, sp, #180	; 0xb4
 80016be:	f019 fb77 	bl	801adb0 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80016c2:	222c      	movs	r2, #44	; 0x2c
 80016c4:	4621      	mov	r1, r4
 80016c6:	eb0d 0007 	add.w	r0, sp, r7
 80016ca:	f019 fb71 	bl	801adb0 <memset>
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016ce:	2702      	movs	r7, #2
  hdsi.Instance = DSI;
 80016d0:	4a57      	ldr	r2, [pc, #348]	; (8001830 <main+0x364>)
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016d2:	217d      	movs	r1, #125	; 0x7d
  hdsi.Init.TXEscapeCkdiv = 4;
 80016d4:	f04f 0904 	mov.w	r9, #4
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016d8:	e9cd 170e 	strd	r1, r7, [sp, #56]	; 0x38
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016dc:	4628      	mov	r0, r5
 80016de:	a90e      	add	r1, sp, #56	; 0x38
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 80016e0:	e9c5 2400 	strd	r2, r4, [r5]
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016e4:	e9c5 9602 	strd	r9, r6, [r5, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016e8:	f002 fcce 	bl	8004088 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016ec:	a917      	add	r1, sp, #92	; 0x5c
 80016ee:	4628      	mov	r0, r5
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016f0:	e9cd 6417 	strd	r6, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016f4:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016f8:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016fc:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8001700:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001702:	f002 feed 	bl	80044e0 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8001706:	231c      	movs	r3, #28
 8001708:	2121      	movs	r1, #33	; 0x21
  PhyTimings.DataLaneLP2HSTime = 25;
 800170a:	220f      	movs	r2, #15
  PhyTimings.ClockLaneLP2HSTime = 33;
 800170c:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8001710:	2119      	movs	r1, #25
 8001712:	e9cd 2113 	strd	r2, r1, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001716:	4628      	mov	r0, r5
 8001718:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 800171a:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800171e:	f002 fea2 	bl	8004466 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8001722:	4649      	mov	r1, r9
 8001724:	4628      	mov	r0, r5
 8001726:	f002 fe8d 	bl	8004444 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 800172a:	f242 7110 	movw	r1, #10000	; 0x2710
 800172e:	4628      	mov	r0, r5
 8001730:	f002 ffe1 	bl	80046f6 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001734:	4621      	mov	r1, r4
 8001736:	4628      	mov	r0, r5
 8001738:	f002 fc43 	bl	8003fc2 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 800173c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001740:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001744:	e9cd 012d 	strd	r0, r1, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001748:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 800174c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001750:	e9cd a12f 	strd	sl, r1, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001754:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001758:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800175c:	e9cd 3131 	strd	r3, r1, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001760:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001764:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001768:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 800176c:	e9cd 3133 	strd	r3, r1, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001770:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001774:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001778:	e9cd c135 	strd	ip, r1, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800177c:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001780:	e9cd e137 	strd	lr, r1, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001784:	4628      	mov	r0, r5
 8001786:	a92d      	add	r1, sp, #180	; 0xb4
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001788:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 800178c:	9739      	str	r7, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800178e:	f002 fe25 	bl	80043dc <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001792:	2310      	movs	r3, #16
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001794:	a920      	add	r1, sp, #128	; 0x80
 8001796:	4628      	mov	r0, r5
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001798:	e9cd b322 	strd	fp, r3, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 800179c:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 80017a0:	e9cd 4924 	strd	r4, r9, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 80017a4:	e9cd 7426 	strd	r7, r4, [sp, #152]	; 0x98
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 80017a8:	e9cd 4428 	strd	r4, r4, [sp, #160]	; 0xa0
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 80017ac:	962a      	str	r6, [sp, #168]	; 0xa8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 80017ae:	f002 fda3 	bl	80042f8 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 80017b2:	4621      	mov	r1, r4
 80017b4:	4628      	mov	r0, r5
 80017b6:	f002 fd8e 	bl	80042d6 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80017ba:	481e      	ldr	r0, [pc, #120]	; (8001834 <main+0x368>)
 80017bc:	491e      	ldr	r1, [pc, #120]	; (8001838 <main+0x36c>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 80017be:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80017c0:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017c4:	2340      	movs	r3, #64	; 0x40
 80017c6:	2120      	movs	r1, #32
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017c8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017cc:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80017d0:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017d4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80017d8:	e9c0 2309 	strd	r2, r3, [r0, #36]	; 0x24
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80017dc:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 80017e0:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017e2:	a92d      	add	r1, sp, #180	; 0xb4
  SdramTiming.WriteRecoveryTime = 3;
 80017e4:	e9cd 3830 	strd	r3, r8, [sp, #192]	; 0xc0
  SdramTiming.SelfRefreshTime = 4;
 80017e8:	e9cd 392e 	strd	r3, r9, [sp, #184]	; 0xb8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017ec:	e9c0 4902 	strd	r4, r9, [r0, #8]
  SdramTiming.RCDDelay = 2;
 80017f0:	e9cd 7732 	strd	r7, r7, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 80017f4:	972d      	str	r7, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017f6:	f004 fe8b 	bl	8006510 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017fa:	f002 f839 	bl	8003870 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017fe:	f001 ffe9 	bl	80037d4 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001802:	2234      	movs	r2, #52	; 0x34
 8001804:	4621      	mov	r1, r4
 8001806:	e019      	b.n	800183c <main+0x370>
 8001808:	40023800 	.word	0x40023800
 800180c:	40021800 	.word	0x40021800
 8001810:	40022800 	.word	0x40022800
 8001814:	40020000 	.word	0x40020000
 8001818:	40021c00 	.word	0x40021c00
 800181c:	200012dc 	.word	0x200012dc
 8001820:	200012d4 	.word	0x200012d4
 8001824:	40023000 	.word	0x40023000
 8001828:	4002b000 	.word	0x4002b000
 800182c:	2000131c 	.word	0x2000131c
 8001830:	40016c00 	.word	0x40016c00
 8001834:	20001480 	.word	0x20001480
 8001838:	a0000140 	.word	0xa0000140
 800183c:	a820      	add	r0, sp, #128	; 0x80
 800183e:	f019 fab7 	bl	801adb0 <memset>
  hltdc.Instance = LTDC;
 8001842:	f8df 817c 	ldr.w	r8, [pc, #380]	; 80019c0 <main+0x4f4>
 8001846:	4b53      	ldr	r3, [pc, #332]	; (8001994 <main+0x4c8>)
  hltdc.Init.Backcolor.Blue = 0;
 8001848:	f8a8 4034 	strh.w	r4, [r8, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800184c:	e9c8 3400 	strd	r3, r4, [r8]
  hltdc.Init.AccumulatedActiveH = 482;
 8001850:	21ca      	movs	r1, #202	; 0xca
 8001852:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 8001856:	e9c8 1309 	strd	r1, r3, [r8, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 800185a:	20cb      	movs	r0, #203	; 0xcb
 800185c:	f240 13e3 	movw	r3, #483	; 0x1e3
 8001860:	e9c8 030b 	strd	r0, r3, [r8, #44]	; 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001864:	4640      	mov	r0, r8
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001866:	e9c8 4402 	strd	r4, r4, [r8, #8]
  hltdc.Init.HorizontalSync = 1;
 800186a:	e9c8 4604 	strd	r4, r6, [r8, #16]
  hltdc.Init.AccumulatedHBP = 2;
 800186e:	e9c8 6706 	strd	r6, r7, [r8, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001872:	f8c8 7020 	str.w	r7, [r8, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001876:	f888 4036 	strb.w	r4, [r8, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800187a:	f003 fdaf 	bl	80053dc <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800187e:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001880:	f04f 0c05 	mov.w	ip, #5
  pLayerCfg.Alpha0 = 0;
 8001884:	e9cd 2425 	strd	r2, r4, [sp, #148]	; 0x94
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001888:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
 800188c:	e9cd c228 	strd	ip, r2, [sp, #160]	; 0xa0
  pLayerCfg.WindowY1 = 480;
 8001890:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001894:	a920      	add	r1, sp, #128	; 0x80
 8001896:	4622      	mov	r2, r4
 8001898:	4640      	mov	r0, r8
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800189a:	e9cd 3723 	strd	r3, r7, [sp, #140]	; 0x8c
  pLayerCfg.ImageHeight = 480;
 800189e:	e9cd b32a 	strd	fp, r3, [sp, #168]	; 0xa8
  pLayerCfg.WindowX1 = 200;
 80018a2:	e9cd 4b20 	strd	r4, fp, [sp, #128]	; 0x80
  pLayerCfg.WindowY0 = 0;
 80018a6:	9422      	str	r4, [sp, #136]	; 0x88
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80018a8:	f8cd a09c 	str.w	sl, [sp, #156]	; 0x9c
  pLayerCfg.Backcolor.Blue = 0;
 80018ac:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 80018b0:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018b4:	f003 fe5e 	bl	8005574 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 80018b8:	f8d8 2000 	ldr.w	r2, [r8]
 80018bc:	6993      	ldr	r3, [r2, #24]
 80018be:	f023 0301 	bic.w	r3, r3, #1
 80018c2:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 80018c4:	4628      	mov	r0, r5
 80018c6:	f002 fe71 	bl	80045ac <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 80018ca:	4631      	mov	r1, r6
 80018cc:	4638      	mov	r0, r7
 80018ce:	f001 f945 	bl	8002b5c <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 80018d2:	2328      	movs	r3, #40	; 0x28
 80018d4:	2215      	movs	r2, #21
 80018d6:	4621      	mov	r1, r4
 80018d8:	4628      	mov	r0, r5
 80018da:	9400      	str	r4, [sp, #0]
 80018dc:	f002 fe99 	bl	8004612 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018e0:	a92d      	add	r1, sp, #180	; 0xb4
 80018e2:	4628      	mov	r0, r5
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 80018e4:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 80018e8:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 80018ec:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018f0:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018f4:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018f8:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018fa:	f002 fd6f 	bl	80043dc <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018fe:	f44f 7148 	mov.w	r1, #800	; 0x320
 8001902:	4622      	mov	r2, r4
 8001904:	4640      	mov	r0, r8
 8001906:	f003 fe63 	bl	80055d0 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 800190a:	f8d8 2000 	ldr.w	r2, [r8]
  hqspi.Instance = QUADSPI;
 800190e:	4822      	ldr	r0, [pc, #136]	; (8001998 <main+0x4cc>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001910:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 8001912:	4d22      	ldr	r5, [pc, #136]	; (800199c <main+0x4d0>)
  hi2c1.Init.ClockSpeed = 400000;
 8001914:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 80019c4 <main+0x4f8>
  hqspi.Init.FifoThreshold = 1;
 8001918:	6086      	str	r6, [r0, #8]
  __HAL_LTDC_ENABLE(&hltdc);
 800191a:	4333      	orrs	r3, r6
 800191c:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 800191e:	4b20      	ldr	r3, [pc, #128]	; (80019a0 <main+0x4d4>)
  hqspi.Init.FlashSize = 27;
 8001920:	f04f 0e10 	mov.w	lr, #16
  hqspi.Init.ClockPrescaler = 1;
 8001924:	e9c0 3600 	strd	r3, r6, [r0]
  hqspi.Init.FlashSize = 27;
 8001928:	231b      	movs	r3, #27
 800192a:	e9c0 e303 	strd	lr, r3, [r0, #12]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 800192e:	e9c0 a405 	strd	sl, r4, [r0, #20]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001932:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001936:	f003 ff95 	bl	8005864 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 800193a:	f001 fe11 	bl	8003560 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 800193e:	f001 fd45 	bl	80033cc <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001942:	f001 fcbb 	bl	80032bc <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 8001946:	4b17      	ldr	r3, [pc, #92]	; (80019a4 <main+0x4d8>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001948:	622c      	str	r4, [r5, #32]
  hi2c1.Init.ClockSpeed = 400000;
 800194a:	e9c5 8300 	strd	r8, r3, [r5]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800194e:	4628      	mov	r0, r5
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001950:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001954:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 8001958:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800195c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001960:	f003 fa58 	bl	8004e14 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001964:	4628      	mov	r0, r5
 8001966:	f003 fafd 	bl	8004f64 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 800196a:	f7fe fe44 	bl	80005f6 <MX_TouchGFX_Init>
  osKernelInitialize();
 800196e:	f005 f867 	bl	8006a40 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001972:	4a0d      	ldr	r2, [pc, #52]	; (80019a8 <main+0x4dc>)
 8001974:	480d      	ldr	r0, [pc, #52]	; (80019ac <main+0x4e0>)
 8001976:	4621      	mov	r1, r4
 8001978:	f005 f88e 	bl	8006a98 <osThreadNew>
 800197c:	4b0c      	ldr	r3, [pc, #48]	; (80019b0 <main+0x4e4>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800197e:	4a0d      	ldr	r2, [pc, #52]	; (80019b4 <main+0x4e8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001980:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001982:	4621      	mov	r1, r4
 8001984:	480c      	ldr	r0, [pc, #48]	; (80019b8 <main+0x4ec>)
 8001986:	f005 f887 	bl	8006a98 <osThreadNew>
 800198a:	4b0c      	ldr	r3, [pc, #48]	; (80019bc <main+0x4f0>)
 800198c:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800198e:	f005 f869 	bl	8006a64 <osKernelStart>
  while (1)
 8001992:	e7fe      	b.n	8001992 <main+0x4c6>
 8001994:	40016800 	.word	0x40016800
 8001998:	20001434 	.word	0x20001434
 800199c:	20001338 	.word	0x20001338
 80019a0:	a0001000 	.word	0xa0001000
 80019a4:	00061a80 	.word	0x00061a80
 80019a8:	0801c520 	.word	0x0801c520
 80019ac:	08001421 	.word	0x08001421
 80019b0:	200012d0 	.word	0x200012d0
 80019b4:	0801c4fc 	.word	0x0801c4fc
 80019b8:	080005fb 	.word	0x080005fb
 80019bc:	200012cc 	.word	0x200012cc
 80019c0:	2000138c 	.word	0x2000138c
 80019c4:	40005400 	.word	0x40005400

080019c8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80019c8:	6802      	ldr	r2, [r0, #0]
 80019ca:	4b03      	ldr	r3, [pc, #12]	; (80019d8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80019cc:	429a      	cmp	r2, r3
 80019ce:	d101      	bne.n	80019d4 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80019d0:	f002 b83a 	b.w	8003a48 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80019d4:	4770      	bx	lr
 80019d6:	bf00      	nop
 80019d8:	40001000 	.word	0x40001000

080019dc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80019dc:	4770      	bx	lr
	...

080019e0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019e0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019e2:	4b0e      	ldr	r3, [pc, #56]	; (8001a1c <HAL_MspInit+0x3c>)
 80019e4:	2200      	movs	r2, #0
 80019e6:	9200      	str	r2, [sp, #0]
 80019e8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019ea:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019ee:	6459      	str	r1, [r3, #68]	; 0x44
 80019f0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019f2:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019f6:	9100      	str	r1, [sp, #0]
 80019f8:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019fa:	9201      	str	r2, [sp, #4]
 80019fc:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019fe:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001a02:	6419      	str	r1, [r3, #64]	; 0x40
 8001a04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a06:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a0a:	9301      	str	r3, [sp, #4]
 8001a0c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a0e:	210f      	movs	r1, #15
 8001a10:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a14:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a16:	f002 b84f 	b.w	8003ab8 <HAL_NVIC_SetPriority>
 8001a1a:	bf00      	nop
 8001a1c:	40023800 	.word	0x40023800

08001a20 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a20:	6802      	ldr	r2, [r0, #0]
 8001a22:	4b09      	ldr	r3, [pc, #36]	; (8001a48 <HAL_CRC_MspInit+0x28>)
 8001a24:	429a      	cmp	r2, r3
{
 8001a26:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a28:	d10b      	bne.n	8001a42 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a2a:	2300      	movs	r3, #0
 8001a2c:	9301      	str	r3, [sp, #4]
 8001a2e:	4b07      	ldr	r3, [pc, #28]	; (8001a4c <HAL_CRC_MspInit+0x2c>)
 8001a30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a32:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a36:	631a      	str	r2, [r3, #48]	; 0x30
 8001a38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a3a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a3e:	9301      	str	r3, [sp, #4]
 8001a40:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a42:	b002      	add	sp, #8
 8001a44:	4770      	bx	lr
 8001a46:	bf00      	nop
 8001a48:	40023000 	.word	0x40023000
 8001a4c:	40023800 	.word	0x40023800

08001a50 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a50:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a52:	4b0f      	ldr	r3, [pc, #60]	; (8001a90 <HAL_DMA2D_MspInit+0x40>)
 8001a54:	6802      	ldr	r2, [r0, #0]
 8001a56:	429a      	cmp	r2, r3
 8001a58:	d116      	bne.n	8001a88 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a60:	9201      	str	r2, [sp, #4]
 8001a62:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a64:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a68:	6319      	str	r1, [r3, #48]	; 0x30
 8001a6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a6c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a70:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a72:	2105      	movs	r1, #5
 8001a74:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a76:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a78:	f002 f81e 	bl	8003ab8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a7c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a7e:	b003      	add	sp, #12
 8001a80:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a84:	f002 b84a 	b.w	8003b1c <HAL_NVIC_EnableIRQ>
}
 8001a88:	b003      	add	sp, #12
 8001a8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a8e:	bf00      	nop
 8001a90:	4002b000 	.word	0x4002b000

08001a94 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001a94:	b510      	push	{r4, lr}
 8001a96:	4604      	mov	r4, r0
 8001a98:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a9a:	2214      	movs	r2, #20
 8001a9c:	2100      	movs	r1, #0
 8001a9e:	a803      	add	r0, sp, #12
 8001aa0:	f019 f986 	bl	801adb0 <memset>
  if(hdsi->Instance==DSI)
 8001aa4:	6822      	ldr	r2, [r4, #0]
 8001aa6:	4b17      	ldr	r3, [pc, #92]	; (8001b04 <HAL_DSI_MspInit+0x70>)
 8001aa8:	429a      	cmp	r2, r3
 8001aaa:	d128      	bne.n	8001afe <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001aac:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001ab0:	2400      	movs	r4, #0
 8001ab2:	9401      	str	r4, [sp, #4]
 8001ab4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ab6:	4814      	ldr	r0, [pc, #80]	; (8001b08 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ab8:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001abc:	645a      	str	r2, [r3, #68]	; 0x44
 8001abe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ac0:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001ac4:	9201      	str	r2, [sp, #4]
 8001ac6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001ac8:	9402      	str	r4, [sp, #8]
 8001aca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001acc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001ad0:	631a      	str	r2, [r3, #48]	; 0x30
 8001ad2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ad4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001ad8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ada:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001adc:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ade:	2302      	movs	r3, #2
 8001ae0:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ae4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001ae6:	230d      	movs	r3, #13
 8001ae8:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001aea:	f002 fe1b 	bl	8004724 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001aee:	205c      	movs	r0, #92	; 0x5c
 8001af0:	4622      	mov	r2, r4
 8001af2:	2105      	movs	r1, #5
 8001af4:	f001 ffe0 	bl	8003ab8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001af8:	205c      	movs	r0, #92	; 0x5c
 8001afa:	f002 f80f 	bl	8003b1c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001afe:	b008      	add	sp, #32
 8001b00:	bd10      	pop	{r4, pc}
 8001b02:	bf00      	nop
 8001b04:	40016c00 	.word	0x40016c00
 8001b08:	40022400 	.word	0x40022400

08001b0c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b0c:	b530      	push	{r4, r5, lr}
 8001b0e:	4604      	mov	r4, r0
 8001b10:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b12:	2214      	movs	r2, #20
 8001b14:	2100      	movs	r1, #0
 8001b16:	a803      	add	r0, sp, #12
 8001b18:	f019 f94a 	bl	801adb0 <memset>
  if(hi2c->Instance==I2C1)
 8001b1c:	6822      	ldr	r2, [r4, #0]
 8001b1e:	4b1a      	ldr	r3, [pc, #104]	; (8001b88 <HAL_I2C_MspInit+0x7c>)
 8001b20:	429a      	cmp	r2, r3
 8001b22:	d12f      	bne.n	8001b84 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b24:	4c19      	ldr	r4, [pc, #100]	; (8001b8c <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b26:	481a      	ldr	r0, [pc, #104]	; (8001b90 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b28:	2500      	movs	r5, #0
 8001b2a:	9501      	str	r5, [sp, #4]
 8001b2c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b2e:	f043 0302 	orr.w	r3, r3, #2
 8001b32:	6323      	str	r3, [r4, #48]	; 0x30
 8001b34:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b36:	f003 0302 	and.w	r3, r3, #2
 8001b3a:	9301      	str	r3, [sp, #4]
 8001b3c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b3e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b42:	2312      	movs	r3, #18
 8001b44:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b48:	2101      	movs	r1, #1
 8001b4a:	2303      	movs	r3, #3
 8001b4c:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b50:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b52:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b54:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b56:	f002 fde5 	bl	8004724 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b5a:	9502      	str	r5, [sp, #8]
 8001b5c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b5e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b62:	6423      	str	r3, [r4, #64]	; 0x40
 8001b64:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b66:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b6a:	9302      	str	r3, [sp, #8]
 8001b6c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b6e:	6a23      	ldr	r3, [r4, #32]
 8001b70:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b74:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b76:	6a23      	ldr	r3, [r4, #32]
 8001b78:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b7c:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b7e:	2064      	movs	r0, #100	; 0x64
 8001b80:	f001 ff74 	bl	8003a6c <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b84:	b009      	add	sp, #36	; 0x24
 8001b86:	bd30      	pop	{r4, r5, pc}
 8001b88:	40005400 	.word	0x40005400
 8001b8c:	40023800 	.word	0x40023800
 8001b90:	40020400 	.word	0x40020400

08001b94 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001b94:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001b96:	6802      	ldr	r2, [r0, #0]
 8001b98:	4b0a      	ldr	r3, [pc, #40]	; (8001bc4 <HAL_I2C_MspDeInit+0x30>)
 8001b9a:	429a      	cmp	r2, r3
 8001b9c:	d110      	bne.n	8001bc0 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b9e:	4a0a      	ldr	r2, [pc, #40]	; (8001bc8 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001ba0:	480a      	ldr	r0, [pc, #40]	; (8001bcc <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001ba2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001ba4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001ba8:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001baa:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001bae:	f002 fe9f 	bl	80048f0 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001bb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001bb6:	4805      	ldr	r0, [pc, #20]	; (8001bcc <HAL_I2C_MspDeInit+0x38>)
 8001bb8:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001bbc:	f002 be98 	b.w	80048f0 <HAL_GPIO_DeInit>
}
 8001bc0:	bd08      	pop	{r3, pc}
 8001bc2:	bf00      	nop
 8001bc4:	40005400 	.word	0x40005400
 8001bc8:	40023800 	.word	0x40023800
 8001bcc:	40020400 	.word	0x40020400

08001bd0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001bd0:	b510      	push	{r4, lr}
 8001bd2:	4604      	mov	r4, r0
 8001bd4:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001bd6:	223c      	movs	r2, #60	; 0x3c
 8001bd8:	2100      	movs	r1, #0
 8001bda:	a801      	add	r0, sp, #4
 8001bdc:	f019 f8e8 	bl	801adb0 <memset>
  if(hltdc->Instance==LTDC)
 8001be0:	6822      	ldr	r2, [r4, #0]
 8001be2:	4b12      	ldr	r3, [pc, #72]	; (8001c2c <HAL_LTDC_MspInit+0x5c>)
 8001be4:	429a      	cmp	r2, r3
 8001be6:	d11f      	bne.n	8001c28 <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001be8:	2308      	movs	r3, #8
 8001bea:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001bec:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001bf0:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bf2:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001bf4:	2306      	movs	r3, #6
 8001bf6:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bf8:	f004 f96e 	bl	8005ed8 <HAL_RCCEx_PeriphCLKConfig>
 8001bfc:	b108      	cbz	r0, 8001c02 <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 8001bfe:	f7ff feed 	bl	80019dc <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c02:	4b0b      	ldr	r3, [pc, #44]	; (8001c30 <HAL_LTDC_MspInit+0x60>)
 8001c04:	2200      	movs	r2, #0
 8001c06:	9200      	str	r2, [sp, #0]
 8001c08:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c0a:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8001c0e:	6459      	str	r1, [r3, #68]	; 0x44
 8001c10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c12:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c16:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c18:	2058      	movs	r0, #88	; 0x58
 8001c1a:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c1c:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c1e:	f001 ff4b 	bl	8003ab8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c22:	2058      	movs	r0, #88	; 0x58
 8001c24:	f001 ff7a 	bl	8003b1c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c28:	b010      	add	sp, #64	; 0x40
 8001c2a:	bd10      	pop	{r4, pc}
 8001c2c:	40016800 	.word	0x40016800
 8001c30:	40023800 	.word	0x40023800

08001c34 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c36:	4604      	mov	r4, r0
 8001c38:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c3a:	2214      	movs	r2, #20
 8001c3c:	2100      	movs	r1, #0
 8001c3e:	a803      	add	r0, sp, #12
 8001c40:	f019 f8b6 	bl	801adb0 <memset>
  if(hqspi->Instance==QUADSPI)
 8001c44:	6822      	ldr	r2, [r4, #0]
 8001c46:	4b24      	ldr	r3, [pc, #144]	; (8001cd8 <HAL_QSPI_MspInit+0xa4>)
 8001c48:	429a      	cmp	r2, r3
 8001c4a:	d142      	bne.n	8001cd2 <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c4c:	4b23      	ldr	r3, [pc, #140]	; (8001cdc <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c4e:	4824      	ldr	r0, [pc, #144]	; (8001ce0 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c50:	2400      	movs	r4, #0
 8001c52:	9400      	str	r4, [sp, #0]
 8001c54:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c56:	f042 0202 	orr.w	r2, r2, #2
 8001c5a:	639a      	str	r2, [r3, #56]	; 0x38
 8001c5c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c5e:	f002 0202 	and.w	r2, r2, #2
 8001c62:	9200      	str	r2, [sp, #0]
 8001c64:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c66:	9401      	str	r4, [sp, #4]
 8001c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6a:	f042 0202 	orr.w	r2, r2, #2
 8001c6e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c72:	f002 0202 	and.w	r2, r2, #2
 8001c76:	9201      	str	r2, [sp, #4]
 8001c78:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c7a:	9402      	str	r4, [sp, #8]
 8001c7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c7e:	f042 0220 	orr.w	r2, r2, #32
 8001c82:	631a      	str	r2, [r3, #48]	; 0x30
 8001c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c86:	f003 0320 	and.w	r3, r3, #32
 8001c8a:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8c:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c8e:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c90:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c92:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c94:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c96:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c98:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c9c:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ca0:	f002 fd40 	bl	8004724 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001ca4:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca8:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cac:	480d      	ldr	r0, [pc, #52]	; (8001ce4 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cae:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cb2:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cb4:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb8:	f002 fd34 	bl	8004724 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001cbc:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc0:	4808      	ldr	r0, [pc, #32]	; (8001ce4 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cc2:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc6:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cca:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cce:	f002 fd29 	bl	8004724 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001cd2:	b009      	add	sp, #36	; 0x24
 8001cd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cd6:	bf00      	nop
 8001cd8:	a0001000 	.word	0xa0001000
 8001cdc:	40023800 	.word	0x40023800
 8001ce0:	40020400 	.word	0x40020400
 8001ce4:	40021400 	.word	0x40021400

08001ce8 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001ce8:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001cea:	6802      	ldr	r2, [r0, #0]
 8001cec:	4b09      	ldr	r3, [pc, #36]	; (8001d14 <HAL_QSPI_MspDeInit+0x2c>)
 8001cee:	429a      	cmp	r2, r3
 8001cf0:	d10f      	bne.n	8001d12 <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cf2:	4a09      	ldr	r2, [pc, #36]	; (8001d18 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cf4:	4809      	ldr	r0, [pc, #36]	; (8001d1c <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cf6:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001cf8:	f023 0302 	bic.w	r3, r3, #2
 8001cfc:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cfe:	2140      	movs	r1, #64	; 0x40
 8001d00:	f002 fdf6 	bl	80048f0 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001d04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d08:	4805      	ldr	r0, [pc, #20]	; (8001d20 <HAL_QSPI_MspDeInit+0x38>)
 8001d0a:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d0e:	f002 bdef 	b.w	80048f0 <HAL_GPIO_DeInit>
}
 8001d12:	bd08      	pop	{r3, pc}
 8001d14:	a0001000 	.word	0xa0001000
 8001d18:	40023800 	.word	0x40023800
 8001d1c:	40020400 	.word	0x40020400
 8001d20:	40021400 	.word	0x40021400

08001d24 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d26:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d28:	2300      	movs	r3, #0
 8001d2a:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d2c:	4b30      	ldr	r3, [pc, #192]	; (8001df0 <HAL_SDRAM_MspInit+0xcc>)
 8001d2e:	681c      	ldr	r4, [r3, #0]
 8001d30:	2c00      	cmp	r4, #0
 8001d32:	d15a      	bne.n	8001dea <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8001d34:	2201      	movs	r2, #1
 8001d36:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d38:	4b2e      	ldr	r3, [pc, #184]	; (8001df4 <HAL_SDRAM_MspInit+0xd0>)
 8001d3a:	9400      	str	r4, [sp, #0]
 8001d3c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d3e:	482e      	ldr	r0, [pc, #184]	; (8001df8 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d40:	f042 0201 	orr.w	r2, r2, #1
 8001d44:	639a      	str	r2, [r3, #56]	; 0x38
 8001d46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001d48:	f003 0301 	and.w	r3, r3, #1
 8001d4c:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4e:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d50:	2603      	movs	r6, #3
 8001d52:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d54:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d56:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d58:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d5c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d60:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d64:	f002 fcde 	bl	8004724 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d68:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d6c:	4823      	ldr	r0, [pc, #140]	; (8001dfc <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d6e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d70:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d72:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d76:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d7a:	f002 fcd3 	bl	8004724 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d7e:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d82:	481f      	ldr	r0, [pc, #124]	; (8001e00 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d84:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d86:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d88:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d8c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d90:	f002 fcc8 	bl	8004724 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d94:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d98:	481a      	ldr	r0, [pc, #104]	; (8001e04 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d9a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d9c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d9e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001da2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001da6:	f002 fcbd 	bl	8004724 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001daa:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dae:	4816      	ldr	r0, [pc, #88]	; (8001e08 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001db0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001db4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001db8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dbc:	f002 fcb2 	bl	8004724 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001dc0:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dc4:	4811      	ldr	r0, [pc, #68]	; (8001e0c <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dc6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dc8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dca:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dce:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dd2:	f002 fca7 	bl	8004724 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001dd6:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dd8:	480d      	ldr	r0, [pc, #52]	; (8001e10 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dda:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ddc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dde:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001de2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001de6:	f002 fc9d 	bl	8004724 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001dea:	b007      	add	sp, #28
 8001dec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001dee:	bf00      	nop
 8001df0:	200014b8 	.word	0x200014b8
 8001df4:	40023800 	.word	0x40023800
 8001df8:	40021000 	.word	0x40021000
 8001dfc:	40021800 	.word	0x40021800
 8001e00:	40020c00 	.word	0x40020c00
 8001e04:	40022000 	.word	0x40022000
 8001e08:	40021400 	.word	0x40021400
 8001e0c:	40021c00 	.word	0x40021c00
 8001e10:	40020800 	.word	0x40020800

08001e14 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e14:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e16:	4b17      	ldr	r3, [pc, #92]	; (8001e74 <HAL_SDRAM_MspDeInit+0x60>)
 8001e18:	681a      	ldr	r2, [r3, #0]
 8001e1a:	bb52      	cbnz	r2, 8001e72 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e1c:	2201      	movs	r2, #1
 8001e1e:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e20:	4a15      	ldr	r2, [pc, #84]	; (8001e78 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e22:	4816      	ldr	r0, [pc, #88]	; (8001e7c <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e24:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e26:	f023 0301 	bic.w	r3, r3, #1
 8001e2a:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e2c:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001e30:	f002 fd5e 	bl	80048f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001e34:	4812      	ldr	r0, [pc, #72]	; (8001e80 <HAL_SDRAM_MspDeInit+0x6c>)
 8001e36:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e3a:	f002 fd59 	bl	80048f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e3e:	4811      	ldr	r0, [pc, #68]	; (8001e84 <HAL_SDRAM_MspDeInit+0x70>)
 8001e40:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e44:	f002 fd54 	bl	80048f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e48:	480f      	ldr	r0, [pc, #60]	; (8001e88 <HAL_SDRAM_MspDeInit+0x74>)
 8001e4a:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e4e:	f002 fd4f 	bl	80048f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e52:	480e      	ldr	r0, [pc, #56]	; (8001e8c <HAL_SDRAM_MspDeInit+0x78>)
 8001e54:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e58:	f002 fd4a 	bl	80048f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e5c:	480c      	ldr	r0, [pc, #48]	; (8001e90 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e5e:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e62:	f002 fd45 	bl	80048f0 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e6a:	480a      	ldr	r0, [pc, #40]	; (8001e94 <HAL_SDRAM_MspDeInit+0x80>)
 8001e6c:	210d      	movs	r1, #13
 8001e6e:	f002 bd3f 	b.w	80048f0 <HAL_GPIO_DeInit>
}
 8001e72:	bd08      	pop	{r3, pc}
 8001e74:	200014b4 	.word	0x200014b4
 8001e78:	40023800 	.word	0x40023800
 8001e7c:	40021000 	.word	0x40021000
 8001e80:	40021800 	.word	0x40021800
 8001e84:	40020c00 	.word	0x40020c00
 8001e88:	40022000 	.word	0x40022000
 8001e8c:	40021400 	.word	0x40021400
 8001e90:	40021c00 	.word	0x40021c00
 8001e94:	40020800 	.word	0x40020800

08001e98 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e98:	b530      	push	{r4, r5, lr}
 8001e9a:	4601      	mov	r1, r0
 8001e9c:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e9e:	2200      	movs	r2, #0
 8001ea0:	2036      	movs	r0, #54	; 0x36
 8001ea2:	f001 fe09 	bl	8003ab8 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ea6:	2036      	movs	r0, #54	; 0x36
 8001ea8:	f001 fe38 	bl	8003b1c <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eac:	2500      	movs	r5, #0
 8001eae:	4b15      	ldr	r3, [pc, #84]	; (8001f04 <HAL_InitTick+0x6c>)
 8001eb0:	9502      	str	r5, [sp, #8]
 8001eb2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001eb4:	4c14      	ldr	r4, [pc, #80]	; (8001f08 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eb6:	f042 0210 	orr.w	r2, r2, #16
 8001eba:	641a      	str	r2, [r3, #64]	; 0x40
 8001ebc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ebe:	f003 0310 	and.w	r3, r3, #16
 8001ec2:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ec4:	a901      	add	r1, sp, #4
 8001ec6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ec8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001eca:	f003 ffe7 	bl	8005e9c <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ece:	f003 ffd5 	bl	8005e7c <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001ed2:	4b0e      	ldr	r3, [pc, #56]	; (8001f0c <HAL_InitTick+0x74>)
 8001ed4:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001ed6:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001eda:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001edc:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001ede:	4b0c      	ldr	r3, [pc, #48]	; (8001f10 <HAL_InitTick+0x78>)
 8001ee0:	fbb0 f0f3 	udiv	r0, r0, r3
 8001ee4:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001ee6:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ee8:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001eea:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001eec:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001eee:	f004 fcbb 	bl	8006868 <HAL_TIM_Base_Init>
 8001ef2:	b920      	cbnz	r0, 8001efe <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001ef4:	4620      	mov	r0, r4
 8001ef6:	f004 fb71 	bl	80065dc <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001efa:	b009      	add	sp, #36	; 0x24
 8001efc:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001efe:	2001      	movs	r0, #1
 8001f00:	e7fb      	b.n	8001efa <HAL_InitTick+0x62>
 8001f02:	bf00      	nop
 8001f04:	40023800 	.word	0x40023800
 8001f08:	200014bc 	.word	0x200014bc
 8001f0c:	40001000 	.word	0x40001000
 8001f10:	000f4240 	.word	0x000f4240

08001f14 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f14:	4770      	bx	lr

08001f16 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f16:	e7fe      	b.n	8001f16 <HardFault_Handler>

08001f18 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f18:	e7fe      	b.n	8001f18 <MemManage_Handler>

08001f1a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f1a:	e7fe      	b.n	8001f1a <BusFault_Handler>

08001f1c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f1c:	e7fe      	b.n	8001f1c <UsageFault_Handler>

08001f1e <DebugMon_Handler>:
 8001f1e:	4770      	bx	lr

08001f20 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f20:	4801      	ldr	r0, [pc, #4]	; (8001f28 <TIM6_DAC_IRQHandler+0x8>)
 8001f22:	f004 bb99 	b.w	8006658 <HAL_TIM_IRQHandler>
 8001f26:	bf00      	nop
 8001f28:	200014bc 	.word	0x200014bc

08001f2c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f2c:	4801      	ldr	r0, [pc, #4]	; (8001f34 <LTDC_IRQHandler+0x8>)
 8001f2e:	f003 bac4 	b.w	80054ba <HAL_LTDC_IRQHandler>
 8001f32:	bf00      	nop
 8001f34:	2000138c 	.word	0x2000138c

08001f38 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f38:	4801      	ldr	r0, [pc, #4]	; (8001f40 <DMA2D_IRQHandler+0x8>)
 8001f3a:	f001 bf53 	b.w	8003de4 <HAL_DMA2D_IRQHandler>
 8001f3e:	bf00      	nop
 8001f40:	200012dc 	.word	0x200012dc

08001f44 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f44:	4801      	ldr	r0, [pc, #4]	; (8001f4c <DSI_IRQHandler+0x8>)
 8001f46:	f002 b954 	b.w	80041f2 <HAL_DSI_IRQHandler>
 8001f4a:	bf00      	nop
 8001f4c:	2000131c 	.word	0x2000131c

08001f50 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f50:	2001      	movs	r0, #1
 8001f52:	4770      	bx	lr

08001f54 <_kill>:

int _kill(int pid, int sig)
{
 8001f54:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f56:	f018 fed1 	bl	801acfc <__errno>
 8001f5a:	2316      	movs	r3, #22
 8001f5c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f5e:	f04f 30ff 	mov.w	r0, #4294967295
 8001f62:	bd08      	pop	{r3, pc}

08001f64 <_exit>:

void _exit (int status)
{
 8001f64:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f66:	f018 fec9 	bl	801acfc <__errno>
 8001f6a:	2316      	movs	r3, #22
 8001f6c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f6e:	e7fe      	b.n	8001f6e <_exit+0xa>

08001f70 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f70:	b570      	push	{r4, r5, r6, lr}
 8001f72:	460d      	mov	r5, r1
 8001f74:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f76:	460e      	mov	r6, r1
 8001f78:	1b73      	subs	r3, r6, r5
 8001f7a:	429c      	cmp	r4, r3
 8001f7c:	dc01      	bgt.n	8001f82 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f7e:	4620      	mov	r0, r4
 8001f80:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f82:	f3af 8000 	nop.w
 8001f86:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f8a:	e7f5      	b.n	8001f78 <_read+0x8>

08001f8c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f8c:	b570      	push	{r4, r5, r6, lr}
 8001f8e:	460d      	mov	r5, r1
 8001f90:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f92:	460e      	mov	r6, r1
 8001f94:	1b73      	subs	r3, r6, r5
 8001f96:	429c      	cmp	r4, r3
 8001f98:	dc01      	bgt.n	8001f9e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f9a:	4620      	mov	r0, r4
 8001f9c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f9e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001fa2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fa6:	e7f5      	b.n	8001f94 <_write+0x8>

08001fa8 <_close>:

int _close(int file)
{
	return -1;
}
 8001fa8:	f04f 30ff 	mov.w	r0, #4294967295
 8001fac:	4770      	bx	lr

08001fae <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fae:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fb2:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fb4:	2000      	movs	r0, #0
 8001fb6:	4770      	bx	lr

08001fb8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fb8:	2001      	movs	r0, #1
 8001fba:	4770      	bx	lr

08001fbc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fbc:	2000      	movs	r0, #0
 8001fbe:	4770      	bx	lr

08001fc0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fc0:	4a0a      	ldr	r2, [pc, #40]	; (8001fec <_sbrk+0x2c>)
 8001fc2:	6811      	ldr	r1, [r2, #0]
{
 8001fc4:	b508      	push	{r3, lr}
 8001fc6:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001fc8:	b909      	cbnz	r1, 8001fce <_sbrk+0xe>
		heap_end = &end;
 8001fca:	4909      	ldr	r1, [pc, #36]	; (8001ff0 <_sbrk+0x30>)
 8001fcc:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001fce:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001fd0:	4669      	mov	r1, sp
 8001fd2:	4403      	add	r3, r0
 8001fd4:	428b      	cmp	r3, r1
 8001fd6:	d906      	bls.n	8001fe6 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001fd8:	f018 fe90 	bl	801acfc <__errno>
 8001fdc:	230c      	movs	r3, #12
 8001fde:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fe0:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fe4:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001fe6:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001fe8:	e7fc      	b.n	8001fe4 <_sbrk+0x24>
 8001fea:	bf00      	nop
 8001fec:	20001504 	.word	0x20001504
 8001ff0:	2000a798 	.word	0x2000a798

08001ff4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001ff4:	4770      	bx	lr

08001ff6 <_ZN23ApplicationFontProviderD0Ev>:
 8001ff6:	b510      	push	{r4, lr}
 8001ff8:	2104      	movs	r1, #4
 8001ffa:	4604      	mov	r4, r0
 8001ffc:	f018 fe1e 	bl	801ac3c <_ZdlPvj>
 8002000:	4620      	mov	r0, r4
 8002002:	bd10      	pop	{r4, pc}

08002004 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002004:	2901      	cmp	r1, #1
{
 8002006:	b508      	push	{r3, lr}
    switch (typography)
 8002008:	d006      	beq.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800200a:	2902      	cmp	r1, #2
 800200c:	d008      	beq.n	8002020 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 800200e:	b959      	cbnz	r1, 8002028 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002010:	f000 fcb0 	bl	8002974 <_ZN17TypedTextDatabase8getFontsEv>
 8002014:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8002016:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002018:	f000 fcac 	bl	8002974 <_ZN17TypedTextDatabase8getFontsEv>
 800201c:	6840      	ldr	r0, [r0, #4]
 800201e:	e7fa      	b.n	8002016 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002020:	f000 fca8 	bl	8002974 <_ZN17TypedTextDatabase8getFontsEv>
 8002024:	6880      	ldr	r0, [r0, #8]
 8002026:	e7f6      	b.n	8002016 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002028:	2000      	movs	r0, #0
 800202a:	e7f4      	b.n	8002016 <_ZN23ApplicationFontProvider7getFontEt+0x12>

0800202c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800202c:	4800      	ldr	r0, [pc, #0]	; (8002030 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800202e:	4770      	bx	lr
 8002030:	0801c558 	.word	0x0801c558

08002034 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002034:	2002      	movs	r0, #2
 8002036:	4770      	bx	lr

08002038 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002038:	b513      	push	{r0, r1, r4, lr}
 800203a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800203c:	b151      	cbz	r1, 8002054 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800203e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002040:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002042:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002046:	aa01      	add	r2, sp, #4
 8002048:	689c      	ldr	r4, [r3, #8]
 800204a:	f10d 0303 	add.w	r3, sp, #3
 800204e:	47a0      	blx	r4
        return glyph;
    }
 8002050:	b002      	add	sp, #8
 8002052:	bd10      	pop	{r4, pc}
            return 0;
 8002054:	4608      	mov	r0, r1
 8002056:	e7fb      	b.n	8002050 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002058 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002058:	8940      	ldrh	r0, [r0, #10]
 800205a:	4770      	bx	lr

0800205c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800205c:	8980      	ldrh	r0, [r0, #12]
 800205e:	4770      	bx	lr

08002060 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002060:	8880      	ldrh	r0, [r0, #4]
 8002062:	4770      	bx	lr

08002064 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002064:	7983      	ldrb	r3, [r0, #6]
 8002066:	8880      	ldrh	r0, [r0, #4]
 8002068:	4418      	add	r0, r3
    }
 800206a:	b280      	uxth	r0, r0
 800206c:	4770      	bx	lr

0800206e <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800206e:	79c0      	ldrb	r0, [r0, #7]
    }
 8002070:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002074:	4770      	bx	lr

08002076 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002076:	79c0      	ldrb	r0, [r0, #7]
    }
 8002078:	09c0      	lsrs	r0, r0, #7
 800207a:	4770      	bx	lr

0800207c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800207c:	4770      	bx	lr

0800207e <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800207e:	b510      	push	{r4, lr}
    }
 8002080:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002082:	4604      	mov	r4, r0
    }
 8002084:	f018 fdda 	bl	801ac3c <_ZdlPvj>
 8002088:	4620      	mov	r0, r4
 800208a:	bd10      	pop	{r4, pc}

0800208c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800208c:	4770      	bx	lr

0800208e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 800208e:	4770      	bx	lr

08002090 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002090:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002094:	6808      	ldr	r0, [r1, #0]
 8002096:	6849      	ldr	r1, [r1, #4]
 8002098:	c303      	stmia	r3!, {r0, r1}
    }
 800209a:	4770      	bx	lr

0800209c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800209c:	4770      	bx	lr

0800209e <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800209e:	4770      	bx	lr

080020a0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020a0:	6041      	str	r1, [r0, #4]
    }
 80020a2:	4770      	bx	lr

080020a4 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020a4:	4770      	bx	lr
	...

080020a8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020a8:	4b06      	ldr	r3, [pc, #24]	; (80020c4 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80020aa:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80020ae:	2300      	movs	r3, #0
 80020b0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80020b4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80020b8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80020bc:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80020c0:	4770      	bx	lr
 80020c2:	bf00      	nop
 80020c4:	08002169 	.word	0x08002169

080020c8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80020c8:	2301      	movs	r3, #1
 80020ca:	7203      	strb	r3, [r0, #8]
    }
 80020cc:	4770      	bx	lr

080020ce <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80020ce:	4770      	bx	lr

080020d0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80020d0:	4770      	bx	lr

080020d2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80020d2:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80020d4:	68c2      	ldr	r2, [r0, #12]
 80020d6:	6841      	ldr	r1, [r0, #4]
 80020d8:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80020da:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80020dc:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80020e0:	07d2      	lsls	r2, r2, #31
 80020e2:	bf48      	it	mi
 80020e4:	590a      	ldrmi	r2, [r1, r4]
 80020e6:	689b      	ldr	r3, [r3, #8]
    }
 80020e8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80020ec:	bf48      	it	mi
 80020ee:	58d3      	ldrmi	r3, [r2, r3]
 80020f0:	4718      	bx	r3

080020f2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80020f2:	6843      	ldr	r3, [r0, #4]
 80020f4:	b12b      	cbz	r3, 8002102 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80020f6:	6883      	ldr	r3, [r0, #8]
 80020f8:	b92b      	cbnz	r3, 8002106 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80020fa:	68c0      	ldr	r0, [r0, #12]
 80020fc:	f000 0001 	and.w	r0, r0, #1
 8002100:	4770      	bx	lr
 8002102:	4618      	mov	r0, r3
 8002104:	4770      	bx	lr
 8002106:	2001      	movs	r0, #1
    }
 8002108:	4770      	bx	lr

0800210a <_ZN8touchgfx12NoTransitionD0Ev>:
 800210a:	b510      	push	{r4, lr}
 800210c:	210c      	movs	r1, #12
 800210e:	4604      	mov	r4, r0
 8002110:	f018 fd94 	bl	801ac3c <_ZdlPvj>
 8002114:	4620      	mov	r0, r4
 8002116:	bd10      	pop	{r4, pc}

08002118 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002118:	b510      	push	{r4, lr}
 800211a:	2110      	movs	r1, #16
 800211c:	4604      	mov	r4, r0
 800211e:	f018 fd8d 	bl	801ac3c <_ZdlPvj>
 8002122:	4620      	mov	r0, r4
 8002124:	bd10      	pop	{r4, pc}

08002126 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002126:	b510      	push	{r4, lr}
 8002128:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800212c:	4604      	mov	r4, r0
 800212e:	f018 fd85 	bl	801ac3c <_ZdlPvj>
 8002132:	4620      	mov	r0, r4
 8002134:	bd10      	pop	{r4, pc}

08002136 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002136:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8002138:	f009 ffe8 	bl	800c10c <_ZN8touchgfx11Application11getInstanceEv>
    }
 800213c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8002140:	f00a bbac 	b.w	800c89c <_ZN8touchgfx11Application10invalidateEv>

08002144 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002144:	b510      	push	{r4, lr}
 8002146:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002148:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 800214c:	b158      	cbz	r0, 8002166 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800214e:	6803      	ldr	r3, [r0, #0]
 8002150:	68db      	ldr	r3, [r3, #12]
 8002152:	4798      	blx	r3
 8002154:	b138      	cbz	r0, 8002166 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002156:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800215a:	6803      	ldr	r3, [r0, #0]
 800215c:	689b      	ldr	r3, [r3, #8]
 800215e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002160:	2300      	movs	r3, #0
 8002162:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002166:	bd10      	pop	{r4, pc}

08002168 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002168:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800216c:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002170:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002172:	68a8      	ldr	r0, [r5, #8]
 8002174:	6803      	ldr	r3, [r0, #0]
 8002176:	6a1b      	ldr	r3, [r3, #32]
 8002178:	4798      	blx	r3
 800217a:	28ef      	cmp	r0, #239	; 0xef
 800217c:	d805      	bhi.n	800218a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x22>
 800217e:	4b45      	ldr	r3, [pc, #276]	; (8002294 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002180:	4a45      	ldr	r2, [pc, #276]	; (8002298 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002182:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002184:	4845      	ldr	r0, [pc, #276]	; (800229c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002186:	f018 fd87 	bl	801ac98 <__assert_func>
 800218a:	6868      	ldr	r0, [r5, #4]
 800218c:	6803      	ldr	r3, [r0, #0]
 800218e:	6a1b      	ldr	r3, [r3, #32]
 8002190:	4798      	blx	r3
 8002192:	280f      	cmp	r0, #15
 8002194:	d803      	bhi.n	800219e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x36>
 8002196:	4b42      	ldr	r3, [pc, #264]	; (80022a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002198:	4a3f      	ldr	r2, [pc, #252]	; (8002298 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800219a:	21a4      	movs	r1, #164	; 0xa4
 800219c:	e7f2      	b.n	8002184 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800219e:	68e8      	ldr	r0, [r5, #12]
 80021a0:	6803      	ldr	r3, [r0, #0]
 80021a2:	6a1b      	ldr	r3, [r3, #32]
 80021a4:	4798      	blx	r3
 80021a6:	280b      	cmp	r0, #11
 80021a8:	d803      	bhi.n	80021b2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4a>
 80021aa:	4b3e      	ldr	r3, [pc, #248]	; (80022a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80021ac:	4a3a      	ldr	r2, [pc, #232]	; (8002298 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80021ae:	21a5      	movs	r1, #165	; 0xa5
 80021b0:	e7e8      	b.n	8002184 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1c>
    if (*currentTrans)
 80021b2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80022ac <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
    Application::getInstance()->clearAllTimerWidgets();
 80021b6:	f009 ffa9 	bl	800c10c <_ZN8touchgfx11Application11getInstanceEv>
 80021ba:	f009 ffad 	bl	800c118 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80021be:	f8d9 0000 	ldr.w	r0, [r9]
 80021c2:	b110      	cbz	r0, 80021ca <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x62>
        (*currentTrans)->tearDown();
 80021c4:	6803      	ldr	r3, [r0, #0]
 80021c6:	68db      	ldr	r3, [r3, #12]
 80021c8:	4798      	blx	r3
    if (*currentTrans)
 80021ca:	f8d9 0000 	ldr.w	r0, [r9]
 80021ce:	b110      	cbz	r0, 80021d6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x6e>
        (*currentTrans)->~Transition();
 80021d0:	6803      	ldr	r3, [r0, #0]
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	4798      	blx	r3
    if (*currentScreen)
 80021d6:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80022b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
 80021da:	f8d8 0000 	ldr.w	r0, [r8]
 80021de:	b110      	cbz	r0, 80021e6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x7e>
        (*currentScreen)->tearDownScreen();
 80021e0:	6803      	ldr	r3, [r0, #0]
 80021e2:	695b      	ldr	r3, [r3, #20]
 80021e4:	4798      	blx	r3
    if (*currentPresenter)
 80021e6:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80021ea:	b110      	cbz	r0, 80021f2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8a>
        (*currentPresenter)->deactivate();
 80021ec:	6803      	ldr	r3, [r0, #0]
 80021ee:	685b      	ldr	r3, [r3, #4]
 80021f0:	4798      	blx	r3
    if (*currentScreen)
 80021f2:	f8d8 0000 	ldr.w	r0, [r8]
 80021f6:	b110      	cbz	r0, 80021fe <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x96>
        (*currentScreen)->~Screen();
 80021f8:	6803      	ldr	r3, [r0, #0]
 80021fa:	681b      	ldr	r3, [r3, #0]
 80021fc:	4798      	blx	r3
    if (*currentPresenter)
 80021fe:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002202:	b110      	cbz	r0, 800220a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa2>
        (*currentPresenter)->~Presenter();
 8002204:	6803      	ldr	r3, [r0, #0]
 8002206:	689b      	ldr	r3, [r3, #8]
 8002208:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800220a:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800220c:	6803      	ldr	r3, [r0, #0]
 800220e:	2100      	movs	r1, #0
 8002210:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002212:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002214:	f04f 0b00 	mov.w	fp, #0
 8002218:	4b23      	ldr	r3, [pc, #140]	; (80022a8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800221a:	6003      	str	r3, [r0, #0]
 800221c:	4604      	mov	r4, r0
 800221e:	f8c0 b004 	str.w	fp, [r0, #4]
 8002222:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002226:	68a8      	ldr	r0, [r5, #8]
 8002228:	6803      	ldr	r3, [r0, #0]
 800222a:	4659      	mov	r1, fp
 800222c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800222e:	4798      	blx	r3
 8002230:	4606      	mov	r6, r0
 8002232:	f000 fc07 	bl	8002a44 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002236:	6868      	ldr	r0, [r5, #4]
 8002238:	6803      	ldr	r3, [r0, #0]
 800223a:	4659      	mov	r1, fp
 800223c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800223e:	4798      	blx	r3
 8002240:	4631      	mov	r1, r6
 8002242:	4605      	mov	r5, r0
 8002244:	f000 fbd8 	bl	80029f8 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002248:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800224c:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002250:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002254:	b1e5      	cbz	r5, 8002290 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x128>
 8002256:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002258:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800225c:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800225e:	f8c5 a008 	str.w	sl, [r5, #8]
 8002262:	4630      	mov	r0, r6
 8002264:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002266:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002268:	4798      	blx	r3
    newPresenter->activate();
 800226a:	682b      	ldr	r3, [r5, #0]
 800226c:	4628      	mov	r0, r5
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002272:	4621      	mov	r1, r4
 8002274:	4630      	mov	r0, r6
 8002276:	f00b fb23 	bl	800d8c0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800227a:	6823      	ldr	r3, [r4, #0]
 800227c:	4620      	mov	r0, r4
 800227e:	691b      	ldr	r3, [r3, #16]
 8002280:	4798      	blx	r3
    newTransition->invalidate();
 8002282:	6823      	ldr	r3, [r4, #0]
 8002284:	695b      	ldr	r3, [r3, #20]
 8002286:	4620      	mov	r0, r4
}
 8002288:	b001      	add	sp, #4
 800228a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800228e:	4718      	bx	r3
    model->bind(newPresenter);
 8002290:	462b      	mov	r3, r5
 8002292:	e7e1      	b.n	8002258 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf0>
 8002294:	0801c590 	.word	0x0801c590
 8002298:	0801c61e 	.word	0x0801c61e
 800229c:	0801c722 	.word	0x0801c722
 80022a0:	0801c769 	.word	0x0801c769
 80022a4:	0801c80c 	.word	0x0801c80c
 80022a8:	0801c91c 	.word	0x0801c91c
 80022ac:	2000a530 	.word	0x2000a530
 80022b0:	2000a52c 	.word	0x2000a52c

080022b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80022b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80022b6:	4604      	mov	r4, r0
 80022b8:	4617      	mov	r7, r2
 80022ba:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80022bc:	f009 ff46 	bl	800c14c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80022c0:	4b10      	ldr	r3, [pc, #64]	; (8002304 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80022c2:	2500      	movs	r5, #0
      model(m)
 80022c4:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 80022c8:	4e0f      	ldr	r6, [pc, #60]	; (8002308 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 80022ca:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 80022cc:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80022d0:	4b0e      	ldr	r3, [pc, #56]	; (800230c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80022d2:	6830      	ldr	r0, [r6, #0]
 80022d4:	6023      	str	r3, [r4, #0]
 80022d6:	4b0e      	ldr	r3, [pc, #56]	; (8002310 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80022d8:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80022dc:	6803      	ldr	r3, [r0, #0]
 80022de:	4629      	mov	r1, r5
 80022e0:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80022e2:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 80022e6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80022e8:	4628      	mov	r0, r5
 80022ea:	f000 faf7 	bl	80028dc <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80022ee:	6833      	ldr	r3, [r6, #0]
 80022f0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80022f4:	b10a      	cbz	r2, 80022fa <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 80022f6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80022f8:	b900      	cbnz	r0, 80022fc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 80022fa:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80022fc:	f011 fb4d 	bl	801399a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002300:	4620      	mov	r0, r4
 8002302:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002304:	2000a53c 	.word	0x2000a53c
 8002308:	2000a4f0 	.word	0x2000a4f0
 800230c:	0801c8d0 	.word	0x0801c8d0
 8002310:	0801c8b8 	.word	0x0801c8b8

08002314 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002314:	4b06      	ldr	r3, [pc, #24]	; (8002330 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002316:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800231a:	2300      	movs	r3, #0
 800231c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002320:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002324:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002328:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800232c:	4770      	bx	lr
 800232e:	bf00      	nop
 8002330:	08002169 	.word	0x08002169

08002334 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002334:	6a00      	ldr	r0, [r0, #32]
 8002336:	4770      	bx	lr

08002338 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002338:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800233a:	4770      	bx	lr

0800233c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800233c:	4770      	bx	lr

0800233e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800233e:	888b      	ldrh	r3, [r1, #4]
 8002340:	6980      	ldr	r0, [r0, #24]
 8002342:	680a      	ldr	r2, [r1, #0]
 8002344:	0adb      	lsrs	r3, r3, #11
 8002346:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800234a:	4410      	add	r0, r2
 800234c:	4770      	bx	lr

0800234e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800234e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002350:	b1c2      	cbz	r2, 8002384 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002352:	7b13      	ldrb	r3, [r2, #12]
 8002354:	b1b3      	cbz	r3, 8002384 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002356:	7b54      	ldrb	r4, [r2, #13]
 8002358:	7ad2      	ldrb	r2, [r2, #11]
 800235a:	0224      	lsls	r4, r4, #8
 800235c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002360:	4314      	orrs	r4, r2
 8002362:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002364:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002366:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800236a:	8813      	ldrh	r3, [r2, #0]
 800236c:	428b      	cmp	r3, r1
 800236e:	d102      	bne.n	8002376 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002370:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002374:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002376:	d805      	bhi.n	8002384 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002378:	3801      	subs	r0, #1
 800237a:	b280      	uxth	r0, r0
 800237c:	3204      	adds	r2, #4
 800237e:	2800      	cmp	r0, #0
 8002380:	d1f3      	bne.n	800236a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002382:	e7f7      	b.n	8002374 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002384:	2000      	movs	r0, #0
 8002386:	e7f5      	b.n	8002374 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002388 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002388:	b510      	push	{r4, lr}
 800238a:	2128      	movs	r1, #40	; 0x28
 800238c:	4604      	mov	r4, r0
 800238e:	f018 fc55 	bl	801ac3c <_ZdlPvj>
 8002392:	4620      	mov	r0, r4
 8002394:	bd10      	pop	{r4, pc}
	...

08002398 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002398:	b530      	push	{r4, r5, lr}
 800239a:	b089      	sub	sp, #36	; 0x24
 800239c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800239e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80023a2:	9506      	str	r5, [sp, #24]
 80023a4:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80023a8:	9505      	str	r5, [sp, #20]
 80023aa:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80023ae:	9504      	str	r5, [sp, #16]
 80023b0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80023b4:	9503      	str	r5, [sp, #12]
 80023b6:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80023ba:	9502      	str	r5, [sp, #8]
 80023bc:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80023c0:	9501      	str	r5, [sp, #4]
 80023c2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80023c6:	9500      	str	r5, [sp, #0]
 80023c8:	f00a feda 	bl	800d180 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80023cc:	4b06      	ldr	r3, [pc, #24]	; (80023e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 80023ce:	6023      	str	r3, [r4, #0]
 80023d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80023d2:	61a3      	str	r3, [r4, #24]
 80023d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80023d6:	61e3      	str	r3, [r4, #28]
 80023d8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80023da:	6223      	str	r3, [r4, #32]
 80023dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80023de:	6263      	str	r3, [r4, #36]	; 0x24
}
 80023e0:	4620      	mov	r0, r4
 80023e2:	b009      	add	sp, #36	; 0x24
 80023e4:	bd30      	pop	{r4, r5, pc}
 80023e6:	bf00      	nop
 80023e8:	0801c940 	.word	0x0801c940

080023ec <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80023ec:	2000      	movs	r0, #0
 80023ee:	4770      	bx	lr

080023f0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80023f0:	8081      	strh	r1, [r0, #4]
    }
 80023f2:	4770      	bx	lr

080023f4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80023f4:	80c1      	strh	r1, [r0, #6]
    }
 80023f6:	4770      	bx	lr

080023f8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80023f8:	8101      	strh	r1, [r0, #8]
    }
 80023fa:	4770      	bx	lr

080023fc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80023fc:	8141      	strh	r1, [r0, #10]
    }
 80023fe:	4770      	bx	lr

08002400 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002400:	4770      	bx	lr

08002402 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 8002402:	4770      	bx	lr

08002404 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 8002404:	4770      	bx	lr

08002406 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 8002406:	4770      	bx	lr

08002408 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002408:	4770      	bx	lr

0800240a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800240a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800240c:	88c4      	ldrh	r4, [r0, #6]
 800240e:	6803      	ldr	r3, [r0, #0]
 8002410:	1b12      	subs	r2, r2, r4
 8002412:	8884      	ldrh	r4, [r0, #4]
 8002414:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002416:	1b09      	subs	r1, r1, r4
 8002418:	b212      	sxth	r2, r2
    }
 800241a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800241e:	b209      	sxth	r1, r1
 8002420:	4718      	bx	r3

08002422 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002422:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002426:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002428:	f04f 33ff 	mov.w	r3, #4294967295
 800242c:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800242e:	6813      	ldr	r3, [r2, #0]
 8002430:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002432:	6010      	str	r0, [r2, #0]
    }
 8002434:	4770      	bx	lr

08002436 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002436:	4770      	bx	lr

08002438 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002438:	4770      	bx	lr

0800243a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800243a:	4770      	bx	lr

0800243c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800243c:	4770      	bx	lr

0800243e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 800243e:	4770      	bx	lr

08002440 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002440:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002444:	b11a      	cbz	r2, 800244e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002446:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800244a:	b102      	cbz	r2, 800244e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800244c:	6018      	str	r0, [r3, #0]
        }
    }
 800244e:	4770      	bx	lr

08002450 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002450:	4770      	bx	lr

08002452 <_ZN15Screen1ViewBase3LedEv>:
     * Virtual Action Handlers
     */
    virtual void Led()
    {
        // Override and implement this function in Screen1
    }
 8002452:	4770      	bx	lr

08002454 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002454:	4770      	bx	lr

08002456 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002456:	4770      	bx	lr

08002458 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002458:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800245a:	68c2      	ldr	r2, [r0, #12]
 800245c:	6844      	ldr	r4, [r0, #4]
 800245e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002460:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002462:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002466:	07d2      	lsls	r2, r2, #31
 8002468:	bf48      	it	mi
 800246a:	5962      	ldrmi	r2, [r4, r5]
 800246c:	689b      	ldr	r3, [r3, #8]
    }
 800246e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002470:	bf48      	it	mi
 8002472:	58d3      	ldrmi	r3, [r2, r3]
 8002474:	4718      	bx	r3

08002476 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002476:	6843      	ldr	r3, [r0, #4]
 8002478:	b12b      	cbz	r3, 8002486 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800247a:	6883      	ldr	r3, [r0, #8]
 800247c:	b92b      	cbnz	r3, 800248a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800247e:	68c0      	ldr	r0, [r0, #12]
 8002480:	f000 0001 	and.w	r0, r0, #1
 8002484:	4770      	bx	lr
 8002486:	4618      	mov	r0, r3
 8002488:	4770      	bx	lr
 800248a:	2001      	movs	r0, #1
    }
 800248c:	4770      	bx	lr

0800248e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800248e:	b510      	push	{r4, lr}
 8002490:	2110      	movs	r1, #16
 8002492:	4604      	mov	r4, r0
 8002494:	f018 fbd2 	bl	801ac3c <_ZdlPvj>
 8002498:	4620      	mov	r0, r4
 800249a:	bd10      	pop	{r4, pc}

0800249c <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 800249c:	b510      	push	{r4, lr}
 800249e:	21f0      	movs	r1, #240	; 0xf0
 80024a0:	4604      	mov	r4, r0
 80024a2:	f018 fbcb 	bl	801ac3c <_ZdlPvj>
 80024a6:	4620      	mov	r0, r4
 80024a8:	bd10      	pop	{r4, pc}

080024aa <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
 80024aa:	f100 0298 	add.w	r2, r0, #152	; 0x98
 80024ae:	428a      	cmp	r2, r1
 80024b0:	d102      	bne.n	80024b8 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Interaction1
        //When buttonWithLabel1 clicked call virtual function
        //Call Led
        Led();
 80024b2:	6803      	ldr	r3, [r0, #0]
 80024b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80024b6:	4718      	bx	r3
    }
}
 80024b8:	4770      	bx	lr

080024ba <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80024ba:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80024bc:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80024be:	4604      	mov	r4, r0
        setX(x);
 80024c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80024c2:	4615      	mov	r5, r2
        setX(x);
 80024c4:	4798      	blx	r3
        setY(y);
 80024c6:	6823      	ldr	r3, [r4, #0]
 80024c8:	4629      	mov	r1, r5
 80024ca:	4620      	mov	r0, r4
 80024cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80024ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80024d2:	4718      	bx	r3

080024d4 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80024d4:	b570      	push	{r4, r5, r6, lr}
 80024d6:	4604      	mov	r4, r0
 80024d8:	461d      	mov	r5, r3
 80024da:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80024de:	f7ff ffec 	bl	80024ba <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80024e2:	6823      	ldr	r3, [r4, #0]
 80024e4:	4629      	mov	r1, r5
 80024e6:	4620      	mov	r0, r4
 80024e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80024ea:	4798      	blx	r3
        setHeight(height);
 80024ec:	6823      	ldr	r3, [r4, #0]
 80024ee:	4631      	mov	r1, r6
 80024f0:	4620      	mov	r0, r4
 80024f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80024f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80024f8:	4718      	bx	r3
	...

080024fc <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80024fc:	4a09      	ldr	r2, [pc, #36]	; (8002524 <_ZN8touchgfx3BoxC1Ev+0x28>)
 80024fe:	6002      	str	r2, [r0, #0]
          visible(true)
 8002500:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002504:	2200      	movs	r2, #0
 8002506:	8481      	strh	r1, [r0, #36]	; 0x24
 8002508:	21ff      	movs	r1, #255	; 0xff
 800250a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800250e:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8002512:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002516:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800251a:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 800251e:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 8002520:	4770      	bx	lr
 8002522:	bf00      	nop
 8002524:	0801da28 	.word	0x0801da28

08002528 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002528:	4b1b      	ldr	r3, [pc, #108]	; (8002598 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800252a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 800252c:	881b      	ldrh	r3, [r3, #0]
 800252e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002530:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002532:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002534:	d92b      	bls.n	800258e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002536:	4b19      	ldr	r3, [pc, #100]	; (800259c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002538:	681b      	ldr	r3, [r3, #0]
 800253a:	b92b      	cbnz	r3, 8002548 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800253c:	4b18      	ldr	r3, [pc, #96]	; (80025a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800253e:	4a19      	ldr	r2, [pc, #100]	; (80025a4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002540:	4819      	ldr	r0, [pc, #100]	; (80025a8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002542:	21ae      	movs	r1, #174	; 0xae
 8002544:	f018 fba8 	bl	801ac98 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002548:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800254c:	4b17      	ldr	r3, [pc, #92]	; (80025ac <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 800254e:	681b      	ldr	r3, [r3, #0]
 8002550:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002554:	4b16      	ldr	r3, [pc, #88]	; (80025b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002556:	6818      	ldr	r0, [r3, #0]
 8002558:	f000 f9fc 	bl	8002954 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800255c:	682b      	ldr	r3, [r5, #0]
 800255e:	9001      	str	r0, [sp, #4]
 8002560:	4601      	mov	r1, r0
 8002562:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002564:	4628      	mov	r0, r5
 8002566:	4798      	blx	r3
 8002568:	682b      	ldr	r3, [r5, #0]
 800256a:	9901      	ldr	r1, [sp, #4]
 800256c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800256e:	4604      	mov	r4, r0
 8002570:	4628      	mov	r0, r5
 8002572:	4798      	blx	r3
 8002574:	682b      	ldr	r3, [r5, #0]
 8002576:	9901      	ldr	r1, [sp, #4]
 8002578:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800257a:	fb14 f400 	smulbb	r4, r4, r0
 800257e:	4628      	mov	r0, r5
 8002580:	4798      	blx	r3
 8002582:	b2e4      	uxtb	r4, r4
 8002584:	4404      	add	r4, r0
 8002586:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800258a:	b002      	add	sp, #8
 800258c:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 800258e:	2300      	movs	r3, #0
 8002590:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002594:	e7f9      	b.n	800258a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002596:	bf00      	nop
 8002598:	2000a544 	.word	0x2000a544
 800259c:	2000a540 	.word	0x2000a540
 80025a0:	0801c990 	.word	0x0801c990
 80025a4:	0801c9d2 	.word	0x0801c9d2
 80025a8:	0801ca00 	.word	0x0801ca00
 80025ac:	2000a548 	.word	0x2000a548
 80025b0:	2000a54c 	.word	0x2000a54c

080025b4 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 80025b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80025b8:	4604      	mov	r4, r0
 80025ba:	b087      	sub	sp, #28
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 80025bc:	4627      	mov	r7, r4
        : presenter(0)
 80025be:	2500      	movs	r5, #0
 80025c0:	f00a ffd2 	bl	800d568 <_ZN8touchgfx6ScreenC1Ev>
 80025c4:	4b2f      	ldr	r3, [pc, #188]	; (8002684 <_ZN15Screen1ViewBaseC1Ev+0xd0>)
 80025c6:	63e5      	str	r5, [r4, #60]	; 0x3c
 80025c8:	f847 3b40 	str.w	r3, [r7], #64
 80025cc:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80025d0:	4638      	mov	r0, r7
 80025d2:	f7ff ff93 	bl	80024fc <_ZN8touchgfx3BoxC1Ev>
 80025d6:	f104 0698 	add.w	r6, r4, #152	; 0x98
 80025da:	4640      	mov	r0, r8
 80025dc:	f7ff ff8e 	bl	80024fc <_ZN8touchgfx3BoxC1Ev>
 80025e0:	4630      	mov	r0, r6
 80025e2:	f008 f889 	bl	800a6f8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pobject), pmemfun_1(pmemfun_1)
 80025e6:	4b28      	ldr	r3, [pc, #160]	; (8002688 <_ZN15Screen1ViewBaseC1Ev+0xd4>)
 80025e8:	e9c4 3438 	strd	r3, r4, [r4, #224]	; 0xe0
 80025ec:	4b27      	ldr	r3, [pc, #156]	; (800268c <_ZN15Screen1ViewBaseC1Ev+0xd8>)
    __background.setPosition(0, 0, 800, 480);
 80025ee:	f44f 79f0 	mov.w	r9, #480	; 0x1e0
 80025f2:	e9c4 353a 	strd	r3, r5, [r4, #232]	; 0xe8
 80025f6:	462a      	mov	r2, r5
 80025f8:	4629      	mov	r1, r5
 80025fa:	4638      	mov	r0, r7
 80025fc:	f8cd 9000 	str.w	r9, [sp]
 8002600:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002604:	f7ff ff66 	bl	80024d4 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002608:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800260c:	66a3      	str	r3, [r4, #104]	; 0x68
    box1.setPosition(0, 0, 800, 480);
 800260e:	462a      	mov	r2, r5
 8002610:	4629      	mov	r1, r5
 8002612:	4640      	mov	r0, r8
 8002614:	f8cd 9000 	str.w	r9, [sp]
 8002618:	f44f 7348 	mov.w	r3, #800	; 0x320
 800261c:	f7ff ff5a 	bl	80024d4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002620:	4b1b      	ldr	r3, [pc, #108]	; (8002690 <_ZN15Screen1ViewBaseC1Ev+0xdc>)
 8002622:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
    buttonWithLabel1.setXY(315, 210);
 8002626:	4630      	mov	r0, r6
 8002628:	22d2      	movs	r2, #210	; 0xd2
 800262a:	f240 113b 	movw	r1, #315	; 0x13b
 800262e:	f7ff ff44 	bl	80024ba <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8002632:	aa05      	add	r2, sp, #20
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002634:	2301      	movs	r3, #1
 8002636:	a904      	add	r1, sp, #16
 8002638:	4630      	mov	r0, r6
 800263a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800263e:	f8ad 5010 	strh.w	r5, [sp, #16]
 8002642:	f007 feb2 	bl	800a3aa <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002646:	4630      	mov	r0, r6
class TypedText
 8002648:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
 800264c:	f7ff ff6c 	bl	8002528 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8002650:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8002654:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel1.setAction(buttonCallback);
 8002658:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 800265c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002660:	1d20      	adds	r0, r4, #4
 8002662:	4639      	mov	r1, r7
 8002664:	9003      	str	r0, [sp, #12]
 8002666:	f006 fc07 	bl	8008e78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800266a:	9803      	ldr	r0, [sp, #12]
 800266c:	4641      	mov	r1, r8
 800266e:	f006 fc03 	bl	8008e78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002672:	9803      	ldr	r0, [sp, #12]
 8002674:	4631      	mov	r1, r6
 8002676:	f006 fbff 	bl	8008e78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800267a:	4620      	mov	r0, r4
 800267c:	b007      	add	sp, #28
 800267e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002682:	bf00      	nop
 8002684:	0801ca68 	.word	0x0801ca68
 8002688:	0801ca50 	.word	0x0801ca50
 800268c:	080024ab 	.word	0x080024ab
 8002690:	ff304d63 	.word	0xff304d63

08002694 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002694:	4770      	bx	lr
	...

08002698 <_Z23getFont_verdana_10_4bppv>:
{
 8002698:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800269a:	4d15      	ldr	r5, [pc, #84]	; (80026f0 <_Z23getFont_verdana_10_4bppv+0x58>)
 800269c:	782c      	ldrb	r4, [r5, #0]
 800269e:	f3bf 8f5b 	dmb	ish
 80026a2:	f014 0401 	ands.w	r4, r4, #1
{
 80026a6:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80026a8:	d11e      	bne.n	80026e8 <_Z23getFont_verdana_10_4bppv+0x50>
 80026aa:	4628      	mov	r0, r5
 80026ac:	f018 fac8 	bl	801ac40 <__cxa_guard_acquire>
 80026b0:	b1d0      	cbz	r0, 80026e8 <_Z23getFont_verdana_10_4bppv+0x50>
 80026b2:	233f      	movs	r3, #63	; 0x3f
 80026b4:	9307      	str	r3, [sp, #28]
 80026b6:	4b0f      	ldr	r3, [pc, #60]	; (80026f4 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80026b8:	9306      	str	r3, [sp, #24]
 80026ba:	4b0f      	ldr	r3, [pc, #60]	; (80026f8 <_Z23getFont_verdana_10_4bppv+0x60>)
 80026bc:	490f      	ldr	r1, [pc, #60]	; (80026fc <_Z23getFont_verdana_10_4bppv+0x64>)
 80026be:	4810      	ldr	r0, [pc, #64]	; (8002700 <_Z23getFont_verdana_10_4bppv+0x68>)
 80026c0:	9408      	str	r4, [sp, #32]
 80026c2:	2201      	movs	r2, #1
 80026c4:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80026c8:	2304      	movs	r3, #4
 80026ca:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80026ce:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80026d2:	230a      	movs	r3, #10
 80026d4:	9403      	str	r4, [sp, #12]
 80026d6:	9400      	str	r4, [sp, #0]
 80026d8:	f7ff fe5e 	bl	8002398 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80026dc:	4809      	ldr	r0, [pc, #36]	; (8002704 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80026de:	f018 faf9 	bl	801acd4 <atexit>
 80026e2:	4628      	mov	r0, r5
 80026e4:	f018 fab8 	bl	801ac58 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80026e8:	4805      	ldr	r0, [pc, #20]	; (8002700 <_Z23getFont_verdana_10_4bppv+0x68>)
 80026ea:	b00d      	add	sp, #52	; 0x34
 80026ec:	bd30      	pop	{r4, r5, pc}
 80026ee:	bf00      	nop
 80026f0:	20001508 	.word	0x20001508
 80026f4:	0801f3d4 	.word	0x0801f3d4
 80026f8:	0801f3e0 	.word	0x0801f3e0
 80026fc:	90014140 	.word	0x90014140
 8002700:	2000150c 	.word	0x2000150c
 8002704:	08002695 	.word	0x08002695

08002708 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 4, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002708:	4770      	bx	lr
	...

0800270c <_Z23getFont_verdana_20_4bppv>:
{
 800270c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 4, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800270e:	4d15      	ldr	r5, [pc, #84]	; (8002764 <_Z23getFont_verdana_20_4bppv+0x58>)
 8002710:	782c      	ldrb	r4, [r5, #0]
 8002712:	f3bf 8f5b 	dmb	ish
 8002716:	f014 0401 	ands.w	r4, r4, #1
{
 800271a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 4, 20, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800271c:	d11e      	bne.n	800275c <_Z23getFont_verdana_20_4bppv+0x50>
 800271e:	4628      	mov	r0, r5
 8002720:	f018 fa8e 	bl	801ac40 <__cxa_guard_acquire>
 8002724:	b1d0      	cbz	r0, 800275c <_Z23getFont_verdana_20_4bppv+0x50>
 8002726:	233f      	movs	r3, #63	; 0x3f
 8002728:	9307      	str	r3, [sp, #28]
 800272a:	4b0f      	ldr	r3, [pc, #60]	; (8002768 <_Z23getFont_verdana_20_4bppv+0x5c>)
 800272c:	9306      	str	r3, [sp, #24]
 800272e:	4b0f      	ldr	r3, [pc, #60]	; (800276c <_Z23getFont_verdana_20_4bppv+0x60>)
 8002730:	9305      	str	r3, [sp, #20]
 8002732:	2204      	movs	r2, #4
 8002734:	2301      	movs	r3, #1
 8002736:	e9cd 4303 	strd	r4, r3, [sp, #12]
 800273a:	e9cd 4200 	strd	r4, r2, [sp]
 800273e:	490c      	ldr	r1, [pc, #48]	; (8002770 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002740:	9302      	str	r3, [sp, #8]
 8002742:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002746:	2314      	movs	r3, #20
 8002748:	480a      	ldr	r0, [pc, #40]	; (8002774 <_Z23getFont_verdana_20_4bppv+0x68>)
 800274a:	9408      	str	r4, [sp, #32]
 800274c:	f7ff fe24 	bl	8002398 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002750:	4809      	ldr	r0, [pc, #36]	; (8002778 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002752:	f018 fabf 	bl	801acd4 <atexit>
 8002756:	4628      	mov	r0, r5
 8002758:	f018 fa7e 	bl	801ac58 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 800275c:	4805      	ldr	r0, [pc, #20]	; (8002774 <_Z23getFont_verdana_20_4bppv+0x68>)
 800275e:	b00d      	add	sp, #52	; 0x34
 8002760:	bd30      	pop	{r4, r5, pc}
 8002762:	bf00      	nop
 8002764:	20001534 	.word	0x20001534
 8002768:	0801f3d8 	.word	0x0801f3d8
 800276c:	0801f3e4 	.word	0x0801f3e4
 8002770:	90014150 	.word	0x90014150
 8002774:	20001538 	.word	0x20001538
 8002778:	08002709 	.word	0x08002709

0800277c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800277c:	4770      	bx	lr
	...

08002780 <_Z23getFont_verdana_40_4bppv>:
{
 8002780:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002782:	4d15      	ldr	r5, [pc, #84]	; (80027d8 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002784:	782c      	ldrb	r4, [r5, #0]
 8002786:	f3bf 8f5b 	dmb	ish
 800278a:	f014 0401 	ands.w	r4, r4, #1
{
 800278e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002790:	d11e      	bne.n	80027d0 <_Z23getFont_verdana_40_4bppv+0x50>
 8002792:	4628      	mov	r0, r5
 8002794:	f018 fa54 	bl	801ac40 <__cxa_guard_acquire>
 8002798:	b1d0      	cbz	r0, 80027d0 <_Z23getFont_verdana_40_4bppv+0x50>
 800279a:	233f      	movs	r3, #63	; 0x3f
 800279c:	9307      	str	r3, [sp, #28]
 800279e:	4b0f      	ldr	r3, [pc, #60]	; (80027dc <_Z23getFont_verdana_40_4bppv+0x5c>)
 80027a0:	9306      	str	r3, [sp, #24]
 80027a2:	4b0f      	ldr	r3, [pc, #60]	; (80027e0 <_Z23getFont_verdana_40_4bppv+0x60>)
 80027a4:	490f      	ldr	r1, [pc, #60]	; (80027e4 <_Z23getFont_verdana_40_4bppv+0x64>)
 80027a6:	4810      	ldr	r0, [pc, #64]	; (80027e8 <_Z23getFont_verdana_40_4bppv+0x68>)
 80027a8:	9408      	str	r4, [sp, #32]
 80027aa:	2201      	movs	r2, #1
 80027ac:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80027b0:	2304      	movs	r3, #4
 80027b2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80027b6:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80027ba:	2328      	movs	r3, #40	; 0x28
 80027bc:	9403      	str	r4, [sp, #12]
 80027be:	9400      	str	r4, [sp, #0]
 80027c0:	f7ff fdea 	bl	8002398 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80027c4:	4809      	ldr	r0, [pc, #36]	; (80027ec <_Z23getFont_verdana_40_4bppv+0x6c>)
 80027c6:	f018 fa85 	bl	801acd4 <atexit>
 80027ca:	4628      	mov	r0, r5
 80027cc:	f018 fa44 	bl	801ac58 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80027d0:	4805      	ldr	r0, [pc, #20]	; (80027e8 <_Z23getFont_verdana_40_4bppv+0x68>)
 80027d2:	b00d      	add	sp, #52	; 0x34
 80027d4:	bd30      	pop	{r4, r5, pc}
 80027d6:	bf00      	nop
 80027d8:	20001560 	.word	0x20001560
 80027dc:	0801f3dc 	.word	0x0801f3dc
 80027e0:	0801f3e8 	.word	0x0801f3e8
 80027e4:	90014188 	.word	0x90014188
 80027e8:	20001564 	.word	0x20001564
 80027ec:	0800277d 	.word	0x0800277d

080027f0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80027f0:	2000      	movs	r0, #0
 80027f2:	4770      	bx	lr

080027f4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80027f4:	2000      	movs	r0, #0
 80027f6:	4770      	bx	lr

080027f8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80027f8:	b40e      	push	{r1, r2, r3}
 80027fa:	b503      	push	{r0, r1, lr}
 80027fc:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80027fe:	2100      	movs	r1, #0
{
 8002800:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002804:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002806:	f00a faed 	bl	800cde4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800280a:	b002      	add	sp, #8
 800280c:	f85d eb04 	ldr.w	lr, [sp], #4
 8002810:	b003      	add	sp, #12
 8002812:	4770      	bx	lr

08002814 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002814:	b40c      	push	{r2, r3}
 8002816:	b507      	push	{r0, r1, r2, lr}
 8002818:	ab04      	add	r3, sp, #16
 800281a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800281e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002820:	f00a fae0 	bl	800cde4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002824:	b003      	add	sp, #12
 8002826:	f85d eb04 	ldr.w	lr, [sp], #4
 800282a:	b002      	add	sp, #8
 800282c:	4770      	bx	lr
	...

08002830 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002830:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8002832:	b510      	push	{r4, lr}
 8002834:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002836:	b373      	cbz	r3, 8002896 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002838:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800283a:	b92b      	cbnz	r3, 8002848 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800283c:	4b18      	ldr	r3, [pc, #96]	; (80028a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800283e:	4a19      	ldr	r2, [pc, #100]	; (80028a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002840:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002842:	4819      	ldr	r0, [pc, #100]	; (80028a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002844:	f018 fa28 	bl	801ac98 <__assert_func>
            return buffer[pos];
 8002848:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800284a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800284e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002850:	b30b      	cbz	r3, 8002896 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002852:	f00b fda3 	bl	800e39c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002856:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8002858:	2b01      	cmp	r3, #1
 800285a:	d803      	bhi.n	8002864 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800285c:	4b13      	ldr	r3, [pc, #76]	; (80028ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800285e:	4a14      	ldr	r2, [pc, #80]	; (80028b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002860:	21c5      	movs	r1, #197	; 0xc5
 8002862:	e7ee      	b.n	8002842 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002864:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8002866:	1c53      	adds	r3, r2, #1
 8002868:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800286a:	2b09      	cmp	r3, #9
 800286c:	4619      	mov	r1, r3
 800286e:	bf88      	it	hi
 8002870:	f1a3 010a 	subhi.w	r1, r3, #10
 8002874:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002878:	f640 103f 	movw	r0, #2367	; 0x93f
 800287c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800287e:	4281      	cmp	r1, r0
 8002880:	d109      	bne.n	8002896 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002882:	2b0a      	cmp	r3, #10
 8002884:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002888:	bf28      	it	cs
 800288a:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800288c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002890:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8002892:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8002894:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002896:	4620      	mov	r0, r4
}
 8002898:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800289c:	f00b bc62 	b.w	800e164 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80028a0:	0801ca98 	.word	0x0801ca98
 80028a4:	0801caa1 	.word	0x0801caa1
 80028a8:	0801cb4c 	.word	0x0801cb4c
 80028ac:	0801cb96 	.word	0x0801cb96
 80028b0:	0801cba4 	.word	0x0801cba4

080028b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80028b4:	f00b bc0e 	b.w	800e0d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080028b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80028b8:	b510      	push	{r4, lr}
 80028ba:	b086      	sub	sp, #24
 80028bc:	ac02      	add	r4, sp, #8
 80028be:	e884 0006 	stmia.w	r4, {r1, r2}
 80028c2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80028c4:	ab0a      	add	r3, sp, #40	; 0x28
 80028c6:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80028c8:	9301      	str	r3, [sp, #4]
 80028ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80028cc:	9300      	str	r3, [sp, #0]
 80028ce:	4621      	mov	r1, r4
 80028d0:	9b08      	ldr	r3, [sp, #32]
 80028d2:	f008 ff3c 	bl	800b74e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80028d6:	b006      	add	sp, #24
 80028d8:	bd10      	pop	{r4, pc}
	...

080028dc <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80028dc:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80028de:	bb18      	cbnz	r0, 8002928 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80028e0:	4b12      	ldr	r3, [pc, #72]	; (800292c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80028e2:	4813      	ldr	r0, [pc, #76]	; (8002930 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	4913      	ldr	r1, [pc, #76]	; (8002934 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80028e8:	b1b3      	cbz	r3, 8002918 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80028ea:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80028ec:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80028ee:	441a      	add	r2, r3
 80028f0:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80028f2:	685a      	ldr	r2, [r3, #4]
 80028f4:	441a      	add	r2, r3
 80028f6:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80028f8:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80028fa:	4b0f      	ldr	r3, [pc, #60]	; (8002938 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80028fc:	2200      	movs	r2, #0
 80028fe:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002900:	f000 f838 	bl	8002974 <_ZN17TypedTextDatabase8getFontsEv>
 8002904:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002906:	f000 f833 	bl	8002970 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800290a:	4b0c      	ldr	r3, [pc, #48]	; (800293c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800290c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800290e:	4b0c      	ldr	r3, [pc, #48]	; (8002940 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002910:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002912:	4b0c      	ldr	r3, [pc, #48]	; (8002944 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002914:	8018      	strh	r0, [r3, #0]
    }
}
 8002916:	e007      	b.n	8002928 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002918:	4b0b      	ldr	r3, [pc, #44]	; (8002948 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800291a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800291c:	4b0b      	ldr	r3, [pc, #44]	; (800294c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800291e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002920:	4b0b      	ldr	r3, [pc, #44]	; (8002950 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002922:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002924:	2c00      	cmp	r4, #0
 8002926:	d1e8      	bne.n	80028fa <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002928:	bd38      	pop	{r3, r4, r5, pc}
 800292a:	bf00      	nop
 800292c:	2000158c 	.word	0x2000158c
 8002930:	20001590 	.word	0x20001590
 8002934:	20001594 	.word	0x20001594
 8002938:	20001598 	.word	0x20001598
 800293c:	2000a540 	.word	0x2000a540
 8002940:	2000a548 	.word	0x2000a548
 8002944:	2000a544 	.word	0x2000a544
 8002948:	9001419c 	.word	0x9001419c
 800294c:	90014198 	.word	0x90014198
 8002950:	900141a8 	.word	0x900141a8

08002954 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002954:	4b04      	ldr	r3, [pc, #16]	; (8002968 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002956:	681b      	ldr	r3, [r3, #0]
 8002958:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800295c:	4b03      	ldr	r3, [pc, #12]	; (800296c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800295e:	681b      	ldr	r3, [r3, #0]
}
 8002960:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002964:	4770      	bx	lr
 8002966:	bf00      	nop
 8002968:	20001594 	.word	0x20001594
 800296c:	20001590 	.word	0x20001590

08002970 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002970:	2001      	movs	r0, #1
 8002972:	4770      	bx	lr

08002974 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002974:	4800      	ldr	r0, [pc, #0]	; (8002978 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002976:	4770      	bx	lr
 8002978:	2000159c 	.word	0x2000159c

0800297c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800297c:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 800297e:	f7ff fec5 	bl	800270c <_Z23getFont_verdana_20_4bppv>
};
 8002982:	4c04      	ldr	r4, [pc, #16]	; (8002994 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002984:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002986:	f7ff fefb 	bl	8002780 <_Z23getFont_verdana_40_4bppv>
};
 800298a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 800298c:	f7ff fe84 	bl	8002698 <_Z23getFont_verdana_10_4bppv>
};
 8002990:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002992:	bd10      	pop	{r4, pc}
 8002994:	2000159c 	.word	0x2000159c

08002998 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002998:	4770      	bx	lr

0800299a <_ZN19FrontendApplicationD0Ev>:
 800299a:	b510      	push	{r4, lr}
 800299c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80029a0:	4604      	mov	r4, r0
 80029a2:	f018 f94b 	bl	801ac3c <_ZdlPvj>
 80029a6:	4620      	mov	r0, r4
 80029a8:	bd10      	pop	{r4, pc}

080029aa <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80029aa:	b510      	push	{r4, lr}
 80029ac:	4604      	mov	r4, r0
    {
        model.tick();
 80029ae:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 80029b2:	f000 f812 	bl	80029da <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80029b6:	4620      	mov	r0, r4
    }
 80029b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80029bc:	f009 ba26 	b.w	800be0c <_ZN8touchgfx11Application15handleTickEventEv>

080029c0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80029c0:	b510      	push	{r4, lr}
 80029c2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80029c4:	f7ff fc76 	bl	80022b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80029c8:	4b01      	ldr	r3, [pc, #4]	; (80029d0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80029ca:	6023      	str	r3, [r4, #0]
{

}
 80029cc:	4620      	mov	r0, r4
 80029ce:	bd10      	pop	{r4, pc}
 80029d0:	0801cc80 	.word	0x0801cc80

080029d4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80029d4:	2200      	movs	r2, #0
 80029d6:	6002      	str	r2, [r0, #0]
{

}
 80029d8:	4770      	bx	lr

080029da <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80029da:	4770      	bx	lr

080029dc <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 80029dc:	4770      	bx	lr

080029de <_ZThn4_N16Screen1PresenterD1Ev>:
 80029de:	3804      	subs	r0, #4
 80029e0:	4770      	bx	lr

080029e2 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 80029e2:	4770      	bx	lr

080029e4 <_ZN16Screen1PresenterD0Ev>:
 80029e4:	b510      	push	{r4, lr}
 80029e6:	2110      	movs	r1, #16
 80029e8:	4604      	mov	r4, r0
 80029ea:	f018 f927 	bl	801ac3c <_ZdlPvj>
 80029ee:	4620      	mov	r0, r4
 80029f0:	bd10      	pop	{r4, pc}

080029f2 <_ZThn4_N16Screen1PresenterD0Ev>:
 80029f2:	f1a0 0004 	sub.w	r0, r0, #4
 80029f6:	e7f5      	b.n	80029e4 <_ZN16Screen1PresenterD0Ev>

080029f8 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 80029f8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80029fa:	2200      	movs	r2, #0
 80029fc:	6082      	str	r2, [r0, #8]
    : view(v)
 80029fe:	4a04      	ldr	r2, [pc, #16]	; (8002a10 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002a00:	60c1      	str	r1, [r0, #12]
 8002a02:	f102 0408 	add.w	r4, r2, #8
 8002a06:	3220      	adds	r2, #32
 8002a08:	6004      	str	r4, [r0, #0]
 8002a0a:	6042      	str	r2, [r0, #4]
}
 8002a0c:	bd10      	pop	{r4, pc}
 8002a0e:	bf00      	nop
 8002a10:	0801ccc4 	.word	0x0801ccc4

08002a14 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002a14:	4770      	bx	lr

08002a16 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002a16:	4770      	bx	lr

08002a18 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002a18:	f7ff bd1c 	b.w	8002454 <_ZN15Screen1ViewBase11setupScreenEv>

08002a1c <_ZN11Screen1View3LedEv>:

void Screen1View::Led()
{
 8002a1c:	b508      	push	{r3, lr}
	HAL_GPIO_TogglePin(D10_GPIO_Port, D10_Pin);
 8002a1e:	4804      	ldr	r0, [pc, #16]	; (8002a30 <_ZN11Screen1View3LedEv+0x14>)
 8002a20:	2140      	movs	r1, #64	; 0x40
 8002a22:	f002 f812 	bl	8004a4a <HAL_GPIO_TogglePin>
	HAL_Delay(100);
}
 8002a26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	HAL_Delay(100);
 8002a2a:	2064      	movs	r0, #100	; 0x64
 8002a2c:	f001 b81e 	b.w	8003a6c <HAL_Delay>
 8002a30:	40021c00 	.word	0x40021c00

08002a34 <_ZN11Screen1ViewD0Ev>:
 8002a34:	b510      	push	{r4, lr}
 8002a36:	21f0      	movs	r1, #240	; 0xf0
 8002a38:	4604      	mov	r4, r0
 8002a3a:	f018 f8ff 	bl	801ac3c <_ZdlPvj>
 8002a3e:	4620      	mov	r0, r4
 8002a40:	bd10      	pop	{r4, pc}
	...

08002a44 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002a44:	b510      	push	{r4, lr}
 8002a46:	4604      	mov	r4, r0
 8002a48:	f7ff fdb4 	bl	80025b4 <_ZN15Screen1ViewBaseC1Ev>
 8002a4c:	4b01      	ldr	r3, [pc, #4]	; (8002a54 <_ZN11Screen1ViewC1Ev+0x10>)
 8002a4e:	6023      	str	r3, [r4, #0]
}
 8002a50:	4620      	mov	r0, r4
 8002a52:	bd10      	pop	{r4, pc}
 8002a54:	0801ccf4 	.word	0x0801ccf4

08002a58 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8002a58:	4770      	bx	lr

08002a5a <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8002a5a:	2000      	movs	r0, #0
 8002a5c:	4770      	bx	lr

08002a5e <ft6x06_ReadID>:
{
 8002a5e:	b510      	push	{r4, lr}
 8002a60:	4604      	mov	r4, r0
  TS_IO_Init();
 8002a62:	f000 fb75 	bl	8003150 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8002a66:	21a8      	movs	r1, #168	; 0xa8
 8002a68:	b2e0      	uxtb	r0, r4
 8002a6a:	f000 fb8d 	bl	8003188 <TS_IO_Read>
}
 8002a6e:	b280      	uxth	r0, r0
 8002a70:	bd10      	pop	{r4, pc}
	...

08002a74 <ft6x06_TS_DetectTouch>:
{
 8002a74:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8002a76:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002a78:	2102      	movs	r1, #2
 8002a7a:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8002a7c:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002a80:	f000 fb82 	bl	8003188 <TS_IO_Read>
 8002a84:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8002a88:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002a8c:	f003 030f 	and.w	r3, r3, #15
 8002a90:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8002a94:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002a98:	2b02      	cmp	r3, #2
    nbTouch = 0;
 8002a9a:	bf88      	it	hi
 8002a9c:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002aa0:	4b04      	ldr	r3, [pc, #16]	; (8002ab4 <ft6x06_TS_DetectTouch+0x40>)
 8002aa2:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8002aa6:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002aaa:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8002aac:	2200      	movs	r2, #0
 8002aae:	709a      	strb	r2, [r3, #2]
}
 8002ab0:	b002      	add	sp, #8
 8002ab2:	bd10      	pop	{r4, pc}
 8002ab4:	200015aa 	.word	0x200015aa

08002ab8 <ft6x06_TS_GetXY>:
{
 8002ab8:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002aba:	4c15      	ldr	r4, [pc, #84]	; (8002b10 <ft6x06_TS_GetXY+0x58>)
{
 8002abc:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002abe:	78a3      	ldrb	r3, [r4, #2]
 8002ac0:	7862      	ldrb	r2, [r4, #1]
 8002ac2:	429a      	cmp	r2, r3
{
 8002ac4:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002ac6:	d91f      	bls.n	8002b08 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8002ac8:	b303      	cbz	r3, 8002b0c <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8002aca:	2b01      	cmp	r3, #1
 8002acc:	bf14      	ite	ne
 8002ace:	2100      	movne	r1, #0
 8002ad0:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8002ad2:	2304      	movs	r3, #4
 8002ad4:	eb0d 0203 	add.w	r2, sp, r3
 8002ad8:	b2c0      	uxtb	r0, r0
 8002ada:	f000 fb73 	bl	80031c4 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8002ade:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002ae2:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002ae6:	021b      	lsls	r3, r3, #8
 8002ae8:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002aec:	4313      	orrs	r3, r2
 8002aee:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8002af0:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002af4:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8002af8:	021b      	lsls	r3, r3, #8
 8002afa:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002afe:	4313      	orrs	r3, r2
 8002b00:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8002b02:	78a3      	ldrb	r3, [r4, #2]
 8002b04:	3301      	adds	r3, #1
 8002b06:	70a3      	strb	r3, [r4, #2]
}
 8002b08:	b002      	add	sp, #8
 8002b0a:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8002b0c:	2103      	movs	r1, #3
 8002b0e:	e7e0      	b.n	8002ad2 <ft6x06_TS_GetXY+0x1a>
 8002b10:	200015aa 	.word	0x200015aa

08002b14 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002b14:	2201      	movs	r2, #1
 8002b16:	21a4      	movs	r1, #164	; 0xa4
 8002b18:	b2c0      	uxtb	r0, r0
 8002b1a:	f000 bb1b 	b.w	8003154 <TS_IO_Write>

08002b1e <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002b1e:	2200      	movs	r2, #0
 8002b20:	21a4      	movs	r1, #164	; 0xa4
 8002b22:	b2c0      	uxtb	r0, r0
 8002b24:	f000 bb16 	b.w	8003154 <TS_IO_Write>

08002b28 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8002b28:	f7ff bff9 	b.w	8002b1e <ft6x06_TS_DisableIT>

08002b2c <ft6x06_TS_ClearIT>:
 8002b2c:	4770      	bx	lr
	...

08002b30 <ft6x06_Init>:
{  
 8002b30:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8002b32:	4b09      	ldr	r3, [pc, #36]	; (8002b58 <ft6x06_Init+0x28>)
 8002b34:	781a      	ldrb	r2, [r3, #0]
 8002b36:	4290      	cmp	r0, r2
 8002b38:	d00a      	beq.n	8002b50 <ft6x06_Init+0x20>
 8002b3a:	7859      	ldrb	r1, [r3, #1]
 8002b3c:	4288      	cmp	r0, r1
 8002b3e:	d007      	beq.n	8002b50 <ft6x06_Init+0x20>
 8002b40:	b10a      	cbz	r2, 8002b46 <ft6x06_Init+0x16>
 8002b42:	b929      	cbnz	r1, 8002b50 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8002b44:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8002b46:	5498      	strb	r0, [r3, r2]
}
 8002b48:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8002b4c:	f000 bb00 	b.w	8003150 <TS_IO_Init>
}
 8002b50:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002b54:	4770      	bx	lr
 8002b56:	bf00      	nop
 8002b58:	200015a8 	.word	0x200015a8

08002b5c <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8002b5c:	b538      	push	{r3, r4, r5, lr}
 8002b5e:	4604      	mov	r4, r0
 8002b60:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002b62:	2000      	movs	r0, #0
 8002b64:	49c9      	ldr	r1, [pc, #804]	; (8002e8c <OTM8009A_Init+0x330>)
 8002b66:	f7fd ff97 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8002b6a:	49c9      	ldr	r1, [pc, #804]	; (8002e90 <OTM8009A_Init+0x334>)
 8002b6c:	2003      	movs	r0, #3
 8002b6e:	f7fd ff93 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8002b72:	49c8      	ldr	r1, [pc, #800]	; (8002e94 <OTM8009A_Init+0x338>)
 8002b74:	2000      	movs	r0, #0
 8002b76:	f7fd ff8f 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8002b7a:	49c7      	ldr	r1, [pc, #796]	; (8002e98 <OTM8009A_Init+0x33c>)
 8002b7c:	2002      	movs	r0, #2
 8002b7e:	f7fd ff8b 	bl	8000a98 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002b82:	49c4      	ldr	r1, [pc, #784]	; (8002e94 <OTM8009A_Init+0x338>)
 8002b84:	2000      	movs	r0, #0
 8002b86:	f7fd ff87 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8002b8a:	49c4      	ldr	r1, [pc, #784]	; (8002e9c <OTM8009A_Init+0x340>)
 8002b8c:	2000      	movs	r0, #0
 8002b8e:	f7fd ff83 	bl	8000a98 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002b92:	200a      	movs	r0, #10
 8002b94:	f000 fb2e 	bl	80031f4 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8002b98:	49c1      	ldr	r1, [pc, #772]	; (8002ea0 <OTM8009A_Init+0x344>)
 8002b9a:	2000      	movs	r0, #0
 8002b9c:	f7fd ff7c 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8002ba0:	49c0      	ldr	r1, [pc, #768]	; (8002ea4 <OTM8009A_Init+0x348>)
 8002ba2:	2000      	movs	r0, #0
 8002ba4:	f7fd ff78 	bl	8000a98 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002ba8:	200a      	movs	r0, #10
 8002baa:	f000 fb23 	bl	80031f4 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8002bae:	49be      	ldr	r1, [pc, #760]	; (8002ea8 <OTM8009A_Init+0x34c>)
 8002bb0:	2000      	movs	r0, #0
 8002bb2:	f7fd ff71 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8002bb6:	49bd      	ldr	r1, [pc, #756]	; (8002eac <OTM8009A_Init+0x350>)
 8002bb8:	2000      	movs	r0, #0
 8002bba:	f7fd ff6d 	bl	8000a98 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8002bbe:	49bc      	ldr	r1, [pc, #752]	; (8002eb0 <OTM8009A_Init+0x354>)
 8002bc0:	2000      	movs	r0, #0
 8002bc2:	f7fd ff69 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002bc6:	49bb      	ldr	r1, [pc, #748]	; (8002eb4 <OTM8009A_Init+0x358>)
 8002bc8:	2000      	movs	r0, #0
 8002bca:	f7fd ff65 	bl	8000a98 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8002bce:	49ba      	ldr	r1, [pc, #744]	; (8002eb8 <OTM8009A_Init+0x35c>)
 8002bd0:	2000      	movs	r0, #0
 8002bd2:	f7fd ff61 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8002bd6:	49b9      	ldr	r1, [pc, #740]	; (8002ebc <OTM8009A_Init+0x360>)
 8002bd8:	2000      	movs	r0, #0
 8002bda:	f7fd ff5d 	bl	8000a98 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002bde:	49ab      	ldr	r1, [pc, #684]	; (8002e8c <OTM8009A_Init+0x330>)
 8002be0:	2000      	movs	r0, #0
 8002be2:	f7fd ff59 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8002be6:	49b6      	ldr	r1, [pc, #728]	; (8002ec0 <OTM8009A_Init+0x364>)
 8002be8:	2000      	movs	r0, #0
 8002bea:	f7fd ff55 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002bee:	49b5      	ldr	r1, [pc, #724]	; (8002ec4 <OTM8009A_Init+0x368>)
 8002bf0:	2000      	movs	r0, #0
 8002bf2:	f7fd ff51 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8002bf6:	49b4      	ldr	r1, [pc, #720]	; (8002ec8 <OTM8009A_Init+0x36c>)
 8002bf8:	2000      	movs	r0, #0
 8002bfa:	f7fd ff4d 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002bfe:	49b3      	ldr	r1, [pc, #716]	; (8002ecc <OTM8009A_Init+0x370>)
 8002c00:	2000      	movs	r0, #0
 8002c02:	f7fd ff49 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8002c06:	49b2      	ldr	r1, [pc, #712]	; (8002ed0 <OTM8009A_Init+0x374>)
 8002c08:	2000      	movs	r0, #0
 8002c0a:	f7fd ff45 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8002c0e:	49b1      	ldr	r1, [pc, #708]	; (8002ed4 <OTM8009A_Init+0x378>)
 8002c10:	2000      	movs	r0, #0
 8002c12:	f7fd ff41 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8002c16:	49b0      	ldr	r1, [pc, #704]	; (8002ed8 <OTM8009A_Init+0x37c>)
 8002c18:	2000      	movs	r0, #0
 8002c1a:	f7fd ff3d 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8002c1e:	49af      	ldr	r1, [pc, #700]	; (8002edc <OTM8009A_Init+0x380>)
 8002c20:	2000      	movs	r0, #0
 8002c22:	f7fd ff39 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002c26:	49a3      	ldr	r1, [pc, #652]	; (8002eb4 <OTM8009A_Init+0x358>)
 8002c28:	2000      	movs	r0, #0
 8002c2a:	f7fd ff35 	bl	8000a98 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002c2e:	4997      	ldr	r1, [pc, #604]	; (8002e8c <OTM8009A_Init+0x330>)
 8002c30:	2000      	movs	r0, #0
 8002c32:	f7fd ff31 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8002c36:	49aa      	ldr	r1, [pc, #680]	; (8002ee0 <OTM8009A_Init+0x384>)
 8002c38:	2002      	movs	r0, #2
 8002c3a:	f7fd ff2d 	bl	8000a98 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8002c3e:	49a9      	ldr	r1, [pc, #676]	; (8002ee4 <OTM8009A_Init+0x388>)
 8002c40:	2000      	movs	r0, #0
 8002c42:	f7fd ff29 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8002c46:	49a8      	ldr	r1, [pc, #672]	; (8002ee8 <OTM8009A_Init+0x38c>)
 8002c48:	2000      	movs	r0, #0
 8002c4a:	f7fd ff25 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8002c4e:	49a7      	ldr	r1, [pc, #668]	; (8002eec <OTM8009A_Init+0x390>)
 8002c50:	2000      	movs	r0, #0
 8002c52:	f7fd ff21 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8002c56:	49a6      	ldr	r1, [pc, #664]	; (8002ef0 <OTM8009A_Init+0x394>)
 8002c58:	2000      	movs	r0, #0
 8002c5a:	f7fd ff1d 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8002c5e:	49a5      	ldr	r1, [pc, #660]	; (8002ef4 <OTM8009A_Init+0x398>)
 8002c60:	2000      	movs	r0, #0
 8002c62:	f7fd ff19 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8002c66:	49a4      	ldr	r1, [pc, #656]	; (8002ef8 <OTM8009A_Init+0x39c>)
 8002c68:	2000      	movs	r0, #0
 8002c6a:	f7fd ff15 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002c6e:	4995      	ldr	r1, [pc, #596]	; (8002ec4 <OTM8009A_Init+0x368>)
 8002c70:	2000      	movs	r0, #0
 8002c72:	f7fd ff11 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8002c76:	49a1      	ldr	r1, [pc, #644]	; (8002efc <OTM8009A_Init+0x3a0>)
 8002c78:	2000      	movs	r0, #0
 8002c7a:	f7fd ff0d 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002c7e:	4993      	ldr	r1, [pc, #588]	; (8002ecc <OTM8009A_Init+0x370>)
 8002c80:	2000      	movs	r0, #0
 8002c82:	f7fd ff09 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8002c86:	499e      	ldr	r1, [pc, #632]	; (8002f00 <OTM8009A_Init+0x3a4>)
 8002c88:	2000      	movs	r0, #0
 8002c8a:	f7fd ff05 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8002c8e:	499d      	ldr	r1, [pc, #628]	; (8002f04 <OTM8009A_Init+0x3a8>)
 8002c90:	2000      	movs	r0, #0
 8002c92:	f7fd ff01 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8002c96:	499c      	ldr	r1, [pc, #624]	; (8002f08 <OTM8009A_Init+0x3ac>)
 8002c98:	2002      	movs	r0, #2
 8002c9a:	f7fd fefd 	bl	8000a98 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002c9e:	497d      	ldr	r1, [pc, #500]	; (8002e94 <OTM8009A_Init+0x338>)
 8002ca0:	2000      	movs	r0, #0
 8002ca2:	f7fd fef9 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8002ca6:	4999      	ldr	r1, [pc, #612]	; (8002f0c <OTM8009A_Init+0x3b0>)
 8002ca8:	2006      	movs	r0, #6
 8002caa:	f7fd fef5 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002cae:	4998      	ldr	r1, [pc, #608]	; (8002f10 <OTM8009A_Init+0x3b4>)
 8002cb0:	2000      	movs	r0, #0
 8002cb2:	f7fd fef1 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8002cb6:	4997      	ldr	r1, [pc, #604]	; (8002f14 <OTM8009A_Init+0x3b8>)
 8002cb8:	200e      	movs	r0, #14
 8002cba:	f7fd feed 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002cbe:	4996      	ldr	r1, [pc, #600]	; (8002f18 <OTM8009A_Init+0x3bc>)
 8002cc0:	2000      	movs	r0, #0
 8002cc2:	f7fd fee9 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8002cc6:	4995      	ldr	r1, [pc, #596]	; (8002f1c <OTM8009A_Init+0x3c0>)
 8002cc8:	200e      	movs	r0, #14
 8002cca:	f7fd fee5 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002cce:	4994      	ldr	r1, [pc, #592]	; (8002f20 <OTM8009A_Init+0x3c4>)
 8002cd0:	2000      	movs	r0, #0
 8002cd2:	f7fd fee1 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8002cd6:	4993      	ldr	r1, [pc, #588]	; (8002f24 <OTM8009A_Init+0x3c8>)
 8002cd8:	200a      	movs	r0, #10
 8002cda:	f7fd fedd 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002cde:	4992      	ldr	r1, [pc, #584]	; (8002f28 <OTM8009A_Init+0x3cc>)
 8002ce0:	2000      	movs	r0, #0
 8002ce2:	f7fd fed9 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8002ce6:	4991      	ldr	r1, [pc, #580]	; (8002f2c <OTM8009A_Init+0x3d0>)
 8002ce8:	2000      	movs	r0, #0
 8002cea:	f7fd fed5 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002cee:	4969      	ldr	r1, [pc, #420]	; (8002e94 <OTM8009A_Init+0x338>)
 8002cf0:	2000      	movs	r0, #0
 8002cf2:	f7fd fed1 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8002cf6:	498e      	ldr	r1, [pc, #568]	; (8002f30 <OTM8009A_Init+0x3d4>)
 8002cf8:	200a      	movs	r0, #10
 8002cfa:	f7fd fecd 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002cfe:	498d      	ldr	r1, [pc, #564]	; (8002f34 <OTM8009A_Init+0x3d8>)
 8002d00:	2000      	movs	r0, #0
 8002d02:	f7fd fec9 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8002d06:	498c      	ldr	r1, [pc, #560]	; (8002f38 <OTM8009A_Init+0x3dc>)
 8002d08:	200f      	movs	r0, #15
 8002d0a:	f7fd fec5 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002d0e:	4980      	ldr	r1, [pc, #512]	; (8002f10 <OTM8009A_Init+0x3b4>)
 8002d10:	2000      	movs	r0, #0
 8002d12:	f7fd fec1 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8002d16:	4989      	ldr	r1, [pc, #548]	; (8002f3c <OTM8009A_Init+0x3e0>)
 8002d18:	200f      	movs	r0, #15
 8002d1a:	f7fd febd 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002d1e:	497e      	ldr	r1, [pc, #504]	; (8002f18 <OTM8009A_Init+0x3bc>)
 8002d20:	2000      	movs	r0, #0
 8002d22:	f7fd feb9 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8002d26:	4986      	ldr	r1, [pc, #536]	; (8002f40 <OTM8009A_Init+0x3e4>)
 8002d28:	200a      	movs	r0, #10
 8002d2a:	f7fd feb5 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002d2e:	497c      	ldr	r1, [pc, #496]	; (8002f20 <OTM8009A_Init+0x3c4>)
 8002d30:	2000      	movs	r0, #0
 8002d32:	f7fd feb1 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8002d36:	4983      	ldr	r1, [pc, #524]	; (8002f44 <OTM8009A_Init+0x3e8>)
 8002d38:	200f      	movs	r0, #15
 8002d3a:	f7fd fead 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002d3e:	497a      	ldr	r1, [pc, #488]	; (8002f28 <OTM8009A_Init+0x3cc>)
 8002d40:	2000      	movs	r0, #0
 8002d42:	f7fd fea9 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8002d46:	4980      	ldr	r1, [pc, #512]	; (8002f48 <OTM8009A_Init+0x3ec>)
 8002d48:	200f      	movs	r0, #15
 8002d4a:	f7fd fea5 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8002d4e:	497f      	ldr	r1, [pc, #508]	; (8002f4c <OTM8009A_Init+0x3f0>)
 8002d50:	2000      	movs	r0, #0
 8002d52:	f7fd fea1 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 8002d56:	497e      	ldr	r1, [pc, #504]	; (8002f50 <OTM8009A_Init+0x3f4>)
 8002d58:	200a      	movs	r0, #10
 8002d5a:	f7fd fe9d 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8002d5e:	497d      	ldr	r1, [pc, #500]	; (8002f54 <OTM8009A_Init+0x3f8>)
 8002d60:	2000      	movs	r0, #0
 8002d62:	f7fd fe99 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8002d66:	497c      	ldr	r1, [pc, #496]	; (8002f58 <OTM8009A_Init+0x3fc>)
 8002d68:	200a      	movs	r0, #10
 8002d6a:	f7fd fe95 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002d6e:	4949      	ldr	r1, [pc, #292]	; (8002e94 <OTM8009A_Init+0x338>)
 8002d70:	2000      	movs	r0, #0
 8002d72:	f7fd fe91 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8002d76:	4979      	ldr	r1, [pc, #484]	; (8002f5c <OTM8009A_Init+0x400>)
 8002d78:	200a      	movs	r0, #10
 8002d7a:	f7fd fe8d 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002d7e:	496d      	ldr	r1, [pc, #436]	; (8002f34 <OTM8009A_Init+0x3d8>)
 8002d80:	2000      	movs	r0, #0
 8002d82:	f7fd fe89 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8002d86:	4976      	ldr	r1, [pc, #472]	; (8002f60 <OTM8009A_Init+0x404>)
 8002d88:	200f      	movs	r0, #15
 8002d8a:	f7fd fe85 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002d8e:	4960      	ldr	r1, [pc, #384]	; (8002f10 <OTM8009A_Init+0x3b4>)
 8002d90:	2000      	movs	r0, #0
 8002d92:	f7fd fe81 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8002d96:	4973      	ldr	r1, [pc, #460]	; (8002f64 <OTM8009A_Init+0x408>)
 8002d98:	200f      	movs	r0, #15
 8002d9a:	f7fd fe7d 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002d9e:	495e      	ldr	r1, [pc, #376]	; (8002f18 <OTM8009A_Init+0x3bc>)
 8002da0:	2000      	movs	r0, #0
 8002da2:	f7fd fe79 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8002da6:	4970      	ldr	r1, [pc, #448]	; (8002f68 <OTM8009A_Init+0x40c>)
 8002da8:	200a      	movs	r0, #10
 8002daa:	f7fd fe75 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002dae:	495c      	ldr	r1, [pc, #368]	; (8002f20 <OTM8009A_Init+0x3c4>)
 8002db0:	2000      	movs	r0, #0
 8002db2:	f7fd fe71 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8002db6:	496d      	ldr	r1, [pc, #436]	; (8002f6c <OTM8009A_Init+0x410>)
 8002db8:	200f      	movs	r0, #15
 8002dba:	f7fd fe6d 	bl	8000a98 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002dbe:	495a      	ldr	r1, [pc, #360]	; (8002f28 <OTM8009A_Init+0x3cc>)
 8002dc0:	2000      	movs	r0, #0
 8002dc2:	f7fd fe69 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8002dc6:	496a      	ldr	r1, [pc, #424]	; (8002f70 <OTM8009A_Init+0x414>)
 8002dc8:	200f      	movs	r0, #15
 8002dca:	f7fd fe65 	bl	8000a98 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002dce:	493d      	ldr	r1, [pc, #244]	; (8002ec4 <OTM8009A_Init+0x368>)
 8002dd0:	2000      	movs	r0, #0
 8002dd2:	f7fd fe61 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8002dd6:	4967      	ldr	r1, [pc, #412]	; (8002f74 <OTM8009A_Init+0x418>)
 8002dd8:	2000      	movs	r0, #0
 8002dda:	f7fd fe5d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8002dde:	4966      	ldr	r1, [pc, #408]	; (8002f78 <OTM8009A_Init+0x41c>)
 8002de0:	2000      	movs	r0, #0
 8002de2:	f7fd fe59 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8002de6:	4965      	ldr	r1, [pc, #404]	; (8002f7c <OTM8009A_Init+0x420>)
 8002de8:	2000      	movs	r0, #0
 8002dea:	f7fd fe55 	bl	8000a98 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8002dee:	4964      	ldr	r1, [pc, #400]	; (8002f80 <OTM8009A_Init+0x424>)
 8002df0:	2000      	movs	r0, #0
 8002df2:	f7fd fe51 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8002df6:	4963      	ldr	r1, [pc, #396]	; (8002f84 <OTM8009A_Init+0x428>)
 8002df8:	2000      	movs	r0, #0
 8002dfa:	f7fd fe4d 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002dfe:	4923      	ldr	r1, [pc, #140]	; (8002e8c <OTM8009A_Init+0x330>)
 8002e00:	2000      	movs	r0, #0
 8002e02:	f7fd fe49 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8002e06:	4960      	ldr	r1, [pc, #384]	; (8002f88 <OTM8009A_Init+0x42c>)
 8002e08:	2003      	movs	r0, #3
 8002e0a:	f7fd fe45 	bl	8000a98 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002e0e:	491f      	ldr	r1, [pc, #124]	; (8002e8c <OTM8009A_Init+0x330>)
 8002e10:	2000      	movs	r0, #0
 8002e12:	f7fd fe41 	bl	8000a98 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002e16:	491d      	ldr	r1, [pc, #116]	; (8002e8c <OTM8009A_Init+0x330>)
 8002e18:	2000      	movs	r0, #0
 8002e1a:	f7fd fe3d 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8002e1e:	495b      	ldr	r1, [pc, #364]	; (8002f8c <OTM8009A_Init+0x430>)
 8002e20:	2010      	movs	r0, #16
 8002e22:	f7fd fe39 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002e26:	4919      	ldr	r1, [pc, #100]	; (8002e8c <OTM8009A_Init+0x330>)
 8002e28:	2000      	movs	r0, #0
 8002e2a:	f7fd fe35 	bl	8000a98 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8002e2e:	4958      	ldr	r1, [pc, #352]	; (8002f90 <OTM8009A_Init+0x434>)
 8002e30:	2010      	movs	r0, #16
 8002e32:	f7fd fe31 	bl	8000a98 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 8002e36:	2000      	movs	r0, #0
 8002e38:	4956      	ldr	r1, [pc, #344]	; (8002f94 <OTM8009A_Init+0x438>)
 8002e3a:	f7fd fe2d 	bl	8000a98 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8002e3e:	2078      	movs	r0, #120	; 0x78
 8002e40:	f000 f9d8 	bl	80031f4 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8002e44:	2c00      	cmp	r4, #0
 8002e46:	f000 80c7 	beq.w	8002fd8 <OTM8009A_Init+0x47c>
 8002e4a:	2c02      	cmp	r4, #2
 8002e4c:	d103      	bne.n	8002e56 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8002e4e:	4952      	ldr	r1, [pc, #328]	; (8002f98 <OTM8009A_Init+0x43c>)
 8002e50:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002e52:	f7fd fe21 	bl	8000a98 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8002e56:	2d01      	cmp	r5, #1
 8002e58:	d10b      	bne.n	8002e72 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 8002e5a:	4950      	ldr	r1, [pc, #320]	; (8002f9c <OTM8009A_Init+0x440>)
 8002e5c:	2000      	movs	r0, #0
 8002e5e:	f7fd fe1b 	bl	8000a98 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8002e62:	494f      	ldr	r1, [pc, #316]	; (8002fa0 <OTM8009A_Init+0x444>)
 8002e64:	2004      	movs	r0, #4
 8002e66:	f7fd fe17 	bl	8000a98 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8002e6a:	494e      	ldr	r1, [pc, #312]	; (8002fa4 <OTM8009A_Init+0x448>)
 8002e6c:	2004      	movs	r0, #4
 8002e6e:	f7fd fe13 	bl	8000a98 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8002e72:	494d      	ldr	r1, [pc, #308]	; (8002fa8 <OTM8009A_Init+0x44c>)
 8002e74:	2000      	movs	r0, #0
 8002e76:	f7fd fe0f 	bl	8000a98 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8002e7a:	494c      	ldr	r1, [pc, #304]	; (8002fac <OTM8009A_Init+0x450>)
 8002e7c:	2000      	movs	r0, #0
 8002e7e:	f7fd fe0b 	bl	8000a98 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8002e82:	494b      	ldr	r1, [pc, #300]	; (8002fb0 <OTM8009A_Init+0x454>)
 8002e84:	2000      	movs	r0, #0
 8002e86:	f7fd fe07 	bl	8000a98 <DSI_IO_WriteCmd>
 8002e8a:	e093      	b.n	8002fb4 <OTM8009A_Init+0x458>
 8002e8c:	0801cd24 	.word	0x0801cd24
 8002e90:	0801cd8a 	.word	0x0801cd8a
 8002e94:	0801cd3a 	.word	0x0801cd3a
 8002e98:	0801ce10 	.word	0x0801ce10
 8002e9c:	0801cd50 	.word	0x0801cd50
 8002ea0:	0801cd66 	.word	0x0801cd66
 8002ea4:	0801cd7c 	.word	0x0801cd7c
 8002ea8:	0801cd82 	.word	0x0801cd82
 8002eac:	0801cd84 	.word	0x0801cd84
 8002eb0:	0801cd86 	.word	0x0801cd86
 8002eb4:	0801cd88 	.word	0x0801cd88
 8002eb8:	0801cd26 	.word	0x0801cd26
 8002ebc:	0801cd28 	.word	0x0801cd28
 8002ec0:	0801cd2a 	.word	0x0801cd2a
 8002ec4:	0801cd2c 	.word	0x0801cd2c
 8002ec8:	0801cd2e 	.word	0x0801cd2e
 8002ecc:	0801cd30 	.word	0x0801cd30
 8002ed0:	0801cd32 	.word	0x0801cd32
 8002ed4:	0801cd34 	.word	0x0801cd34
 8002ed8:	0801cd36 	.word	0x0801cd36
 8002edc:	0801cd38 	.word	0x0801cd38
 8002ee0:	0801ce8e 	.word	0x0801ce8e
 8002ee4:	0801cd3c 	.word	0x0801cd3c
 8002ee8:	0801cd3e 	.word	0x0801cd3e
 8002eec:	0801cd40 	.word	0x0801cd40
 8002ef0:	0801cd42 	.word	0x0801cd42
 8002ef4:	0801cd44 	.word	0x0801cd44
 8002ef8:	0801cd46 	.word	0x0801cd46
 8002efc:	0801cd48 	.word	0x0801cd48
 8002f00:	0801cd4a 	.word	0x0801cd4a
 8002f04:	0801cd4c 	.word	0x0801cd4c
 8002f08:	0801ce91 	.word	0x0801ce91
 8002f0c:	0801ce94 	.word	0x0801ce94
 8002f10:	0801cd4e 	.word	0x0801cd4e
 8002f14:	0801ce9b 	.word	0x0801ce9b
 8002f18:	0801cd52 	.word	0x0801cd52
 8002f1c:	0801ceaa 	.word	0x0801ceaa
 8002f20:	0801cd54 	.word	0x0801cd54
 8002f24:	0801cd8e 	.word	0x0801cd8e
 8002f28:	0801cd56 	.word	0x0801cd56
 8002f2c:	0801cd74 	.word	0x0801cd74
 8002f30:	0801cd99 	.word	0x0801cd99
 8002f34:	0801cd58 	.word	0x0801cd58
 8002f38:	0801cda4 	.word	0x0801cda4
 8002f3c:	0801cdb4 	.word	0x0801cdb4
 8002f40:	0801cdc4 	.word	0x0801cdc4
 8002f44:	0801cdcf 	.word	0x0801cdcf
 8002f48:	0801cddf 	.word	0x0801cddf
 8002f4c:	0801cd5a 	.word	0x0801cd5a
 8002f50:	0801cdef 	.word	0x0801cdef
 8002f54:	0801cd5c 	.word	0x0801cd5c
 8002f58:	0801cdfa 	.word	0x0801cdfa
 8002f5c:	0801ce05 	.word	0x0801ce05
 8002f60:	0801ce13 	.word	0x0801ce13
 8002f64:	0801ce23 	.word	0x0801ce23
 8002f68:	0801ce33 	.word	0x0801ce33
 8002f6c:	0801ce3e 	.word	0x0801ce3e
 8002f70:	0801ce4e 	.word	0x0801ce4e
 8002f74:	0801cd76 	.word	0x0801cd76
 8002f78:	0801cd78 	.word	0x0801cd78
 8002f7c:	0801cd7a 	.word	0x0801cd7a
 8002f80:	0801cd7e 	.word	0x0801cd7e
 8002f84:	0801cd80 	.word	0x0801cd80
 8002f88:	0801ce5e 	.word	0x0801ce5e
 8002f8c:	0801ce6c 	.word	0x0801ce6c
 8002f90:	0801ce7d 	.word	0x0801ce7d
 8002f94:	0801cd5e 	.word	0x0801cd5e
 8002f98:	0801cd60 	.word	0x0801cd60
 8002f9c:	0801cd64 	.word	0x0801cd64
 8002fa0:	0801ce62 	.word	0x0801ce62
 8002fa4:	0801ce67 	.word	0x0801ce67
 8002fa8:	0801cd68 	.word	0x0801cd68
 8002fac:	0801cd6a 	.word	0x0801cd6a
 8002fb0:	0801cd6c 	.word	0x0801cd6c

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8002fb4:	490a      	ldr	r1, [pc, #40]	; (8002fe0 <OTM8009A_Init+0x484>)
 8002fb6:	2000      	movs	r0, #0
 8002fb8:	f7fd fd6e 	bl	8000a98 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8002fbc:	4909      	ldr	r1, [pc, #36]	; (8002fe4 <OTM8009A_Init+0x488>)
 8002fbe:	2000      	movs	r0, #0
 8002fc0:	f7fd fd6a 	bl	8000a98 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002fc4:	4908      	ldr	r1, [pc, #32]	; (8002fe8 <OTM8009A_Init+0x48c>)
 8002fc6:	2000      	movs	r0, #0
 8002fc8:	f7fd fd66 	bl	8000a98 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8002fcc:	4907      	ldr	r1, [pc, #28]	; (8002fec <OTM8009A_Init+0x490>)
 8002fce:	2000      	movs	r0, #0
 8002fd0:	f7fd fd62 	bl	8000a98 <DSI_IO_WriteCmd>

  return 0;
}
 8002fd4:	2000      	movs	r0, #0
 8002fd6:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002fd8:	4905      	ldr	r1, [pc, #20]	; (8002ff0 <OTM8009A_Init+0x494>)
 8002fda:	4620      	mov	r0, r4
 8002fdc:	e739      	b.n	8002e52 <OTM8009A_Init+0x2f6>
 8002fde:	bf00      	nop
 8002fe0:	0801cd6e 	.word	0x0801cd6e
 8002fe4:	0801cd70 	.word	0x0801cd70
 8002fe8:	0801cd24 	.word	0x0801cd24
 8002fec:	0801cd72 	.word	0x0801cd72
 8002ff0:	0801cd62 	.word	0x0801cd62

08002ff4 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8002ff4:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8002ff6:	4d2f      	ldr	r5, [pc, #188]	; (80030b4 <I2C1_Init+0xc0>)
{
 8002ff8:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8002ffa:	4628      	mov	r0, r5
 8002ffc:	f002 f964 	bl	80052c8 <HAL_I2C_GetState>
 8003000:	4604      	mov	r4, r0
 8003002:	2800      	cmp	r0, #0
 8003004:	d154      	bne.n	80030b0 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8003006:	4a2c      	ldr	r2, [pc, #176]	; (80030b8 <I2C1_Init+0xc4>)
 8003008:	4b2c      	ldr	r3, [pc, #176]	; (80030bc <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800300a:	4e2d      	ldr	r6, [pc, #180]	; (80030c0 <I2C1_Init+0xcc>)
 800300c:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800300e:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8003012:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8003016:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800301a:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800301e:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8003022:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003024:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8003026:	f043 0302 	orr.w	r3, r3, #2
 800302a:	6333      	str	r3, [r6, #48]	; 0x30
 800302c:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 800302e:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003030:	f003 0302 	and.w	r3, r3, #2
 8003034:	9301      	str	r3, [sp, #4]
 8003036:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8003038:	f44f 7180 	mov.w	r1, #256	; 0x100
 800303c:	2312      	movs	r3, #18
 800303e:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8003042:	2002      	movs	r0, #2
 8003044:	2304      	movs	r3, #4
 8003046:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800304a:	a903      	add	r1, sp, #12
 800304c:	481d      	ldr	r0, [pc, #116]	; (80030c4 <I2C1_Init+0xd0>)
 800304e:	f001 fb69 	bl	8004724 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8003052:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003056:	a903      	add	r1, sp, #12
 8003058:	481a      	ldr	r0, [pc, #104]	; (80030c4 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800305a:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800305c:	f001 fb62 	bl	8004724 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8003060:	9402      	str	r4, [sp, #8]
 8003062:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003064:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003068:	6433      	str	r3, [r6, #64]	; 0x40
 800306a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800306c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003070:	9302      	str	r3, [sp, #8]
 8003072:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8003074:	6a33      	ldr	r3, [r6, #32]
 8003076:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800307a:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 800307c:	6a33      	ldr	r3, [r6, #32]
 800307e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8003082:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8003084:	4622      	mov	r2, r4
 8003086:	2105      	movs	r1, #5
 8003088:	201f      	movs	r0, #31
 800308a:	f000 fd15 	bl	8003ab8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 800308e:	201f      	movs	r0, #31
 8003090:	f000 fd44 	bl	8003b1c <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8003094:	4622      	mov	r2, r4
 8003096:	2105      	movs	r1, #5
 8003098:	2020      	movs	r0, #32
 800309a:	f000 fd0d 	bl	8003ab8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 800309e:	2020      	movs	r0, #32
 80030a0:	f000 fd3c 	bl	8003b1c <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 80030a4:	4628      	mov	r0, r5
  }
}
 80030a6:	b008      	add	sp, #32
 80030a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 80030ac:	f001 beb2 	b.w	8004e14 <HAL_I2C_Init>
}
 80030b0:	b008      	add	sp, #32
 80030b2:	bd70      	pop	{r4, r5, r6, pc}
 80030b4:	200015b0 	.word	0x200015b0
 80030b8:	40005400 	.word	0x40005400
 80030bc:	00061a80 	.word	0x00061a80
 80030c0:	40023800 	.word	0x40023800
 80030c4:	40020400 	.word	0x40020400

080030c8 <BSP_PB_Init>:
{
 80030c8:	b510      	push	{r4, lr}
 80030ca:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 80030cc:	4b19      	ldr	r3, [pc, #100]	; (8003134 <BSP_PB_Init+0x6c>)
 80030ce:	2400      	movs	r4, #0
 80030d0:	9400      	str	r4, [sp, #0]
 80030d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80030d4:	f042 0201 	orr.w	r2, r2, #1
 80030d8:	631a      	str	r2, [r3, #48]	; 0x30
 80030da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80030dc:	f003 0301 	and.w	r3, r3, #1
 80030e0:	9300      	str	r3, [sp, #0]
 80030e2:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 80030e4:	b969      	cbnz	r1, 8003102 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80030e6:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 80030e8:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 80030ec:	2302      	movs	r3, #2
 80030ee:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80030f0:	4b11      	ldr	r3, [pc, #68]	; (8003138 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 80030f2:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80030f4:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80030f8:	a901      	add	r1, sp, #4
 80030fa:	f001 fb13 	bl	8004724 <HAL_GPIO_Init>
}
 80030fe:	b006      	add	sp, #24
 8003100:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8003102:	2901      	cmp	r1, #1
 8003104:	d1fb      	bne.n	80030fe <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003106:	2302      	movs	r3, #2
 8003108:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800310a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800310e:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003110:	4b09      	ldr	r3, [pc, #36]	; (8003138 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003112:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003114:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003118:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800311a:	a901      	add	r1, sp, #4
 800311c:	f001 fb02 	bl	8004724 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8003120:	4622      	mov	r2, r4
 8003122:	210f      	movs	r1, #15
 8003124:	2006      	movs	r0, #6
 8003126:	f000 fcc7 	bl	8003ab8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 800312a:	2006      	movs	r0, #6
 800312c:	f000 fcf6 	bl	8003b1c <HAL_NVIC_EnableIRQ>
}
 8003130:	e7e5      	b.n	80030fe <BSP_PB_Init+0x36>
 8003132:	bf00      	nop
 8003134:	40023800 	.word	0x40023800
 8003138:	20000048 	.word	0x20000048

0800313c <BSP_PB_GetState>:
{
 800313c:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 800313e:	4b03      	ldr	r3, [pc, #12]	; (800314c <BSP_PB_GetState+0x10>)
 8003140:	2101      	movs	r1, #1
 8003142:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003146:	f001 fc75 	bl	8004a34 <HAL_GPIO_ReadPin>
}
 800314a:	bd08      	pop	{r3, pc}
 800314c:	20000048 	.word	0x20000048

08003150 <TS_IO_Init>:
 8003150:	f7ff bf50 	b.w	8002ff4 <I2C1_Init>

08003154 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8003154:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8003156:	2301      	movs	r3, #1
 8003158:	f88d 2017 	strb.w	r2, [sp, #23]
 800315c:	2264      	movs	r2, #100	; 0x64
 800315e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003162:	f10d 0217 	add.w	r2, sp, #23
 8003166:	9200      	str	r2, [sp, #0]
 8003168:	460a      	mov	r2, r1
 800316a:	4601      	mov	r1, r0
 800316c:	4805      	ldr	r0, [pc, #20]	; (8003184 <TS_IO_Write+0x30>)
 800316e:	f001 ff13 	bl	8004f98 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8003172:	b120      	cbz	r0, 800317e <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 8003174:	4803      	ldr	r0, [pc, #12]	; (8003184 <TS_IO_Write+0x30>)
 8003176:	f001 fef5 	bl	8004f64 <HAL_I2C_DeInit>
  I2C1_Init();
 800317a:	f7ff ff3b 	bl	8002ff4 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 800317e:	b007      	add	sp, #28
 8003180:	f85d fb04 	ldr.w	pc, [sp], #4
 8003184:	200015b0 	.word	0x200015b0

08003188 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8003188:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 800318a:	2300      	movs	r3, #0
{
 800318c:	460a      	mov	r2, r1
  uint8_t Value = 0;
 800318e:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8003192:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003196:	2301      	movs	r3, #1
 8003198:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800319c:	f10d 0117 	add.w	r1, sp, #23
 80031a0:	9100      	str	r1, [sp, #0]
 80031a2:	4601      	mov	r1, r0
 80031a4:	4806      	ldr	r0, [pc, #24]	; (80031c0 <TS_IO_Read+0x38>)
 80031a6:	f001 ff87 	bl	80050b8 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80031aa:	b120      	cbz	r0, 80031b6 <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 80031ac:	4804      	ldr	r0, [pc, #16]	; (80031c0 <TS_IO_Read+0x38>)
 80031ae:	f001 fed9 	bl	8004f64 <HAL_I2C_DeInit>
  I2C1_Init();
 80031b2:	f7ff ff1f 	bl	8002ff4 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 80031b6:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80031ba:	b007      	add	sp, #28
 80031bc:	f85d fb04 	ldr.w	pc, [sp], #4
 80031c0:	200015b0 	.word	0x200015b0

080031c4 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 80031c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80031c6:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80031ca:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80031ce:	9200      	str	r2, [sp, #0]
 80031d0:	2301      	movs	r3, #1
 80031d2:	460a      	mov	r2, r1
 80031d4:	4601      	mov	r1, r0
 80031d6:	4806      	ldr	r0, [pc, #24]	; (80031f0 <TS_IO_ReadMultiple+0x2c>)
 80031d8:	f001 ff6e 	bl	80050b8 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80031dc:	4604      	mov	r4, r0
 80031de:	b120      	cbz	r0, 80031ea <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 80031e0:	4803      	ldr	r0, [pc, #12]	; (80031f0 <TS_IO_ReadMultiple+0x2c>)
 80031e2:	f001 febf 	bl	8004f64 <HAL_I2C_DeInit>
  I2C1_Init();
 80031e6:	f7ff ff05 	bl	8002ff4 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 80031ea:	b2a0      	uxth	r0, r4
 80031ec:	b004      	add	sp, #16
 80031ee:	bd10      	pop	{r4, pc}
 80031f0:	200015b0 	.word	0x200015b0

080031f4 <OTM8009A_IO_Delay>:
 80031f4:	f000 bc3a 	b.w	8003a6c <HAL_Delay>

080031f8 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80031f8:	b500      	push	{lr}
 80031fa:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80031fc:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003200:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003202:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8003206:	2205      	movs	r2, #5
 8003208:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800320a:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800320c:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 800320e:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8003210:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003214:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003218:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 800321c:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800321e:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003220:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8003222:	2210      	movs	r2, #16
 8003224:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003226:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800322a:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 800322c:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800322e:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003230:	a906      	add	r1, sp, #24
 8003232:	466a      	mov	r2, sp
 8003234:	4804      	ldr	r0, [pc, #16]	; (8003248 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8003236:	f002 fbc0 	bl	80059ba <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 800323a:	3800      	subs	r0, #0
 800323c:	bf18      	it	ne
 800323e:	2001      	movne	r0, #1
 8003240:	b015      	add	sp, #84	; 0x54
 8003242:	f85d fb04 	ldr.w	pc, [sp], #4
 8003246:	bf00      	nop
 8003248:	20001604 	.word	0x20001604

0800324c <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 800324c:	b500      	push	{lr}
 800324e:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003250:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003254:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8003256:	2306      	movs	r3, #6
 8003258:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800325a:	4817      	ldr	r0, [pc, #92]	; (80032b8 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 800325c:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800325e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003262:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003264:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003268:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 800326c:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 800326e:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003270:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003272:	f002 fb5e 	bl	8005932 <HAL_QSPI_Command>
 8003276:	b9e0      	cbnz	r0, 80032b2 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8003278:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 800327a:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 800327e:	2201      	movs	r2, #1
 8003280:	2310      	movs	r3, #16
 8003282:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8003286:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800328a:	2305      	movs	r3, #5
 800328c:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003290:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003294:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003296:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003298:	4807      	ldr	r0, [pc, #28]	; (80032b8 <QSPI_WriteEnable.constprop.0+0x6c>)
 800329a:	f241 3388 	movw	r3, #5000	; 0x1388
 800329e:	466a      	mov	r2, sp
 80032a0:	a906      	add	r1, sp, #24
 80032a2:	f002 fb8a 	bl	80059ba <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 80032a6:	3800      	subs	r0, #0
 80032a8:	bf18      	it	ne
 80032aa:	2001      	movne	r0, #1
}
 80032ac:	b015      	add	sp, #84	; 0x54
 80032ae:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80032b2:	2001      	movs	r0, #1
 80032b4:	e7fa      	b.n	80032ac <QSPI_WriteEnable.constprop.0+0x60>
 80032b6:	bf00      	nop
 80032b8:	20001604 	.word	0x20001604

080032bc <BSP_QSPI_EnableMemoryMappedMode>:
{
 80032bc:	b500      	push	{lr}
 80032be:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80032c0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80032c4:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 80032c6:	23eb      	movs	r3, #235	; 0xeb
 80032c8:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 80032ca:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 80032ce:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 80032d0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80032d4:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 80032d6:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 80032da:	2300      	movs	r3, #0
 80032dc:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 80032e0:	220a      	movs	r2, #10
 80032e2:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80032e4:	a902      	add	r1, sp, #8
 80032e6:	466a      	mov	r2, sp
 80032e8:	4806      	ldr	r0, [pc, #24]	; (8003304 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80032ea:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80032ec:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 80032f0:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 80032f2:	f002 fbb2 	bl	8005a5a <HAL_QSPI_MemoryMapped>
}
 80032f6:	3800      	subs	r0, #0
 80032f8:	bf18      	it	ne
 80032fa:	2001      	movne	r0, #1
 80032fc:	b011      	add	sp, #68	; 0x44
 80032fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8003302:	bf00      	nop
 8003304:	20001604 	.word	0x20001604

08003308 <BSP_QSPI_MspInit>:
{
 8003308:	b570      	push	{r4, r5, r6, lr}
 800330a:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 800330c:	4b2c      	ldr	r3, [pc, #176]	; (80033c0 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800330e:	482d      	ldr	r0, [pc, #180]	; (80033c4 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8003310:	2400      	movs	r4, #0
 8003312:	9400      	str	r4, [sp, #0]
 8003314:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003316:	f042 0202 	orr.w	r2, r2, #2
 800331a:	639a      	str	r2, [r3, #56]	; 0x38
 800331c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800331e:	f002 0202 	and.w	r2, r2, #2
 8003322:	9200      	str	r2, [sp, #0]
 8003324:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8003326:	699a      	ldr	r2, [r3, #24]
 8003328:	f042 0202 	orr.w	r2, r2, #2
 800332c:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 800332e:	699a      	ldr	r2, [r3, #24]
 8003330:	f022 0202 	bic.w	r2, r2, #2
 8003334:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8003336:	9401      	str	r4, [sp, #4]
 8003338:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800333a:	f042 0202 	orr.w	r2, r2, #2
 800333e:	631a      	str	r2, [r3, #48]	; 0x30
 8003340:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003342:	f002 0202 	and.w	r2, r2, #2
 8003346:	9201      	str	r2, [sp, #4]
 8003348:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800334a:	9402      	str	r4, [sp, #8]
 800334c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800334e:	f042 0220 	orr.w	r2, r2, #32
 8003352:	631a      	str	r2, [r3, #48]	; 0x30
 8003354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003356:	f003 0320 	and.w	r3, r3, #32
 800335a:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 800335c:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800335e:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003360:	2302      	movs	r3, #2
 8003362:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8003366:	2101      	movs	r1, #1
 8003368:	2303      	movs	r3, #3
 800336a:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800336e:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003370:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003372:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003374:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003376:	f001 f9d5 	bl	8004724 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800337a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800337e:	a903      	add	r1, sp, #12
 8003380:	4811      	ldr	r0, [pc, #68]	; (80033c8 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003382:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8003384:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003386:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003388:	f001 f9cc 	bl	8004724 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 800338c:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003390:	a903      	add	r1, sp, #12
 8003392:	480d      	ldr	r0, [pc, #52]	; (80033c8 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003394:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003396:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003398:	f001 f9c4 	bl	8004724 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800339c:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800339e:	a903      	add	r1, sp, #12
 80033a0:	4809      	ldr	r0, [pc, #36]	; (80033c8 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80033a2:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80033a4:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80033a6:	f001 f9bd 	bl	8004724 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80033aa:	4622      	mov	r2, r4
 80033ac:	210f      	movs	r1, #15
 80033ae:	205b      	movs	r0, #91	; 0x5b
 80033b0:	f000 fb82 	bl	8003ab8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80033b4:	205b      	movs	r0, #91	; 0x5b
 80033b6:	f000 fbb1 	bl	8003b1c <HAL_NVIC_EnableIRQ>
}
 80033ba:	b008      	add	sp, #32
 80033bc:	bd70      	pop	{r4, r5, r6, pc}
 80033be:	bf00      	nop
 80033c0:	40023800 	.word	0x40023800
 80033c4:	40020400 	.word	0x40020400
 80033c8:	40021400 	.word	0x40021400

080033cc <BSP_QSPI_Init>:
{
 80033cc:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 80033ce:	4c48      	ldr	r4, [pc, #288]	; (80034f0 <BSP_QSPI_Init+0x124>)
 80033d0:	4b48      	ldr	r3, [pc, #288]	; (80034f4 <BSP_QSPI_Init+0x128>)
 80033d2:	6023      	str	r3, [r4, #0]
{
 80033d4:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80033d6:	4620      	mov	r0, r4
 80033d8:	f002 fa98 	bl	800590c <HAL_QSPI_DeInit>
 80033dc:	4605      	mov	r5, r0
 80033de:	b110      	cbz	r0, 80033e6 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 80033e0:	2001      	movs	r0, #1
}
 80033e2:	b011      	add	sp, #68	; 0x44
 80033e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 80033e6:	4601      	mov	r1, r0
 80033e8:	4620      	mov	r0, r4
 80033ea:	f7ff ff8d 	bl	8003308 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 80033ee:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80033f0:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 80033f2:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80033f6:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80033f8:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 80033fc:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003400:	fab3 f383 	clz	r3, r3
 8003404:	3b01      	subs	r3, #1
 8003406:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003408:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800340a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 800340e:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8003412:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003416:	f002 fa25 	bl	8005864 <HAL_QSPI_Init>
 800341a:	2800      	cmp	r0, #0
 800341c:	d1e0      	bne.n	80033e0 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 800341e:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003422:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003426:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 800342a:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 800342c:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 800342e:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003430:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003432:	f241 3288 	movw	r2, #5000	; 0x1388
 8003436:	a902      	add	r1, sp, #8
 8003438:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800343a:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 800343c:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800343e:	f002 fa78 	bl	8005932 <HAL_QSPI_Command>
 8003442:	b108      	cbz	r0, 8003448 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8003444:	2004      	movs	r0, #4
 8003446:	e7cc      	b.n	80033e2 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8003448:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800344a:	f241 3288 	movw	r2, #5000	; 0x1388
 800344e:	a902      	add	r1, sp, #8
 8003450:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8003452:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003454:	f002 fa6d 	bl	8005932 <HAL_QSPI_Command>
 8003458:	2800      	cmp	r0, #0
 800345a:	d1f3      	bne.n	8003444 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 800345c:	f241 3088 	movw	r0, #5000	; 0x1388
 8003460:	f7ff feca 	bl	80031f8 <QSPI_AutoPollingMemReady.constprop.0>
 8003464:	2800      	cmp	r0, #0
 8003466:	d1ed      	bne.n	8003444 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003468:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 800346c:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003470:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003474:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8003476:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003478:	f241 3288 	movw	r2, #5000	; 0x1388
 800347c:	a902      	add	r1, sp, #8
 800347e:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003480:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003482:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003484:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003486:	f002 fa54 	bl	8005932 <HAL_QSPI_Command>
 800348a:	2800      	cmp	r0, #0
 800348c:	d1da      	bne.n	8003444 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800348e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003492:	f10d 0107 	add.w	r1, sp, #7
 8003496:	4620      	mov	r0, r4
 8003498:	f002 fbc4 	bl	8005c24 <HAL_QSPI_Receive>
 800349c:	2800      	cmp	r0, #0
 800349e:	d1d1      	bne.n	8003444 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80034a0:	f7ff fed4 	bl	800324c <QSPI_WriteEnable.constprop.0>
 80034a4:	2800      	cmp	r0, #0
 80034a6:	d1cd      	bne.n	8003444 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 80034a8:	2381      	movs	r3, #129	; 0x81
 80034aa:	9302      	str	r3, [sp, #8]
 80034ac:	22f0      	movs	r2, #240	; 0xf0
 80034ae:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80034b2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80034b6:	210a      	movs	r1, #10
 80034b8:	fab2 f282 	clz	r2, r2
 80034bc:	fa01 f202 	lsl.w	r2, r1, r2
 80034c0:	f003 030f 	and.w	r3, r3, #15
 80034c4:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80034c6:	a902      	add	r1, sp, #8
 80034c8:	f241 3288 	movw	r2, #5000	; 0x1388
 80034cc:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80034ce:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80034d2:	f002 fa2e 	bl	8005932 <HAL_QSPI_Command>
 80034d6:	2800      	cmp	r0, #0
 80034d8:	d1b4      	bne.n	8003444 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80034da:	f241 3288 	movw	r2, #5000	; 0x1388
 80034de:	f10d 0107 	add.w	r1, sp, #7
 80034e2:	4620      	mov	r0, r4
 80034e4:	f002 fb42 	bl	8005b6c <HAL_QSPI_Transmit>
 80034e8:	2800      	cmp	r0, #0
 80034ea:	f43f af7a 	beq.w	80033e2 <BSP_QSPI_Init+0x16>
 80034ee:	e7a9      	b.n	8003444 <BSP_QSPI_Init+0x78>
 80034f0:	20001604 	.word	0x20001604
 80034f4:	a0001000 	.word	0xa0001000

080034f8 <BSP_QSPI_MspDeInit>:
{
 80034f8:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 80034fa:	205b      	movs	r0, #91	; 0x5b
 80034fc:	f000 fb1c 	bl	8003b38 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8003500:	4814      	ldr	r0, [pc, #80]	; (8003554 <BSP_QSPI_MspDeInit+0x5c>)
 8003502:	2140      	movs	r1, #64	; 0x40
 8003504:	f001 f9f4 	bl	80048f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8003508:	4813      	ldr	r0, [pc, #76]	; (8003558 <BSP_QSPI_MspDeInit+0x60>)
 800350a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800350e:	f001 f9ef 	bl	80048f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8003512:	4811      	ldr	r0, [pc, #68]	; (8003558 <BSP_QSPI_MspDeInit+0x60>)
 8003514:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003518:	f001 f9ea 	bl	80048f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 800351c:	480e      	ldr	r0, [pc, #56]	; (8003558 <BSP_QSPI_MspDeInit+0x60>)
 800351e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003522:	f001 f9e5 	bl	80048f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 8003526:	480c      	ldr	r0, [pc, #48]	; (8003558 <BSP_QSPI_MspDeInit+0x60>)
 8003528:	2180      	movs	r1, #128	; 0x80
 800352a:	f001 f9e1 	bl	80048f0 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 800352e:	480a      	ldr	r0, [pc, #40]	; (8003558 <BSP_QSPI_MspDeInit+0x60>)
 8003530:	2140      	movs	r1, #64	; 0x40
 8003532:	f001 f9dd 	bl	80048f0 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 8003536:	4b09      	ldr	r3, [pc, #36]	; (800355c <BSP_QSPI_MspDeInit+0x64>)
 8003538:	699a      	ldr	r2, [r3, #24]
 800353a:	f042 0202 	orr.w	r2, r2, #2
 800353e:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003540:	699a      	ldr	r2, [r3, #24]
 8003542:	f022 0202 	bic.w	r2, r2, #2
 8003546:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8003548:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800354a:	f022 0202 	bic.w	r2, r2, #2
 800354e:	639a      	str	r2, [r3, #56]	; 0x38
}
 8003550:	bd08      	pop	{r3, pc}
 8003552:	bf00      	nop
 8003554:	40020400 	.word	0x40020400
 8003558:	40021400 	.word	0x40021400
 800355c:	40023800 	.word	0x40023800

08003560 <BSP_QSPI_DeInit>:
{
 8003560:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 8003562:	4d08      	ldr	r5, [pc, #32]	; (8003584 <BSP_QSPI_DeInit+0x24>)
 8003564:	4b08      	ldr	r3, [pc, #32]	; (8003588 <BSP_QSPI_DeInit+0x28>)
 8003566:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003568:	4628      	mov	r0, r5
 800356a:	f002 f9cf 	bl	800590c <HAL_QSPI_DeInit>
 800356e:	4604      	mov	r4, r0
 8003570:	b928      	cbnz	r0, 800357e <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 8003572:	4601      	mov	r1, r0
 8003574:	4628      	mov	r0, r5
 8003576:	f7ff ffbf 	bl	80034f8 <BSP_QSPI_MspDeInit>
}
 800357a:	4620      	mov	r0, r4
 800357c:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 800357e:	2401      	movs	r4, #1
 8003580:	e7fb      	b.n	800357a <BSP_QSPI_DeInit+0x1a>
 8003582:	bf00      	nop
 8003584:	20001604 	.word	0x20001604
 8003588:	a0001000 	.word	0xa0001000

0800358c <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 800358c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8003590:	4c21      	ldr	r4, [pc, #132]	; (8003618 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003592:	4d22      	ldr	r5, [pc, #136]	; (800361c <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003594:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 8003596:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800359a:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800359c:	4621      	mov	r1, r4
{
 800359e:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80035a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80035a4:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80035a6:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80035aa:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 80035ae:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80035b2:	f002 ffdb 	bl	800656c <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 80035b6:	4630      	mov	r0, r6
 80035b8:	f000 fa58 	bl	8003a6c <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 80035bc:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80035be:	4621      	mov	r1, r4
 80035c0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80035c4:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80035c6:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80035ca:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80035ce:	f002 ffcd 	bl	800656c <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80035d2:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80035d4:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80035d8:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 80035da:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80035dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80035e0:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 80035e2:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80035e6:	f002 ffc1 	bl	800656c <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 80035ea:	f44f 730c 	mov.w	r3, #560	; 0x230
 80035ee:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 80035f0:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80035f2:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80035f6:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 80035f8:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 80035fa:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80035fc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003600:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8003602:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003604:	f002 ffb2 	bl	800656c <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003608:	4649      	mov	r1, r9
 800360a:	4628      	mov	r0, r5
}
 800360c:	b003      	add	sp, #12
 800360e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003612:	f002 bfc9 	b.w	80065a8 <HAL_SDRAM_ProgramRefreshRate>
 8003616:	bf00      	nop
 8003618:	20001650 	.word	0x20001650
 800361c:	2000173c 	.word	0x2000173c

08003620 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003620:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003622:	4606      	mov	r6, r0
{
 8003624:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003626:	2800      	cmp	r0, #0
 8003628:	f000 80bd 	beq.w	80037a6 <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 800362c:	4b5f      	ldr	r3, [pc, #380]	; (80037ac <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800362e:	4860      	ldr	r0, [pc, #384]	; (80037b0 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003630:	4c60      	ldr	r4, [pc, #384]	; (80037b4 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8003632:	2500      	movs	r5, #0
 8003634:	9500      	str	r5, [sp, #0]
 8003636:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003638:	f042 0201 	orr.w	r2, r2, #1
 800363c:	639a      	str	r2, [r3, #56]	; 0x38
 800363e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003640:	f002 0201 	and.w	r2, r2, #1
 8003644:	9200      	str	r2, [sp, #0]
 8003646:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8003648:	9501      	str	r5, [sp, #4]
 800364a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800364c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8003650:	631a      	str	r2, [r3, #48]	; 0x30
 8003652:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003654:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8003658:	9201      	str	r2, [sp, #4]
 800365a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800365c:	9502      	str	r5, [sp, #8]
 800365e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003660:	f042 0204 	orr.w	r2, r2, #4
 8003664:	631a      	str	r2, [r3, #48]	; 0x30
 8003666:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003668:	f002 0204 	and.w	r2, r2, #4
 800366c:	9202      	str	r2, [sp, #8]
 800366e:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003670:	9503      	str	r5, [sp, #12]
 8003672:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003674:	f042 0208 	orr.w	r2, r2, #8
 8003678:	631a      	str	r2, [r3, #48]	; 0x30
 800367a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800367c:	f002 0208 	and.w	r2, r2, #8
 8003680:	9203      	str	r2, [sp, #12]
 8003682:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8003684:	9504      	str	r5, [sp, #16]
 8003686:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003688:	f042 0210 	orr.w	r2, r2, #16
 800368c:	631a      	str	r2, [r3, #48]	; 0x30
 800368e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003690:	f002 0210 	and.w	r2, r2, #16
 8003694:	9204      	str	r2, [sp, #16]
 8003696:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8003698:	9505      	str	r5, [sp, #20]
 800369a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800369c:	f042 0220 	orr.w	r2, r2, #32
 80036a0:	631a      	str	r2, [r3, #48]	; 0x30
 80036a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80036a4:	f002 0220 	and.w	r2, r2, #32
 80036a8:	9205      	str	r2, [sp, #20]
 80036aa:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80036ac:	9506      	str	r5, [sp, #24]
 80036ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80036b0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80036b4:	631a      	str	r2, [r3, #48]	; 0x30
 80036b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80036b8:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80036bc:	9206      	str	r2, [sp, #24]
 80036be:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 80036c0:	9507      	str	r5, [sp, #28]
 80036c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80036c4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80036c8:	631a      	str	r2, [r3, #48]	; 0x30
 80036ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80036cc:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80036d0:	9207      	str	r2, [sp, #28]
 80036d2:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80036d4:	9508      	str	r5, [sp, #32]
 80036d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80036d8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80036dc:	631a      	str	r2, [r3, #48]	; 0x30
 80036de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80036e0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80036e4:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 80036e6:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80036e8:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 80036ea:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 80036ec:	2301      	movs	r3, #1
 80036ee:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80036f2:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 80036f4:	220c      	movs	r2, #12
 80036f6:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 80036f8:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80036fa:	f001 f813 	bl	8004724 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 80036fe:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003702:	482d      	ldr	r0, [pc, #180]	; (80037b8 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003704:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003706:	a909      	add	r1, sp, #36	; 0x24
 8003708:	f001 f80c 	bl	8004724 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800370c:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003710:	482a      	ldr	r0, [pc, #168]	; (80037bc <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003712:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003714:	a909      	add	r1, sp, #36	; 0x24
 8003716:	f001 f805 	bl	8004724 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800371a:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800371e:	4828      	ldr	r0, [pc, #160]	; (80037c0 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003720:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003722:	a909      	add	r1, sp, #36	; 0x24
 8003724:	f000 fffe 	bl	8004724 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003728:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800372c:	4825      	ldr	r0, [pc, #148]	; (80037c4 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800372e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003730:	a909      	add	r1, sp, #36	; 0x24
 8003732:	f000 fff7 	bl	8004724 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003736:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800373a:	4823      	ldr	r0, [pc, #140]	; (80037c8 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800373c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800373e:	a909      	add	r1, sp, #36	; 0x24
 8003740:	f000 fff0 	bl	8004724 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003744:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003748:	4820      	ldr	r0, [pc, #128]	; (80037cc <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800374a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800374c:	a909      	add	r1, sp, #36	; 0x24
 800374e:	f000 ffe9 	bl	8004724 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8003752:	2280      	movs	r2, #128	; 0x80
 8003754:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003758:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 800375c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003760:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003764:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8003768:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 800376c:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8003770:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8003774:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8003778:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 800377a:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 800377e:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003780:	4b13      	ldr	r3, [pc, #76]	; (80037d0 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8003782:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8003784:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003786:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003788:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800378a:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 800378c:	f000 fa8e 	bl	8003cac <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8003790:	4620      	mov	r0, r4
 8003792:	f000 fa0b 	bl	8003bac <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8003796:	2038      	movs	r0, #56	; 0x38
 8003798:	462a      	mov	r2, r5
 800379a:	2105      	movs	r1, #5
 800379c:	f000 f98c 	bl	8003ab8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 80037a0:	2038      	movs	r0, #56	; 0x38
 80037a2:	f000 f9bb 	bl	8003b1c <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80037a6:	b00e      	add	sp, #56	; 0x38
 80037a8:	bd70      	pop	{r4, r5, r6, pc}
 80037aa:	bf00      	nop
 80037ac:	40023800 	.word	0x40023800
 80037b0:	40020800 	.word	0x40020800
 80037b4:	200016dc 	.word	0x200016dc
 80037b8:	40020c00 	.word	0x40020c00
 80037bc:	40021000 	.word	0x40021000
 80037c0:	40021400 	.word	0x40021400
 80037c4:	40021800 	.word	0x40021800
 80037c8:	40021c00 	.word	0x40021c00
 80037cc:	40022000 	.word	0x40022000
 80037d0:	40026410 	.word	0x40026410

080037d4 <BSP_SDRAM_Init>:
{
 80037d4:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80037d6:	4c19      	ldr	r4, [pc, #100]	; (800383c <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 80037d8:	4d19      	ldr	r5, [pc, #100]	; (8003840 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80037da:	4b1a      	ldr	r3, [pc, #104]	; (8003844 <BSP_SDRAM_Init+0x70>)
 80037dc:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 80037de:	2107      	movs	r1, #7
 80037e0:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 80037e2:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 80037e4:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 80037e8:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 80037ec:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 80037f0:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 80037f2:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80037f4:	2340      	movs	r3, #64	; 0x40
 80037f6:	2220      	movs	r2, #32
 80037f8:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 80037fc:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 80037fe:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8003802:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8003806:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800380a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800380e:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003812:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8003814:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8003818:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800381a:	f7ff ff01 	bl	8003620 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 800381e:	4629      	mov	r1, r5
 8003820:	4620      	mov	r0, r4
 8003822:	f002 fe75 	bl	8006510 <HAL_SDRAM_Init>
 8003826:	4c08      	ldr	r4, [pc, #32]	; (8003848 <BSP_SDRAM_Init+0x74>)
 8003828:	3800      	subs	r0, #0
 800382a:	bf18      	it	ne
 800382c:	2001      	movne	r0, #1
 800382e:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8003830:	f240 5069 	movw	r0, #1385	; 0x569
 8003834:	f7ff feaa 	bl	800358c <BSP_SDRAM_Initialization_sequence>
}
 8003838:	7820      	ldrb	r0, [r4, #0]
 800383a:	bd38      	pop	{r3, r4, r5, pc}
 800383c:	2000173c 	.word	0x2000173c
 8003840:	20001660 	.word	0x20001660
 8003844:	a0000140 	.word	0xa0000140
 8003848:	2000004d 	.word	0x2000004d

0800384c <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 800384c:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800384e:	b148      	cbz	r0, 8003864 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8003850:	2038      	movs	r0, #56	; 0x38
 8003852:	f000 f971 	bl	8003b38 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8003856:	4804      	ldr	r0, [pc, #16]	; (8003868 <BSP_SDRAM_MspDeInit+0x1c>)
 8003858:	4b04      	ldr	r3, [pc, #16]	; (800386c <BSP_SDRAM_MspDeInit+0x20>)
 800385a:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800385c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8003860:	f000 ba24 	b.w	8003cac <HAL_DMA_DeInit>
}
 8003864:	bd08      	pop	{r3, pc}
 8003866:	bf00      	nop
 8003868:	2000167c 	.word	0x2000167c
 800386c:	40026410 	.word	0x40026410

08003870 <BSP_SDRAM_DeInit>:
{
 8003870:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8003872:	4c07      	ldr	r4, [pc, #28]	; (8003890 <BSP_SDRAM_DeInit+0x20>)
 8003874:	4b07      	ldr	r3, [pc, #28]	; (8003894 <BSP_SDRAM_DeInit+0x24>)
 8003876:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8003878:	4620      	mov	r0, r4
 800387a:	f002 fe69 	bl	8006550 <HAL_SDRAM_DeInit>
 800387e:	4d06      	ldr	r5, [pc, #24]	; (8003898 <BSP_SDRAM_DeInit+0x28>)
 8003880:	4601      	mov	r1, r0
 8003882:	b918      	cbnz	r0, 800388c <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8003884:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8003886:	4620      	mov	r0, r4
 8003888:	f7ff ffe0 	bl	800384c <BSP_SDRAM_MspDeInit>
}
 800388c:	7828      	ldrb	r0, [r5, #0]
 800388e:	bd38      	pop	{r3, r4, r5, pc}
 8003890:	2000173c 	.word	0x2000173c
 8003894:	a0000140 	.word	0xa0000140
 8003898:	2000004c 	.word	0x2000004c

0800389c <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 800389c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 80038a0:	4d16      	ldr	r5, [pc, #88]	; (80038fc <BSP_TS_Init+0x60>)
 80038a2:	4c17      	ldr	r4, [pc, #92]	; (8003900 <BSP_TS_Init+0x64>)
 80038a4:	682b      	ldr	r3, [r5, #0]
{
 80038a6:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 80038a8:	7820      	ldrb	r0, [r4, #0]
{
 80038aa:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 80038ac:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 80038ae:	686b      	ldr	r3, [r5, #4]
 80038b0:	2054      	movs	r0, #84	; 0x54
 80038b2:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 80038b4:	b2c0      	uxtb	r0, r0
 80038b6:	2811      	cmp	r0, #17
 80038b8:	d00a      	beq.n	80038d0 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 80038ba:	686b      	ldr	r3, [r5, #4]
 80038bc:	2070      	movs	r0, #112	; 0x70
 80038be:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80038c0:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 80038c2:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80038c4:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 80038c6:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80038c8:	d004      	beq.n	80038d4 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 80038ca:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 80038cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 80038d0:	2354      	movs	r3, #84	; 0x54
 80038d2:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 80038d4:	4b0b      	ldr	r3, [pc, #44]	; (8003904 <BSP_TS_Init+0x68>)
 80038d6:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8003908 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 80038da:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 80038dc:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 80038e0:	42be      	cmp	r6, r7
 80038e2:	bf34      	ite	cc
 80038e4:	2601      	movcc	r6, #1
 80038e6:	260c      	movcs	r6, #12
 80038e8:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 80038ea:	68ab      	ldr	r3, [r5, #8]
 80038ec:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 80038ee:	f8d8 3000 	ldr.w	r3, [r8]
 80038f2:	7820      	ldrb	r0, [r4, #0]
 80038f4:	68db      	ldr	r3, [r3, #12]
 80038f6:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 80038f8:	2000      	movs	r0, #0
 80038fa:	e7e7      	b.n	80038cc <BSP_TS_Init+0x30>
 80038fc:	20000020 	.word	0x20000020
 8003900:	20001770 	.word	0x20001770
 8003904:	20001788 	.word	0x20001788
 8003908:	20001784 	.word	0x20001784

0800390c <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 800390c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003910:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 80039f0 <BSP_TS_GetState+0xe4>
 8003914:	4a33      	ldr	r2, [pc, #204]	; (80039e4 <BSP_TS_GetState+0xd8>)
 8003916:	f8db 3000 	ldr.w	r3, [fp]
{
 800391a:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800391c:	691b      	ldr	r3, [r3, #16]
 800391e:	7810      	ldrb	r0, [r2, #0]
{
 8003920:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003922:	4798      	blx	r3
 8003924:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8003926:	b158      	cbz	r0, 8003940 <BSP_TS_GetState+0x34>
 8003928:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80039f4 <BSP_TS_GetState+0xe8>
 800392c:	4f2e      	ldr	r7, [pc, #184]	; (80039e8 <BSP_TS_GetState+0xdc>)
 800392e:	f106 0a02 	add.w	sl, r6, #2
 8003932:	ad03      	add	r5, sp, #12
 8003934:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8003936:	f04f 0900 	mov.w	r9, #0
 800393a:	7833      	ldrb	r3, [r6, #0]
 800393c:	454b      	cmp	r3, r9
 800393e:	d803      	bhi.n	8003948 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8003940:	2000      	movs	r0, #0
 8003942:	b005      	add	sp, #20
 8003944:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8003948:	f8db 3000 	ldr.w	r3, [fp]
 800394c:	4825      	ldr	r0, [pc, #148]	; (80039e4 <BSP_TS_GetState+0xd8>)
 800394e:	695b      	ldr	r3, [r3, #20]
 8003950:	7800      	ldrb	r0, [r0, #0]
 8003952:	9101      	str	r1, [sp, #4]
 8003954:	462a      	mov	r2, r5
 8003956:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8003958:	4b24      	ldr	r3, [pc, #144]	; (80039ec <BSP_TS_GetState+0xe0>)
 800395a:	9901      	ldr	r1, [sp, #4]
 800395c:	781b      	ldrb	r3, [r3, #0]
 800395e:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8003962:	bf1f      	itttt	ne
 8003964:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8003966:	8828      	ldrhne	r0, [r5, #0]
 8003968:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 800396a:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 800396c:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 800396e:	bf41      	itttt	mi
 8003970:	880a      	ldrhmi	r2, [r1, #0]
 8003972:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8003976:	3203      	addmi	r2, #3
 8003978:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 800397a:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800397c:	bf48      	it	mi
 800397e:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003980:	f8d8 2000 	ldr.w	r2, [r8]
 8003984:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003988:	bf42      	ittt	mi
 800398a:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 800398e:	3301      	addmi	r3, #1
 8003990:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003992:	b293      	uxth	r3, r2
 8003994:	4290      	cmp	r0, r2
 8003996:	bf8c      	ite	hi
 8003998:	1ac3      	subhi	r3, r0, r3
 800399a:	1a1b      	subls	r3, r3, r0
 800399c:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 800399e:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80039a2:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80039a4:	683b      	ldr	r3, [r7, #0]
 80039a6:	b29c      	uxth	r4, r3
 80039a8:	429a      	cmp	r2, r3
 80039aa:	bf88      	it	hi
 80039ac:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 80039ae:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80039b0:	bf98      	it	ls
 80039b2:	1aa4      	subls	r4, r4, r2
 80039b4:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 80039b6:	441c      	add	r4, r3
 80039b8:	46c4      	mov	ip, r8
 80039ba:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 80039bc:	bfc8      	it	gt
 80039be:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 80039c2:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 80039c6:	bfc8      	it	gt
 80039c8:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 80039ca:	46be      	mov	lr, r7
 80039cc:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 80039d0:	f8de 3000 	ldr.w	r3, [lr]
 80039d4:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 80039d8:	f108 0804 	add.w	r8, r8, #4
 80039dc:	3704      	adds	r7, #4
 80039de:	f109 0901 	add.w	r9, r9, #1
 80039e2:	e7aa      	b.n	800393a <BSP_TS_GetState+0x2e>
 80039e4:	20001770 	.word	0x20001770
 80039e8:	2000177c 	.word	0x2000177c
 80039ec:	20001788 	.word	0x20001788
 80039f0:	20001784 	.word	0x20001784
 80039f4:	20001774 	.word	0x20001774

080039f8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80039f8:	4b05      	ldr	r3, [pc, #20]	; (8003a10 <SystemInit+0x18>)
 80039fa:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80039fe:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003a02:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003a06:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003a0a:	609a      	str	r2, [r3, #8]
#endif
}
 8003a0c:	4770      	bx	lr
 8003a0e:	bf00      	nop
 8003a10:	e000ed00 	.word	0xe000ed00

08003a14 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003a14:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003a16:	4b0b      	ldr	r3, [pc, #44]	; (8003a44 <HAL_Init+0x30>)
 8003a18:	681a      	ldr	r2, [r3, #0]
 8003a1a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003a1e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003a20:	681a      	ldr	r2, [r3, #0]
 8003a22:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003a26:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003a28:	681a      	ldr	r2, [r3, #0]
 8003a2a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003a2e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003a30:	2003      	movs	r0, #3
 8003a32:	f000 f82f 	bl	8003a94 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003a36:	200f      	movs	r0, #15
 8003a38:	f7fe fa2e 	bl	8001e98 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003a3c:	f7fd ffd0 	bl	80019e0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003a40:	2000      	movs	r0, #0
 8003a42:	bd08      	pop	{r3, pc}
 8003a44:	40023c00 	.word	0x40023c00

08003a48 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003a48:	4a03      	ldr	r2, [pc, #12]	; (8003a58 <HAL_IncTick+0x10>)
 8003a4a:	4b04      	ldr	r3, [pc, #16]	; (8003a5c <HAL_IncTick+0x14>)
 8003a4c:	6811      	ldr	r1, [r2, #0]
 8003a4e:	781b      	ldrb	r3, [r3, #0]
 8003a50:	440b      	add	r3, r1
 8003a52:	6013      	str	r3, [r2, #0]
}
 8003a54:	4770      	bx	lr
 8003a56:	bf00      	nop
 8003a58:	2000178c 	.word	0x2000178c
 8003a5c:	20000054 	.word	0x20000054

08003a60 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003a60:	4b01      	ldr	r3, [pc, #4]	; (8003a68 <HAL_GetTick+0x8>)
 8003a62:	6818      	ldr	r0, [r3, #0]
}
 8003a64:	4770      	bx	lr
 8003a66:	bf00      	nop
 8003a68:	2000178c 	.word	0x2000178c

08003a6c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003a6c:	b538      	push	{r3, r4, r5, lr}
 8003a6e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003a70:	f7ff fff6 	bl	8003a60 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003a74:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003a76:	bf1c      	itt	ne
 8003a78:	4b05      	ldrne	r3, [pc, #20]	; (8003a90 <HAL_Delay+0x24>)
 8003a7a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003a7c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003a7e:	bf18      	it	ne
 8003a80:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003a82:	f7ff ffed 	bl	8003a60 <HAL_GetTick>
 8003a86:	1b43      	subs	r3, r0, r5
 8003a88:	42a3      	cmp	r3, r4
 8003a8a:	d3fa      	bcc.n	8003a82 <HAL_Delay+0x16>
  {
  }
}
 8003a8c:	bd38      	pop	{r3, r4, r5, pc}
 8003a8e:	bf00      	nop
 8003a90:	20000054 	.word	0x20000054

08003a94 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003a94:	4907      	ldr	r1, [pc, #28]	; (8003ab4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003a96:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003a98:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003a9c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003a9e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003aa0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003aa4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003aa6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003aa8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003aac:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8003ab0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003ab2:	4770      	bx	lr
 8003ab4:	e000ed00 	.word	0xe000ed00

08003ab8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003ab8:	4b16      	ldr	r3, [pc, #88]	; (8003b14 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003aba:	b530      	push	{r4, r5, lr}
 8003abc:	68dc      	ldr	r4, [r3, #12]
 8003abe:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003ac2:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003ac6:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003ac8:	2d04      	cmp	r5, #4
 8003aca:	bf28      	it	cs
 8003acc:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003ace:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003ad0:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003ad4:	bf8c      	ite	hi
 8003ad6:	3c03      	subhi	r4, #3
 8003ad8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003ada:	fa03 f505 	lsl.w	r5, r3, r5
 8003ade:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003ae2:	40a3      	lsls	r3, r4
 8003ae4:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003ae8:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8003aea:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003aec:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003af0:	bfac      	ite	ge
 8003af2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003af6:	4a08      	ldrlt	r2, [pc, #32]	; (8003b18 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003af8:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003afc:	bfb8      	it	lt
 8003afe:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003b02:	b2db      	uxtb	r3, r3
 8003b04:	bfaa      	itet	ge
 8003b06:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003b0a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003b0c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003b10:	bd30      	pop	{r4, r5, pc}
 8003b12:	bf00      	nop
 8003b14:	e000ed00 	.word	0xe000ed00
 8003b18:	e000ed14 	.word	0xe000ed14

08003b1c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003b1c:	2800      	cmp	r0, #0
 8003b1e:	db08      	blt.n	8003b32 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003b20:	0942      	lsrs	r2, r0, #5
 8003b22:	2301      	movs	r3, #1
 8003b24:	f000 001f 	and.w	r0, r0, #31
 8003b28:	fa03 f000 	lsl.w	r0, r3, r0
 8003b2c:	4b01      	ldr	r3, [pc, #4]	; (8003b34 <HAL_NVIC_EnableIRQ+0x18>)
 8003b2e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003b32:	4770      	bx	lr
 8003b34:	e000e100 	.word	0xe000e100

08003b38 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003b38:	2800      	cmp	r0, #0
 8003b3a:	db0d      	blt.n	8003b58 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003b3c:	0943      	lsrs	r3, r0, #5
 8003b3e:	2201      	movs	r2, #1
 8003b40:	f000 001f 	and.w	r0, r0, #31
 8003b44:	fa02 f000 	lsl.w	r0, r2, r0
 8003b48:	3320      	adds	r3, #32
 8003b4a:	4a04      	ldr	r2, [pc, #16]	; (8003b5c <HAL_NVIC_DisableIRQ+0x24>)
 8003b4c:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003b50:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003b54:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003b58:	4770      	bx	lr
 8003b5a:	bf00      	nop
 8003b5c:	e000e100 	.word	0xe000e100

08003b60 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003b60:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003b62:	4604      	mov	r4, r0
 8003b64:	b150      	cbz	r0, 8003b7c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003b66:	7943      	ldrb	r3, [r0, #5]
 8003b68:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003b6c:	b913      	cbnz	r3, 8003b74 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003b6e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003b70:	f7fd ff56 	bl	8001a20 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003b74:	2301      	movs	r3, #1
 8003b76:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003b78:	2000      	movs	r0, #0
}
 8003b7a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003b7c:	2001      	movs	r0, #1
 8003b7e:	e7fc      	b.n	8003b7a <HAL_CRC_Init+0x1a>

08003b80 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003b80:	6803      	ldr	r3, [r0, #0]
{
 8003b82:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003b84:	4c08      	ldr	r4, [pc, #32]	; (8003ba8 <DMA_CalcBaseAndBitshift+0x28>)
{
 8003b86:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003b88:	b2d9      	uxtb	r1, r3
 8003b8a:	3910      	subs	r1, #16
 8003b8c:	2018      	movs	r0, #24
 8003b8e:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003b92:	5c20      	ldrb	r0, [r4, r0]
 8003b94:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003b96:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8003b9a:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 8003b9e:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003ba0:	bf88      	it	hi
 8003ba2:	3004      	addhi	r0, #4
 8003ba4:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8003ba6:	bd10      	pop	{r4, pc}
 8003ba8:	0801ced1 	.word	0x0801ced1

08003bac <HAL_DMA_Init>:
{
 8003bac:	b570      	push	{r4, r5, r6, lr}
 8003bae:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003bb0:	f7ff ff56 	bl	8003a60 <HAL_GetTick>
 8003bb4:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003bb6:	2c00      	cmp	r4, #0
 8003bb8:	d073      	beq.n	8003ca2 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8003bba:	2302      	movs	r3, #2
 8003bbc:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003bc0:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8003bc2:	2300      	movs	r3, #0
 8003bc4:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003bc8:	6813      	ldr	r3, [r2, #0]
 8003bca:	f023 0301 	bic.w	r3, r3, #1
 8003bce:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003bd0:	6821      	ldr	r1, [r4, #0]
 8003bd2:	680b      	ldr	r3, [r1, #0]
 8003bd4:	07d8      	lsls	r0, r3, #31
 8003bd6:	d42f      	bmi.n	8003c38 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8003bd8:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003bda:	4d33      	ldr	r5, [pc, #204]	; (8003ca8 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003bdc:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003bde:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003be0:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8003be4:	4313      	orrs	r3, r2
 8003be6:	68e2      	ldr	r2, [r4, #12]
 8003be8:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003bea:	6922      	ldr	r2, [r4, #16]
 8003bec:	4313      	orrs	r3, r2
 8003bee:	6962      	ldr	r2, [r4, #20]
 8003bf0:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003bf2:	69e2      	ldr	r2, [r4, #28]
 8003bf4:	4303      	orrs	r3, r0
 8003bf6:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003bf8:	6a22      	ldr	r2, [r4, #32]
 8003bfa:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003bfc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003bfe:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003c00:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003c04:	bf02      	ittt	eq
 8003c06:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003c0a:	4335      	orreq	r5, r6
 8003c0c:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003c0e:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003c10:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003c12:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003c14:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003c18:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003c1c:	d133      	bne.n	8003c86 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8003c1e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003c20:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8003c22:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003c24:	b37d      	cbz	r5, 8003c86 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003c26:	b990      	cbnz	r0, 8003c4e <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8003c28:	2a01      	cmp	r2, #1
 8003c2a:	d021      	beq.n	8003c70 <HAL_DMA_Init+0xc4>
 8003c2c:	f032 0202 	bics.w	r2, r2, #2
 8003c30:	d129      	bne.n	8003c86 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003c32:	01ea      	lsls	r2, r5, #7
 8003c34:	d527      	bpl.n	8003c86 <HAL_DMA_Init+0xda>
 8003c36:	e01e      	b.n	8003c76 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003c38:	f7ff ff12 	bl	8003a60 <HAL_GetTick>
 8003c3c:	1b40      	subs	r0, r0, r5
 8003c3e:	2805      	cmp	r0, #5
 8003c40:	d9c6      	bls.n	8003bd0 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003c42:	2320      	movs	r3, #32
 8003c44:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003c46:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8003c48:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8003c4c:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003c4e:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8003c52:	d114      	bne.n	8003c7e <HAL_DMA_Init+0xd2>
    switch (tmp)
 8003c54:	2a03      	cmp	r2, #3
 8003c56:	d816      	bhi.n	8003c86 <HAL_DMA_Init+0xda>
 8003c58:	a001      	add	r0, pc, #4	; (adr r0, 8003c60 <HAL_DMA_Init+0xb4>)
 8003c5a:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8003c5e:	bf00      	nop
 8003c60:	08003c77 	.word	0x08003c77
 8003c64:	08003c33 	.word	0x08003c33
 8003c68:	08003c77 	.word	0x08003c77
 8003c6c:	08003c71 	.word	0x08003c71
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003c70:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8003c74:	d107      	bne.n	8003c86 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003c76:	2340      	movs	r3, #64	; 0x40
 8003c78:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8003c7a:	2001      	movs	r0, #1
 8003c7c:	e7e4      	b.n	8003c48 <HAL_DMA_Init+0x9c>
    switch (tmp)
 8003c7e:	2a02      	cmp	r2, #2
 8003c80:	d9f9      	bls.n	8003c76 <HAL_DMA_Init+0xca>
 8003c82:	2a03      	cmp	r2, #3
 8003c84:	d0d5      	beq.n	8003c32 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8003c86:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003c88:	4620      	mov	r0, r4
 8003c8a:	f7ff ff79 	bl	8003b80 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003c8e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003c90:	233f      	movs	r3, #63	; 0x3f
 8003c92:	4093      	lsls	r3, r2
 8003c94:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003c96:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8003c98:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003c9a:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8003c9c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8003ca0:	e7d4      	b.n	8003c4c <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8003ca2:	2001      	movs	r0, #1
 8003ca4:	e7d2      	b.n	8003c4c <HAL_DMA_Init+0xa0>
 8003ca6:	bf00      	nop
 8003ca8:	f010803f 	.word	0xf010803f

08003cac <HAL_DMA_DeInit>:
{
 8003cac:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8003cae:	4605      	mov	r5, r0
 8003cb0:	b320      	cbz	r0, 8003cfc <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8003cb2:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8003cb6:	2b02      	cmp	r3, #2
 8003cb8:	b2dc      	uxtb	r4, r3
 8003cba:	d01d      	beq.n	8003cf8 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8003cbc:	6803      	ldr	r3, [r0, #0]
 8003cbe:	681a      	ldr	r2, [r3, #0]
 8003cc0:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8003cc4:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8003cc6:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8003cc8:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8003cca:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8003ccc:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8003cce:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8003cd0:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8003cd2:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8003cd4:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003cd6:	f7ff ff53 	bl	8003b80 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003cda:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8003cdc:	233f      	movs	r3, #63	; 0x3f
 8003cde:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8003ce0:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8003ce4:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8003ce8:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003cec:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003cee:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8003cf0:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8003cf4:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8003cf8:	4620      	mov	r0, r4
 8003cfa:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8003cfc:	2401      	movs	r4, #1
 8003cfe:	e7fb      	b.n	8003cf8 <HAL_DMA_DeInit+0x4c>

08003d00 <HAL_DMA_Abort>:
{
 8003d00:	b570      	push	{r4, r5, r6, lr}
 8003d02:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003d04:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8003d06:	f7ff feab 	bl	8003a60 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003d0a:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8003d0e:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8003d10:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003d12:	d006      	beq.n	8003d22 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003d14:	2380      	movs	r3, #128	; 0x80
 8003d16:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8003d18:	2300      	movs	r3, #0
 8003d1a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8003d1e:	2001      	movs	r0, #1
}
 8003d20:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003d22:	6823      	ldr	r3, [r4, #0]
 8003d24:	681a      	ldr	r2, [r3, #0]
 8003d26:	f022 0216 	bic.w	r2, r2, #22
 8003d2a:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003d2c:	695a      	ldr	r2, [r3, #20]
 8003d2e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003d32:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003d34:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003d36:	b90a      	cbnz	r2, 8003d3c <HAL_DMA_Abort+0x3c>
 8003d38:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8003d3a:	b11a      	cbz	r2, 8003d44 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003d3c:	681a      	ldr	r2, [r3, #0]
 8003d3e:	f022 0208 	bic.w	r2, r2, #8
 8003d42:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8003d44:	681a      	ldr	r2, [r3, #0]
 8003d46:	f022 0201 	bic.w	r2, r2, #1
 8003d4a:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003d4c:	6823      	ldr	r3, [r4, #0]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	f013 0301 	ands.w	r3, r3, #1
 8003d54:	d10a      	bne.n	8003d6c <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003d56:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003d58:	223f      	movs	r2, #63	; 0x3f
 8003d5a:	408a      	lsls	r2, r1
 8003d5c:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8003d5e:	2201      	movs	r2, #1
 8003d60:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8003d64:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8003d68:	4618      	mov	r0, r3
 8003d6a:	e7d9      	b.n	8003d20 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003d6c:	f7ff fe78 	bl	8003a60 <HAL_GetTick>
 8003d70:	1b40      	subs	r0, r0, r5
 8003d72:	2805      	cmp	r0, #5
 8003d74:	d9ea      	bls.n	8003d4c <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003d76:	2320      	movs	r3, #32
 8003d78:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003d7a:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8003d7c:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003d7e:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8003d82:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8003d86:	e7cb      	b.n	8003d20 <HAL_DMA_Abort+0x20>

08003d88 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003d88:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003d8a:	4604      	mov	r4, r0
 8003d8c:	b330      	cbz	r0, 8003ddc <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003d8e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003d92:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003d96:	b91b      	cbnz	r3, 8003da0 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003d98:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003d9c:	f7fd fe58 	bl	8001a50 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003da0:	6822      	ldr	r2, [r4, #0]
 8003da2:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003da4:	2302      	movs	r3, #2
 8003da6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003daa:	6813      	ldr	r3, [r2, #0]
 8003dac:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003db0:	430b      	orrs	r3, r1
 8003db2:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003db4:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003db6:	68a1      	ldr	r1, [r4, #8]
 8003db8:	f023 0307 	bic.w	r3, r3, #7
 8003dbc:	430b      	orrs	r3, r1
 8003dbe:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003dc0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8003dc2:	68e1      	ldr	r1, [r4, #12]
 8003dc4:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003dc8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003dcc:	430b      	orrs	r3, r1
 8003dce:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003dd0:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003dd2:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003dd4:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003dd6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8003dda:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003ddc:	2001      	movs	r0, #1
 8003dde:	e7fc      	b.n	8003dda <HAL_DMA2D_Init+0x52>

08003de0 <HAL_DMA2D_LineEventCallback>:
 8003de0:	4770      	bx	lr

08003de2 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8003de2:	4770      	bx	lr

08003de4 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003de4:	6803      	ldr	r3, [r0, #0]
{
 8003de6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003de8:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003dea:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003dec:	07f2      	lsls	r2, r6, #31
{
 8003dee:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003df0:	d514      	bpl.n	8003e1c <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003df2:	05e9      	lsls	r1, r5, #23
 8003df4:	d512      	bpl.n	8003e1c <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003df6:	681a      	ldr	r2, [r3, #0]
 8003df8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003dfc:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003dfe:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003e00:	f042 0201 	orr.w	r2, r2, #1
 8003e04:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8003e06:	2201      	movs	r2, #1
 8003e08:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003e0a:	2304      	movs	r3, #4
 8003e0c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003e10:	2300      	movs	r3, #0
 8003e12:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003e16:	6943      	ldr	r3, [r0, #20]
 8003e18:	b103      	cbz	r3, 8003e1c <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003e1a:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003e1c:	06b2      	lsls	r2, r6, #26
 8003e1e:	d516      	bpl.n	8003e4e <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003e20:	04ab      	lsls	r3, r5, #18
 8003e22:	d514      	bpl.n	8003e4e <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003e24:	6823      	ldr	r3, [r4, #0]
 8003e26:	681a      	ldr	r2, [r3, #0]
 8003e28:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003e2c:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003e2e:	2220      	movs	r2, #32
 8003e30:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003e32:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003e34:	f043 0302 	orr.w	r3, r3, #2
 8003e38:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003e3a:	2304      	movs	r3, #4
 8003e3c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003e40:	2300      	movs	r3, #0
 8003e42:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003e46:	6963      	ldr	r3, [r4, #20]
 8003e48:	b10b      	cbz	r3, 8003e4e <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003e4a:	4620      	mov	r0, r4
 8003e4c:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003e4e:	0730      	lsls	r0, r6, #28
 8003e50:	d516      	bpl.n	8003e80 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003e52:	0529      	lsls	r1, r5, #20
 8003e54:	d514      	bpl.n	8003e80 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003e56:	6823      	ldr	r3, [r4, #0]
 8003e58:	681a      	ldr	r2, [r3, #0]
 8003e5a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003e5e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003e60:	2208      	movs	r2, #8
 8003e62:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003e64:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003e66:	f043 0304 	orr.w	r3, r3, #4
 8003e6a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003e6c:	2304      	movs	r3, #4
 8003e6e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003e72:	2300      	movs	r3, #0
 8003e74:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003e78:	6963      	ldr	r3, [r4, #20]
 8003e7a:	b10b      	cbz	r3, 8003e80 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003e7c:	4620      	mov	r0, r4
 8003e7e:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003e80:	0772      	lsls	r2, r6, #29
 8003e82:	d50b      	bpl.n	8003e9c <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003e84:	056b      	lsls	r3, r5, #21
 8003e86:	d509      	bpl.n	8003e9c <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003e88:	6823      	ldr	r3, [r4, #0]
 8003e8a:	681a      	ldr	r2, [r3, #0]
 8003e8c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003e90:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003e92:	2204      	movs	r2, #4
 8003e94:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003e96:	4620      	mov	r0, r4
 8003e98:	f7ff ffa2 	bl	8003de0 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003e9c:	07b0      	lsls	r0, r6, #30
 8003e9e:	d514      	bpl.n	8003eca <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003ea0:	05a9      	lsls	r1, r5, #22
 8003ea2:	d512      	bpl.n	8003eca <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003ea4:	6823      	ldr	r3, [r4, #0]
 8003ea6:	681a      	ldr	r2, [r3, #0]
 8003ea8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003eac:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003eae:	2202      	movs	r2, #2
 8003eb0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003eb2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003eb4:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003eb6:	2301      	movs	r3, #1
 8003eb8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003ebc:	2300      	movs	r3, #0
 8003ebe:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8003ec2:	6923      	ldr	r3, [r4, #16]
 8003ec4:	b10b      	cbz	r3, 8003eca <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8003ec6:	4620      	mov	r0, r4
 8003ec8:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003eca:	06f2      	lsls	r2, r6, #27
 8003ecc:	d513      	bpl.n	8003ef6 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003ece:	04eb      	lsls	r3, r5, #19
 8003ed0:	d511      	bpl.n	8003ef6 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003ed2:	6823      	ldr	r3, [r4, #0]
 8003ed4:	681a      	ldr	r2, [r3, #0]
 8003ed6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003eda:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003edc:	2210      	movs	r2, #16
 8003ede:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003ee0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003ee2:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003ee4:	2301      	movs	r3, #1
 8003ee6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003eea:	2300      	movs	r3, #0
 8003eec:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003ef0:	4620      	mov	r0, r4
 8003ef2:	f7ff ff76 	bl	8003de2 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8003ef6:	bd70      	pop	{r4, r5, r6, pc}

08003ef8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003ef8:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003efa:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8003efe:	2b01      	cmp	r3, #1
 8003f00:	f04f 0302 	mov.w	r3, #2
 8003f04:	d02b      	beq.n	8003f5e <HAL_DMA2D_ConfigLayer+0x66>
 8003f06:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003f08:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8003f0c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003f10:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8003f14:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8003f18:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003f1a:	4f18      	ldr	r7, [pc, #96]	; (8003f7c <HAL_DMA2D_ConfigLayer+0x84>)
 8003f1c:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003f20:	3c09      	subs	r4, #9
 8003f22:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003f24:	bf9c      	itt	ls
 8003f26:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8003f2a:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003f2c:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003f30:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003f32:	bf88      	it	hi
 8003f34:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003f38:	b999      	cbnz	r1, 8003f62 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003f3a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003f3c:	4039      	ands	r1, r7
 8003f3e:	430a      	orrs	r2, r1
 8003f40:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003f42:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003f44:	6982      	ldr	r2, [r0, #24]
 8003f46:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003f48:	d803      	bhi.n	8003f52 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8003f4a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003f4c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003f50:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003f52:	2301      	movs	r3, #1
 8003f54:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003f58:	2300      	movs	r3, #0
 8003f5a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8003f5e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8003f60:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003f62:	69d9      	ldr	r1, [r3, #28]
 8003f64:	4039      	ands	r1, r7
 8003f66:	430a      	orrs	r2, r1
 8003f68:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003f6a:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003f6c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003f6e:	6992      	ldr	r2, [r2, #24]
 8003f70:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003f72:	bf9c      	itt	ls
 8003f74:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8003f78:	621d      	strls	r5, [r3, #32]
 8003f7a:	e7ea      	b.n	8003f52 <HAL_DMA2D_ConfigLayer+0x5a>
 8003f7c:	00fcfff0 	.word	0x00fcfff0

08003f80 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8003f80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f84:	4607      	mov	r7, r0
 8003f86:	460d      	mov	r5, r1
 8003f88:	4614      	mov	r4, r2
 8003f8a:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8003f8c:	f7ff fd68 	bl	8003a60 <HAL_GetTick>
 8003f90:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8003f92:	683b      	ldr	r3, [r7, #0]
 8003f94:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8003f96:	07d2      	lsls	r2, r2, #31
 8003f98:	d50a      	bpl.n	8003fb0 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8003f9a:	9906      	ldr	r1, [sp, #24]
 8003f9c:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 8003fa0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8003fa4:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8003fa8:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 8003faa:	2000      	movs	r0, #0
}
 8003fac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8003fb0:	f7ff fd56 	bl	8003a60 <HAL_GetTick>
 8003fb4:	eba0 0008 	sub.w	r0, r0, r8
 8003fb8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003fbc:	d9e9      	bls.n	8003f92 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8003fbe:	2003      	movs	r0, #3
 8003fc0:	e7f4      	b.n	8003fac <DSI_ShortWrite+0x2c>

08003fc2 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8003fc2:	7c03      	ldrb	r3, [r0, #16]
 8003fc4:	2b01      	cmp	r3, #1
 8003fc6:	d05d      	beq.n	8004084 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8003fc8:	6803      	ldr	r3, [r0, #0]
 8003fca:	2200      	movs	r2, #0
 8003fcc:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8003fd0:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8003fd4:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8003fd6:	bf48      	it	mi
 8003fd8:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8003fdc:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8003fde:	bf42      	ittt	mi
 8003fe0:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8003fe4:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8003fe8:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8003fec:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8003fee:	bf42      	ittt	mi
 8003ff0:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8003ff4:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8003ff8:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8003ffc:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8003ffe:	bf42      	ittt	mi
 8004000:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004004:	f042 0201 	orrmi.w	r2, r2, #1
 8004008:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800400c:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800400e:	bf42      	ittt	mi
 8004010:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004014:	f042 0202 	orrmi.w	r2, r2, #2
 8004018:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800401c:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800401e:	bf42      	ittt	mi
 8004020:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004024:	f042 020c 	orrmi.w	r2, r2, #12
 8004028:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800402c:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800402e:	bf42      	ittt	mi
 8004030:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004034:	f042 0210 	orrmi.w	r2, r2, #16
 8004038:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800403c:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800403e:	bf42      	ittt	mi
 8004040:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004044:	f042 0220 	orrmi.w	r2, r2, #32
 8004048:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800404c:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800404e:	bf42      	ittt	mi
 8004050:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004054:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8004058:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800405c:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800405e:	bf42      	ittt	mi
 8004060:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004064:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004068:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800406c:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800406e:	bf42      	ittt	mi
 8004070:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004074:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8004078:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800407c:	2300      	movs	r3, #0
 800407e:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004080:	4618      	mov	r0, r3
 8004082:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004084:	2002      	movs	r0, #2
}
 8004086:	4770      	bx	lr

08004088 <HAL_DSI_Init>:
{
 8004088:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800408a:	460d      	mov	r5, r1
  if (hdsi == NULL)
 800408c:	4604      	mov	r4, r0
 800408e:	2800      	cmp	r0, #0
 8004090:	f000 80a9 	beq.w	80041e6 <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8004094:	7c43      	ldrb	r3, [r0, #17]
 8004096:	b90b      	cbnz	r3, 800409c <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8004098:	f7fd fcfc 	bl	8001a94 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800409c:	2303      	movs	r3, #3
 800409e:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 80040a0:	2300      	movs	r3, #0
 80040a2:	9300      	str	r3, [sp, #0]
 80040a4:	6823      	ldr	r3, [r4, #0]
 80040a6:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 80040aa:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80040ae:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 80040b2:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 80040b6:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80040ba:	9300      	str	r3, [sp, #0]
 80040bc:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 80040be:	f7ff fccf 	bl	8003a60 <HAL_GetTick>
 80040c2:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 80040c4:	6822      	ldr	r2, [r4, #0]
 80040c6:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80040ca:	04d9      	lsls	r1, r3, #19
 80040cc:	d57a      	bpl.n	80041c4 <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 80040ce:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80040d2:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 80040d6:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 80040da:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 80040de:	e9d5 0300 	ldrd	r0, r3, [r5]
 80040e2:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80040e4:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 80040e8:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80040ea:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 80040ee:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80040f2:	430b      	orrs	r3, r1
 80040f4:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 80040f8:	2300      	movs	r3, #0
 80040fa:	9301      	str	r3, [sp, #4]
 80040fc:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004100:	f043 0301 	orr.w	r3, r3, #1
 8004104:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8004108:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800410c:	f003 0301 	and.w	r3, r3, #1
 8004110:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 8004112:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 8004114:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 8004116:	f7ff fca9 	bl	8003a6c <HAL_Delay>
  tickstart = HAL_GetTick();
 800411a:	f7ff fca1 	bl	8003a60 <HAL_GetTick>
 800411e:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8004120:	6823      	ldr	r3, [r4, #0]
 8004122:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004126:	05d2      	lsls	r2, r2, #23
 8004128:	d556      	bpl.n	80041d8 <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800412a:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800412e:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004130:	f042 0206 	orr.w	r2, r2, #6
 8004134:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8004138:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800413c:	f022 0203 	bic.w	r2, r2, #3
 8004140:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004144:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004148:	430a      	orrs	r2, r1
 800414a:	f042 0201 	orr.w	r2, r2, #1
 800414e:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004152:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004156:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004158:	f022 0203 	bic.w	r2, r2, #3
 800415c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004160:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004164:	430a      	orrs	r2, r1
 8004166:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800416a:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800416c:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800416e:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004172:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004174:	689a      	ldr	r2, [r3, #8]
 8004176:	430a      	orrs	r2, r1
 8004178:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800417a:	686a      	ldr	r2, [r5, #4]
 800417c:	491b      	ldr	r1, [pc, #108]	; (80041ec <HAL_DSI_Init+0x164>)
 800417e:	2a01      	cmp	r2, #1
 8004180:	bf38      	it	cc
 8004182:	2201      	movcc	r2, #1
 8004184:	434a      	muls	r2, r1
 8004186:	68a9      	ldr	r1, [r5, #8]
 8004188:	f001 0103 	and.w	r1, r1, #3
 800418c:	408a      	lsls	r2, r1
 800418e:	6829      	ldr	r1, [r5, #0]
 8004190:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 8004194:	4341      	muls	r1, r0
 8004196:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800419a:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800419e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 80041a2:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 80041a6:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 80041aa:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 80041ac:	430a      	orrs	r2, r1
 80041ae:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 80041b2:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 80041b6:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 80041ba:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 80041bc:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 80041be:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 80041c0:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 80041c2:	e007      	b.n	80041d4 <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80041c4:	f7ff fc4c 	bl	8003a60 <HAL_GetTick>
 80041c8:	1b80      	subs	r0, r0, r6
 80041ca:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80041ce:	f67f af79 	bls.w	80040c4 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 80041d2:	2003      	movs	r0, #3
}
 80041d4:	b002      	add	sp, #8
 80041d6:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80041d8:	f7ff fc42 	bl	8003a60 <HAL_GetTick>
 80041dc:	1b80      	subs	r0, r0, r6
 80041de:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80041e2:	d99d      	bls.n	8004120 <HAL_DSI_Init+0x98>
 80041e4:	e7f5      	b.n	80041d2 <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 80041e6:	2001      	movs	r0, #1
 80041e8:	e7f4      	b.n	80041d4 <HAL_DSI_Init+0x14c>
 80041ea:	bf00      	nop
 80041ec:	003d0900 	.word	0x003d0900

080041f0 <HAL_DSI_ErrorCallback>:
 80041f0:	4770      	bx	lr

080041f2 <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 80041f2:	6803      	ldr	r3, [r0, #0]
 80041f4:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80041f8:	07d1      	lsls	r1, r2, #31
{
 80041fa:	b510      	push	{r4, lr}
 80041fc:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 80041fe:	d508      	bpl.n	8004212 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8004200:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004204:	07d2      	lsls	r2, r2, #31
 8004206:	d504      	bpl.n	8004212 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8004208:	2201      	movs	r2, #1
 800420a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800420e:	f7fc fc97 	bl	8000b40 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 8004212:	6823      	ldr	r3, [r4, #0]
 8004214:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004218:	0791      	lsls	r1, r2, #30
 800421a:	d509      	bpl.n	8004230 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800421c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004220:	0792      	lsls	r2, r2, #30
 8004222:	d505      	bpl.n	8004230 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8004224:	2202      	movs	r2, #2
 8004226:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800422a:	4620      	mov	r0, r4
 800422c:	f7fc fcbc 	bl	8000ba8 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8004230:	69a3      	ldr	r3, [r4, #24]
 8004232:	2b00      	cmp	r3, #0
 8004234:	d04e      	beq.n	80042d4 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8004236:	6821      	ldr	r1, [r4, #0]
 8004238:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800423c:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8004240:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004244:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004246:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800424a:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800424c:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800424e:	b119      	cbz	r1, 8004258 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8004250:	6961      	ldr	r1, [r4, #20]
 8004252:	f041 0101 	orr.w	r1, r1, #1
 8004256:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8004258:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800425c:	bf1e      	ittt	ne
 800425e:	6962      	ldrne	r2, [r4, #20]
 8004260:	f042 0202 	orrne.w	r2, r2, #2
 8004264:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8004266:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8004268:	bf42      	ittt	mi
 800426a:	6962      	ldrmi	r2, [r4, #20]
 800426c:	f042 0204 	orrmi.w	r2, r2, #4
 8004270:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 8004272:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8004274:	bf42      	ittt	mi
 8004276:	6962      	ldrmi	r2, [r4, #20]
 8004278:	f042 0208 	orrmi.w	r2, r2, #8
 800427c:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800427e:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 8004282:	bf1e      	ittt	ne
 8004284:	6962      	ldrne	r2, [r4, #20]
 8004286:	f042 0210 	orrne.w	r2, r2, #16
 800428a:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800428c:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800428e:	bf42      	ittt	mi
 8004290:	6962      	ldrmi	r2, [r4, #20]
 8004292:	f042 0220 	orrmi.w	r2, r2, #32
 8004296:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8004298:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800429a:	bf42      	ittt	mi
 800429c:	6962      	ldrmi	r2, [r4, #20]
 800429e:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 80042a2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 80042a4:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 80042a6:	bf42      	ittt	mi
 80042a8:	6962      	ldrmi	r2, [r4, #20]
 80042aa:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 80042ae:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 80042b0:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 80042b2:	bf42      	ittt	mi
 80042b4:	6962      	ldrmi	r2, [r4, #20]
 80042b6:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 80042ba:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 80042bc:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 80042c0:	bf1e      	ittt	ne
 80042c2:	6963      	ldrne	r3, [r4, #20]
 80042c4:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 80042c8:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 80042ca:	6963      	ldr	r3, [r4, #20]
 80042cc:	b113      	cbz	r3, 80042d4 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 80042ce:	4620      	mov	r0, r4
 80042d0:	f7ff ff8e 	bl	80041f0 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 80042d4:	bd10      	pop	{r4, pc}

080042d6 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80042d6:	7c03      	ldrb	r3, [r0, #16]
 80042d8:	2b01      	cmp	r3, #1
 80042da:	d00b      	beq.n	80042f4 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 80042dc:	6803      	ldr	r3, [r0, #0]
 80042de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80042e0:	f022 0203 	bic.w	r2, r2, #3
 80042e4:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 80042e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80042e8:	4311      	orrs	r1, r2
 80042ea:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80042ec:	2300      	movs	r3, #0
 80042ee:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80042f0:	4618      	mov	r0, r3
 80042f2:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80042f4:	2002      	movs	r0, #2
}
 80042f6:	4770      	bx	lr

080042f8 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 80042f8:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80042fa:	7c03      	ldrb	r3, [r0, #16]
 80042fc:	2b01      	cmp	r3, #1
 80042fe:	d06a      	beq.n	80043d6 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004300:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004302:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004304:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004306:	f042 0201 	orr.w	r2, r2, #1
 800430a:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800430c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004310:	f022 0201 	bic.w	r2, r2, #1
 8004314:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8004318:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800431c:	f042 0201 	orr.w	r2, r2, #1
 8004320:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8004324:	68da      	ldr	r2, [r3, #12]
 8004326:	f022 0203 	bic.w	r2, r2, #3
 800432a:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800432c:	68da      	ldr	r2, [r3, #12]
 800432e:	4322      	orrs	r2, r4
 8004330:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 8004332:	695a      	ldr	r2, [r3, #20]
 8004334:	f022 0207 	bic.w	r2, r2, #7
 8004338:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800433a:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800433e:	432a      	orrs	r2, r5
 8004340:	694d      	ldr	r5, [r1, #20]
 8004342:	695c      	ldr	r4, [r3, #20]
 8004344:	432a      	orrs	r2, r5
 8004346:	4322      	orrs	r2, r4
 8004348:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800434a:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800434c:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800434e:	f022 020f 	bic.w	r2, r2, #15
 8004352:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004354:	691c      	ldr	r4, [r3, #16]
 8004356:	432c      	orrs	r4, r5
 8004358:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800435a:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800435e:	f024 040e 	bic.w	r4, r4, #14
 8004362:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004366:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800436a:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800436c:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8004370:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8004374:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8004376:	0c12      	lsrs	r2, r2, #16
 8004378:	0412      	lsls	r2, r2, #16
 800437a:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800437c:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800437e:	4322      	orrs	r2, r4
 8004380:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 8004382:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004386:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800438a:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800438e:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 8004392:	432a      	orrs	r2, r5
 8004394:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8004396:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800439a:	432a      	orrs	r2, r5
 800439c:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800439e:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80043a0:	432a      	orrs	r2, r5
 80043a2:	4322      	orrs	r2, r4
 80043a4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 80043a8:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80043aa:	f022 0201 	bic.w	r2, r2, #1
 80043ae:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80043b0:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80043b2:	430a      	orrs	r2, r1
 80043b4:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 80043b6:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80043ba:	f042 0201 	orr.w	r2, r2, #1
 80043be:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 80043c2:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80043c6:	f042 0202 	orr.w	r2, r2, #2
 80043ca:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80043ce:	2300      	movs	r3, #0
 80043d0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80043d2:	4618      	mov	r0, r3
}
 80043d4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80043d6:	2002      	movs	r0, #2
 80043d8:	e7fc      	b.n	80043d4 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

080043dc <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 80043dc:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80043de:	7c03      	ldrb	r3, [r0, #16]
 80043e0:	2b01      	cmp	r3, #1
 80043e2:	d02a      	beq.n	800443a <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 80043e4:	6802      	ldr	r2, [r0, #0]
 80043e6:	4b16      	ldr	r3, [pc, #88]	; (8004440 <HAL_DSI_ConfigCommand+0x64>)
 80043e8:	6e94      	ldr	r4, [r2, #104]	; 0x68
 80043ea:	4023      	ands	r3, r4
 80043ec:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80043ee:	e9d1 3500 	ldrd	r3, r5, [r1]
 80043f2:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 80043f4:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80043f6:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 80043f8:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 80043fa:	68cd      	ldr	r5, [r1, #12]
 80043fc:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 80043fe:	690d      	ldr	r5, [r1, #16]
 8004400:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8004402:	694d      	ldr	r5, [r1, #20]
 8004404:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 8004406:	698d      	ldr	r5, [r1, #24]
 8004408:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800440a:	69cd      	ldr	r5, [r1, #28]
 800440c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800440e:	6a0d      	ldr	r5, [r1, #32]
 8004410:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 8004412:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8004414:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 8004416:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8004418:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800441a:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800441c:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800441e:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004420:	4323      	orrs	r3, r4
 8004422:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8004424:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8004426:	f023 0302 	bic.w	r3, r3, #2
 800442a:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800442c:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800442e:	430b      	orrs	r3, r1
 8004430:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004432:	2300      	movs	r3, #0
 8004434:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004436:	4618      	mov	r0, r3
}
 8004438:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800443a:	2002      	movs	r0, #2
 800443c:	e7fc      	b.n	8004438 <HAL_DSI_ConfigCommand+0x5c>
 800443e:	bf00      	nop
 8004440:	fef080ff 	.word	0xfef080ff

08004444 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004444:	7c03      	ldrb	r3, [r0, #16]
 8004446:	2b01      	cmp	r3, #1
 8004448:	d00b      	beq.n	8004462 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800444a:	6803      	ldr	r3, [r0, #0]
 800444c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800444e:	f022 021f 	bic.w	r2, r2, #31
 8004452:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8004454:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004456:	4311      	orrs	r1, r2
 8004458:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800445a:	2300      	movs	r3, #0
 800445c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800445e:	4618      	mov	r0, r3
 8004460:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004462:	2002      	movs	r0, #2
}
 8004464:	4770      	bx	lr

08004466 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8004466:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004468:	7c03      	ldrb	r3, [r0, #16]
 800446a:	2b01      	cmp	r3, #1
 800446c:	d035      	beq.n	80044da <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800446e:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8004472:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8004474:	4294      	cmp	r4, r2
 8004476:	bf38      	it	cc
 8004478:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800447a:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800447e:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 8004482:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 8004486:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800448a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800448e:	4322      	orrs	r2, r4
 8004490:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8004494:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8004498:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 800449c:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 80044a0:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 80044a4:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80044a6:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 80044aa:	690d      	ldr	r5, [r1, #16]
 80044ac:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80044b0:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80044b2:	432a      	orrs	r2, r5
 80044b4:	4322      	orrs	r2, r4
 80044b6:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 80044ba:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80044be:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80044c2:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80044c6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80044ca:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80044ce:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80044d2:	2300      	movs	r3, #0
 80044d4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80044d6:	4618      	mov	r0, r3
}
 80044d8:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80044da:	2002      	movs	r0, #2
 80044dc:	e7fc      	b.n	80044d8 <HAL_DSI_ConfigPhyTimer+0x72>
	...

080044e0 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 80044e0:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 80044e2:	7c03      	ldrb	r3, [r0, #16]
 80044e4:	2b01      	cmp	r3, #1
 80044e6:	d05c      	beq.n	80045a2 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 80044e8:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 80044ea:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 80044ec:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 80044ee:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 80044f0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80044f4:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 80044f6:	689a      	ldr	r2, [r3, #8]
 80044f8:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 80044fc:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 80044fe:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004500:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004502:	b292      	uxth	r2, r2
 8004504:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004506:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8004508:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800450c:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800450e:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004510:	4a25      	ldr	r2, [pc, #148]	; (80045a8 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 8004512:	4014      	ands	r4, r2
 8004514:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8004516:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004518:	432c      	orrs	r4, r5
 800451a:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800451c:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800451e:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004520:	4014      	ands	r4, r2
 8004522:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004524:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8004526:	432c      	orrs	r4, r5
 8004528:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800452a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800452e:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004530:	4014      	ands	r4, r2
 8004532:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8004536:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800453a:	432c      	orrs	r4, r5
 800453c:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004540:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004544:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004546:	4014      	ands	r4, r2
 8004548:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800454c:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004550:	432c      	orrs	r4, r5
 8004552:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 8004556:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800455a:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800455e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8004562:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004566:	698d      	ldr	r5, [r1, #24]
 8004568:	432c      	orrs	r4, r5
 800456a:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800456e:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8004572:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004574:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8004576:	4014      	ands	r4, r2
 8004578:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800457c:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8004580:	432c      	orrs	r4, r5
 8004582:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 8004586:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800458a:	4022      	ands	r2, r4
 800458c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004590:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8004594:	430a      	orrs	r2, r1
 8004596:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800459a:	2300      	movs	r3, #0
 800459c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800459e:	4618      	mov	r0, r3
}
 80045a0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80045a2:	2002      	movs	r0, #2
 80045a4:	e7fc      	b.n	80045a0 <HAL_DSI_ConfigHostTimeouts+0xc0>
 80045a6:	bf00      	nop
 80045a8:	ffff0000 	.word	0xffff0000

080045ac <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80045ac:	7c03      	ldrb	r3, [r0, #16]
 80045ae:	2b01      	cmp	r3, #1
{
 80045b0:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 80045b2:	d01c      	beq.n	80045ee <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 80045b4:	6802      	ldr	r2, [r0, #0]
 80045b6:	2300      	movs	r3, #0
 80045b8:	9300      	str	r3, [sp, #0]
 80045ba:	6851      	ldr	r1, [r2, #4]
 80045bc:	f041 0101 	orr.w	r1, r1, #1
 80045c0:	6051      	str	r1, [r2, #4]
 80045c2:	6851      	ldr	r1, [r2, #4]
 80045c4:	f001 0101 	and.w	r1, r1, #1
 80045c8:	9100      	str	r1, [sp, #0]
 80045ca:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 80045cc:	9301      	str	r3, [sp, #4]
 80045ce:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 80045d2:	f041 0108 	orr.w	r1, r1, #8
 80045d6:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 80045da:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80045de:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 80045e0:	f002 0208 	and.w	r2, r2, #8
 80045e4:	9201      	str	r2, [sp, #4]
 80045e6:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 80045e8:	4618      	mov	r0, r3
}
 80045ea:	b002      	add	sp, #8
 80045ec:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80045ee:	2002      	movs	r0, #2
 80045f0:	e7fb      	b.n	80045ea <HAL_DSI_Start+0x3e>

080045f2 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80045f2:	7c03      	ldrb	r3, [r0, #16]
 80045f4:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 80045f6:	bf1f      	itttt	ne
 80045f8:	6802      	ldrne	r2, [r0, #0]
 80045fa:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 80045fe:	f043 0304 	orrne.w	r3, r3, #4
 8004602:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004606:	bf1d      	ittte	ne
 8004608:	2300      	movne	r3, #0
 800460a:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 800460c:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800460e:	2002      	moveq	r0, #2
}
 8004610:	4770      	bx	lr

08004612 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 8004612:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004614:	7c05      	ldrb	r5, [r0, #16]
 8004616:	2d01      	cmp	r5, #1
{
 8004618:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800461a:	d009      	beq.n	8004630 <HAL_DSI_ShortWrite+0x1e>
 800461c:	2501      	movs	r5, #1
 800461e:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8004620:	9d06      	ldr	r5, [sp, #24]
 8004622:	9500      	str	r5, [sp, #0]
 8004624:	f7ff fcac 	bl	8003f80 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004628:	2300      	movs	r3, #0
 800462a:	7423      	strb	r3, [r4, #16]

  return status;
}
 800462c:	b003      	add	sp, #12
 800462e:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004630:	2002      	movs	r0, #2
 8004632:	e7fb      	b.n	800462c <HAL_DSI_ShortWrite+0x1a>

08004634 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8004634:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004638:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800463a:	7c03      	ldrb	r3, [r0, #16]
 800463c:	2b01      	cmp	r3, #1
{
 800463e:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 8004642:	4606      	mov	r6, r0
 8004644:	460f      	mov	r7, r1
 8004646:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 8004648:	d053      	beq.n	80046f2 <HAL_DSI_LongWrite+0xbe>
 800464a:	2301      	movs	r3, #1
 800464c:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800464e:	f7ff fa07 	bl	8003a60 <HAL_GetTick>
 8004652:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8004654:	6831      	ldr	r1, [r6, #0]
 8004656:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 8004658:	f013 0a01 	ands.w	sl, r3, #1
 800465c:	d01a      	beq.n	8004694 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800465e:	2c03      	cmp	r4, #3
 8004660:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 8004662:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004666:	bf28      	it	cs
 8004668:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 800466a:	4282      	cmp	r2, r0
 800466c:	d11e      	bne.n	80046ac <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800466e:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 8004670:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 8004674:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 8004676:	bb1b      	cbnz	r3, 80046c0 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8004678:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800467a:	0222      	lsls	r2, r4, #8
 800467c:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 8004680:	b292      	uxth	r2, r2
 8004682:	0224      	lsls	r4, r4, #8
 8004684:	4315      	orrs	r5, r2
 8004686:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800468a:	432c      	orrs	r4, r5
 800468c:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800468e:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8004690:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 8004692:	e009      	b.n	80046a8 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004694:	f7ff f9e4 	bl	8003a60 <HAL_GetTick>
 8004698:	eba0 000b 	sub.w	r0, r0, fp
 800469c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80046a0:	d9d8      	bls.n	8004654 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 80046a2:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 80046a6:	2003      	movs	r0, #3
}
 80046a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 80046ac:	f818 3002 	ldrb.w	r3, [r8, r2]
 80046b0:	3201      	adds	r2, #1
 80046b2:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 80046b6:	fa03 f30c 	lsl.w	r3, r3, ip
 80046ba:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 80046be:	e7d4      	b.n	800466a <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80046c0:	2b04      	cmp	r3, #4
    fifoword = 0U;
 80046c2:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80046c6:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 80046c8:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80046ca:	bf28      	it	cs
 80046cc:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80046d0:	f812 8000 	ldrb.w	r8, [r2, r0]
 80046d4:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 80046d8:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80046da:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 80046de:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 80046e0:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 80046e4:	d1f4      	bne.n	80046d0 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 80046e6:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 80046ea:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 80046ee:	4472      	add	r2, lr
 80046f0:	e7c1      	b.n	8004676 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 80046f2:	2002      	movs	r0, #2
 80046f4:	e7d8      	b.n	80046a8 <HAL_DSI_LongWrite+0x74>

080046f6 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80046f6:	7c03      	ldrb	r3, [r0, #16]
 80046f8:	2b01      	cmp	r3, #1
 80046fa:	d010      	beq.n	800471e <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 80046fc:	6803      	ldr	r3, [r0, #0]
 80046fe:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004702:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8004706:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800470a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800470e:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8004712:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004716:	2300      	movs	r3, #0
 8004718:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800471a:	4618      	mov	r0, r3
 800471c:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800471e:	2002      	movs	r0, #2
}
 8004720:	4770      	bx	lr
	...

08004724 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004724:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004728:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 80048ec <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800472c:	4a6d      	ldr	r2, [pc, #436]	; (80048e4 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800472e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004730:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004732:	2401      	movs	r4, #1
 8004734:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004736:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800473a:	43ac      	bics	r4, r5
 800473c:	f040 80b9 	bne.w	80048b2 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004740:	684d      	ldr	r5, [r1, #4]
 8004742:	f005 0403 	and.w	r4, r5, #3
 8004746:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800474a:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800474c:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800474e:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004752:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004754:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004758:	d834      	bhi.n	80047c4 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800475a:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800475c:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004760:	68cf      	ldr	r7, [r1, #12]
 8004762:	fa07 f708 	lsl.w	r7, r7, r8
 8004766:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800476a:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800476c:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800476e:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004772:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8004776:	409f      	lsls	r7, r3
 8004778:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800477c:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800477e:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004780:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004784:	688f      	ldr	r7, [r1, #8]
 8004786:	fa07 f708 	lsl.w	r7, r7, r8
 800478a:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800478e:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8004790:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004792:	d119      	bne.n	80047c8 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8004794:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004798:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800479c:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80047a0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80047a4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80047a8:	f04f 0e0f 	mov.w	lr, #15
 80047ac:	fa0e fe0b 	lsl.w	lr, lr, fp
 80047b0:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80047b4:	690f      	ldr	r7, [r1, #16]
 80047b6:	fa07 f70b 	lsl.w	r7, r7, fp
 80047ba:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80047be:	f8ca 7020 	str.w	r7, [sl, #32]
 80047c2:	e001      	b.n	80047c8 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80047c4:	2c03      	cmp	r4, #3
 80047c6:	d1da      	bne.n	800477e <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80047c8:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80047ca:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80047ce:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80047d0:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80047d2:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 80047d6:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80047d8:	d06b      	beq.n	80048b2 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80047da:	f04f 0a00 	mov.w	sl, #0
 80047de:	f8cd a004 	str.w	sl, [sp, #4]
 80047e2:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80047e6:	4c40      	ldr	r4, [pc, #256]	; (80048e8 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80047e8:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 80047ec:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 80047f0:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 80047f4:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 80047f8:	9601      	str	r6, [sp, #4]
 80047fa:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80047fc:	f023 0603 	bic.w	r6, r3, #3
 8004800:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8004804:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004808:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800480c:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004810:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004814:	270f      	movs	r7, #15
 8004816:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800481a:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800481c:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004820:	d04e      	beq.n	80048c0 <HAL_GPIO_Init+0x19c>
 8004822:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004826:	42a0      	cmp	r0, r4
 8004828:	d04c      	beq.n	80048c4 <HAL_GPIO_Init+0x1a0>
 800482a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800482e:	42a0      	cmp	r0, r4
 8004830:	d04a      	beq.n	80048c8 <HAL_GPIO_Init+0x1a4>
 8004832:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004836:	42a0      	cmp	r0, r4
 8004838:	d048      	beq.n	80048cc <HAL_GPIO_Init+0x1a8>
 800483a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800483e:	42a0      	cmp	r0, r4
 8004840:	d046      	beq.n	80048d0 <HAL_GPIO_Init+0x1ac>
 8004842:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004846:	42a0      	cmp	r0, r4
 8004848:	d044      	beq.n	80048d4 <HAL_GPIO_Init+0x1b0>
 800484a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800484e:	42a0      	cmp	r0, r4
 8004850:	d042      	beq.n	80048d8 <HAL_GPIO_Init+0x1b4>
 8004852:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004856:	42a0      	cmp	r0, r4
 8004858:	d040      	beq.n	80048dc <HAL_GPIO_Init+0x1b8>
 800485a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800485e:	42a0      	cmp	r0, r4
 8004860:	d03e      	beq.n	80048e0 <HAL_GPIO_Init+0x1bc>
 8004862:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004866:	42a0      	cmp	r0, r4
 8004868:	bf0c      	ite	eq
 800486a:	2409      	moveq	r4, #9
 800486c:	240a      	movne	r4, #10
 800486e:	fa04 f40e 	lsl.w	r4, r4, lr
 8004872:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004874:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 8004876:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8004878:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800487c:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 800487e:	bf54      	ite	pl
 8004880:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004882:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8004886:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8004888:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800488a:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 800488c:	bf54      	ite	pl
 800488e:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8004890:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8004894:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8004896:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004898:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800489a:	bf54      	ite	pl
 800489c:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800489e:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 80048a2:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80048a4:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80048a6:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80048a8:	bf54      	ite	pl
 80048aa:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80048ac:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 80048b0:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80048b2:	3301      	adds	r3, #1
 80048b4:	2b10      	cmp	r3, #16
 80048b6:	f47f af3b 	bne.w	8004730 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80048ba:	b003      	add	sp, #12
 80048bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80048c0:	4654      	mov	r4, sl
 80048c2:	e7d4      	b.n	800486e <HAL_GPIO_Init+0x14a>
 80048c4:	2401      	movs	r4, #1
 80048c6:	e7d2      	b.n	800486e <HAL_GPIO_Init+0x14a>
 80048c8:	2402      	movs	r4, #2
 80048ca:	e7d0      	b.n	800486e <HAL_GPIO_Init+0x14a>
 80048cc:	2403      	movs	r4, #3
 80048ce:	e7ce      	b.n	800486e <HAL_GPIO_Init+0x14a>
 80048d0:	2404      	movs	r4, #4
 80048d2:	e7cc      	b.n	800486e <HAL_GPIO_Init+0x14a>
 80048d4:	2405      	movs	r4, #5
 80048d6:	e7ca      	b.n	800486e <HAL_GPIO_Init+0x14a>
 80048d8:	2406      	movs	r4, #6
 80048da:	e7c8      	b.n	800486e <HAL_GPIO_Init+0x14a>
 80048dc:	2407      	movs	r4, #7
 80048de:	e7c6      	b.n	800486e <HAL_GPIO_Init+0x14a>
 80048e0:	2408      	movs	r4, #8
 80048e2:	e7c4      	b.n	800486e <HAL_GPIO_Init+0x14a>
 80048e4:	40013c00 	.word	0x40013c00
 80048e8:	40020000 	.word	0x40020000
 80048ec:	40023800 	.word	0x40023800

080048f0 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 80048f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80048f4:	4c4a      	ldr	r4, [pc, #296]	; (8004a20 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80048f6:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8004a28 <HAL_GPIO_DeInit+0x138>
 80048fa:	f8df a130 	ldr.w	sl, [pc, #304]	; 8004a2c <HAL_GPIO_DeInit+0x13c>
 80048fe:	f8df b130 	ldr.w	fp, [pc, #304]	; 8004a30 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004902:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8004904:	2301      	movs	r3, #1
 8004906:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800490a:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800490e:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8004912:	d16e      	bne.n	80049f2 <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004914:	f022 0503 	bic.w	r5, r2, #3
 8004918:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800491c:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004920:	4b40      	ldr	r3, [pc, #256]	; (8004a24 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004922:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004926:	f002 0c03 	and.w	ip, r2, #3
 800492a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800492e:	260f      	movs	r6, #15
 8004930:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004934:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004936:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800493a:	d05f      	beq.n	80049fc <HAL_GPIO_DeInit+0x10c>
 800493c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004940:	4298      	cmp	r0, r3
 8004942:	d05d      	beq.n	8004a00 <HAL_GPIO_DeInit+0x110>
 8004944:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004948:	4298      	cmp	r0, r3
 800494a:	d05b      	beq.n	8004a04 <HAL_GPIO_DeInit+0x114>
 800494c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004950:	4298      	cmp	r0, r3
 8004952:	d059      	beq.n	8004a08 <HAL_GPIO_DeInit+0x118>
 8004954:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004958:	4298      	cmp	r0, r3
 800495a:	d057      	beq.n	8004a0c <HAL_GPIO_DeInit+0x11c>
 800495c:	4548      	cmp	r0, r9
 800495e:	d057      	beq.n	8004a10 <HAL_GPIO_DeInit+0x120>
 8004960:	4550      	cmp	r0, sl
 8004962:	d057      	beq.n	8004a14 <HAL_GPIO_DeInit+0x124>
 8004964:	4558      	cmp	r0, fp
 8004966:	d057      	beq.n	8004a18 <HAL_GPIO_DeInit+0x128>
 8004968:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800496c:	4298      	cmp	r0, r3
 800496e:	d055      	beq.n	8004a1c <HAL_GPIO_DeInit+0x12c>
 8004970:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004974:	4298      	cmp	r0, r3
 8004976:	bf0c      	ite	eq
 8004978:	2309      	moveq	r3, #9
 800497a:	230a      	movne	r3, #10
 800497c:	fa03 f30c 	lsl.w	r3, r3, ip
 8004980:	4543      	cmp	r3, r8
 8004982:	d113      	bne.n	80049ac <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004984:	6823      	ldr	r3, [r4, #0]
 8004986:	ea23 0307 	bic.w	r3, r3, r7
 800498a:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800498c:	6863      	ldr	r3, [r4, #4]
 800498e:	ea23 0307 	bic.w	r3, r3, r7
 8004992:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8004994:	68e3      	ldr	r3, [r4, #12]
 8004996:	ea23 0307 	bic.w	r3, r3, r7
 800499a:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800499c:	68a3      	ldr	r3, [r4, #8]
 800499e:	ea23 0307 	bic.w	r3, r3, r7
 80049a2:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 80049a4:	68ab      	ldr	r3, [r5, #8]
 80049a6:	ea23 0306 	bic.w	r3, r3, r6
 80049aa:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80049ac:	6805      	ldr	r5, [r0, #0]
 80049ae:	2603      	movs	r6, #3
 80049b0:	0053      	lsls	r3, r2, #1
 80049b2:	fa06 f303 	lsl.w	r3, r6, r3
 80049b6:	ea25 0503 	bic.w	r5, r5, r3
 80049ba:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80049bc:	fa22 f506 	lsr.w	r5, r2, r6
 80049c0:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 80049c4:	f002 0c07 	and.w	ip, r2, #7
 80049c8:	6a2e      	ldr	r6, [r5, #32]
 80049ca:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80049ce:	270f      	movs	r7, #15
 80049d0:	fa07 f70c 	lsl.w	r7, r7, ip
 80049d4:	ea26 0707 	bic.w	r7, r6, r7
 80049d8:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80049da:	68c5      	ldr	r5, [r0, #12]
 80049dc:	ea25 0503 	bic.w	r5, r5, r3
 80049e0:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 80049e2:	6845      	ldr	r5, [r0, #4]
 80049e4:	ea25 050e 	bic.w	r5, r5, lr
 80049e8:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80049ea:	6885      	ldr	r5, [r0, #8]
 80049ec:	ea25 0303 	bic.w	r3, r5, r3
 80049f0:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80049f2:	3201      	adds	r2, #1
 80049f4:	2a10      	cmp	r2, #16
 80049f6:	d185      	bne.n	8004904 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 80049f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80049fc:	2300      	movs	r3, #0
 80049fe:	e7bd      	b.n	800497c <HAL_GPIO_DeInit+0x8c>
 8004a00:	2301      	movs	r3, #1
 8004a02:	e7bb      	b.n	800497c <HAL_GPIO_DeInit+0x8c>
 8004a04:	2302      	movs	r3, #2
 8004a06:	e7b9      	b.n	800497c <HAL_GPIO_DeInit+0x8c>
 8004a08:	2303      	movs	r3, #3
 8004a0a:	e7b7      	b.n	800497c <HAL_GPIO_DeInit+0x8c>
 8004a0c:	2304      	movs	r3, #4
 8004a0e:	e7b5      	b.n	800497c <HAL_GPIO_DeInit+0x8c>
 8004a10:	2305      	movs	r3, #5
 8004a12:	e7b3      	b.n	800497c <HAL_GPIO_DeInit+0x8c>
 8004a14:	2306      	movs	r3, #6
 8004a16:	e7b1      	b.n	800497c <HAL_GPIO_DeInit+0x8c>
 8004a18:	2307      	movs	r3, #7
 8004a1a:	e7af      	b.n	800497c <HAL_GPIO_DeInit+0x8c>
 8004a1c:	2308      	movs	r3, #8
 8004a1e:	e7ad      	b.n	800497c <HAL_GPIO_DeInit+0x8c>
 8004a20:	40013c00 	.word	0x40013c00
 8004a24:	40020000 	.word	0x40020000
 8004a28:	40021400 	.word	0x40021400
 8004a2c:	40021800 	.word	0x40021800
 8004a30:	40021c00 	.word	0x40021c00

08004a34 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004a34:	6903      	ldr	r3, [r0, #16]
 8004a36:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004a38:	bf14      	ite	ne
 8004a3a:	2001      	movne	r0, #1
 8004a3c:	2000      	moveq	r0, #0
 8004a3e:	4770      	bx	lr

08004a40 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004a40:	b10a      	cbz	r2, 8004a46 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004a42:	6181      	str	r1, [r0, #24]
  }
}
 8004a44:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004a46:	0409      	lsls	r1, r1, #16
 8004a48:	e7fb      	b.n	8004a42 <HAL_GPIO_WritePin+0x2>

08004a4a <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004a4a:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004a4c:	ea01 0203 	and.w	r2, r1, r3
 8004a50:	ea21 0103 	bic.w	r1, r1, r3
 8004a54:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004a58:	6181      	str	r1, [r0, #24]
}
 8004a5a:	4770      	bx	lr

08004a5c <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004a5c:	6801      	ldr	r1, [r0, #0]
 8004a5e:	694b      	ldr	r3, [r1, #20]
 8004a60:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004a64:	f04f 0200 	mov.w	r2, #0
 8004a68:	d010      	beq.n	8004a8c <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004a6a:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004a6e:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8004a70:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8004a72:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004a74:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004a78:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004a7c:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004a7e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004a82:	f043 0304 	orr.w	r3, r3, #4
 8004a86:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8004a88:	2001      	movs	r0, #1
 8004a8a:	4770      	bx	lr
  }
  return HAL_OK;
 8004a8c:	4618      	mov	r0, r3
}
 8004a8e:	4770      	bx	lr

08004a90 <I2C_WaitOnFlagUntilTimeout>:
{
 8004a90:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004a94:	4606      	mov	r6, r0
 8004a96:	460f      	mov	r7, r1
 8004a98:	4691      	mov	r9, r2
 8004a9a:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004a9c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004aa0:	6833      	ldr	r3, [r6, #0]
 8004aa2:	f1ba 0f01 	cmp.w	sl, #1
 8004aa6:	bf0c      	ite	eq
 8004aa8:	695c      	ldreq	r4, [r3, #20]
 8004aaa:	699c      	ldrne	r4, [r3, #24]
 8004aac:	ea27 0404 	bic.w	r4, r7, r4
 8004ab0:	b2a4      	uxth	r4, r4
 8004ab2:	fab4 f484 	clz	r4, r4
 8004ab6:	0964      	lsrs	r4, r4, #5
 8004ab8:	45a1      	cmp	r9, r4
 8004aba:	d001      	beq.n	8004ac0 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004abc:	2000      	movs	r0, #0
 8004abe:	e017      	b.n	8004af0 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8004ac0:	1c6a      	adds	r2, r5, #1
 8004ac2:	d0ee      	beq.n	8004aa2 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004ac4:	f7fe ffcc 	bl	8003a60 <HAL_GetTick>
 8004ac8:	9b08      	ldr	r3, [sp, #32]
 8004aca:	1ac0      	subs	r0, r0, r3
 8004acc:	42a8      	cmp	r0, r5
 8004ace:	d801      	bhi.n	8004ad4 <I2C_WaitOnFlagUntilTimeout+0x44>
 8004ad0:	2d00      	cmp	r5, #0
 8004ad2:	d1e5      	bne.n	8004aa0 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004ad4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004ad6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004ad8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004ada:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004ade:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004ae2:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004ae4:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004ae8:	f042 0220 	orr.w	r2, r2, #32
 8004aec:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8004aee:	2001      	movs	r0, #1
}
 8004af0:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004af4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004af4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004af8:	4604      	mov	r4, r0
 8004afa:	460f      	mov	r7, r1
 8004afc:	4616      	mov	r6, r2
 8004afe:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004b00:	6825      	ldr	r5, [r4, #0]
 8004b02:	6968      	ldr	r0, [r5, #20]
 8004b04:	ea27 0000 	bic.w	r0, r7, r0
 8004b08:	b280      	uxth	r0, r0
 8004b0a:	b1b8      	cbz	r0, 8004b3c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004b0c:	696b      	ldr	r3, [r5, #20]
 8004b0e:	055a      	lsls	r2, r3, #21
 8004b10:	d516      	bpl.n	8004b40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b12:	682b      	ldr	r3, [r5, #0]
 8004b14:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004b18:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004b1a:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004b1e:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004b20:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004b22:	2300      	movs	r3, #0
 8004b24:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004b26:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004b2a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004b2e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004b30:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004b34:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004b36:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004b3a:	2001      	movs	r0, #1
}
 8004b3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004b40:	1c73      	adds	r3, r6, #1
 8004b42:	d0de      	beq.n	8004b02 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004b44:	f7fe ff8c 	bl	8003a60 <HAL_GetTick>
 8004b48:	eba0 0008 	sub.w	r0, r0, r8
 8004b4c:	42b0      	cmp	r0, r6
 8004b4e:	d801      	bhi.n	8004b54 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8004b50:	2e00      	cmp	r6, #0
 8004b52:	d1d5      	bne.n	8004b00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004b54:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004b56:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004b58:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004b5a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004b5e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004b62:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004b64:	f042 0220 	orr.w	r2, r2, #32
 8004b68:	e7e4      	b.n	8004b34 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08004b6a <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004b6a:	b570      	push	{r4, r5, r6, lr}
 8004b6c:	4604      	mov	r4, r0
 8004b6e:	460d      	mov	r5, r1
 8004b70:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004b72:	6821      	ldr	r1, [r4, #0]
 8004b74:	694b      	ldr	r3, [r1, #20]
 8004b76:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004b7a:	d001      	beq.n	8004b80 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004b7c:	2000      	movs	r0, #0
 8004b7e:	e010      	b.n	8004ba2 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004b80:	694a      	ldr	r2, [r1, #20]
 8004b82:	06d2      	lsls	r2, r2, #27
 8004b84:	d50e      	bpl.n	8004ba4 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004b86:	f06f 0210 	mvn.w	r2, #16
 8004b8a:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004b8c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004b8e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004b90:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004b94:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004b98:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004b9a:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8004b9c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8004ba0:	2001      	movs	r0, #1
}
 8004ba2:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004ba4:	f7fe ff5c 	bl	8003a60 <HAL_GetTick>
 8004ba8:	1b80      	subs	r0, r0, r6
 8004baa:	42a8      	cmp	r0, r5
 8004bac:	d801      	bhi.n	8004bb2 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004bae:	2d00      	cmp	r5, #0
 8004bb0:	d1df      	bne.n	8004b72 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004bb2:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8004bb4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004bb6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004bb8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004bbc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004bc0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004bc2:	f042 0220 	orr.w	r2, r2, #32
 8004bc6:	e7e8      	b.n	8004b9a <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004bc8 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004bc8:	b570      	push	{r4, r5, r6, lr}
 8004bca:	4604      	mov	r4, r0
 8004bcc:	460d      	mov	r5, r1
 8004bce:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004bd0:	6823      	ldr	r3, [r4, #0]
 8004bd2:	695b      	ldr	r3, [r3, #20]
 8004bd4:	075b      	lsls	r3, r3, #29
 8004bd6:	d501      	bpl.n	8004bdc <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004bd8:	2000      	movs	r0, #0
}
 8004bda:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004bdc:	4620      	mov	r0, r4
 8004bde:	f7ff ff3d 	bl	8004a5c <I2C_IsAcknowledgeFailed>
 8004be2:	b9a8      	cbnz	r0, 8004c10 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004be4:	1c6a      	adds	r2, r5, #1
 8004be6:	d0f3      	beq.n	8004bd0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004be8:	f7fe ff3a 	bl	8003a60 <HAL_GetTick>
 8004bec:	1b80      	subs	r0, r0, r6
 8004bee:	42a8      	cmp	r0, r5
 8004bf0:	d801      	bhi.n	8004bf6 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004bf2:	2d00      	cmp	r5, #0
 8004bf4:	d1ec      	bne.n	8004bd0 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004bf6:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004bf8:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004bfa:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004bfc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004c00:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004c04:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004c06:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004c0a:	f042 0220 	orr.w	r2, r2, #32
 8004c0e:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004c10:	2001      	movs	r0, #1
 8004c12:	e7e2      	b.n	8004bda <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004c14 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004c14:	b570      	push	{r4, r5, r6, lr}
 8004c16:	4604      	mov	r4, r0
 8004c18:	460d      	mov	r5, r1
 8004c1a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004c1c:	6823      	ldr	r3, [r4, #0]
 8004c1e:	695b      	ldr	r3, [r3, #20]
 8004c20:	061b      	lsls	r3, r3, #24
 8004c22:	d501      	bpl.n	8004c28 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004c24:	2000      	movs	r0, #0
}
 8004c26:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004c28:	4620      	mov	r0, r4
 8004c2a:	f7ff ff17 	bl	8004a5c <I2C_IsAcknowledgeFailed>
 8004c2e:	b9a8      	cbnz	r0, 8004c5c <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004c30:	1c6a      	adds	r2, r5, #1
 8004c32:	d0f3      	beq.n	8004c1c <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004c34:	f7fe ff14 	bl	8003a60 <HAL_GetTick>
 8004c38:	1b80      	subs	r0, r0, r6
 8004c3a:	42a8      	cmp	r0, r5
 8004c3c:	d801      	bhi.n	8004c42 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004c3e:	2d00      	cmp	r5, #0
 8004c40:	d1ec      	bne.n	8004c1c <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004c42:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004c44:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004c46:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004c48:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004c4c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004c50:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004c52:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004c56:	f042 0220 	orr.w	r2, r2, #32
 8004c5a:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004c5c:	2001      	movs	r0, #1
 8004c5e:	e7e2      	b.n	8004c26 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08004c60 <I2C_RequestMemoryWrite>:
{
 8004c60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004c64:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c66:	6802      	ldr	r2, [r0, #0]
{
 8004c68:	b085      	sub	sp, #20
 8004c6a:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8004c6e:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c70:	6813      	ldr	r3, [r2, #0]
 8004c72:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004c76:	6013      	str	r3, [r2, #0]
{
 8004c78:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004c7a:	463b      	mov	r3, r7
 8004c7c:	f8cd 8000 	str.w	r8, [sp]
 8004c80:	2200      	movs	r2, #0
 8004c82:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004c86:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004c88:	f7ff ff02 	bl	8004a90 <I2C_WaitOnFlagUntilTimeout>
 8004c8c:	6823      	ldr	r3, [r4, #0]
 8004c8e:	b138      	cbz	r0, 8004ca0 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	05db      	lsls	r3, r3, #23
 8004c94:	d502      	bpl.n	8004c9c <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004c96:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004c9a:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004c9c:	2003      	movs	r0, #3
 8004c9e:	e00a      	b.n	8004cb6 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004ca0:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004ca4:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004ca6:	4919      	ldr	r1, [pc, #100]	; (8004d0c <I2C_RequestMemoryWrite+0xac>)
 8004ca8:	4643      	mov	r3, r8
 8004caa:	463a      	mov	r2, r7
 8004cac:	4620      	mov	r0, r4
 8004cae:	f7ff ff21 	bl	8004af4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004cb2:	b118      	cbz	r0, 8004cbc <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8004cb4:	2001      	movs	r0, #1
}
 8004cb6:	b005      	add	sp, #20
 8004cb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004cbc:	6823      	ldr	r3, [r4, #0]
 8004cbe:	9003      	str	r0, [sp, #12]
 8004cc0:	695a      	ldr	r2, [r3, #20]
 8004cc2:	9203      	str	r2, [sp, #12]
 8004cc4:	699b      	ldr	r3, [r3, #24]
 8004cc6:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cc8:	4642      	mov	r2, r8
 8004cca:	4639      	mov	r1, r7
 8004ccc:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004cce:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cd0:	f7ff ffa0 	bl	8004c14 <I2C_WaitOnTXEFlagUntilTimeout>
 8004cd4:	b140      	cbz	r0, 8004ce8 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004cd6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004cd8:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cda:	bf01      	itttt	eq
 8004cdc:	6822      	ldreq	r2, [r4, #0]
 8004cde:	6813      	ldreq	r3, [r2, #0]
 8004ce0:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004ce4:	6013      	streq	r3, [r2, #0]
 8004ce6:	e7e5      	b.n	8004cb4 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ce8:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cec:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004cee:	d102      	bne.n	8004cf6 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004cf0:	b2ed      	uxtb	r5, r5
 8004cf2:	611d      	str	r5, [r3, #16]
 8004cf4:	e7df      	b.n	8004cb6 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004cf6:	0a2a      	lsrs	r2, r5, #8
 8004cf8:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004cfa:	4639      	mov	r1, r7
 8004cfc:	4642      	mov	r2, r8
 8004cfe:	4620      	mov	r0, r4
 8004d00:	f7ff ff88 	bl	8004c14 <I2C_WaitOnTXEFlagUntilTimeout>
 8004d04:	2800      	cmp	r0, #0
 8004d06:	d1e6      	bne.n	8004cd6 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004d08:	6823      	ldr	r3, [r4, #0]
 8004d0a:	e7f1      	b.n	8004cf0 <I2C_RequestMemoryWrite+0x90>
 8004d0c:	00010002 	.word	0x00010002

08004d10 <I2C_RequestMemoryRead>:
{
 8004d10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004d14:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004d16:	6803      	ldr	r3, [r0, #0]
{
 8004d18:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004d1a:	681a      	ldr	r2, [r3, #0]
 8004d1c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004d20:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004d22:	681a      	ldr	r2, [r3, #0]
{
 8004d24:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004d28:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004d2c:	601a      	str	r2, [r3, #0]
{
 8004d2e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004d30:	463b      	mov	r3, r7
 8004d32:	f8cd 8000 	str.w	r8, [sp]
 8004d36:	2200      	movs	r2, #0
 8004d38:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004d3c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004d3e:	f7ff fea7 	bl	8004a90 <I2C_WaitOnFlagUntilTimeout>
 8004d42:	6823      	ldr	r3, [r4, #0]
 8004d44:	b148      	cbz	r0, 8004d5a <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004d46:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004d48:	05db      	lsls	r3, r3, #23
 8004d4a:	d502      	bpl.n	8004d52 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004d4c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004d50:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004d52:	2003      	movs	r0, #3
}
 8004d54:	b004      	add	sp, #16
 8004d56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004d5a:	fa5f f986 	uxtb.w	r9, r6
 8004d5e:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004d62:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004d64:	492a      	ldr	r1, [pc, #168]	; (8004e10 <I2C_RequestMemoryRead+0x100>)
 8004d66:	4643      	mov	r3, r8
 8004d68:	463a      	mov	r2, r7
 8004d6a:	4620      	mov	r0, r4
 8004d6c:	f7ff fec2 	bl	8004af4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004d70:	b108      	cbz	r0, 8004d76 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8004d72:	2001      	movs	r0, #1
 8004d74:	e7ee      	b.n	8004d54 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004d76:	6823      	ldr	r3, [r4, #0]
 8004d78:	9003      	str	r0, [sp, #12]
 8004d7a:	695a      	ldr	r2, [r3, #20]
 8004d7c:	9203      	str	r2, [sp, #12]
 8004d7e:	699b      	ldr	r3, [r3, #24]
 8004d80:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d82:	4642      	mov	r2, r8
 8004d84:	4639      	mov	r1, r7
 8004d86:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004d88:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004d8a:	f7ff ff43 	bl	8004c14 <I2C_WaitOnTXEFlagUntilTimeout>
 8004d8e:	b140      	cbz	r0, 8004da2 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004d90:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004d92:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004d94:	bf01      	itttt	eq
 8004d96:	6822      	ldreq	r2, [r4, #0]
 8004d98:	6813      	ldreq	r3, [r2, #0]
 8004d9a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004d9e:	6013      	streq	r3, [r2, #0]
 8004da0:	e7e7      	b.n	8004d72 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004da2:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004da6:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004da8:	d11a      	bne.n	8004de0 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004daa:	b2ed      	uxtb	r5, r5
 8004dac:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004dae:	4642      	mov	r2, r8
 8004db0:	4639      	mov	r1, r7
 8004db2:	4620      	mov	r0, r4
 8004db4:	f7ff ff2e 	bl	8004c14 <I2C_WaitOnTXEFlagUntilTimeout>
 8004db8:	2800      	cmp	r0, #0
 8004dba:	d1e9      	bne.n	8004d90 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004dbc:	6822      	ldr	r2, [r4, #0]
 8004dbe:	6813      	ldr	r3, [r2, #0]
 8004dc0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004dc4:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004dc6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004dca:	4602      	mov	r2, r0
 8004dcc:	f8cd 8000 	str.w	r8, [sp]
 8004dd0:	463b      	mov	r3, r7
 8004dd2:	4620      	mov	r0, r4
 8004dd4:	f7ff fe5c 	bl	8004a90 <I2C_WaitOnFlagUntilTimeout>
 8004dd8:	6822      	ldr	r2, [r4, #0]
 8004dda:	b160      	cbz	r0, 8004df6 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004ddc:	6813      	ldr	r3, [r2, #0]
 8004dde:	e7b3      	b.n	8004d48 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004de0:	0a2a      	lsrs	r2, r5, #8
 8004de2:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004de4:	4639      	mov	r1, r7
 8004de6:	4642      	mov	r2, r8
 8004de8:	4620      	mov	r0, r4
 8004dea:	f7ff ff13 	bl	8004c14 <I2C_WaitOnTXEFlagUntilTimeout>
 8004dee:	2800      	cmp	r0, #0
 8004df0:	d1ce      	bne.n	8004d90 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004df2:	6823      	ldr	r3, [r4, #0]
 8004df4:	e7d9      	b.n	8004daa <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004df6:	f049 0301 	orr.w	r3, r9, #1
 8004dfa:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004dfc:	4904      	ldr	r1, [pc, #16]	; (8004e10 <I2C_RequestMemoryRead+0x100>)
 8004dfe:	4643      	mov	r3, r8
 8004e00:	463a      	mov	r2, r7
 8004e02:	4620      	mov	r0, r4
 8004e04:	f7ff fe76 	bl	8004af4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8004e08:	3800      	subs	r0, #0
 8004e0a:	bf18      	it	ne
 8004e0c:	2001      	movne	r0, #1
 8004e0e:	e7a1      	b.n	8004d54 <I2C_RequestMemoryRead+0x44>
 8004e10:	00010002 	.word	0x00010002

08004e14 <HAL_I2C_Init>:
{
 8004e14:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004e16:	4604      	mov	r4, r0
 8004e18:	b908      	cbnz	r0, 8004e1e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8004e1a:	2001      	movs	r0, #1
}
 8004e1c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004e1e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004e22:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004e26:	b91b      	cbnz	r3, 8004e30 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8004e28:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8004e2c:	f7fc fe6e 	bl	8001b0c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004e30:	2324      	movs	r3, #36	; 0x24
 8004e32:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004e36:	6823      	ldr	r3, [r4, #0]
 8004e38:	681a      	ldr	r2, [r3, #0]
 8004e3a:	f022 0201 	bic.w	r2, r2, #1
 8004e3e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004e40:	681a      	ldr	r2, [r3, #0]
 8004e42:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004e46:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004e48:	681a      	ldr	r2, [r3, #0]
 8004e4a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004e4e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004e50:	f001 f814 	bl	8005e7c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004e54:	4b3f      	ldr	r3, [pc, #252]	; (8004f54 <HAL_I2C_Init+0x140>)
 8004e56:	6865      	ldr	r5, [r4, #4]
 8004e58:	429d      	cmp	r5, r3
 8004e5a:	bf94      	ite	ls
 8004e5c:	4b3e      	ldrls	r3, [pc, #248]	; (8004f58 <HAL_I2C_Init+0x144>)
 8004e5e:	4b3f      	ldrhi	r3, [pc, #252]	; (8004f5c <HAL_I2C_Init+0x148>)
 8004e60:	4298      	cmp	r0, r3
 8004e62:	bf8c      	ite	hi
 8004e64:	2300      	movhi	r3, #0
 8004e66:	2301      	movls	r3, #1
 8004e68:	2b00      	cmp	r3, #0
 8004e6a:	d1d6      	bne.n	8004e1a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004e6c:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004e6e:	4e39      	ldr	r6, [pc, #228]	; (8004f54 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004e70:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004e72:	493b      	ldr	r1, [pc, #236]	; (8004f60 <HAL_I2C_Init+0x14c>)
 8004e74:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004e78:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004e7c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004e7e:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004e80:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004e82:	bf88      	it	hi
 8004e84:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8004e88:	6a13      	ldr	r3, [r2, #32]
 8004e8a:	bf88      	it	hi
 8004e8c:	4371      	mulhi	r1, r6
 8004e8e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004e92:	bf84      	itt	hi
 8004e94:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8004e98:	fbb1 f1f6 	udivhi	r1, r1, r6
 8004e9c:	3101      	adds	r1, #1
 8004e9e:	4319      	orrs	r1, r3
 8004ea0:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004ea2:	69d1      	ldr	r1, [r2, #28]
 8004ea4:	1e43      	subs	r3, r0, #1
 8004ea6:	482b      	ldr	r0, [pc, #172]	; (8004f54 <HAL_I2C_Init+0x140>)
 8004ea8:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8004eac:	4285      	cmp	r5, r0
 8004eae:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004eb2:	d832      	bhi.n	8004f1a <HAL_I2C_Init+0x106>
 8004eb4:	006d      	lsls	r5, r5, #1
 8004eb6:	f640 70fc 	movw	r0, #4092	; 0xffc
 8004eba:	fbb3 f3f5 	udiv	r3, r3, r5
 8004ebe:	3301      	adds	r3, #1
 8004ec0:	4203      	tst	r3, r0
 8004ec2:	d042      	beq.n	8004f4a <HAL_I2C_Init+0x136>
 8004ec4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004ec8:	430b      	orrs	r3, r1
 8004eca:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004ecc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004ed0:	6811      	ldr	r1, [r2, #0]
 8004ed2:	4303      	orrs	r3, r0
 8004ed4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8004ed8:	430b      	orrs	r3, r1
 8004eda:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004edc:	6891      	ldr	r1, [r2, #8]
 8004ede:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004ee2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8004ee6:	4303      	orrs	r3, r0
 8004ee8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004eec:	430b      	orrs	r3, r1
 8004eee:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004ef0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004ef4:	68d1      	ldr	r1, [r2, #12]
 8004ef6:	4303      	orrs	r3, r0
 8004ef8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004efc:	430b      	orrs	r3, r1
 8004efe:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004f00:	6813      	ldr	r3, [r2, #0]
 8004f02:	f043 0301 	orr.w	r3, r3, #1
 8004f06:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004f08:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004f0a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004f0c:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004f0e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004f12:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004f14:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8004f18:	e780      	b.n	8004e1c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004f1a:	68a0      	ldr	r0, [r4, #8]
 8004f1c:	b950      	cbnz	r0, 8004f34 <HAL_I2C_Init+0x120>
 8004f1e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004f22:	fbb3 f3f5 	udiv	r3, r3, r5
 8004f26:	3301      	adds	r3, #1
 8004f28:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004f2c:	b17b      	cbz	r3, 8004f4e <HAL_I2C_Init+0x13a>
 8004f2e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004f32:	e7c9      	b.n	8004ec8 <HAL_I2C_Init+0xb4>
 8004f34:	2019      	movs	r0, #25
 8004f36:	4345      	muls	r5, r0
 8004f38:	fbb3 f3f5 	udiv	r3, r3, r5
 8004f3c:	3301      	adds	r3, #1
 8004f3e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004f42:	b123      	cbz	r3, 8004f4e <HAL_I2C_Init+0x13a>
 8004f44:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004f48:	e7be      	b.n	8004ec8 <HAL_I2C_Init+0xb4>
 8004f4a:	2304      	movs	r3, #4
 8004f4c:	e7bc      	b.n	8004ec8 <HAL_I2C_Init+0xb4>
 8004f4e:	2301      	movs	r3, #1
 8004f50:	e7ba      	b.n	8004ec8 <HAL_I2C_Init+0xb4>
 8004f52:	bf00      	nop
 8004f54:	000186a0 	.word	0x000186a0
 8004f58:	001e847f 	.word	0x001e847f
 8004f5c:	003d08ff 	.word	0x003d08ff
 8004f60:	000f4240 	.word	0x000f4240

08004f64 <HAL_I2C_DeInit>:
{
 8004f64:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004f66:	4604      	mov	r4, r0
 8004f68:	b198      	cbz	r0, 8004f92 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8004f6a:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004f6c:	2324      	movs	r3, #36	; 0x24
 8004f6e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004f72:	6813      	ldr	r3, [r2, #0]
 8004f74:	f023 0301 	bic.w	r3, r3, #1
 8004f78:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8004f7a:	f7fc fe0b 	bl	8001b94 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8004f7e:	2000      	movs	r0, #0
 8004f80:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 8004f82:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8004f86:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004f8a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8004f8c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8004f90:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004f92:	2001      	movs	r0, #1
 8004f94:	e7fc      	b.n	8004f90 <HAL_I2C_DeInit+0x2c>
	...

08004f98 <HAL_I2C_Mem_Write>:
{
 8004f98:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004f9c:	4604      	mov	r4, r0
 8004f9e:	4699      	mov	r9, r3
 8004fa0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8004fa2:	460f      	mov	r7, r1
 8004fa4:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004fa6:	f7fe fd5b 	bl	8003a60 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004faa:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004fae:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004fb0:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004fb2:	d003      	beq.n	8004fbc <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8004fb4:	2002      	movs	r0, #2
}
 8004fb6:	b003      	add	sp, #12
 8004fb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004fbc:	9000      	str	r0, [sp, #0]
 8004fbe:	493c      	ldr	r1, [pc, #240]	; (80050b0 <HAL_I2C_Mem_Write+0x118>)
 8004fc0:	2319      	movs	r3, #25
 8004fc2:	2201      	movs	r2, #1
 8004fc4:	4620      	mov	r0, r4
 8004fc6:	f7ff fd63 	bl	8004a90 <I2C_WaitOnFlagUntilTimeout>
 8004fca:	2800      	cmp	r0, #0
 8004fcc:	d1f2      	bne.n	8004fb4 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004fce:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004fd2:	2b01      	cmp	r3, #1
 8004fd4:	d0ee      	beq.n	8004fb4 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004fd6:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004fd8:	2301      	movs	r3, #1
 8004fda:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004fde:	6803      	ldr	r3, [r0, #0]
 8004fe0:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004fe2:	bf5e      	ittt	pl
 8004fe4:	6803      	ldrpl	r3, [r0, #0]
 8004fe6:	f043 0301 	orrpl.w	r3, r3, #1
 8004fea:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004fec:	6803      	ldr	r3, [r0, #0]
 8004fee:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004ff2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004ff4:	2321      	movs	r3, #33	; 0x21
 8004ff6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004ffa:	2340      	movs	r3, #64	; 0x40
 8004ffc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005000:	2300      	movs	r3, #0
 8005002:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005004:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005006:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005008:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800500c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800500e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005010:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005012:	4b28      	ldr	r3, [pc, #160]	; (80050b4 <HAL_I2C_Mem_Write+0x11c>)
 8005014:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005016:	e9cd 6500 	strd	r6, r5, [sp]
 800501a:	464b      	mov	r3, r9
 800501c:	4642      	mov	r2, r8
 800501e:	4639      	mov	r1, r7
 8005020:	4620      	mov	r0, r4
 8005022:	f7ff fe1d 	bl	8004c60 <I2C_RequestMemoryWrite>
 8005026:	2800      	cmp	r0, #0
 8005028:	d02a      	beq.n	8005080 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800502a:	2001      	movs	r0, #1
 800502c:	e7c3      	b.n	8004fb6 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800502e:	f7ff fdf1 	bl	8004c14 <I2C_WaitOnTXEFlagUntilTimeout>
 8005032:	b140      	cbz	r0, 8005046 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005034:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005036:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005038:	bf01      	itttt	eq
 800503a:	6822      	ldreq	r2, [r4, #0]
 800503c:	6813      	ldreq	r3, [r2, #0]
 800503e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005042:	6013      	streq	r3, [r2, #0]
 8005044:	e7f1      	b.n	800502a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005046:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005048:	6827      	ldr	r7, [r4, #0]
 800504a:	461a      	mov	r2, r3
 800504c:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005050:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005052:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005054:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005056:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005058:	3a01      	subs	r2, #1
 800505a:	b292      	uxth	r2, r2
 800505c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800505e:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005060:	1e48      	subs	r0, r1, #1
 8005062:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005064:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005066:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005068:	d50a      	bpl.n	8005080 <HAL_I2C_Mem_Write+0xe8>
 800506a:	b148      	cbz	r0, 8005080 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800506c:	785a      	ldrb	r2, [r3, #1]
 800506e:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005070:	3302      	adds	r3, #2
 8005072:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005074:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005076:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005078:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800507a:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800507c:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800507e:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005080:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005082:	462a      	mov	r2, r5
 8005084:	4631      	mov	r1, r6
 8005086:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005088:	2b00      	cmp	r3, #0
 800508a:	d1d0      	bne.n	800502e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800508c:	f7ff fd9c 	bl	8004bc8 <I2C_WaitOnBTFFlagUntilTimeout>
 8005090:	2800      	cmp	r0, #0
 8005092:	d1cf      	bne.n	8005034 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005094:	6822      	ldr	r2, [r4, #0]
 8005096:	6813      	ldr	r3, [r2, #0]
 8005098:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800509c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800509e:	2320      	movs	r3, #32
 80050a0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80050a4:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80050a8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80050ac:	e783      	b.n	8004fb6 <HAL_I2C_Mem_Write+0x1e>
 80050ae:	bf00      	nop
 80050b0:	00100002 	.word	0x00100002
 80050b4:	ffff0000 	.word	0xffff0000

080050b8 <HAL_I2C_Mem_Read>:
{
 80050b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80050bc:	4604      	mov	r4, r0
 80050be:	b087      	sub	sp, #28
 80050c0:	4699      	mov	r9, r3
 80050c2:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80050c4:	460d      	mov	r5, r1
 80050c6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80050c8:	f7fe fcca 	bl	8003a60 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80050cc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80050d0:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80050d2:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80050d4:	d004      	beq.n	80050e0 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 80050d6:	2502      	movs	r5, #2
}
 80050d8:	4628      	mov	r0, r5
 80050da:	b007      	add	sp, #28
 80050dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80050e0:	9000      	str	r0, [sp, #0]
 80050e2:	4976      	ldr	r1, [pc, #472]	; (80052bc <HAL_I2C_Mem_Read+0x204>)
 80050e4:	2319      	movs	r3, #25
 80050e6:	2201      	movs	r2, #1
 80050e8:	4620      	mov	r0, r4
 80050ea:	f7ff fcd1 	bl	8004a90 <I2C_WaitOnFlagUntilTimeout>
 80050ee:	2800      	cmp	r0, #0
 80050f0:	d1f1      	bne.n	80050d6 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80050f2:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80050f6:	2b01      	cmp	r3, #1
 80050f8:	d0ed      	beq.n	80050d6 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80050fa:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80050fc:	2301      	movs	r3, #1
 80050fe:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005102:	6803      	ldr	r3, [r0, #0]
 8005104:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005106:	bf5e      	ittt	pl
 8005108:	6803      	ldrpl	r3, [r0, #0]
 800510a:	f043 0301 	orrpl.w	r3, r3, #1
 800510e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005110:	6803      	ldr	r3, [r0, #0]
 8005112:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005116:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005118:	2322      	movs	r3, #34	; 0x22
 800511a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800511e:	2340      	movs	r3, #64	; 0x40
 8005120:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005124:	2300      	movs	r3, #0
 8005126:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005128:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800512a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800512c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005130:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005132:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005134:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005136:	4b62      	ldr	r3, [pc, #392]	; (80052c0 <HAL_I2C_Mem_Read+0x208>)
 8005138:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800513a:	4629      	mov	r1, r5
 800513c:	e9cd 7600 	strd	r7, r6, [sp]
 8005140:	464b      	mov	r3, r9
 8005142:	4642      	mov	r2, r8
 8005144:	4620      	mov	r0, r4
 8005146:	f7ff fde3 	bl	8004d10 <I2C_RequestMemoryRead>
 800514a:	4605      	mov	r5, r0
 800514c:	b108      	cbz	r0, 8005152 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800514e:	2501      	movs	r5, #1
 8005150:	e7c2      	b.n	80050d8 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005152:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005154:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005156:	b9b2      	cbnz	r2, 8005186 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005158:	9002      	str	r0, [sp, #8]
 800515a:	695a      	ldr	r2, [r3, #20]
 800515c:	9202      	str	r2, [sp, #8]
 800515e:	699a      	ldr	r2, [r3, #24]
 8005160:	9202      	str	r2, [sp, #8]
 8005162:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005164:	681a      	ldr	r2, [r3, #0]
 8005166:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800516a:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800516c:	f8df 8154 	ldr.w	r8, [pc, #340]	; 80052c4 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005170:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005172:	2b00      	cmp	r3, #0
 8005174:	d12c      	bne.n	80051d0 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005176:	2220      	movs	r2, #32
 8005178:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800517c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005180:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8005184:	e7a8      	b.n	80050d8 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005186:	2a01      	cmp	r2, #1
 8005188:	d10a      	bne.n	80051a0 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800518a:	681a      	ldr	r2, [r3, #0]
 800518c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005190:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005192:	9003      	str	r0, [sp, #12]
 8005194:	695a      	ldr	r2, [r3, #20]
 8005196:	9203      	str	r2, [sp, #12]
 8005198:	699a      	ldr	r2, [r3, #24]
 800519a:	9203      	str	r2, [sp, #12]
 800519c:	9a03      	ldr	r2, [sp, #12]
 800519e:	e7e1      	b.n	8005164 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 80051a0:	2a02      	cmp	r2, #2
 80051a2:	d10e      	bne.n	80051c2 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80051a4:	681a      	ldr	r2, [r3, #0]
 80051a6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80051aa:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80051ac:	681a      	ldr	r2, [r3, #0]
 80051ae:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80051b2:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80051b4:	9004      	str	r0, [sp, #16]
 80051b6:	695a      	ldr	r2, [r3, #20]
 80051b8:	9204      	str	r2, [sp, #16]
 80051ba:	699b      	ldr	r3, [r3, #24]
 80051bc:	9304      	str	r3, [sp, #16]
 80051be:	9b04      	ldr	r3, [sp, #16]
 80051c0:	e7d4      	b.n	800516c <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80051c2:	9005      	str	r0, [sp, #20]
 80051c4:	695a      	ldr	r2, [r3, #20]
 80051c6:	9205      	str	r2, [sp, #20]
 80051c8:	699b      	ldr	r3, [r3, #24]
 80051ca:	9305      	str	r3, [sp, #20]
 80051cc:	9b05      	ldr	r3, [sp, #20]
 80051ce:	e7cd      	b.n	800516c <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80051d0:	2b03      	cmp	r3, #3
 80051d2:	d856      	bhi.n	8005282 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80051d4:	2b01      	cmp	r3, #1
 80051d6:	d115      	bne.n	8005204 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80051d8:	4632      	mov	r2, r6
 80051da:	4639      	mov	r1, r7
 80051dc:	4620      	mov	r0, r4
 80051de:	f7ff fcc4 	bl	8004b6a <I2C_WaitOnRXNEFlagUntilTimeout>
 80051e2:	2800      	cmp	r0, #0
 80051e4:	d1b3      	bne.n	800514e <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80051e6:	6823      	ldr	r3, [r4, #0]
 80051e8:	691a      	ldr	r2, [r3, #16]
 80051ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80051ec:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80051ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80051f0:	3301      	adds	r3, #1
 80051f2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80051f4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80051f6:	3b01      	subs	r3, #1
 80051f8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80051fa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80051fc:	3b01      	subs	r3, #1
 80051fe:	b29b      	uxth	r3, r3
 8005200:	8563      	strh	r3, [r4, #42]	; 0x2a
 8005202:	e7b5      	b.n	8005170 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005204:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005206:	9600      	str	r6, [sp, #0]
 8005208:	463b      	mov	r3, r7
 800520a:	f04f 0200 	mov.w	r2, #0
 800520e:	4641      	mov	r1, r8
 8005210:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8005212:	d119      	bne.n	8005248 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005214:	f7ff fc3c 	bl	8004a90 <I2C_WaitOnFlagUntilTimeout>
 8005218:	2800      	cmp	r0, #0
 800521a:	d198      	bne.n	800514e <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800521c:	6823      	ldr	r3, [r4, #0]
 800521e:	681a      	ldr	r2, [r3, #0]
 8005220:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005224:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005226:	691a      	ldr	r2, [r3, #16]
 8005228:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800522a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800522c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800522e:	1c53      	adds	r3, r2, #1
 8005230:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005232:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005234:	3b01      	subs	r3, #1
 8005236:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005238:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800523a:	3b01      	subs	r3, #1
 800523c:	b29b      	uxth	r3, r3
 800523e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005240:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005242:	691b      	ldr	r3, [r3, #16]
 8005244:	7053      	strb	r3, [r2, #1]
 8005246:	e7d2      	b.n	80051ee <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005248:	f7ff fc22 	bl	8004a90 <I2C_WaitOnFlagUntilTimeout>
 800524c:	2800      	cmp	r0, #0
 800524e:	f47f af7e 	bne.w	800514e <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005252:	6823      	ldr	r3, [r4, #0]
 8005254:	681a      	ldr	r2, [r3, #0]
 8005256:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800525a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800525c:	691a      	ldr	r2, [r3, #16]
 800525e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005260:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005262:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005264:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005266:	3301      	adds	r3, #1
 8005268:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800526a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800526c:	3b01      	subs	r3, #1
 800526e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005270:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005272:	3b01      	subs	r3, #1
 8005274:	b29b      	uxth	r3, r3
 8005276:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005278:	4602      	mov	r2, r0
 800527a:	463b      	mov	r3, r7
 800527c:	4641      	mov	r1, r8
 800527e:	4620      	mov	r0, r4
 8005280:	e7c8      	b.n	8005214 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005282:	4632      	mov	r2, r6
 8005284:	4639      	mov	r1, r7
 8005286:	4620      	mov	r0, r4
 8005288:	f7ff fc6f 	bl	8004b6a <I2C_WaitOnRXNEFlagUntilTimeout>
 800528c:	2800      	cmp	r0, #0
 800528e:	f47f af5e 	bne.w	800514e <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005292:	6823      	ldr	r3, [r4, #0]
 8005294:	691a      	ldr	r2, [r3, #16]
 8005296:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005298:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800529a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800529c:	1c53      	adds	r3, r2, #1
 800529e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 80052a0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80052a2:	3b01      	subs	r3, #1
 80052a4:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80052a6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80052a8:	3b01      	subs	r3, #1
 80052aa:	b29b      	uxth	r3, r3
 80052ac:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80052ae:	6823      	ldr	r3, [r4, #0]
 80052b0:	6959      	ldr	r1, [r3, #20]
 80052b2:	0749      	lsls	r1, r1, #29
 80052b4:	f57f af5c 	bpl.w	8005170 <HAL_I2C_Mem_Read+0xb8>
 80052b8:	e7c3      	b.n	8005242 <HAL_I2C_Mem_Read+0x18a>
 80052ba:	bf00      	nop
 80052bc:	00100002 	.word	0x00100002
 80052c0:	ffff0000 	.word	0xffff0000
 80052c4:	00010004 	.word	0x00010004

080052c8 <HAL_I2C_GetState>:
  return hi2c->State;
 80052c8:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 80052cc:	4770      	bx	lr

080052ce <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80052ce:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80052d0:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80052d4:	01d2      	lsls	r2, r2, #7
 80052d6:	3284      	adds	r2, #132	; 0x84
 80052d8:	1883      	adds	r3, r0, r2
{
 80052da:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80052de:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80052e0:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80052e2:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80052e4:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80052e8:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80052ec:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80052ee:	68c5      	ldr	r5, [r0, #12]
 80052f0:	f10c 0701 	add.w	r7, ip, #1
 80052f4:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80052f8:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80052fc:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80052fe:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005300:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005304:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005306:	68c5      	ldr	r5, [r0, #12]
 8005308:	68ce      	ldr	r6, [r1, #12]
 800530a:	f3c5 050a 	ubfx	r5, r5, #0, #11
 800530e:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005310:	689d      	ldr	r5, [r3, #8]
 8005312:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005316:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005318:	68c7      	ldr	r7, [r0, #12]
 800531a:	688d      	ldr	r5, [r1, #8]
 800531c:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005320:	3501      	adds	r5, #1
 8005322:	443d      	add	r5, r7
 8005324:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005328:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800532a:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800532c:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800532e:	f025 0507 	bic.w	r5, r5, #7
 8005332:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005334:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005338:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800533a:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800533c:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005340:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005344:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005348:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800534c:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005350:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005354:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005358:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800535a:	695d      	ldr	r5, [r3, #20]
 800535c:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8005360:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005362:	694d      	ldr	r5, [r1, #20]
 8005364:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005366:	69dd      	ldr	r5, [r3, #28]
 8005368:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800536c:	f025 0507 	bic.w	r5, r5, #7
 8005370:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005372:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005376:	433d      	orrs	r5, r7
 8005378:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800537a:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800537c:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800537e:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005382:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005384:	b31e      	cbz	r6, 80053ce <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005386:	2e01      	cmp	r6, #1
 8005388:	d023      	beq.n	80053d2 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800538a:	1eb5      	subs	r5, r6, #2
 800538c:	2d02      	cmp	r5, #2
 800538e:	d922      	bls.n	80053d6 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8005390:	2e07      	cmp	r6, #7
 8005392:	bf0c      	ite	eq
 8005394:	2502      	moveq	r5, #2
 8005396:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005398:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800539a:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800539e:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80053a0:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80053a4:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80053a6:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80053a8:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80053aa:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80053ac:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80053ae:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80053b2:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80053b4:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80053b6:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80053ba:	f024 0407 	bic.w	r4, r4, #7
 80053be:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80053c0:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80053c2:	5883      	ldr	r3, [r0, r2]
 80053c4:	f043 0301 	orr.w	r3, r3, #1
 80053c8:	5083      	str	r3, [r0, r2]
}
 80053ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80053ce:	2504      	movs	r5, #4
 80053d0:	e7e2      	b.n	8005398 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80053d2:	2503      	movs	r5, #3
 80053d4:	e7e0      	b.n	8005398 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80053d6:	2502      	movs	r5, #2
 80053d8:	e7de      	b.n	8005398 <LTDC_SetConfig+0xca>
	...

080053dc <HAL_LTDC_Init>:
{
 80053dc:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80053de:	4604      	mov	r4, r0
 80053e0:	2800      	cmp	r0, #0
 80053e2:	d063      	beq.n	80054ac <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80053e4:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80053e8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80053ec:	b91b      	cbnz	r3, 80053f6 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80053ee:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80053f2:	f7fc fbed 	bl	8001bd0 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80053f6:	2302      	movs	r3, #2
 80053f8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80053fc:	6823      	ldr	r3, [r4, #0]
 80053fe:	699a      	ldr	r2, [r3, #24]
 8005400:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005404:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005406:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800540a:	4302      	orrs	r2, r0
 800540c:	68e0      	ldr	r0, [r4, #12]
 800540e:	6999      	ldr	r1, [r3, #24]
 8005410:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005412:	6920      	ldr	r0, [r4, #16]
 8005414:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005416:	430a      	orrs	r2, r1
 8005418:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800541a:	689a      	ldr	r2, [r3, #8]
 800541c:	4924      	ldr	r1, [pc, #144]	; (80054b0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800541e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005420:	400a      	ands	r2, r1
 8005422:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005424:	689a      	ldr	r2, [r3, #8]
 8005426:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800542a:	69a0      	ldr	r0, [r4, #24]
 800542c:	4302      	orrs	r2, r0
 800542e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005430:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005432:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005434:	400a      	ands	r2, r1
 8005436:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005438:	68da      	ldr	r2, [r3, #12]
 800543a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800543e:	6a20      	ldr	r0, [r4, #32]
 8005440:	4302      	orrs	r2, r0
 8005442:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005444:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005446:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005448:	400a      	ands	r2, r1
 800544a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800544c:	691a      	ldr	r2, [r3, #16]
 800544e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005452:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005454:	4302      	orrs	r2, r0
 8005456:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005458:	695a      	ldr	r2, [r3, #20]
 800545a:	4011      	ands	r1, r2
 800545c:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800545e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005460:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005462:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005466:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005468:	430a      	orrs	r2, r1
 800546a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800546c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800546e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005472:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005476:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800547a:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800547c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800547e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8005482:	430a      	orrs	r2, r1
 8005484:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8005488:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800548c:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800548e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005490:	f042 0206 	orr.w	r2, r2, #6
 8005494:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005496:	699a      	ldr	r2, [r3, #24]
 8005498:	f042 0201 	orr.w	r2, r2, #1
 800549c:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800549e:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80054a0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80054a2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80054a6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80054aa:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80054ac:	2001      	movs	r0, #1
 80054ae:	e7fc      	b.n	80054aa <HAL_LTDC_Init+0xce>
 80054b0:	f000f800 	.word	0xf000f800

080054b4 <HAL_LTDC_ErrorCallback>:
 80054b4:	4770      	bx	lr

080054b6 <HAL_LTDC_LineEventCallback>:
 80054b6:	4770      	bx	lr

080054b8 <HAL_LTDC_ReloadEventCallback>:
 80054b8:	4770      	bx	lr

080054ba <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80054ba:	6803      	ldr	r3, [r0, #0]
{
 80054bc:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80054be:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80054c0:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80054c2:	0772      	lsls	r2, r6, #29
{
 80054c4:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80054c6:	d514      	bpl.n	80054f2 <HAL_LTDC_IRQHandler+0x38>
 80054c8:	0769      	lsls	r1, r5, #29
 80054ca:	d512      	bpl.n	80054f2 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80054cc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80054ce:	f022 0204 	bic.w	r2, r2, #4
 80054d2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80054d4:	2204      	movs	r2, #4
 80054d6:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80054d8:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80054dc:	f043 0301 	orr.w	r3, r3, #1
 80054e0:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80054e4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80054e6:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80054ea:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80054ee:	f7ff ffe1 	bl	80054b4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80054f2:	07b2      	lsls	r2, r6, #30
 80054f4:	d516      	bpl.n	8005524 <HAL_LTDC_IRQHandler+0x6a>
 80054f6:	07ab      	lsls	r3, r5, #30
 80054f8:	d514      	bpl.n	8005524 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80054fa:	6823      	ldr	r3, [r4, #0]
 80054fc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80054fe:	f022 0202 	bic.w	r2, r2, #2
 8005502:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005504:	2202      	movs	r2, #2
 8005506:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005508:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800550c:	4313      	orrs	r3, r2
 800550e:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005512:	2304      	movs	r3, #4
 8005514:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005518:	2300      	movs	r3, #0
 800551a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800551e:	4620      	mov	r0, r4
 8005520:	f7ff ffc8 	bl	80054b4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005524:	07f0      	lsls	r0, r6, #31
 8005526:	d510      	bpl.n	800554a <HAL_LTDC_IRQHandler+0x90>
 8005528:	07e9      	lsls	r1, r5, #31
 800552a:	d50e      	bpl.n	800554a <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800552c:	6823      	ldr	r3, [r4, #0]
 800552e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005530:	f022 0201 	bic.w	r2, r2, #1
 8005534:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005536:	2201      	movs	r2, #1
 8005538:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800553a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800553c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005540:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005544:	4620      	mov	r0, r4
 8005546:	f7ff ffb6 	bl	80054b6 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800554a:	0732      	lsls	r2, r6, #28
 800554c:	d511      	bpl.n	8005572 <HAL_LTDC_IRQHandler+0xb8>
 800554e:	072b      	lsls	r3, r5, #28
 8005550:	d50f      	bpl.n	8005572 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005552:	6823      	ldr	r3, [r4, #0]
 8005554:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005556:	f022 0208 	bic.w	r2, r2, #8
 800555a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800555c:	2208      	movs	r2, #8
 800555e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005560:	2301      	movs	r3, #1
 8005562:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005566:	2300      	movs	r3, #0
 8005568:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800556c:	4620      	mov	r0, r4
 800556e:	f7ff ffa3 	bl	80054b8 <HAL_LTDC_ReloadEventCallback>
}
 8005572:	bd70      	pop	{r4, r5, r6, pc}

08005574 <HAL_LTDC_ConfigLayer>:
{
 8005574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005578:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800557c:	2b01      	cmp	r3, #1
{
 800557e:	4606      	mov	r6, r0
 8005580:	460f      	mov	r7, r1
 8005582:	4694      	mov	ip, r2
 8005584:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8005588:	d01f      	beq.n	80055ca <HAL_LTDC_ConfigLayer+0x56>
 800558a:	f04f 0801 	mov.w	r8, #1
 800558e:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005592:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005596:	2434      	movs	r4, #52	; 0x34
 8005598:	460d      	mov	r5, r1
 800559a:	fb04 6402 	mla	r4, r4, r2, r6
 800559e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80055a0:	3438      	adds	r4, #56	; 0x38
 80055a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80055a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80055a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80055a8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80055aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80055ac:	682b      	ldr	r3, [r5, #0]
 80055ae:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80055b0:	4630      	mov	r0, r6
 80055b2:	4662      	mov	r2, ip
 80055b4:	4639      	mov	r1, r7
 80055b6:	f7ff fe8a 	bl	80052ce <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80055ba:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80055bc:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80055be:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80055c2:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80055c6:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80055ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080055d0 <HAL_LTDC_SetPitch>:
{
 80055d0:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 80055d2:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80055d6:	2b01      	cmp	r3, #1
 80055d8:	f04f 0302 	mov.w	r3, #2
 80055dc:	d02c      	beq.n	8005638 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 80055de:	2434      	movs	r4, #52	; 0x34
 80055e0:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80055e4:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 80055e8:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80055ea:	b33c      	cbz	r4, 800563c <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80055ec:	2c01      	cmp	r4, #1
 80055ee:	d027      	beq.n	8005640 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80055f0:	1ea5      	subs	r5, r4, #2
 80055f2:	429d      	cmp	r5, r3
 80055f4:	d902      	bls.n	80055fc <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 80055f6:	2c07      	cmp	r4, #7
 80055f8:	bf18      	it	ne
 80055fa:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 80055fc:	6804      	ldr	r4, [r0, #0]
 80055fe:	01d2      	lsls	r2, r2, #7
 8005600:	3284      	adds	r2, #132	; 0x84
 8005602:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8005604:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005606:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8005608:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800560c:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8005610:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005612:	4c0c      	ldr	r4, [pc, #48]	; (8005644 <HAL_LTDC_SetPitch+0x74>)
 8005614:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8005616:	f045 0501 	orr.w	r5, r5, #1
 800561a:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 800561c:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800561e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8005622:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005624:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005626:	f043 0301 	orr.w	r3, r3, #1
 800562a:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800562c:	2301      	movs	r3, #1
 800562e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005632:	2300      	movs	r3, #0
 8005634:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8005638:	4618      	mov	r0, r3
 800563a:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 800563c:	2304      	movs	r3, #4
 800563e:	e7dd      	b.n	80055fc <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8005640:	2303      	movs	r3, #3
 8005642:	e7db      	b.n	80055fc <HAL_LTDC_SetPitch+0x2c>
 8005644:	40016800 	.word	0x40016800

08005648 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005648:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800564a:	2300      	movs	r3, #0
 800564c:	9301      	str	r3, [sp, #4]
 800564e:	4b18      	ldr	r3, [pc, #96]	; (80056b0 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005650:	4d18      	ldr	r5, [pc, #96]	; (80056b4 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8005652:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005654:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005658:	641a      	str	r2, [r3, #64]	; 0x40
 800565a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800565c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005660:	9301      	str	r3, [sp, #4]
 8005662:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005664:	4b14      	ldr	r3, [pc, #80]	; (80056b8 <HAL_PWREx_EnableOverDrive+0x70>)
 8005666:	2201      	movs	r2, #1
 8005668:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 800566a:	f7fe f9f9 	bl	8003a60 <HAL_GetTick>
 800566e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005670:	686b      	ldr	r3, [r5, #4]
 8005672:	03da      	lsls	r2, r3, #15
 8005674:	d50b      	bpl.n	800568e <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005676:	4b10      	ldr	r3, [pc, #64]	; (80056b8 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005678:	4d0e      	ldr	r5, [pc, #56]	; (80056b4 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800567a:	2201      	movs	r2, #1
 800567c:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 800567e:	f7fe f9ef 	bl	8003a60 <HAL_GetTick>
 8005682:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005684:	686b      	ldr	r3, [r5, #4]
 8005686:	039b      	lsls	r3, r3, #14
 8005688:	d50a      	bpl.n	80056a0 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800568a:	2000      	movs	r0, #0
 800568c:	e006      	b.n	800569c <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800568e:	f7fe f9e7 	bl	8003a60 <HAL_GetTick>
 8005692:	1b00      	subs	r0, r0, r4
 8005694:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005698:	d9ea      	bls.n	8005670 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800569a:	2003      	movs	r0, #3
}
 800569c:	b003      	add	sp, #12
 800569e:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80056a0:	f7fe f9de 	bl	8003a60 <HAL_GetTick>
 80056a4:	1b00      	subs	r0, r0, r4
 80056a6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80056aa:	d9eb      	bls.n	8005684 <HAL_PWREx_EnableOverDrive+0x3c>
 80056ac:	e7f5      	b.n	800569a <HAL_PWREx_EnableOverDrive+0x52>
 80056ae:	bf00      	nop
 80056b0:	40023800 	.word	0x40023800
 80056b4:	40007000 	.word	0x40007000
 80056b8:	420e0000 	.word	0x420e0000

080056bc <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 80056bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 80056c0:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 80056c2:	b13e      	cbz	r6, 80056d4 <QSPI_Config+0x18>
 80056c4:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 80056c8:	bf1f      	itttt	ne
 80056ca:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 80056cc:	6804      	ldrne	r4, [r0, #0]
 80056ce:	f103 33ff 	addne.w	r3, r3, #4294967295
 80056d2:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 80056d4:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80056d8:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 80056dc:	f1b9 0f00 	cmp.w	r9, #0
 80056e0:	d04f      	beq.n	8005782 <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80056e2:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 80056e4:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80056e6:	f8d1 a000 	ldr.w	sl, [r1]
 80056ea:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 80056ee:	ea46 0909 	orr.w	r9, r6, r9
 80056f2:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 80056f6:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 80056fa:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80056fe:	b335      	cbz	r5, 800574e <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005700:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005702:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005704:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005706:	ea49 0505 	orr.w	r5, r9, r5
 800570a:	b19f      	cbz	r7, 8005734 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800570c:	ea4a 0307 	orr.w	r3, sl, r7
 8005710:	4323      	orrs	r3, r4
 8005712:	ea43 0308 	orr.w	r3, r3, r8
 8005716:	68cc      	ldr	r4, [r1, #12]
 8005718:	ea43 030e 	orr.w	r3, r3, lr
 800571c:	4333      	orrs	r3, r6
 800571e:	4323      	orrs	r3, r4
 8005720:	ea43 030c 	orr.w	r3, r3, ip
 8005724:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005726:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800572a:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800572c:	d00d      	beq.n	800574a <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800572e:	684b      	ldr	r3, [r1, #4]
 8005730:	6183      	str	r3, [r0, #24]
 8005732:	e00a      	b.n	800574a <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005734:	ea4a 0304 	orr.w	r3, sl, r4
 8005738:	ea43 0308 	orr.w	r3, r3, r8
 800573c:	ea43 030e 	orr.w	r3, r3, lr
 8005740:	4333      	orrs	r3, r6
 8005742:	ea43 030c 	orr.w	r3, r3, ip
 8005746:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005748:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800574a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800574e:	b16f      	cbz	r7, 800576c <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005750:	ea4a 0307 	orr.w	r3, sl, r7
 8005754:	4323      	orrs	r3, r4
 8005756:	ea43 0308 	orr.w	r3, r3, r8
 800575a:	68cc      	ldr	r4, [r1, #12]
 800575c:	ea43 030e 	orr.w	r3, r3, lr
 8005760:	4323      	orrs	r3, r4
 8005762:	ea43 030c 	orr.w	r3, r3, ip
 8005766:	ea43 0309 	orr.w	r3, r3, r9
 800576a:	e7dc      	b.n	8005726 <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800576c:	ea4a 0304 	orr.w	r3, sl, r4
 8005770:	ea43 0308 	orr.w	r3, r3, r8
 8005774:	ea43 030e 	orr.w	r3, r3, lr
 8005778:	ea43 030c 	orr.w	r3, r3, ip
 800577c:	ea43 0309 	orr.w	r3, r3, r9
 8005780:	e7e2      	b.n	8005748 <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005782:	b345      	cbz	r5, 80057d6 <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005784:	6804      	ldr	r4, [r0, #0]
 8005786:	688b      	ldr	r3, [r1, #8]
 8005788:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800578a:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800578e:	694e      	ldr	r6, [r1, #20]
 8005790:	6908      	ldr	r0, [r1, #16]
 8005792:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8005796:	ea43 0502 	orr.w	r5, r3, r2
 800579a:	04b6      	lsls	r6, r6, #18
 800579c:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80057a0:	b187      	cbz	r7, 80057c4 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80057a2:	4338      	orrs	r0, r7
 80057a4:	ea40 0008 	orr.w	r0, r0, r8
 80057a8:	4303      	orrs	r3, r0
 80057aa:	68c8      	ldr	r0, [r1, #12]
 80057ac:	ea43 030c 	orr.w	r3, r3, ip
 80057b0:	4303      	orrs	r3, r0
 80057b2:	4333      	orrs	r3, r6
 80057b4:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80057b6:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80057ba:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80057bc:	d0c5      	beq.n	800574a <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80057be:	684b      	ldr	r3, [r1, #4]
 80057c0:	61a3      	str	r3, [r4, #24]
 80057c2:	e7c2      	b.n	800574a <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80057c4:	ea40 0008 	orr.w	r0, r0, r8
 80057c8:	4303      	orrs	r3, r0
 80057ca:	ea43 030c 	orr.w	r3, r3, ip
 80057ce:	4333      	orrs	r3, r6
 80057d0:	432b      	orrs	r3, r5
 80057d2:	6163      	str	r3, [r4, #20]
 80057d4:	e7b9      	b.n	800574a <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80057d6:	b17f      	cbz	r7, 80057f8 <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80057d8:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 80057da:	6800      	ldr	r0, [r0, #0]
 80057dc:	ea46 0307 	orr.w	r3, r6, r7
 80057e0:	4313      	orrs	r3, r2
 80057e2:	4323      	orrs	r3, r4
 80057e4:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 80057e6:	4323      	orrs	r3, r4
 80057e8:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 80057ea:	4323      	orrs	r3, r4
 80057ec:	68cc      	ldr	r4, [r1, #12]
 80057ee:	4323      	orrs	r3, r4
 80057f0:	694c      	ldr	r4, [r1, #20]
 80057f2:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 80057f6:	e796      	b.n	8005726 <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 80057f8:	2e00      	cmp	r6, #0
 80057fa:	d0a6      	beq.n	800574a <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80057fc:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 80057fe:	6800      	ldr	r0, [r0, #0]
 8005800:	4333      	orrs	r3, r6
 8005802:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8005804:	431a      	orrs	r2, r3
 8005806:	4332      	orrs	r2, r6
 8005808:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800580a:	694b      	ldr	r3, [r1, #20]
 800580c:	4332      	orrs	r2, r6
 800580e:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8005812:	6142      	str	r2, [r0, #20]
}
 8005814:	e799      	b.n	800574a <QSPI_Config+0x8e>

08005816 <QSPI_WaitFlagStateUntilTimeout>:
{
 8005816:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800581a:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800581e:	4604      	mov	r4, r0
 8005820:	460e      	mov	r6, r1
 8005822:	4615      	mov	r5, r2
 8005824:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005826:	6822      	ldr	r2, [r4, #0]
 8005828:	6893      	ldr	r3, [r2, #8]
 800582a:	4233      	tst	r3, r6
 800582c:	bf14      	ite	ne
 800582e:	2301      	movne	r3, #1
 8005830:	2300      	moveq	r3, #0
 8005832:	42ab      	cmp	r3, r5
 8005834:	d101      	bne.n	800583a <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8005836:	2000      	movs	r0, #0
 8005838:	e012      	b.n	8005860 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800583a:	f1b8 3fff 	cmp.w	r8, #4294967295
 800583e:	d0f3      	beq.n	8005828 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005840:	f7fe f90e 	bl	8003a60 <HAL_GetTick>
 8005844:	1bc0      	subs	r0, r0, r7
 8005846:	4540      	cmp	r0, r8
 8005848:	d802      	bhi.n	8005850 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800584a:	f1b8 0f00 	cmp.w	r8, #0
 800584e:	d1ea      	bne.n	8005826 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005850:	2304      	movs	r3, #4
 8005852:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005856:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005858:	f043 0301 	orr.w	r3, r3, #1
 800585c:	6463      	str	r3, [r4, #68]	; 0x44
 800585e:	2001      	movs	r0, #1
}
 8005860:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005864 <HAL_QSPI_Init>:
{
 8005864:	b530      	push	{r4, r5, lr}
 8005866:	b085      	sub	sp, #20
 8005868:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800586a:	f7fe f8f9 	bl	8003a60 <HAL_GetTick>
 800586e:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8005870:	2c00      	cmp	r4, #0
 8005872:	d047      	beq.n	8005904 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8005874:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005878:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800587c:	b94a      	cbnz	r2, 8005892 <HAL_QSPI_Init+0x2e>
 800587e:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8005880:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8005884:	4620      	mov	r0, r4
 8005886:	f7fc f9d5 	bl	8001c34 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800588a:	f241 3288 	movw	r2, #5000	; 0x1388
 800588e:	9b03      	ldr	r3, [sp, #12]
 8005890:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005892:	6820      	ldr	r0, [r4, #0]
 8005894:	68a1      	ldr	r1, [r4, #8]
 8005896:	6802      	ldr	r2, [r0, #0]
 8005898:	3901      	subs	r1, #1
 800589a:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800589e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80058a2:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80058a4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80058a6:	9200      	str	r2, [sp, #0]
 80058a8:	2120      	movs	r1, #32
 80058aa:	2200      	movs	r2, #0
 80058ac:	4620      	mov	r0, r4
 80058ae:	f7ff ffb2 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 80058b2:	bb10      	cbnz	r0, 80058fa <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 80058b4:	69e5      	ldr	r5, [r4, #28]
 80058b6:	68e3      	ldr	r3, [r4, #12]
 80058b8:	6822      	ldr	r2, [r4, #0]
 80058ba:	432b      	orrs	r3, r5
 80058bc:	6a25      	ldr	r5, [r4, #32]
 80058be:	6811      	ldr	r1, [r2, #0]
 80058c0:	432b      	orrs	r3, r5
 80058c2:	6865      	ldr	r5, [r4, #4]
 80058c4:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80058c8:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 80058cc:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 80058d0:	430b      	orrs	r3, r1
 80058d2:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 80058d4:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 80058d8:	430b      	orrs	r3, r1
 80058da:	6921      	ldr	r1, [r4, #16]
 80058dc:	6855      	ldr	r5, [r2, #4]
 80058de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80058e2:	4909      	ldr	r1, [pc, #36]	; (8005908 <HAL_QSPI_Init+0xa4>)
 80058e4:	4029      	ands	r1, r5
 80058e6:	430b      	orrs	r3, r1
 80058e8:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 80058ea:	6813      	ldr	r3, [r2, #0]
 80058ec:	f043 0301 	orr.w	r3, r3, #1
 80058f0:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 80058f2:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80058f4:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 80058f6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80058fa:	2300      	movs	r3, #0
 80058fc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005900:	b005      	add	sp, #20
 8005902:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8005904:	2001      	movs	r0, #1
 8005906:	e7fb      	b.n	8005900 <HAL_QSPI_Init+0x9c>
 8005908:	ffe0f8fe 	.word	0xffe0f8fe

0800590c <HAL_QSPI_DeInit>:
{
 800590c:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800590e:	4604      	mov	r4, r0
 8005910:	b168      	cbz	r0, 800592e <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8005912:	6802      	ldr	r2, [r0, #0]
 8005914:	6813      	ldr	r3, [r2, #0]
 8005916:	f023 0301 	bic.w	r3, r3, #1
 800591a:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800591c:	f7fc f9e4 	bl	8001ce8 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005920:	2000      	movs	r0, #0
 8005922:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8005924:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005928:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800592c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800592e:	2001      	movs	r0, #1
 8005930:	e7fc      	b.n	800592c <HAL_QSPI_DeInit+0x20>

08005932 <HAL_QSPI_Command>:
{
 8005932:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005936:	4604      	mov	r4, r0
 8005938:	b085      	sub	sp, #20
 800593a:	4617      	mov	r7, r2
 800593c:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800593e:	f7fe f88f 	bl	8003a60 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005942:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005946:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005948:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800594a:	d034      	beq.n	80059b6 <HAL_QSPI_Command+0x84>
 800594c:	2201      	movs	r2, #1
 800594e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005952:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005956:	2a01      	cmp	r2, #1
 8005958:	fa5f f882 	uxtb.w	r8, r2
 800595c:	f04f 0602 	mov.w	r6, #2
 8005960:	d127      	bne.n	80059b2 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005962:	2200      	movs	r2, #0
 8005964:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005966:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8005968:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800596c:	9700      	str	r7, [sp, #0]
 800596e:	2120      	movs	r1, #32
 8005970:	4620      	mov	r0, r4
 8005972:	f7ff ff50 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005976:	4605      	mov	r5, r0
 8005978:	b9a0      	cbnz	r0, 80059a4 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800597a:	4602      	mov	r2, r0
 800597c:	4649      	mov	r1, r9
 800597e:	4620      	mov	r0, r4
 8005980:	f7ff fe9c 	bl	80056bc <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8005984:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8005988:	9b03      	ldr	r3, [sp, #12]
 800598a:	b94a      	cbnz	r2, 80059a0 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800598c:	9700      	str	r7, [sp, #0]
 800598e:	4642      	mov	r2, r8
 8005990:	4631      	mov	r1, r6
 8005992:	4620      	mov	r0, r4
 8005994:	f7ff ff3f 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005998:	4605      	mov	r5, r0
 800599a:	b918      	cbnz	r0, 80059a4 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800599c:	6823      	ldr	r3, [r4, #0]
 800599e:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80059a0:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80059a4:	2300      	movs	r3, #0
 80059a6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80059aa:	4628      	mov	r0, r5
 80059ac:	b005      	add	sp, #20
 80059ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80059b2:	4635      	mov	r5, r6
 80059b4:	e7f6      	b.n	80059a4 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 80059b6:	2502      	movs	r5, #2
 80059b8:	e7f7      	b.n	80059aa <HAL_QSPI_Command+0x78>

080059ba <HAL_QSPI_AutoPolling>:
{
 80059ba:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80059be:	4604      	mov	r4, r0
 80059c0:	4615      	mov	r5, r2
 80059c2:	461e      	mov	r6, r3
 80059c4:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 80059c6:	f7fe f84b 	bl	8003a60 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80059ca:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80059ce:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80059d0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80059d2:	d040      	beq.n	8005a56 <HAL_QSPI_AutoPolling+0x9c>
 80059d4:	2201      	movs	r2, #1
 80059d6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80059da:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80059de:	2a01      	cmp	r2, #1
 80059e0:	b2d7      	uxtb	r7, r2
 80059e2:	d136      	bne.n	8005a52 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 80059e4:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80059e6:	2200      	movs	r2, #0
 80059e8:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80059ea:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 80059ec:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80059f0:	9600      	str	r6, [sp, #0]
 80059f2:	2120      	movs	r1, #32
 80059f4:	4620      	mov	r0, r4
 80059f6:	f7ff ff0e 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80059fa:	bb20      	cbnz	r0, 8005a46 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 80059fc:	6821      	ldr	r1, [r4, #0]
 80059fe:	682a      	ldr	r2, [r5, #0]
 8005a00:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8005a02:	686a      	ldr	r2, [r5, #4]
 8005a04:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8005a06:	68aa      	ldr	r2, [r5, #8]
 8005a08:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005a0a:	680a      	ldr	r2, [r1, #0]
 8005a0c:	6928      	ldr	r0, [r5, #16]
 8005a0e:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8005a12:	4302      	orrs	r2, r0
 8005a14:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005a18:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8005a1a:	68ea      	ldr	r2, [r5, #12]
 8005a1c:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005a20:	4641      	mov	r1, r8
 8005a22:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005a26:	4620      	mov	r0, r4
 8005a28:	f7ff fe48 	bl	80056bc <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8005a2c:	9b03      	ldr	r3, [sp, #12]
 8005a2e:	9600      	str	r6, [sp, #0]
 8005a30:	463a      	mov	r2, r7
 8005a32:	2108      	movs	r1, #8
 8005a34:	4620      	mov	r0, r4
 8005a36:	f7ff feee 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005a3a:	b920      	cbnz	r0, 8005a46 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8005a3c:	6823      	ldr	r3, [r4, #0]
 8005a3e:	2208      	movs	r2, #8
 8005a40:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005a42:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005a46:	2300      	movs	r3, #0
 8005a48:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005a4c:	b004      	add	sp, #16
 8005a4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8005a52:	2002      	movs	r0, #2
 8005a54:	e7f7      	b.n	8005a46 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8005a56:	2002      	movs	r0, #2
 8005a58:	e7f8      	b.n	8005a4c <HAL_QSPI_AutoPolling+0x92>

08005a5a <HAL_QSPI_MemoryMapped>:
{
 8005a5a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005a5c:	4604      	mov	r4, r0
 8005a5e:	4616      	mov	r6, r2
 8005a60:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005a62:	f7fd fffd 	bl	8003a60 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005a66:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005a6a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005a6c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005a6e:	d032      	beq.n	8005ad6 <HAL_QSPI_MemoryMapped+0x7c>
 8005a70:	2201      	movs	r2, #1
 8005a72:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005a76:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005a7a:	2a01      	cmp	r2, #1
 8005a7c:	d129      	bne.n	8005ad2 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005a7e:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005a80:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005a82:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005a84:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005a88:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8005a8a:	9100      	str	r1, [sp, #0]
 8005a8c:	4620      	mov	r0, r4
 8005a8e:	2120      	movs	r1, #32
 8005a90:	f7ff fec1 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005a94:	4605      	mov	r5, r0
 8005a96:	b9b0      	cbnz	r0, 8005ac6 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005a98:	6823      	ldr	r3, [r4, #0]
 8005a9a:	6872      	ldr	r2, [r6, #4]
 8005a9c:	6818      	ldr	r0, [r3, #0]
 8005a9e:	f020 0008 	bic.w	r0, r0, #8
 8005aa2:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005aa4:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005aa6:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005aa8:	d107      	bne.n	8005aba <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8005aaa:	6832      	ldr	r2, [r6, #0]
 8005aac:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8005aae:	2210      	movs	r2, #16
 8005ab0:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8005ab2:	681a      	ldr	r2, [r3, #0]
 8005ab4:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8005ab8:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8005aba:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8005abe:	4639      	mov	r1, r7
 8005ac0:	4620      	mov	r0, r4
 8005ac2:	f7ff fdfb 	bl	80056bc <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8005ac6:	2300      	movs	r3, #0
 8005ac8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005acc:	4628      	mov	r0, r5
 8005ace:	b003      	add	sp, #12
 8005ad0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8005ad2:	2502      	movs	r5, #2
 8005ad4:	e7f7      	b.n	8005ac6 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8005ad6:	2502      	movs	r5, #2
 8005ad8:	e7f8      	b.n	8005acc <HAL_QSPI_MemoryMapped+0x72>

08005ada <HAL_QSPI_Abort>:
{
 8005ada:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005adc:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005ade:	f7fd ffbf 	bl	8003a60 <HAL_GetTick>
 8005ae2:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005ae4:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 8005ae8:	f010 0002 	ands.w	r0, r0, #2
 8005aec:	d03a      	beq.n	8005b64 <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 8005aee:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005af0:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 8005af2:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005af6:	680a      	ldr	r2, [r1, #0]
 8005af8:	f012 0204 	ands.w	r2, r2, #4
 8005afc:	d034      	beq.n	8005b68 <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005afe:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005b00:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8005b02:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005b04:	f022 0204 	bic.w	r2, r2, #4
 8005b08:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005b0a:	f7fe f8f9 	bl	8003d00 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8005b0e:	9b03      	ldr	r3, [sp, #12]
 8005b10:	b118      	cbz	r0, 8005b1a <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8005b12:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8005b14:	f042 0204 	orr.w	r2, r2, #4
 8005b18:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 8005b1a:	6822      	ldr	r2, [r4, #0]
 8005b1c:	6891      	ldr	r1, [r2, #8]
 8005b1e:	0689      	lsls	r1, r1, #26
 8005b20:	d51d      	bpl.n	8005b5e <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005b22:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005b24:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005b26:	f041 0102 	orr.w	r1, r1, #2
 8005b2a:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005b2c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005b2e:	9200      	str	r2, [sp, #0]
 8005b30:	2102      	movs	r1, #2
 8005b32:	2201      	movs	r2, #1
 8005b34:	4620      	mov	r0, r4
 8005b36:	f7ff fe6e 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005b3a:	9b03      	ldr	r3, [sp, #12]
 8005b3c:	b990      	cbnz	r0, 8005b64 <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005b3e:	6822      	ldr	r2, [r4, #0]
 8005b40:	2102      	movs	r1, #2
 8005b42:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005b44:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005b46:	9200      	str	r2, [sp, #0]
 8005b48:	2120      	movs	r1, #32
 8005b4a:	4602      	mov	r2, r0
 8005b4c:	4620      	mov	r0, r4
 8005b4e:	f7ff fe62 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005b52:	b938      	cbnz	r0, 8005b64 <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8005b54:	6822      	ldr	r2, [r4, #0]
 8005b56:	6953      	ldr	r3, [r2, #20]
 8005b58:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8005b5c:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8005b5e:	2301      	movs	r3, #1
 8005b60:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8005b64:	b004      	add	sp, #16
 8005b66:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 8005b68:	4610      	mov	r0, r2
 8005b6a:	e7d6      	b.n	8005b1a <HAL_QSPI_Abort+0x40>

08005b6c <HAL_QSPI_Transmit>:
{
 8005b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005b6e:	4604      	mov	r4, r0
 8005b70:	b085      	sub	sp, #20
 8005b72:	4616      	mov	r6, r2
 8005b74:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005b76:	f7fd ff73 	bl	8003a60 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005b7a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8005b7e:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8005b80:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005b82:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005b84:	d04c      	beq.n	8005c20 <HAL_QSPI_Transmit+0xb4>
 8005b86:	2201      	movs	r2, #1
 8005b88:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005b8c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005b90:	2a01      	cmp	r2, #1
 8005b92:	b2d0      	uxtb	r0, r2
 8005b94:	d142      	bne.n	8005c1c <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005b96:	2200      	movs	r2, #0
 8005b98:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005b9a:	2f00      	cmp	r7, #0
 8005b9c:	d039      	beq.n	8005c12 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8005b9e:	2212      	movs	r2, #18
 8005ba0:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005ba4:	692a      	ldr	r2, [r5, #16]
 8005ba6:	3201      	adds	r2, #1
 8005ba8:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005baa:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8005bac:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005bae:	3201      	adds	r2, #1
 8005bb0:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005bb2:	696a      	ldr	r2, [r5, #20]
 8005bb4:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8005bb8:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8005bba:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005bbc:	b9a2      	cbnz	r2, 8005be8 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005bbe:	9600      	str	r6, [sp, #0]
 8005bc0:	2201      	movs	r2, #1
 8005bc2:	2102      	movs	r1, #2
 8005bc4:	4620      	mov	r0, r4
 8005bc6:	f7ff fe26 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005bca:	b928      	cbnz	r0, 8005bd8 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005bcc:	6823      	ldr	r3, [r4, #0]
 8005bce:	2202      	movs	r2, #2
 8005bd0:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005bd2:	4620      	mov	r0, r4
 8005bd4:	f7ff ff81 	bl	8005ada <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005bd8:	2301      	movs	r3, #1
 8005bda:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005bde:	2300      	movs	r3, #0
 8005be0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005be4:	b005      	add	sp, #20
 8005be6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005be8:	9600      	str	r6, [sp, #0]
 8005bea:	2201      	movs	r2, #1
 8005bec:	2104      	movs	r1, #4
 8005bee:	4620      	mov	r0, r4
 8005bf0:	9303      	str	r3, [sp, #12]
 8005bf2:	f7ff fe10 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005bf6:	2800      	cmp	r0, #0
 8005bf8:	d1ee      	bne.n	8005bd8 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005bfa:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005bfc:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005bfe:	7812      	ldrb	r2, [r2, #0]
 8005c00:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8005c04:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005c06:	3201      	adds	r2, #1
 8005c08:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005c0a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005c0c:	3a01      	subs	r2, #1
 8005c0e:	62e2      	str	r2, [r4, #44]	; 0x2c
 8005c10:	e7d3      	b.n	8005bba <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005c12:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005c14:	f043 0308 	orr.w	r3, r3, #8
 8005c18:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005c1a:	e7e0      	b.n	8005bde <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8005c1c:	2002      	movs	r0, #2
 8005c1e:	e7de      	b.n	8005bde <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8005c20:	2002      	movs	r0, #2
 8005c22:	e7df      	b.n	8005be4 <HAL_QSPI_Transmit+0x78>

08005c24 <HAL_QSPI_Receive>:
{
 8005c24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c26:	4604      	mov	r4, r0
 8005c28:	b085      	sub	sp, #20
 8005c2a:	4616      	mov	r6, r2
 8005c2c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005c2e:	f7fd ff17 	bl	8003a60 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8005c32:	6825      	ldr	r5, [r4, #0]
 8005c34:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8005c38:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005c3c:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005c3e:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005c40:	d050      	beq.n	8005ce4 <HAL_QSPI_Receive+0xc0>
 8005c42:	2201      	movs	r2, #1
 8005c44:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005c48:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005c4c:	2a01      	cmp	r2, #1
 8005c4e:	b2d0      	uxtb	r0, r2
 8005c50:	d146      	bne.n	8005ce0 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005c52:	2200      	movs	r2, #0
 8005c54:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005c56:	2f00      	cmp	r7, #0
 8005c58:	d03d      	beq.n	8005cd6 <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8005c5a:	2222      	movs	r2, #34	; 0x22
 8005c5c:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005c60:	692a      	ldr	r2, [r5, #16]
 8005c62:	3201      	adds	r2, #1
 8005c64:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005c66:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8005c68:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005c6a:	3201      	adds	r2, #1
 8005c6c:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8005c6e:	6969      	ldr	r1, [r5, #20]
 8005c70:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8005c74:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8005c78:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8005c7a:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8005c7e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005c80:	b9a2      	cbnz	r2, 8005cac <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005c82:	9600      	str	r6, [sp, #0]
 8005c84:	2201      	movs	r2, #1
 8005c86:	2102      	movs	r1, #2
 8005c88:	4620      	mov	r0, r4
 8005c8a:	f7ff fdc4 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8005c8e:	b928      	cbnz	r0, 8005c9c <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005c90:	6823      	ldr	r3, [r4, #0]
 8005c92:	2202      	movs	r2, #2
 8005c94:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005c96:	4620      	mov	r0, r4
 8005c98:	f7ff ff1f 	bl	8005ada <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005c9c:	2301      	movs	r3, #1
 8005c9e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005ca2:	2300      	movs	r3, #0
 8005ca4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005ca8:	b005      	add	sp, #20
 8005caa:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8005cac:	9600      	str	r6, [sp, #0]
 8005cae:	2201      	movs	r2, #1
 8005cb0:	2106      	movs	r1, #6
 8005cb2:	4620      	mov	r0, r4
 8005cb4:	9303      	str	r3, [sp, #12]
 8005cb6:	f7ff fdae 	bl	8005816 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8005cba:	2800      	cmp	r0, #0
 8005cbc:	d1ee      	bne.n	8005c9c <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8005cbe:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005cc0:	f895 1020 	ldrb.w	r1, [r5, #32]
 8005cc4:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8005cc6:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005cc8:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8005cca:	3201      	adds	r2, #1
 8005ccc:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005cce:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005cd0:	3a01      	subs	r2, #1
 8005cd2:	63a2      	str	r2, [r4, #56]	; 0x38
 8005cd4:	e7d3      	b.n	8005c7e <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005cd6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005cd8:	f043 0308 	orr.w	r3, r3, #8
 8005cdc:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005cde:	e7e0      	b.n	8005ca2 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8005ce0:	2002      	movs	r0, #2
 8005ce2:	e7de      	b.n	8005ca2 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8005ce4:	2002      	movs	r0, #2
 8005ce6:	e7df      	b.n	8005ca8 <HAL_QSPI_Receive+0x84>

08005ce8 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005ce8:	4913      	ldr	r1, [pc, #76]	; (8005d38 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005cea:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005cec:	688b      	ldr	r3, [r1, #8]
 8005cee:	f003 030c 	and.w	r3, r3, #12
 8005cf2:	2b04      	cmp	r3, #4
 8005cf4:	d01c      	beq.n	8005d30 <HAL_RCC_GetSysClockFreq+0x48>
 8005cf6:	2b08      	cmp	r3, #8
 8005cf8:	d11c      	bne.n	8005d34 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005cfa:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005cfc:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005cfe:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005d00:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005d04:	bf14      	ite	ne
 8005d06:	480d      	ldrne	r0, [pc, #52]	; (8005d3c <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005d08:	480d      	ldreq	r0, [pc, #52]	; (8005d40 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005d0a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005d0e:	bf18      	it	ne
 8005d10:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005d12:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005d16:	fba1 0100 	umull	r0, r1, r1, r0
 8005d1a:	f7fa fac1 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005d1e:	4b06      	ldr	r3, [pc, #24]	; (8005d38 <HAL_RCC_GetSysClockFreq+0x50>)
 8005d20:	685b      	ldr	r3, [r3, #4]
 8005d22:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005d26:	3301      	adds	r3, #1
 8005d28:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8005d2a:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005d2e:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005d30:	4802      	ldr	r0, [pc, #8]	; (8005d3c <HAL_RCC_GetSysClockFreq+0x54>)
 8005d32:	e7fc      	b.n	8005d2e <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005d34:	4802      	ldr	r0, [pc, #8]	; (8005d40 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005d36:	e7fa      	b.n	8005d2e <HAL_RCC_GetSysClockFreq+0x46>
 8005d38:	40023800 	.word	0x40023800
 8005d3c:	007a1200 	.word	0x007a1200
 8005d40:	00f42400 	.word	0x00f42400

08005d44 <HAL_RCC_ClockConfig>:
{
 8005d44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005d48:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8005d4a:	4604      	mov	r4, r0
 8005d4c:	b910      	cbnz	r0, 8005d54 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005d4e:	2001      	movs	r0, #1
}
 8005d50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005d54:	4b44      	ldr	r3, [pc, #272]	; (8005e68 <HAL_RCC_ClockConfig+0x124>)
 8005d56:	681a      	ldr	r2, [r3, #0]
 8005d58:	f002 020f 	and.w	r2, r2, #15
 8005d5c:	428a      	cmp	r2, r1
 8005d5e:	d328      	bcc.n	8005db2 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005d60:	6822      	ldr	r2, [r4, #0]
 8005d62:	0797      	lsls	r7, r2, #30
 8005d64:	d42d      	bmi.n	8005dc2 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005d66:	07d0      	lsls	r0, r2, #31
 8005d68:	d441      	bmi.n	8005dee <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005d6a:	4b3f      	ldr	r3, [pc, #252]	; (8005e68 <HAL_RCC_ClockConfig+0x124>)
 8005d6c:	681a      	ldr	r2, [r3, #0]
 8005d6e:	f002 020f 	and.w	r2, r2, #15
 8005d72:	42aa      	cmp	r2, r5
 8005d74:	d866      	bhi.n	8005e44 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005d76:	6822      	ldr	r2, [r4, #0]
 8005d78:	0751      	lsls	r1, r2, #29
 8005d7a:	d46c      	bmi.n	8005e56 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005d7c:	0713      	lsls	r3, r2, #28
 8005d7e:	d507      	bpl.n	8005d90 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005d80:	4a3a      	ldr	r2, [pc, #232]	; (8005e6c <HAL_RCC_ClockConfig+0x128>)
 8005d82:	6921      	ldr	r1, [r4, #16]
 8005d84:	6893      	ldr	r3, [r2, #8]
 8005d86:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005d8a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005d8e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005d90:	f7ff ffaa 	bl	8005ce8 <HAL_RCC_GetSysClockFreq>
 8005d94:	4b35      	ldr	r3, [pc, #212]	; (8005e6c <HAL_RCC_ClockConfig+0x128>)
 8005d96:	4a36      	ldr	r2, [pc, #216]	; (8005e70 <HAL_RCC_ClockConfig+0x12c>)
 8005d98:	689b      	ldr	r3, [r3, #8]
 8005d9a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005d9e:	5cd3      	ldrb	r3, [r2, r3]
 8005da0:	40d8      	lsrs	r0, r3
 8005da2:	4b34      	ldr	r3, [pc, #208]	; (8005e74 <HAL_RCC_ClockConfig+0x130>)
 8005da4:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005da6:	4b34      	ldr	r3, [pc, #208]	; (8005e78 <HAL_RCC_ClockConfig+0x134>)
 8005da8:	6818      	ldr	r0, [r3, #0]
 8005daa:	f7fc f875 	bl	8001e98 <HAL_InitTick>
  return HAL_OK;
 8005dae:	2000      	movs	r0, #0
 8005db0:	e7ce      	b.n	8005d50 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005db2:	b2ca      	uxtb	r2, r1
 8005db4:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	f003 030f 	and.w	r3, r3, #15
 8005dbc:	428b      	cmp	r3, r1
 8005dbe:	d1c6      	bne.n	8005d4e <HAL_RCC_ClockConfig+0xa>
 8005dc0:	e7ce      	b.n	8005d60 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005dc2:	4b2a      	ldr	r3, [pc, #168]	; (8005e6c <HAL_RCC_ClockConfig+0x128>)
 8005dc4:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005dc8:	bf1e      	ittt	ne
 8005dca:	6899      	ldrne	r1, [r3, #8]
 8005dcc:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8005dd0:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005dd2:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005dd4:	bf42      	ittt	mi
 8005dd6:	6899      	ldrmi	r1, [r3, #8]
 8005dd8:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8005ddc:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005dde:	4923      	ldr	r1, [pc, #140]	; (8005e6c <HAL_RCC_ClockConfig+0x128>)
 8005de0:	68a0      	ldr	r0, [r4, #8]
 8005de2:	688b      	ldr	r3, [r1, #8]
 8005de4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005de8:	4303      	orrs	r3, r0
 8005dea:	608b      	str	r3, [r1, #8]
 8005dec:	e7bb      	b.n	8005d66 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005dee:	6862      	ldr	r2, [r4, #4]
 8005df0:	4b1e      	ldr	r3, [pc, #120]	; (8005e6c <HAL_RCC_ClockConfig+0x128>)
 8005df2:	2a01      	cmp	r2, #1
 8005df4:	d11c      	bne.n	8005e30 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005df6:	681b      	ldr	r3, [r3, #0]
 8005df8:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005dfc:	d0a7      	beq.n	8005d4e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005dfe:	4e1b      	ldr	r6, [pc, #108]	; (8005e6c <HAL_RCC_ClockConfig+0x128>)
 8005e00:	68b3      	ldr	r3, [r6, #8]
 8005e02:	f023 0303 	bic.w	r3, r3, #3
 8005e06:	4313      	orrs	r3, r2
 8005e08:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005e0a:	f7fd fe29 	bl	8003a60 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005e0e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8005e12:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005e14:	68b3      	ldr	r3, [r6, #8]
 8005e16:	6862      	ldr	r2, [r4, #4]
 8005e18:	f003 030c 	and.w	r3, r3, #12
 8005e1c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005e20:	d0a3      	beq.n	8005d6a <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005e22:	f7fd fe1d 	bl	8003a60 <HAL_GetTick>
 8005e26:	1bc0      	subs	r0, r0, r7
 8005e28:	4540      	cmp	r0, r8
 8005e2a:	d9f3      	bls.n	8005e14 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8005e2c:	2003      	movs	r0, #3
 8005e2e:	e78f      	b.n	8005d50 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005e30:	1e91      	subs	r1, r2, #2
 8005e32:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005e34:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005e36:	d802      	bhi.n	8005e3e <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005e38:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005e3c:	e7de      	b.n	8005dfc <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005e3e:	f013 0f02 	tst.w	r3, #2
 8005e42:	e7db      	b.n	8005dfc <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005e44:	b2ea      	uxtb	r2, r5
 8005e46:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005e48:	681b      	ldr	r3, [r3, #0]
 8005e4a:	f003 030f 	and.w	r3, r3, #15
 8005e4e:	42ab      	cmp	r3, r5
 8005e50:	f47f af7d 	bne.w	8005d4e <HAL_RCC_ClockConfig+0xa>
 8005e54:	e78f      	b.n	8005d76 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005e56:	4905      	ldr	r1, [pc, #20]	; (8005e6c <HAL_RCC_ClockConfig+0x128>)
 8005e58:	68e0      	ldr	r0, [r4, #12]
 8005e5a:	688b      	ldr	r3, [r1, #8]
 8005e5c:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8005e60:	4303      	orrs	r3, r0
 8005e62:	608b      	str	r3, [r1, #8]
 8005e64:	e78a      	b.n	8005d7c <HAL_RCC_ClockConfig+0x38>
 8005e66:	bf00      	nop
 8005e68:	40023c00 	.word	0x40023c00
 8005e6c:	40023800 	.word	0x40023800
 8005e70:	0801ceb9 	.word	0x0801ceb9
 8005e74:	20000050 	.word	0x20000050
 8005e78:	20000058 	.word	0x20000058

08005e7c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005e7c:	4b04      	ldr	r3, [pc, #16]	; (8005e90 <HAL_RCC_GetPCLK1Freq+0x14>)
 8005e7e:	4a05      	ldr	r2, [pc, #20]	; (8005e94 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005e80:	689b      	ldr	r3, [r3, #8]
 8005e82:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005e86:	5cd3      	ldrb	r3, [r2, r3]
 8005e88:	4a03      	ldr	r2, [pc, #12]	; (8005e98 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005e8a:	6810      	ldr	r0, [r2, #0]
}
 8005e8c:	40d8      	lsrs	r0, r3
 8005e8e:	4770      	bx	lr
 8005e90:	40023800 	.word	0x40023800
 8005e94:	0801cec9 	.word	0x0801cec9
 8005e98:	20000050 	.word	0x20000050

08005e9c <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005e9c:	230f      	movs	r3, #15
 8005e9e:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005ea0:	4b0b      	ldr	r3, [pc, #44]	; (8005ed0 <HAL_RCC_GetClockConfig+0x34>)
 8005ea2:	689a      	ldr	r2, [r3, #8]
 8005ea4:	f002 0203 	and.w	r2, r2, #3
 8005ea8:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005eaa:	689a      	ldr	r2, [r3, #8]
 8005eac:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005eb0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005eb2:	689a      	ldr	r2, [r3, #8]
 8005eb4:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005eb8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005eba:	689b      	ldr	r3, [r3, #8]
 8005ebc:	08db      	lsrs	r3, r3, #3
 8005ebe:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005ec2:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005ec4:	4b03      	ldr	r3, [pc, #12]	; (8005ed4 <HAL_RCC_GetClockConfig+0x38>)
 8005ec6:	681b      	ldr	r3, [r3, #0]
 8005ec8:	f003 030f 	and.w	r3, r3, #15
 8005ecc:	600b      	str	r3, [r1, #0]
}
 8005ece:	4770      	bx	lr
 8005ed0:	40023800 	.word	0x40023800
 8005ed4:	40023c00 	.word	0x40023c00

08005ed8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8005ed8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005eda:	6802      	ldr	r2, [r0, #0]
{
 8005edc:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005ede:	0610      	lsls	r0, r2, #24
 8005ee0:	d508      	bpl.n	8005ef4 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8005ee2:	49aa      	ldr	r1, [pc, #680]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005ee4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8005ee6:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005eea:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8005eee:	4303      	orrs	r3, r0
 8005ef0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8005ef4:	05d1      	lsls	r1, r2, #23
 8005ef6:	d508      	bpl.n	8005f0a <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8005ef8:	49a4      	ldr	r1, [pc, #656]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005efa:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005efc:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005f00:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005f04:	4303      	orrs	r3, r0
 8005f06:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005f0a:	f012 0f43 	tst.w	r2, #67	; 0x43
 8005f0e:	d173      	bne.n	8005ff8 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005f10:	6823      	ldr	r3, [r4, #0]
 8005f12:	f013 0f0c 	tst.w	r3, #12
 8005f16:	f000 80c1 	beq.w	800609c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005f1a:	4b9d      	ldr	r3, [pc, #628]	; (8006190 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005f1c:	4d9b      	ldr	r5, [pc, #620]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 8005f1e:	2200      	movs	r2, #0
 8005f20:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8005f22:	f7fd fd9d 	bl	8003a60 <HAL_GetTick>
 8005f26:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005f28:	682b      	ldr	r3, [r5, #0]
 8005f2a:	009b      	lsls	r3, r3, #2
 8005f2c:	f100 80fc 	bmi.w	8006128 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005f30:	6821      	ldr	r1, [r4, #0]
 8005f32:	074f      	lsls	r7, r1, #29
 8005f34:	d51a      	bpl.n	8005f6c <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8005f36:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005f3a:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8005f3e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005f42:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8005f46:	4313      	orrs	r3, r2
 8005f48:	6922      	ldr	r2, [r4, #16]
 8005f4a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005f4e:	69a2      	ldr	r2, [r4, #24]
 8005f50:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8005f54:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005f58:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8005f5c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005f5e:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8005f62:	3a01      	subs	r2, #1
 8005f64:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005f68:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005f6c:	070e      	lsls	r6, r1, #28
 8005f6e:	d519      	bpl.n	8005fa4 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8005f70:	4a86      	ldr	r2, [pc, #536]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005f72:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005f76:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8005f7a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005f7e:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8005f82:	4303      	orrs	r3, r0
 8005f84:	6920      	ldr	r0, [r4, #16]
 8005f86:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005f8a:	69e0      	ldr	r0, [r4, #28]
 8005f8c:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8005f90:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005f94:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8005f98:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005f9a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005f9e:	4303      	orrs	r3, r0
 8005fa0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8005fa4:	060d      	lsls	r5, r1, #24
 8005fa6:	d517      	bpl.n	8005fd8 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8005fa8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005faa:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005fae:	d113      	bne.n	8005fd8 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005fb0:	4976      	ldr	r1, [pc, #472]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8005fb2:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005fb6:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8005fba:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8005fbe:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8005fc2:	4313      	orrs	r3, r2
 8005fc4:	6922      	ldr	r2, [r4, #16]
 8005fc6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005fca:	6962      	ldr	r2, [r4, #20]
 8005fcc:	0852      	lsrs	r2, r2, #1
 8005fce:	3a01      	subs	r2, #1
 8005fd0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005fd4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005fd8:	4b6d      	ldr	r3, [pc, #436]	; (8006190 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005fda:	4e6c      	ldr	r6, [pc, #432]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 8005fdc:	2201      	movs	r2, #1
 8005fde:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8005fe0:	f7fd fd3e 	bl	8003a60 <HAL_GetTick>
 8005fe4:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005fe6:	6833      	ldr	r3, [r6, #0]
 8005fe8:	0098      	lsls	r0, r3, #2
 8005fea:	d459      	bmi.n	80060a0 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005fec:	f7fd fd38 	bl	8003a60 <HAL_GetTick>
 8005ff0:	1b40      	subs	r0, r0, r5
 8005ff2:	2802      	cmp	r0, #2
 8005ff4:	d9f7      	bls.n	8005fe6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8005ff6:	e04e      	b.n	8006096 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8005ff8:	4b65      	ldr	r3, [pc, #404]	; (8006190 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005ffa:	4e64      	ldr	r6, [pc, #400]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 8005ffc:	2200      	movs	r2, #0
 8005ffe:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006000:	f7fd fd2e 	bl	8003a60 <HAL_GetTick>
 8006004:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006006:	6833      	ldr	r3, [r6, #0]
 8006008:	011b      	lsls	r3, r3, #4
 800600a:	d43f      	bmi.n	800608c <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800600c:	6821      	ldr	r1, [r4, #0]
 800600e:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006010:	bf41      	itttt	mi
 8006012:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006016:	071b      	lslmi	r3, r3, #28
 8006018:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800601c:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006020:	078e      	lsls	r6, r1, #30
 8006022:	d515      	bpl.n	8006050 <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006024:	4a59      	ldr	r2, [pc, #356]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006026:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006028:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800602c:	6865      	ldr	r5, [r4, #4]
 800602e:	061b      	lsls	r3, r3, #24
 8006030:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8006034:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8006038:	4303      	orrs	r3, r0
 800603a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800603e:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006042:	6a23      	ldr	r3, [r4, #32]
 8006044:	f020 001f 	bic.w	r0, r0, #31
 8006048:	3b01      	subs	r3, #1
 800604a:	4303      	orrs	r3, r0
 800604c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006050:	064d      	lsls	r5, r1, #25
 8006052:	d50a      	bpl.n	800606a <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006054:	68e3      	ldr	r3, [r4, #12]
 8006056:	6862      	ldr	r2, [r4, #4]
 8006058:	061b      	lsls	r3, r3, #24
 800605a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800605e:	68a2      	ldr	r2, [r4, #8]
 8006060:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006064:	4a49      	ldr	r2, [pc, #292]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006066:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800606a:	4b49      	ldr	r3, [pc, #292]	; (8006190 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800606c:	4e47      	ldr	r6, [pc, #284]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 800606e:	2201      	movs	r2, #1
 8006070:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006072:	f7fd fcf5 	bl	8003a60 <HAL_GetTick>
 8006076:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006078:	6833      	ldr	r3, [r6, #0]
 800607a:	0118      	lsls	r0, r3, #4
 800607c:	f53f af48 	bmi.w	8005f10 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006080:	f7fd fcee 	bl	8003a60 <HAL_GetTick>
 8006084:	1b40      	subs	r0, r0, r5
 8006086:	2802      	cmp	r0, #2
 8006088:	d9f6      	bls.n	8006078 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 800608a:	e004      	b.n	8006096 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800608c:	f7fd fce8 	bl	8003a60 <HAL_GetTick>
 8006090:	1b40      	subs	r0, r0, r5
 8006092:	2802      	cmp	r0, #2
 8006094:	d9b7      	bls.n	8006006 <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 8006096:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8006098:	b003      	add	sp, #12
 800609a:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800609c:	0619      	lsls	r1, r3, #24
 800609e:	d43e      	bmi.n	800611e <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80060a0:	6823      	ldr	r3, [r4, #0]
 80060a2:	069a      	lsls	r2, r3, #26
 80060a4:	d530      	bpl.n	8006108 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 80060a6:	2300      	movs	r3, #0
 80060a8:	9301      	str	r3, [sp, #4]
 80060aa:	4b38      	ldr	r3, [pc, #224]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 80060ac:	4d39      	ldr	r5, [pc, #228]	; (8006194 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80060ae:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80060b0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80060b4:	641a      	str	r2, [r3, #64]	; 0x40
 80060b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80060b8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80060bc:	9301      	str	r3, [sp, #4]
 80060be:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80060c0:	682b      	ldr	r3, [r5, #0]
 80060c2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80060c6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80060c8:	f7fd fcca 	bl	8003a60 <HAL_GetTick>
 80060cc:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 80060ce:	682b      	ldr	r3, [r5, #0]
 80060d0:	05d9      	lsls	r1, r3, #23
 80060d2:	d530      	bpl.n	8006136 <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80060d4:	4d2d      	ldr	r5, [pc, #180]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80060d6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80060d8:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80060dc:	d131      	bne.n	8006142 <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80060de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80060e0:	f403 7240 	and.w	r2, r3, #768	; 0x300
 80060e4:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 80060e8:	4a28      	ldr	r2, [pc, #160]	; (800618c <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80060ea:	d14b      	bne.n	8006184 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 80060ec:	6891      	ldr	r1, [r2, #8]
 80060ee:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 80060f2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80060f6:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 80060fa:	4301      	orrs	r1, r0
 80060fc:	6091      	str	r1, [r2, #8]
 80060fe:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006100:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006104:	430b      	orrs	r3, r1
 8006106:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006108:	6820      	ldr	r0, [r4, #0]
 800610a:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800610e:	bf1f      	itttt	ne
 8006110:	4b21      	ldrne	r3, [pc, #132]	; (8006198 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8006112:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8006116:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 800611a:	2000      	movne	r0, #0
 800611c:	e7bc      	b.n	8006098 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800611e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006120:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006124:	d1bc      	bne.n	80060a0 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 8006126:	e6f8      	b.n	8005f1a <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006128:	f7fd fc9a 	bl	8003a60 <HAL_GetTick>
 800612c:	1b80      	subs	r0, r0, r6
 800612e:	2802      	cmp	r0, #2
 8006130:	f67f aefa 	bls.w	8005f28 <HAL_RCCEx_PeriphCLKConfig+0x50>
 8006134:	e7af      	b.n	8006096 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006136:	f7fd fc93 	bl	8003a60 <HAL_GetTick>
 800613a:	1b80      	subs	r0, r0, r6
 800613c:	2802      	cmp	r0, #2
 800613e:	d9c6      	bls.n	80060ce <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8006140:	e7a9      	b.n	8006096 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006142:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006144:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006148:	4293      	cmp	r3, r2
 800614a:	d0c8      	beq.n	80060de <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800614c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800614e:	4a10      	ldr	r2, [pc, #64]	; (8006190 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 8006150:	2101      	movs	r1, #1
 8006152:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006156:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800615a:	2100      	movs	r1, #0
 800615c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8006160:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006162:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006164:	07da      	lsls	r2, r3, #31
 8006166:	d5ba      	bpl.n	80060de <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 8006168:	f7fd fc7a 	bl	8003a60 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800616c:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006170:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006172:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006174:	079b      	lsls	r3, r3, #30
 8006176:	d4b2      	bmi.n	80060de <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006178:	f7fd fc72 	bl	8003a60 <HAL_GetTick>
 800617c:	1b80      	subs	r0, r0, r6
 800617e:	42b8      	cmp	r0, r7
 8006180:	d9f7      	bls.n	8006172 <HAL_RCCEx_PeriphCLKConfig+0x29a>
 8006182:	e788      	b.n	8006096 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006184:	6891      	ldr	r1, [r2, #8]
 8006186:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800618a:	e7b7      	b.n	80060fc <HAL_RCCEx_PeriphCLKConfig+0x224>
 800618c:	40023800 	.word	0x40023800
 8006190:	42470000 	.word	0x42470000
 8006194:	40007000 	.word	0x40007000
 8006198:	42471000 	.word	0x42471000

0800619c <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800619c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80061a0:	4604      	mov	r4, r0
 80061a2:	b340      	cbz	r0, 80061f6 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80061a4:	6803      	ldr	r3, [r0, #0]
 80061a6:	07dd      	lsls	r5, r3, #31
 80061a8:	d410      	bmi.n	80061cc <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80061aa:	6823      	ldr	r3, [r4, #0]
 80061ac:	0798      	lsls	r0, r3, #30
 80061ae:	d45e      	bmi.n	800626e <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80061b0:	6823      	ldr	r3, [r4, #0]
 80061b2:	071a      	lsls	r2, r3, #28
 80061b4:	f100 80a0 	bmi.w	80062f8 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80061b8:	6823      	ldr	r3, [r4, #0]
 80061ba:	075b      	lsls	r3, r3, #29
 80061bc:	f100 80c0 	bmi.w	8006340 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80061c0:	69a0      	ldr	r0, [r4, #24]
 80061c2:	2800      	cmp	r0, #0
 80061c4:	f040 8128 	bne.w	8006418 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80061c8:	2000      	movs	r0, #0
 80061ca:	e02b      	b.n	8006224 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 80061cc:	4b8f      	ldr	r3, [pc, #572]	; (800640c <HAL_RCC_OscConfig+0x270>)
 80061ce:	689a      	ldr	r2, [r3, #8]
 80061d0:	f002 020c 	and.w	r2, r2, #12
 80061d4:	2a04      	cmp	r2, #4
 80061d6:	d007      	beq.n	80061e8 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80061d8:	689a      	ldr	r2, [r3, #8]
 80061da:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 80061de:	2a08      	cmp	r2, #8
 80061e0:	d10b      	bne.n	80061fa <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80061e2:	685a      	ldr	r2, [r3, #4]
 80061e4:	0251      	lsls	r1, r2, #9
 80061e6:	d508      	bpl.n	80061fa <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80061e8:	4b88      	ldr	r3, [pc, #544]	; (800640c <HAL_RCC_OscConfig+0x270>)
 80061ea:	681b      	ldr	r3, [r3, #0]
 80061ec:	039a      	lsls	r2, r3, #14
 80061ee:	d5dc      	bpl.n	80061aa <HAL_RCC_OscConfig+0xe>
 80061f0:	6863      	ldr	r3, [r4, #4]
 80061f2:	2b00      	cmp	r3, #0
 80061f4:	d1d9      	bne.n	80061aa <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 80061f6:	2001      	movs	r0, #1
 80061f8:	e014      	b.n	8006224 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80061fa:	6862      	ldr	r2, [r4, #4]
 80061fc:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006200:	d113      	bne.n	800622a <HAL_RCC_OscConfig+0x8e>
 8006202:	681a      	ldr	r2, [r3, #0]
 8006204:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006208:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800620a:	f7fd fc29 	bl	8003a60 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800620e:	4e7f      	ldr	r6, [pc, #508]	; (800640c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8006210:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006212:	6833      	ldr	r3, [r6, #0]
 8006214:	039b      	lsls	r3, r3, #14
 8006216:	d4c8      	bmi.n	80061aa <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006218:	f7fd fc22 	bl	8003a60 <HAL_GetTick>
 800621c:	1b40      	subs	r0, r0, r5
 800621e:	2864      	cmp	r0, #100	; 0x64
 8006220:	d9f7      	bls.n	8006212 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8006222:	2003      	movs	r0, #3
}
 8006224:	b002      	add	sp, #8
 8006226:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800622a:	4d78      	ldr	r5, [pc, #480]	; (800640c <HAL_RCC_OscConfig+0x270>)
 800622c:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006230:	682b      	ldr	r3, [r5, #0]
 8006232:	d107      	bne.n	8006244 <HAL_RCC_OscConfig+0xa8>
 8006234:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006238:	602b      	str	r3, [r5, #0]
 800623a:	682b      	ldr	r3, [r5, #0]
 800623c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006240:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006242:	e7e2      	b.n	800620a <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006244:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006248:	602b      	str	r3, [r5, #0]
 800624a:	682b      	ldr	r3, [r5, #0]
 800624c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006250:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006252:	2a00      	cmp	r2, #0
 8006254:	d1d9      	bne.n	800620a <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8006256:	f7fd fc03 	bl	8003a60 <HAL_GetTick>
 800625a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800625c:	682b      	ldr	r3, [r5, #0]
 800625e:	039f      	lsls	r7, r3, #14
 8006260:	d5a3      	bpl.n	80061aa <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006262:	f7fd fbfd 	bl	8003a60 <HAL_GetTick>
 8006266:	1b80      	subs	r0, r0, r6
 8006268:	2864      	cmp	r0, #100	; 0x64
 800626a:	d9f7      	bls.n	800625c <HAL_RCC_OscConfig+0xc0>
 800626c:	e7d9      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800626e:	4b67      	ldr	r3, [pc, #412]	; (800640c <HAL_RCC_OscConfig+0x270>)
 8006270:	689a      	ldr	r2, [r3, #8]
 8006272:	f012 0f0c 	tst.w	r2, #12
 8006276:	d007      	beq.n	8006288 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006278:	689a      	ldr	r2, [r3, #8]
 800627a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800627e:	2a08      	cmp	r2, #8
 8006280:	d111      	bne.n	80062a6 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006282:	685b      	ldr	r3, [r3, #4]
 8006284:	025e      	lsls	r6, r3, #9
 8006286:	d40e      	bmi.n	80062a6 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006288:	4a60      	ldr	r2, [pc, #384]	; (800640c <HAL_RCC_OscConfig+0x270>)
 800628a:	6813      	ldr	r3, [r2, #0]
 800628c:	079d      	lsls	r5, r3, #30
 800628e:	d502      	bpl.n	8006296 <HAL_RCC_OscConfig+0xfa>
 8006290:	68e3      	ldr	r3, [r4, #12]
 8006292:	2b01      	cmp	r3, #1
 8006294:	d1af      	bne.n	80061f6 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006296:	6813      	ldr	r3, [r2, #0]
 8006298:	6921      	ldr	r1, [r4, #16]
 800629a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800629e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80062a2:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80062a4:	e784      	b.n	80061b0 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80062a6:	68e2      	ldr	r2, [r4, #12]
 80062a8:	4b59      	ldr	r3, [pc, #356]	; (8006410 <HAL_RCC_OscConfig+0x274>)
 80062aa:	b1b2      	cbz	r2, 80062da <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80062ac:	2201      	movs	r2, #1
 80062ae:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80062b0:	f7fd fbd6 	bl	8003a60 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80062b4:	4d55      	ldr	r5, [pc, #340]	; (800640c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80062b6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80062b8:	682b      	ldr	r3, [r5, #0]
 80062ba:	0798      	lsls	r0, r3, #30
 80062bc:	d507      	bpl.n	80062ce <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80062be:	682b      	ldr	r3, [r5, #0]
 80062c0:	6922      	ldr	r2, [r4, #16]
 80062c2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80062c6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80062ca:	602b      	str	r3, [r5, #0]
 80062cc:	e770      	b.n	80061b0 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80062ce:	f7fd fbc7 	bl	8003a60 <HAL_GetTick>
 80062d2:	1b80      	subs	r0, r0, r6
 80062d4:	2802      	cmp	r0, #2
 80062d6:	d9ef      	bls.n	80062b8 <HAL_RCC_OscConfig+0x11c>
 80062d8:	e7a3      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 80062da:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80062dc:	f7fd fbc0 	bl	8003a60 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80062e0:	4e4a      	ldr	r6, [pc, #296]	; (800640c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80062e2:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80062e4:	6833      	ldr	r3, [r6, #0]
 80062e6:	0799      	lsls	r1, r3, #30
 80062e8:	f57f af62 	bpl.w	80061b0 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80062ec:	f7fd fbb8 	bl	8003a60 <HAL_GetTick>
 80062f0:	1b40      	subs	r0, r0, r5
 80062f2:	2802      	cmp	r0, #2
 80062f4:	d9f6      	bls.n	80062e4 <HAL_RCC_OscConfig+0x148>
 80062f6:	e794      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80062f8:	6962      	ldr	r2, [r4, #20]
 80062fa:	4b45      	ldr	r3, [pc, #276]	; (8006410 <HAL_RCC_OscConfig+0x274>)
 80062fc:	b182      	cbz	r2, 8006320 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 80062fe:	2201      	movs	r2, #1
 8006300:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8006304:	f7fd fbac 	bl	8003a60 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006308:	4e40      	ldr	r6, [pc, #256]	; (800640c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800630a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800630c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800630e:	079f      	lsls	r7, r3, #30
 8006310:	f53f af52 	bmi.w	80061b8 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006314:	f7fd fba4 	bl	8003a60 <HAL_GetTick>
 8006318:	1b40      	subs	r0, r0, r5
 800631a:	2802      	cmp	r0, #2
 800631c:	d9f6      	bls.n	800630c <HAL_RCC_OscConfig+0x170>
 800631e:	e780      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8006320:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8006324:	f7fd fb9c 	bl	8003a60 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006328:	4e38      	ldr	r6, [pc, #224]	; (800640c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800632a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800632c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800632e:	0798      	lsls	r0, r3, #30
 8006330:	f57f af42 	bpl.w	80061b8 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006334:	f7fd fb94 	bl	8003a60 <HAL_GetTick>
 8006338:	1b40      	subs	r0, r0, r5
 800633a:	2802      	cmp	r0, #2
 800633c:	d9f6      	bls.n	800632c <HAL_RCC_OscConfig+0x190>
 800633e:	e770      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006340:	4b32      	ldr	r3, [pc, #200]	; (800640c <HAL_RCC_OscConfig+0x270>)
 8006342:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006344:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8006348:	d128      	bne.n	800639c <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800634a:	9201      	str	r2, [sp, #4]
 800634c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800634e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006352:	641a      	str	r2, [r3, #64]	; 0x40
 8006354:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006356:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800635a:	9301      	str	r3, [sp, #4]
 800635c:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800635e:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006360:	4d2c      	ldr	r5, [pc, #176]	; (8006414 <HAL_RCC_OscConfig+0x278>)
 8006362:	682b      	ldr	r3, [r5, #0]
 8006364:	05d9      	lsls	r1, r3, #23
 8006366:	d51b      	bpl.n	80063a0 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006368:	68a3      	ldr	r3, [r4, #8]
 800636a:	4d28      	ldr	r5, [pc, #160]	; (800640c <HAL_RCC_OscConfig+0x270>)
 800636c:	2b01      	cmp	r3, #1
 800636e:	d127      	bne.n	80063c0 <HAL_RCC_OscConfig+0x224>
 8006370:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006372:	f043 0301 	orr.w	r3, r3, #1
 8006376:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8006378:	f7fd fb72 	bl	8003a60 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800637c:	4e23      	ldr	r6, [pc, #140]	; (800640c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800637e:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006380:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006384:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006386:	079b      	lsls	r3, r3, #30
 8006388:	d539      	bpl.n	80063fe <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800638a:	2f00      	cmp	r7, #0
 800638c:	f43f af18 	beq.w	80061c0 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006390:	4a1e      	ldr	r2, [pc, #120]	; (800640c <HAL_RCC_OscConfig+0x270>)
 8006392:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006394:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006398:	6413      	str	r3, [r2, #64]	; 0x40
 800639a:	e711      	b.n	80061c0 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800639c:	2700      	movs	r7, #0
 800639e:	e7df      	b.n	8006360 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80063a0:	682b      	ldr	r3, [r5, #0]
 80063a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80063a6:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80063a8:	f7fd fb5a 	bl	8003a60 <HAL_GetTick>
 80063ac:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80063ae:	682b      	ldr	r3, [r5, #0]
 80063b0:	05da      	lsls	r2, r3, #23
 80063b2:	d4d9      	bmi.n	8006368 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80063b4:	f7fd fb54 	bl	8003a60 <HAL_GetTick>
 80063b8:	1b80      	subs	r0, r0, r6
 80063ba:	2802      	cmp	r0, #2
 80063bc:	d9f7      	bls.n	80063ae <HAL_RCC_OscConfig+0x212>
 80063be:	e730      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80063c0:	2b05      	cmp	r3, #5
 80063c2:	d104      	bne.n	80063ce <HAL_RCC_OscConfig+0x232>
 80063c4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80063c6:	f043 0304 	orr.w	r3, r3, #4
 80063ca:	672b      	str	r3, [r5, #112]	; 0x70
 80063cc:	e7d0      	b.n	8006370 <HAL_RCC_OscConfig+0x1d4>
 80063ce:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80063d0:	f022 0201 	bic.w	r2, r2, #1
 80063d4:	672a      	str	r2, [r5, #112]	; 0x70
 80063d6:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80063d8:	f022 0204 	bic.w	r2, r2, #4
 80063dc:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80063de:	2b00      	cmp	r3, #0
 80063e0:	d1ca      	bne.n	8006378 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 80063e2:	f7fd fb3d 	bl	8003a60 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80063e6:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80063ea:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80063ec:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80063ee:	0798      	lsls	r0, r3, #30
 80063f0:	d5cb      	bpl.n	800638a <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80063f2:	f7fd fb35 	bl	8003a60 <HAL_GetTick>
 80063f6:	1b80      	subs	r0, r0, r6
 80063f8:	4540      	cmp	r0, r8
 80063fa:	d9f7      	bls.n	80063ec <HAL_RCC_OscConfig+0x250>
 80063fc:	e711      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80063fe:	f7fd fb2f 	bl	8003a60 <HAL_GetTick>
 8006402:	1b40      	subs	r0, r0, r5
 8006404:	4540      	cmp	r0, r8
 8006406:	d9bd      	bls.n	8006384 <HAL_RCC_OscConfig+0x1e8>
 8006408:	e70b      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
 800640a:	bf00      	nop
 800640c:	40023800 	.word	0x40023800
 8006410:	42470000 	.word	0x42470000
 8006414:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006418:	4d3b      	ldr	r5, [pc, #236]	; (8006508 <HAL_RCC_OscConfig+0x36c>)
 800641a:	68ab      	ldr	r3, [r5, #8]
 800641c:	f003 030c 	and.w	r3, r3, #12
 8006420:	2b08      	cmp	r3, #8
 8006422:	d040      	beq.n	80064a6 <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006424:	4b39      	ldr	r3, [pc, #228]	; (800650c <HAL_RCC_OscConfig+0x370>)
 8006426:	2200      	movs	r2, #0
 8006428:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800642a:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800642c:	d12e      	bne.n	800648c <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 800642e:	f7fd fb17 	bl	8003a60 <HAL_GetTick>
 8006432:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006434:	682b      	ldr	r3, [r5, #0]
 8006436:	0199      	lsls	r1, r3, #6
 8006438:	d422      	bmi.n	8006480 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800643a:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800643e:	4313      	orrs	r3, r2
 8006440:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006442:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006446:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006448:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800644c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800644e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006452:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006454:	0852      	lsrs	r2, r2, #1
 8006456:	3a01      	subs	r2, #1
 8006458:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800645c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800645e:	4b2b      	ldr	r3, [pc, #172]	; (800650c <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006460:	4d29      	ldr	r5, [pc, #164]	; (8006508 <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 8006462:	2201      	movs	r2, #1
 8006464:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8006466:	f7fd fafb 	bl	8003a60 <HAL_GetTick>
 800646a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800646c:	682b      	ldr	r3, [r5, #0]
 800646e:	019a      	lsls	r2, r3, #6
 8006470:	f53f aeaa 	bmi.w	80061c8 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006474:	f7fd faf4 	bl	8003a60 <HAL_GetTick>
 8006478:	1b00      	subs	r0, r0, r4
 800647a:	2802      	cmp	r0, #2
 800647c:	d9f6      	bls.n	800646c <HAL_RCC_OscConfig+0x2d0>
 800647e:	e6d0      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006480:	f7fd faee 	bl	8003a60 <HAL_GetTick>
 8006484:	1b80      	subs	r0, r0, r6
 8006486:	2802      	cmp	r0, #2
 8006488:	d9d4      	bls.n	8006434 <HAL_RCC_OscConfig+0x298>
 800648a:	e6ca      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800648c:	f7fd fae8 	bl	8003a60 <HAL_GetTick>
 8006490:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006492:	682b      	ldr	r3, [r5, #0]
 8006494:	019b      	lsls	r3, r3, #6
 8006496:	f57f ae97 	bpl.w	80061c8 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800649a:	f7fd fae1 	bl	8003a60 <HAL_GetTick>
 800649e:	1b00      	subs	r0, r0, r4
 80064a0:	2802      	cmp	r0, #2
 80064a2:	d9f6      	bls.n	8006492 <HAL_RCC_OscConfig+0x2f6>
 80064a4:	e6bd      	b.n	8006222 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80064a6:	2801      	cmp	r0, #1
 80064a8:	f43f aebc 	beq.w	8006224 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80064ac:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80064ae:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80064b0:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80064b4:	4291      	cmp	r1, r2
 80064b6:	f47f ae9e 	bne.w	80061f6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80064ba:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80064bc:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80064c0:	428a      	cmp	r2, r1
 80064c2:	f47f ae98 	bne.w	80061f6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80064c6:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80064c8:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 80064cc:	401a      	ands	r2, r3
 80064ce:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80064d2:	f47f ae90 	bne.w	80061f6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80064d6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80064d8:	0852      	lsrs	r2, r2, #1
 80064da:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 80064de:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80064e0:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80064e4:	f47f ae87 	bne.w	80061f6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80064e8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80064ea:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80064ee:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 80064f2:	f47f ae80 	bne.w	80061f6 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 80064f6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80064f8:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 80064fc:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 8006500:	f43f ae62 	beq.w	80061c8 <HAL_RCC_OscConfig+0x2c>
 8006504:	e677      	b.n	80061f6 <HAL_RCC_OscConfig+0x5a>
 8006506:	bf00      	nop
 8006508:	40023800 	.word	0x40023800
 800650c:	42470000 	.word	0x42470000

08006510 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006510:	b538      	push	{r3, r4, r5, lr}
 8006512:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006514:	4604      	mov	r4, r0
 8006516:	b1c8      	cbz	r0, 800654c <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006518:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800651c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006520:	b91b      	cbnz	r3, 800652a <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006522:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006526:	f7fb fbfd 	bl	8001d24 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800652a:	2302      	movs	r3, #2
 800652c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006530:	1d21      	adds	r1, r4, #4
 8006532:	6820      	ldr	r0, [r4, #0]
 8006534:	f000 f9c6 	bl	80068c4 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006538:	6862      	ldr	r2, [r4, #4]
 800653a:	6820      	ldr	r0, [r4, #0]
 800653c:	4629      	mov	r1, r5
 800653e:	f000 f9fc 	bl	800693a <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006542:	2301      	movs	r3, #1
 8006544:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 8006548:	2000      	movs	r0, #0
}
 800654a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800654c:	2001      	movs	r0, #1
 800654e:	e7fc      	b.n	800654a <HAL_SDRAM_Init+0x3a>

08006550 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8006550:	b510      	push	{r4, lr}
 8006552:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8006554:	f7fb fc5e 	bl	8001e14 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8006558:	e9d4 0100 	ldrd	r0, r1, [r4]
 800655c:	f000 fa23 	bl	80069a6 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8006560:	2000      	movs	r0, #0
 8006562:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 8006566:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800656a:	bd10      	pop	{r4, pc}

0800656c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800656c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800656e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8006572:	2b02      	cmp	r3, #2
{
 8006574:	4605      	mov	r5, r0
 8006576:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006578:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800657a:	d012      	beq.n	80065a2 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800657c:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8006580:	2c01      	cmp	r4, #1
 8006582:	d10f      	bne.n	80065a4 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006584:	2302      	movs	r3, #2
 8006586:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800658a:	6828      	ldr	r0, [r5, #0]
 800658c:	f000 fa1a 	bl	80069c4 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006590:	6833      	ldr	r3, [r6, #0]
 8006592:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006594:	bf06      	itte	eq
 8006596:	2305      	moveq	r3, #5
 8006598:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800659c:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80065a0:	2000      	movs	r0, #0
}
 80065a2:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 80065a4:	2001      	movs	r0, #1
 80065a6:	e7fc      	b.n	80065a2 <HAL_SDRAM_SendCommand+0x36>

080065a8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80065a8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80065aa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80065ae:	2b02      	cmp	r3, #2
{
 80065b0:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80065b2:	b2d8      	uxtb	r0, r3
 80065b4:	d00d      	beq.n	80065d2 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 80065b6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80065ba:	2b01      	cmp	r3, #1
 80065bc:	b2dd      	uxtb	r5, r3
 80065be:	d109      	bne.n	80065d4 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80065c0:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80065c2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80065c4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80065c8:	f000 fa22 	bl	8006a10 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 80065cc:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80065d0:	2000      	movs	r0, #0
}
 80065d2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80065d4:	2001      	movs	r0, #1
 80065d6:	e7fc      	b.n	80065d2 <HAL_SDRAM_ProgramRefreshRate+0x2a>

080065d8 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80065d8:	4770      	bx	lr
	...

080065dc <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80065dc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80065e0:	2b01      	cmp	r3, #1
 80065e2:	d130      	bne.n	8006646 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80065e4:	2302      	movs	r3, #2
 80065e6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80065ea:	6803      	ldr	r3, [r0, #0]
 80065ec:	68da      	ldr	r2, [r3, #12]
 80065ee:	f042 0201 	orr.w	r2, r2, #1
 80065f2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80065f4:	4a15      	ldr	r2, [pc, #84]	; (800664c <HAL_TIM_Base_Start_IT+0x70>)
 80065f6:	4293      	cmp	r3, r2
 80065f8:	d01a      	beq.n	8006630 <HAL_TIM_Base_Start_IT+0x54>
 80065fa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80065fe:	d017      	beq.n	8006630 <HAL_TIM_Base_Start_IT+0x54>
 8006600:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006604:	4293      	cmp	r3, r2
 8006606:	d013      	beq.n	8006630 <HAL_TIM_Base_Start_IT+0x54>
 8006608:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800660c:	4293      	cmp	r3, r2
 800660e:	d00f      	beq.n	8006630 <HAL_TIM_Base_Start_IT+0x54>
 8006610:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006614:	4293      	cmp	r3, r2
 8006616:	d00b      	beq.n	8006630 <HAL_TIM_Base_Start_IT+0x54>
 8006618:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800661c:	4293      	cmp	r3, r2
 800661e:	d007      	beq.n	8006630 <HAL_TIM_Base_Start_IT+0x54>
 8006620:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8006624:	4293      	cmp	r3, r2
 8006626:	d003      	beq.n	8006630 <HAL_TIM_Base_Start_IT+0x54>
 8006628:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800662c:	4293      	cmp	r3, r2
 800662e:	d104      	bne.n	800663a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006630:	689a      	ldr	r2, [r3, #8]
 8006632:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006636:	2a06      	cmp	r2, #6
 8006638:	d003      	beq.n	8006642 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800663a:	681a      	ldr	r2, [r3, #0]
 800663c:	f042 0201 	orr.w	r2, r2, #1
 8006640:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006642:	2000      	movs	r0, #0
}
 8006644:	4770      	bx	lr
    return HAL_ERROR;
 8006646:	2001      	movs	r0, #1
 8006648:	4770      	bx	lr
 800664a:	bf00      	nop
 800664c:	40010000 	.word	0x40010000

08006650 <HAL_TIM_OC_DelayElapsedCallback>:
 8006650:	4770      	bx	lr

08006652 <HAL_TIM_IC_CaptureCallback>:
 8006652:	4770      	bx	lr

08006654 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006654:	4770      	bx	lr

08006656 <HAL_TIM_TriggerCallback>:
 8006656:	4770      	bx	lr

08006658 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006658:	6803      	ldr	r3, [r0, #0]
 800665a:	691a      	ldr	r2, [r3, #16]
 800665c:	0791      	lsls	r1, r2, #30
{
 800665e:	b510      	push	{r4, lr}
 8006660:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006662:	d50e      	bpl.n	8006682 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006664:	68da      	ldr	r2, [r3, #12]
 8006666:	0792      	lsls	r2, r2, #30
 8006668:	d50b      	bpl.n	8006682 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800666a:	f06f 0202 	mvn.w	r2, #2
 800666e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006670:	2201      	movs	r2, #1
 8006672:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006674:	699b      	ldr	r3, [r3, #24]
 8006676:	079b      	lsls	r3, r3, #30
 8006678:	d077      	beq.n	800676a <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800667a:	f7ff ffea 	bl	8006652 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800667e:	2300      	movs	r3, #0
 8006680:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006682:	6823      	ldr	r3, [r4, #0]
 8006684:	691a      	ldr	r2, [r3, #16]
 8006686:	0750      	lsls	r0, r2, #29
 8006688:	d510      	bpl.n	80066ac <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800668a:	68da      	ldr	r2, [r3, #12]
 800668c:	0751      	lsls	r1, r2, #29
 800668e:	d50d      	bpl.n	80066ac <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006690:	f06f 0204 	mvn.w	r2, #4
 8006694:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006696:	2202      	movs	r2, #2
 8006698:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800669a:	699b      	ldr	r3, [r3, #24]
 800669c:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80066a0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80066a2:	d068      	beq.n	8006776 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80066a4:	f7ff ffd5 	bl	8006652 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80066a8:	2300      	movs	r3, #0
 80066aa:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80066ac:	6823      	ldr	r3, [r4, #0]
 80066ae:	691a      	ldr	r2, [r3, #16]
 80066b0:	0712      	lsls	r2, r2, #28
 80066b2:	d50f      	bpl.n	80066d4 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80066b4:	68da      	ldr	r2, [r3, #12]
 80066b6:	0710      	lsls	r0, r2, #28
 80066b8:	d50c      	bpl.n	80066d4 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80066ba:	f06f 0208 	mvn.w	r2, #8
 80066be:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80066c0:	2204      	movs	r2, #4
 80066c2:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80066c4:	69db      	ldr	r3, [r3, #28]
 80066c6:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80066c8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80066ca:	d05a      	beq.n	8006782 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80066cc:	f7ff ffc1 	bl	8006652 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80066d0:	2300      	movs	r3, #0
 80066d2:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80066d4:	6823      	ldr	r3, [r4, #0]
 80066d6:	691a      	ldr	r2, [r3, #16]
 80066d8:	06d2      	lsls	r2, r2, #27
 80066da:	d510      	bpl.n	80066fe <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80066dc:	68da      	ldr	r2, [r3, #12]
 80066de:	06d0      	lsls	r0, r2, #27
 80066e0:	d50d      	bpl.n	80066fe <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80066e2:	f06f 0210 	mvn.w	r2, #16
 80066e6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80066e8:	2208      	movs	r2, #8
 80066ea:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80066ec:	69db      	ldr	r3, [r3, #28]
 80066ee:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80066f2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80066f4:	d04b      	beq.n	800678e <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 80066f6:	f7ff ffac 	bl	8006652 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80066fa:	2300      	movs	r3, #0
 80066fc:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80066fe:	6823      	ldr	r3, [r4, #0]
 8006700:	691a      	ldr	r2, [r3, #16]
 8006702:	07d1      	lsls	r1, r2, #31
 8006704:	d508      	bpl.n	8006718 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006706:	68da      	ldr	r2, [r3, #12]
 8006708:	07d2      	lsls	r2, r2, #31
 800670a:	d505      	bpl.n	8006718 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800670c:	f06f 0201 	mvn.w	r2, #1
 8006710:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006712:	4620      	mov	r0, r4
 8006714:	f7fb f958 	bl	80019c8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006718:	6823      	ldr	r3, [r4, #0]
 800671a:	691a      	ldr	r2, [r3, #16]
 800671c:	0610      	lsls	r0, r2, #24
 800671e:	d508      	bpl.n	8006732 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006720:	68da      	ldr	r2, [r3, #12]
 8006722:	0611      	lsls	r1, r2, #24
 8006724:	d505      	bpl.n	8006732 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006726:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800672a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800672c:	4620      	mov	r0, r4
 800672e:	f000 f8c8 	bl	80068c2 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006732:	6823      	ldr	r3, [r4, #0]
 8006734:	691a      	ldr	r2, [r3, #16]
 8006736:	0652      	lsls	r2, r2, #25
 8006738:	d508      	bpl.n	800674c <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800673a:	68da      	ldr	r2, [r3, #12]
 800673c:	0650      	lsls	r0, r2, #25
 800673e:	d505      	bpl.n	800674c <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006740:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006744:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006746:	4620      	mov	r0, r4
 8006748:	f7ff ff85 	bl	8006656 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800674c:	6823      	ldr	r3, [r4, #0]
 800674e:	691a      	ldr	r2, [r3, #16]
 8006750:	0691      	lsls	r1, r2, #26
 8006752:	d522      	bpl.n	800679a <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006754:	68da      	ldr	r2, [r3, #12]
 8006756:	0692      	lsls	r2, r2, #26
 8006758:	d51f      	bpl.n	800679a <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800675a:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800675e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006760:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006762:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006766:	f000 b8ab 	b.w	80068c0 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800676a:	f7ff ff71 	bl	8006650 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800676e:	4620      	mov	r0, r4
 8006770:	f7ff ff70 	bl	8006654 <HAL_TIM_PWM_PulseFinishedCallback>
 8006774:	e783      	b.n	800667e <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006776:	f7ff ff6b 	bl	8006650 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800677a:	4620      	mov	r0, r4
 800677c:	f7ff ff6a 	bl	8006654 <HAL_TIM_PWM_PulseFinishedCallback>
 8006780:	e792      	b.n	80066a8 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006782:	f7ff ff65 	bl	8006650 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006786:	4620      	mov	r0, r4
 8006788:	f7ff ff64 	bl	8006654 <HAL_TIM_PWM_PulseFinishedCallback>
 800678c:	e7a0      	b.n	80066d0 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800678e:	f7ff ff5f 	bl	8006650 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006792:	4620      	mov	r0, r4
 8006794:	f7ff ff5e 	bl	8006654 <HAL_TIM_PWM_PulseFinishedCallback>
 8006798:	e7af      	b.n	80066fa <HAL_TIM_IRQHandler+0xa2>
}
 800679a:	bd10      	pop	{r4, pc}

0800679c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800679c:	4a30      	ldr	r2, [pc, #192]	; (8006860 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800679e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80067a0:	4290      	cmp	r0, r2
 80067a2:	d012      	beq.n	80067ca <TIM_Base_SetConfig+0x2e>
 80067a4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80067a8:	d00f      	beq.n	80067ca <TIM_Base_SetConfig+0x2e>
 80067aa:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80067ae:	4290      	cmp	r0, r2
 80067b0:	d00b      	beq.n	80067ca <TIM_Base_SetConfig+0x2e>
 80067b2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80067b6:	4290      	cmp	r0, r2
 80067b8:	d007      	beq.n	80067ca <TIM_Base_SetConfig+0x2e>
 80067ba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80067be:	4290      	cmp	r0, r2
 80067c0:	d003      	beq.n	80067ca <TIM_Base_SetConfig+0x2e>
 80067c2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80067c6:	4290      	cmp	r0, r2
 80067c8:	d119      	bne.n	80067fe <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80067ca:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80067cc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80067d0:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80067d2:	4a23      	ldr	r2, [pc, #140]	; (8006860 <TIM_Base_SetConfig+0xc4>)
 80067d4:	4290      	cmp	r0, r2
 80067d6:	d029      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 80067d8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80067dc:	d026      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 80067de:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80067e2:	4290      	cmp	r0, r2
 80067e4:	d022      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 80067e6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80067ea:	4290      	cmp	r0, r2
 80067ec:	d01e      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 80067ee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80067f2:	4290      	cmp	r0, r2
 80067f4:	d01a      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 80067f6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80067fa:	4290      	cmp	r0, r2
 80067fc:	d016      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 80067fe:	4a19      	ldr	r2, [pc, #100]	; (8006864 <TIM_Base_SetConfig+0xc8>)
 8006800:	4290      	cmp	r0, r2
 8006802:	d013      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 8006804:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006808:	4290      	cmp	r0, r2
 800680a:	d00f      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 800680c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006810:	4290      	cmp	r0, r2
 8006812:	d00b      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 8006814:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006818:	4290      	cmp	r0, r2
 800681a:	d007      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 800681c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006820:	4290      	cmp	r0, r2
 8006822:	d003      	beq.n	800682c <TIM_Base_SetConfig+0x90>
 8006824:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006828:	4290      	cmp	r0, r2
 800682a:	d103      	bne.n	8006834 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800682c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800682e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006832:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006834:	694a      	ldr	r2, [r1, #20]
 8006836:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800683a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800683c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800683e:	688b      	ldr	r3, [r1, #8]
 8006840:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006842:	680b      	ldr	r3, [r1, #0]
 8006844:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006846:	4b06      	ldr	r3, [pc, #24]	; (8006860 <TIM_Base_SetConfig+0xc4>)
 8006848:	4298      	cmp	r0, r3
 800684a:	d003      	beq.n	8006854 <TIM_Base_SetConfig+0xb8>
 800684c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006850:	4298      	cmp	r0, r3
 8006852:	d101      	bne.n	8006858 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006854:	690b      	ldr	r3, [r1, #16]
 8006856:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006858:	2301      	movs	r3, #1
 800685a:	6143      	str	r3, [r0, #20]
}
 800685c:	4770      	bx	lr
 800685e:	bf00      	nop
 8006860:	40010000 	.word	0x40010000
 8006864:	40014000 	.word	0x40014000

08006868 <HAL_TIM_Base_Init>:
{
 8006868:	b510      	push	{r4, lr}
  if (htim == NULL)
 800686a:	4604      	mov	r4, r0
 800686c:	b330      	cbz	r0, 80068bc <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800686e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006872:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006876:	b91b      	cbnz	r3, 8006880 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006878:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800687c:	f7ff feac 	bl	80065d8 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006880:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006882:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006884:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006888:	1d21      	adds	r1, r4, #4
 800688a:	f7ff ff87 	bl	800679c <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800688e:	2301      	movs	r3, #1
 8006890:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8006894:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006896:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800689a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800689e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80068a2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80068a6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80068aa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80068ae:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80068b2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 80068b6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80068ba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80068bc:	2001      	movs	r0, #1
 80068be:	e7fc      	b.n	80068ba <HAL_TIM_Base_Init+0x52>

080068c0 <HAL_TIMEx_CommutCallback>:
 80068c0:	4770      	bx	lr

080068c2 <HAL_TIMEx_BreakCallback>:
 80068c2:	4770      	bx	lr

080068c4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80068c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80068c8:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80068cc:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80068ce:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 80068d2:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 80068d6:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 80068da:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 80068de:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80068e0:	b9a2      	cbnz	r2, 800690c <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80068e2:	ea43 0209 	orr.w	r2, r3, r9
 80068e6:	432a      	orrs	r2, r5
 80068e8:	ea42 0308 	orr.w	r3, r2, r8
 80068ec:	6801      	ldr	r1, [r0, #0]
 80068ee:	ea43 030e 	orr.w	r3, r3, lr
 80068f2:	ea43 030c 	orr.w	r3, r3, ip
 80068f6:	433b      	orrs	r3, r7
 80068f8:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 80068fc:	4333      	orrs	r3, r6
 80068fe:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8006902:	430b      	orrs	r3, r1
 8006904:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8006906:	2000      	movs	r0, #0
 8006908:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800690c:	6802      	ldr	r2, [r0, #0]
 800690e:	ea43 0309 	orr.w	r3, r3, r9
 8006912:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8006916:	4313      	orrs	r3, r2
 8006918:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800691a:	ea45 0308 	orr.w	r3, r5, r8
 800691e:	6842      	ldr	r2, [r0, #4]
 8006920:	ea43 030e 	orr.w	r3, r3, lr
 8006924:	ea43 030c 	orr.w	r3, r3, ip
 8006928:	433b      	orrs	r3, r7
 800692a:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 800692e:	4333      	orrs	r3, r6
 8006930:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8006934:	4313      	orrs	r3, r2
 8006936:	6043      	str	r3, [r0, #4]
 8006938:	e7e5      	b.n	8006906 <FMC_SDRAM_Init+0x42>

0800693a <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800693a:	68cb      	ldr	r3, [r1, #12]
 800693c:	f103 3cff 	add.w	ip, r3, #4294967295
 8006940:	694b      	ldr	r3, [r1, #20]
{
 8006942:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006944:	680f      	ldr	r7, [r1, #0]
 8006946:	684c      	ldr	r4, [r1, #4]
 8006948:	688e      	ldr	r6, [r1, #8]
 800694a:	690d      	ldr	r5, [r1, #16]
 800694c:	6989      	ldr	r1, [r1, #24]
 800694e:	3b01      	subs	r3, #1
 8006950:	051b      	lsls	r3, r3, #20
 8006952:	3c01      	subs	r4, #1
 8006954:	3e01      	subs	r6, #1
 8006956:	3d01      	subs	r5, #1
 8006958:	3901      	subs	r1, #1
 800695a:	3f01      	subs	r7, #1
 800695c:	0124      	lsls	r4, r4, #4
 800695e:	0236      	lsls	r6, r6, #8
 8006960:	042d      	lsls	r5, r5, #16
 8006962:	0609      	lsls	r1, r1, #24
 8006964:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8006968:	b95a      	cbnz	r2, 8006982 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800696a:	433b      	orrs	r3, r7
 800696c:	4323      	orrs	r3, r4
 800696e:	6882      	ldr	r2, [r0, #8]
 8006970:	4333      	orrs	r3, r6
 8006972:	432b      	orrs	r3, r5
 8006974:	430b      	orrs	r3, r1
 8006976:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800697a:	4313      	orrs	r3, r2
 800697c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800697e:	2000      	movs	r0, #0
 8006980:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006982:	6882      	ldr	r2, [r0, #8]
 8006984:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8006988:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800698c:	431a      	orrs	r2, r3
 800698e:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8006990:	ea44 0306 	orr.w	r3, r4, r6
 8006994:	68c2      	ldr	r2, [r0, #12]
 8006996:	433b      	orrs	r3, r7
 8006998:	432b      	orrs	r3, r5
 800699a:	430b      	orrs	r3, r1
 800699c:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80069a0:	4313      	orrs	r3, r2
 80069a2:	60c3      	str	r3, [r0, #12]
 80069a4:	e7eb      	b.n	800697e <FMC_SDRAM_Timing_Init+0x44>

080069a6 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 80069a6:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80069aa:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 80069ae:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 80069b2:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80069b6:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 80069b8:	2300      	movs	r3, #0
 80069ba:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 80069bc:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 80069be:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 80069c0:	4618      	mov	r0, r3
 80069c2:	4770      	bx	lr

080069c4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80069c4:	b570      	push	{r4, r5, r6, lr}
 80069c6:	4604      	mov	r4, r0
 80069c8:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80069ca:	6902      	ldr	r2, [r0, #16]
 80069cc:	e9d1 3000 	ldrd	r3, r0, [r1]
 80069d0:	4303      	orrs	r3, r0
 80069d2:	68c8      	ldr	r0, [r1, #12]
 80069d4:	0d92      	lsrs	r2, r2, #22
 80069d6:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 80069da:	0592      	lsls	r2, r2, #22
 80069dc:	4313      	orrs	r3, r2
 80069de:	688a      	ldr	r2, [r1, #8]
 80069e0:	3a01      	subs	r2, #1
 80069e2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80069e6:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 80069e8:	f7fd f83a 	bl	8003a60 <HAL_GetTick>
 80069ec:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80069ee:	69a3      	ldr	r3, [r4, #24]
 80069f0:	f013 0320 	ands.w	r3, r3, #32
 80069f4:	d101      	bne.n	80069fa <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 80069f6:	4618      	mov	r0, r3
 80069f8:	e003      	b.n	8006a02 <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 80069fa:	1c6b      	adds	r3, r5, #1
 80069fc:	d0f7      	beq.n	80069ee <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80069fe:	b90d      	cbnz	r5, 8006a04 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8006a00:	2003      	movs	r0, #3
}
 8006a02:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006a04:	f7fd f82c 	bl	8003a60 <HAL_GetTick>
 8006a08:	1b80      	subs	r0, r0, r6
 8006a0a:	42a8      	cmp	r0, r5
 8006a0c:	d9ef      	bls.n	80069ee <FMC_SDRAM_SendCommand+0x2a>
 8006a0e:	e7f7      	b.n	8006a00 <FMC_SDRAM_SendCommand+0x3c>

08006a10 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8006a10:	6943      	ldr	r3, [r0, #20]
 8006a12:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8006a16:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8006a1a:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006a1e:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8006a20:	2000      	movs	r0, #0
 8006a22:	4770      	bx	lr

08006a24 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8006a24:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8006a26:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006a2a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8006a2c:	f001 fe3a 	bl	80086a4 <xTaskGetSchedulerState>
 8006a30:	2801      	cmp	r0, #1
 8006a32:	d003      	beq.n	8006a3c <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8006a34:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8006a38:	f000 bbdc 	b.w	80071f4 <xPortSysTickHandler>
}
 8006a3c:	bd08      	pop	{r3, pc}
	...

08006a40 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006a40:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006a44:	b92b      	cbnz	r3, 8006a52 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8006a46:	4b06      	ldr	r3, [pc, #24]	; (8006a60 <osKernelInitialize+0x20>)
 8006a48:	6818      	ldr	r0, [r3, #0]
 8006a4a:	b928      	cbnz	r0, 8006a58 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006a4c:	2201      	movs	r2, #1
 8006a4e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8006a50:	4770      	bx	lr
    stat = osErrorISR;
 8006a52:	f06f 0005 	mvn.w	r0, #5
 8006a56:	4770      	bx	lr
    } else {
      stat = osError;
 8006a58:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006a5c:	4770      	bx	lr
 8006a5e:	bf00      	nop
 8006a60:	200019f0 	.word	0x200019f0

08006a64 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006a64:	b510      	push	{r4, lr}
 8006a66:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006a6a:	b95c      	cbnz	r4, 8006a84 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8006a6c:	4b08      	ldr	r3, [pc, #32]	; (8006a90 <osKernelStart+0x2c>)
 8006a6e:	681a      	ldr	r2, [r3, #0]
 8006a70:	2a01      	cmp	r2, #1
 8006a72:	d10a      	bne.n	8006a8a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006a74:	4a07      	ldr	r2, [pc, #28]	; (8006a94 <osKernelStart+0x30>)
 8006a76:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8006a78:	2202      	movs	r2, #2
 8006a7a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8006a7c:	f001 fcb6 	bl	80083ec <vTaskStartScheduler>
      stat = osOK;
 8006a80:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8006a82:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006a84:	f06f 0005 	mvn.w	r0, #5
 8006a88:	e7fb      	b.n	8006a82 <osKernelStart+0x1e>
      stat = osError;
 8006a8a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006a8e:	e7f8      	b.n	8006a82 <osKernelStart+0x1e>
 8006a90:	200019f0 	.word	0x200019f0
 8006a94:	e000ed00 	.word	0xe000ed00

08006a98 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006a98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006a9a:	b087      	sub	sp, #28
 8006a9c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006a9e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006aa0:	460b      	mov	r3, r1
  hTask = NULL;
 8006aa2:	9205      	str	r2, [sp, #20]
 8006aa4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006aa8:	b9d2      	cbnz	r2, 8006ae0 <osThreadNew+0x48>
 8006aaa:	b1c8      	cbz	r0, 8006ae0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006aac:	2c00      	cmp	r4, #0
 8006aae:	d02f      	beq.n	8006b10 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006ab0:	69a5      	ldr	r5, [r4, #24]
 8006ab2:	2d00      	cmp	r5, #0
 8006ab4:	bf08      	it	eq
 8006ab6:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006ab8:	1e69      	subs	r1, r5, #1
 8006aba:	2937      	cmp	r1, #55	; 0x37
 8006abc:	46ac      	mov	ip, r5
 8006abe:	d82b      	bhi.n	8006b18 <osThreadNew+0x80>
 8006ac0:	6861      	ldr	r1, [r4, #4]
 8006ac2:	07c9      	lsls	r1, r1, #31
 8006ac4:	d428      	bmi.n	8006b18 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006ac6:	6966      	ldr	r6, [r4, #20]
 8006ac8:	b16e      	cbz	r6, 8006ae6 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006aca:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006acc:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8006ad0:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006ad2:	b157      	cbz	r7, 8006aea <osThreadNew+0x52>
 8006ad4:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006ad8:	d902      	bls.n	8006ae0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006ada:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006adc:	b104      	cbz	r4, 8006ae0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006ade:	b9ee      	cbnz	r6, 8006b1c <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006ae0:	9805      	ldr	r0, [sp, #20]
}
 8006ae2:	b007      	add	sp, #28
 8006ae4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006ae6:	2280      	movs	r2, #128	; 0x80
 8006ae8:	e7f0      	b.n	8006acc <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006aea:	f1be 0f00 	cmp.w	lr, #0
 8006aee:	d1f7      	bne.n	8006ae0 <osThreadNew+0x48>
      if (mem == 0) {
 8006af0:	6924      	ldr	r4, [r4, #16]
 8006af2:	2c00      	cmp	r4, #0
 8006af4:	d1f4      	bne.n	8006ae0 <osThreadNew+0x48>
 8006af6:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006af8:	a905      	add	r1, sp, #20
 8006afa:	e9cd c100 	strd	ip, r1, [sp]
 8006afe:	b292      	uxth	r2, r2
 8006b00:	4621      	mov	r1, r4
 8006b02:	f001 faee 	bl	80080e2 <xTaskCreate>
 8006b06:	2801      	cmp	r0, #1
            hTask = NULL;
 8006b08:	bf1c      	itt	ne
 8006b0a:	2300      	movne	r3, #0
 8006b0c:	9305      	strne	r3, [sp, #20]
 8006b0e:	e7e7      	b.n	8006ae0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8006b10:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8006b14:	2280      	movs	r2, #128	; 0x80
 8006b16:	e7ef      	b.n	8006af8 <osThreadNew+0x60>
        return (NULL);
 8006b18:	4610      	mov	r0, r2
 8006b1a:	e7e2      	b.n	8006ae2 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006b1c:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006b20:	9500      	str	r5, [sp, #0]
 8006b22:	f001 faa6 	bl	8008072 <xTaskCreateStatic>
 8006b26:	9005      	str	r0, [sp, #20]
 8006b28:	e7da      	b.n	8006ae0 <osThreadNew+0x48>

08006b2a <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8006b2a:	b510      	push	{r4, lr}
 8006b2c:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006b30:	b924      	cbnz	r4, 8006b3c <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8006b32:	b110      	cbz	r0, 8006b3a <osDelay+0x10>
      vTaskDelay(ticks);
 8006b34:	f001 fc1a 	bl	800836c <vTaskDelay>
    stat = osOK;
 8006b38:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8006b3a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006b3c:	f06f 0005 	mvn.w	r0, #5
 8006b40:	e7fb      	b.n	8006b3a <osDelay+0x10>

08006b42 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006b42:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006b44:	4604      	mov	r4, r0
 8006b46:	460e      	mov	r6, r1
 8006b48:	4615      	mov	r5, r2
 8006b4a:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006b4e:	b11a      	cbz	r2, 8006b58 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006b50:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006b52:	4620      	mov	r0, r4
 8006b54:	b003      	add	sp, #12
 8006b56:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006b58:	2800      	cmp	r0, #0
 8006b5a:	d0f9      	beq.n	8006b50 <osSemaphoreNew+0xe>
 8006b5c:	4288      	cmp	r0, r1
 8006b5e:	d3f7      	bcc.n	8006b50 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8006b60:	b1e5      	cbz	r5, 8006b9c <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006b62:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8006b66:	b1bb      	cbz	r3, 8006b98 <osSemaphoreNew+0x56>
 8006b68:	2f4f      	cmp	r7, #79	; 0x4f
 8006b6a:	d9f1      	bls.n	8006b50 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006b6c:	2801      	cmp	r0, #1
 8006b6e:	d12a      	bne.n	8006bc6 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006b70:	2103      	movs	r1, #3
 8006b72:	9100      	str	r1, [sp, #0]
 8006b74:	4611      	mov	r1, r2
 8006b76:	f000 fce6 	bl	8007546 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8006b7a:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006b7c:	2800      	cmp	r0, #0
 8006b7e:	d0e7      	beq.n	8006b50 <osSemaphoreNew+0xe>
 8006b80:	b1de      	cbz	r6, 8006bba <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006b82:	2300      	movs	r3, #0
 8006b84:	461a      	mov	r2, r3
 8006b86:	4619      	mov	r1, r3
 8006b88:	f000 fd92 	bl	80076b0 <xQueueGenericSend>
 8006b8c:	2801      	cmp	r0, #1
 8006b8e:	d014      	beq.n	8006bba <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8006b90:	4620      	mov	r0, r4
 8006b92:	f001 f8cd 	bl	8007d30 <vQueueDelete>
 8006b96:	e7db      	b.n	8006b50 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006b98:	2f00      	cmp	r7, #0
 8006b9a:	d1d9      	bne.n	8006b50 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006b9c:	2c01      	cmp	r4, #1
 8006b9e:	d105      	bne.n	8006bac <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8006ba0:	2203      	movs	r2, #3
 8006ba2:	2100      	movs	r1, #0
 8006ba4:	4620      	mov	r0, r4
 8006ba6:	f000 fd1c 	bl	80075e2 <xQueueGenericCreate>
 8006baa:	e7e6      	b.n	8006b7a <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006bac:	4620      	mov	r0, r4
 8006bae:	4631      	mov	r1, r6
 8006bb0:	f000 fd60 	bl	8007674 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006bb4:	4604      	mov	r4, r0
 8006bb6:	2800      	cmp	r0, #0
 8006bb8:	d0ca      	beq.n	8006b50 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8006bba:	b955      	cbnz	r5, 8006bd2 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8006bbc:	4629      	mov	r1, r5
 8006bbe:	4620      	mov	r0, r4
 8006bc0:	f001 f890 	bl	8007ce4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006bc4:	e7c5      	b.n	8006b52 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006bc6:	461a      	mov	r2, r3
 8006bc8:	f000 fd32 	bl	8007630 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006bcc:	4604      	mov	r4, r0
 8006bce:	2800      	cmp	r0, #0
 8006bd0:	d0be      	beq.n	8006b50 <osSemaphoreNew+0xe>
          name = attr->name;
 8006bd2:	682d      	ldr	r5, [r5, #0]
 8006bd4:	e7f2      	b.n	8006bbc <osSemaphoreNew+0x7a>

08006bd6 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006bd6:	b513      	push	{r0, r1, r4, lr}
 8006bd8:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006bda:	b308      	cbz	r0, 8006c20 <osSemaphoreAcquire+0x4a>
 8006bdc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006be0:	b1b3      	cbz	r3, 8006c10 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8006be2:	b9e9      	cbnz	r1, 8006c20 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006be4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006be6:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006be8:	f001 f82d 	bl	8007c46 <xQueueReceiveFromISR>
 8006bec:	2801      	cmp	r0, #1
 8006bee:	d114      	bne.n	8006c1a <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006bf0:	9b01      	ldr	r3, [sp, #4]
 8006bf2:	b913      	cbnz	r3, 8006bfa <osSemaphoreAcquire+0x24>
  stat = osOK;
 8006bf4:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006bf6:	b002      	add	sp, #8
 8006bf8:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8006bfa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006bfe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006c02:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006c06:	f3bf 8f4f 	dsb	sy
 8006c0a:	f3bf 8f6f 	isb	sy
 8006c0e:	e7f1      	b.n	8006bf4 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006c10:	f000 ff56 	bl	8007ac0 <xQueueSemaphoreTake>
 8006c14:	2801      	cmp	r0, #1
 8006c16:	d0ed      	beq.n	8006bf4 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8006c18:	b92c      	cbnz	r4, 8006c26 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8006c1a:	f06f 0002 	mvn.w	r0, #2
 8006c1e:	e7ea      	b.n	8006bf6 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8006c20:	f06f 0003 	mvn.w	r0, #3
 8006c24:	e7e7      	b.n	8006bf6 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8006c26:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006c2a:	e7e4      	b.n	8006bf6 <osSemaphoreAcquire+0x20>

08006c2c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006c2c:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006c2e:	b310      	cbz	r0, 8006c76 <osSemaphoreRelease+0x4a>
 8006c30:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006c34:	b1b3      	cbz	r3, 8006c64 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8006c36:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006c38:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006c3a:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006c3c:	f000 fe4d 	bl	80078da <xQueueGiveFromISR>
 8006c40:	2801      	cmp	r0, #1
 8006c42:	d115      	bne.n	8006c70 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8006c44:	9b01      	ldr	r3, [sp, #4]
 8006c46:	b913      	cbnz	r3, 8006c4e <osSemaphoreRelease+0x22>
  stat = osOK;
 8006c48:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8006c4a:	b002      	add	sp, #8
 8006c4c:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006c4e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006c52:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006c56:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006c5a:	f3bf 8f4f 	dsb	sy
 8006c5e:	f3bf 8f6f 	isb	sy
 8006c62:	e7f1      	b.n	8006c48 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006c64:	461a      	mov	r2, r3
 8006c66:	4619      	mov	r1, r3
 8006c68:	f000 fd22 	bl	80076b0 <xQueueGenericSend>
 8006c6c:	2801      	cmp	r0, #1
 8006c6e:	d0eb      	beq.n	8006c48 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8006c70:	f06f 0002 	mvn.w	r0, #2
 8006c74:	e7e9      	b.n	8006c4a <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8006c76:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006c7a:	e7e6      	b.n	8006c4a <osSemaphoreRelease+0x1e>

08006c7c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006c7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c7e:	4605      	mov	r5, r0
 8006c80:	460e      	mov	r6, r1
 8006c82:	4614      	mov	r4, r2
 8006c84:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006c88:	b11f      	cbz	r7, 8006c92 <osMessageQueueNew+0x16>
  hQueue = NULL;
 8006c8a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006c8c:	4628      	mov	r0, r5
 8006c8e:	b003      	add	sp, #12
 8006c90:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006c92:	2800      	cmp	r0, #0
 8006c94:	d0f9      	beq.n	8006c8a <osMessageQueueNew+0xe>
 8006c96:	2900      	cmp	r1, #0
 8006c98:	d0f7      	beq.n	8006c8a <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8006c9a:	b1da      	cbz	r2, 8006cd4 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006c9c:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8006ca0:	b183      	cbz	r3, 8006cc4 <osMessageQueueNew+0x48>
 8006ca2:	2a4f      	cmp	r2, #79	; 0x4f
 8006ca4:	d9f1      	bls.n	8006c8a <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006ca6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006ca8:	2a00      	cmp	r2, #0
 8006caa:	d0ee      	beq.n	8006c8a <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006cac:	6966      	ldr	r6, [r4, #20]
 8006cae:	434d      	muls	r5, r1
 8006cb0:	42ae      	cmp	r6, r5
 8006cb2:	d3ea      	bcc.n	8006c8a <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006cb4:	9700      	str	r7, [sp, #0]
 8006cb6:	f000 fc46 	bl	8007546 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006cba:	4605      	mov	r5, r0
 8006cbc:	2800      	cmp	r0, #0
 8006cbe:	d0e4      	beq.n	8006c8a <osMessageQueueNew+0xe>
        name = attr->name;
 8006cc0:	6824      	ldr	r4, [r4, #0]
 8006cc2:	e011      	b.n	8006ce8 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006cc4:	2a00      	cmp	r2, #0
 8006cc6:	d1e0      	bne.n	8006c8a <osMessageQueueNew+0xe>
 8006cc8:	6923      	ldr	r3, [r4, #16]
 8006cca:	2b00      	cmp	r3, #0
 8006ccc:	d1dd      	bne.n	8006c8a <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006cce:	6963      	ldr	r3, [r4, #20]
 8006cd0:	2b00      	cmp	r3, #0
 8006cd2:	d1da      	bne.n	8006c8a <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8006cd4:	4628      	mov	r0, r5
 8006cd6:	2200      	movs	r2, #0
 8006cd8:	4631      	mov	r1, r6
 8006cda:	f000 fc82 	bl	80075e2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006cde:	4605      	mov	r5, r0
 8006ce0:	2800      	cmp	r0, #0
 8006ce2:	d0d2      	beq.n	8006c8a <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8006ce4:	2c00      	cmp	r4, #0
 8006ce6:	d1eb      	bne.n	8006cc0 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8006ce8:	4621      	mov	r1, r4
 8006cea:	4628      	mov	r0, r5
 8006cec:	f000 fffa 	bl	8007ce4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006cf0:	e7cc      	b.n	8006c8c <osMessageQueueNew+0x10>

08006cf2 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006cf2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006cf4:	461c      	mov	r4, r3
 8006cf6:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006cfa:	b1c6      	cbz	r6, 8006d2e <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006cfc:	b318      	cbz	r0, 8006d46 <osMessageQueuePut+0x54>
 8006cfe:	b311      	cbz	r1, 8006d46 <osMessageQueuePut+0x54>
 8006d00:	bb0b      	cbnz	r3, 8006d46 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006d02:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006d04:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006d06:	f000 fd86 	bl	8007816 <xQueueGenericSendFromISR>
 8006d0a:	2801      	cmp	r0, #1
 8006d0c:	d118      	bne.n	8006d40 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006d0e:	9b01      	ldr	r3, [sp, #4]
 8006d10:	b913      	cbnz	r3, 8006d18 <osMessageQueuePut+0x26>
  stat = osOK;
 8006d12:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006d14:	b002      	add	sp, #8
 8006d16:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8006d18:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006d1c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d20:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006d24:	f3bf 8f4f 	dsb	sy
 8006d28:	f3bf 8f6f 	isb	sy
 8006d2c:	e7f1      	b.n	8006d12 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006d2e:	b150      	cbz	r0, 8006d46 <osMessageQueuePut+0x54>
 8006d30:	b149      	cbz	r1, 8006d46 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006d32:	4633      	mov	r3, r6
 8006d34:	4622      	mov	r2, r4
 8006d36:	f000 fcbb 	bl	80076b0 <xQueueGenericSend>
 8006d3a:	2801      	cmp	r0, #1
 8006d3c:	d0e9      	beq.n	8006d12 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8006d3e:	b92c      	cbnz	r4, 8006d4c <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8006d40:	f06f 0002 	mvn.w	r0, #2
 8006d44:	e7e6      	b.n	8006d14 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8006d46:	f06f 0003 	mvn.w	r0, #3
 8006d4a:	e7e3      	b.n	8006d14 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8006d4c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006d50:	e7e0      	b.n	8006d14 <osMessageQueuePut+0x22>

08006d52 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006d52:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006d54:	461c      	mov	r4, r3
 8006d56:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006d5a:	b1c3      	cbz	r3, 8006d8e <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006d5c:	b310      	cbz	r0, 8006da4 <osMessageQueueGet+0x52>
 8006d5e:	b309      	cbz	r1, 8006da4 <osMessageQueueGet+0x52>
 8006d60:	bb04      	cbnz	r4, 8006da4 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006d62:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006d64:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006d66:	f000 ff6e 	bl	8007c46 <xQueueReceiveFromISR>
 8006d6a:	2801      	cmp	r0, #1
 8006d6c:	d117      	bne.n	8006d9e <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006d6e:	9b01      	ldr	r3, [sp, #4]
 8006d70:	b913      	cbnz	r3, 8006d78 <osMessageQueueGet+0x26>
  stat = osOK;
 8006d72:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006d74:	b003      	add	sp, #12
 8006d76:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8006d78:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006d7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d80:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006d84:	f3bf 8f4f 	dsb	sy
 8006d88:	f3bf 8f6f 	isb	sy
 8006d8c:	e7f1      	b.n	8006d72 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006d8e:	b148      	cbz	r0, 8006da4 <osMessageQueueGet+0x52>
 8006d90:	b141      	cbz	r1, 8006da4 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006d92:	4622      	mov	r2, r4
 8006d94:	f000 fdf5 	bl	8007982 <xQueueReceive>
 8006d98:	2801      	cmp	r0, #1
 8006d9a:	d0ea      	beq.n	8006d72 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8006d9c:	b92c      	cbnz	r4, 8006daa <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8006d9e:	f06f 0002 	mvn.w	r0, #2
 8006da2:	e7e7      	b.n	8006d74 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8006da4:	f06f 0003 	mvn.w	r0, #3
 8006da8:	e7e4      	b.n	8006d74 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8006daa:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006dae:	e7e1      	b.n	8006d74 <osMessageQueueGet+0x22>

08006db0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8006db0:	4b03      	ldr	r3, [pc, #12]	; (8006dc0 <vApplicationGetIdleTaskMemory+0x10>)
 8006db2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8006db4:	4b03      	ldr	r3, [pc, #12]	; (8006dc4 <vApplicationGetIdleTaskMemory+0x14>)
 8006db6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8006db8:	2380      	movs	r3, #128	; 0x80
 8006dba:	6013      	str	r3, [r2, #0]
}
 8006dbc:	4770      	bx	lr
 8006dbe:	bf00      	nop
 8006dc0:	20001990 	.word	0x20001990
 8006dc4:	20001790 	.word	0x20001790

08006dc8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8006dc8:	4b03      	ldr	r3, [pc, #12]	; (8006dd8 <vApplicationGetTimerTaskMemory+0x10>)
 8006dca:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8006dcc:	4b03      	ldr	r3, [pc, #12]	; (8006ddc <vApplicationGetTimerTaskMemory+0x14>)
 8006dce:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8006dd0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006dd4:	6013      	str	r3, [r2, #0]
}
 8006dd6:	4770      	bx	lr
 8006dd8:	20001df4 	.word	0x20001df4
 8006ddc:	200019f4 	.word	0x200019f4

08006de0 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8006de0:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006de2:	4b0f      	ldr	r3, [pc, #60]	; (8006e20 <prvInsertBlockIntoFreeList+0x40>)
 8006de4:	461a      	mov	r2, r3
 8006de6:	681b      	ldr	r3, [r3, #0]
 8006de8:	4283      	cmp	r3, r0
 8006dea:	d3fb      	bcc.n	8006de4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8006dec:	6854      	ldr	r4, [r2, #4]
 8006dee:	1911      	adds	r1, r2, r4
 8006df0:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8006df2:	bf01      	itttt	eq
 8006df4:	6841      	ldreq	r1, [r0, #4]
 8006df6:	4610      	moveq	r0, r2
 8006df8:	1909      	addeq	r1, r1, r4
 8006dfa:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8006dfc:	6844      	ldr	r4, [r0, #4]
 8006dfe:	1901      	adds	r1, r0, r4
 8006e00:	428b      	cmp	r3, r1
 8006e02:	d107      	bne.n	8006e14 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8006e04:	4907      	ldr	r1, [pc, #28]	; (8006e24 <prvInsertBlockIntoFreeList+0x44>)
 8006e06:	6809      	ldr	r1, [r1, #0]
 8006e08:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006e0a:	bf1f      	itttt	ne
 8006e0c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8006e0e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006e10:	1909      	addne	r1, r1, r4
 8006e12:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006e14:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8006e16:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8006e18:	bf18      	it	ne
 8006e1a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8006e1c:	bd10      	pop	{r4, pc}
 8006e1e:	bf00      	nop
 8006e20:	20009e6c 	.word	0x20009e6c
 8006e24:	20001e54 	.word	0x20001e54

08006e28 <pvPortMalloc>:
{
 8006e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006e2c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8006e2e:	f001 f985 	bl	800813c <vTaskSuspendAll>
		if( pxEnd == NULL )
 8006e32:	4842      	ldr	r0, [pc, #264]	; (8006f3c <pvPortMalloc+0x114>)
 8006e34:	4d42      	ldr	r5, [pc, #264]	; (8006f40 <pvPortMalloc+0x118>)
 8006e36:	6803      	ldr	r3, [r0, #0]
 8006e38:	bb0b      	cbnz	r3, 8006e7e <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8006e3a:	4942      	ldr	r1, [pc, #264]	; (8006f44 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8006e3c:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8006e3e:	bf1f      	itttt	ne
 8006e40:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006e42:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8006e46:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 8006e4a:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006e4c:	bf14      	ite	ne
 8006e4e:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8006e50:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8006e54:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006e56:	4e3c      	ldr	r6, [pc, #240]	; (8006f48 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8006e58:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006e5a:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8006e5e:	2300      	movs	r3, #0
 8006e60:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006e62:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8006e64:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006e68:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006e6a:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8006e6e:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006e70:	4a36      	ldr	r2, [pc, #216]	; (8006f4c <pvPortMalloc+0x124>)
 8006e72:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006e74:	4a36      	ldr	r2, [pc, #216]	; (8006f50 <pvPortMalloc+0x128>)
 8006e76:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006e78:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006e7c:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8006e7e:	682f      	ldr	r7, [r5, #0]
 8006e80:	4227      	tst	r7, r4
 8006e82:	d155      	bne.n	8006f30 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8006e84:	2c00      	cmp	r4, #0
 8006e86:	d046      	beq.n	8006f16 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8006e88:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8006e8c:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8006e8e:	bf1c      	itt	ne
 8006e90:	f023 0307 	bicne.w	r3, r3, #7
 8006e94:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8006e96:	2b00      	cmp	r3, #0
 8006e98:	d04a      	beq.n	8006f30 <pvPortMalloc+0x108>
 8006e9a:	4c2d      	ldr	r4, [pc, #180]	; (8006f50 <pvPortMalloc+0x128>)
 8006e9c:	6826      	ldr	r6, [r4, #0]
 8006e9e:	429e      	cmp	r6, r3
 8006ea0:	d346      	bcc.n	8006f30 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8006ea2:	4a29      	ldr	r2, [pc, #164]	; (8006f48 <pvPortMalloc+0x120>)
 8006ea4:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8006ea6:	6869      	ldr	r1, [r5, #4]
 8006ea8:	4299      	cmp	r1, r3
 8006eaa:	d204      	bcs.n	8006eb6 <pvPortMalloc+0x8e>
 8006eac:	f8d5 c000 	ldr.w	ip, [r5]
 8006eb0:	f1bc 0f00 	cmp.w	ip, #0
 8006eb4:	d115      	bne.n	8006ee2 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8006eb6:	6800      	ldr	r0, [r0, #0]
 8006eb8:	42a8      	cmp	r0, r5
 8006eba:	d039      	beq.n	8006f30 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006ebc:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006ebe:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006ec0:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006ec4:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006ec6:	2910      	cmp	r1, #16
 8006ec8:	d912      	bls.n	8006ef0 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8006eca:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8006ecc:	0742      	lsls	r2, r0, #29
 8006ece:	d00b      	beq.n	8006ee8 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8006ed0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ed4:	f383 8811 	msr	BASEPRI, r3
 8006ed8:	f3bf 8f6f 	isb	sy
 8006edc:	f3bf 8f4f 	dsb	sy
 8006ee0:	e7fe      	b.n	8006ee0 <pvPortMalloc+0xb8>
 8006ee2:	462a      	mov	r2, r5
 8006ee4:	4665      	mov	r5, ip
 8006ee6:	e7de      	b.n	8006ea6 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8006ee8:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8006eea:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8006eec:	f7ff ff78 	bl	8006de0 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006ef0:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006ef2:	4916      	ldr	r1, [pc, #88]	; (8006f4c <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 8006ef4:	4a17      	ldr	r2, [pc, #92]	; (8006f54 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006ef6:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006ef8:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006efa:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8006efc:	2300      	movs	r3, #0
 8006efe:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8006f00:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006f02:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006f04:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8006f06:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8006f0a:	bf38      	it	cc
 8006f0c:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006f0e:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006f12:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8006f14:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8006f16:	f001 f9b5 	bl	8008284 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8006f1a:	0763      	lsls	r3, r4, #29
 8006f1c:	d00a      	beq.n	8006f34 <pvPortMalloc+0x10c>
 8006f1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f22:	f383 8811 	msr	BASEPRI, r3
 8006f26:	f3bf 8f6f 	isb	sy
 8006f2a:	f3bf 8f4f 	dsb	sy
 8006f2e:	e7fe      	b.n	8006f2e <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8006f30:	2400      	movs	r4, #0
 8006f32:	e7f0      	b.n	8006f16 <pvPortMalloc+0xee>
}
 8006f34:	4620      	mov	r0, r4
 8006f36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f3a:	bf00      	nop
 8006f3c:	20001e54 	.word	0x20001e54
 8006f40:	20009e58 	.word	0x20009e58
 8006f44:	20001e58 	.word	0x20001e58
 8006f48:	20009e6c 	.word	0x20009e6c
 8006f4c:	20009e60 	.word	0x20009e60
 8006f50:	20009e5c 	.word	0x20009e5c
 8006f54:	20009e64 	.word	0x20009e64

08006f58 <vPortFree>:
{
 8006f58:	b510      	push	{r4, lr}
	if( pv != NULL )
 8006f5a:	4604      	mov	r4, r0
 8006f5c:	b390      	cbz	r0, 8006fc4 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8006f5e:	4a1a      	ldr	r2, [pc, #104]	; (8006fc8 <vPortFree+0x70>)
 8006f60:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8006f64:	6812      	ldr	r2, [r2, #0]
 8006f66:	4213      	tst	r3, r2
 8006f68:	d108      	bne.n	8006f7c <vPortFree+0x24>
 8006f6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f6e:	f383 8811 	msr	BASEPRI, r3
 8006f72:	f3bf 8f6f 	isb	sy
 8006f76:	f3bf 8f4f 	dsb	sy
 8006f7a:	e7fe      	b.n	8006f7a <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8006f7c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8006f80:	b141      	cbz	r1, 8006f94 <vPortFree+0x3c>
 8006f82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f86:	f383 8811 	msr	BASEPRI, r3
 8006f8a:	f3bf 8f6f 	isb	sy
 8006f8e:	f3bf 8f4f 	dsb	sy
 8006f92:	e7fe      	b.n	8006f92 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8006f94:	ea23 0302 	bic.w	r3, r3, r2
 8006f98:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8006f9c:	f001 f8ce 	bl	800813c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006fa0:	4a0a      	ldr	r2, [pc, #40]	; (8006fcc <vPortFree+0x74>)
 8006fa2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8006fa6:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006fa8:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006fac:	440b      	add	r3, r1
 8006fae:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006fb0:	f7ff ff16 	bl	8006de0 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8006fb4:	4a06      	ldr	r2, [pc, #24]	; (8006fd0 <vPortFree+0x78>)
 8006fb6:	6813      	ldr	r3, [r2, #0]
}
 8006fb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8006fbc:	3301      	adds	r3, #1
 8006fbe:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8006fc0:	f001 b960 	b.w	8008284 <xTaskResumeAll>
}
 8006fc4:	bd10      	pop	{r4, pc}
 8006fc6:	bf00      	nop
 8006fc8:	20009e58 	.word	0x20009e58
 8006fcc:	20009e5c 	.word	0x20009e5c
 8006fd0:	20009e68 	.word	0x20009e68

08006fd4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006fd4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8006fd8:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006fdc:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006fe0:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006fe2:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8006fe4:	2300      	movs	r3, #0
 8006fe6:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8006fe8:	4770      	bx	lr

08006fea <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8006fea:	2300      	movs	r3, #0
 8006fec:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8006fee:	4770      	bx	lr

08006ff0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8006ff0:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8006ff2:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8006ff4:	689a      	ldr	r2, [r3, #8]
 8006ff6:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8006ff8:	689a      	ldr	r2, [r3, #8]
 8006ffa:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8006ffc:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006ffe:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007000:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007002:	3301      	adds	r3, #1
 8007004:	6003      	str	r3, [r0, #0]
}
 8007006:	4770      	bx	lr

08007008 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007008:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800700a:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800700c:	1c63      	adds	r3, r4, #1
 800700e:	d10a      	bne.n	8007026 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007010:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007012:	685a      	ldr	r2, [r3, #4]
 8007014:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007016:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007018:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800701a:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800701c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800701e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007020:	3301      	adds	r3, #1
 8007022:	6003      	str	r3, [r0, #0]
}
 8007024:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007026:	f100 0208 	add.w	r2, r0, #8
 800702a:	4613      	mov	r3, r2
 800702c:	6852      	ldr	r2, [r2, #4]
 800702e:	6815      	ldr	r5, [r2, #0]
 8007030:	42a5      	cmp	r5, r4
 8007032:	d9fa      	bls.n	800702a <vListInsert+0x22>
 8007034:	e7ed      	b.n	8007012 <vListInsert+0xa>

08007036 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007036:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800703a:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800703c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800703e:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007040:	6859      	ldr	r1, [r3, #4]
 8007042:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007044:	bf08      	it	eq
 8007046:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007048:	2200      	movs	r2, #0
 800704a:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800704c:	681a      	ldr	r2, [r3, #0]
 800704e:	3a01      	subs	r2, #1
 8007050:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007052:	6818      	ldr	r0, [r3, #0]
}
 8007054:	4770      	bx	lr
	...

08007058 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007058:	4808      	ldr	r0, [pc, #32]	; (800707c <prvPortStartFirstTask+0x24>)
 800705a:	6800      	ldr	r0, [r0, #0]
 800705c:	6800      	ldr	r0, [r0, #0]
 800705e:	f380 8808 	msr	MSP, r0
 8007062:	f04f 0000 	mov.w	r0, #0
 8007066:	f380 8814 	msr	CONTROL, r0
 800706a:	b662      	cpsie	i
 800706c:	b661      	cpsie	f
 800706e:	f3bf 8f4f 	dsb	sy
 8007072:	f3bf 8f6f 	isb	sy
 8007076:	df00      	svc	0
 8007078:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800707a:	0000      	.short	0x0000
 800707c:	e000ed08 	.word	0xe000ed08

08007080 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007080:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007090 <vPortEnableVFP+0x10>
 8007084:	6801      	ldr	r1, [r0, #0]
 8007086:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800708a:	6001      	str	r1, [r0, #0]
 800708c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800708e:	0000      	.short	0x0000
 8007090:	e000ed88 	.word	0xe000ed88

08007094 <prvTaskExitError>:
{
 8007094:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007096:	2300      	movs	r3, #0
 8007098:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800709a:	4b0d      	ldr	r3, [pc, #52]	; (80070d0 <prvTaskExitError+0x3c>)
 800709c:	681b      	ldr	r3, [r3, #0]
 800709e:	3301      	adds	r3, #1
 80070a0:	d008      	beq.n	80070b4 <prvTaskExitError+0x20>
 80070a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070a6:	f383 8811 	msr	BASEPRI, r3
 80070aa:	f3bf 8f6f 	isb	sy
 80070ae:	f3bf 8f4f 	dsb	sy
 80070b2:	e7fe      	b.n	80070b2 <prvTaskExitError+0x1e>
 80070b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070b8:	f383 8811 	msr	BASEPRI, r3
 80070bc:	f3bf 8f6f 	isb	sy
 80070c0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80070c4:	9b01      	ldr	r3, [sp, #4]
 80070c6:	2b00      	cmp	r3, #0
 80070c8:	d0fc      	beq.n	80070c4 <prvTaskExitError+0x30>
}
 80070ca:	b002      	add	sp, #8
 80070cc:	4770      	bx	lr
 80070ce:	bf00      	nop
 80070d0:	2000005c 	.word	0x2000005c

080070d4 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80070d4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80070d8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80070dc:	4b07      	ldr	r3, [pc, #28]	; (80070fc <pxPortInitialiseStack+0x28>)
 80070de:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80070e2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80070e6:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80070ea:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80070ee:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80070f2:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80070f6:	3844      	subs	r0, #68	; 0x44
 80070f8:	4770      	bx	lr
 80070fa:	bf00      	nop
 80070fc:	08007095 	.word	0x08007095

08007100 <SVC_Handler>:
	__asm volatile (
 8007100:	4b07      	ldr	r3, [pc, #28]	; (8007120 <pxCurrentTCBConst2>)
 8007102:	6819      	ldr	r1, [r3, #0]
 8007104:	6808      	ldr	r0, [r1, #0]
 8007106:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800710a:	f380 8809 	msr	PSP, r0
 800710e:	f3bf 8f6f 	isb	sy
 8007112:	f04f 0000 	mov.w	r0, #0
 8007116:	f380 8811 	msr	BASEPRI, r0
 800711a:	4770      	bx	lr
 800711c:	f3af 8000 	nop.w

08007120 <pxCurrentTCBConst2>:
 8007120:	20009ebc 	.word	0x20009ebc

08007124 <vPortEnterCritical>:
 8007124:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007128:	f383 8811 	msr	BASEPRI, r3
 800712c:	f3bf 8f6f 	isb	sy
 8007130:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007134:	4a0a      	ldr	r2, [pc, #40]	; (8007160 <vPortEnterCritical+0x3c>)
 8007136:	6813      	ldr	r3, [r2, #0]
 8007138:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800713a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800713c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800713e:	d10e      	bne.n	800715e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007140:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007144:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8007148:	b2db      	uxtb	r3, r3
 800714a:	b143      	cbz	r3, 800715e <vPortEnterCritical+0x3a>
 800714c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007150:	f383 8811 	msr	BASEPRI, r3
 8007154:	f3bf 8f6f 	isb	sy
 8007158:	f3bf 8f4f 	dsb	sy
 800715c:	e7fe      	b.n	800715c <vPortEnterCritical+0x38>
}
 800715e:	4770      	bx	lr
 8007160:	2000005c 	.word	0x2000005c

08007164 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007164:	4a08      	ldr	r2, [pc, #32]	; (8007188 <vPortExitCritical+0x24>)
 8007166:	6813      	ldr	r3, [r2, #0]
 8007168:	b943      	cbnz	r3, 800717c <vPortExitCritical+0x18>
 800716a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800716e:	f383 8811 	msr	BASEPRI, r3
 8007172:	f3bf 8f6f 	isb	sy
 8007176:	f3bf 8f4f 	dsb	sy
 800717a:	e7fe      	b.n	800717a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800717c:	3b01      	subs	r3, #1
 800717e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007180:	b90b      	cbnz	r3, 8007186 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007182:	f383 8811 	msr	BASEPRI, r3
}
 8007186:	4770      	bx	lr
 8007188:	2000005c 	.word	0x2000005c
 800718c:	00000000 	.word	0x00000000

08007190 <PendSV_Handler>:
	__asm volatile
 8007190:	f3ef 8009 	mrs	r0, PSP
 8007194:	f3bf 8f6f 	isb	sy
 8007198:	4b15      	ldr	r3, [pc, #84]	; (80071f0 <pxCurrentTCBConst>)
 800719a:	681a      	ldr	r2, [r3, #0]
 800719c:	f01e 0f10 	tst.w	lr, #16
 80071a0:	bf08      	it	eq
 80071a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80071a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80071aa:	6010      	str	r0, [r2, #0]
 80071ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 80071b0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80071b4:	f380 8811 	msr	BASEPRI, r0
 80071b8:	f3bf 8f4f 	dsb	sy
 80071bc:	f3bf 8f6f 	isb	sy
 80071c0:	f001 f962 	bl	8008488 <vTaskSwitchContext>
 80071c4:	f04f 0000 	mov.w	r0, #0
 80071c8:	f380 8811 	msr	BASEPRI, r0
 80071cc:	bc09      	pop	{r0, r3}
 80071ce:	6819      	ldr	r1, [r3, #0]
 80071d0:	6808      	ldr	r0, [r1, #0]
 80071d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80071d6:	f01e 0f10 	tst.w	lr, #16
 80071da:	bf08      	it	eq
 80071dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80071e0:	f380 8809 	msr	PSP, r0
 80071e4:	f3bf 8f6f 	isb	sy
 80071e8:	4770      	bx	lr
 80071ea:	bf00      	nop
 80071ec:	f3af 8000 	nop.w

080071f0 <pxCurrentTCBConst>:
 80071f0:	20009ebc 	.word	0x20009ebc

080071f4 <xPortSysTickHandler>:
{
 80071f4:	b508      	push	{r3, lr}
	__asm volatile
 80071f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071fa:	f383 8811 	msr	BASEPRI, r3
 80071fe:	f3bf 8f6f 	isb	sy
 8007202:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007206:	f000 ffa7 	bl	8008158 <xTaskIncrementTick>
 800720a:	b128      	cbz	r0, 8007218 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800720c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007210:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007214:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8007218:	2300      	movs	r3, #0
 800721a:	f383 8811 	msr	BASEPRI, r3
}
 800721e:	bd08      	pop	{r3, pc}

08007220 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007220:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8007224:	2300      	movs	r3, #0
 8007226:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007228:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800722a:	4b05      	ldr	r3, [pc, #20]	; (8007240 <vPortSetupTimerInterrupt+0x20>)
 800722c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007230:	681b      	ldr	r3, [r3, #0]
 8007232:	fbb3 f3f1 	udiv	r3, r3, r1
 8007236:	3b01      	subs	r3, #1
 8007238:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800723a:	2307      	movs	r3, #7
 800723c:	6113      	str	r3, [r2, #16]
}
 800723e:	4770      	bx	lr
 8007240:	20000050 	.word	0x20000050

08007244 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007244:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8007248:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800724a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800724e:	4a3a      	ldr	r2, [pc, #232]	; (8007338 <xPortStartScheduler+0xf4>)
 8007250:	4291      	cmp	r1, r2
 8007252:	d108      	bne.n	8007266 <xPortStartScheduler+0x22>
	__asm volatile
 8007254:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007258:	f383 8811 	msr	BASEPRI, r3
 800725c:	f3bf 8f6f 	isb	sy
 8007260:	f3bf 8f4f 	dsb	sy
 8007264:	e7fe      	b.n	8007264 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007266:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800726a:	4b34      	ldr	r3, [pc, #208]	; (800733c <xPortStartScheduler+0xf8>)
 800726c:	429a      	cmp	r2, r3
 800726e:	d108      	bne.n	8007282 <xPortStartScheduler+0x3e>
 8007270:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007274:	f383 8811 	msr	BASEPRI, r3
 8007278:	f3bf 8f6f 	isb	sy
 800727c:	f3bf 8f4f 	dsb	sy
 8007280:	e7fe      	b.n	8007280 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007282:	4b2f      	ldr	r3, [pc, #188]	; (8007340 <xPortStartScheduler+0xfc>)
 8007284:	781a      	ldrb	r2, [r3, #0]
 8007286:	b2d2      	uxtb	r2, r2
 8007288:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800728a:	22ff      	movs	r2, #255	; 0xff
 800728c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800728e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007290:	4a2c      	ldr	r2, [pc, #176]	; (8007344 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007292:	b2db      	uxtb	r3, r3
 8007294:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007298:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800729c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80072a0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80072a2:	4a29      	ldr	r2, [pc, #164]	; (8007348 <xPortStartScheduler+0x104>)
 80072a4:	2307      	movs	r3, #7
 80072a6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80072a8:	2100      	movs	r1, #0
 80072aa:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80072ae:	0600      	lsls	r0, r0, #24
 80072b0:	f103 34ff 	add.w	r4, r3, #4294967295
 80072b4:	d40c      	bmi.n	80072d0 <xPortStartScheduler+0x8c>
 80072b6:	b111      	cbz	r1, 80072be <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80072b8:	2b03      	cmp	r3, #3
 80072ba:	6013      	str	r3, [r2, #0]
 80072bc:	d011      	beq.n	80072e2 <xPortStartScheduler+0x9e>
 80072be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072c2:	f383 8811 	msr	BASEPRI, r3
 80072c6:	f3bf 8f6f 	isb	sy
 80072ca:	f3bf 8f4f 	dsb	sy
 80072ce:	e7fe      	b.n	80072ce <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80072d0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80072d4:	005b      	lsls	r3, r3, #1
 80072d6:	b2db      	uxtb	r3, r3
 80072d8:	f88d 3003 	strb.w	r3, [sp, #3]
 80072dc:	2101      	movs	r1, #1
 80072de:	4623      	mov	r3, r4
 80072e0:	e7e3      	b.n	80072aa <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80072e2:	f44f 7340 	mov.w	r3, #768	; 0x300
 80072e6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80072e8:	9b01      	ldr	r3, [sp, #4]
 80072ea:	4a15      	ldr	r2, [pc, #84]	; (8007340 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80072ec:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80072f0:	b2db      	uxtb	r3, r3
 80072f2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80072f4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 80072f8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80072fc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007300:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007304:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8007308:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800730c:	f7ff ff88 	bl	8007220 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007310:	4b0e      	ldr	r3, [pc, #56]	; (800734c <xPortStartScheduler+0x108>)
 8007312:	2500      	movs	r5, #0
 8007314:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007316:	f7ff feb3 	bl	8007080 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800731a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800731e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007322:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8007326:	f7ff fe97 	bl	8007058 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800732a:	f001 f8ad 	bl	8008488 <vTaskSwitchContext>
	prvTaskExitError();
 800732e:	f7ff feb1 	bl	8007094 <prvTaskExitError>
}
 8007332:	4628      	mov	r0, r5
 8007334:	b003      	add	sp, #12
 8007336:	bd30      	pop	{r4, r5, pc}
 8007338:	410fc271 	.word	0x410fc271
 800733c:	410fc270 	.word	0x410fc270
 8007340:	e000e400 	.word	0xe000e400
 8007344:	20009e74 	.word	0x20009e74
 8007348:	20009e78 	.word	0x20009e78
 800734c:	2000005c 	.word	0x2000005c

08007350 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007350:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007354:	2b0f      	cmp	r3, #15
 8007356:	d90e      	bls.n	8007376 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007358:	4a11      	ldr	r2, [pc, #68]	; (80073a0 <vPortValidateInterruptPriority+0x50>)
 800735a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800735c:	4a11      	ldr	r2, [pc, #68]	; (80073a4 <vPortValidateInterruptPriority+0x54>)
 800735e:	7812      	ldrb	r2, [r2, #0]
 8007360:	429a      	cmp	r2, r3
 8007362:	d908      	bls.n	8007376 <vPortValidateInterruptPriority+0x26>
 8007364:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007368:	f383 8811 	msr	BASEPRI, r3
 800736c:	f3bf 8f6f 	isb	sy
 8007370:	f3bf 8f4f 	dsb	sy
 8007374:	e7fe      	b.n	8007374 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007376:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800737a:	4a0b      	ldr	r2, [pc, #44]	; (80073a8 <vPortValidateInterruptPriority+0x58>)
 800737c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8007380:	6812      	ldr	r2, [r2, #0]
 8007382:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007386:	4293      	cmp	r3, r2
 8007388:	d908      	bls.n	800739c <vPortValidateInterruptPriority+0x4c>
 800738a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800738e:	f383 8811 	msr	BASEPRI, r3
 8007392:	f3bf 8f6f 	isb	sy
 8007396:	f3bf 8f4f 	dsb	sy
 800739a:	e7fe      	b.n	800739a <vPortValidateInterruptPriority+0x4a>
	}
 800739c:	4770      	bx	lr
 800739e:	bf00      	nop
 80073a0:	e000e3f0 	.word	0xe000e3f0
 80073a4:	20009e74 	.word	0x20009e74
 80073a8:	20009e78 	.word	0x20009e78

080073ac <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80073ac:	b510      	push	{r4, lr}
 80073ae:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80073b0:	f7ff feb8 	bl	8007124 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80073b4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80073b6:	f7ff fed5 	bl	8007164 <vPortExitCritical>

	return xReturn;
}
 80073ba:	fab4 f084 	clz	r0, r4
 80073be:	0940      	lsrs	r0, r0, #5
 80073c0:	bd10      	pop	{r4, pc}

080073c2 <prvCopyDataToQueue>:
{
 80073c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80073c4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80073c6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80073c8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80073ca:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80073cc:	b952      	cbnz	r2, 80073e4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80073ce:	6807      	ldr	r7, [r0, #0]
 80073d0:	bb47      	cbnz	r7, 8007424 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80073d2:	6880      	ldr	r0, [r0, #8]
 80073d4:	f001 f9b8 	bl	8008748 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80073d8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80073da:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80073dc:	3601      	adds	r6, #1
 80073de:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80073e0:	4628      	mov	r0, r5
 80073e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80073e4:	b965      	cbnz	r5, 8007400 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80073e6:	6840      	ldr	r0, [r0, #4]
 80073e8:	f013 fcd4 	bl	801ad94 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80073ec:	6863      	ldr	r3, [r4, #4]
 80073ee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80073f0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80073f2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80073f4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80073f6:	4293      	cmp	r3, r2
 80073f8:	d3f0      	bcc.n	80073dc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80073fa:	6823      	ldr	r3, [r4, #0]
 80073fc:	6063      	str	r3, [r4, #4]
 80073fe:	e7ed      	b.n	80073dc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007400:	68c0      	ldr	r0, [r0, #12]
 8007402:	f013 fcc7 	bl	801ad94 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007406:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007408:	68e3      	ldr	r3, [r4, #12]
 800740a:	4251      	negs	r1, r2
 800740c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800740e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007410:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007412:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007414:	bf3e      	ittt	cc
 8007416:	68a3      	ldrcc	r3, [r4, #8]
 8007418:	185b      	addcc	r3, r3, r1
 800741a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800741c:	2d02      	cmp	r5, #2
 800741e:	d101      	bne.n	8007424 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007420:	b116      	cbz	r6, 8007428 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007422:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007424:	2500      	movs	r5, #0
 8007426:	e7d9      	b.n	80073dc <prvCopyDataToQueue+0x1a>
 8007428:	4635      	mov	r5, r6
 800742a:	e7d7      	b.n	80073dc <prvCopyDataToQueue+0x1a>

0800742c <prvCopyDataFromQueue>:
{
 800742c:	4603      	mov	r3, r0
 800742e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007430:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007432:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007434:	b16a      	cbz	r2, 8007452 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007436:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007438:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800743a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800743c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800743e:	bf28      	it	cs
 8007440:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007442:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007444:	bf28      	it	cs
 8007446:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007448:	68d9      	ldr	r1, [r3, #12]
}
 800744a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800744e:	f013 bca1 	b.w	801ad94 <memcpy>
}
 8007452:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007456:	4770      	bx	lr

08007458 <prvUnlockQueue>:
{
 8007458:	b570      	push	{r4, r5, r6, lr}
 800745a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800745c:	f7ff fe62 	bl	8007124 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007460:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007464:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007468:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800746a:	2d00      	cmp	r5, #0
 800746c:	dc14      	bgt.n	8007498 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800746e:	23ff      	movs	r3, #255	; 0xff
 8007470:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007474:	f7ff fe76 	bl	8007164 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007478:	f7ff fe54 	bl	8007124 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800747c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007480:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007484:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007486:	2d00      	cmp	r5, #0
 8007488:	dc12      	bgt.n	80074b0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800748a:	23ff      	movs	r3, #255	; 0xff
 800748c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8007490:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007494:	f7ff be66 	b.w	8007164 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007498:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800749a:	2b00      	cmp	r3, #0
 800749c:	d0e7      	beq.n	800746e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800749e:	4630      	mov	r0, r6
 80074a0:	f001 f86e 	bl	8008580 <xTaskRemoveFromEventList>
 80074a4:	b108      	cbz	r0, 80074aa <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80074a6:	f001 f8f7 	bl	8008698 <vTaskMissedYield>
			--cTxLock;
 80074aa:	3d01      	subs	r5, #1
 80074ac:	b26d      	sxtb	r5, r5
 80074ae:	e7dc      	b.n	800746a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80074b0:	6923      	ldr	r3, [r4, #16]
 80074b2:	2b00      	cmp	r3, #0
 80074b4:	d0e9      	beq.n	800748a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80074b6:	4630      	mov	r0, r6
 80074b8:	f001 f862 	bl	8008580 <xTaskRemoveFromEventList>
 80074bc:	b108      	cbz	r0, 80074c2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80074be:	f001 f8eb 	bl	8008698 <vTaskMissedYield>
				--cRxLock;
 80074c2:	3d01      	subs	r5, #1
 80074c4:	b26d      	sxtb	r5, r5
 80074c6:	e7de      	b.n	8007486 <prvUnlockQueue+0x2e>

080074c8 <xQueueGenericReset>:
{
 80074c8:	b538      	push	{r3, r4, r5, lr}
 80074ca:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80074cc:	4604      	mov	r4, r0
 80074ce:	b940      	cbnz	r0, 80074e2 <xQueueGenericReset+0x1a>
 80074d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074d4:	f383 8811 	msr	BASEPRI, r3
 80074d8:	f3bf 8f6f 	isb	sy
 80074dc:	f3bf 8f4f 	dsb	sy
 80074e0:	e7fe      	b.n	80074e0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80074e2:	f7ff fe1f 	bl	8007124 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074e6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 80074ea:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80074ec:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074ee:	434b      	muls	r3, r1
 80074f0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074f2:	1a5b      	subs	r3, r3, r1
 80074f4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074f6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80074f8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80074fa:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80074fc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80074fe:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007500:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007504:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007508:	b9a5      	cbnz	r5, 8007534 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800750a:	6923      	ldr	r3, [r4, #16]
 800750c:	b173      	cbz	r3, 800752c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800750e:	f104 0010 	add.w	r0, r4, #16
 8007512:	f001 f835 	bl	8008580 <xTaskRemoveFromEventList>
 8007516:	b148      	cbz	r0, 800752c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007518:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800751c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007520:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007524:	f3bf 8f4f 	dsb	sy
 8007528:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800752c:	f7ff fe1a 	bl	8007164 <vPortExitCritical>
}
 8007530:	2001      	movs	r0, #1
 8007532:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007534:	f104 0010 	add.w	r0, r4, #16
 8007538:	f7ff fd4c 	bl	8006fd4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800753c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007540:	f7ff fd48 	bl	8006fd4 <vListInitialise>
 8007544:	e7f2      	b.n	800752c <xQueueGenericReset+0x64>

08007546 <xQueueGenericCreateStatic>:
	{
 8007546:	b513      	push	{r0, r1, r4, lr}
 8007548:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800754a:	b940      	cbnz	r0, 800755e <xQueueGenericCreateStatic+0x18>
 800754c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007550:	f383 8811 	msr	BASEPRI, r3
 8007554:	f3bf 8f6f 	isb	sy
 8007558:	f3bf 8f4f 	dsb	sy
 800755c:	e7fe      	b.n	800755c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800755e:	b943      	cbnz	r3, 8007572 <xQueueGenericCreateStatic+0x2c>
 8007560:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007564:	f383 8811 	msr	BASEPRI, r3
 8007568:	f3bf 8f6f 	isb	sy
 800756c:	f3bf 8f4f 	dsb	sy
 8007570:	e7fe      	b.n	8007570 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007572:	b14a      	cbz	r2, 8007588 <xQueueGenericCreateStatic+0x42>
 8007574:	b991      	cbnz	r1, 800759c <xQueueGenericCreateStatic+0x56>
 8007576:	f04f 0350 	mov.w	r3, #80	; 0x50
 800757a:	f383 8811 	msr	BASEPRI, r3
 800757e:	f3bf 8f6f 	isb	sy
 8007582:	f3bf 8f4f 	dsb	sy
 8007586:	e7fe      	b.n	8007586 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007588:	b141      	cbz	r1, 800759c <xQueueGenericCreateStatic+0x56>
 800758a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800758e:	f383 8811 	msr	BASEPRI, r3
 8007592:	f3bf 8f6f 	isb	sy
 8007596:	f3bf 8f4f 	dsb	sy
 800759a:	e7fe      	b.n	800759a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800759c:	2350      	movs	r3, #80	; 0x50
 800759e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80075a0:	9b01      	ldr	r3, [sp, #4]
 80075a2:	2b50      	cmp	r3, #80	; 0x50
 80075a4:	d008      	beq.n	80075b8 <xQueueGenericCreateStatic+0x72>
 80075a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075aa:	f383 8811 	msr	BASEPRI, r3
 80075ae:	f3bf 8f6f 	isb	sy
 80075b2:	f3bf 8f4f 	dsb	sy
 80075b6:	e7fe      	b.n	80075b6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80075b8:	2900      	cmp	r1, #0
 80075ba:	bf08      	it	eq
 80075bc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80075be:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80075c0:	6022      	str	r2, [r4, #0]
 80075c2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80075c4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80075c8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80075cc:	4619      	mov	r1, r3
 80075ce:	4620      	mov	r0, r4
 80075d0:	f7ff ff7a 	bl	80074c8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80075d4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80075d8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80075dc:	4620      	mov	r0, r4
 80075de:	b002      	add	sp, #8
 80075e0:	bd10      	pop	{r4, pc}

080075e2 <xQueueGenericCreate>:
	{
 80075e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80075e4:	460d      	mov	r5, r1
 80075e6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80075e8:	4606      	mov	r6, r0
 80075ea:	b940      	cbnz	r0, 80075fe <xQueueGenericCreate+0x1c>
 80075ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075f0:	f383 8811 	msr	BASEPRI, r3
 80075f4:	f3bf 8f6f 	isb	sy
 80075f8:	f3bf 8f4f 	dsb	sy
 80075fc:	e7fe      	b.n	80075fc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80075fe:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007600:	3050      	adds	r0, #80	; 0x50
 8007602:	f7ff fc11 	bl	8006e28 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007606:	4604      	mov	r4, r0
 8007608:	b170      	cbz	r0, 8007628 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800760a:	2300      	movs	r3, #0
 800760c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007610:	b165      	cbz	r5, 800762c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007612:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007616:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800761a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800761c:	2101      	movs	r1, #1
 800761e:	4620      	mov	r0, r4
 8007620:	f7ff ff52 	bl	80074c8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007624:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007628:	4620      	mov	r0, r4
 800762a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800762c:	4603      	mov	r3, r0
 800762e:	e7f2      	b.n	8007616 <xQueueGenericCreate+0x34>

08007630 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007630:	b513      	push	{r0, r1, r4, lr}
 8007632:	4613      	mov	r3, r2
 8007634:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007636:	b940      	cbnz	r0, 800764a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007638:	f04f 0350 	mov.w	r3, #80	; 0x50
 800763c:	f383 8811 	msr	BASEPRI, r3
 8007640:	f3bf 8f6f 	isb	sy
 8007644:	f3bf 8f4f 	dsb	sy
 8007648:	e7fe      	b.n	8007648 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800764a:	4288      	cmp	r0, r1
 800764c:	d208      	bcs.n	8007660 <xQueueCreateCountingSemaphoreStatic+0x30>
 800764e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007652:	f383 8811 	msr	BASEPRI, r3
 8007656:	f3bf 8f6f 	isb	sy
 800765a:	f3bf 8f4f 	dsb	sy
 800765e:	e7fe      	b.n	800765e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007660:	2202      	movs	r2, #2
 8007662:	9200      	str	r2, [sp, #0]
 8007664:	2200      	movs	r2, #0
 8007666:	4611      	mov	r1, r2
 8007668:	f7ff ff6d 	bl	8007546 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800766c:	b100      	cbz	r0, 8007670 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800766e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007670:	b002      	add	sp, #8
 8007672:	bd10      	pop	{r4, pc}

08007674 <xQueueCreateCountingSemaphore>:
	{
 8007674:	b510      	push	{r4, lr}
 8007676:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007678:	b940      	cbnz	r0, 800768c <xQueueCreateCountingSemaphore+0x18>
 800767a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800767e:	f383 8811 	msr	BASEPRI, r3
 8007682:	f3bf 8f6f 	isb	sy
 8007686:	f3bf 8f4f 	dsb	sy
 800768a:	e7fe      	b.n	800768a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800768c:	4288      	cmp	r0, r1
 800768e:	d208      	bcs.n	80076a2 <xQueueCreateCountingSemaphore+0x2e>
 8007690:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007694:	f383 8811 	msr	BASEPRI, r3
 8007698:	f3bf 8f6f 	isb	sy
 800769c:	f3bf 8f4f 	dsb	sy
 80076a0:	e7fe      	b.n	80076a0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80076a2:	2202      	movs	r2, #2
 80076a4:	2100      	movs	r1, #0
 80076a6:	f7ff ff9c 	bl	80075e2 <xQueueGenericCreate>
		if( xHandle != NULL )
 80076aa:	b100      	cbz	r0, 80076ae <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80076ac:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80076ae:	bd10      	pop	{r4, pc}

080076b0 <xQueueGenericSend>:
{
 80076b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80076b4:	b085      	sub	sp, #20
 80076b6:	4688      	mov	r8, r1
 80076b8:	9201      	str	r2, [sp, #4]
 80076ba:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80076bc:	4604      	mov	r4, r0
 80076be:	b940      	cbnz	r0, 80076d2 <xQueueGenericSend+0x22>
 80076c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076c4:	f383 8811 	msr	BASEPRI, r3
 80076c8:	f3bf 8f6f 	isb	sy
 80076cc:	f3bf 8f4f 	dsb	sy
 80076d0:	e7fe      	b.n	80076d0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80076d2:	b951      	cbnz	r1, 80076ea <xQueueGenericSend+0x3a>
 80076d4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80076d6:	b143      	cbz	r3, 80076ea <xQueueGenericSend+0x3a>
 80076d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076dc:	f383 8811 	msr	BASEPRI, r3
 80076e0:	f3bf 8f6f 	isb	sy
 80076e4:	f3bf 8f4f 	dsb	sy
 80076e8:	e7fe      	b.n	80076e8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80076ea:	2f02      	cmp	r7, #2
 80076ec:	d10b      	bne.n	8007706 <xQueueGenericSend+0x56>
 80076ee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80076f0:	2b01      	cmp	r3, #1
 80076f2:	d008      	beq.n	8007706 <xQueueGenericSend+0x56>
 80076f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076f8:	f383 8811 	msr	BASEPRI, r3
 80076fc:	f3bf 8f6f 	isb	sy
 8007700:	f3bf 8f4f 	dsb	sy
 8007704:	e7fe      	b.n	8007704 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007706:	f000 ffcd 	bl	80086a4 <xTaskGetSchedulerState>
 800770a:	4606      	mov	r6, r0
 800770c:	b950      	cbnz	r0, 8007724 <xQueueGenericSend+0x74>
 800770e:	9b01      	ldr	r3, [sp, #4]
 8007710:	b14b      	cbz	r3, 8007726 <xQueueGenericSend+0x76>
 8007712:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007716:	f383 8811 	msr	BASEPRI, r3
 800771a:	f3bf 8f6f 	isb	sy
 800771e:	f3bf 8f4f 	dsb	sy
 8007722:	e7fe      	b.n	8007722 <xQueueGenericSend+0x72>
 8007724:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007726:	f04f 0900 	mov.w	r9, #0
 800772a:	e037      	b.n	800779c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800772c:	9d01      	ldr	r5, [sp, #4]
 800772e:	b91d      	cbnz	r5, 8007738 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007730:	f7ff fd18 	bl	8007164 <vPortExitCritical>
			return errQUEUE_FULL;
 8007734:	2000      	movs	r0, #0
 8007736:	e052      	b.n	80077de <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8007738:	b916      	cbnz	r6, 8007740 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800773a:	a802      	add	r0, sp, #8
 800773c:	f000 ff64 	bl	8008608 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007740:	f7ff fd10 	bl	8007164 <vPortExitCritical>
		vTaskSuspendAll();
 8007744:	f000 fcfa 	bl	800813c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007748:	f7ff fcec 	bl	8007124 <vPortEnterCritical>
 800774c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007750:	2bff      	cmp	r3, #255	; 0xff
 8007752:	bf08      	it	eq
 8007754:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007758:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800775c:	2bff      	cmp	r3, #255	; 0xff
 800775e:	bf08      	it	eq
 8007760:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007764:	f7ff fcfe 	bl	8007164 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007768:	a901      	add	r1, sp, #4
 800776a:	a802      	add	r0, sp, #8
 800776c:	f000 ff58 	bl	8008620 <xTaskCheckForTimeOut>
 8007770:	2800      	cmp	r0, #0
 8007772:	d14a      	bne.n	800780a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007774:	f7ff fcd6 	bl	8007124 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007778:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800777a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800777c:	429a      	cmp	r2, r3
 800777e:	d131      	bne.n	80077e4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007780:	f7ff fcf0 	bl	8007164 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007784:	9901      	ldr	r1, [sp, #4]
 8007786:	f104 0010 	add.w	r0, r4, #16
 800778a:	f000 fec1 	bl	8008510 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800778e:	4620      	mov	r0, r4
 8007790:	f7ff fe62 	bl	8007458 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007794:	f000 fd76 	bl	8008284 <xTaskResumeAll>
 8007798:	b360      	cbz	r0, 80077f4 <xQueueGenericSend+0x144>
 800779a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800779c:	f7ff fcc2 	bl	8007124 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80077a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80077a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80077a4:	429a      	cmp	r2, r3
 80077a6:	d301      	bcc.n	80077ac <xQueueGenericSend+0xfc>
 80077a8:	2f02      	cmp	r7, #2
 80077aa:	d1bf      	bne.n	800772c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80077ac:	463a      	mov	r2, r7
 80077ae:	4641      	mov	r1, r8
 80077b0:	4620      	mov	r0, r4
 80077b2:	f7ff fe06 	bl	80073c2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80077b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80077b8:	b11b      	cbz	r3, 80077c2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80077ba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80077be:	f000 fedf 	bl	8008580 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80077c2:	b148      	cbz	r0, 80077d8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 80077c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80077c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80077cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80077d0:	f3bf 8f4f 	dsb	sy
 80077d4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80077d8:	f7ff fcc4 	bl	8007164 <vPortExitCritical>
				return pdPASS;
 80077dc:	2001      	movs	r0, #1
}
 80077de:	b005      	add	sp, #20
 80077e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 80077e4:	f7ff fcbe 	bl	8007164 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80077e8:	4620      	mov	r0, r4
 80077ea:	f7ff fe35 	bl	8007458 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80077ee:	f000 fd49 	bl	8008284 <xTaskResumeAll>
 80077f2:	e7d2      	b.n	800779a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 80077f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80077f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80077fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007800:	f3bf 8f4f 	dsb	sy
 8007804:	f3bf 8f6f 	isb	sy
 8007808:	e7c7      	b.n	800779a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800780a:	4620      	mov	r0, r4
 800780c:	f7ff fe24 	bl	8007458 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007810:	f000 fd38 	bl	8008284 <xTaskResumeAll>
 8007814:	e78e      	b.n	8007734 <xQueueGenericSend+0x84>

08007816 <xQueueGenericSendFromISR>:
{
 8007816:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800781a:	4689      	mov	r9, r1
 800781c:	4690      	mov	r8, r2
 800781e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007820:	4604      	mov	r4, r0
 8007822:	b940      	cbnz	r0, 8007836 <xQueueGenericSendFromISR+0x20>
 8007824:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007828:	f383 8811 	msr	BASEPRI, r3
 800782c:	f3bf 8f6f 	isb	sy
 8007830:	f3bf 8f4f 	dsb	sy
 8007834:	e7fe      	b.n	8007834 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007836:	b951      	cbnz	r1, 800784e <xQueueGenericSendFromISR+0x38>
 8007838:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800783a:	b143      	cbz	r3, 800784e <xQueueGenericSendFromISR+0x38>
 800783c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007840:	f383 8811 	msr	BASEPRI, r3
 8007844:	f3bf 8f6f 	isb	sy
 8007848:	f3bf 8f4f 	dsb	sy
 800784c:	e7fe      	b.n	800784c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800784e:	2f02      	cmp	r7, #2
 8007850:	d10b      	bne.n	800786a <xQueueGenericSendFromISR+0x54>
 8007852:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007854:	2b01      	cmp	r3, #1
 8007856:	d008      	beq.n	800786a <xQueueGenericSendFromISR+0x54>
 8007858:	f04f 0350 	mov.w	r3, #80	; 0x50
 800785c:	f383 8811 	msr	BASEPRI, r3
 8007860:	f3bf 8f6f 	isb	sy
 8007864:	f3bf 8f4f 	dsb	sy
 8007868:	e7fe      	b.n	8007868 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800786a:	f7ff fd71 	bl	8007350 <vPortValidateInterruptPriority>
	__asm volatile
 800786e:	f3ef 8611 	mrs	r6, BASEPRI
 8007872:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007876:	f383 8811 	msr	BASEPRI, r3
 800787a:	f3bf 8f6f 	isb	sy
 800787e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007882:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007884:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007886:	429a      	cmp	r2, r3
 8007888:	d301      	bcc.n	800788e <xQueueGenericSendFromISR+0x78>
 800788a:	2f02      	cmp	r7, #2
 800788c:	d123      	bne.n	80078d6 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800788e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007892:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007894:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007896:	463a      	mov	r2, r7
 8007898:	4649      	mov	r1, r9
 800789a:	4620      	mov	r0, r4
 800789c:	f7ff fd91 	bl	80073c2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80078a0:	1c6b      	adds	r3, r5, #1
 80078a2:	d113      	bne.n	80078cc <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80078a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80078a6:	b90b      	cbnz	r3, 80078ac <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 80078a8:	2001      	movs	r0, #1
 80078aa:	e00b      	b.n	80078c4 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80078ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80078b0:	f000 fe66 	bl	8008580 <xTaskRemoveFromEventList>
 80078b4:	2800      	cmp	r0, #0
 80078b6:	d0f7      	beq.n	80078a8 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 80078b8:	f1b8 0f00 	cmp.w	r8, #0
 80078bc:	d0f4      	beq.n	80078a8 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80078be:	2001      	movs	r0, #1
 80078c0:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80078c4:	f386 8811 	msr	BASEPRI, r6
}
 80078c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80078cc:	3501      	adds	r5, #1
 80078ce:	b26d      	sxtb	r5, r5
 80078d0:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80078d4:	e7e8      	b.n	80078a8 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 80078d6:	2000      	movs	r0, #0
 80078d8:	e7f4      	b.n	80078c4 <xQueueGenericSendFromISR+0xae>

080078da <xQueueGiveFromISR>:
{
 80078da:	b570      	push	{r4, r5, r6, lr}
 80078dc:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80078de:	4604      	mov	r4, r0
 80078e0:	b940      	cbnz	r0, 80078f4 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80078e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078e6:	f383 8811 	msr	BASEPRI, r3
 80078ea:	f3bf 8f6f 	isb	sy
 80078ee:	f3bf 8f4f 	dsb	sy
 80078f2:	e7fe      	b.n	80078f2 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80078f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80078f6:	b143      	cbz	r3, 800790a <xQueueGiveFromISR+0x30>
 80078f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078fc:	f383 8811 	msr	BASEPRI, r3
 8007900:	f3bf 8f6f 	isb	sy
 8007904:	f3bf 8f4f 	dsb	sy
 8007908:	e7fe      	b.n	8007908 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800790a:	6803      	ldr	r3, [r0, #0]
 800790c:	b953      	cbnz	r3, 8007924 <xQueueGiveFromISR+0x4a>
 800790e:	6883      	ldr	r3, [r0, #8]
 8007910:	b143      	cbz	r3, 8007924 <xQueueGiveFromISR+0x4a>
 8007912:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007916:	f383 8811 	msr	BASEPRI, r3
 800791a:	f3bf 8f6f 	isb	sy
 800791e:	f3bf 8f4f 	dsb	sy
 8007922:	e7fe      	b.n	8007922 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007924:	f7ff fd14 	bl	8007350 <vPortValidateInterruptPriority>
	__asm volatile
 8007928:	f3ef 8611 	mrs	r6, BASEPRI
 800792c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007930:	f383 8811 	msr	BASEPRI, r3
 8007934:	f3bf 8f6f 	isb	sy
 8007938:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800793c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800793e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007940:	4293      	cmp	r3, r2
 8007942:	d91c      	bls.n	800797e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007944:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007948:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800794a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800794c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800794e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8007950:	d110      	bne.n	8007974 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007952:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007954:	b90b      	cbnz	r3, 800795a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007956:	2001      	movs	r0, #1
 8007958:	e009      	b.n	800796e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800795a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800795e:	f000 fe0f 	bl	8008580 <xTaskRemoveFromEventList>
 8007962:	2800      	cmp	r0, #0
 8007964:	d0f7      	beq.n	8007956 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007966:	2d00      	cmp	r5, #0
 8007968:	d0f5      	beq.n	8007956 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800796a:	2001      	movs	r0, #1
 800796c:	6028      	str	r0, [r5, #0]
	__asm volatile
 800796e:	f386 8811 	msr	BASEPRI, r6
}
 8007972:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007974:	3301      	adds	r3, #1
 8007976:	b25b      	sxtb	r3, r3
 8007978:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800797c:	e7eb      	b.n	8007956 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800797e:	2000      	movs	r0, #0
 8007980:	e7f5      	b.n	800796e <xQueueGiveFromISR+0x94>

08007982 <xQueueReceive>:
{
 8007982:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007986:	460f      	mov	r7, r1
 8007988:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800798a:	4604      	mov	r4, r0
 800798c:	b940      	cbnz	r0, 80079a0 <xQueueReceive+0x1e>
	__asm volatile
 800798e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007992:	f383 8811 	msr	BASEPRI, r3
 8007996:	f3bf 8f6f 	isb	sy
 800799a:	f3bf 8f4f 	dsb	sy
 800799e:	e7fe      	b.n	800799e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80079a0:	b951      	cbnz	r1, 80079b8 <xQueueReceive+0x36>
 80079a2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80079a4:	b143      	cbz	r3, 80079b8 <xQueueReceive+0x36>
 80079a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079aa:	f383 8811 	msr	BASEPRI, r3
 80079ae:	f3bf 8f6f 	isb	sy
 80079b2:	f3bf 8f4f 	dsb	sy
 80079b6:	e7fe      	b.n	80079b6 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80079b8:	f000 fe74 	bl	80086a4 <xTaskGetSchedulerState>
 80079bc:	4606      	mov	r6, r0
 80079be:	b950      	cbnz	r0, 80079d6 <xQueueReceive+0x54>
 80079c0:	9b01      	ldr	r3, [sp, #4]
 80079c2:	b14b      	cbz	r3, 80079d8 <xQueueReceive+0x56>
 80079c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079c8:	f383 8811 	msr	BASEPRI, r3
 80079cc:	f3bf 8f6f 	isb	sy
 80079d0:	f3bf 8f4f 	dsb	sy
 80079d4:	e7fe      	b.n	80079d4 <xQueueReceive+0x52>
 80079d6:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80079d8:	f04f 0800 	mov.w	r8, #0
 80079dc:	e03d      	b.n	8007a5a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80079de:	9d01      	ldr	r5, [sp, #4]
 80079e0:	b91d      	cbnz	r5, 80079ea <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 80079e2:	f7ff fbbf 	bl	8007164 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80079e6:	2000      	movs	r0, #0
 80079e8:	e056      	b.n	8007a98 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 80079ea:	b916      	cbnz	r6, 80079f2 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80079ec:	a802      	add	r0, sp, #8
 80079ee:	f000 fe0b 	bl	8008608 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80079f2:	f7ff fbb7 	bl	8007164 <vPortExitCritical>
		vTaskSuspendAll();
 80079f6:	f000 fba1 	bl	800813c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80079fa:	f7ff fb93 	bl	8007124 <vPortEnterCritical>
 80079fe:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007a02:	2bff      	cmp	r3, #255	; 0xff
 8007a04:	bf08      	it	eq
 8007a06:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8007a0a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007a0e:	2bff      	cmp	r3, #255	; 0xff
 8007a10:	bf08      	it	eq
 8007a12:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8007a16:	f7ff fba5 	bl	8007164 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007a1a:	a901      	add	r1, sp, #4
 8007a1c:	a802      	add	r0, sp, #8
 8007a1e:	f000 fdff 	bl	8008620 <xTaskCheckForTimeOut>
 8007a22:	2800      	cmp	r0, #0
 8007a24:	d141      	bne.n	8007aaa <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007a26:	4620      	mov	r0, r4
 8007a28:	f7ff fcc0 	bl	80073ac <prvIsQueueEmpty>
 8007a2c:	b3b8      	cbz	r0, 8007a9e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007a2e:	9901      	ldr	r1, [sp, #4]
 8007a30:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007a34:	f000 fd6c 	bl	8008510 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007a38:	4620      	mov	r0, r4
 8007a3a:	f7ff fd0d 	bl	8007458 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007a3e:	f000 fc21 	bl	8008284 <xTaskResumeAll>
 8007a42:	b948      	cbnz	r0, 8007a58 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8007a44:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007a48:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a4c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007a50:	f3bf 8f4f 	dsb	sy
 8007a54:	f3bf 8f6f 	isb	sy
 8007a58:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007a5a:	f7ff fb63 	bl	8007124 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007a5e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007a60:	2d00      	cmp	r5, #0
 8007a62:	d0bc      	beq.n	80079de <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007a64:	4639      	mov	r1, r7
 8007a66:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007a68:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007a6a:	f7ff fcdf 	bl	800742c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007a6e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007a70:	6923      	ldr	r3, [r4, #16]
 8007a72:	b173      	cbz	r3, 8007a92 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007a74:	f104 0010 	add.w	r0, r4, #16
 8007a78:	f000 fd82 	bl	8008580 <xTaskRemoveFromEventList>
 8007a7c:	b148      	cbz	r0, 8007a92 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8007a7e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007a82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a86:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007a8a:	f3bf 8f4f 	dsb	sy
 8007a8e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007a92:	f7ff fb67 	bl	8007164 <vPortExitCritical>
				return pdPASS;
 8007a96:	2001      	movs	r0, #1
}
 8007a98:	b004      	add	sp, #16
 8007a9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007a9e:	4620      	mov	r0, r4
 8007aa0:	f7ff fcda 	bl	8007458 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007aa4:	f000 fbee 	bl	8008284 <xTaskResumeAll>
 8007aa8:	e7d6      	b.n	8007a58 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8007aaa:	4620      	mov	r0, r4
 8007aac:	f7ff fcd4 	bl	8007458 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007ab0:	f000 fbe8 	bl	8008284 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007ab4:	4620      	mov	r0, r4
 8007ab6:	f7ff fc79 	bl	80073ac <prvIsQueueEmpty>
 8007aba:	2800      	cmp	r0, #0
 8007abc:	d0cc      	beq.n	8007a58 <xQueueReceive+0xd6>
 8007abe:	e792      	b.n	80079e6 <xQueueReceive+0x64>

08007ac0 <xQueueSemaphoreTake>:
{
 8007ac0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007ac2:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8007ac4:	4604      	mov	r4, r0
{
 8007ac6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007ac8:	b940      	cbnz	r0, 8007adc <xQueueSemaphoreTake+0x1c>
 8007aca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ace:	f383 8811 	msr	BASEPRI, r3
 8007ad2:	f3bf 8f6f 	isb	sy
 8007ad6:	f3bf 8f4f 	dsb	sy
 8007ada:	e7fe      	b.n	8007ada <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007adc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007ade:	b145      	cbz	r5, 8007af2 <xQueueSemaphoreTake+0x32>
 8007ae0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ae4:	f383 8811 	msr	BASEPRI, r3
 8007ae8:	f3bf 8f6f 	isb	sy
 8007aec:	f3bf 8f4f 	dsb	sy
 8007af0:	e7fe      	b.n	8007af0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007af2:	f000 fdd7 	bl	80086a4 <xTaskGetSchedulerState>
 8007af6:	4606      	mov	r6, r0
 8007af8:	b950      	cbnz	r0, 8007b10 <xQueueSemaphoreTake+0x50>
 8007afa:	9b01      	ldr	r3, [sp, #4]
 8007afc:	b15b      	cbz	r3, 8007b16 <xQueueSemaphoreTake+0x56>
 8007afe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b02:	f383 8811 	msr	BASEPRI, r3
 8007b06:	f3bf 8f6f 	isb	sy
 8007b0a:	f3bf 8f4f 	dsb	sy
 8007b0e:	e7fe      	b.n	8007b0e <xQueueSemaphoreTake+0x4e>
 8007b10:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007b12:	2700      	movs	r7, #0
 8007b14:	e053      	b.n	8007bbe <xQueueSemaphoreTake+0xfe>
 8007b16:	4605      	mov	r5, r0
 8007b18:	e7fb      	b.n	8007b12 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007b1a:	9b01      	ldr	r3, [sp, #4]
 8007b1c:	b963      	cbnz	r3, 8007b38 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007b1e:	b145      	cbz	r5, 8007b32 <xQueueSemaphoreTake+0x72>
 8007b20:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b24:	f383 8811 	msr	BASEPRI, r3
 8007b28:	f3bf 8f6f 	isb	sy
 8007b2c:	f3bf 8f4f 	dsb	sy
 8007b30:	e7fe      	b.n	8007b30 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8007b32:	f7ff fb17 	bl	8007164 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007b36:	e062      	b.n	8007bfe <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8007b38:	b916      	cbnz	r6, 8007b40 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007b3a:	a802      	add	r0, sp, #8
 8007b3c:	f000 fd64 	bl	8008608 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007b40:	f7ff fb10 	bl	8007164 <vPortExitCritical>
		vTaskSuspendAll();
 8007b44:	f000 fafa 	bl	800813c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007b48:	f7ff faec 	bl	8007124 <vPortEnterCritical>
 8007b4c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007b50:	2bff      	cmp	r3, #255	; 0xff
 8007b52:	bf08      	it	eq
 8007b54:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007b58:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007b5c:	2bff      	cmp	r3, #255	; 0xff
 8007b5e:	bf08      	it	eq
 8007b60:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007b64:	f7ff fafe 	bl	8007164 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007b68:	a901      	add	r1, sp, #4
 8007b6a:	a802      	add	r0, sp, #8
 8007b6c:	f000 fd58 	bl	8008620 <xTaskCheckForTimeOut>
 8007b70:	2800      	cmp	r0, #0
 8007b72:	d14d      	bne.n	8007c10 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007b74:	4620      	mov	r0, r4
 8007b76:	f7ff fc19 	bl	80073ac <prvIsQueueEmpty>
 8007b7a:	2800      	cmp	r0, #0
 8007b7c:	d042      	beq.n	8007c04 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007b7e:	6823      	ldr	r3, [r4, #0]
 8007b80:	b93b      	cbnz	r3, 8007b92 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8007b82:	f7ff facf 	bl	8007124 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007b86:	68a0      	ldr	r0, [r4, #8]
 8007b88:	f000 fd9c 	bl	80086c4 <xTaskPriorityInherit>
 8007b8c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007b8e:	f7ff fae9 	bl	8007164 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007b92:	9901      	ldr	r1, [sp, #4]
 8007b94:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007b98:	f000 fcba 	bl	8008510 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007b9c:	4620      	mov	r0, r4
 8007b9e:	f7ff fc5b 	bl	8007458 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007ba2:	f000 fb6f 	bl	8008284 <xTaskResumeAll>
 8007ba6:	b948      	cbnz	r0, 8007bbc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8007ba8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007bac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007bb0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007bb4:	f3bf 8f4f 	dsb	sy
 8007bb8:	f3bf 8f6f 	isb	sy
 8007bbc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007bbe:	f7ff fab1 	bl	8007124 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007bc2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007bc4:	2b00      	cmp	r3, #0
 8007bc6:	d0a8      	beq.n	8007b1a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007bc8:	3b01      	subs	r3, #1
 8007bca:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007bcc:	6823      	ldr	r3, [r4, #0]
 8007bce:	b913      	cbnz	r3, 8007bd6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007bd0:	f000 fe50 	bl	8008874 <pvTaskIncrementMutexHeldCount>
 8007bd4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007bd6:	6923      	ldr	r3, [r4, #16]
 8007bd8:	b173      	cbz	r3, 8007bf8 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007bda:	f104 0010 	add.w	r0, r4, #16
 8007bde:	f000 fccf 	bl	8008580 <xTaskRemoveFromEventList>
 8007be2:	b148      	cbz	r0, 8007bf8 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8007be4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007be8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007bec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007bf0:	f3bf 8f4f 	dsb	sy
 8007bf4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007bf8:	f7ff fab4 	bl	8007164 <vPortExitCritical>
				return pdPASS;
 8007bfc:	2501      	movs	r5, #1
}
 8007bfe:	4628      	mov	r0, r5
 8007c00:	b005      	add	sp, #20
 8007c02:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8007c04:	4620      	mov	r0, r4
 8007c06:	f7ff fc27 	bl	8007458 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007c0a:	f000 fb3b 	bl	8008284 <xTaskResumeAll>
 8007c0e:	e7d5      	b.n	8007bbc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8007c10:	4620      	mov	r0, r4
 8007c12:	f7ff fc21 	bl	8007458 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007c16:	f000 fb35 	bl	8008284 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007c1a:	4620      	mov	r0, r4
 8007c1c:	f7ff fbc6 	bl	80073ac <prvIsQueueEmpty>
 8007c20:	2800      	cmp	r0, #0
 8007c22:	d0cb      	beq.n	8007bbc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8007c24:	2d00      	cmp	r5, #0
 8007c26:	d0ea      	beq.n	8007bfe <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8007c28:	f7ff fa7c 	bl	8007124 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007c2c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007c2e:	b119      	cbz	r1, 8007c38 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007c30:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007c32:	6819      	ldr	r1, [r3, #0]
 8007c34:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007c38:	68a0      	ldr	r0, [r4, #8]
 8007c3a:	f000 fdc9 	bl	80087d0 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007c3e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007c40:	f7ff fa90 	bl	8007164 <vPortExitCritical>
 8007c44:	e7db      	b.n	8007bfe <xQueueSemaphoreTake+0x13e>

08007c46 <xQueueReceiveFromISR>:
{
 8007c46:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007c4a:	4689      	mov	r9, r1
 8007c4c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007c4e:	4605      	mov	r5, r0
 8007c50:	b940      	cbnz	r0, 8007c64 <xQueueReceiveFromISR+0x1e>
 8007c52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c56:	f383 8811 	msr	BASEPRI, r3
 8007c5a:	f3bf 8f6f 	isb	sy
 8007c5e:	f3bf 8f4f 	dsb	sy
 8007c62:	e7fe      	b.n	8007c62 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007c64:	b951      	cbnz	r1, 8007c7c <xQueueReceiveFromISR+0x36>
 8007c66:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007c68:	b143      	cbz	r3, 8007c7c <xQueueReceiveFromISR+0x36>
 8007c6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c6e:	f383 8811 	msr	BASEPRI, r3
 8007c72:	f3bf 8f6f 	isb	sy
 8007c76:	f3bf 8f4f 	dsb	sy
 8007c7a:	e7fe      	b.n	8007c7a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007c7c:	f7ff fb68 	bl	8007350 <vPortValidateInterruptPriority>
	__asm volatile
 8007c80:	f3ef 8711 	mrs	r7, BASEPRI
 8007c84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c88:	f383 8811 	msr	BASEPRI, r3
 8007c8c:	f3bf 8f6f 	isb	sy
 8007c90:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007c94:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007c96:	b31c      	cbz	r4, 8007ce0 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007c98:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007c9c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007c9e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007ca0:	4628      	mov	r0, r5
 8007ca2:	f7ff fbc3 	bl	800742c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007ca6:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007ca8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007caa:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8007cac:	d113      	bne.n	8007cd6 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007cae:	692b      	ldr	r3, [r5, #16]
 8007cb0:	b90b      	cbnz	r3, 8007cb6 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007cb2:	2001      	movs	r0, #1
 8007cb4:	e00b      	b.n	8007cce <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007cb6:	f105 0010 	add.w	r0, r5, #16
 8007cba:	f000 fc61 	bl	8008580 <xTaskRemoveFromEventList>
 8007cbe:	2800      	cmp	r0, #0
 8007cc0:	d0f7      	beq.n	8007cb2 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007cc2:	f1b8 0f00 	cmp.w	r8, #0
 8007cc6:	d0f4      	beq.n	8007cb2 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007cc8:	2001      	movs	r0, #1
 8007cca:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007cce:	f387 8811 	msr	BASEPRI, r7
}
 8007cd2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007cd6:	3601      	adds	r6, #1
 8007cd8:	b276      	sxtb	r6, r6
 8007cda:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8007cde:	e7e8      	b.n	8007cb2 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8007ce0:	4620      	mov	r0, r4
 8007ce2:	e7f4      	b.n	8007cce <xQueueReceiveFromISR+0x88>

08007ce4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8007ce4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007ce6:	4a07      	ldr	r2, [pc, #28]	; (8007d04 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007ce8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007cea:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8007cee:	b92c      	cbnz	r4, 8007cfc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007cf0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007cf4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8007cf8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8007cfa:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007cfc:	3301      	adds	r3, #1
 8007cfe:	2b08      	cmp	r3, #8
 8007d00:	d1f3      	bne.n	8007cea <vQueueAddToRegistry+0x6>
 8007d02:	e7fa      	b.n	8007cfa <vQueueAddToRegistry+0x16>
 8007d04:	20009e7c 	.word	0x20009e7c

08007d08 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007d08:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007d0a:	4a08      	ldr	r2, [pc, #32]	; (8007d2c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007d0c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007d0e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8007d12:	684c      	ldr	r4, [r1, #4]
 8007d14:	4284      	cmp	r4, r0
 8007d16:	d104      	bne.n	8007d22 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007d18:	2000      	movs	r0, #0
 8007d1a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007d1e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007d20:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007d22:	3301      	adds	r3, #1
 8007d24:	2b08      	cmp	r3, #8
 8007d26:	d1f2      	bne.n	8007d0e <vQueueUnregisterQueue+0x6>
 8007d28:	e7fa      	b.n	8007d20 <vQueueUnregisterQueue+0x18>
 8007d2a:	bf00      	nop
 8007d2c:	20009e7c 	.word	0x20009e7c

08007d30 <vQueueDelete>:
{
 8007d30:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007d32:	4604      	mov	r4, r0
 8007d34:	b940      	cbnz	r0, 8007d48 <vQueueDelete+0x18>
	__asm volatile
 8007d36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d3a:	f383 8811 	msr	BASEPRI, r3
 8007d3e:	f3bf 8f6f 	isb	sy
 8007d42:	f3bf 8f4f 	dsb	sy
 8007d46:	e7fe      	b.n	8007d46 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8007d48:	f7ff ffde 	bl	8007d08 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8007d4c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8007d50:	b923      	cbnz	r3, 8007d5c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8007d52:	4620      	mov	r0, r4
}
 8007d54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007d58:	f7ff b8fe 	b.w	8006f58 <vPortFree>
}
 8007d5c:	bd10      	pop	{r4, pc}

08007d5e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8007d5e:	b570      	push	{r4, r5, r6, lr}
 8007d60:	4604      	mov	r4, r0
 8007d62:	460d      	mov	r5, r1
 8007d64:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007d66:	f7ff f9dd 	bl	8007124 <vPortEnterCritical>
 8007d6a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007d6e:	2bff      	cmp	r3, #255	; 0xff
 8007d70:	bf04      	itt	eq
 8007d72:	2300      	moveq	r3, #0
 8007d74:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007d78:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007d7c:	2bff      	cmp	r3, #255	; 0xff
 8007d7e:	bf04      	itt	eq
 8007d80:	2300      	moveq	r3, #0
 8007d82:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8007d86:	f7ff f9ed 	bl	8007164 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8007d8a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007d8c:	b92b      	cbnz	r3, 8007d9a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8007d8e:	4632      	mov	r2, r6
 8007d90:	4629      	mov	r1, r5
 8007d92:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007d96:	f000 fbd5 	bl	8008544 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8007d9a:	4620      	mov	r0, r4
	}
 8007d9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8007da0:	f7ff bb5a 	b.w	8007458 <prvUnlockQueue>

08007da4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8007da4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007da8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8007daa:	f7ff f9bb 	bl	8007124 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8007dae:	4b30      	ldr	r3, [pc, #192]	; (8007e70 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8007db0:	4e30      	ldr	r6, [pc, #192]	; (8007e74 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8007db2:	681a      	ldr	r2, [r3, #0]
 8007db4:	4f30      	ldr	r7, [pc, #192]	; (8007e78 <prvAddNewTaskToReadyList+0xd4>)
 8007db6:	3201      	adds	r2, #1
 8007db8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8007dba:	6835      	ldr	r5, [r6, #0]
 8007dbc:	2d00      	cmp	r5, #0
 8007dbe:	d14b      	bne.n	8007e58 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8007dc0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8007dc2:	681b      	ldr	r3, [r3, #0]
 8007dc4:	2b01      	cmp	r3, #1
 8007dc6:	d11f      	bne.n	8007e08 <prvAddNewTaskToReadyList+0x64>
 8007dc8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007dca:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007dcc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007dce:	f7ff f901 	bl	8006fd4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007dd2:	2d38      	cmp	r5, #56	; 0x38
 8007dd4:	f108 0814 	add.w	r8, r8, #20
 8007dd8:	d1f7      	bne.n	8007dca <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8007dda:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8007ea0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8007dde:	4d27      	ldr	r5, [pc, #156]	; (8007e7c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8007de0:	4640      	mov	r0, r8
 8007de2:	f7ff f8f7 	bl	8006fd4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8007de6:	4628      	mov	r0, r5
 8007de8:	f7ff f8f4 	bl	8006fd4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8007dec:	4824      	ldr	r0, [pc, #144]	; (8007e80 <prvAddNewTaskToReadyList+0xdc>)
 8007dee:	f7ff f8f1 	bl	8006fd4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8007df2:	4824      	ldr	r0, [pc, #144]	; (8007e84 <prvAddNewTaskToReadyList+0xe0>)
 8007df4:	f7ff f8ee 	bl	8006fd4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007df8:	4823      	ldr	r0, [pc, #140]	; (8007e88 <prvAddNewTaskToReadyList+0xe4>)
 8007dfa:	f7ff f8eb 	bl	8006fd4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8007dfe:	4b23      	ldr	r3, [pc, #140]	; (8007e8c <prvAddNewTaskToReadyList+0xe8>)
 8007e00:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007e04:	4b22      	ldr	r3, [pc, #136]	; (8007e90 <prvAddNewTaskToReadyList+0xec>)
 8007e06:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8007e08:	4a22      	ldr	r2, [pc, #136]	; (8007e94 <prvAddNewTaskToReadyList+0xf0>)
 8007e0a:	6813      	ldr	r3, [r2, #0]
 8007e0c:	3301      	adds	r3, #1
 8007e0e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8007e10:	4a21      	ldr	r2, [pc, #132]	; (8007e98 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8007e12:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8007e14:	6811      	ldr	r1, [r2, #0]
 8007e16:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007e18:	2014      	movs	r0, #20
 8007e1a:	428b      	cmp	r3, r1
 8007e1c:	fb00 7003 	mla	r0, r0, r3, r7
 8007e20:	f104 0104 	add.w	r1, r4, #4
 8007e24:	bf88      	it	hi
 8007e26:	6013      	strhi	r3, [r2, #0]
 8007e28:	f7ff f8e2 	bl	8006ff0 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8007e2c:	f7ff f99a 	bl	8007164 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8007e30:	4b1a      	ldr	r3, [pc, #104]	; (8007e9c <prvAddNewTaskToReadyList+0xf8>)
 8007e32:	681b      	ldr	r3, [r3, #0]
 8007e34:	b173      	cbz	r3, 8007e54 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8007e36:	6833      	ldr	r3, [r6, #0]
 8007e38:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007e3a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007e3c:	429a      	cmp	r2, r3
 8007e3e:	d209      	bcs.n	8007e54 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8007e40:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007e44:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007e48:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007e4c:	f3bf 8f4f 	dsb	sy
 8007e50:	f3bf 8f6f 	isb	sy
}
 8007e54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007e58:	4b10      	ldr	r3, [pc, #64]	; (8007e9c <prvAddNewTaskToReadyList+0xf8>)
 8007e5a:	681b      	ldr	r3, [r3, #0]
 8007e5c:	2b00      	cmp	r3, #0
 8007e5e:	d1d3      	bne.n	8007e08 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8007e60:	6833      	ldr	r3, [r6, #0]
 8007e62:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007e64:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007e66:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007e68:	bf98      	it	ls
 8007e6a:	6034      	strls	r4, [r6, #0]
 8007e6c:	e7cc      	b.n	8007e08 <prvAddNewTaskToReadyList+0x64>
 8007e6e:	bf00      	nop
 8007e70:	2000a328 	.word	0x2000a328
 8007e74:	20009ebc 	.word	0x20009ebc
 8007e78:	20009ec8 	.word	0x20009ec8
 8007e7c:	2000a350 	.word	0x2000a350
 8007e80:	2000a370 	.word	0x2000a370
 8007e84:	2000a39c 	.word	0x2000a39c
 8007e88:	2000a388 	.word	0x2000a388
 8007e8c:	20009ec0 	.word	0x20009ec0
 8007e90:	20009ec4 	.word	0x20009ec4
 8007e94:	2000a334 	.word	0x2000a334
 8007e98:	2000a338 	.word	0x2000a338
 8007e9c:	2000a384 	.word	0x2000a384
 8007ea0:	2000a33c 	.word	0x2000a33c

08007ea4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8007ea4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8007ea6:	4b15      	ldr	r3, [pc, #84]	; (8007efc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007ea8:	4e15      	ldr	r6, [pc, #84]	; (8007f00 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8007eaa:	681d      	ldr	r5, [r3, #0]
{
 8007eac:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007eae:	6830      	ldr	r0, [r6, #0]
 8007eb0:	3004      	adds	r0, #4
{
 8007eb2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007eb4:	f7ff f8bf 	bl	8007036 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8007eb8:	1c63      	adds	r3, r4, #1
 8007eba:	d107      	bne.n	8007ecc <prvAddCurrentTaskToDelayedList+0x28>
 8007ebc:	b137      	cbz	r7, 8007ecc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007ebe:	6831      	ldr	r1, [r6, #0]
 8007ec0:	4810      	ldr	r0, [pc, #64]	; (8007f04 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8007ec2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007ec6:	3104      	adds	r1, #4
 8007ec8:	f7ff b892 	b.w	8006ff0 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8007ecc:	6833      	ldr	r3, [r6, #0]
 8007ece:	192c      	adds	r4, r5, r4
 8007ed0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8007ed2:	d307      	bcc.n	8007ee4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007ed4:	4b0c      	ldr	r3, [pc, #48]	; (8007f08 <prvAddCurrentTaskToDelayedList+0x64>)
 8007ed6:	6818      	ldr	r0, [r3, #0]
 8007ed8:	6831      	ldr	r1, [r6, #0]
}
 8007eda:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007ede:	3104      	adds	r1, #4
 8007ee0:	f7ff b892 	b.w	8007008 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007ee4:	4b09      	ldr	r3, [pc, #36]	; (8007f0c <prvAddCurrentTaskToDelayedList+0x68>)
 8007ee6:	6818      	ldr	r0, [r3, #0]
 8007ee8:	6831      	ldr	r1, [r6, #0]
 8007eea:	3104      	adds	r1, #4
 8007eec:	f7ff f88c 	bl	8007008 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8007ef0:	4b07      	ldr	r3, [pc, #28]	; (8007f10 <prvAddCurrentTaskToDelayedList+0x6c>)
 8007ef2:	681a      	ldr	r2, [r3, #0]
 8007ef4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8007ef6:	bf88      	it	hi
 8007ef8:	601c      	strhi	r4, [r3, #0]
}
 8007efa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007efc:	2000a3b0 	.word	0x2000a3b0
 8007f00:	20009ebc 	.word	0x20009ebc
 8007f04:	2000a388 	.word	0x2000a388
 8007f08:	20009ec4 	.word	0x20009ec4
 8007f0c:	20009ec0 	.word	0x20009ec0
 8007f10:	2000a364 	.word	0x2000a364

08007f14 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007f14:	4a06      	ldr	r2, [pc, #24]	; (8007f30 <prvResetNextTaskUnblockTime+0x1c>)
 8007f16:	6813      	ldr	r3, [r2, #0]
 8007f18:	6819      	ldr	r1, [r3, #0]
 8007f1a:	4b06      	ldr	r3, [pc, #24]	; (8007f34 <prvResetNextTaskUnblockTime+0x20>)
 8007f1c:	b919      	cbnz	r1, 8007f26 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8007f1e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007f22:	601a      	str	r2, [r3, #0]
}
 8007f24:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007f26:	6812      	ldr	r2, [r2, #0]
 8007f28:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007f2a:	68d2      	ldr	r2, [r2, #12]
 8007f2c:	6852      	ldr	r2, [r2, #4]
 8007f2e:	e7f8      	b.n	8007f22 <prvResetNextTaskUnblockTime+0xe>
 8007f30:	20009ec0 	.word	0x20009ec0
 8007f34:	2000a364 	.word	0x2000a364

08007f38 <prvDeleteTCB>:
	{
 8007f38:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007f3a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8007f3e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007f40:	b93b      	cbnz	r3, 8007f52 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8007f42:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8007f44:	f7ff f808 	bl	8006f58 <vPortFree>
				vPortFree( pxTCB );
 8007f48:	4620      	mov	r0, r4
	}
 8007f4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8007f4e:	f7ff b803 	b.w	8006f58 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8007f52:	2b01      	cmp	r3, #1
 8007f54:	d0f9      	beq.n	8007f4a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8007f56:	2b02      	cmp	r3, #2
 8007f58:	d008      	beq.n	8007f6c <prvDeleteTCB+0x34>
 8007f5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f5e:	f383 8811 	msr	BASEPRI, r3
 8007f62:	f3bf 8f6f 	isb	sy
 8007f66:	f3bf 8f4f 	dsb	sy
 8007f6a:	e7fe      	b.n	8007f6a <prvDeleteTCB+0x32>
	}
 8007f6c:	bd10      	pop	{r4, pc}
	...

08007f70 <prvIdleTask>:
{
 8007f70:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007f72:	4c14      	ldr	r4, [pc, #80]	; (8007fc4 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007f74:	4f14      	ldr	r7, [pc, #80]	; (8007fc8 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8007f76:	4d15      	ldr	r5, [pc, #84]	; (8007fcc <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007f78:	6823      	ldr	r3, [r4, #0]
 8007f7a:	b983      	cbnz	r3, 8007f9e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8007f7c:	4b14      	ldr	r3, [pc, #80]	; (8007fd0 <prvIdleTask+0x60>)
 8007f7e:	681b      	ldr	r3, [r3, #0]
 8007f80:	2b01      	cmp	r3, #1
 8007f82:	d909      	bls.n	8007f98 <prvIdleTask+0x28>
				taskYIELD();
 8007f84:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007f88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f8c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007f90:	f3bf 8f4f 	dsb	sy
 8007f94:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8007f98:	f7f9 fa3c 	bl	8001414 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8007f9c:	e7eb      	b.n	8007f76 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8007f9e:	f7ff f8c1 	bl	8007124 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007fa2:	68fb      	ldr	r3, [r7, #12]
 8007fa4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007fa6:	1d30      	adds	r0, r6, #4
 8007fa8:	f7ff f845 	bl	8007036 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8007fac:	682b      	ldr	r3, [r5, #0]
 8007fae:	3b01      	subs	r3, #1
 8007fb0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8007fb2:	6823      	ldr	r3, [r4, #0]
 8007fb4:	3b01      	subs	r3, #1
 8007fb6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8007fb8:	f7ff f8d4 	bl	8007164 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8007fbc:	4630      	mov	r0, r6
 8007fbe:	f7ff ffbb 	bl	8007f38 <prvDeleteTCB>
 8007fc2:	e7d9      	b.n	8007f78 <prvIdleTask+0x8>
 8007fc4:	2000a32c 	.word	0x2000a32c
 8007fc8:	2000a39c 	.word	0x2000a39c
 8007fcc:	2000a328 	.word	0x2000a328
 8007fd0:	20009ec8 	.word	0x20009ec8

08007fd4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007fd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007fd8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007fdc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8007fe0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007fe2:	4606      	mov	r6, r0
 8007fe4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007fe6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007fe8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007fea:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007fec:	f012 fee0 	bl	801adb0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8007ff0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007ff2:	f1a9 0904 	sub.w	r9, r9, #4
 8007ff6:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8007ff8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8007ffc:	b3b5      	cbz	r5, 800806c <prvInitialiseNewTask.constprop.0+0x98>
 8007ffe:	1e6b      	subs	r3, r5, #1
 8008000:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008004:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008006:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800800a:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800800e:	b108      	cbz	r0, 8008014 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008010:	42ab      	cmp	r3, r5
 8008012:	d1f8      	bne.n	8008006 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008014:	2300      	movs	r3, #0
 8008016:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800801a:	9d08      	ldr	r5, [sp, #32]
 800801c:	2d37      	cmp	r5, #55	; 0x37
 800801e:	bf28      	it	cs
 8008020:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008022:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008026:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008028:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800802a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800802c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008030:	f7fe ffdb 	bl	8006fea <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008034:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008038:	f104 0018 	add.w	r0, r4, #24
 800803c:	f7fe ffd5 	bl	8006fea <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008040:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008044:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008046:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008048:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800804a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800804e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008052:	463a      	mov	r2, r7
 8008054:	4631      	mov	r1, r6
 8008056:	4648      	mov	r0, r9
 8008058:	f7ff f83c 	bl	80070d4 <pxPortInitialiseStack>
 800805c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800805e:	f1b8 0f00 	cmp.w	r8, #0
 8008062:	d001      	beq.n	8008068 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008064:	f8c8 4000 	str.w	r4, [r8]
}
 8008068:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800806c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008070:	e7d3      	b.n	800801a <prvInitialiseNewTask.constprop.0+0x46>

08008072 <xTaskCreateStatic>:
	{
 8008072:	b570      	push	{r4, r5, r6, lr}
 8008074:	b086      	sub	sp, #24
 8008076:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800807a:	b945      	cbnz	r5, 800808e <xTaskCreateStatic+0x1c>
 800807c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008080:	f383 8811 	msr	BASEPRI, r3
 8008084:	f3bf 8f6f 	isb	sy
 8008088:	f3bf 8f4f 	dsb	sy
 800808c:	e7fe      	b.n	800808c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800808e:	b944      	cbnz	r4, 80080a2 <xTaskCreateStatic+0x30>
 8008090:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008094:	f383 8811 	msr	BASEPRI, r3
 8008098:	f3bf 8f6f 	isb	sy
 800809c:	f3bf 8f4f 	dsb	sy
 80080a0:	e7fe      	b.n	80080a0 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80080a2:	2660      	movs	r6, #96	; 0x60
 80080a4:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80080a6:	9e05      	ldr	r6, [sp, #20]
 80080a8:	2e60      	cmp	r6, #96	; 0x60
 80080aa:	d008      	beq.n	80080be <xTaskCreateStatic+0x4c>
 80080ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080b0:	f383 8811 	msr	BASEPRI, r3
 80080b4:	f3bf 8f6f 	isb	sy
 80080b8:	f3bf 8f4f 	dsb	sy
 80080bc:	e7fe      	b.n	80080bc <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80080be:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80080c0:	2502      	movs	r5, #2
 80080c2:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80080c6:	ad04      	add	r5, sp, #16
 80080c8:	9501      	str	r5, [sp, #4]
 80080ca:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80080cc:	9402      	str	r4, [sp, #8]
 80080ce:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80080d0:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80080d2:	f7ff ff7f 	bl	8007fd4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80080d6:	4620      	mov	r0, r4
 80080d8:	f7ff fe64 	bl	8007da4 <prvAddNewTaskToReadyList>
	}
 80080dc:	9804      	ldr	r0, [sp, #16]
 80080de:	b006      	add	sp, #24
 80080e0:	bd70      	pop	{r4, r5, r6, pc}

080080e2 <xTaskCreate>:
	{
 80080e2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80080e6:	4607      	mov	r7, r0
 80080e8:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80080ea:	0090      	lsls	r0, r2, #2
	{
 80080ec:	4688      	mov	r8, r1
 80080ee:	4616      	mov	r6, r2
 80080f0:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80080f2:	f7fe fe99 	bl	8006e28 <pvPortMalloc>
			if( pxStack != NULL )
 80080f6:	4605      	mov	r5, r0
 80080f8:	b1e8      	cbz	r0, 8008136 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80080fa:	2060      	movs	r0, #96	; 0x60
 80080fc:	f7fe fe94 	bl	8006e28 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008100:	4604      	mov	r4, r0
 8008102:	b1a8      	cbz	r0, 8008130 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008104:	2300      	movs	r3, #0
 8008106:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800810a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800810c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800810e:	9301      	str	r3, [sp, #4]
 8008110:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008112:	9002      	str	r0, [sp, #8]
 8008114:	9300      	str	r3, [sp, #0]
 8008116:	4632      	mov	r2, r6
 8008118:	464b      	mov	r3, r9
 800811a:	4641      	mov	r1, r8
 800811c:	4638      	mov	r0, r7
 800811e:	f7ff ff59 	bl	8007fd4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008122:	4620      	mov	r0, r4
 8008124:	f7ff fe3e 	bl	8007da4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008128:	2001      	movs	r0, #1
	}
 800812a:	b005      	add	sp, #20
 800812c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008130:	4628      	mov	r0, r5
 8008132:	f7fe ff11 	bl	8006f58 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008136:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800813a:	e7f6      	b.n	800812a <xTaskCreate+0x48>

0800813c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800813c:	4a02      	ldr	r2, [pc, #8]	; (8008148 <vTaskSuspendAll+0xc>)
 800813e:	6813      	ldr	r3, [r2, #0]
 8008140:	3301      	adds	r3, #1
 8008142:	6013      	str	r3, [r2, #0]
}
 8008144:	4770      	bx	lr
 8008146:	bf00      	nop
 8008148:	2000a330 	.word	0x2000a330

0800814c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800814c:	4b01      	ldr	r3, [pc, #4]	; (8008154 <xTaskGetTickCount+0x8>)
 800814e:	6818      	ldr	r0, [r3, #0]
}
 8008150:	4770      	bx	lr
 8008152:	bf00      	nop
 8008154:	2000a3b0 	.word	0x2000a3b0

08008158 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008158:	4b3f      	ldr	r3, [pc, #252]	; (8008258 <xTaskIncrementTick+0x100>)
 800815a:	681b      	ldr	r3, [r3, #0]
{
 800815c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008160:	2b00      	cmp	r3, #0
 8008162:	d173      	bne.n	800824c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008164:	4b3d      	ldr	r3, [pc, #244]	; (800825c <xTaskIncrementTick+0x104>)
 8008166:	681d      	ldr	r5, [r3, #0]
 8008168:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800816a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800816c:	b9bd      	cbnz	r5, 800819e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800816e:	4b3c      	ldr	r3, [pc, #240]	; (8008260 <xTaskIncrementTick+0x108>)
 8008170:	681a      	ldr	r2, [r3, #0]
 8008172:	6812      	ldr	r2, [r2, #0]
 8008174:	b142      	cbz	r2, 8008188 <xTaskIncrementTick+0x30>
 8008176:	f04f 0350 	mov.w	r3, #80	; 0x50
 800817a:	f383 8811 	msr	BASEPRI, r3
 800817e:	f3bf 8f6f 	isb	sy
 8008182:	f3bf 8f4f 	dsb	sy
 8008186:	e7fe      	b.n	8008186 <xTaskIncrementTick+0x2e>
 8008188:	4a36      	ldr	r2, [pc, #216]	; (8008264 <xTaskIncrementTick+0x10c>)
 800818a:	6819      	ldr	r1, [r3, #0]
 800818c:	6810      	ldr	r0, [r2, #0]
 800818e:	6018      	str	r0, [r3, #0]
 8008190:	6011      	str	r1, [r2, #0]
 8008192:	4a35      	ldr	r2, [pc, #212]	; (8008268 <xTaskIncrementTick+0x110>)
 8008194:	6813      	ldr	r3, [r2, #0]
 8008196:	3301      	adds	r3, #1
 8008198:	6013      	str	r3, [r2, #0]
 800819a:	f7ff febb 	bl	8007f14 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800819e:	4e33      	ldr	r6, [pc, #204]	; (800826c <xTaskIncrementTick+0x114>)
 80081a0:	4f33      	ldr	r7, [pc, #204]	; (8008270 <xTaskIncrementTick+0x118>)
 80081a2:	6833      	ldr	r3, [r6, #0]
 80081a4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800827c <xTaskIncrementTick+0x124>
 80081a8:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 80081aa:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80081ae:	d211      	bcs.n	80081d4 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80081b0:	f8d8 3000 	ldr.w	r3, [r8]
 80081b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80081b6:	2214      	movs	r2, #20
 80081b8:	4353      	muls	r3, r2
 80081ba:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 80081bc:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 80081be:	4b2d      	ldr	r3, [pc, #180]	; (8008274 <xTaskIncrementTick+0x11c>)
 80081c0:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 80081c2:	bf28      	it	cs
 80081c4:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 80081c6:	2b00      	cmp	r3, #0
 80081c8:	bf18      	it	ne
 80081ca:	2401      	movne	r4, #1
}
 80081cc:	4620      	mov	r0, r4
 80081ce:	b003      	add	sp, #12
 80081d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80081d4:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008260 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 80081d8:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008280 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80081dc:	f8d9 3000 	ldr.w	r3, [r9]
 80081e0:	681b      	ldr	r3, [r3, #0]
 80081e2:	b91b      	cbnz	r3, 80081ec <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80081e4:	f04f 33ff 	mov.w	r3, #4294967295
 80081e8:	6033      	str	r3, [r6, #0]
					break;
 80081ea:	e7e1      	b.n	80081b0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80081ec:	f8d9 3000 	ldr.w	r3, [r9]
 80081f0:	68db      	ldr	r3, [r3, #12]
 80081f2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80081f6:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 80081fa:	4295      	cmp	r5, r2
 80081fc:	d201      	bcs.n	8008202 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 80081fe:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008200:	e7d6      	b.n	80081b0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008202:	f10b 0104 	add.w	r1, fp, #4
 8008206:	4608      	mov	r0, r1
 8008208:	9101      	str	r1, [sp, #4]
 800820a:	f7fe ff14 	bl	8007036 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800820e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008212:	9901      	ldr	r1, [sp, #4]
 8008214:	b122      	cbz	r2, 8008220 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008216:	f10b 0018 	add.w	r0, fp, #24
 800821a:	f7fe ff0c 	bl	8007036 <uxListRemove>
 800821e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008220:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008224:	f8da 2000 	ldr.w	r2, [sl]
 8008228:	2314      	movs	r3, #20
 800822a:	4290      	cmp	r0, r2
 800822c:	bf88      	it	hi
 800822e:	f8ca 0000 	strhi.w	r0, [sl]
 8008232:	fb03 7000 	mla	r0, r3, r0, r7
 8008236:	f7fe fedb 	bl	8006ff0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800823a:	f8d8 1000 	ldr.w	r1, [r8]
 800823e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008242:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008244:	429a      	cmp	r2, r3
 8008246:	bf28      	it	cs
 8008248:	2401      	movcs	r4, #1
 800824a:	e7c7      	b.n	80081dc <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800824c:	4a0a      	ldr	r2, [pc, #40]	; (8008278 <xTaskIncrementTick+0x120>)
 800824e:	6813      	ldr	r3, [r2, #0]
 8008250:	3301      	adds	r3, #1
 8008252:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008254:	2400      	movs	r4, #0
	return xSwitchRequired;
 8008256:	e7b9      	b.n	80081cc <xTaskIncrementTick+0x74>
 8008258:	2000a330 	.word	0x2000a330
 800825c:	2000a3b0 	.word	0x2000a3b0
 8008260:	20009ec0 	.word	0x20009ec0
 8008264:	20009ec4 	.word	0x20009ec4
 8008268:	2000a368 	.word	0x2000a368
 800826c:	2000a364 	.word	0x2000a364
 8008270:	20009ec8 	.word	0x20009ec8
 8008274:	2000a3b4 	.word	0x2000a3b4
 8008278:	2000a36c 	.word	0x2000a36c
 800827c:	20009ebc 	.word	0x20009ebc
 8008280:	2000a338 	.word	0x2000a338

08008284 <xTaskResumeAll>:
{
 8008284:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8008286:	4c31      	ldr	r4, [pc, #196]	; (800834c <xTaskResumeAll+0xc8>)
 8008288:	6823      	ldr	r3, [r4, #0]
 800828a:	b943      	cbnz	r3, 800829e <xTaskResumeAll+0x1a>
 800828c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008290:	f383 8811 	msr	BASEPRI, r3
 8008294:	f3bf 8f6f 	isb	sy
 8008298:	f3bf 8f4f 	dsb	sy
 800829c:	e7fe      	b.n	800829c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800829e:	f7fe ff41 	bl	8007124 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80082a2:	6823      	ldr	r3, [r4, #0]
 80082a4:	3b01      	subs	r3, #1
 80082a6:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80082a8:	6824      	ldr	r4, [r4, #0]
 80082aa:	b12c      	cbz	r4, 80082b8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 80082ac:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80082ae:	f7fe ff59 	bl	8007164 <vPortExitCritical>
}
 80082b2:	4620      	mov	r0, r4
 80082b4:	b003      	add	sp, #12
 80082b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80082b8:	4b25      	ldr	r3, [pc, #148]	; (8008350 <xTaskResumeAll+0xcc>)
 80082ba:	681b      	ldr	r3, [r3, #0]
 80082bc:	2b00      	cmp	r3, #0
 80082be:	d0f5      	beq.n	80082ac <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80082c0:	4d24      	ldr	r5, [pc, #144]	; (8008354 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 80082c2:	4e25      	ldr	r6, [pc, #148]	; (8008358 <xTaskResumeAll+0xd4>)
 80082c4:	4f25      	ldr	r7, [pc, #148]	; (800835c <xTaskResumeAll+0xd8>)
 80082c6:	e01e      	b.n	8008306 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80082c8:	68eb      	ldr	r3, [r5, #12]
 80082ca:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80082cc:	f104 0018 	add.w	r0, r4, #24
 80082d0:	f7fe feb1 	bl	8007036 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80082d4:	1d21      	adds	r1, r4, #4
 80082d6:	4608      	mov	r0, r1
 80082d8:	9101      	str	r1, [sp, #4]
 80082da:	f7fe feac 	bl	8007036 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80082de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80082e0:	6832      	ldr	r2, [r6, #0]
 80082e2:	9901      	ldr	r1, [sp, #4]
 80082e4:	2014      	movs	r0, #20
 80082e6:	4293      	cmp	r3, r2
 80082e8:	fb00 7003 	mla	r0, r0, r3, r7
 80082ec:	bf88      	it	hi
 80082ee:	6033      	strhi	r3, [r6, #0]
 80082f0:	f7fe fe7e 	bl	8006ff0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80082f4:	4b1a      	ldr	r3, [pc, #104]	; (8008360 <xTaskResumeAll+0xdc>)
 80082f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80082f8:	681b      	ldr	r3, [r3, #0]
 80082fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082fc:	429a      	cmp	r2, r3
 80082fe:	d302      	bcc.n	8008306 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008300:	4b18      	ldr	r3, [pc, #96]	; (8008364 <xTaskResumeAll+0xe0>)
 8008302:	2201      	movs	r2, #1
 8008304:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008306:	682b      	ldr	r3, [r5, #0]
 8008308:	2b00      	cmp	r3, #0
 800830a:	d1dd      	bne.n	80082c8 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800830c:	b10c      	cbz	r4, 8008312 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800830e:	f7ff fe01 	bl	8007f14 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8008312:	4d15      	ldr	r5, [pc, #84]	; (8008368 <xTaskResumeAll+0xe4>)
 8008314:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008316:	b144      	cbz	r4, 800832a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008318:	4e12      	ldr	r6, [pc, #72]	; (8008364 <xTaskResumeAll+0xe0>)
 800831a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800831c:	f7ff ff1c 	bl	8008158 <xTaskIncrementTick>
 8008320:	b100      	cbz	r0, 8008324 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008322:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8008324:	3c01      	subs	r4, #1
 8008326:	d1f9      	bne.n	800831c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8008328:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800832a:	4b0e      	ldr	r3, [pc, #56]	; (8008364 <xTaskResumeAll+0xe0>)
 800832c:	681b      	ldr	r3, [r3, #0]
 800832e:	2b00      	cmp	r3, #0
 8008330:	d0bc      	beq.n	80082ac <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008332:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008336:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800833a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800833e:	f3bf 8f4f 	dsb	sy
 8008342:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008346:	2401      	movs	r4, #1
 8008348:	e7b1      	b.n	80082ae <xTaskResumeAll+0x2a>
 800834a:	bf00      	nop
 800834c:	2000a330 	.word	0x2000a330
 8008350:	2000a328 	.word	0x2000a328
 8008354:	2000a370 	.word	0x2000a370
 8008358:	2000a338 	.word	0x2000a338
 800835c:	20009ec8 	.word	0x20009ec8
 8008360:	20009ebc 	.word	0x20009ebc
 8008364:	2000a3b4 	.word	0x2000a3b4
 8008368:	2000a36c 	.word	0x2000a36c

0800836c <vTaskDelay>:
	{
 800836c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800836e:	b950      	cbnz	r0, 8008386 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008370:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008374:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008378:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800837c:	f3bf 8f4f 	dsb	sy
 8008380:	f3bf 8f6f 	isb	sy
	}
 8008384:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8008386:	4b0a      	ldr	r3, [pc, #40]	; (80083b0 <vTaskDelay+0x44>)
 8008388:	6819      	ldr	r1, [r3, #0]
 800838a:	b141      	cbz	r1, 800839e <vTaskDelay+0x32>
 800838c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008390:	f383 8811 	msr	BASEPRI, r3
 8008394:	f3bf 8f6f 	isb	sy
 8008398:	f3bf 8f4f 	dsb	sy
 800839c:	e7fe      	b.n	800839c <vTaskDelay+0x30>
			vTaskSuspendAll();
 800839e:	f7ff fecd 	bl	800813c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80083a2:	f7ff fd7f 	bl	8007ea4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80083a6:	f7ff ff6d 	bl	8008284 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80083aa:	2800      	cmp	r0, #0
 80083ac:	d0e0      	beq.n	8008370 <vTaskDelay+0x4>
 80083ae:	e7e9      	b.n	8008384 <vTaskDelay+0x18>
 80083b0:	2000a330 	.word	0x2000a330

080083b4 <vTaskSetApplicationTaskTag>:
	{
 80083b4:	b538      	push	{r3, r4, r5, lr}
 80083b6:	460d      	mov	r5, r1
		if( xTask == NULL )
 80083b8:	4604      	mov	r4, r0
 80083ba:	b908      	cbnz	r0, 80083c0 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 80083bc:	4b04      	ldr	r3, [pc, #16]	; (80083d0 <vTaskSetApplicationTaskTag+0x1c>)
 80083be:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 80083c0:	f7fe feb0 	bl	8007124 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 80083c4:	6565      	str	r5, [r4, #84]	; 0x54
	}
 80083c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 80083ca:	f7fe becb 	b.w	8007164 <vPortExitCritical>
 80083ce:	bf00      	nop
 80083d0:	20009ebc 	.word	0x20009ebc

080083d4 <xTaskCallApplicationTaskHook>:
	{
 80083d4:	4603      	mov	r3, r0
 80083d6:	4608      	mov	r0, r1
		if( xTask == NULL )
 80083d8:	b90b      	cbnz	r3, 80083de <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 80083da:	4b03      	ldr	r3, [pc, #12]	; (80083e8 <xTaskCallApplicationTaskHook+0x14>)
 80083dc:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 80083de:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80083e0:	b103      	cbz	r3, 80083e4 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 80083e2:	4718      	bx	r3
	}
 80083e4:	4618      	mov	r0, r3
 80083e6:	4770      	bx	lr
 80083e8:	20009ebc 	.word	0x20009ebc

080083ec <vTaskStartScheduler>:
{
 80083ec:	b510      	push	{r4, lr}
 80083ee:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80083f0:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80083f2:	aa07      	add	r2, sp, #28
 80083f4:	a906      	add	r1, sp, #24
 80083f6:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80083f8:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80083fc:	f7fe fcd8 	bl	8006db0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008400:	9b05      	ldr	r3, [sp, #20]
 8008402:	9302      	str	r3, [sp, #8]
 8008404:	9b06      	ldr	r3, [sp, #24]
 8008406:	9a07      	ldr	r2, [sp, #28]
 8008408:	4919      	ldr	r1, [pc, #100]	; (8008470 <vTaskStartScheduler+0x84>)
 800840a:	481a      	ldr	r0, [pc, #104]	; (8008474 <vTaskStartScheduler+0x88>)
 800840c:	e9cd 4300 	strd	r4, r3, [sp]
 8008410:	4623      	mov	r3, r4
 8008412:	f7ff fe2e 	bl	8008072 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008416:	b340      	cbz	r0, 800846a <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8008418:	f000 fa8a 	bl	8008930 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800841c:	2801      	cmp	r0, #1
 800841e:	d119      	bne.n	8008454 <vTaskStartScheduler+0x68>
 8008420:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008424:	f383 8811 	msr	BASEPRI, r3
 8008428:	f3bf 8f6f 	isb	sy
 800842c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008430:	4b11      	ldr	r3, [pc, #68]	; (8008478 <vTaskStartScheduler+0x8c>)
 8008432:	f04f 32ff 	mov.w	r2, #4294967295
 8008436:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008438:	4b10      	ldr	r3, [pc, #64]	; (800847c <vTaskStartScheduler+0x90>)
 800843a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800843c:	4b10      	ldr	r3, [pc, #64]	; (8008480 <vTaskStartScheduler+0x94>)
 800843e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8008440:	4b10      	ldr	r3, [pc, #64]	; (8008484 <vTaskStartScheduler+0x98>)
 8008442:	4621      	mov	r1, r4
 8008444:	6818      	ldr	r0, [r3, #0]
 8008446:	f7ff ffc5 	bl	80083d4 <xTaskCallApplicationTaskHook>
}
 800844a:	b008      	add	sp, #32
 800844c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008450:	f7fe bef8 	b.w	8007244 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008454:	3001      	adds	r0, #1
 8008456:	d108      	bne.n	800846a <vTaskStartScheduler+0x7e>
 8008458:	f04f 0350 	mov.w	r3, #80	; 0x50
 800845c:	f383 8811 	msr	BASEPRI, r3
 8008460:	f3bf 8f6f 	isb	sy
 8008464:	f3bf 8f4f 	dsb	sy
 8008468:	e7fe      	b.n	8008468 <vTaskStartScheduler+0x7c>
}
 800846a:	b008      	add	sp, #32
 800846c:	bd10      	pop	{r4, pc}
 800846e:	bf00      	nop
 8008470:	0801ced9 	.word	0x0801ced9
 8008474:	08007f71 	.word	0x08007f71
 8008478:	2000a364 	.word	0x2000a364
 800847c:	2000a384 	.word	0x2000a384
 8008480:	2000a3b0 	.word	0x2000a3b0
 8008484:	20009ebc 	.word	0x20009ebc

08008488 <vTaskSwitchContext>:
{
 8008488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800848a:	4b1c      	ldr	r3, [pc, #112]	; (80084fc <vTaskSwitchContext+0x74>)
 800848c:	681a      	ldr	r2, [r3, #0]
 800848e:	4b1c      	ldr	r3, [pc, #112]	; (8008500 <vTaskSwitchContext+0x78>)
 8008490:	b112      	cbz	r2, 8008498 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008492:	2201      	movs	r2, #1
 8008494:	601a      	str	r2, [r3, #0]
}
 8008496:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8008498:	4c1a      	ldr	r4, [pc, #104]	; (8008504 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 800849a:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800849c:	4e1a      	ldr	r6, [pc, #104]	; (8008508 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 800849e:	6820      	ldr	r0, [r4, #0]
 80084a0:	2101      	movs	r1, #1
 80084a2:	f7ff ff97 	bl	80083d4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80084a6:	6832      	ldr	r2, [r6, #0]
 80084a8:	4918      	ldr	r1, [pc, #96]	; (800850c <vTaskSwitchContext+0x84>)
 80084aa:	2714      	movs	r7, #20
 80084ac:	fb07 f302 	mul.w	r3, r7, r2
 80084b0:	18c8      	adds	r0, r1, r3
 80084b2:	58cd      	ldr	r5, [r1, r3]
 80084b4:	b1ad      	cbz	r5, 80084e2 <vTaskSwitchContext+0x5a>
 80084b6:	6845      	ldr	r5, [r0, #4]
 80084b8:	3308      	adds	r3, #8
 80084ba:	686d      	ldr	r5, [r5, #4]
 80084bc:	6045      	str	r5, [r0, #4]
 80084be:	440b      	add	r3, r1
 80084c0:	429d      	cmp	r5, r3
 80084c2:	bf04      	itt	eq
 80084c4:	686b      	ldreq	r3, [r5, #4]
 80084c6:	6043      	streq	r3, [r0, #4]
 80084c8:	2314      	movs	r3, #20
 80084ca:	fb03 1102 	mla	r1, r3, r2, r1
 80084ce:	684b      	ldr	r3, [r1, #4]
 80084d0:	68db      	ldr	r3, [r3, #12]
 80084d2:	6023      	str	r3, [r4, #0]
 80084d4:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 80084d6:	6820      	ldr	r0, [r4, #0]
 80084d8:	2100      	movs	r1, #0
}
 80084da:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 80084de:	f7ff bf79 	b.w	80083d4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80084e2:	b942      	cbnz	r2, 80084f6 <vTaskSwitchContext+0x6e>
 80084e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084e8:	f383 8811 	msr	BASEPRI, r3
 80084ec:	f3bf 8f6f 	isb	sy
 80084f0:	f3bf 8f4f 	dsb	sy
 80084f4:	e7fe      	b.n	80084f4 <vTaskSwitchContext+0x6c>
 80084f6:	3a01      	subs	r2, #1
 80084f8:	e7d8      	b.n	80084ac <vTaskSwitchContext+0x24>
 80084fa:	bf00      	nop
 80084fc:	2000a330 	.word	0x2000a330
 8008500:	2000a3b4 	.word	0x2000a3b4
 8008504:	20009ebc 	.word	0x20009ebc
 8008508:	2000a338 	.word	0x2000a338
 800850c:	20009ec8 	.word	0x20009ec8

08008510 <vTaskPlaceOnEventList>:
{
 8008510:	b510      	push	{r4, lr}
 8008512:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008514:	b940      	cbnz	r0, 8008528 <vTaskPlaceOnEventList+0x18>
 8008516:	f04f 0350 	mov.w	r3, #80	; 0x50
 800851a:	f383 8811 	msr	BASEPRI, r3
 800851e:	f3bf 8f6f 	isb	sy
 8008522:	f3bf 8f4f 	dsb	sy
 8008526:	e7fe      	b.n	8008526 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008528:	4b05      	ldr	r3, [pc, #20]	; (8008540 <vTaskPlaceOnEventList+0x30>)
 800852a:	6819      	ldr	r1, [r3, #0]
 800852c:	3118      	adds	r1, #24
 800852e:	f7fe fd6b 	bl	8007008 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008532:	4620      	mov	r0, r4
 8008534:	2101      	movs	r1, #1
}
 8008536:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800853a:	f7ff bcb3 	b.w	8007ea4 <prvAddCurrentTaskToDelayedList>
 800853e:	bf00      	nop
 8008540:	20009ebc 	.word	0x20009ebc

08008544 <vTaskPlaceOnEventListRestricted>:
	{
 8008544:	b538      	push	{r3, r4, r5, lr}
 8008546:	460d      	mov	r5, r1
 8008548:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800854a:	b940      	cbnz	r0, 800855e <vTaskPlaceOnEventListRestricted+0x1a>
 800854c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008550:	f383 8811 	msr	BASEPRI, r3
 8008554:	f3bf 8f6f 	isb	sy
 8008558:	f3bf 8f4f 	dsb	sy
 800855c:	e7fe      	b.n	800855c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800855e:	4b07      	ldr	r3, [pc, #28]	; (800857c <vTaskPlaceOnEventListRestricted+0x38>)
 8008560:	6819      	ldr	r1, [r3, #0]
 8008562:	3118      	adds	r1, #24
 8008564:	f7fe fd44 	bl	8006ff0 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008568:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800856a:	4621      	mov	r1, r4
 800856c:	bf0c      	ite	eq
 800856e:	4628      	moveq	r0, r5
 8008570:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008574:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008578:	f7ff bc94 	b.w	8007ea4 <prvAddCurrentTaskToDelayedList>
 800857c:	20009ebc 	.word	0x20009ebc

08008580 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008580:	68c3      	ldr	r3, [r0, #12]
{
 8008582:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008584:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008586:	b944      	cbnz	r4, 800859a <xTaskRemoveFromEventList+0x1a>
 8008588:	f04f 0350 	mov.w	r3, #80	; 0x50
 800858c:	f383 8811 	msr	BASEPRI, r3
 8008590:	f3bf 8f6f 	isb	sy
 8008594:	f3bf 8f4f 	dsb	sy
 8008598:	e7fe      	b.n	8008598 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800859a:	f104 0118 	add.w	r1, r4, #24
 800859e:	4608      	mov	r0, r1
 80085a0:	9101      	str	r1, [sp, #4]
 80085a2:	f7fe fd48 	bl	8007036 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80085a6:	4b12      	ldr	r3, [pc, #72]	; (80085f0 <xTaskRemoveFromEventList+0x70>)
 80085a8:	9901      	ldr	r1, [sp, #4]
 80085aa:	681b      	ldr	r3, [r3, #0]
 80085ac:	b9eb      	cbnz	r3, 80085ea <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80085ae:	1d21      	adds	r1, r4, #4
 80085b0:	4608      	mov	r0, r1
 80085b2:	9101      	str	r1, [sp, #4]
 80085b4:	f7fe fd3f 	bl	8007036 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80085b8:	4a0e      	ldr	r2, [pc, #56]	; (80085f4 <xTaskRemoveFromEventList+0x74>)
 80085ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80085bc:	6810      	ldr	r0, [r2, #0]
 80085be:	9901      	ldr	r1, [sp, #4]
 80085c0:	4283      	cmp	r3, r0
 80085c2:	bf88      	it	hi
 80085c4:	6013      	strhi	r3, [r2, #0]
 80085c6:	4a0c      	ldr	r2, [pc, #48]	; (80085f8 <xTaskRemoveFromEventList+0x78>)
 80085c8:	2014      	movs	r0, #20
 80085ca:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80085ce:	f7fe fd0f 	bl	8006ff0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80085d2:	4b0a      	ldr	r3, [pc, #40]	; (80085fc <xTaskRemoveFromEventList+0x7c>)
 80085d4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80085d6:	681b      	ldr	r3, [r3, #0]
 80085d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80085da:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80085dc:	bf85      	ittet	hi
 80085de:	4b08      	ldrhi	r3, [pc, #32]	; (8008600 <xTaskRemoveFromEventList+0x80>)
 80085e0:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 80085e2:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 80085e4:	6018      	strhi	r0, [r3, #0]
}
 80085e6:	b002      	add	sp, #8
 80085e8:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80085ea:	4806      	ldr	r0, [pc, #24]	; (8008604 <xTaskRemoveFromEventList+0x84>)
 80085ec:	e7ef      	b.n	80085ce <xTaskRemoveFromEventList+0x4e>
 80085ee:	bf00      	nop
 80085f0:	2000a330 	.word	0x2000a330
 80085f4:	2000a338 	.word	0x2000a338
 80085f8:	20009ec8 	.word	0x20009ec8
 80085fc:	20009ebc 	.word	0x20009ebc
 8008600:	2000a3b4 	.word	0x2000a3b4
 8008604:	2000a370 	.word	0x2000a370

08008608 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008608:	4b03      	ldr	r3, [pc, #12]	; (8008618 <vTaskInternalSetTimeOutState+0x10>)
 800860a:	681b      	ldr	r3, [r3, #0]
 800860c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800860e:	4b03      	ldr	r3, [pc, #12]	; (800861c <vTaskInternalSetTimeOutState+0x14>)
 8008610:	681b      	ldr	r3, [r3, #0]
 8008612:	6043      	str	r3, [r0, #4]
}
 8008614:	4770      	bx	lr
 8008616:	bf00      	nop
 8008618:	2000a368 	.word	0x2000a368
 800861c:	2000a3b0 	.word	0x2000a3b0

08008620 <xTaskCheckForTimeOut>:
{
 8008620:	b570      	push	{r4, r5, r6, lr}
 8008622:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008624:	4605      	mov	r5, r0
 8008626:	b940      	cbnz	r0, 800863a <xTaskCheckForTimeOut+0x1a>
 8008628:	f04f 0350 	mov.w	r3, #80	; 0x50
 800862c:	f383 8811 	msr	BASEPRI, r3
 8008630:	f3bf 8f6f 	isb	sy
 8008634:	f3bf 8f4f 	dsb	sy
 8008638:	e7fe      	b.n	8008638 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800863a:	b941      	cbnz	r1, 800864e <xTaskCheckForTimeOut+0x2e>
 800863c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008640:	f383 8811 	msr	BASEPRI, r3
 8008644:	f3bf 8f6f 	isb	sy
 8008648:	f3bf 8f4f 	dsb	sy
 800864c:	e7fe      	b.n	800864c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800864e:	f7fe fd69 	bl	8007124 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008652:	4b0f      	ldr	r3, [pc, #60]	; (8008690 <xTaskCheckForTimeOut+0x70>)
 8008654:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008656:	6823      	ldr	r3, [r4, #0]
 8008658:	1c5a      	adds	r2, r3, #1
 800865a:	d010      	beq.n	800867e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800865c:	480d      	ldr	r0, [pc, #52]	; (8008694 <xTaskCheckForTimeOut+0x74>)
 800865e:	682e      	ldr	r6, [r5, #0]
 8008660:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008662:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008664:	4286      	cmp	r6, r0
 8008666:	d001      	beq.n	800866c <xTaskCheckForTimeOut+0x4c>
 8008668:	428a      	cmp	r2, r1
 800866a:	d90f      	bls.n	800868c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800866c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800866e:	4283      	cmp	r3, r0
 8008670:	d90a      	bls.n	8008688 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008672:	1a5b      	subs	r3, r3, r1
 8008674:	4413      	add	r3, r2
 8008676:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008678:	4628      	mov	r0, r5
 800867a:	f7ff ffc5 	bl	8008608 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800867e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008680:	f7fe fd70 	bl	8007164 <vPortExitCritical>
}
 8008684:	4620      	mov	r0, r4
 8008686:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008688:	2300      	movs	r3, #0
 800868a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800868c:	2401      	movs	r4, #1
 800868e:	e7f7      	b.n	8008680 <xTaskCheckForTimeOut+0x60>
 8008690:	2000a3b0 	.word	0x2000a3b0
 8008694:	2000a368 	.word	0x2000a368

08008698 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008698:	4b01      	ldr	r3, [pc, #4]	; (80086a0 <vTaskMissedYield+0x8>)
 800869a:	2201      	movs	r2, #1
 800869c:	601a      	str	r2, [r3, #0]
}
 800869e:	4770      	bx	lr
 80086a0:	2000a3b4 	.word	0x2000a3b4

080086a4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80086a4:	4b05      	ldr	r3, [pc, #20]	; (80086bc <xTaskGetSchedulerState+0x18>)
 80086a6:	681b      	ldr	r3, [r3, #0]
 80086a8:	b133      	cbz	r3, 80086b8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80086aa:	4b05      	ldr	r3, [pc, #20]	; (80086c0 <xTaskGetSchedulerState+0x1c>)
 80086ac:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 80086ae:	2b00      	cmp	r3, #0
 80086b0:	bf0c      	ite	eq
 80086b2:	2002      	moveq	r0, #2
 80086b4:	2000      	movne	r0, #0
 80086b6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 80086b8:	2001      	movs	r0, #1
	}
 80086ba:	4770      	bx	lr
 80086bc:	2000a384 	.word	0x2000a384
 80086c0:	2000a330 	.word	0x2000a330

080086c4 <xTaskPriorityInherit>:
	{
 80086c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80086c6:	4604      	mov	r4, r0
 80086c8:	b348      	cbz	r0, 800871e <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80086ca:	4d1c      	ldr	r5, [pc, #112]	; (800873c <xTaskPriorityInherit+0x78>)
 80086cc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80086ce:	682a      	ldr	r2, [r5, #0]
 80086d0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80086d2:	4293      	cmp	r3, r2
 80086d4:	d229      	bcs.n	800872a <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80086d6:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80086d8:	4e19      	ldr	r6, [pc, #100]	; (8008740 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80086da:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80086dc:	bfa1      	itttt	ge
 80086de:	682a      	ldrge	r2, [r5, #0]
 80086e0:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 80086e2:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 80086e6:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80086e8:	2214      	movs	r2, #20
 80086ea:	fb02 6303 	mla	r3, r2, r3, r6
 80086ee:	6942      	ldr	r2, [r0, #20]
 80086f0:	429a      	cmp	r2, r3
 80086f2:	d116      	bne.n	8008722 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80086f4:	1d01      	adds	r1, r0, #4
 80086f6:	4608      	mov	r0, r1
 80086f8:	9101      	str	r1, [sp, #4]
 80086fa:	f7fe fc9c 	bl	8007036 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80086fe:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008700:	4a10      	ldr	r2, [pc, #64]	; (8008744 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008702:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008704:	6810      	ldr	r0, [r2, #0]
 8008706:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008708:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800870a:	4283      	cmp	r3, r0
 800870c:	f04f 0014 	mov.w	r0, #20
 8008710:	fb00 6003 	mla	r0, r0, r3, r6
 8008714:	bf88      	it	hi
 8008716:	6013      	strhi	r3, [r2, #0]
 8008718:	f7fe fc6a 	bl	8006ff0 <vListInsertEnd>
				xReturn = pdTRUE;
 800871c:	2001      	movs	r0, #1
	}
 800871e:	b002      	add	sp, #8
 8008720:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008722:	682b      	ldr	r3, [r5, #0]
 8008724:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008726:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008728:	e7f8      	b.n	800871c <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800872a:	682b      	ldr	r3, [r5, #0]
 800872c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800872e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008730:	42a0      	cmp	r0, r4
 8008732:	bf2c      	ite	cs
 8008734:	2000      	movcs	r0, #0
 8008736:	2001      	movcc	r0, #1
 8008738:	e7f1      	b.n	800871e <xTaskPriorityInherit+0x5a>
 800873a:	bf00      	nop
 800873c:	20009ebc 	.word	0x20009ebc
 8008740:	20009ec8 	.word	0x20009ec8
 8008744:	2000a338 	.word	0x2000a338

08008748 <xTaskPriorityDisinherit>:
	{
 8008748:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800874a:	b910      	cbnz	r0, 8008752 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800874c:	2000      	movs	r0, #0
	}
 800874e:	b002      	add	sp, #8
 8008750:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008752:	4b1c      	ldr	r3, [pc, #112]	; (80087c4 <xTaskPriorityDisinherit+0x7c>)
 8008754:	681c      	ldr	r4, [r3, #0]
 8008756:	4284      	cmp	r4, r0
 8008758:	d008      	beq.n	800876c <xTaskPriorityDisinherit+0x24>
 800875a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800875e:	f383 8811 	msr	BASEPRI, r3
 8008762:	f3bf 8f6f 	isb	sy
 8008766:	f3bf 8f4f 	dsb	sy
 800876a:	e7fe      	b.n	800876a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800876c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800876e:	b943      	cbnz	r3, 8008782 <xTaskPriorityDisinherit+0x3a>
 8008770:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008774:	f383 8811 	msr	BASEPRI, r3
 8008778:	f3bf 8f6f 	isb	sy
 800877c:	f3bf 8f4f 	dsb	sy
 8008780:	e7fe      	b.n	8008780 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008782:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008784:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008786:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008788:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800878a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800878c:	d0de      	beq.n	800874c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800878e:	2b00      	cmp	r3, #0
 8008790:	d1dc      	bne.n	800874c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008792:	1d21      	adds	r1, r4, #4
 8008794:	4608      	mov	r0, r1
 8008796:	9101      	str	r1, [sp, #4]
 8008798:	f7fe fc4d 	bl	8007036 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800879c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800879e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80087a0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80087a2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80087a6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80087a8:	4a07      	ldr	r2, [pc, #28]	; (80087c8 <xTaskPriorityDisinherit+0x80>)
 80087aa:	6810      	ldr	r0, [r2, #0]
 80087ac:	4283      	cmp	r3, r0
 80087ae:	bf88      	it	hi
 80087b0:	6013      	strhi	r3, [r2, #0]
 80087b2:	4a06      	ldr	r2, [pc, #24]	; (80087cc <xTaskPriorityDisinherit+0x84>)
 80087b4:	2014      	movs	r0, #20
 80087b6:	fb00 2003 	mla	r0, r0, r3, r2
 80087ba:	f7fe fc19 	bl	8006ff0 <vListInsertEnd>
					xReturn = pdTRUE;
 80087be:	2001      	movs	r0, #1
		return xReturn;
 80087c0:	e7c5      	b.n	800874e <xTaskPriorityDisinherit+0x6>
 80087c2:	bf00      	nop
 80087c4:	20009ebc 	.word	0x20009ebc
 80087c8:	2000a338 	.word	0x2000a338
 80087cc:	20009ec8 	.word	0x20009ec8

080087d0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 80087d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 80087d2:	4604      	mov	r4, r0
 80087d4:	2800      	cmp	r0, #0
 80087d6:	d044      	beq.n	8008862 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 80087d8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80087da:	b942      	cbnz	r2, 80087ee <vTaskPriorityDisinheritAfterTimeout+0x1e>
 80087dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087e0:	f383 8811 	msr	BASEPRI, r3
 80087e4:	f3bf 8f6f 	isb	sy
 80087e8:	f3bf 8f4f 	dsb	sy
 80087ec:	e7fe      	b.n	80087ec <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 80087ee:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80087f0:	4299      	cmp	r1, r3
 80087f2:	bf38      	it	cc
 80087f4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 80087f6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80087f8:	428b      	cmp	r3, r1
 80087fa:	d032      	beq.n	8008862 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 80087fc:	2a01      	cmp	r2, #1
 80087fe:	d130      	bne.n	8008862 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008800:	4a19      	ldr	r2, [pc, #100]	; (8008868 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008802:	6812      	ldr	r2, [r2, #0]
 8008804:	4282      	cmp	r2, r0
 8008806:	d108      	bne.n	800881a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008808:	f04f 0350 	mov.w	r3, #80	; 0x50
 800880c:	f383 8811 	msr	BASEPRI, r3
 8008810:	f3bf 8f6f 	isb	sy
 8008814:	f3bf 8f4f 	dsb	sy
 8008818:	e7fe      	b.n	8008818 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800881a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800881c:	4d13      	ldr	r5, [pc, #76]	; (800886c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800881e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008820:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008822:	f04f 0214 	mov.w	r2, #20
 8008826:	fb02 5303 	mla	r3, r2, r3, r5
 800882a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800882c:	bfa4      	itt	ge
 800882e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008832:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008834:	429a      	cmp	r2, r3
 8008836:	d114      	bne.n	8008862 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008838:	1d01      	adds	r1, r0, #4
 800883a:	4608      	mov	r0, r1
 800883c:	9101      	str	r1, [sp, #4]
 800883e:	f7fe fbfa 	bl	8007036 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008842:	4a0b      	ldr	r2, [pc, #44]	; (8008870 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008844:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008846:	6810      	ldr	r0, [r2, #0]
 8008848:	9901      	ldr	r1, [sp, #4]
 800884a:	4283      	cmp	r3, r0
 800884c:	f04f 0014 	mov.w	r0, #20
 8008850:	fb00 5003 	mla	r0, r0, r3, r5
 8008854:	bf88      	it	hi
 8008856:	6013      	strhi	r3, [r2, #0]
	}
 8008858:	b003      	add	sp, #12
 800885a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800885e:	f7fe bbc7 	b.w	8006ff0 <vListInsertEnd>
	}
 8008862:	b003      	add	sp, #12
 8008864:	bd30      	pop	{r4, r5, pc}
 8008866:	bf00      	nop
 8008868:	20009ebc 	.word	0x20009ebc
 800886c:	20009ec8 	.word	0x20009ec8
 8008870:	2000a338 	.word	0x2000a338

08008874 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008874:	4b04      	ldr	r3, [pc, #16]	; (8008888 <pvTaskIncrementMutexHeldCount+0x14>)
 8008876:	681a      	ldr	r2, [r3, #0]
 8008878:	b11a      	cbz	r2, 8008882 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800887a:	6819      	ldr	r1, [r3, #0]
 800887c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800887e:	3201      	adds	r2, #1
 8008880:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008882:	6818      	ldr	r0, [r3, #0]
	}
 8008884:	4770      	bx	lr
 8008886:	bf00      	nop
 8008888:	20009ebc 	.word	0x20009ebc

0800888c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800888c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800888e:	4c11      	ldr	r4, [pc, #68]	; (80088d4 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008890:	f7fe fc48 	bl	8007124 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008894:	6825      	ldr	r5, [r4, #0]
 8008896:	b9bd      	cbnz	r5, 80088c8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008898:	4f0f      	ldr	r7, [pc, #60]	; (80088d8 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800889a:	4e10      	ldr	r6, [pc, #64]	; (80088dc <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800889c:	4638      	mov	r0, r7
 800889e:	f7fe fb99 	bl	8006fd4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80088a2:	4630      	mov	r0, r6
 80088a4:	f7fe fb96 	bl	8006fd4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80088a8:	4b0d      	ldr	r3, [pc, #52]	; (80088e0 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80088aa:	4a0e      	ldr	r2, [pc, #56]	; (80088e4 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80088ac:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80088ae:	4b0e      	ldr	r3, [pc, #56]	; (80088e8 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80088b0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 80088b2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80088b4:	200a      	movs	r0, #10
 80088b6:	4b0d      	ldr	r3, [pc, #52]	; (80088ec <prvCheckForValidListAndQueue+0x60>)
 80088b8:	9500      	str	r5, [sp, #0]
 80088ba:	f7fe fe44 	bl	8007546 <xQueueGenericCreateStatic>
 80088be:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 80088c0:	b110      	cbz	r0, 80088c8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80088c2:	490b      	ldr	r1, [pc, #44]	; (80088f0 <prvCheckForValidListAndQueue+0x64>)
 80088c4:	f7ff fa0e 	bl	8007ce4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 80088c8:	b003      	add	sp, #12
 80088ca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 80088ce:	f7fe bc49 	b.w	8007164 <vPortExitCritical>
 80088d2:	bf00      	nop
 80088d4:	2000a4dc 	.word	0x2000a4dc
 80088d8:	2000a460 	.word	0x2000a460
 80088dc:	2000a474 	.word	0x2000a474
 80088e0:	2000a3b8 	.word	0x2000a3b8
 80088e4:	2000a3c0 	.word	0x2000a3c0
 80088e8:	2000a3bc 	.word	0x2000a3bc
 80088ec:	2000a48c 	.word	0x2000a48c
 80088f0:	0801cede 	.word	0x0801cede

080088f4 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 80088f4:	4291      	cmp	r1, r2
{
 80088f6:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80088f8:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80088fa:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 80088fc:	d80a      	bhi.n	8008914 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80088fe:	1ad2      	subs	r2, r2, r3
 8008900:	6983      	ldr	r3, [r0, #24]
 8008902:	429a      	cmp	r2, r3
 8008904:	d20d      	bcs.n	8008922 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008906:	4b08      	ldr	r3, [pc, #32]	; (8008928 <prvInsertTimerInActiveList+0x34>)
 8008908:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800890a:	6818      	ldr	r0, [r3, #0]
 800890c:	f7fe fb7c 	bl	8007008 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008910:	2000      	movs	r0, #0
}
 8008912:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008914:	429a      	cmp	r2, r3
 8008916:	d201      	bcs.n	800891c <prvInsertTimerInActiveList+0x28>
 8008918:	4299      	cmp	r1, r3
 800891a:	d202      	bcs.n	8008922 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800891c:	4b03      	ldr	r3, [pc, #12]	; (800892c <prvInsertTimerInActiveList+0x38>)
 800891e:	1d01      	adds	r1, r0, #4
 8008920:	e7f3      	b.n	800890a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008922:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008924:	e7f5      	b.n	8008912 <prvInsertTimerInActiveList+0x1e>
 8008926:	bf00      	nop
 8008928:	2000a3bc 	.word	0x2000a3bc
 800892c:	2000a3b8 	.word	0x2000a3b8

08008930 <xTimerCreateTimerTask>:
{
 8008930:	b510      	push	{r4, lr}
 8008932:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008934:	f7ff ffaa 	bl	800888c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008938:	4b12      	ldr	r3, [pc, #72]	; (8008984 <xTimerCreateTimerTask+0x54>)
 800893a:	681b      	ldr	r3, [r3, #0]
 800893c:	b1b3      	cbz	r3, 800896c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800893e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008940:	aa07      	add	r2, sp, #28
 8008942:	a906      	add	r1, sp, #24
 8008944:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008946:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800894a:	f7fe fa3d 	bl	8006dc8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800894e:	9b05      	ldr	r3, [sp, #20]
 8008950:	9302      	str	r3, [sp, #8]
 8008952:	9b06      	ldr	r3, [sp, #24]
 8008954:	9301      	str	r3, [sp, #4]
 8008956:	2302      	movs	r3, #2
 8008958:	9300      	str	r3, [sp, #0]
 800895a:	9a07      	ldr	r2, [sp, #28]
 800895c:	490a      	ldr	r1, [pc, #40]	; (8008988 <xTimerCreateTimerTask+0x58>)
 800895e:	480b      	ldr	r0, [pc, #44]	; (800898c <xTimerCreateTimerTask+0x5c>)
 8008960:	4623      	mov	r3, r4
 8008962:	f7ff fb86 	bl	8008072 <xTaskCreateStatic>
 8008966:	4b0a      	ldr	r3, [pc, #40]	; (8008990 <xTimerCreateTimerTask+0x60>)
 8008968:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800896a:	b940      	cbnz	r0, 800897e <xTimerCreateTimerTask+0x4e>
 800896c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008970:	f383 8811 	msr	BASEPRI, r3
 8008974:	f3bf 8f6f 	isb	sy
 8008978:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800897c:	e7fe      	b.n	800897c <xTimerCreateTimerTask+0x4c>
}
 800897e:	2001      	movs	r0, #1
 8008980:	b008      	add	sp, #32
 8008982:	bd10      	pop	{r4, pc}
 8008984:	2000a4dc 	.word	0x2000a4dc
 8008988:	0801cee3 	.word	0x0801cee3
 800898c:	08008a99 	.word	0x08008a99
 8008990:	2000a4e0 	.word	0x2000a4e0

08008994 <xTimerGenericCommand>:
{
 8008994:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008996:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8008998:	4604      	mov	r4, r0
{
 800899a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800899c:	b940      	cbnz	r0, 80089b0 <xTimerGenericCommand+0x1c>
 800899e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089a2:	f383 8811 	msr	BASEPRI, r3
 80089a6:	f3bf 8f6f 	isb	sy
 80089aa:	f3bf 8f4f 	dsb	sy
 80089ae:	e7fe      	b.n	80089ae <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 80089b0:	4d0d      	ldr	r5, [pc, #52]	; (80089e8 <xTimerGenericCommand+0x54>)
 80089b2:	6828      	ldr	r0, [r5, #0]
 80089b4:	b180      	cbz	r0, 80089d8 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80089b6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80089b8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80089bc:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 80089be:	dc0d      	bgt.n	80089dc <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80089c0:	f7ff fe70 	bl	80086a4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80089c4:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80089c6:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80089c8:	bf08      	it	eq
 80089ca:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 80089cc:	6828      	ldr	r0, [r5, #0]
 80089ce:	bf18      	it	ne
 80089d0:	461a      	movne	r2, r3
 80089d2:	4669      	mov	r1, sp
 80089d4:	f7fe fe6c 	bl	80076b0 <xQueueGenericSend>
}
 80089d8:	b004      	add	sp, #16
 80089da:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 80089dc:	2300      	movs	r3, #0
 80089de:	4669      	mov	r1, sp
 80089e0:	f7fe ff19 	bl	8007816 <xQueueGenericSendFromISR>
 80089e4:	e7f8      	b.n	80089d8 <xTimerGenericCommand+0x44>
 80089e6:	bf00      	nop
 80089e8:	2000a4dc 	.word	0x2000a4dc

080089ec <prvSampleTimeNow>:
{
 80089ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 80089f0:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8008a94 <prvSampleTimeNow+0xa8>
{
 80089f4:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 80089f6:	f7ff fba9 	bl	800814c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80089fa:	f8d8 3000 	ldr.w	r3, [r8]
 80089fe:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8008a00:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008a02:	d940      	bls.n	8008a86 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008a04:	4f21      	ldr	r7, [pc, #132]	; (8008a8c <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008a06:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008a0a:	683b      	ldr	r3, [r7, #0]
 8008a0c:	681a      	ldr	r2, [r3, #0]
 8008a0e:	b95a      	cbnz	r2, 8008a28 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8008a10:	4a1f      	ldr	r2, [pc, #124]	; (8008a90 <prvSampleTimeNow+0xa4>)
 8008a12:	6811      	ldr	r1, [r2, #0]
 8008a14:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8008a16:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8008a18:	2301      	movs	r3, #1
}
 8008a1a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8008a1c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8008a1e:	f8c8 5000 	str.w	r5, [r8]
}
 8008a22:	b004      	add	sp, #16
 8008a24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008a28:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008a2a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008a2c:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008a30:	1d21      	adds	r1, r4, #4
 8008a32:	4608      	mov	r0, r1
 8008a34:	9103      	str	r1, [sp, #12]
 8008a36:	f7fe fafe 	bl	8007036 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008a3a:	6a23      	ldr	r3, [r4, #32]
 8008a3c:	4620      	mov	r0, r4
 8008a3e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008a40:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008a44:	9903      	ldr	r1, [sp, #12]
 8008a46:	f013 0f04 	tst.w	r3, #4
 8008a4a:	d0de      	beq.n	8008a0a <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008a4c:	69a3      	ldr	r3, [r4, #24]
 8008a4e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8008a50:	459a      	cmp	sl, r3
 8008a52:	d205      	bcs.n	8008a60 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008a54:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008a56:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008a58:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008a5a:	f7fe fad5 	bl	8007008 <vListInsert>
 8008a5e:	e7d4      	b.n	8008a0a <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008a60:	2300      	movs	r3, #0
 8008a62:	f8cd 9000 	str.w	r9, [sp]
 8008a66:	4652      	mov	r2, sl
 8008a68:	4619      	mov	r1, r3
 8008a6a:	4620      	mov	r0, r4
 8008a6c:	f7ff ff92 	bl	8008994 <xTimerGenericCommand>
				configASSERT( xResult );
 8008a70:	2800      	cmp	r0, #0
 8008a72:	d1ca      	bne.n	8008a0a <prvSampleTimeNow+0x1e>
 8008a74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a78:	f383 8811 	msr	BASEPRI, r3
 8008a7c:	f3bf 8f6f 	isb	sy
 8008a80:	f3bf 8f4f 	dsb	sy
 8008a84:	e7fe      	b.n	8008a84 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8008a86:	2300      	movs	r3, #0
 8008a88:	e7c7      	b.n	8008a1a <prvSampleTimeNow+0x2e>
 8008a8a:	bf00      	nop
 8008a8c:	2000a3b8 	.word	0x2000a3b8
 8008a90:	2000a3bc 	.word	0x2000a3bc
 8008a94:	2000a488 	.word	0x2000a488

08008a98 <prvTimerTask>:
{
 8008a98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008a9c:	4d6e      	ldr	r5, [pc, #440]	; (8008c58 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008a9e:	4e6f      	ldr	r6, [pc, #444]	; (8008c5c <prvTimerTask+0x1c4>)
{
 8008aa0:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008aa2:	682b      	ldr	r3, [r5, #0]
 8008aa4:	f8d3 8000 	ldr.w	r8, [r3]
 8008aa8:	f1b8 0f00 	cmp.w	r8, #0
 8008aac:	d035      	beq.n	8008b1a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008aae:	68db      	ldr	r3, [r3, #12]
 8008ab0:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008ab4:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8008ab6:	f7ff fb41 	bl	800813c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008aba:	a804      	add	r0, sp, #16
 8008abc:	f7ff ff96 	bl	80089ec <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8008ac0:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008ac2:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8008ac4:	2b00      	cmp	r3, #0
 8008ac6:	d169      	bne.n	8008b9c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008ac8:	2c00      	cmp	r4, #0
 8008aca:	d14c      	bne.n	8008b66 <prvTimerTask+0xce>
 8008acc:	4540      	cmp	r0, r8
 8008ace:	d350      	bcc.n	8008b72 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8008ad0:	f7ff fbd8 	bl	8008284 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008ad4:	682b      	ldr	r3, [r5, #0]
 8008ad6:	68db      	ldr	r3, [r3, #12]
 8008ad8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008ada:	1d38      	adds	r0, r7, #4
 8008adc:	f7fe faab 	bl	8007036 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008ae0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8008ae4:	0758      	lsls	r0, r3, #29
 8008ae6:	d51a      	bpl.n	8008b1e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008ae8:	69b9      	ldr	r1, [r7, #24]
 8008aea:	4643      	mov	r3, r8
 8008aec:	464a      	mov	r2, r9
 8008aee:	4441      	add	r1, r8
 8008af0:	4638      	mov	r0, r7
 8008af2:	f7ff feff 	bl	80088f4 <prvInsertTimerInActiveList>
 8008af6:	b1b0      	cbz	r0, 8008b26 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008af8:	9400      	str	r4, [sp, #0]
 8008afa:	4623      	mov	r3, r4
 8008afc:	4642      	mov	r2, r8
 8008afe:	4621      	mov	r1, r4
 8008b00:	4638      	mov	r0, r7
 8008b02:	f7ff ff47 	bl	8008994 <xTimerGenericCommand>
			configASSERT( xResult );
 8008b06:	b970      	cbnz	r0, 8008b26 <prvTimerTask+0x8e>
 8008b08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b0c:	f383 8811 	msr	BASEPRI, r3
 8008b10:	f3bf 8f6f 	isb	sy
 8008b14:	f3bf 8f4f 	dsb	sy
 8008b18:	e7fe      	b.n	8008b18 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008b1a:	2401      	movs	r4, #1
 8008b1c:	e7cb      	b.n	8008ab6 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008b1e:	f023 0301 	bic.w	r3, r3, #1
 8008b22:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008b26:	6a3b      	ldr	r3, [r7, #32]
 8008b28:	4638      	mov	r0, r7
 8008b2a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008b2c:	6830      	ldr	r0, [r6, #0]
 8008b2e:	2200      	movs	r2, #0
 8008b30:	a904      	add	r1, sp, #16
 8008b32:	f7fe ff26 	bl	8007982 <xQueueReceive>
 8008b36:	2800      	cmp	r0, #0
 8008b38:	d0b3      	beq.n	8008aa2 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008b3a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008b3c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008b3e:	2b00      	cmp	r3, #0
 8008b40:	db2f      	blt.n	8008ba2 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008b42:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008b44:	6963      	ldr	r3, [r4, #20]
 8008b46:	2b00      	cmp	r3, #0
 8008b48:	d132      	bne.n	8008bb0 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008b4a:	a803      	add	r0, sp, #12
 8008b4c:	f7ff ff4e 	bl	80089ec <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8008b50:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008b52:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8008b54:	2b09      	cmp	r3, #9
 8008b56:	d8e9      	bhi.n	8008b2c <prvTimerTask+0x94>
 8008b58:	e8df f003 	tbb	[pc, r3]
 8008b5c:	572e2e2e 	.word	0x572e2e2e
 8008b60:	2e2e765e 	.word	0x2e2e765e
 8008b64:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8008b66:	4b3e      	ldr	r3, [pc, #248]	; (8008c60 <prvTimerTask+0x1c8>)
 8008b68:	681b      	ldr	r3, [r3, #0]
 8008b6a:	681c      	ldr	r4, [r3, #0]
 8008b6c:	fab4 f484 	clz	r4, r4
 8008b70:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008b72:	6830      	ldr	r0, [r6, #0]
 8008b74:	4622      	mov	r2, r4
 8008b76:	eba8 0109 	sub.w	r1, r8, r9
 8008b7a:	f7ff f8f0 	bl	8007d5e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8008b7e:	f7ff fb81 	bl	8008284 <xTaskResumeAll>
 8008b82:	2800      	cmp	r0, #0
 8008b84:	d1d2      	bne.n	8008b2c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8008b86:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b8a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b8e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008b92:	f3bf 8f4f 	dsb	sy
 8008b96:	f3bf 8f6f 	isb	sy
 8008b9a:	e7c7      	b.n	8008b2c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8008b9c:	f7ff fb72 	bl	8008284 <xTaskResumeAll>
}
 8008ba0:	e7c4      	b.n	8008b2c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008ba2:	9b05      	ldr	r3, [sp, #20]
 8008ba4:	9907      	ldr	r1, [sp, #28]
 8008ba6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008ba8:	9b04      	ldr	r3, [sp, #16]
 8008baa:	2b00      	cmp	r3, #0
 8008bac:	dbbe      	blt.n	8008b2c <prvTimerTask+0x94>
 8008bae:	e7c8      	b.n	8008b42 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008bb0:	1d20      	adds	r0, r4, #4
 8008bb2:	f7fe fa40 	bl	8007036 <uxListRemove>
 8008bb6:	e7c8      	b.n	8008b4a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008bb8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008bbc:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008bbe:	f043 0301 	orr.w	r3, r3, #1
 8008bc2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008bc6:	9b05      	ldr	r3, [sp, #20]
 8008bc8:	4620      	mov	r0, r4
 8008bca:	4419      	add	r1, r3
 8008bcc:	f7ff fe92 	bl	80088f4 <prvInsertTimerInActiveList>
 8008bd0:	2800      	cmp	r0, #0
 8008bd2:	d0ab      	beq.n	8008b2c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008bd4:	6a23      	ldr	r3, [r4, #32]
 8008bd6:	4620      	mov	r0, r4
 8008bd8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008bda:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008bde:	0759      	lsls	r1, r3, #29
 8008be0:	d5a4      	bpl.n	8008b2c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008be2:	69a2      	ldr	r2, [r4, #24]
 8008be4:	9905      	ldr	r1, [sp, #20]
 8008be6:	2300      	movs	r3, #0
 8008be8:	440a      	add	r2, r1
 8008bea:	9300      	str	r3, [sp, #0]
 8008bec:	4619      	mov	r1, r3
 8008bee:	4620      	mov	r0, r4
 8008bf0:	f7ff fed0 	bl	8008994 <xTimerGenericCommand>
							configASSERT( xResult );
 8008bf4:	2800      	cmp	r0, #0
 8008bf6:	d199      	bne.n	8008b2c <prvTimerTask+0x94>
 8008bf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bfc:	f383 8811 	msr	BASEPRI, r3
 8008c00:	f3bf 8f6f 	isb	sy
 8008c04:	f3bf 8f4f 	dsb	sy
 8008c08:	e7fe      	b.n	8008c08 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008c0a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008c0e:	f023 0301 	bic.w	r3, r3, #1
 8008c12:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008c16:	e789      	b.n	8008b2c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008c18:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008c1c:	f043 0301 	orr.w	r3, r3, #1
 8008c20:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008c24:	9905      	ldr	r1, [sp, #20]
 8008c26:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008c28:	b941      	cbnz	r1, 8008c3c <prvTimerTask+0x1a4>
 8008c2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c2e:	f383 8811 	msr	BASEPRI, r3
 8008c32:	f3bf 8f6f 	isb	sy
 8008c36:	f3bf 8f4f 	dsb	sy
 8008c3a:	e7fe      	b.n	8008c3a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008c3c:	4603      	mov	r3, r0
 8008c3e:	4401      	add	r1, r0
 8008c40:	4620      	mov	r0, r4
 8008c42:	f7ff fe57 	bl	80088f4 <prvInsertTimerInActiveList>
					break;
 8008c46:	e771      	b.n	8008b2c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008c48:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008c4c:	079a      	lsls	r2, r3, #30
 8008c4e:	d4de      	bmi.n	8008c0e <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8008c50:	4620      	mov	r0, r4
 8008c52:	f7fe f981 	bl	8006f58 <vPortFree>
 8008c56:	e769      	b.n	8008b2c <prvTimerTask+0x94>
 8008c58:	2000a3b8 	.word	0x2000a3b8
 8008c5c:	2000a4dc 	.word	0x2000a4dc
 8008c60:	2000a3bc 	.word	0x2000a3bc

08008c64 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008c64:	8880      	ldrh	r0, [r0, #4]
 8008c66:	4770      	bx	lr

08008c68 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008c68:	2300      	movs	r3, #0
 8008c6a:	8083      	strh	r3, [r0, #4]
 8008c6c:	4770      	bx	lr
	...

08008c70 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008c72:	6803      	ldr	r3, [r0, #0]
 8008c74:	4605      	mov	r5, r0
 8008c76:	460e      	mov	r6, r1
 8008c78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c7a:	2100      	movs	r1, #0
 8008c7c:	4798      	blx	r3
 8008c7e:	682b      	ldr	r3, [r5, #0]
 8008c80:	4604      	mov	r4, r0
 8008c82:	6a1b      	ldr	r3, [r3, #32]
 8008c84:	4628      	mov	r0, r5
 8008c86:	4798      	blx	r3
 8008c88:	88ab      	ldrh	r3, [r5, #4]
 8008c8a:	1b34      	subs	r4, r6, r4
 8008c8c:	b2a4      	uxth	r4, r4
 8008c8e:	fbb4 f4f0 	udiv	r4, r4, r0
 8008c92:	42a3      	cmp	r3, r4
 8008c94:	d805      	bhi.n	8008ca2 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8008c96:	4b0e      	ldr	r3, [pc, #56]	; (8008cd0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8008c98:	4a0e      	ldr	r2, [pc, #56]	; (8008cd4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008c9a:	211d      	movs	r1, #29
 8008c9c:	480e      	ldr	r0, [pc, #56]	; (8008cd8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8008c9e:	f011 fffb 	bl	801ac98 <__assert_func>
 8008ca2:	682b      	ldr	r3, [r5, #0]
 8008ca4:	2100      	movs	r1, #0
 8008ca6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008ca8:	4628      	mov	r0, r5
 8008caa:	4798      	blx	r3
 8008cac:	682b      	ldr	r3, [r5, #0]
 8008cae:	4607      	mov	r7, r0
 8008cb0:	6a1b      	ldr	r3, [r3, #32]
 8008cb2:	4628      	mov	r0, r5
 8008cb4:	4798      	blx	r3
 8008cb6:	1bf3      	subs	r3, r6, r7
 8008cb8:	b29b      	uxth	r3, r3
 8008cba:	fbb3 f2f0 	udiv	r2, r3, r0
 8008cbe:	fb02 3010 	mls	r0, r2, r0, r3
 8008cc2:	b118      	cbz	r0, 8008ccc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008cc4:	4b05      	ldr	r3, [pc, #20]	; (8008cdc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008cc6:	4a03      	ldr	r2, [pc, #12]	; (8008cd4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008cc8:	211e      	movs	r1, #30
 8008cca:	e7e7      	b.n	8008c9c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008ccc:	4620      	mov	r0, r4
 8008cce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008cd0:	0801ceeb 	.word	0x0801ceeb
 8008cd4:	0801d056 	.word	0x0801d056
 8008cd8:	0801cf00 	.word	0x0801cf00
 8008cdc:	0801cf2e 	.word	0x0801cf2e

08008ce0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008ce0:	b538      	push	{r3, r4, r5, lr}
 8008ce2:	6803      	ldr	r3, [r0, #0]
 8008ce4:	6a1b      	ldr	r3, [r3, #32]
 8008ce6:	460d      	mov	r5, r1
 8008ce8:	4604      	mov	r4, r0
 8008cea:	4798      	blx	r3
 8008cec:	4285      	cmp	r5, r0
 8008cee:	d905      	bls.n	8008cfc <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8008cf0:	4b0c      	ldr	r3, [pc, #48]	; (8008d24 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8008cf2:	4a0d      	ldr	r2, [pc, #52]	; (8008d28 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008cf4:	212f      	movs	r1, #47	; 0x2f
 8008cf6:	480d      	ldr	r0, [pc, #52]	; (8008d2c <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8008cf8:	f011 ffce 	bl	801ac98 <__assert_func>
 8008cfc:	6823      	ldr	r3, [r4, #0]
 8008cfe:	88a5      	ldrh	r5, [r4, #4]
 8008d00:	69db      	ldr	r3, [r3, #28]
 8008d02:	4620      	mov	r0, r4
 8008d04:	4798      	blx	r3
 8008d06:	4285      	cmp	r5, r0
 8008d08:	d303      	bcc.n	8008d12 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8008d0a:	4b09      	ldr	r3, [pc, #36]	; (8008d30 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008d0c:	4a06      	ldr	r2, [pc, #24]	; (8008d28 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008d0e:	2130      	movs	r1, #48	; 0x30
 8008d10:	e7f1      	b.n	8008cf6 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8008d12:	6823      	ldr	r3, [r4, #0]
 8008d14:	88a1      	ldrh	r1, [r4, #4]
 8008d16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008d18:	4620      	mov	r0, r4
 8008d1a:	4798      	blx	r3
 8008d1c:	88a3      	ldrh	r3, [r4, #4]
 8008d1e:	3301      	adds	r3, #1
 8008d20:	80a3      	strh	r3, [r4, #4]
 8008d22:	bd38      	pop	{r3, r4, r5, pc}
 8008d24:	0801cfa8 	.word	0x0801cfa8
 8008d28:	0801d099 	.word	0x0801d099
 8008d2c:	0801cf00 	.word	0x0801cf00
 8008d30:	0801cfbf 	.word	0x0801cfbf

08008d34 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008d34:	b570      	push	{r4, r5, r6, lr}
 8008d36:	6803      	ldr	r3, [r0, #0]
 8008d38:	6a1b      	ldr	r3, [r3, #32]
 8008d3a:	4616      	mov	r6, r2
 8008d3c:	4604      	mov	r4, r0
 8008d3e:	460d      	mov	r5, r1
 8008d40:	4798      	blx	r3
 8008d42:	4286      	cmp	r6, r0
 8008d44:	d905      	bls.n	8008d52 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8008d46:	4b06      	ldr	r3, [pc, #24]	; (8008d60 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8008d48:	4a06      	ldr	r2, [pc, #24]	; (8008d64 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8008d4a:	4807      	ldr	r0, [pc, #28]	; (8008d68 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008d4c:	2139      	movs	r1, #57	; 0x39
 8008d4e:	f011 ffa3 	bl	801ac98 <__assert_func>
 8008d52:	6823      	ldr	r3, [r4, #0]
 8008d54:	4629      	mov	r1, r5
 8008d56:	4620      	mov	r0, r4
 8008d58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008d5a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008d5e:	4718      	bx	r3
 8008d60:	0801cfa8 	.word	0x0801cfa8
 8008d64:	0801d00c 	.word	0x0801d00c
 8008d68:	0801cf00 	.word	0x0801cf00

08008d6c <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8008d6c:	4770      	bx	lr
	...

08008d70 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8008d70:	4a02      	ldr	r2, [pc, #8]	; (8008d7c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8008d72:	6002      	str	r2, [r0, #0]
 8008d74:	2200      	movs	r2, #0
 8008d76:	8082      	strh	r2, [r0, #4]
 8008d78:	4770      	bx	lr
 8008d7a:	bf00      	nop
 8008d7c:	0801cfe0 	.word	0x0801cfe0

08008d80 <_ZN8touchgfx9Container13getFirstChildEv>:
 8008d80:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8008d82:	4770      	bx	lr

08008d84 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8008d84:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008d86:	2000      	movs	r0, #0
 8008d88:	b12b      	cbz	r3, 8008d96 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008d8a:	b920      	cbnz	r0, 8008d96 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8008d8c:	1a5a      	subs	r2, r3, r1
 8008d8e:	4250      	negs	r0, r2
 8008d90:	4150      	adcs	r0, r2
 8008d92:	699b      	ldr	r3, [r3, #24]
 8008d94:	e7f8      	b.n	8008d88 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8008d96:	4770      	bx	lr

08008d98 <_ZN8touchgfx9Container9removeAllEv>:
 8008d98:	2200      	movs	r2, #0
 8008d9a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008d9c:	b123      	cbz	r3, 8008da8 <_ZN8touchgfx9Container9removeAllEv+0x10>
 8008d9e:	6999      	ldr	r1, [r3, #24]
 8008da0:	6281      	str	r1, [r0, #40]	; 0x28
 8008da2:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8008da6:	e7f8      	b.n	8008d9a <_ZN8touchgfx9Container9removeAllEv+0x2>
 8008da8:	4770      	bx	lr

08008daa <_ZN8touchgfx9Container6unlinkEv>:
 8008daa:	2300      	movs	r3, #0
 8008dac:	6283      	str	r3, [r0, #40]	; 0x28
 8008dae:	4770      	bx	lr

08008db0 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8008db0:	2200      	movs	r2, #0
 8008db2:	8002      	strh	r2, [r0, #0]
 8008db4:	8042      	strh	r2, [r0, #2]
 8008db6:	8082      	strh	r2, [r0, #4]
 8008db8:	80c2      	strh	r2, [r0, #6]
 8008dba:	4770      	bx	lr

08008dbc <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8008dbc:	b570      	push	{r4, r5, r6, lr}
 8008dbe:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008dc0:	460d      	mov	r5, r1
 8008dc2:	4616      	mov	r6, r2
 8008dc4:	b13c      	cbz	r4, 8008dd6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8008dc6:	6823      	ldr	r3, [r4, #0]
 8008dc8:	4620      	mov	r0, r4
 8008dca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008dcc:	4632      	mov	r2, r6
 8008dce:	4629      	mov	r1, r5
 8008dd0:	4798      	blx	r3
 8008dd2:	69a4      	ldr	r4, [r4, #24]
 8008dd4:	e7f6      	b.n	8008dc4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8008dd6:	bd70      	pop	{r4, r5, r6, pc}

08008dd8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8008dd8:	b538      	push	{r3, r4, r5, lr}
 8008dda:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008ddc:	460d      	mov	r5, r1
 8008dde:	b134      	cbz	r4, 8008dee <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8008de0:	682b      	ldr	r3, [r5, #0]
 8008de2:	4621      	mov	r1, r4
 8008de4:	689b      	ldr	r3, [r3, #8]
 8008de6:	4628      	mov	r0, r5
 8008de8:	4798      	blx	r3
 8008dea:	69a4      	ldr	r4, [r4, #24]
 8008dec:	e7f7      	b.n	8008dde <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8008dee:	bd38      	pop	{r3, r4, r5, pc}

08008df0 <_ZNK8touchgfx9Container17invalidateContentEv>:
 8008df0:	b510      	push	{r4, lr}
 8008df2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008df4:	b12c      	cbz	r4, 8008e02 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 8008df6:	6823      	ldr	r3, [r4, #0]
 8008df8:	4620      	mov	r0, r4
 8008dfa:	699b      	ldr	r3, [r3, #24]
 8008dfc:	4798      	blx	r3
 8008dfe:	69a4      	ldr	r4, [r4, #24]
 8008e00:	e7f8      	b.n	8008df4 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 8008e02:	bd10      	pop	{r4, pc}

08008e04 <_ZN8touchgfx9ContainerD1Ev>:
 8008e04:	4770      	bx	lr

08008e06 <_ZN8touchgfx9ContainerD0Ev>:
 8008e06:	b510      	push	{r4, lr}
 8008e08:	212c      	movs	r1, #44	; 0x2c
 8008e0a:	4604      	mov	r4, r0
 8008e0c:	f011 ff16 	bl	801ac3c <_ZdlPvj>
 8008e10:	4620      	mov	r0, r4
 8008e12:	bd10      	pop	{r4, pc}

08008e14 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8008e14:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008e16:	b19b      	cbz	r3, 8008e40 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008e18:	428b      	cmp	r3, r1
 8008e1a:	d109      	bne.n	8008e30 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8008e1c:	699a      	ldr	r2, [r3, #24]
 8008e1e:	2100      	movs	r1, #0
 8008e20:	6159      	str	r1, [r3, #20]
 8008e22:	6282      	str	r2, [r0, #40]	; 0x28
 8008e24:	b902      	cbnz	r2, 8008e28 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8008e26:	4770      	bx	lr
 8008e28:	6199      	str	r1, [r3, #24]
 8008e2a:	4770      	bx	lr
 8008e2c:	4613      	mov	r3, r2
 8008e2e:	b13a      	cbz	r2, 8008e40 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008e30:	699a      	ldr	r2, [r3, #24]
 8008e32:	428a      	cmp	r2, r1
 8008e34:	d1fa      	bne.n	8008e2c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8008e36:	698a      	ldr	r2, [r1, #24]
 8008e38:	619a      	str	r2, [r3, #24]
 8008e3a:	2300      	movs	r3, #0
 8008e3c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8008e40:	4770      	bx	lr

08008e42 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8008e42:	b410      	push	{r4}
 8008e44:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008e46:	4604      	mov	r4, r0
 8008e48:	b92b      	cbnz	r3, 8008e56 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8008e4a:	6803      	ldr	r3, [r0, #0]
 8008e4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008e50:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008e52:	4611      	mov	r1, r2
 8008e54:	4718      	bx	r3
 8008e56:	b941      	cbnz	r1, 8008e6a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8008e58:	6193      	str	r3, [r2, #24]
 8008e5a:	6282      	str	r2, [r0, #40]	; 0x28
 8008e5c:	6154      	str	r4, [r2, #20]
 8008e5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008e62:	4770      	bx	lr
 8008e64:	4603      	mov	r3, r0
 8008e66:	2800      	cmp	r0, #0
 8008e68:	d0f9      	beq.n	8008e5e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8008e6a:	4299      	cmp	r1, r3
 8008e6c:	6998      	ldr	r0, [r3, #24]
 8008e6e:	d1f9      	bne.n	8008e64 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8008e70:	6190      	str	r0, [r2, #24]
 8008e72:	618a      	str	r2, [r1, #24]
 8008e74:	e7f2      	b.n	8008e5c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08008e78 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8008e78:	4288      	cmp	r0, r1
 8008e7a:	b508      	push	{r3, lr}
 8008e7c:	d105      	bne.n	8008e8a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8008e7e:	4b11      	ldr	r3, [pc, #68]	; (8008ec4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8008e80:	4a11      	ldr	r2, [pc, #68]	; (8008ec8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008e82:	2120      	movs	r1, #32
 8008e84:	4811      	ldr	r0, [pc, #68]	; (8008ecc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8008e86:	f011 ff07 	bl	801ac98 <__assert_func>
 8008e8a:	694b      	ldr	r3, [r1, #20]
 8008e8c:	b11b      	cbz	r3, 8008e96 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8008e8e:	4b10      	ldr	r3, [pc, #64]	; (8008ed0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8008e90:	4a0d      	ldr	r2, [pc, #52]	; (8008ec8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008e92:	2121      	movs	r1, #33	; 0x21
 8008e94:	e7f6      	b.n	8008e84 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008e96:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8008e9a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008e9c:	b913      	cbnz	r3, 8008ea4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8008e9e:	6281      	str	r1, [r0, #40]	; 0x28
 8008ea0:	bd08      	pop	{r3, pc}
 8008ea2:	4613      	mov	r3, r2
 8008ea4:	699a      	ldr	r2, [r3, #24]
 8008ea6:	b12a      	cbz	r2, 8008eb4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8008ea8:	428b      	cmp	r3, r1
 8008eaa:	d1fa      	bne.n	8008ea2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8008eac:	4b09      	ldr	r3, [pc, #36]	; (8008ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008eae:	4a06      	ldr	r2, [pc, #24]	; (8008ec8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008eb0:	2132      	movs	r1, #50	; 0x32
 8008eb2:	e7e7      	b.n	8008e84 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008eb4:	428b      	cmp	r3, r1
 8008eb6:	d103      	bne.n	8008ec0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8008eb8:	4b06      	ldr	r3, [pc, #24]	; (8008ed4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008eba:	4a03      	ldr	r2, [pc, #12]	; (8008ec8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008ebc:	2135      	movs	r1, #53	; 0x35
 8008ebe:	e7e1      	b.n	8008e84 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008ec0:	6199      	str	r1, [r3, #24]
 8008ec2:	e7ed      	b.n	8008ea0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8008ec4:	0801d0d7 	.word	0x0801d0d7
 8008ec8:	0801d230 	.word	0x0801d230
 8008ecc:	0801d103 	.word	0x0801d103
 8008ed0:	0801d136 	.word	0x0801d136
 8008ed4:	0801d16c 	.word	0x0801d16c

08008ed8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8008ed8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008edc:	461f      	mov	r7, r3
 8008ede:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8008ee2:	460d      	mov	r5, r1
 8008ee4:	4616      	mov	r6, r2
 8008ee6:	b103      	cbz	r3, 8008eea <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8008ee8:	6038      	str	r0, [r7, #0]
 8008eea:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008eec:	b314      	cbz	r4, 8008f34 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8008eee:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008ef2:	b1eb      	cbz	r3, 8008f30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008ef4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8008ef8:	428d      	cmp	r5, r1
 8008efa:	db19      	blt.n	8008f30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008efc:	8923      	ldrh	r3, [r4, #8]
 8008efe:	b289      	uxth	r1, r1
 8008f00:	440b      	add	r3, r1
 8008f02:	b21b      	sxth	r3, r3
 8008f04:	429d      	cmp	r5, r3
 8008f06:	da13      	bge.n	8008f30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008f08:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8008f0c:	4296      	cmp	r6, r2
 8008f0e:	db0f      	blt.n	8008f30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008f10:	8963      	ldrh	r3, [r4, #10]
 8008f12:	b292      	uxth	r2, r2
 8008f14:	4413      	add	r3, r2
 8008f16:	b21b      	sxth	r3, r3
 8008f18:	429e      	cmp	r6, r3
 8008f1a:	da09      	bge.n	8008f30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008f1c:	6823      	ldr	r3, [r4, #0]
 8008f1e:	1ab2      	subs	r2, r6, r2
 8008f20:	1a69      	subs	r1, r5, r1
 8008f22:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8008f26:	b212      	sxth	r2, r2
 8008f28:	463b      	mov	r3, r7
 8008f2a:	b209      	sxth	r1, r1
 8008f2c:	4620      	mov	r0, r4
 8008f2e:	47c0      	blx	r8
 8008f30:	69a4      	ldr	r4, [r4, #24]
 8008f32:	e7db      	b.n	8008eec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8008f34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008f38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8008f38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008f3c:	4c6e      	ldr	r4, [pc, #440]	; (80090f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8008f3e:	b0a1      	sub	sp, #132	; 0x84
 8008f40:	6824      	ldr	r4, [r4, #0]
 8008f42:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8008f44:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8008f48:	9303      	str	r3, [sp, #12]
 8008f4a:	2400      	movs	r4, #0
 8008f4c:	802c      	strh	r4, [r5, #0]
 8008f4e:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8008f50:	802c      	strh	r4, [r5, #0]
 8008f52:	601c      	str	r4, [r3, #0]
 8008f54:	4606      	mov	r6, r0
 8008f56:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8008f5a:	f7ff ffbd 	bl	8008ed8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8008f5e:	f1b9 0f03 	cmp.w	r9, #3
 8008f62:	f340 80c2 	ble.w	80090ea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8008f66:	4631      	mov	r1, r6
 8008f68:	a80c      	add	r0, sp, #48	; 0x30
 8008f6a:	f004 f8f7 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8008f6e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8008f72:	9306      	str	r3, [sp, #24]
 8008f74:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8008f78:	9307      	str	r3, [sp, #28]
 8008f7a:	9b03      	ldr	r3, [sp, #12]
 8008f7c:	f8d3 a000 	ldr.w	sl, [r3]
 8008f80:	f1ba 0f00 	cmp.w	sl, #0
 8008f84:	f000 80b4 	beq.w	80090f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8008f88:	4651      	mov	r1, sl
 8008f8a:	a810      	add	r0, sp, #64	; 0x40
 8008f8c:	f004 f8e6 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8008f90:	9b01      	ldr	r3, [sp, #4]
 8008f92:	9a06      	ldr	r2, [sp, #24]
 8008f94:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8008f98:	189d      	adds	r5, r3, r2
 8008f9a:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8008f9e:	9a07      	ldr	r2, [sp, #28]
 8008fa0:	2002      	movs	r0, #2
 8008fa2:	fb91 f1f0 	sdiv	r1, r1, r0
 8008fa6:	4419      	add	r1, r3
 8008fa8:	1a6d      	subs	r5, r5, r1
 8008faa:	9b02      	ldr	r3, [sp, #8]
 8008fac:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8008fb0:	4413      	add	r3, r2
 8008fb2:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8008fb6:	fb92 f2f0 	sdiv	r2, r2, r0
 8008fba:	440a      	add	r2, r1
 8008fbc:	1a9b      	subs	r3, r3, r2
 8008fbe:	435b      	muls	r3, r3
 8008fc0:	fb05 3505 	mla	r5, r5, r5, r3
 8008fc4:	4f4d      	ldr	r7, [pc, #308]	; (80090fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8008fc6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008fc8:	ac10      	add	r4, sp, #64	; 0x40
 8008fca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008fcc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008fce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008fd0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8008fd2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008fd4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8008fd8:	f1b9 0f0c 	cmp.w	r9, #12
 8008fdc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008fe0:	f04f 0303 	mov.w	r3, #3
 8008fe4:	bfc8      	it	gt
 8008fe6:	4698      	movgt	r8, r3
 8008fe8:	f8cd 9000 	str.w	r9, [sp]
 8008fec:	f04f 0400 	mov.w	r4, #0
 8008ff0:	bfdc      	itt	le
 8008ff2:	f109 32ff 	addle.w	r2, r9, #4294967295
 8008ff6:	fb92 f8f3 	sdivle	r8, r2, r3
 8008ffa:	1c63      	adds	r3, r4, #1
 8008ffc:	aa10      	add	r2, sp, #64	; 0x40
 8008ffe:	f004 0401 	and.w	r4, r4, #1
 8009002:	9308      	str	r3, [sp, #32]
 8009004:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8009008:	9b00      	ldr	r3, [sp, #0]
 800900a:	fb93 f3f8 	sdiv	r3, r3, r8
 800900e:	b29b      	uxth	r3, r3
 8009010:	3404      	adds	r4, #4
 8009012:	f04f 0b00 	mov.w	fp, #0
 8009016:	9304      	str	r3, [sp, #16]
 8009018:	9a04      	ldr	r2, [sp, #16]
 800901a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800901e:	fb13 f302 	smulbb	r3, r3, r2
 8009022:	9a01      	ldr	r2, [sp, #4]
 8009024:	b29b      	uxth	r3, r3
 8009026:	1899      	adds	r1, r3, r2
 8009028:	9305      	str	r3, [sp, #20]
 800902a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800902e:	b209      	sxth	r1, r1
 8009030:	4299      	cmp	r1, r3
 8009032:	db4d      	blt.n	80090d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009034:	8932      	ldrh	r2, [r6, #8]
 8009036:	4413      	add	r3, r2
 8009038:	b21b      	sxth	r3, r3
 800903a:	4299      	cmp	r1, r3
 800903c:	da48      	bge.n	80090d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800903e:	9b04      	ldr	r3, [sp, #16]
 8009040:	6827      	ldr	r7, [r4, #0]
 8009042:	fb17 f703 	smulbb	r7, r7, r3
 8009046:	9b02      	ldr	r3, [sp, #8]
 8009048:	b2bf      	uxth	r7, r7
 800904a:	18fa      	adds	r2, r7, r3
 800904c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009050:	b212      	sxth	r2, r2
 8009052:	429a      	cmp	r2, r3
 8009054:	db3c      	blt.n	80090d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009056:	8970      	ldrh	r0, [r6, #10]
 8009058:	4403      	add	r3, r0
 800905a:	b21b      	sxth	r3, r3
 800905c:	429a      	cmp	r2, r3
 800905e:	da37      	bge.n	80090d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009060:	2300      	movs	r3, #0
 8009062:	930b      	str	r3, [sp, #44]	; 0x2c
 8009064:	4630      	mov	r0, r6
 8009066:	ab0b      	add	r3, sp, #44	; 0x2c
 8009068:	f7ff ff36 	bl	8008ed8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800906c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800906e:	b37a      	cbz	r2, 80090d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009070:	4552      	cmp	r2, sl
 8009072:	d02d      	beq.n	80090d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009074:	4611      	mov	r1, r2
 8009076:	a80e      	add	r0, sp, #56	; 0x38
 8009078:	9209      	str	r2, [sp, #36]	; 0x24
 800907a:	f004 f86f 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800907e:	9a06      	ldr	r2, [sp, #24]
 8009080:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8009084:	9b01      	ldr	r3, [sp, #4]
 8009086:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800908a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800908e:	4413      	add	r3, r2
 8009090:	f04f 0e02 	mov.w	lr, #2
 8009094:	fb91 f1fe 	sdiv	r1, r1, lr
 8009098:	4401      	add	r1, r0
 800909a:	1a58      	subs	r0, r3, r1
 800909c:	9a07      	ldr	r2, [sp, #28]
 800909e:	9b02      	ldr	r3, [sp, #8]
 80090a0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80090a4:	fb9c fcfe 	sdiv	ip, ip, lr
 80090a8:	4413      	add	r3, r2
 80090aa:	448c      	add	ip, r1
 80090ac:	eba3 030c 	sub.w	r3, r3, ip
 80090b0:	435b      	muls	r3, r3
 80090b2:	fb00 3300 	mla	r3, r0, r0, r3
 80090b6:	42ab      	cmp	r3, r5
 80090b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80090ba:	d208      	bcs.n	80090ce <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80090bc:	9803      	ldr	r0, [sp, #12]
 80090be:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80090c0:	6001      	str	r1, [r0, #0]
 80090c2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80090c4:	9805      	ldr	r0, [sp, #20]
 80090c6:	8008      	strh	r0, [r1, #0]
 80090c8:	992b      	ldr	r1, [sp, #172]	; 0xac
 80090ca:	461d      	mov	r5, r3
 80090cc:	800f      	strh	r7, [r1, #0]
 80090ce:	4692      	mov	sl, r2
 80090d0:	f10b 0b01 	add.w	fp, fp, #1
 80090d4:	f1bb 0f04 	cmp.w	fp, #4
 80090d8:	f104 0408 	add.w	r4, r4, #8
 80090dc:	d19c      	bne.n	8009018 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80090de:	9b00      	ldr	r3, [sp, #0]
 80090e0:	9c08      	ldr	r4, [sp, #32]
 80090e2:	444b      	add	r3, r9
 80090e4:	4544      	cmp	r4, r8
 80090e6:	9300      	str	r3, [sp, #0]
 80090e8:	d187      	bne.n	8008ffa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80090ea:	b021      	add	sp, #132	; 0x84
 80090ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80090f0:	f04f 35ff 	mov.w	r5, #4294967295
 80090f4:	e766      	b.n	8008fc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80090f6:	bf00      	nop
 80090f8:	2000a4f0 	.word	0x2000a4f0
 80090fc:	0801be10 	.word	0x0801be10

08009100 <_ZN8touchgfx4RectaNERKS0_>:
 8009100:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009104:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009108:	888c      	ldrh	r4, [r1, #4]
 800910a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800910e:	443c      	add	r4, r7
 8009110:	b2a4      	uxth	r4, r4
 8009112:	fa0f f884 	sxth.w	r8, r4
 8009116:	45c1      	cmp	r9, r8
 8009118:	da2f      	bge.n	800917a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800911a:	8882      	ldrh	r2, [r0, #4]
 800911c:	444a      	add	r2, r9
 800911e:	b292      	uxth	r2, r2
 8009120:	fa0f fe82 	sxth.w	lr, r2
 8009124:	4577      	cmp	r7, lr
 8009126:	da28      	bge.n	800917a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009128:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800912c:	88cb      	ldrh	r3, [r1, #6]
 800912e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009132:	442b      	add	r3, r5
 8009134:	b21b      	sxth	r3, r3
 8009136:	429e      	cmp	r6, r3
 8009138:	da1f      	bge.n	800917a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800913a:	88c3      	ldrh	r3, [r0, #6]
 800913c:	4433      	add	r3, r6
 800913e:	b29b      	uxth	r3, r3
 8009140:	fa0f fc83 	sxth.w	ip, r3
 8009144:	4565      	cmp	r5, ip
 8009146:	da18      	bge.n	800917a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009148:	454f      	cmp	r7, r9
 800914a:	bfb8      	it	lt
 800914c:	464f      	movlt	r7, r9
 800914e:	42b5      	cmp	r5, r6
 8009150:	bfb8      	it	lt
 8009152:	4635      	movlt	r5, r6
 8009154:	45f0      	cmp	r8, lr
 8009156:	bfd8      	it	le
 8009158:	4622      	movle	r2, r4
 800915a:	1bd2      	subs	r2, r2, r7
 800915c:	8082      	strh	r2, [r0, #4]
 800915e:	884a      	ldrh	r2, [r1, #2]
 8009160:	88c9      	ldrh	r1, [r1, #6]
 8009162:	8007      	strh	r7, [r0, #0]
 8009164:	440a      	add	r2, r1
 8009166:	b292      	uxth	r2, r2
 8009168:	b211      	sxth	r1, r2
 800916a:	458c      	cmp	ip, r1
 800916c:	bfa8      	it	ge
 800916e:	4613      	movge	r3, r2
 8009170:	1b5b      	subs	r3, r3, r5
 8009172:	80c3      	strh	r3, [r0, #6]
 8009174:	8045      	strh	r5, [r0, #2]
 8009176:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800917a:	2300      	movs	r3, #0
 800917c:	8003      	strh	r3, [r0, #0]
 800917e:	8043      	strh	r3, [r0, #2]
 8009180:	8083      	strh	r3, [r0, #4]
 8009182:	80c3      	strh	r3, [r0, #6]
 8009184:	e7f7      	b.n	8009176 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009186 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009186:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800918a:	2b00      	cmp	r3, #0
 800918c:	dd06      	ble.n	800919c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800918e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009192:	2800      	cmp	r0, #0
 8009194:	bfcc      	ite	gt
 8009196:	2000      	movgt	r0, #0
 8009198:	2001      	movle	r0, #1
 800919a:	4770      	bx	lr
 800919c:	2001      	movs	r0, #1
 800919e:	4770      	bx	lr

080091a0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80091a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80091a4:	2300      	movs	r3, #0
 80091a6:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80091a8:	8003      	strh	r3, [r0, #0]
 80091aa:	4604      	mov	r4, r0
 80091ac:	8043      	strh	r3, [r0, #2]
 80091ae:	8083      	strh	r3, [r0, #4]
 80091b0:	80c3      	strh	r3, [r0, #6]
 80091b2:	2d00      	cmp	r5, #0
 80091b4:	d040      	beq.n	8009238 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80091b6:	1d28      	adds	r0, r5, #4
 80091b8:	f7ff ffe5 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 80091bc:	b988      	cbnz	r0, 80091e2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80091be:	4620      	mov	r0, r4
 80091c0:	f7ff ffe1 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 80091c4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80091c8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80091cc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80091d0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80091d4:	b138      	cbz	r0, 80091e6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80091d6:	8022      	strh	r2, [r4, #0]
 80091d8:	8063      	strh	r3, [r4, #2]
 80091da:	f8a4 e004 	strh.w	lr, [r4, #4]
 80091de:	f8a4 c006 	strh.w	ip, [r4, #6]
 80091e2:	69ad      	ldr	r5, [r5, #24]
 80091e4:	e7e5      	b.n	80091b2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80091e6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80091ea:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80091ee:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80091f2:	4290      	cmp	r0, r2
 80091f4:	4607      	mov	r7, r0
 80091f6:	bfa8      	it	ge
 80091f8:	4617      	movge	r7, r2
 80091fa:	4472      	add	r2, lr
 80091fc:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009200:	8027      	strh	r7, [r4, #0]
 8009202:	4299      	cmp	r1, r3
 8009204:	460e      	mov	r6, r1
 8009206:	4440      	add	r0, r8
 8009208:	bfa8      	it	ge
 800920a:	461e      	movge	r6, r3
 800920c:	4471      	add	r1, lr
 800920e:	4463      	add	r3, ip
 8009210:	b200      	sxth	r0, r0
 8009212:	b212      	sxth	r2, r2
 8009214:	b209      	sxth	r1, r1
 8009216:	b21b      	sxth	r3, r3
 8009218:	4290      	cmp	r0, r2
 800921a:	bfac      	ite	ge
 800921c:	ebc7 0200 	rsbge	r2, r7, r0
 8009220:	ebc7 0202 	rsblt	r2, r7, r2
 8009224:	4299      	cmp	r1, r3
 8009226:	bfac      	ite	ge
 8009228:	ebc6 0301 	rsbge	r3, r6, r1
 800922c:	ebc6 0303 	rsblt	r3, r6, r3
 8009230:	8066      	strh	r6, [r4, #2]
 8009232:	80a2      	strh	r2, [r4, #4]
 8009234:	80e3      	strh	r3, [r4, #6]
 8009236:	e7d4      	b.n	80091e2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009238:	4620      	mov	r0, r4
 800923a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800923e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800923e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009242:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009246:	b383      	cbz	r3, 80092aa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009248:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800924a:	b374      	cbz	r4, 80092aa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800924c:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009250:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009254:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009258:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800925c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009260:	b303      	cbz	r3, 80092a4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009262:	4668      	mov	r0, sp
 8009264:	1d21      	adds	r1, r4, #4
 8009266:	f8ad 5000 	strh.w	r5, [sp]
 800926a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800926e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009272:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009276:	f7ff ff43 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 800927a:	4668      	mov	r0, sp
 800927c:	f7ff ff83 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009280:	b980      	cbnz	r0, 80092a4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009282:	f8bd 3000 	ldrh.w	r3, [sp]
 8009286:	88a2      	ldrh	r2, [r4, #4]
 8009288:	1a9b      	subs	r3, r3, r2
 800928a:	f8ad 3000 	strh.w	r3, [sp]
 800928e:	88e2      	ldrh	r2, [r4, #6]
 8009290:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009294:	1a9b      	subs	r3, r3, r2
 8009296:	f8ad 3002 	strh.w	r3, [sp, #2]
 800929a:	6823      	ldr	r3, [r4, #0]
 800929c:	4669      	mov	r1, sp
 800929e:	689b      	ldr	r3, [r3, #8]
 80092a0:	4620      	mov	r0, r4
 80092a2:	4798      	blx	r3
 80092a4:	69a4      	ldr	r4, [r4, #24]
 80092a6:	2c00      	cmp	r4, #0
 80092a8:	d1d8      	bne.n	800925c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80092aa:	b002      	add	sp, #8
 80092ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080092b0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80092b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80092b2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80092b6:	460d      	mov	r5, r1
 80092b8:	4616      	mov	r6, r2
 80092ba:	b323      	cbz	r3, 8009306 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80092bc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80092be:	b314      	cbz	r4, 8009306 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80092c0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80092c4:	b1eb      	cbz	r3, 8009302 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80092c6:	6828      	ldr	r0, [r5, #0]
 80092c8:	6869      	ldr	r1, [r5, #4]
 80092ca:	466b      	mov	r3, sp
 80092cc:	c303      	stmia	r3!, {r0, r1}
 80092ce:	4668      	mov	r0, sp
 80092d0:	1d21      	adds	r1, r4, #4
 80092d2:	f7ff ff15 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 80092d6:	4668      	mov	r0, sp
 80092d8:	f7ff ff55 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 80092dc:	b988      	cbnz	r0, 8009302 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80092de:	f8bd 3000 	ldrh.w	r3, [sp]
 80092e2:	88a2      	ldrh	r2, [r4, #4]
 80092e4:	1a9b      	subs	r3, r3, r2
 80092e6:	f8ad 3000 	strh.w	r3, [sp]
 80092ea:	88e2      	ldrh	r2, [r4, #6]
 80092ec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80092f0:	1a9b      	subs	r3, r3, r2
 80092f2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80092f6:	6823      	ldr	r3, [r4, #0]
 80092f8:	4632      	mov	r2, r6
 80092fa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80092fc:	4669      	mov	r1, sp
 80092fe:	4620      	mov	r0, r4
 8009300:	4798      	blx	r3
 8009302:	69a4      	ldr	r4, [r4, #24]
 8009304:	e7db      	b.n	80092be <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009306:	b002      	add	sp, #8
 8009308:	bd70      	pop	{r4, r5, r6, pc}

0800930a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800930a:	b513      	push	{r0, r1, r4, lr}
 800930c:	6803      	ldr	r3, [r0, #0]
 800930e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8009312:	2300      	movs	r3, #0
 8009314:	e9cd 3300 	strd	r3, r3, [sp]
 8009318:	466b      	mov	r3, sp
 800931a:	47a0      	blx	r4
 800931c:	b002      	add	sp, #8
 800931e:	bd10      	pop	{r4, pc}

08009320 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009320:	2301      	movs	r3, #1
 8009322:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009326:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800932a:	4770      	bx	lr

0800932c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800932c:	2301      	movs	r3, #1
 800932e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009332:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009336:	4770      	bx	lr

08009338 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009338:	6843      	ldr	r3, [r0, #4]
 800933a:	2201      	movs	r2, #1
 800933c:	725a      	strb	r2, [r3, #9]
 800933e:	6840      	ldr	r0, [r0, #4]
 8009340:	6803      	ldr	r3, [r0, #0]
 8009342:	691b      	ldr	r3, [r3, #16]
 8009344:	4718      	bx	r3

08009346 <_ZN8touchgfx3HAL8flushDMAEv>:
 8009346:	6840      	ldr	r0, [r0, #4]
 8009348:	6803      	ldr	r3, [r0, #0]
 800934a:	689b      	ldr	r3, [r3, #8]
 800934c:	4718      	bx	r3

0800934e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800934e:	b530      	push	{r4, r5, lr}
 8009350:	b08b      	sub	sp, #44	; 0x2c
 8009352:	6804      	ldr	r4, [r0, #0]
 8009354:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8009358:	9509      	str	r5, [sp, #36]	; 0x24
 800935a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800935e:	9508      	str	r5, [sp, #32]
 8009360:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8009364:	9507      	str	r5, [sp, #28]
 8009366:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800936a:	9506      	str	r5, [sp, #24]
 800936c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009370:	9505      	str	r5, [sp, #20]
 8009372:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009376:	9504      	str	r5, [sp, #16]
 8009378:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800937c:	9503      	str	r5, [sp, #12]
 800937e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009382:	9502      	str	r5, [sp, #8]
 8009384:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009388:	e9cd 3500 	strd	r3, r5, [sp]
 800938c:	4613      	mov	r3, r2
 800938e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8009390:	2200      	movs	r2, #0
 8009392:	47a0      	blx	r4
 8009394:	b00b      	add	sp, #44	; 0x2c
 8009396:	bd30      	pop	{r4, r5, pc}

08009398 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009398:	4b04      	ldr	r3, [pc, #16]	; (80093ac <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800939a:	781b      	ldrb	r3, [r3, #0]
 800939c:	b123      	cbz	r3, 80093a8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800939e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 80093a2:	f080 0001 	eor.w	r0, r0, #1
 80093a6:	4770      	bx	lr
 80093a8:	2001      	movs	r0, #1
 80093aa:	4770      	bx	lr
 80093ac:	2000a4ee 	.word	0x2000a4ee

080093b0 <_ZN8touchgfx3HAL8endFrameEv>:
 80093b0:	b510      	push	{r4, lr}
 80093b2:	4604      	mov	r4, r0
 80093b4:	6840      	ldr	r0, [r0, #4]
 80093b6:	6803      	ldr	r3, [r0, #0]
 80093b8:	689b      	ldr	r3, [r3, #8]
 80093ba:	4798      	blx	r3
 80093bc:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 80093c0:	b113      	cbz	r3, 80093c8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80093c2:	2301      	movs	r3, #1
 80093c4:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80093c8:	bd10      	pop	{r4, pc}

080093ca <_ZN8touchgfx3HAL10initializeEv>:
 80093ca:	b510      	push	{r4, lr}
 80093cc:	4604      	mov	r4, r0
 80093ce:	f7f7 fc87 	bl	8000ce0 <_ZN8touchgfx10OSWrappers10initializeEv>
 80093d2:	6860      	ldr	r0, [r4, #4]
 80093d4:	6803      	ldr	r3, [r0, #0]
 80093d6:	68db      	ldr	r3, [r3, #12]
 80093d8:	4798      	blx	r3
 80093da:	68e0      	ldr	r0, [r4, #12]
 80093dc:	6803      	ldr	r3, [r0, #0]
 80093de:	689b      	ldr	r3, [r3, #8]
 80093e0:	4798      	blx	r3
 80093e2:	6823      	ldr	r3, [r4, #0]
 80093e4:	4620      	mov	r0, r4
 80093e6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80093e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80093ec:	4718      	bx	r3
	...

080093f0 <_ZN8touchgfx3HAL4tickEv>:
 80093f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80093f2:	6803      	ldr	r3, [r0, #0]
 80093f4:	4d5b      	ldr	r5, [pc, #364]	; (8009564 <_ZN8touchgfx3HAL4tickEv+0x174>)
 80093f6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80093fa:	4604      	mov	r4, r0
 80093fc:	4798      	blx	r3
 80093fe:	2800      	cmp	r0, #0
 8009400:	f000 8095 	beq.w	800952e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8009404:	2001      	movs	r0, #1
 8009406:	f7f7 f9ab 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800940a:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800940e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009412:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8009416:	2600      	movs	r6, #0
 8009418:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800941c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009420:	b133      	cbz	r3, 8009430 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009422:	6823      	ldr	r3, [r4, #0]
 8009424:	4620      	mov	r0, r4
 8009426:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800942a:	4798      	blx	r3
 800942c:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009430:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009434:	6862      	ldr	r2, [r4, #4]
 8009436:	f083 0301 	eor.w	r3, r3, #1
 800943a:	7253      	strb	r3, [r2, #9]
 800943c:	2601      	movs	r6, #1
 800943e:	702e      	strb	r6, [r5, #0]
 8009440:	f002 fe64 	bl	800c10c <_ZN8touchgfx11Application11getInstanceEv>
 8009444:	6803      	ldr	r3, [r0, #0]
 8009446:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009448:	4798      	blx	r3
 800944a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800944e:	b90b      	cbnz	r3, 8009454 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009450:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8009454:	f002 fe5a 	bl	800c10c <_ZN8touchgfx11Application11getInstanceEv>
 8009458:	6803      	ldr	r3, [r0, #0]
 800945a:	695b      	ldr	r3, [r3, #20]
 800945c:	4798      	blx	r3
 800945e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009460:	6803      	ldr	r3, [r0, #0]
 8009462:	691b      	ldr	r3, [r3, #16]
 8009464:	4798      	blx	r3
 8009466:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800946a:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800946e:	3b01      	subs	r3, #1
 8009470:	b2db      	uxtb	r3, r3
 8009472:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009476:	b10a      	cbz	r2, 800947c <_ZN8touchgfx3HAL4tickEv+0x8c>
 8009478:	2b00      	cmp	r3, #0
 800947a:	d1eb      	bne.n	8009454 <_ZN8touchgfx3HAL4tickEv+0x64>
 800947c:	4a3a      	ldr	r2, [pc, #232]	; (8009568 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800947e:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009482:	7813      	ldrb	r3, [r2, #0]
 8009484:	3301      	adds	r3, #1
 8009486:	b25b      	sxtb	r3, r3
 8009488:	4299      	cmp	r1, r3
 800948a:	7013      	strb	r3, [r2, #0]
 800948c:	dc10      	bgt.n	80094b0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800948e:	68e0      	ldr	r0, [r4, #12]
 8009490:	2300      	movs	r3, #0
 8009492:	7013      	strb	r3, [r2, #0]
 8009494:	6803      	ldr	r3, [r0, #0]
 8009496:	aa03      	add	r2, sp, #12
 8009498:	68db      	ldr	r3, [r3, #12]
 800949a:	a902      	add	r1, sp, #8
 800949c:	4798      	blx	r3
 800949e:	6823      	ldr	r3, [r4, #0]
 80094a0:	2800      	cmp	r0, #0
 80094a2:	d050      	beq.n	8009546 <_ZN8touchgfx3HAL4tickEv+0x156>
 80094a4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80094a8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80094ac:	4620      	mov	r0, r4
 80094ae:	4798      	blx	r3
 80094b0:	6960      	ldr	r0, [r4, #20]
 80094b2:	2300      	movs	r3, #0
 80094b4:	f88d 3007 	strb.w	r3, [sp, #7]
 80094b8:	b158      	cbz	r0, 80094d2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80094ba:	6803      	ldr	r3, [r0, #0]
 80094bc:	f10d 0107 	add.w	r1, sp, #7
 80094c0:	68db      	ldr	r3, [r3, #12]
 80094c2:	4798      	blx	r3
 80094c4:	b128      	cbz	r0, 80094d2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 80094c6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80094c8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80094cc:	6803      	ldr	r3, [r0, #0]
 80094ce:	68db      	ldr	r3, [r3, #12]
 80094d0:	4798      	blx	r3
 80094d2:	f104 001c 	add.w	r0, r4, #28
 80094d6:	f011 fadd 	bl	801aa94 <_ZN8touchgfx8Gestures4tickEv>
 80094da:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 80094de:	b30b      	cbz	r3, 8009524 <_ZN8touchgfx3HAL4tickEv+0x134>
 80094e0:	6920      	ldr	r0, [r4, #16]
 80094e2:	6803      	ldr	r3, [r0, #0]
 80094e4:	691b      	ldr	r3, [r3, #16]
 80094e6:	4798      	blx	r3
 80094e8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80094ea:	4606      	mov	r6, r0
 80094ec:	b903      	cbnz	r3, 80094f0 <_ZN8touchgfx3HAL4tickEv+0x100>
 80094ee:	6720      	str	r0, [r4, #112]	; 0x70
 80094f0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80094f2:	4a1e      	ldr	r2, [pc, #120]	; (800956c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80094f4:	1af3      	subs	r3, r6, r3
 80094f6:	4293      	cmp	r3, r2
 80094f8:	d914      	bls.n	8009524 <_ZN8touchgfx3HAL4tickEv+0x134>
 80094fa:	6920      	ldr	r0, [r4, #16]
 80094fc:	6803      	ldr	r3, [r0, #0]
 80094fe:	699b      	ldr	r3, [r3, #24]
 8009500:	4798      	blx	r3
 8009502:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009504:	2264      	movs	r2, #100	; 0x64
 8009506:	1af3      	subs	r3, r6, r3
 8009508:	fbb3 f3f2 	udiv	r3, r3, r2
 800950c:	fbb0 f0f3 	udiv	r0, r0, r3
 8009510:	2800      	cmp	r0, #0
 8009512:	dc1d      	bgt.n	8009550 <_ZN8touchgfx3HAL4tickEv+0x160>
 8009514:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8009518:	6920      	ldr	r0, [r4, #16]
 800951a:	6803      	ldr	r3, [r0, #0]
 800951c:	2100      	movs	r1, #0
 800951e:	69db      	ldr	r3, [r3, #28]
 8009520:	4798      	blx	r3
 8009522:	6726      	str	r6, [r4, #112]	; 0x70
 8009524:	f002 fdf2 	bl	800c10c <_ZN8touchgfx11Application11getInstanceEv>
 8009528:	6803      	ldr	r3, [r0, #0]
 800952a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800952c:	4798      	blx	r3
 800952e:	6823      	ldr	r3, [r4, #0]
 8009530:	4620      	mov	r0, r4
 8009532:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009536:	4798      	blx	r3
 8009538:	2001      	movs	r0, #1
 800953a:	f7f7 f937 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800953e:	2300      	movs	r3, #0
 8009540:	702b      	strb	r3, [r5, #0]
 8009542:	b004      	add	sp, #16
 8009544:	bd70      	pop	{r4, r5, r6, pc}
 8009546:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800954a:	4620      	mov	r0, r4
 800954c:	4798      	blx	r3
 800954e:	e7af      	b.n	80094b0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009550:	2863      	cmp	r0, #99	; 0x63
 8009552:	bfcb      	itete	gt
 8009554:	2300      	movgt	r3, #0
 8009556:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800955a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800955e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009562:	e7d9      	b.n	8009518 <_ZN8touchgfx3HAL4tickEv+0x128>
 8009564:	2000a4f4 	.word	0x2000a4f4
 8009568:	2000a4f5 	.word	0x2000a4f5
 800956c:	05f5e100 	.word	0x05f5e100

08009570 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009570:	f7f7 bbe6 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009574 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009574:	6581      	str	r1, [r0, #88]	; 0x58
 8009576:	301c      	adds	r0, #28
 8009578:	f011 ba8a 	b.w	801aa90 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800957c <_ZN8touchgfx3HAL5touchEll>:
 800957c:	b530      	push	{r4, r5, lr}
 800957e:	b087      	sub	sp, #28
 8009580:	4604      	mov	r4, r0
 8009582:	a804      	add	r0, sp, #16
 8009584:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009588:	f002 fb1e 	bl	800bbc8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800958c:	9b04      	ldr	r3, [sp, #16]
 800958e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009592:	a906      	add	r1, sp, #24
 8009594:	9b05      	ldr	r3, [sp, #20]
 8009596:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800959a:	a803      	add	r0, sp, #12
 800959c:	f002 fb66 	bl	800bc6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80095a0:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 80095a4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80095a8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80095ac:	f104 001c 	add.w	r0, r4, #28
 80095b0:	b189      	cbz	r1, 80095d6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 80095b2:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 80095b6:	9300      	str	r3, [sp, #0]
 80095b8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80095bc:	4613      	mov	r3, r2
 80095be:	462a      	mov	r2, r5
 80095c0:	f011 fa76 	bl	801aab0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80095c4:	b128      	cbz	r0, 80095d2 <_ZN8touchgfx3HAL5touchEll+0x56>
 80095c6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80095ca:	65e3      	str	r3, [r4, #92]	; 0x5c
 80095cc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80095d0:	6623      	str	r3, [r4, #96]	; 0x60
 80095d2:	b007      	add	sp, #28
 80095d4:	bd30      	pop	{r4, r5, pc}
 80095d6:	f011 faab 	bl	801ab30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80095da:	2301      	movs	r3, #1
 80095dc:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80095e0:	e7f1      	b.n	80095c6 <_ZN8touchgfx3HAL5touchEll+0x4a>

080095e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80095e2:	b510      	push	{r4, lr}
 80095e4:	2b00      	cmp	r3, #0
 80095e6:	d046      	beq.n	8009676 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80095e8:	ea81 0002 	eor.w	r0, r1, r2
 80095ec:	07c4      	lsls	r4, r0, #31
 80095ee:	d508      	bpl.n	8009602 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80095f0:	440b      	add	r3, r1
 80095f2:	3a01      	subs	r2, #1
 80095f4:	428b      	cmp	r3, r1
 80095f6:	d93e      	bls.n	8009676 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80095f8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80095fc:	f801 0b01 	strb.w	r0, [r1], #1
 8009600:	e7f8      	b.n	80095f4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009602:	07d0      	lsls	r0, r2, #31
 8009604:	bf42      	ittt	mi
 8009606:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800960a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800960e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009612:	2b01      	cmp	r3, #1
 8009614:	d911      	bls.n	800963a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009616:	ea81 0402 	eor.w	r4, r1, r2
 800961a:	07a4      	lsls	r4, r4, #30
 800961c:	4610      	mov	r0, r2
 800961e:	d022      	beq.n	8009666 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009620:	f023 0401 	bic.w	r4, r3, #1
 8009624:	440c      	add	r4, r1
 8009626:	428c      	cmp	r4, r1
 8009628:	4602      	mov	r2, r0
 800962a:	d904      	bls.n	8009636 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800962c:	8812      	ldrh	r2, [r2, #0]
 800962e:	f821 2b02 	strh.w	r2, [r1], #2
 8009632:	3002      	adds	r0, #2
 8009634:	e7f7      	b.n	8009626 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009636:	f003 0301 	and.w	r3, r3, #1
 800963a:	f023 0003 	bic.w	r0, r3, #3
 800963e:	4408      	add	r0, r1
 8009640:	4288      	cmp	r0, r1
 8009642:	4614      	mov	r4, r2
 8009644:	d904      	bls.n	8009650 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009646:	6824      	ldr	r4, [r4, #0]
 8009648:	f841 4b04 	str.w	r4, [r1], #4
 800964c:	3204      	adds	r2, #4
 800964e:	e7f7      	b.n	8009640 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009650:	f003 0303 	and.w	r3, r3, #3
 8009654:	440b      	add	r3, r1
 8009656:	3a01      	subs	r2, #1
 8009658:	428b      	cmp	r3, r1
 800965a:	d90c      	bls.n	8009676 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800965c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009660:	f801 0b01 	strb.w	r0, [r1], #1
 8009664:	e7f8      	b.n	8009658 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009666:	0790      	lsls	r0, r2, #30
 8009668:	d0e7      	beq.n	800963a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800966a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800966e:	f821 0b02 	strh.w	r0, [r1], #2
 8009672:	3b02      	subs	r3, #2
 8009674:	e7e1      	b.n	800963a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009676:	2001      	movs	r0, #1
 8009678:	bd10      	pop	{r4, pc}

0800967a <_ZN8touchgfx3HAL7noTouchEv>:
 800967a:	b510      	push	{r4, lr}
 800967c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009680:	4604      	mov	r4, r0
 8009682:	b153      	cbz	r3, 800969a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009684:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009688:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800968c:	2101      	movs	r1, #1
 800968e:	301c      	adds	r0, #28
 8009690:	f011 fa4e 	bl	801ab30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009694:	2300      	movs	r3, #0
 8009696:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800969a:	bd10      	pop	{r4, pc}

0800969c <_ZN8touchgfx3HAL3lcdEv>:
 800969c:	4b04      	ldr	r3, [pc, #16]	; (80096b0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800969e:	681b      	ldr	r3, [r3, #0]
 80096a0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80096a4:	b10a      	cbz	r2, 80096aa <_ZN8touchgfx3HAL3lcdEv+0xe>
 80096a6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80096a8:	b900      	cbnz	r0, 80096ac <_ZN8touchgfx3HAL3lcdEv+0x10>
 80096aa:	6898      	ldr	r0, [r3, #8]
 80096ac:	4770      	bx	lr
 80096ae:	bf00      	nop
 80096b0:	2000a4f0 	.word	0x2000a4f0

080096b4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80096b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80096b8:	4604      	mov	r4, r0
 80096ba:	6980      	ldr	r0, [r0, #24]
 80096bc:	b085      	sub	sp, #20
 80096be:	460f      	mov	r7, r1
 80096c0:	4690      	mov	r8, r2
 80096c2:	4699      	mov	r9, r3
 80096c4:	b930      	cbnz	r0, 80096d4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 80096c6:	4b1c      	ldr	r3, [pc, #112]	; (8009738 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 80096c8:	4a1c      	ldr	r2, [pc, #112]	; (800973c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80096ca:	f44f 719f 	mov.w	r1, #318	; 0x13e
 80096ce:	481c      	ldr	r0, [pc, #112]	; (8009740 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 80096d0:	f011 fae2 	bl	801ac98 <__assert_func>
 80096d4:	ad04      	add	r5, sp, #16
 80096d6:	2600      	movs	r6, #0
 80096d8:	f845 6d04 	str.w	r6, [r5, #-4]!
 80096dc:	6806      	ldr	r6, [r0, #0]
 80096de:	9501      	str	r5, [sp, #4]
 80096e0:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80096e4:	9500      	str	r5, [sp, #0]
 80096e6:	6835      	ldr	r5, [r6, #0]
 80096e8:	47a8      	blx	r5
 80096ea:	4d16      	ldr	r5, [pc, #88]	; (8009744 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 80096ec:	4606      	mov	r6, r0
 80096ee:	f8a5 9000 	strh.w	r9, [r5]
 80096f2:	f7ff ffd3 	bl	800969c <_ZN8touchgfx3HAL3lcdEv>
 80096f6:	6803      	ldr	r3, [r0, #0]
 80096f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80096fa:	4798      	blx	r3
 80096fc:	2801      	cmp	r0, #1
 80096fe:	d012      	beq.n	8009726 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 8009700:	d306      	bcc.n	8009710 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 8009702:	280d      	cmp	r0, #13
 8009704:	d80b      	bhi.n	800971e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009706:	4b10      	ldr	r3, [pc, #64]	; (8009748 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8009708:	4a0c      	ldr	r2, [pc, #48]	; (800973c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800970a:	f240 115b 	movw	r1, #347	; 0x15b
 800970e:	e7de      	b.n	80096ce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8009710:	882b      	ldrh	r3, [r5, #0]
 8009712:	fb08 7203 	mla	r2, r8, r3, r7
 8009716:	9b03      	ldr	r3, [sp, #12]
 8009718:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800971c:	63e3      	str	r3, [r4, #60]	; 0x3c
 800971e:	4630      	mov	r0, r6
 8009720:	b005      	add	sp, #20
 8009722:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009726:	882a      	ldrh	r2, [r5, #0]
 8009728:	9b03      	ldr	r3, [sp, #12]
 800972a:	fb08 7202 	mla	r2, r8, r2, r7
 800972e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009732:	1a9a      	subs	r2, r3, r2
 8009734:	63e2      	str	r2, [r4, #60]	; 0x3c
 8009736:	e7f2      	b.n	800971e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8009738:	0801d3d1 	.word	0x0801d3d1
 800973c:	0801d68f 	.word	0x0801d68f
 8009740:	0801d416 	.word	0x0801d416
 8009744:	2000a4ea 	.word	0x2000a4ea
 8009748:	0801d43c 	.word	0x0801d43c

0800974c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800974c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800974e:	b08b      	sub	sp, #44	; 0x2c
 8009750:	4617      	mov	r7, r2
 8009752:	4604      	mov	r4, r0
 8009754:	460e      	mov	r6, r1
 8009756:	461d      	mov	r5, r3
 8009758:	f7ff ffa0 	bl	800969c <_ZN8touchgfx3HAL3lcdEv>
 800975c:	6803      	ldr	r3, [r0, #0]
 800975e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009760:	4798      	blx	r3
 8009762:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009766:	9007      	str	r0, [sp, #28]
 8009768:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800976c:	4b0d      	ldr	r3, [pc, #52]	; (80097a4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800976e:	6822      	ldr	r2, [r4, #0]
 8009770:	881b      	ldrh	r3, [r3, #0]
 8009772:	9306      	str	r3, [sp, #24]
 8009774:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009778:	9305      	str	r3, [sp, #20]
 800977a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800977e:	9304      	str	r3, [sp, #16]
 8009780:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009784:	9303      	str	r3, [sp, #12]
 8009786:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800978a:	9302      	str	r3, [sp, #8]
 800978c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009790:	e9cd 5300 	strd	r5, r3, [sp]
 8009794:	4631      	mov	r1, r6
 8009796:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8009798:	463b      	mov	r3, r7
 800979a:	2200      	movs	r2, #0
 800979c:	4620      	mov	r0, r4
 800979e:	47a8      	blx	r5
 80097a0:	b00b      	add	sp, #44	; 0x2c
 80097a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80097a4:	2000a4ea 	.word	0x2000a4ea

080097a8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80097a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80097ac:	4698      	mov	r8, r3
 80097ae:	6803      	ldr	r3, [r0, #0]
 80097b0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80097b2:	4b15      	ldr	r3, [pc, #84]	; (8009808 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80097b4:	b08b      	sub	sp, #44	; 0x2c
 80097b6:	4617      	mov	r7, r2
 80097b8:	f8b3 9000 	ldrh.w	r9, [r3]
 80097bc:	460e      	mov	r6, r1
 80097be:	4604      	mov	r4, r0
 80097c0:	f7ff ff6c 	bl	800969c <_ZN8touchgfx3HAL3lcdEv>
 80097c4:	6803      	ldr	r3, [r0, #0]
 80097c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80097c8:	4798      	blx	r3
 80097ca:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80097ce:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80097d2:	2302      	movs	r3, #2
 80097d4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80097d8:	2301      	movs	r3, #1
 80097da:	9305      	str	r3, [sp, #20]
 80097dc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80097e0:	9304      	str	r3, [sp, #16]
 80097e2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80097e6:	9303      	str	r3, [sp, #12]
 80097e8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80097ec:	9302      	str	r3, [sp, #8]
 80097ee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80097f2:	2200      	movs	r2, #0
 80097f4:	e9cd 8300 	strd	r8, r3, [sp]
 80097f8:	4631      	mov	r1, r6
 80097fa:	463b      	mov	r3, r7
 80097fc:	4620      	mov	r0, r4
 80097fe:	47a8      	blx	r5
 8009800:	b00b      	add	sp, #44	; 0x2c
 8009802:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009806:	bf00      	nop
 8009808:	2000a4ea 	.word	0x2000a4ea

0800980c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800980c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009810:	4698      	mov	r8, r3
 8009812:	6803      	ldr	r3, [r0, #0]
 8009814:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8009816:	4b11      	ldr	r3, [pc, #68]	; (800985c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009818:	b087      	sub	sp, #28
 800981a:	f8b3 9000 	ldrh.w	r9, [r3]
 800981e:	460e      	mov	r6, r1
 8009820:	4617      	mov	r7, r2
 8009822:	4604      	mov	r4, r0
 8009824:	f7ff ff3a 	bl	800969c <_ZN8touchgfx3HAL3lcdEv>
 8009828:	6803      	ldr	r3, [r0, #0]
 800982a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800982c:	4798      	blx	r3
 800982e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8009832:	f8cd 900c 	str.w	r9, [sp, #12]
 8009836:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800983a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800983e:	9302      	str	r3, [sp, #8]
 8009840:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009844:	9301      	str	r3, [sp, #4]
 8009846:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800984a:	9300      	str	r3, [sp, #0]
 800984c:	463a      	mov	r2, r7
 800984e:	4643      	mov	r3, r8
 8009850:	4631      	mov	r1, r6
 8009852:	4620      	mov	r0, r4
 8009854:	47a8      	blx	r5
 8009856:	b007      	add	sp, #28
 8009858:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800985c:	2000a4ea 	.word	0x2000a4ea

08009860 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009864:	4604      	mov	r4, r0
 8009866:	b08f      	sub	sp, #60	; 0x3c
 8009868:	4610      	mov	r0, r2
 800986a:	460d      	mov	r5, r1
 800986c:	4691      	mov	r9, r2
 800986e:	461e      	mov	r6, r3
 8009870:	f005 f800 	bl	800e874 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009874:	2800      	cmp	r0, #0
 8009876:	f000 809c 	beq.w	80099b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x152>
 800987a:	6823      	ldr	r3, [r4, #0]
 800987c:	f8df b194 	ldr.w	fp, [pc, #404]	; 8009a14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8009880:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009882:	f8df a194 	ldr.w	sl, [pc, #404]	; 8009a18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009886:	4f60      	ldr	r7, [pc, #384]	; (8009a08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009888:	4620      	mov	r0, r4
 800988a:	4798      	blx	r3
 800988c:	6823      	ldr	r3, [r4, #0]
 800988e:	4620      	mov	r0, r4
 8009890:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009892:	4798      	blx	r3
 8009894:	f8bb 3000 	ldrh.w	r3, [fp]
 8009898:	9301      	str	r3, [sp, #4]
 800989a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800989e:	f8ba 3000 	ldrh.w	r3, [sl]
 80098a2:	9302      	str	r3, [sp, #8]
 80098a4:	883b      	ldrh	r3, [r7, #0]
 80098a6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80098aa:	9303      	str	r3, [sp, #12]
 80098ac:	4b57      	ldr	r3, [pc, #348]	; (8009a0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80098ae:	9305      	str	r3, [sp, #20]
 80098b0:	881a      	ldrh	r2, [r3, #0]
 80098b2:	9204      	str	r2, [sp, #16]
 80098b4:	4640      	mov	r0, r8
 80098b6:	f005 f88d 	bl	800e9d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80098ba:	8038      	strh	r0, [r7, #0]
 80098bc:	4640      	mov	r0, r8
 80098be:	f005 f8cd 	bl	800ea5c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80098c2:	9b05      	ldr	r3, [sp, #20]
 80098c4:	8018      	strh	r0, [r3, #0]
 80098c6:	4b52      	ldr	r3, [pc, #328]	; (8009a10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80098c8:	781b      	ldrb	r3, [r3, #0]
 80098ca:	2b00      	cmp	r3, #0
 80098cc:	d174      	bne.n	80099b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 80098ce:	883b      	ldrh	r3, [r7, #0]
 80098d0:	f8ab 3000 	strh.w	r3, [fp]
 80098d4:	f8aa 0000 	strh.w	r0, [sl]
 80098d8:	4648      	mov	r0, r9
 80098da:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80098de:	f004 ffc9 	bl	800e874 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80098e2:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80098e6:	2200      	movs	r2, #0
 80098e8:	4611      	mov	r1, r2
 80098ea:	4628      	mov	r0, r5
 80098ec:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80098f0:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80098f4:	f7f8 fde1 	bl	80024ba <_ZN8touchgfx8Drawable5setXYEss>
 80098f8:	2301      	movs	r3, #1
 80098fa:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80098fe:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009902:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009906:	2b00      	cmp	r3, #0
 8009908:	dd5c      	ble.n	80099c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 800990a:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800990e:	2b00      	cmp	r3, #0
 8009910:	dd58      	ble.n	80099c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x164>
 8009912:	462a      	mov	r2, r5
 8009914:	ab0a      	add	r3, sp, #40	; 0x28
 8009916:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800991a:	6851      	ldr	r1, [r2, #4]
 800991c:	c303      	stmia	r3!, {r0, r1}
 800991e:	4631      	mov	r1, r6
 8009920:	a80a      	add	r0, sp, #40	; 0x28
 8009922:	f7ff fbed 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 8009926:	4b38      	ldr	r3, [pc, #224]	; (8009a08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009928:	f9b3 2000 	ldrsh.w	r2, [r3]
 800992c:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8009930:	2100      	movs	r1, #0
 8009932:	aa0a      	add	r2, sp, #40	; 0x28
 8009934:	4b35      	ldr	r3, [pc, #212]	; (8009a0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009936:	910c      	str	r1, [sp, #48]	; 0x30
 8009938:	e892 0003 	ldmia.w	r2, {r0, r1}
 800993c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009940:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8009944:	ab08      	add	r3, sp, #32
 8009946:	e883 0003 	stmia.w	r3, {r0, r1}
 800994a:	4618      	mov	r0, r3
 800994c:	a90c      	add	r1, sp, #48	; 0x30
 800994e:	f7ff fbd7 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 8009952:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009954:	2b00      	cmp	r3, #0
 8009956:	d13c      	bne.n	80099d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x172>
 8009958:	2000      	movs	r0, #0
 800995a:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800995e:	2600      	movs	r6, #0
 8009960:	682a      	ldr	r2, [r5, #0]
 8009962:	696b      	ldr	r3, [r5, #20]
 8009964:	616e      	str	r6, [r5, #20]
 8009966:	9305      	str	r3, [sp, #20]
 8009968:	6892      	ldr	r2, [r2, #8]
 800996a:	a908      	add	r1, sp, #32
 800996c:	4628      	mov	r0, r5
 800996e:	4790      	blx	r2
 8009970:	9b05      	ldr	r3, [sp, #20]
 8009972:	616b      	str	r3, [r5, #20]
 8009974:	4652      	mov	r2, sl
 8009976:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800997a:	4649      	mov	r1, r9
 800997c:	4628      	mov	r0, r5
 800997e:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8009982:	f7f8 fd9a 	bl	80024ba <_ZN8touchgfx8Drawable5setXYEss>
 8009986:	4b23      	ldr	r3, [pc, #140]	; (8009a14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009988:	9a01      	ldr	r2, [sp, #4]
 800998a:	801a      	strh	r2, [r3, #0]
 800998c:	4b22      	ldr	r3, [pc, #136]	; (8009a18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800998e:	9a02      	ldr	r2, [sp, #8]
 8009990:	801a      	strh	r2, [r3, #0]
 8009992:	4b1d      	ldr	r3, [pc, #116]	; (8009a08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009994:	9a03      	ldr	r2, [sp, #12]
 8009996:	801a      	strh	r2, [r3, #0]
 8009998:	4b1c      	ldr	r3, [pc, #112]	; (8009a0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800999a:	9a04      	ldr	r2, [sp, #16]
 800999c:	801a      	strh	r2, [r3, #0]
 800999e:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80099a2:	6823      	ldr	r3, [r4, #0]
 80099a4:	4620      	mov	r0, r4
 80099a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80099a8:	4798      	blx	r3
 80099aa:	6823      	ldr	r3, [r4, #0]
 80099ac:	4620      	mov	r0, r4
 80099ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80099b0:	4798      	blx	r3
 80099b2:	b00f      	add	sp, #60	; 0x3c
 80099b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80099b8:	883b      	ldrh	r3, [r7, #0]
 80099ba:	f8ab 0000 	strh.w	r0, [fp]
 80099be:	f8aa 3000 	strh.w	r3, [sl]
 80099c2:	e789      	b.n	80098d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x78>
 80099c4:	462a      	mov	r2, r5
 80099c6:	ab0a      	add	r3, sp, #40	; 0x28
 80099c8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80099cc:	6851      	ldr	r1, [r2, #4]
 80099ce:	c303      	stmia	r3!, {r0, r1}
 80099d0:	e7a9      	b.n	8009926 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc6>
 80099d2:	a807      	add	r0, sp, #28
 80099d4:	f005 f9a4 	bl	800ed20 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80099d8:	4606      	mov	r6, r0
 80099da:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80099dc:	6803      	ldr	r3, [r0, #0]
 80099de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80099e0:	4798      	blx	r3
 80099e2:	4286      	cmp	r6, r0
 80099e4:	d1b8      	bne.n	8009958 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xf8>
 80099e6:	f7ff fe59 	bl	800969c <_ZN8touchgfx3HAL3lcdEv>
 80099ea:	6803      	ldr	r3, [r0, #0]
 80099ec:	4606      	mov	r6, r0
 80099ee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80099f0:	9305      	str	r3, [sp, #20]
 80099f2:	a807      	add	r0, sp, #28
 80099f4:	f005 f994 	bl	800ed20 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80099f8:	9b05      	ldr	r3, [sp, #20]
 80099fa:	4601      	mov	r1, r0
 80099fc:	4630      	mov	r0, r6
 80099fe:	4798      	blx	r3
 8009a00:	f080 0001 	eor.w	r0, r0, #1
 8009a04:	b2c0      	uxtb	r0, r0
 8009a06:	e7a8      	b.n	800995a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8009a08:	2000a4e4 	.word	0x2000a4e4
 8009a0c:	2000a4e6 	.word	0x2000a4e6
 8009a10:	2000a4e8 	.word	0x2000a4e8
 8009a14:	2000a4ea 	.word	0x2000a4ea
 8009a18:	2000a4ec 	.word	0x2000a4ec

08009a1c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009a1c:	b510      	push	{r4, lr}
 8009a1e:	4b07      	ldr	r3, [pc, #28]	; (8009a3c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009a20:	781b      	ldrb	r3, [r3, #0]
 8009a22:	4604      	mov	r4, r0
 8009a24:	b13b      	cbz	r3, 8009a36 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009a26:	6803      	ldr	r3, [r0, #0]
 8009a28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009a2a:	4798      	blx	r3
 8009a2c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009a2e:	4283      	cmp	r3, r0
 8009a30:	d101      	bne.n	8009a36 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009a32:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009a34:	bd10      	pop	{r4, pc}
 8009a36:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009a38:	e7fc      	b.n	8009a34 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009a3a:	bf00      	nop
 8009a3c:	2000a4ee 	.word	0x2000a4ee

08009a40 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8009a40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a44:	b08a      	sub	sp, #40	; 0x28
 8009a46:	461d      	mov	r5, r3
 8009a48:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009a4c:	2400      	movs	r4, #0
 8009a4e:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 8009a52:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8009a56:	f8bd 9054 	ldrh.w	r9, [sp, #84]	; 0x54
 8009a5a:	9404      	str	r4, [sp, #16]
 8009a5c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009a60:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009a64:	f8ad 8018 	strh.w	r8, [sp, #24]
 8009a68:	4692      	mov	sl, r2
 8009a6a:	4606      	mov	r6, r0
 8009a6c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8009a70:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009a74:	f88d 4020 	strb.w	r4, [sp, #32]
 8009a78:	f7ff ffd0 	bl	8009a1c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009a7c:	fb09 a505 	mla	r5, r9, r5, sl
 8009a80:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009a84:	9505      	str	r5, [sp, #20]
 8009a86:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009a8a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8009a8e:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8009a92:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8009a96:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8009a9a:	f1b8 0f00 	cmp.w	r8, #0
 8009a9e:	d000      	beq.n	8009aa2 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 8009aa0:	b937      	cbnz	r7, 8009ab0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x70>
 8009aa2:	4b0d      	ldr	r3, [pc, #52]	; (8009ad8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 8009aa4:	4a0d      	ldr	r2, [pc, #52]	; (8009adc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009aa6:	f240 2102 	movw	r1, #514	; 0x202
 8009aaa:	480d      	ldr	r0, [pc, #52]	; (8009ae0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa0>)
 8009aac:	f011 f8f4 	bl	801ac98 <__assert_func>
 8009ab0:	6833      	ldr	r3, [r6, #0]
 8009ab2:	9c01      	ldr	r4, [sp, #4]
 8009ab4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ab6:	4630      	mov	r0, r6
 8009ab8:	4798      	blx	r3
 8009aba:	4220      	tst	r0, r4
 8009abc:	d104      	bne.n	8009ac8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x88>
 8009abe:	4b09      	ldr	r3, [pc, #36]	; (8009ae4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0xa4>)
 8009ac0:	4a06      	ldr	r2, [pc, #24]	; (8009adc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009ac2:	f240 2103 	movw	r1, #515	; 0x203
 8009ac6:	e7f0      	b.n	8009aaa <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x6a>
 8009ac8:	6870      	ldr	r0, [r6, #4]
 8009aca:	6803      	ldr	r3, [r0, #0]
 8009acc:	a901      	add	r1, sp, #4
 8009ace:	685b      	ldr	r3, [r3, #4]
 8009ad0:	4798      	blx	r3
 8009ad2:	b00a      	add	sp, #40	; 0x28
 8009ad4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009ad8:	0801d26b 	.word	0x0801d26b
 8009adc:	0801d4c4 	.word	0x0801d4c4
 8009ae0:	0801d416 	.word	0x0801d416
 8009ae4:	0801d2a3 	.word	0x0801d2a3

08009ae8 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8009ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009aec:	b08b      	sub	sp, #44	; 0x2c
 8009aee:	2400      	movs	r4, #0
 8009af0:	461d      	mov	r5, r3
 8009af2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8009af6:	f8bd 9058 	ldrh.w	r9, [sp, #88]	; 0x58
 8009afa:	f8bd 8050 	ldrh.w	r8, [sp, #80]	; 0x50
 8009afe:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8009b02:	9404      	str	r4, [sp, #16]
 8009b04:	468a      	mov	sl, r1
 8009b06:	4693      	mov	fp, r2
 8009b08:	4606      	mov	r6, r0
 8009b0a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8009b0e:	f7ff ff85 	bl	8009a1c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009b12:	fb09 b505 	mla	r5, r9, r5, fp
 8009b16:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009b1a:	9505      	str	r5, [sp, #20]
 8009b1c:	f8ad 8018 	strh.w	r8, [sp, #24]
 8009b20:	f8ad 701a 	strh.w	r7, [sp, #26]
 8009b24:	f8ad 401c 	strh.w	r4, [sp, #28]
 8009b28:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009b2c:	f8cd a010 	str.w	sl, [sp, #16]
 8009b30:	f8ad 4020 	strh.w	r4, [sp, #32]
 8009b34:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8009b38:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8009b3c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8009b40:	f1b8 0f00 	cmp.w	r8, #0
 8009b44:	d000      	beq.n	8009b48 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 8009b46:	b937      	cbnz	r7, 8009b56 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x6e>
 8009b48:	4b0d      	ldr	r3, [pc, #52]	; (8009b80 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 8009b4a:	4a0e      	ldr	r2, [pc, #56]	; (8009b84 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8009b4c:	f240 2119 	movw	r1, #537	; 0x219
 8009b50:	480d      	ldr	r0, [pc, #52]	; (8009b88 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa0>)
 8009b52:	f011 f8a1 	bl	801ac98 <__assert_func>
 8009b56:	6833      	ldr	r3, [r6, #0]
 8009b58:	9c01      	ldr	r4, [sp, #4]
 8009b5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b5c:	4630      	mov	r0, r6
 8009b5e:	4798      	blx	r3
 8009b60:	4220      	tst	r0, r4
 8009b62:	d104      	bne.n	8009b6e <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x86>
 8009b64:	4b09      	ldr	r3, [pc, #36]	; (8009b8c <_ZN8touchgfx3HAL12blitFillWordEtttttt+0xa4>)
 8009b66:	4a07      	ldr	r2, [pc, #28]	; (8009b84 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 8009b68:	f240 211a 	movw	r1, #538	; 0x21a
 8009b6c:	e7f0      	b.n	8009b50 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x68>
 8009b6e:	6870      	ldr	r0, [r6, #4]
 8009b70:	6803      	ldr	r3, [r0, #0]
 8009b72:	a901      	add	r1, sp, #4
 8009b74:	685b      	ldr	r3, [r3, #4]
 8009b76:	4798      	blx	r3
 8009b78:	b00b      	add	sp, #44	; 0x2c
 8009b7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009b7e:	bf00      	nop
 8009b80:	0801d2e8 	.word	0x0801d2e8
 8009b84:	0801d53a 	.word	0x0801d53a
 8009b88:	0801d416 	.word	0x0801d416
 8009b8c:	0801d320 	.word	0x0801d320

08009b90 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009b90:	b508      	push	{r3, lr}
 8009b92:	290d      	cmp	r1, #13
 8009b94:	d817      	bhi.n	8009bc6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009b96:	e8df f001 	tbb	[pc, r1]
 8009b9a:	090b      	.short	0x090b
 8009b9c:	0d0d0d07 	.word	0x0d0d0d07
 8009ba0:	1414140d 	.word	0x1414140d
 8009ba4:	0d0d1414 	.word	0x0d0d1414
 8009ba8:	2020      	movs	r0, #32
 8009baa:	bd08      	pop	{r3, pc}
 8009bac:	2018      	movs	r0, #24
 8009bae:	e7fc      	b.n	8009baa <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009bb0:	2010      	movs	r0, #16
 8009bb2:	e7fa      	b.n	8009baa <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009bb4:	4b05      	ldr	r3, [pc, #20]	; (8009bcc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009bb6:	4a06      	ldr	r2, [pc, #24]	; (8009bd0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009bb8:	4806      	ldr	r0, [pc, #24]	; (8009bd4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009bba:	f240 2183 	movw	r1, #643	; 0x283
 8009bbe:	f011 f86b 	bl	801ac98 <__assert_func>
 8009bc2:	2008      	movs	r0, #8
 8009bc4:	e7f1      	b.n	8009baa <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009bc6:	2000      	movs	r0, #0
 8009bc8:	e7ef      	b.n	8009baa <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009bca:	bf00      	nop
 8009bcc:	0801d492 	.word	0x0801d492
 8009bd0:	0801d865 	.word	0x0801d865
 8009bd4:	0801d416 	.word	0x0801d416

08009bd8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009bd8:	b570      	push	{r4, r5, r6, lr}
 8009bda:	460d      	mov	r5, r1
 8009bdc:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8009be0:	4616      	mov	r6, r2
 8009be2:	461c      	mov	r4, r3
 8009be4:	f7ff ffd4 	bl	8009b90 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009be8:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8009bec:	10c0      	asrs	r0, r0, #3
 8009bee:	fb06 5101 	mla	r1, r6, r1, r5
 8009bf2:	fb00 4001 	mla	r0, r0, r1, r4
 8009bf6:	bd70      	pop	{r4, r5, r6, pc}

08009bf8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8009bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009bfc:	b08c      	sub	sp, #48	; 0x30
 8009bfe:	f04f 0c00 	mov.w	ip, #0
 8009c02:	f89d 506c 	ldrb.w	r5, [sp, #108]	; 0x6c
 8009c06:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8009c0a:	f8bd 6058 	ldrh.w	r6, [sp, #88]	; 0x58
 8009c0e:	f8bd 9068 	ldrh.w	r9, [sp, #104]	; 0x68
 8009c12:	f89d 8070 	ldrb.w	r8, [sp, #112]	; 0x70
 8009c16:	f8cd c018 	str.w	ip, [sp, #24]
 8009c1a:	2d0b      	cmp	r5, #11
 8009c1c:	4604      	mov	r4, r0
 8009c1e:	469a      	mov	sl, r3
 8009c20:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
 8009c24:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8009c28:	d130      	bne.n	8009c8c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x94>
 8009c2a:	2080      	movs	r0, #128	; 0x80
 8009c2c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8009c30:	9205      	str	r2, [sp, #20]
 8009c32:	4620      	mov	r0, r4
 8009c34:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8009c38:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8009c3c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8009c40:	f8ad 7020 	strh.w	r7, [sp, #32]
 8009c44:	f8ad 6022 	strh.w	r6, [sp, #34]	; 0x22
 8009c48:	f7ff fee8 	bl	8009a1c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009c4c:	e9cd 9800 	strd	r9, r8, [sp]
 8009c50:	4603      	mov	r3, r0
 8009c52:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8009c56:	4651      	mov	r1, sl
 8009c58:	4620      	mov	r0, r4
 8009c5a:	f7ff ffbd 	bl	8009bd8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009c5e:	f89d 3074 	ldrb.w	r3, [sp, #116]	; 0x74
 8009c62:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8009c66:	2300      	movs	r3, #0
 8009c68:	9007      	str	r0, [sp, #28]
 8009c6a:	f8ad 9026 	strh.w	r9, [sp, #38]	; 0x26
 8009c6e:	f88d 5029 	strb.w	r5, [sp, #41]	; 0x29
 8009c72:	f88d 802a 	strb.w	r8, [sp, #42]	; 0x2a
 8009c76:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8009c7a:	b107      	cbz	r7, 8009c7e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x86>
 8009c7c:	b9d6      	cbnz	r6, 8009cb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbc>
 8009c7e:	4b17      	ldr	r3, [pc, #92]	; (8009cdc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe4>)
 8009c80:	4a17      	ldr	r2, [pc, #92]	; (8009ce0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8009c82:	f240 11c9 	movw	r1, #457	; 0x1c9
 8009c86:	4817      	ldr	r0, [pc, #92]	; (8009ce4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xec>)
 8009c88:	f011 f806 	bl	801ac98 <__assert_func>
 8009c8c:	2d02      	cmp	r5, #2
 8009c8e:	d108      	bne.n	8009ca2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8009c90:	2bff      	cmp	r3, #255	; 0xff
 8009c92:	d104      	bne.n	8009c9e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xa6>
 8009c94:	2800      	cmp	r0, #0
 8009c96:	bf14      	ite	ne
 8009c98:	2040      	movne	r0, #64	; 0x40
 8009c9a:	2020      	moveq	r0, #32
 8009c9c:	e7c6      	b.n	8009c2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009c9e:	2040      	movs	r0, #64	; 0x40
 8009ca0:	e7c4      	b.n	8009c2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009ca2:	2bff      	cmp	r3, #255	; 0xff
 8009ca4:	d104      	bne.n	8009cb0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb8>
 8009ca6:	2800      	cmp	r0, #0
 8009ca8:	bf14      	ite	ne
 8009caa:	2004      	movne	r0, #4
 8009cac:	2001      	moveq	r0, #1
 8009cae:	e7bd      	b.n	8009c2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009cb0:	2004      	movs	r0, #4
 8009cb2:	e7bb      	b.n	8009c2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x34>
 8009cb4:	6823      	ldr	r3, [r4, #0]
 8009cb6:	9d03      	ldr	r5, [sp, #12]
 8009cb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009cba:	4620      	mov	r0, r4
 8009cbc:	4798      	blx	r3
 8009cbe:	4228      	tst	r0, r5
 8009cc0:	d104      	bne.n	8009ccc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xd4>
 8009cc2:	4b09      	ldr	r3, [pc, #36]	; (8009ce8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xf0>)
 8009cc4:	4a06      	ldr	r2, [pc, #24]	; (8009ce0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xe8>)
 8009cc6:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 8009cca:	e7dc      	b.n	8009c86 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x8e>
 8009ccc:	6860      	ldr	r0, [r4, #4]
 8009cce:	6803      	ldr	r3, [r0, #0]
 8009cd0:	a903      	add	r1, sp, #12
 8009cd2:	685b      	ldr	r3, [r3, #4]
 8009cd4:	4798      	blx	r3
 8009cd6:	b00c      	add	sp, #48	; 0x30
 8009cd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009cdc:	0801d26b 	.word	0x0801d26b
 8009ce0:	0801d6f3 	.word	0x0801d6f3
 8009ce4:	0801d416 	.word	0x0801d416
 8009ce8:	0801d2a3 	.word	0x0801d2a3

08009cec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8009cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009cf0:	b08d      	sub	sp, #52	; 0x34
 8009cf2:	469b      	mov	fp, r3
 8009cf4:	f89d 7060 	ldrb.w	r7, [sp, #96]	; 0x60
 8009cf8:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8009cfc:	f8bd 8064 	ldrh.w	r8, [sp, #100]	; 0x64
 8009d00:	2fff      	cmp	r7, #255	; 0xff
 8009d02:	bf14      	ite	ne
 8009d04:	2308      	movne	r3, #8
 8009d06:	2302      	moveq	r3, #2
 8009d08:	2500      	movs	r5, #0
 8009d0a:	4604      	mov	r4, r0
 8009d0c:	4689      	mov	r9, r1
 8009d0e:	4692      	mov	sl, r2
 8009d10:	e9cd 3503 	strd	r3, r5, [sp, #12]
 8009d14:	9506      	str	r5, [sp, #24]
 8009d16:	f7ff fe81 	bl	8009a1c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009d1a:	465a      	mov	r2, fp
 8009d1c:	4603      	mov	r3, r0
 8009d1e:	4651      	mov	r1, sl
 8009d20:	e9cd 8600 	strd	r8, r6, [sp]
 8009d24:	4620      	mov	r0, r4
 8009d26:	f7ff ff57 	bl	8009bd8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009d2a:	f8bd 3058 	ldrh.w	r3, [sp, #88]	; 0x58
 8009d2e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009d32:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8009d36:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009d3a:	f89d 306c 	ldrb.w	r3, [sp, #108]	; 0x6c
 8009d3e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8009d42:	6823      	ldr	r3, [r4, #0]
 8009d44:	9007      	str	r0, [sp, #28]
 8009d46:	f8ad 5024 	strh.w	r5, [sp, #36]	; 0x24
 8009d4a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8009d4e:	f8ad 8026 	strh.w	r8, [sp, #38]	; 0x26
 8009d52:	f8cd 9018 	str.w	r9, [sp, #24]
 8009d56:	f88d 7028 	strb.w	r7, [sp, #40]	; 0x28
 8009d5a:	f88d 6029 	strb.w	r6, [sp, #41]	; 0x29
 8009d5e:	f88d 602a 	strb.w	r6, [sp, #42]	; 0x2a
 8009d62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009d64:	9d03      	ldr	r5, [sp, #12]
 8009d66:	4620      	mov	r0, r4
 8009d68:	4798      	blx	r3
 8009d6a:	4228      	tst	r0, r5
 8009d6c:	d106      	bne.n	8009d7c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x90>
 8009d6e:	4b07      	ldr	r3, [pc, #28]	; (8009d8c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa0>)
 8009d70:	4a07      	ldr	r2, [pc, #28]	; (8009d90 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa4>)
 8009d72:	4808      	ldr	r0, [pc, #32]	; (8009d94 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0xa8>)
 8009d74:	f44f 710c 	mov.w	r1, #560	; 0x230
 8009d78:	f010 ff8e 	bl	801ac98 <__assert_func>
 8009d7c:	6860      	ldr	r0, [r4, #4]
 8009d7e:	6803      	ldr	r3, [r0, #0]
 8009d80:	a903      	add	r1, sp, #12
 8009d82:	685b      	ldr	r3, [r3, #4]
 8009d84:	4798      	blx	r3
 8009d86:	b00d      	add	sp, #52	; 0x34
 8009d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d8c:	0801d2a3 	.word	0x0801d2a3
 8009d90:	0801d7ca 	.word	0x0801d7ca
 8009d94:	0801d416 	.word	0x0801d416

08009d98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8009d98:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009d9c:	461f      	mov	r7, r3
 8009d9e:	4b0b      	ldr	r3, [pc, #44]	; (8009dcc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8009da0:	460d      	mov	r5, r1
 8009da2:	f8b3 8000 	ldrh.w	r8, [r3]
 8009da6:	4616      	mov	r6, r2
 8009da8:	4604      	mov	r4, r0
 8009daa:	f7ff fc77 	bl	800969c <_ZN8touchgfx3HAL3lcdEv>
 8009dae:	6803      	ldr	r3, [r0, #0]
 8009db0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009db2:	4798      	blx	r3
 8009db4:	463b      	mov	r3, r7
 8009db6:	e9cd 8000 	strd	r8, r0, [sp]
 8009dba:	4632      	mov	r2, r6
 8009dbc:	4629      	mov	r1, r5
 8009dbe:	4620      	mov	r0, r4
 8009dc0:	f7ff ff0a 	bl	8009bd8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009dc4:	b002      	add	sp, #8
 8009dc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009dca:	bf00      	nop
 8009dcc:	2000a4ea 	.word	0x2000a4ea

08009dd0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8009dd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009dd4:	b08b      	sub	sp, #44	; 0x2c
 8009dd6:	4699      	mov	r9, r3
 8009dd8:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8009ddc:	f8bd 7048 	ldrh.w	r7, [sp, #72]	; 0x48
 8009de0:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8009de4:	f8ad 7018 	strh.w	r7, [sp, #24]
 8009de8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009dec:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009df0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009df4:	2500      	movs	r5, #0
 8009df6:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009dfa:	f88d 3020 	strb.w	r3, [sp, #32]
 8009dfe:	4690      	mov	r8, r2
 8009e00:	4604      	mov	r4, r0
 8009e02:	9504      	str	r5, [sp, #16]
 8009e04:	f8ad 601a 	strh.w	r6, [sp, #26]
 8009e08:	f7ff fe08 	bl	8009a1c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009e0c:	464a      	mov	r2, r9
 8009e0e:	4603      	mov	r3, r0
 8009e10:	4641      	mov	r1, r8
 8009e12:	4620      	mov	r0, r4
 8009e14:	f7ff ffc0 	bl	8009d98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009e18:	4b19      	ldr	r3, [pc, #100]	; (8009e80 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb0>)
 8009e1a:	9005      	str	r0, [sp, #20]
 8009e1c:	881b      	ldrh	r3, [r3, #0]
 8009e1e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009e22:	f7ff fc3b 	bl	800969c <_ZN8touchgfx3HAL3lcdEv>
 8009e26:	6803      	ldr	r3, [r0, #0]
 8009e28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e2a:	4798      	blx	r3
 8009e2c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8009e30:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8009e34:	b107      	cbz	r7, 8009e38 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x68>
 8009e36:	b936      	cbnz	r6, 8009e46 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x76>
 8009e38:	4b12      	ldr	r3, [pc, #72]	; (8009e84 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb4>)
 8009e3a:	4a13      	ldr	r2, [pc, #76]	; (8009e88 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8009e3c:	f44f 71f3 	mov.w	r1, #486	; 0x1e6
 8009e40:	4812      	ldr	r0, [pc, #72]	; (8009e8c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xbc>)
 8009e42:	f010 ff29 	bl	801ac98 <__assert_func>
 8009e46:	6823      	ldr	r3, [r4, #0]
 8009e48:	9e01      	ldr	r6, [sp, #4]
 8009e4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009e4c:	4620      	mov	r0, r4
 8009e4e:	4798      	blx	r3
 8009e50:	4230      	tst	r0, r6
 8009e52:	d104      	bne.n	8009e5e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x8e>
 8009e54:	4b0e      	ldr	r3, [pc, #56]	; (8009e90 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xc0>)
 8009e56:	4a0c      	ldr	r2, [pc, #48]	; (8009e88 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0xb8>)
 8009e58:	f240 11e7 	movw	r1, #487	; 0x1e7
 8009e5c:	e7f0      	b.n	8009e40 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x70>
 8009e5e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8009e60:	9304      	str	r3, [sp, #16]
 8009e62:	6860      	ldr	r0, [r4, #4]
 8009e64:	f89d 3060 	ldrb.w	r3, [sp, #96]	; 0x60
 8009e68:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8009e6c:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8009e70:	6803      	ldr	r3, [r0, #0]
 8009e72:	a901      	add	r1, sp, #4
 8009e74:	685b      	ldr	r3, [r3, #4]
 8009e76:	4798      	blx	r3
 8009e78:	b00b      	add	sp, #44	; 0x2c
 8009e7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009e7e:	bf00      	nop
 8009e80:	2000a4ea 	.word	0x2000a4ea
 8009e84:	0801d26b 	.word	0x0801d26b
 8009e88:	0801d59f 	.word	0x0801d59f
 8009e8c:	0801d416 	.word	0x0801d416
 8009e90:	0801d2a3 	.word	0x0801d2a3

08009e94 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8009e94:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e96:	b08d      	sub	sp, #52	; 0x34
 8009e98:	466b      	mov	r3, sp
 8009e9a:	e883 0006 	stmia.w	r3, {r1, r2}
 8009e9e:	4b22      	ldr	r3, [pc, #136]	; (8009f28 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8009ea0:	781b      	ldrb	r3, [r3, #0]
 8009ea2:	4604      	mov	r4, r0
 8009ea4:	b933      	cbnz	r3, 8009eb4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 8009ea6:	4b21      	ldr	r3, [pc, #132]	; (8009f2c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8009ea8:	4a21      	ldr	r2, [pc, #132]	; (8009f30 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8009eaa:	4822      	ldr	r0, [pc, #136]	; (8009f34 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa0>)
 8009eac:	f240 2141 	movw	r1, #577	; 0x241
 8009eb0:	f010 fef2 	bl	801ac98 <__assert_func>
 8009eb4:	2300      	movs	r3, #0
 8009eb6:	9306      	str	r3, [sp, #24]
 8009eb8:	6803      	ldr	r3, [r0, #0]
 8009eba:	f8bd 6000 	ldrh.w	r6, [sp]
 8009ebe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ec0:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8009ec4:	2501      	movs	r5, #1
 8009ec6:	9503      	str	r5, [sp, #12]
 8009ec8:	4798      	blx	r3
 8009eca:	463a      	mov	r2, r7
 8009ecc:	4631      	mov	r1, r6
 8009ece:	4603      	mov	r3, r0
 8009ed0:	4620      	mov	r0, r4
 8009ed2:	f7ff ff61 	bl	8009d98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009ed6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8009ed8:	9307      	str	r3, [sp, #28]
 8009eda:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009ede:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009ee2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009ee6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009eea:	4b13      	ldr	r3, [pc, #76]	; (8009f38 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0xa4>)
 8009eec:	9004      	str	r0, [sp, #16]
 8009eee:	881b      	ldrh	r3, [r3, #0]
 8009ef0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009ef4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8009ef8:	f7ff fbd0 	bl	800969c <_ZN8touchgfx3HAL3lcdEv>
 8009efc:	6803      	ldr	r3, [r0, #0]
 8009efe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f00:	4798      	blx	r3
 8009f02:	23ff      	movs	r3, #255	; 0xff
 8009f04:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8009f08:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8009f0c:	6860      	ldr	r0, [r4, #4]
 8009f0e:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8009f12:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8009f16:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8009f1a:	6803      	ldr	r3, [r0, #0]
 8009f1c:	a903      	add	r1, sp, #12
 8009f1e:	685b      	ldr	r3, [r3, #4]
 8009f20:	4798      	blx	r3
 8009f22:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8009f24:	b00d      	add	sp, #52	; 0x34
 8009f26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f28:	2000a4ef 	.word	0x2000a4ef
 8009f2c:	0801d36a 	.word	0x0801d36a
 8009f30:	0801d649 	.word	0x0801d649
 8009f34:	0801d416 	.word	0x0801d416
 8009f38:	2000a4ea 	.word	0x2000a4ea

08009f3c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8009f3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f40:	b08c      	sub	sp, #48	; 0x30
 8009f42:	461e      	mov	r6, r3
 8009f44:	466d      	mov	r5, sp
 8009f46:	2300      	movs	r3, #0
 8009f48:	e885 0006 	stmia.w	r5, {r1, r2}
 8009f4c:	9306      	str	r3, [sp, #24]
 8009f4e:	6803      	ldr	r3, [r0, #0]
 8009f50:	f8bd 7000 	ldrh.w	r7, [sp]
 8009f54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f56:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8009f5a:	2501      	movs	r5, #1
 8009f5c:	9503      	str	r5, [sp, #12]
 8009f5e:	4604      	mov	r4, r0
 8009f60:	4798      	blx	r3
 8009f62:	4642      	mov	r2, r8
 8009f64:	4639      	mov	r1, r7
 8009f66:	4603      	mov	r3, r0
 8009f68:	4620      	mov	r0, r4
 8009f6a:	f7ff ff15 	bl	8009d98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009f6e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009f72:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009f76:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009f7a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009f7e:	4b11      	ldr	r3, [pc, #68]	; (8009fc4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8009f80:	9004      	str	r0, [sp, #16]
 8009f82:	881b      	ldrh	r3, [r3, #0]
 8009f84:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009f88:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8009f8a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8009f8e:	9607      	str	r6, [sp, #28]
 8009f90:	f7ff fb84 	bl	800969c <_ZN8touchgfx3HAL3lcdEv>
 8009f94:	6803      	ldr	r3, [r0, #0]
 8009f96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f98:	4798      	blx	r3
 8009f9a:	23ff      	movs	r3, #255	; 0xff
 8009f9c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8009fa0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8009fa4:	6860      	ldr	r0, [r4, #4]
 8009fa6:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8009faa:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8009fae:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8009fb2:	6803      	ldr	r3, [r0, #0]
 8009fb4:	a903      	add	r1, sp, #12
 8009fb6:	685b      	ldr	r3, [r3, #4]
 8009fb8:	4798      	blx	r3
 8009fba:	4630      	mov	r0, r6
 8009fbc:	b00c      	add	sp, #48	; 0x30
 8009fbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009fc2:	bf00      	nop
 8009fc4:	2000a4ea 	.word	0x2000a4ea

08009fc8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8009fc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009fca:	b085      	sub	sp, #20
 8009fcc:	ac02      	add	r4, sp, #8
 8009fce:	e884 0006 	stmia.w	r4, {r1, r2}
 8009fd2:	4605      	mov	r5, r0
 8009fd4:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8009fd8:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8009fdc:	f7ff fd1e 	bl	8009a1c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009fe0:	463a      	mov	r2, r7
 8009fe2:	4603      	mov	r3, r0
 8009fe4:	4631      	mov	r1, r6
 8009fe6:	4628      	mov	r0, r5
 8009fe8:	f7ff fed6 	bl	8009d98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009fec:	4a05      	ldr	r2, [pc, #20]	; (800a004 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8009fee:	682b      	ldr	r3, [r5, #0]
 8009ff0:	8812      	ldrh	r2, [r2, #0]
 8009ff2:	9200      	str	r2, [sp, #0]
 8009ff4:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8009ff6:	e894 0006 	ldmia.w	r4, {r1, r2}
 8009ffa:	4603      	mov	r3, r0
 8009ffc:	4628      	mov	r0, r5
 8009ffe:	47b0      	blx	r6
 800a000:	b005      	add	sp, #20
 800a002:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a004:	2000a4ea 	.word	0x2000a4ea

0800a008 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a008:	b570      	push	{r4, r5, r6, lr}
 800a00a:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a00e:	4604      	mov	r4, r0
 800a010:	b19b      	cbz	r3, 800a03a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a012:	2002      	movs	r0, #2
 800a014:	f7f6 fbf0 	bl	80007f8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a018:	2300      	movs	r3, #0
 800a01a:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a01e:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a022:	6823      	ldr	r3, [r4, #0]
 800a024:	4620      	mov	r0, r4
 800a026:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800a02a:	f7ff fcf7 	bl	8009a1c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a02e:	462b      	mov	r3, r5
 800a030:	4601      	mov	r1, r0
 800a032:	4620      	mov	r0, r4
 800a034:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a038:	4718      	bx	r3
 800a03a:	bd70      	pop	{r4, r5, r6, pc}

0800a03c <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800a03c:	b570      	push	{r4, r5, r6, lr}
 800a03e:	4605      	mov	r5, r0
 800a040:	460c      	mov	r4, r1
 800a042:	2003      	movs	r0, #3
 800a044:	b149      	cbz	r1, 800a05a <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800a046:	f7f6 fb8b 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a04a:	6928      	ldr	r0, [r5, #16]
 800a04c:	b168      	cbz	r0, 800a06a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a04e:	6803      	ldr	r3, [r0, #0]
 800a050:	695b      	ldr	r3, [r3, #20]
 800a052:	2101      	movs	r1, #1
 800a054:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a058:	4718      	bx	r3
 800a05a:	f7f6 fba7 	bl	80007ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a05e:	6928      	ldr	r0, [r5, #16]
 800a060:	b118      	cbz	r0, 800a06a <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a062:	6803      	ldr	r3, [r0, #0]
 800a064:	4621      	mov	r1, r4
 800a066:	695b      	ldr	r3, [r3, #20]
 800a068:	e7f4      	b.n	800a054 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800a06a:	bd70      	pop	{r4, r5, r6, pc}

0800a06c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a06c:	b538      	push	{r3, r4, r5, lr}
 800a06e:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800a072:	428b      	cmp	r3, r1
 800a074:	4604      	mov	r4, r0
 800a076:	460d      	mov	r5, r1
 800a078:	d006      	beq.n	800a088 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a07a:	6803      	ldr	r3, [r0, #0]
 800a07c:	b929      	cbnz	r1, 800a08a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a07e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800a082:	4798      	blx	r3
 800a084:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800a088:	bd38      	pop	{r3, r4, r5, pc}
 800a08a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800a08e:	e7f8      	b.n	800a082 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a090 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a090:	b510      	push	{r4, lr}
 800a092:	4b0d      	ldr	r3, [pc, #52]	; (800a0c8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a094:	781b      	ldrb	r3, [r3, #0]
 800a096:	4604      	mov	r4, r0
 800a098:	b95b      	cbnz	r3, 800a0b2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a09a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a09e:	2b02      	cmp	r3, #2
 800a0a0:	d007      	beq.n	800a0b2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a0a2:	6840      	ldr	r0, [r0, #4]
 800a0a4:	f000 f93c 	bl	800a320 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a0a8:	b118      	cbz	r0, 800a0b2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a0aa:	6862      	ldr	r2, [r4, #4]
 800a0ac:	7a53      	ldrb	r3, [r2, #9]
 800a0ae:	2b00      	cmp	r3, #0
 800a0b0:	d0fc      	beq.n	800a0ac <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a0b2:	f7f6 fe3d 	bl	8000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a0b6:	4620      	mov	r0, r4
 800a0b8:	2100      	movs	r1, #0
 800a0ba:	f7ff ffd7 	bl	800a06c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a0be:	4620      	mov	r0, r4
 800a0c0:	f7ff fcac 	bl	8009a1c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a0c4:	bd10      	pop	{r4, pc}
 800a0c6:	bf00      	nop
 800a0c8:	2000a4ee 	.word	0x2000a4ee

0800a0cc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a0cc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a0d0:	1a13      	subs	r3, r2, r0
 800a0d2:	4258      	negs	r0, r3
 800a0d4:	4158      	adcs	r0, r3
 800a0d6:	4770      	bx	lr

0800a0d8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a0d8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a0dc:	1a9b      	subs	r3, r3, r2
 800a0de:	2b00      	cmp	r3, #0
 800a0e0:	bfdc      	itt	le
 800a0e2:	6882      	ldrle	r2, [r0, #8]
 800a0e4:	189b      	addle	r3, r3, r2
 800a0e6:	2b01      	cmp	r3, #1
 800a0e8:	bfcc      	ite	gt
 800a0ea:	2000      	movgt	r0, #0
 800a0ec:	2001      	movle	r0, #1
 800a0ee:	4770      	bx	lr

0800a0f0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a0f0:	6902      	ldr	r2, [r0, #16]
 800a0f2:	6843      	ldr	r3, [r0, #4]
 800a0f4:	2024      	movs	r0, #36	; 0x24
 800a0f6:	fb00 3002 	mla	r0, r0, r2, r3
 800a0fa:	4770      	bx	lr

0800a0fc <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a0fc:	6803      	ldr	r3, [r0, #0]
 800a0fe:	691b      	ldr	r3, [r3, #16]
 800a100:	4718      	bx	r3

0800a102 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a102:	4770      	bx	lr

0800a104 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a104:	4770      	bx	lr

0800a106 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a106:	4770      	bx	lr

0800a108 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a108:	b570      	push	{r4, r5, r6, lr}
 800a10a:	2301      	movs	r3, #1
 800a10c:	7203      	strb	r3, [r0, #8]
 800a10e:	4604      	mov	r4, r0
 800a110:	6840      	ldr	r0, [r0, #4]
 800a112:	6803      	ldr	r3, [r0, #0]
 800a114:	699b      	ldr	r3, [r3, #24]
 800a116:	4798      	blx	r3
 800a118:	6803      	ldr	r3, [r0, #0]
 800a11a:	2b40      	cmp	r3, #64	; 0x40
 800a11c:	4605      	mov	r5, r0
 800a11e:	d039      	beq.n	800a194 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a120:	d815      	bhi.n	800a14e <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a122:	2b04      	cmp	r3, #4
 800a124:	d022      	beq.n	800a16c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a126:	d808      	bhi.n	800a13a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a128:	2b01      	cmp	r3, #1
 800a12a:	d033      	beq.n	800a194 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a12c:	2b02      	cmp	r3, #2
 800a12e:	d108      	bne.n	800a142 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 800a130:	6823      	ldr	r3, [r4, #0]
 800a132:	4620      	mov	r0, r4
 800a134:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a136:	4798      	blx	r3
 800a138:	e025      	b.n	800a186 <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 800a13a:	2b08      	cmp	r3, #8
 800a13c:	d01e      	beq.n	800a17c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 800a13e:	2b20      	cmp	r3, #32
 800a140:	d028      	beq.n	800a194 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a142:	4b17      	ldr	r3, [pc, #92]	; (800a1a0 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 800a144:	4a17      	ldr	r2, [pc, #92]	; (800a1a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 800a146:	4818      	ldr	r0, [pc, #96]	; (800a1a8 <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 800a148:	2188      	movs	r1, #136	; 0x88
 800a14a:	f010 fda5 	bl	801ac98 <__assert_func>
 800a14e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a152:	d01f      	beq.n	800a194 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a154:	d804      	bhi.n	800a160 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 800a156:	2b80      	cmp	r3, #128	; 0x80
 800a158:	d01c      	beq.n	800a194 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a15a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a15e:	e7ef      	b.n	800a140 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 800a160:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a164:	d016      	beq.n	800a194 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 800a166:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a16a:	e7e0      	b.n	800a12e <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a16c:	6823      	ldr	r3, [r4, #0]
 800a16e:	7f01      	ldrb	r1, [r0, #28]
 800a170:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a172:	4620      	mov	r0, r4
 800a174:	4798      	blx	r3
 800a176:	6823      	ldr	r3, [r4, #0]
 800a178:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a17a:	e006      	b.n	800a18a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a17c:	6823      	ldr	r3, [r4, #0]
 800a17e:	7f01      	ldrb	r1, [r0, #28]
 800a180:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a182:	4620      	mov	r0, r4
 800a184:	4798      	blx	r3
 800a186:	6823      	ldr	r3, [r4, #0]
 800a188:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a18a:	4629      	mov	r1, r5
 800a18c:	4620      	mov	r0, r4
 800a18e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a192:	4718      	bx	r3
 800a194:	6823      	ldr	r3, [r4, #0]
 800a196:	4620      	mov	r0, r4
 800a198:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a19a:	4798      	blx	r3
 800a19c:	e7eb      	b.n	800a176 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a19e:	bf00      	nop
 800a1a0:	0801d8ae 	.word	0x0801d8ae
 800a1a4:	0801d970 	.word	0x0801d970
 800a1a8:	0801d8d3 	.word	0x0801d8d3

0800a1ac <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a1ac:	b570      	push	{r4, r5, r6, lr}
 800a1ae:	4604      	mov	r4, r0
 800a1b0:	460e      	mov	r6, r1
 800a1b2:	6860      	ldr	r0, [r4, #4]
 800a1b4:	6803      	ldr	r3, [r0, #0]
 800a1b6:	685b      	ldr	r3, [r3, #4]
 800a1b8:	4798      	blx	r3
 800a1ba:	2800      	cmp	r0, #0
 800a1bc:	d1f9      	bne.n	800a1b2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a1be:	4d0d      	ldr	r5, [pc, #52]	; (800a1f4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a1c0:	6828      	ldr	r0, [r5, #0]
 800a1c2:	6803      	ldr	r3, [r0, #0]
 800a1c4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a1c6:	4798      	blx	r3
 800a1c8:	f7f6 fdc0 	bl	8000d4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a1cc:	6828      	ldr	r0, [r5, #0]
 800a1ce:	2101      	movs	r1, #1
 800a1d0:	f7ff ff4c 	bl	800a06c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a1d4:	6860      	ldr	r0, [r4, #4]
 800a1d6:	6803      	ldr	r3, [r0, #0]
 800a1d8:	4631      	mov	r1, r6
 800a1da:	689b      	ldr	r3, [r3, #8]
 800a1dc:	4798      	blx	r3
 800a1de:	6823      	ldr	r3, [r4, #0]
 800a1e0:	4620      	mov	r0, r4
 800a1e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1e4:	4798      	blx	r3
 800a1e6:	6828      	ldr	r0, [r5, #0]
 800a1e8:	6803      	ldr	r3, [r0, #0]
 800a1ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a1ee:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a1f0:	4718      	bx	r3
 800a1f2:	bf00      	nop
 800a1f4:	2000a4f0 	.word	0x2000a4f0

0800a1f8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a1f8:	b508      	push	{r3, lr}
 800a1fa:	f7f6 fd99 	bl	8000d30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a1fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a202:	f7f6 bd9d 	b.w	8000d40 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a206 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a206:	b510      	push	{r4, lr}
 800a208:	2114      	movs	r1, #20
 800a20a:	4604      	mov	r4, r0
 800a20c:	f010 fd16 	bl	801ac3c <_ZdlPvj>
 800a210:	4620      	mov	r0, r4
 800a212:	bd10      	pop	{r4, pc}

0800a214 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a214:	b510      	push	{r4, lr}
 800a216:	4604      	mov	r4, r0
 800a218:	6840      	ldr	r0, [r0, #4]
 800a21a:	6803      	ldr	r3, [r0, #0]
 800a21c:	681b      	ldr	r3, [r3, #0]
 800a21e:	4798      	blx	r3
 800a220:	b948      	cbnz	r0, 800a236 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a222:	7a63      	ldrb	r3, [r4, #9]
 800a224:	b13b      	cbz	r3, 800a236 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a226:	7a23      	ldrb	r3, [r4, #8]
 800a228:	b92b      	cbnz	r3, 800a236 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a22a:	6823      	ldr	r3, [r4, #0]
 800a22c:	4620      	mov	r0, r4
 800a22e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a230:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a234:	4718      	bx	r3
 800a236:	bd10      	pop	{r4, pc}

0800a238 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a238:	b510      	push	{r4, lr}
 800a23a:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a23e:	1ad2      	subs	r2, r2, r3
 800a240:	2a00      	cmp	r2, #0
 800a242:	bfdc      	itt	le
 800a244:	6884      	ldrle	r4, [r0, #8]
 800a246:	1912      	addle	r2, r2, r4
 800a248:	2a01      	cmp	r2, #1
 800a24a:	dd17      	ble.n	800a27c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x44>
 800a24c:	6842      	ldr	r2, [r0, #4]
 800a24e:	2424      	movs	r4, #36	; 0x24
 800a250:	fb04 2303 	mla	r3, r4, r3, r2
 800a254:	f101 0220 	add.w	r2, r1, #32
 800a258:	f851 4b04 	ldr.w	r4, [r1], #4
 800a25c:	f843 4b04 	str.w	r4, [r3], #4
 800a260:	4291      	cmp	r1, r2
 800a262:	d1f9      	bne.n	800a258 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a264:	780a      	ldrb	r2, [r1, #0]
 800a266:	701a      	strb	r2, [r3, #0]
 800a268:	68c3      	ldr	r3, [r0, #12]
 800a26a:	6882      	ldr	r2, [r0, #8]
 800a26c:	f3bf 8f5b 	dmb	ish
 800a270:	3301      	adds	r3, #1
 800a272:	429a      	cmp	r2, r3
 800a274:	bfd8      	it	le
 800a276:	1a9b      	suble	r3, r3, r2
 800a278:	60c3      	str	r3, [r0, #12]
 800a27a:	bd10      	pop	{r4, pc}
 800a27c:	4b02      	ldr	r3, [pc, #8]	; (800a288 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x50>)
 800a27e:	4a03      	ldr	r2, [pc, #12]	; (800a28c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a280:	4803      	ldr	r0, [pc, #12]	; (800a290 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a282:	2136      	movs	r1, #54	; 0x36
 800a284:	f010 fd08 	bl	801ac98 <__assert_func>
 800a288:	0801d8f9 	.word	0x0801d8f9
 800a28c:	0801d9a0 	.word	0x0801d9a0
 800a290:	0801d8d3 	.word	0x0801d8d3

0800a294 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a294:	b510      	push	{r4, lr}
 800a296:	6803      	ldr	r3, [r0, #0]
 800a298:	681b      	ldr	r3, [r3, #0]
 800a29a:	4604      	mov	r4, r0
 800a29c:	4798      	blx	r3
 800a29e:	b128      	cbz	r0, 800a2ac <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a2a0:	4b07      	ldr	r3, [pc, #28]	; (800a2c0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a2a2:	4a08      	ldr	r2, [pc, #32]	; (800a2c4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a2a4:	4808      	ldr	r0, [pc, #32]	; (800a2c8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a2a6:	213c      	movs	r1, #60	; 0x3c
 800a2a8:	f010 fcf6 	bl	801ac98 <__assert_func>
 800a2ac:	6923      	ldr	r3, [r4, #16]
 800a2ae:	68a2      	ldr	r2, [r4, #8]
 800a2b0:	f3bf 8f5b 	dmb	ish
 800a2b4:	3301      	adds	r3, #1
 800a2b6:	429a      	cmp	r2, r3
 800a2b8:	bfd8      	it	le
 800a2ba:	1a9b      	suble	r3, r3, r2
 800a2bc:	6123      	str	r3, [r4, #16]
 800a2be:	bd10      	pop	{r4, pc}
 800a2c0:	0801d91c 	.word	0x0801d91c
 800a2c4:	0801d9ee 	.word	0x0801d9ee
 800a2c8:	0801d8d3 	.word	0x0801d8d3

0800a2cc <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a2cc:	b570      	push	{r4, r5, r6, lr}
 800a2ce:	4604      	mov	r4, r0
 800a2d0:	6840      	ldr	r0, [r0, #4]
 800a2d2:	6803      	ldr	r3, [r0, #0]
 800a2d4:	681b      	ldr	r3, [r3, #0]
 800a2d6:	4798      	blx	r3
 800a2d8:	4605      	mov	r5, r0
 800a2da:	b930      	cbnz	r0, 800a2ea <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a2dc:	7a23      	ldrb	r3, [r4, #8]
 800a2de:	b123      	cbz	r3, 800a2ea <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a2e0:	6860      	ldr	r0, [r4, #4]
 800a2e2:	6803      	ldr	r3, [r0, #0]
 800a2e4:	695b      	ldr	r3, [r3, #20]
 800a2e6:	4798      	blx	r3
 800a2e8:	7225      	strb	r5, [r4, #8]
 800a2ea:	6860      	ldr	r0, [r4, #4]
 800a2ec:	6803      	ldr	r3, [r0, #0]
 800a2ee:	681b      	ldr	r3, [r3, #0]
 800a2f0:	4798      	blx	r3
 800a2f2:	b928      	cbnz	r0, 800a300 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a2f4:	6823      	ldr	r3, [r4, #0]
 800a2f6:	4620      	mov	r0, r4
 800a2f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a2fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a2fe:	4718      	bx	r3
 800a300:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a304:	f7f6 bd2a 	b.w	8000d5c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a308 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a308:	b510      	push	{r4, lr}
 800a30a:	4c04      	ldr	r4, [pc, #16]	; (800a31c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a30c:	6082      	str	r2, [r0, #8]
 800a30e:	2200      	movs	r2, #0
 800a310:	e9c0 4100 	strd	r4, r1, [r0]
 800a314:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a318:	bd10      	pop	{r4, pc}
 800a31a:	bf00      	nop
 800a31c:	0801d954 	.word	0x0801d954

0800a320 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a320:	6840      	ldr	r0, [r0, #4]
 800a322:	6803      	ldr	r3, [r0, #0]
 800a324:	681b      	ldr	r3, [r3, #0]
 800a326:	4718      	bx	r3

0800a328 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a328:	2300      	movs	r3, #0
 800a32a:	8083      	strh	r3, [r0, #4]
 800a32c:	80c3      	strh	r3, [r0, #6]
 800a32e:	8003      	strh	r3, [r0, #0]
 800a330:	8043      	strh	r3, [r0, #2]
 800a332:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a336:	2bff      	cmp	r3, #255	; 0xff
 800a338:	bf01      	itttt	eq
 800a33a:	890b      	ldrheq	r3, [r1, #8]
 800a33c:	8083      	strheq	r3, [r0, #4]
 800a33e:	894b      	ldrheq	r3, [r1, #10]
 800a340:	80c3      	strheq	r3, [r0, #6]
 800a342:	4770      	bx	lr

0800a344 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a344:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a346:	4604      	mov	r4, r0
 800a348:	6808      	ldr	r0, [r1, #0]
 800a34a:	6849      	ldr	r1, [r1, #4]
 800a34c:	466b      	mov	r3, sp
 800a34e:	c303      	stmia	r3!, {r0, r1}
 800a350:	6823      	ldr	r3, [r4, #0]
 800a352:	4669      	mov	r1, sp
 800a354:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a356:	4620      	mov	r0, r4
 800a358:	4798      	blx	r3
 800a35a:	4b08      	ldr	r3, [pc, #32]	; (800a37c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a35c:	681b      	ldr	r3, [r3, #0]
 800a35e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a362:	b10a      	cbz	r2, 800a368 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a364:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a366:	b900      	cbnz	r0, 800a36a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a368:	6898      	ldr	r0, [r3, #8]
 800a36a:	6803      	ldr	r3, [r0, #0]
 800a36c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a36e:	6a1d      	ldr	r5, [r3, #32]
 800a370:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a374:	4669      	mov	r1, sp
 800a376:	47a8      	blx	r5
 800a378:	b003      	add	sp, #12
 800a37a:	bd30      	pop	{r4, r5, pc}
 800a37c:	2000a4f0 	.word	0x2000a4f0

0800a380 <_ZN8touchgfx3BoxD1Ev>:
 800a380:	4770      	bx	lr

0800a382 <_ZN8touchgfx3BoxD0Ev>:
 800a382:	b510      	push	{r4, lr}
 800a384:	212c      	movs	r1, #44	; 0x2c
 800a386:	4604      	mov	r4, r0
 800a388:	f010 fc58 	bl	801ac3c <_ZdlPvj>
 800a38c:	4620      	mov	r0, r4
 800a38e:	bd10      	pop	{r4, pc}

0800a390 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800a390:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800a394:	b12a      	cbz	r2, 800a3a2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800a396:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800a39a:	b112      	cbz	r2, 800a3a2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800a39c:	6803      	ldr	r3, [r0, #0]
 800a39e:	695b      	ldr	r3, [r3, #20]
 800a3a0:	4718      	bx	r3
 800a3a2:	4770      	bx	lr

0800a3a4 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800a3a4:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800a3a8:	4770      	bx	lr

0800a3aa <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800a3aa:	b570      	push	{r4, r5, r6, lr}
 800a3ac:	880b      	ldrh	r3, [r1, #0]
 800a3ae:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800a3b0:	4605      	mov	r5, r0
 800a3b2:	8813      	ldrh	r3, [r2, #0]
 800a3b4:	f825 3f30 	strh.w	r3, [r5, #48]!
 800a3b8:	4604      	mov	r4, r0
 800a3ba:	4628      	mov	r0, r5
 800a3bc:	f004 fb0a 	bl	800e9d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a3c0:	4606      	mov	r6, r0
 800a3c2:	4628      	mov	r0, r5
 800a3c4:	f004 fb4a 	bl	800ea5c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a3c8:	6823      	ldr	r3, [r4, #0]
 800a3ca:	4605      	mov	r5, r0
 800a3cc:	b231      	sxth	r1, r6
 800a3ce:	4620      	mov	r0, r4
 800a3d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a3d2:	4798      	blx	r3
 800a3d4:	6823      	ldr	r3, [r4, #0]
 800a3d6:	b229      	sxth	r1, r5
 800a3d8:	4620      	mov	r0, r4
 800a3da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a3dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a3e0:	4718      	bx	r3

0800a3e2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800a3e2:	b510      	push	{r4, lr}
 800a3e4:	4604      	mov	r4, r0
 800a3e6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800a3e8:	b150      	cbz	r0, 800a400 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800a3ea:	6803      	ldr	r3, [r0, #0]
 800a3ec:	68db      	ldr	r3, [r3, #12]
 800a3ee:	4798      	blx	r3
 800a3f0:	b130      	cbz	r0, 800a400 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800a3f2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800a3f4:	6803      	ldr	r3, [r0, #0]
 800a3f6:	4621      	mov	r1, r4
 800a3f8:	689b      	ldr	r3, [r3, #8]
 800a3fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a3fe:	4718      	bx	r3
 800a400:	bd10      	pop	{r4, pc}

0800a402 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800a402:	b510      	push	{r4, lr}
 800a404:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800a408:	2bff      	cmp	r3, #255	; 0xff
 800a40a:	4604      	mov	r4, r0
 800a40c:	d006      	beq.n	800a41c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800a40e:	2300      	movs	r3, #0
 800a410:	8003      	strh	r3, [r0, #0]
 800a412:	8043      	strh	r3, [r0, #2]
 800a414:	8083      	strh	r3, [r0, #4]
 800a416:	80c3      	strh	r3, [r0, #6]
 800a418:	4620      	mov	r0, r4
 800a41a:	bd10      	pop	{r4, pc}
 800a41c:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800a420:	b11b      	cbz	r3, 800a42a <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800a422:	3130      	adds	r1, #48	; 0x30
 800a424:	f004 fb5e 	bl	800eae4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a428:	e7f6      	b.n	800a418 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800a42a:	312e      	adds	r1, #46	; 0x2e
 800a42c:	e7fa      	b.n	800a424 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800a430 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800a430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a434:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a438:	b08a      	sub	sp, #40	; 0x28
 800a43a:	4604      	mov	r4, r0
 800a43c:	4688      	mov	r8, r1
 800a43e:	2b00      	cmp	r3, #0
 800a440:	d044      	beq.n	800a4cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800a442:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800a444:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a448:	a805      	add	r0, sp, #20
 800a44a:	f004 fac3 	bl	800e9d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a44e:	4605      	mov	r5, r0
 800a450:	b206      	sxth	r6, r0
 800a452:	a805      	add	r0, sp, #20
 800a454:	f004 fb02 	bl	800ea5c <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a458:	f9b8 2000 	ldrsh.w	r2, [r8]
 800a45c:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800a460:	4417      	add	r7, r2
 800a462:	b2bf      	uxth	r7, r7
 800a464:	2300      	movs	r3, #0
 800a466:	fa0f fe87 	sxth.w	lr, r7
 800a46a:	459e      	cmp	lr, r3
 800a46c:	fa0f fc80 	sxth.w	ip, r0
 800a470:	9306      	str	r3, [sp, #24]
 800a472:	dd2d      	ble.n	800a4d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a474:	4296      	cmp	r6, r2
 800a476:	dd2b      	ble.n	800a4d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a478:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800a47c:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800a480:	4419      	add	r1, r3
 800a482:	b289      	uxth	r1, r1
 800a484:	fa0f f881 	sxth.w	r8, r1
 800a488:	f1b8 0f00 	cmp.w	r8, #0
 800a48c:	dd20      	ble.n	800a4d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a48e:	459c      	cmp	ip, r3
 800a490:	dd1e      	ble.n	800a4d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a492:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800a496:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800a49a:	4576      	cmp	r6, lr
 800a49c:	bfa8      	it	ge
 800a49e:	463d      	movge	r5, r7
 800a4a0:	45c4      	cmp	ip, r8
 800a4a2:	bfa8      	it	ge
 800a4a4:	4608      	movge	r0, r1
 800a4a6:	1aad      	subs	r5, r5, r2
 800a4a8:	1ac0      	subs	r0, r0, r3
 800a4aa:	f8ad 501c 	strh.w	r5, [sp, #28]
 800a4ae:	f8ad 001e 	strh.w	r0, [sp, #30]
 800a4b2:	f8ad 2018 	strh.w	r2, [sp, #24]
 800a4b6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a4ba:	4b1f      	ldr	r3, [pc, #124]	; (800a538 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800a4bc:	681b      	ldr	r3, [r3, #0]
 800a4be:	b953      	cbnz	r3, 800a4d6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800a4c0:	4b1e      	ldr	r3, [pc, #120]	; (800a53c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800a4c2:	4a1f      	ldr	r2, [pc, #124]	; (800a540 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800a4c4:	481f      	ldr	r0, [pc, #124]	; (800a544 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800a4c6:	2187      	movs	r1, #135	; 0x87
 800a4c8:	f010 fbe6 	bl	801ac98 <__assert_func>
 800a4cc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800a4ce:	e7b9      	b.n	800a444 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800a4d0:	2300      	movs	r3, #0
 800a4d2:	9307      	str	r3, [sp, #28]
 800a4d4:	e7f1      	b.n	800a4ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800a4d6:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800a4da:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a4de:	429a      	cmp	r2, r3
 800a4e0:	d026      	beq.n	800a530 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a4e2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800a4e6:	2b00      	cmp	r3, #0
 800a4e8:	dd22      	ble.n	800a530 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a4ea:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a4ee:	2b00      	cmp	r3, #0
 800a4f0:	dd1e      	ble.n	800a530 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a4f2:	2300      	movs	r3, #0
 800a4f4:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800a4f8:	6823      	ldr	r3, [r4, #0]
 800a4fa:	a908      	add	r1, sp, #32
 800a4fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a4fe:	4620      	mov	r0, r4
 800a500:	4798      	blx	r3
 800a502:	4b11      	ldr	r3, [pc, #68]	; (800a548 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800a504:	681b      	ldr	r3, [r3, #0]
 800a506:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a50a:	b10a      	cbz	r2, 800a510 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800a50c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a50e:	b900      	cbnz	r0, 800a512 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800a510:	6898      	ldr	r0, [r3, #8]
 800a512:	6801      	ldr	r1, [r0, #0]
 800a514:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800a518:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800a51c:	2501      	movs	r5, #1
 800a51e:	9502      	str	r5, [sp, #8]
 800a520:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800a524:	9401      	str	r4, [sp, #4]
 800a526:	ac06      	add	r4, sp, #24
 800a528:	9400      	str	r4, [sp, #0]
 800a52a:	688c      	ldr	r4, [r1, #8]
 800a52c:	a905      	add	r1, sp, #20
 800a52e:	47a0      	blx	r4
 800a530:	b00a      	add	sp, #40	; 0x28
 800a532:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a536:	bf00      	nop
 800a538:	2000a578 	.word	0x2000a578
 800a53c:	0801da88 	.word	0x0801da88
 800a540:	0801daea 	.word	0x0801daea
 800a544:	0801dac4 	.word	0x0801dac4
 800a548:	2000a4f0 	.word	0x2000a4f0

0800a54c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800a54c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800a550:	b12a      	cbz	r2, 800a55e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800a552:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800a556:	b112      	cbz	r2, 800a55e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800a558:	6803      	ldr	r3, [r0, #0]
 800a55a:	695b      	ldr	r3, [r3, #20]
 800a55c:	4718      	bx	r3
 800a55e:	4770      	bx	lr

0800a560 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800a560:	4770      	bx	lr

0800a562 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800a562:	b510      	push	{r4, lr}
 800a564:	2148      	movs	r1, #72	; 0x48
 800a566:	4604      	mov	r4, r0
 800a568:	f010 fb68 	bl	801ac3c <_ZdlPvj>
 800a56c:	4620      	mov	r0, r4
 800a56e:	bd10      	pop	{r4, pc}

0800a570 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800a570:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a574:	4604      	mov	r4, r0
 800a576:	4d57      	ldr	r5, [pc, #348]	; (800a6d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800a578:	b08c      	sub	sp, #48	; 0x30
 800a57a:	4688      	mov	r8, r1
 800a57c:	f7ff ff58 	bl	800a430 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800a580:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800a582:	882b      	ldrh	r3, [r5, #0]
 800a584:	4293      	cmp	r3, r2
 800a586:	f240 80a1 	bls.w	800a6cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800a58a:	4e53      	ldr	r6, [pc, #332]	; (800a6d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800a58c:	6833      	ldr	r3, [r6, #0]
 800a58e:	b92b      	cbnz	r3, 800a59c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 800a590:	4b52      	ldr	r3, [pc, #328]	; (800a6dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800a592:	4a53      	ldr	r2, [pc, #332]	; (800a6e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800a594:	21ae      	movs	r1, #174	; 0xae
 800a596:	4853      	ldr	r0, [pc, #332]	; (800a6e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800a598:	f010 fb7e 	bl	801ac98 <__assert_func>
 800a59c:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a5a0:	4b51      	ldr	r3, [pc, #324]	; (800a6e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 800a5a2:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 800a5a6:	681b      	ldr	r3, [r3, #0]
 800a5a8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800a5ac:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800a5b0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800a5b4:	2300      	movs	r3, #0
 800a5b6:	f1be 0f01 	cmp.w	lr, #1
 800a5ba:	9303      	str	r3, [sp, #12]
 800a5bc:	b208      	sxth	r0, r1
 800a5be:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800a5c2:	f04f 0c02 	mov.w	ip, #2
 800a5c6:	d044      	beq.n	800a652 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 800a5c8:	f1be 0f03 	cmp.w	lr, #3
 800a5cc:	d041      	beq.n	800a652 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xe2>
 800a5ce:	1a52      	subs	r2, r2, r1
 800a5d0:	f8ad 3010 	strh.w	r3, [sp, #16]
 800a5d4:	fb92 f2fc 	sdiv	r2, r2, ip
 800a5d8:	f8ad 0012 	strh.w	r0, [sp, #18]
 800a5dc:	f8ad 200e 	strh.w	r2, [sp, #14]
 800a5e0:	f10d 090c 	add.w	r9, sp, #12
 800a5e4:	e899 0003 	ldmia.w	r9, {r0, r1}
 800a5e8:	f10d 0a14 	add.w	sl, sp, #20
 800a5ec:	e88a 0003 	stmia.w	sl, {r0, r1}
 800a5f0:	4641      	mov	r1, r8
 800a5f2:	4650      	mov	r0, sl
 800a5f4:	f7fe fd84 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 800a5f8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800a5fc:	2b00      	cmp	r3, #0
 800a5fe:	dd65      	ble.n	800a6cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800a600:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800a604:	2b00      	cmp	r3, #0
 800a606:	dd61      	ble.n	800a6cc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15c>
 800a608:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800a60c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a610:	1a9b      	subs	r3, r3, r2
 800a612:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a616:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800a61a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800a61e:	1a9b      	subs	r3, r3, r2
 800a620:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a624:	6823      	ldr	r3, [r4, #0]
 800a626:	4649      	mov	r1, r9
 800a628:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a62a:	4620      	mov	r0, r4
 800a62c:	4798      	blx	r3
 800a62e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800a632:	b1c3      	cbz	r3, 800a666 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xf6>
 800a634:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800a638:	6833      	ldr	r3, [r6, #0]
 800a63a:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800a63e:	2b00      	cmp	r3, #0
 800a640:	d0a6      	beq.n	800a590 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 800a642:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800a644:	882d      	ldrh	r5, [r5, #0]
 800a646:	428d      	cmp	r5, r1
 800a648:	d810      	bhi.n	800a66c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xfc>
 800a64a:	4b28      	ldr	r3, [pc, #160]	; (800a6ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 800a64c:	4a24      	ldr	r2, [pc, #144]	; (800a6e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800a64e:	21af      	movs	r1, #175	; 0xaf
 800a650:	e7a1      	b.n	800a596 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 800a652:	1a5b      	subs	r3, r3, r1
 800a654:	f8ad 0010 	strh.w	r0, [sp, #16]
 800a658:	fb93 f3fc 	sdiv	r3, r3, ip
 800a65c:	f8ad 2012 	strh.w	r2, [sp, #18]
 800a660:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a664:	e7bc      	b.n	800a5e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x70>
 800a666:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800a66a:	e7e5      	b.n	800a638 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xc8>
 800a66c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800a670:	6812      	ldr	r2, [r2, #0]
 800a672:	785b      	ldrb	r3, [r3, #1]
 800a674:	9209      	str	r2, [sp, #36]	; 0x24
 800a676:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800a67a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a67e:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a682:	2300      	movs	r3, #0
 800a684:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800a688:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800a68c:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800a690:	4b17      	ldr	r3, [pc, #92]	; (800a6f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 800a692:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800a696:	681b      	ldr	r3, [r3, #0]
 800a698:	9707      	str	r7, [sp, #28]
 800a69a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a69e:	f88d 5020 	strb.w	r5, [sp, #32]
 800a6a2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a6a6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a6aa:	b10a      	cbz	r2, 800a6b0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800a6ac:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800a6ae:	b904      	cbnz	r4, 800a6b2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x142>
 800a6b0:	689c      	ldr	r4, [r3, #8]
 800a6b2:	4b10      	ldr	r3, [pc, #64]	; (800a6f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 800a6b4:	6818      	ldr	r0, [r3, #0]
 800a6b6:	f7f8 f94d 	bl	8002954 <_ZNK8touchgfx5Texts7getTextEt>
 800a6ba:	ab07      	add	r3, sp, #28
 800a6bc:	9001      	str	r0, [sp, #4]
 800a6be:	9300      	str	r3, [sp, #0]
 800a6c0:	e899 0006 	ldmia.w	r9, {r1, r2}
 800a6c4:	4653      	mov	r3, sl
 800a6c6:	4620      	mov	r0, r4
 800a6c8:	f7f8 f8f6 	bl	80028b8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a6cc:	b00c      	add	sp, #48	; 0x30
 800a6ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a6d2:	bf00      	nop
 800a6d4:	2000a544 	.word	0x2000a544
 800a6d8:	2000a540 	.word	0x2000a540
 800a6dc:	0801c990 	.word	0x0801c990
 800a6e0:	0801dbd0 	.word	0x0801dbd0
 800a6e4:	0801ca1e 	.word	0x0801ca1e
 800a6e8:	2000a548 	.word	0x2000a548
 800a6ec:	0801db1d 	.word	0x0801db1d
 800a6f0:	2000a4f0 	.word	0x2000a4f0
 800a6f4:	2000a54c 	.word	0x2000a54c

0800a6f8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800a6f8:	b510      	push	{r4, lr}
 800a6fa:	2101      	movs	r1, #1
 800a6fc:	4c13      	ldr	r4, [pc, #76]	; (800a74c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800a6fe:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800a702:	2200      	movs	r2, #0
 800a704:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800a708:	6004      	str	r4, [r0, #0]
 800a70a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a70e:	4c10      	ldr	r4, [pc, #64]	; (800a750 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800a710:	8082      	strh	r2, [r0, #4]
 800a712:	80c2      	strh	r2, [r0, #6]
 800a714:	8102      	strh	r2, [r0, #8]
 800a716:	8142      	strh	r2, [r0, #10]
 800a718:	8182      	strh	r2, [r0, #12]
 800a71a:	81c2      	strh	r2, [r0, #14]
 800a71c:	8202      	strh	r2, [r0, #16]
 800a71e:	8242      	strh	r2, [r0, #18]
 800a720:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a724:	61c2      	str	r2, [r0, #28]
 800a726:	8402      	strh	r2, [r0, #32]
 800a728:	8442      	strh	r2, [r0, #34]	; 0x22
 800a72a:	6282      	str	r2, [r0, #40]	; 0x28
 800a72c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800a730:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800a732:	8601      	strh	r1, [r0, #48]	; 0x30
 800a734:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800a738:	6344      	str	r4, [r0, #52]	; 0x34
 800a73a:	8701      	strh	r1, [r0, #56]	; 0x38
 800a73c:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800a740:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800a744:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800a748:	bd10      	pop	{r4, pc}
 800a74a:	bf00      	nop
 800a74c:	0801db64 	.word	0x0801db64
 800a750:	0801c588 	.word	0x0801c588

0800a754 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800a754:	b510      	push	{r4, lr}
 800a756:	6803      	ldr	r3, [r0, #0]
 800a758:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a75a:	460c      	mov	r4, r1
 800a75c:	4798      	blx	r3
 800a75e:	1b03      	subs	r3, r0, r4
 800a760:	4258      	negs	r0, r3
 800a762:	4158      	adcs	r0, r3
 800a764:	bd10      	pop	{r4, pc}
	...

0800a768 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800a768:	4b01      	ldr	r3, [pc, #4]	; (800a770 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800a76a:	6019      	str	r1, [r3, #0]
 800a76c:	4770      	bx	lr
 800a76e:	bf00      	nop
 800a770:	2000a4f8 	.word	0x2000a4f8

0800a774 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800a774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a778:	4696      	mov	lr, r2
 800a77a:	4605      	mov	r5, r0
 800a77c:	4614      	mov	r4, r2
 800a77e:	460e      	mov	r6, r1
 800a780:	461f      	mov	r7, r3
 800a782:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a786:	b097      	sub	sp, #92	; 0x5c
 800a788:	f10d 0c1c 	add.w	ip, sp, #28
 800a78c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a790:	f8de 3000 	ldr.w	r3, [lr]
 800a794:	f8cc 3000 	str.w	r3, [ip]
 800a798:	f104 0e14 	add.w	lr, r4, #20
 800a79c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a7a0:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800a7a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a7a8:	f8de 3000 	ldr.w	r3, [lr]
 800a7ac:	f8cc 3000 	str.w	r3, [ip]
 800a7b0:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800a7b4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a7b8:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800a7bc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a7c0:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800a7c4:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800a7c8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800a7cc:	f8de 3000 	ldr.w	r3, [lr]
 800a7d0:	f8cc 3000 	str.w	r3, [ip]
 800a7d4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a7d6:	682b      	ldr	r3, [r5, #0]
 800a7d8:	9201      	str	r2, [sp, #4]
 800a7da:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800a7de:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800a7e0:	9200      	str	r2, [sp, #0]
 800a7e2:	f8cd 8008 	str.w	r8, [sp, #8]
 800a7e6:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800a7ea:	aa07      	add	r2, sp, #28
 800a7ec:	463b      	mov	r3, r7
 800a7ee:	4631      	mov	r1, r6
 800a7f0:	4628      	mov	r0, r5
 800a7f2:	47d8      	blx	fp
 800a7f4:	46a6      	mov	lr, r4
 800a7f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a7fa:	f10d 0c1c 	add.w	ip, sp, #28
 800a7fe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a802:	f8de 3000 	ldr.w	r3, [lr]
 800a806:	f8cc 3000 	str.w	r3, [ip]
 800a80a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800a80e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800a812:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800a816:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a81a:	343c      	adds	r4, #60	; 0x3c
 800a81c:	f8de 3000 	ldr.w	r3, [lr]
 800a820:	f8cc 3000 	str.w	r3, [ip]
 800a824:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a826:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800a82a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800a82e:	6823      	ldr	r3, [r4, #0]
 800a830:	f8cc 3000 	str.w	r3, [ip]
 800a834:	682b      	ldr	r3, [r5, #0]
 800a836:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800a83a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a83c:	9201      	str	r2, [sp, #4]
 800a83e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800a840:	9200      	str	r2, [sp, #0]
 800a842:	f8cd 8008 	str.w	r8, [sp, #8]
 800a846:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800a848:	aa07      	add	r2, sp, #28
 800a84a:	463b      	mov	r3, r7
 800a84c:	4631      	mov	r1, r6
 800a84e:	4628      	mov	r0, r5
 800a850:	47a0      	blx	r4
 800a852:	b017      	add	sp, #92	; 0x5c
 800a854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800a858 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800a858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a85c:	b08d      	sub	sp, #52	; 0x34
 800a85e:	4688      	mov	r8, r1
 800a860:	9916      	ldr	r1, [sp, #88]	; 0x58
 800a862:	f8d3 c000 	ldr.w	ip, [r3]
 800a866:	680f      	ldr	r7, [r1, #0]
 800a868:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800a86c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800a870:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800a874:	edd3 6a07 	vldr	s13, [r3, #28]
 800a878:	9918      	ldr	r1, [sp, #96]	; 0x60
 800a87a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800a87e:	f9b1 9000 	ldrsh.w	r9, [r1]
 800a882:	f9ba 1000 	ldrsh.w	r1, [sl]
 800a886:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800a88a:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800a88e:	eba7 070c 	sub.w	r7, r7, ip
 800a892:	42bc      	cmp	r4, r7
 800a894:	bfa8      	it	ge
 800a896:	463c      	movge	r4, r7
 800a898:	ee07 4a90 	vmov	s15, r4
 800a89c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800a8a0:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800a8a4:	ee25 4a04 	vmul.f32	s8, s10, s8
 800a8a8:	ee65 4a24 	vmul.f32	s9, s10, s9
 800a8ac:	ee25 5a27 	vmul.f32	s10, s10, s15
 800a8b0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800a8b4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800a8b8:	eb09 0e0c 	add.w	lr, r9, ip
 800a8bc:	4571      	cmp	r1, lr
 800a8be:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800a8c2:	ee32 1a05 	vadd.f32	s2, s4, s10
 800a8c6:	ee36 0a84 	vadd.f32	s0, s13, s8
 800a8ca:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a8ce:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a8d2:	f340 808d 	ble.w	800a9f0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800a8d6:	eba1 060e 	sub.w	r6, r1, lr
 800a8da:	fb96 f5f4 	sdiv	r5, r6, r4
 800a8de:	ee07 5a10 	vmov	s14, r5
 800a8e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a8e6:	2d00      	cmp	r5, #0
 800a8e8:	fb04 6615 	mls	r6, r4, r5, r6
 800a8ec:	eea7 0a04 	vfma.f32	s0, s14, s8
 800a8f0:	eee7 0a24 	vfma.f32	s1, s14, s9
 800a8f4:	eea7 1a05 	vfma.f32	s2, s14, s10
 800a8f8:	dd13      	ble.n	800a922 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800a8fa:	ee70 6a44 	vsub.f32	s13, s0, s8
 800a8fe:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800a902:	eef5 6a40 	vcmp.f32	s13, #0.0
 800a906:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a90a:	bf18      	it	ne
 800a90c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800a910:	ee31 2a45 	vsub.f32	s4, s2, s10
 800a914:	bf08      	it	eq
 800a916:	eeb0 7a67 	vmoveq.f32	s14, s15
 800a91a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a91e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a922:	fb05 f204 	mul.w	r2, r5, r4
 800a926:	1abf      	subs	r7, r7, r2
 800a928:	4494      	add	ip, r2
 800a92a:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800a92e:	4411      	add	r1, r2
 800a930:	eb09 020c 	add.w	r2, r9, ip
 800a934:	443a      	add	r2, r7
 800a936:	b209      	sxth	r1, r1
 800a938:	428a      	cmp	r2, r1
 800a93a:	bfc4      	itt	gt
 800a93c:	eba1 0209 	subgt.w	r2, r1, r9
 800a940:	eba2 070c 	subgt.w	r7, r2, ip
 800a944:	2f00      	cmp	r7, #0
 800a946:	dd50      	ble.n	800a9ea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800a948:	fb97 f1f4 	sdiv	r1, r7, r4
 800a94c:	fb04 7211 	mls	r2, r4, r1, r7
 800a950:	b90a      	cbnz	r2, 800a956 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800a952:	3901      	subs	r1, #1
 800a954:	4622      	mov	r2, r4
 800a956:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800a95a:	6840      	ldr	r0, [r0, #4]
 800a95c:	900b      	str	r0, [sp, #44]	; 0x2c
 800a95e:	f8d0 a000 	ldr.w	sl, [r0]
 800a962:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800a964:	9008      	str	r0, [sp, #32]
 800a966:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800a96a:	9818      	ldr	r0, [sp, #96]	; 0x60
 800a96c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800a970:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800a974:	695b      	ldr	r3, [r3, #20]
 800a976:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800a978:	445b      	add	r3, fp
 800a97a:	eef0 6a42 	vmov.f32	s13, s4
 800a97e:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800a982:	ee21 3a23 	vmul.f32	s6, s2, s7
 800a986:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800a98a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800a98e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a992:	9307      	str	r3, [sp, #28]
 800a994:	ee17 7a90 	vmov	r7, s15
 800a998:	ee73 7a42 	vsub.f32	s15, s6, s4
 800a99c:	eeb0 7a61 	vmov.f32	s14, s3
 800a9a0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a9a4:	ee16 3a90 	vmov	r3, s13
 800a9a8:	fb97 f7f4 	sdiv	r7, r7, r4
 800a9ac:	ee17 ca90 	vmov	ip, s15
 800a9b0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800a9b4:	fb9c fcf4 	sdiv	ip, ip, r4
 800a9b8:	fb0c 3306 	mla	r3, ip, r6, r3
 800a9bc:	9302      	str	r3, [sp, #8]
 800a9be:	ee17 3a10 	vmov	r3, s14
 800a9c2:	44b6      	add	lr, r6
 800a9c4:	fb04 e505 	mla	r5, r4, r5, lr
 800a9c8:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800a9cc:	fb07 3706 	mla	r7, r7, r6, r3
 800a9d0:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800a9d4:	e9cd 4700 	strd	r4, r7, [sp]
 800a9d8:	2900      	cmp	r1, #0
 800a9da:	bfcc      	ite	gt
 800a9dc:	46a1      	movgt	r9, r4
 800a9de:	4691      	movle	r9, r2
 800a9e0:	eba9 0306 	sub.w	r3, r9, r6
 800a9e4:	f8da 4008 	ldr.w	r4, [sl, #8]
 800a9e8:	47a0      	blx	r4
 800a9ea:	b00d      	add	sp, #52	; 0x34
 800a9ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a9f0:	2500      	movs	r5, #0
 800a9f2:	462e      	mov	r6, r5
 800a9f4:	e799      	b.n	800a92a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800a9f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800a9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a9fc:	b0db      	sub	sp, #364	; 0x16c
 800a9fe:	461d      	mov	r5, r3
 800aa00:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800aa04:	930a      	str	r3, [sp, #40]	; 0x28
 800aa06:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800aa0a:	930b      	str	r3, [sp, #44]	; 0x2c
 800aa0c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800aa10:	9310      	str	r3, [sp, #64]	; 0x40
 800aa12:	6803      	ldr	r3, [r0, #0]
 800aa14:	910f      	str	r1, [sp, #60]	; 0x3c
 800aa16:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800aa18:	9009      	str	r0, [sp, #36]	; 0x24
 800aa1a:	4614      	mov	r4, r2
 800aa1c:	4629      	mov	r1, r5
 800aa1e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800aa22:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800aa26:	47b8      	blx	r7
 800aa28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800aa2a:	6058      	str	r0, [r3, #4]
 800aa2c:	2800      	cmp	r0, #0
 800aa2e:	f000 83a1 	beq.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aa32:	682b      	ldr	r3, [r5, #0]
 800aa34:	9314      	str	r3, [sp, #80]	; 0x50
 800aa36:	686b      	ldr	r3, [r5, #4]
 800aa38:	9315      	str	r3, [sp, #84]	; 0x54
 800aa3a:	4bc4      	ldr	r3, [pc, #784]	; (800ad4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800aa3c:	ed94 7a02 	vldr	s14, [r4, #8]
 800aa40:	7819      	ldrb	r1, [r3, #0]
 800aa42:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800aa46:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800aa4a:	2900      	cmp	r1, #0
 800aa4c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800aa50:	bf16      	itet	ne
 800aa52:	4619      	movne	r1, r3
 800aa54:	4611      	moveq	r1, r2
 800aa56:	4613      	movne	r3, r2
 800aa58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aa5c:	9116      	str	r1, [sp, #88]	; 0x58
 800aa5e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800aa62:	f240 8387 	bls.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aa66:	ed94 7a07 	vldr	s14, [r4, #28]
 800aa6a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800aa6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aa72:	f240 837f 	bls.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aa76:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800aa7a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800aa7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aa82:	f240 8377 	bls.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aa86:	6822      	ldr	r2, [r4, #0]
 800aa88:	4bb1      	ldr	r3, [pc, #708]	; (800ad50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800aa8a:	429a      	cmp	r2, r3
 800aa8c:	f2c0 8372 	blt.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aa90:	49b0      	ldr	r1, [pc, #704]	; (800ad54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800aa92:	6963      	ldr	r3, [r4, #20]
 800aa94:	428a      	cmp	r2, r1
 800aa96:	f300 836d 	bgt.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aa9a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800aa9e:	48ae      	ldr	r0, [pc, #696]	; (800ad58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800aaa0:	33ff      	adds	r3, #255	; 0xff
 800aaa2:	4283      	cmp	r3, r0
 800aaa4:	f200 8366 	bhi.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aaa8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800aaaa:	4dac      	ldr	r5, [pc, #688]	; (800ad5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800aaac:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800aab0:	33ff      	adds	r3, #255	; 0xff
 800aab2:	42ab      	cmp	r3, r5
 800aab4:	f200 835e 	bhi.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aab8:	6862      	ldr	r2, [r4, #4]
 800aaba:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800aabe:	33ff      	adds	r3, #255	; 0xff
 800aac0:	4283      	cmp	r3, r0
 800aac2:	f200 8357 	bhi.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aac6:	69a1      	ldr	r1, [r4, #24]
 800aac8:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800aacc:	33ff      	adds	r3, #255	; 0xff
 800aace:	4283      	cmp	r3, r0
 800aad0:	f200 8350 	bhi.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aad4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800aad6:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800aada:	30ff      	adds	r0, #255	; 0xff
 800aadc:	42a8      	cmp	r0, r5
 800aade:	f200 8349 	bhi.w	800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aae2:	428a      	cmp	r2, r1
 800aae4:	f280 8110 	bge.w	800ad08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800aae8:	429a      	cmp	r2, r3
 800aaea:	f300 8119 	bgt.w	800ad20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800aaee:	4299      	cmp	r1, r3
 800aaf0:	f280 811d 	bge.w	800ad2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800aaf4:	2502      	movs	r5, #2
 800aaf6:	2701      	movs	r7, #1
 800aaf8:	46a9      	mov	r9, r5
 800aafa:	46b8      	mov	r8, r7
 800aafc:	f04f 0a00 	mov.w	sl, #0
 800ab00:	4621      	mov	r1, r4
 800ab02:	a849      	add	r0, sp, #292	; 0x124
 800ab04:	f003 fc78 	bl	800e3f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ab08:	4622      	mov	r2, r4
 800ab0a:	4653      	mov	r3, sl
 800ab0c:	a949      	add	r1, sp, #292	; 0x124
 800ab0e:	f8cd 9000 	str.w	r9, [sp]
 800ab12:	a819      	add	r0, sp, #100	; 0x64
 800ab14:	f003 fda0 	bl	800e658 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ab18:	4622      	mov	r2, r4
 800ab1a:	4653      	mov	r3, sl
 800ab1c:	a949      	add	r1, sp, #292	; 0x124
 800ab1e:	f8cd 8000 	str.w	r8, [sp]
 800ab22:	a829      	add	r0, sp, #164	; 0xa4
 800ab24:	f003 fd98 	bl	800e658 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ab28:	4643      	mov	r3, r8
 800ab2a:	4622      	mov	r2, r4
 800ab2c:	a949      	add	r1, sp, #292	; 0x124
 800ab2e:	f8cd 9000 	str.w	r9, [sp]
 800ab32:	a839      	add	r0, sp, #228	; 0xe4
 800ab34:	f003 fd90 	bl	800e658 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ab38:	42af      	cmp	r7, r5
 800ab3a:	bfb5      	itete	lt
 800ab3c:	2300      	movlt	r3, #0
 800ab3e:	2301      	movge	r3, #1
 800ab40:	930e      	strlt	r3, [sp, #56]	; 0x38
 800ab42:	930e      	strge	r3, [sp, #56]	; 0x38
 800ab44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ab46:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ab4a:	af12      	add	r7, sp, #72	; 0x48
 800ab4c:	bfb9      	ittee	lt
 800ab4e:	ad29      	addlt	r5, sp, #164	; 0xa4
 800ab50:	ac19      	addlt	r4, sp, #100	; 0x64
 800ab52:	ad19      	addge	r5, sp, #100	; 0x64
 800ab54:	ac29      	addge	r4, sp, #164	; 0xa4
 800ab56:	e887 0003 	stmia.w	r7, {r0, r1}
 800ab5a:	b928      	cbnz	r0, 800ab68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800ab5c:	4b80      	ldr	r3, [pc, #512]	; (800ad60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800ab5e:	6818      	ldr	r0, [r3, #0]
 800ab60:	6803      	ldr	r3, [r0, #0]
 800ab62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ab64:	4798      	blx	r3
 800ab66:	6038      	str	r0, [r7, #0]
 800ab68:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ab6a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ab6e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ab72:	930c      	str	r3, [sp, #48]	; 0x30
 800ab74:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ab76:	6963      	ldr	r3, [r4, #20]
 800ab78:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800ab7a:	440b      	add	r3, r1
 800ab7c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ab80:	4408      	add	r0, r1
 800ab82:	b200      	sxth	r0, r0
 800ab84:	4283      	cmp	r3, r0
 800ab86:	900d      	str	r0, [sp, #52]	; 0x34
 800ab88:	f280 80dd 	bge.w	800ad46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800ab8c:	428b      	cmp	r3, r1
 800ab8e:	da08      	bge.n	800aba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ab90:	2a00      	cmp	r2, #0
 800ab92:	dd06      	ble.n	800aba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ab94:	1acb      	subs	r3, r1, r3
 800ab96:	429a      	cmp	r2, r3
 800ab98:	f2c0 80e4 	blt.w	800ad64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800ab9c:	2b00      	cmp	r3, #0
 800ab9e:	f300 80e2 	bgt.w	800ad66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800aba2:	6967      	ldr	r7, [r4, #20]
 800aba4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800aba6:	443b      	add	r3, r7
 800aba8:	461f      	mov	r7, r3
 800abaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800abac:	1bdf      	subs	r7, r3, r7
 800abae:	4297      	cmp	r7, r2
 800abb0:	bfa8      	it	ge
 800abb2:	4617      	movge	r7, r2
 800abb4:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800abb8:	2f00      	cmp	r7, #0
 800abba:	f340 8166 	ble.w	800ae8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800abbe:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800abc0:	6829      	ldr	r1, [r5, #0]
 800abc2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800abc6:	f9bb 3000 	ldrsh.w	r3, [fp]
 800abca:	6820      	ldr	r0, [r4, #0]
 800abcc:	4411      	add	r1, r2
 800abce:	4299      	cmp	r1, r3
 800abd0:	dd1a      	ble.n	800ac08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800abd2:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800abd6:	440b      	add	r3, r1
 800abd8:	4402      	add	r2, r0
 800abda:	b21b      	sxth	r3, r3
 800abdc:	429a      	cmp	r2, r3
 800abde:	dc13      	bgt.n	800ac08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800abe0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800abe2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800abe4:	681b      	ldr	r3, [r3, #0]
 800abe6:	9206      	str	r2, [sp, #24]
 800abe8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800abea:	9205      	str	r2, [sp, #20]
 800abec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800abee:	9500      	str	r5, [sp, #0]
 800abf0:	e9cd b203 	strd	fp, r2, [sp, #12]
 800abf4:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800abf6:	9809      	ldr	r0, [sp, #36]	; 0x24
 800abf8:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800abfc:	a912      	add	r1, sp, #72	; 0x48
 800abfe:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ac02:	aa49      	add	r2, sp, #292	; 0x124
 800ac04:	4623      	mov	r3, r4
 800ac06:	47c8      	blx	r9
 800ac08:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ac0c:	441a      	add	r2, r3
 800ac0e:	6963      	ldr	r3, [r4, #20]
 800ac10:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ac14:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ac18:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ac1c:	68a1      	ldr	r1, [r4, #8]
 800ac1e:	ed94 6a08 	vldr	s12, [r4, #32]
 800ac22:	6022      	str	r2, [r4, #0]
 800ac24:	3301      	adds	r3, #1
 800ac26:	6163      	str	r3, [r4, #20]
 800ac28:	69a3      	ldr	r3, [r4, #24]
 800ac2a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ac2e:	3b01      	subs	r3, #1
 800ac30:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ac34:	61a3      	str	r3, [r4, #24]
 800ac36:	6923      	ldr	r3, [r4, #16]
 800ac38:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ac3c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ac40:	edd4 6a07 	vldr	s13, [r4, #28]
 800ac44:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ac48:	440b      	add	r3, r1
 800ac4a:	68e1      	ldr	r1, [r4, #12]
 800ac4c:	6123      	str	r3, [r4, #16]
 800ac4e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ac52:	428b      	cmp	r3, r1
 800ac54:	edc4 6a07 	vstr	s13, [r4, #28]
 800ac58:	db15      	blt.n	800ac86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800ac5a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ac5e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ac62:	3201      	adds	r2, #1
 800ac64:	edc4 6a07 	vstr	s13, [r4, #28]
 800ac68:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ac6c:	6022      	str	r2, [r4, #0]
 800ac6e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ac72:	1a5b      	subs	r3, r3, r1
 800ac74:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ac78:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ac7c:	6123      	str	r3, [r4, #16]
 800ac7e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ac82:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ac86:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ac8a:	441a      	add	r2, r3
 800ac8c:	696b      	ldr	r3, [r5, #20]
 800ac8e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ac92:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ac96:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ac9a:	68a9      	ldr	r1, [r5, #8]
 800ac9c:	ed95 6a08 	vldr	s12, [r5, #32]
 800aca0:	602a      	str	r2, [r5, #0]
 800aca2:	3301      	adds	r3, #1
 800aca4:	616b      	str	r3, [r5, #20]
 800aca6:	69ab      	ldr	r3, [r5, #24]
 800aca8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800acac:	3b01      	subs	r3, #1
 800acae:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800acb2:	61ab      	str	r3, [r5, #24]
 800acb4:	692b      	ldr	r3, [r5, #16]
 800acb6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800acba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800acbe:	edd5 6a07 	vldr	s13, [r5, #28]
 800acc2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800acc6:	440b      	add	r3, r1
 800acc8:	68e9      	ldr	r1, [r5, #12]
 800acca:	612b      	str	r3, [r5, #16]
 800accc:	ee76 6a86 	vadd.f32	s13, s13, s12
 800acd0:	428b      	cmp	r3, r1
 800acd2:	edc5 6a07 	vstr	s13, [r5, #28]
 800acd6:	db15      	blt.n	800ad04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800acd8:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800acdc:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ace0:	3201      	adds	r2, #1
 800ace2:	edc5 6a07 	vstr	s13, [r5, #28]
 800ace6:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800acea:	602a      	str	r2, [r5, #0]
 800acec:	ee36 7a87 	vadd.f32	s14, s13, s14
 800acf0:	1a5b      	subs	r3, r3, r1
 800acf2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800acf6:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800acfa:	612b      	str	r3, [r5, #16]
 800acfc:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ad00:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ad04:	3f01      	subs	r7, #1
 800ad06:	e757      	b.n	800abb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ad08:	4299      	cmp	r1, r3
 800ad0a:	dc13      	bgt.n	800ad34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ad0c:	429a      	cmp	r2, r3
 800ad0e:	da14      	bge.n	800ad3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ad10:	2502      	movs	r5, #2
 800ad12:	2703      	movs	r7, #3
 800ad14:	46a9      	mov	r9, r5
 800ad16:	f04f 0800 	mov.w	r8, #0
 800ad1a:	f04f 0a01 	mov.w	sl, #1
 800ad1e:	e6ef      	b.n	800ab00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ad20:	2501      	movs	r5, #1
 800ad22:	2700      	movs	r7, #0
 800ad24:	46a9      	mov	r9, r5
 800ad26:	46b8      	mov	r8, r7
 800ad28:	f04f 0a02 	mov.w	sl, #2
 800ad2c:	e6e8      	b.n	800ab00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ad2e:	2501      	movs	r5, #1
 800ad30:	2702      	movs	r7, #2
 800ad32:	e6e1      	b.n	800aaf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ad34:	2500      	movs	r5, #0
 800ad36:	2701      	movs	r7, #1
 800ad38:	e7f4      	b.n	800ad24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ad3a:	2702      	movs	r7, #2
 800ad3c:	2503      	movs	r5, #3
 800ad3e:	f04f 0900 	mov.w	r9, #0
 800ad42:	46b8      	mov	r8, r7
 800ad44:	e7e9      	b.n	800ad1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ad46:	4613      	mov	r3, r2
 800ad48:	e728      	b.n	800ab9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ad4a:	bf00      	nop
 800ad4c:	2000a4e8 	.word	0x2000a4e8
 800ad50:	fffd8f01 	.word	0xfffd8f01
 800ad54:	00027100 	.word	0x00027100
 800ad58:	0004e1ff 	.word	0x0004e1ff
 800ad5c:	0004e1fe 	.word	0x0004e1fe
 800ad60:	2000a4f0 	.word	0x2000a4f0
 800ad64:	4613      	mov	r3, r2
 800ad66:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ad68:	9111      	str	r1, [sp, #68]	; 0x44
 800ad6a:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800ad6e:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800ad72:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800ad74:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800ad78:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800ad7c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800ad80:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800ad84:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800ad88:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800ad8c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800ad90:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800ad94:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800ad98:	469e      	mov	lr, r3
 800ad9a:	469c      	mov	ip, r3
 800ad9c:	f04f 0900 	mov.w	r9, #0
 800ada0:	f1bc 0f00 	cmp.w	ip, #0
 800ada4:	d147      	bne.n	800ae36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800ada6:	eb03 0c07 	add.w	ip, r3, r7
 800adaa:	1ad7      	subs	r7, r2, r3
 800adac:	f1b9 0f00 	cmp.w	r9, #0
 800adb0:	d009      	beq.n	800adc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800adb2:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800adb6:	9029      	str	r0, [sp, #164]	; 0xa4
 800adb8:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800adbc:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800adc0:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800adc4:	912d      	str	r1, [sp, #180]	; 0xb4
 800adc6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800adc8:	9111      	str	r1, [sp, #68]	; 0x44
 800adca:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800adce:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800add2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800add6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800adda:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800adde:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ade2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ade6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800adea:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800adee:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800adf2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800adf6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800adfa:	f04f 0800 	mov.w	r8, #0
 800adfe:	f1be 0f00 	cmp.w	lr, #0
 800ae02:	d031      	beq.n	800ae68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ae04:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ae06:	4431      	add	r1, r6
 800ae08:	4549      	cmp	r1, r9
 800ae0a:	4450      	add	r0, sl
 800ae0c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ae10:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ae14:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ae18:	db08      	blt.n	800ae2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ae1a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ae1e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ae22:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ae26:	3001      	adds	r0, #1
 800ae28:	eba1 0109 	sub.w	r1, r1, r9
 800ae2c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ae30:	f04f 0801 	mov.w	r8, #1
 800ae34:	e7e3      	b.n	800adfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ae36:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ae38:	4431      	add	r1, r6
 800ae3a:	4541      	cmp	r1, r8
 800ae3c:	4450      	add	r0, sl
 800ae3e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ae42:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ae46:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ae4a:	db08      	blt.n	800ae5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ae4c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ae50:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ae54:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ae58:	3001      	adds	r0, #1
 800ae5a:	eba1 0108 	sub.w	r1, r1, r8
 800ae5e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ae62:	f04f 0901 	mov.w	r9, #1
 800ae66:	e79b      	b.n	800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ae68:	449c      	add	ip, r3
 800ae6a:	1aff      	subs	r7, r7, r3
 800ae6c:	f1b8 0f00 	cmp.w	r8, #0
 800ae70:	d009      	beq.n	800ae86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ae72:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ae76:	9019      	str	r0, [sp, #100]	; 0x64
 800ae78:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ae7c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ae80:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ae84:	911d      	str	r1, [sp, #116]	; 0x74
 800ae86:	1ad2      	subs	r2, r2, r3
 800ae88:	e68b      	b.n	800aba2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ae8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ae8c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800ae8e:	2b00      	cmp	r3, #0
 800ae90:	f000 80d1 	beq.w	800b036 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ae94:	ad19      	add	r5, sp, #100	; 0x64
 800ae96:	ac39      	add	r4, sp, #228	; 0xe4
 800ae98:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ae9a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ae9e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800aea2:	930c      	str	r3, [sp, #48]	; 0x30
 800aea4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800aea6:	6963      	ldr	r3, [r4, #20]
 800aea8:	440b      	add	r3, r1
 800aeaa:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800aeae:	4408      	add	r0, r1
 800aeb0:	b200      	sxth	r0, r0
 800aeb2:	4283      	cmp	r3, r0
 800aeb4:	900d      	str	r0, [sp, #52]	; 0x34
 800aeb6:	f280 80c1 	bge.w	800b03c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800aeba:	428b      	cmp	r3, r1
 800aebc:	da08      	bge.n	800aed0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800aebe:	2a00      	cmp	r2, #0
 800aec0:	dd06      	ble.n	800aed0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800aec2:	1acb      	subs	r3, r1, r3
 800aec4:	429a      	cmp	r2, r3
 800aec6:	f2c0 80bb 	blt.w	800b040 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800aeca:	2b00      	cmp	r3, #0
 800aecc:	f300 80b9 	bgt.w	800b042 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800aed0:	6967      	ldr	r7, [r4, #20]
 800aed2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800aed4:	443b      	add	r3, r7
 800aed6:	461f      	mov	r7, r3
 800aed8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800aeda:	1bdf      	subs	r7, r3, r7
 800aedc:	4297      	cmp	r7, r2
 800aede:	bfa8      	it	ge
 800aee0:	4617      	movge	r7, r2
 800aee2:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800aee6:	2f00      	cmp	r7, #0
 800aee8:	f340 813c 	ble.w	800b164 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800aeec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800aeee:	6829      	ldr	r1, [r5, #0]
 800aef0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800aef4:	f9bb 3000 	ldrsh.w	r3, [fp]
 800aef8:	6820      	ldr	r0, [r4, #0]
 800aefa:	4411      	add	r1, r2
 800aefc:	4299      	cmp	r1, r3
 800aefe:	dd1a      	ble.n	800af36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800af00:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800af04:	440b      	add	r3, r1
 800af06:	4402      	add	r2, r0
 800af08:	b21b      	sxth	r3, r3
 800af0a:	429a      	cmp	r2, r3
 800af0c:	dc13      	bgt.n	800af36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800af0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800af10:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800af12:	681b      	ldr	r3, [r3, #0]
 800af14:	9206      	str	r2, [sp, #24]
 800af16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800af18:	9205      	str	r2, [sp, #20]
 800af1a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800af1c:	9500      	str	r5, [sp, #0]
 800af1e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800af22:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800af24:	9809      	ldr	r0, [sp, #36]	; 0x24
 800af26:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800af2a:	a912      	add	r1, sp, #72	; 0x48
 800af2c:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800af30:	aa49      	add	r2, sp, #292	; 0x124
 800af32:	4623      	mov	r3, r4
 800af34:	47c8      	blx	r9
 800af36:	e9d4 2300 	ldrd	r2, r3, [r4]
 800af3a:	441a      	add	r2, r3
 800af3c:	6963      	ldr	r3, [r4, #20]
 800af3e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800af42:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800af46:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800af4a:	68a1      	ldr	r1, [r4, #8]
 800af4c:	ed94 6a08 	vldr	s12, [r4, #32]
 800af50:	6022      	str	r2, [r4, #0]
 800af52:	3301      	adds	r3, #1
 800af54:	6163      	str	r3, [r4, #20]
 800af56:	69a3      	ldr	r3, [r4, #24]
 800af58:	ee37 7a27 	vadd.f32	s14, s14, s15
 800af5c:	3b01      	subs	r3, #1
 800af5e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800af62:	61a3      	str	r3, [r4, #24]
 800af64:	6923      	ldr	r3, [r4, #16]
 800af66:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800af6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800af6e:	edd4 6a07 	vldr	s13, [r4, #28]
 800af72:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800af76:	440b      	add	r3, r1
 800af78:	68e1      	ldr	r1, [r4, #12]
 800af7a:	6123      	str	r3, [r4, #16]
 800af7c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800af80:	428b      	cmp	r3, r1
 800af82:	edc4 6a07 	vstr	s13, [r4, #28]
 800af86:	db15      	blt.n	800afb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800af88:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800af8c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800af90:	3201      	adds	r2, #1
 800af92:	edc4 6a07 	vstr	s13, [r4, #28]
 800af96:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800af9a:	6022      	str	r2, [r4, #0]
 800af9c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800afa0:	1a5b      	subs	r3, r3, r1
 800afa2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800afa6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800afaa:	6123      	str	r3, [r4, #16]
 800afac:	ee77 7a27 	vadd.f32	s15, s14, s15
 800afb0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800afb4:	e9d5 2300 	ldrd	r2, r3, [r5]
 800afb8:	441a      	add	r2, r3
 800afba:	696b      	ldr	r3, [r5, #20]
 800afbc:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800afc0:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800afc4:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800afc8:	68a9      	ldr	r1, [r5, #8]
 800afca:	ed95 6a08 	vldr	s12, [r5, #32]
 800afce:	602a      	str	r2, [r5, #0]
 800afd0:	3301      	adds	r3, #1
 800afd2:	616b      	str	r3, [r5, #20]
 800afd4:	69ab      	ldr	r3, [r5, #24]
 800afd6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800afda:	3b01      	subs	r3, #1
 800afdc:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800afe0:	61ab      	str	r3, [r5, #24]
 800afe2:	692b      	ldr	r3, [r5, #16]
 800afe4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800afe8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800afec:	edd5 6a07 	vldr	s13, [r5, #28]
 800aff0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800aff4:	440b      	add	r3, r1
 800aff6:	68e9      	ldr	r1, [r5, #12]
 800aff8:	612b      	str	r3, [r5, #16]
 800affa:	ee76 6a86 	vadd.f32	s13, s13, s12
 800affe:	428b      	cmp	r3, r1
 800b000:	edc5 6a07 	vstr	s13, [r5, #28]
 800b004:	db15      	blt.n	800b032 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800b006:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b00a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b00e:	3201      	adds	r2, #1
 800b010:	edc5 6a07 	vstr	s13, [r5, #28]
 800b014:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b018:	602a      	str	r2, [r5, #0]
 800b01a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b01e:	1a5b      	subs	r3, r3, r1
 800b020:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b024:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b028:	612b      	str	r3, [r5, #16]
 800b02a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b02e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b032:	3f01      	subs	r7, #1
 800b034:	e757      	b.n	800aee6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800b036:	ad39      	add	r5, sp, #228	; 0xe4
 800b038:	ac19      	add	r4, sp, #100	; 0x64
 800b03a:	e72d      	b.n	800ae98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800b03c:	4613      	mov	r3, r2
 800b03e:	e744      	b.n	800aeca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800b040:	4613      	mov	r3, r2
 800b042:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800b046:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800b048:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800b04c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800b050:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800b054:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800b058:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800b05c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800b060:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800b064:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800b066:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800b06a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800b06e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800b072:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800b076:	960e      	str	r6, [sp, #56]	; 0x38
 800b078:	469e      	mov	lr, r3
 800b07a:	461f      	mov	r7, r3
 800b07c:	f04f 0900 	mov.w	r9, #0
 800b080:	2f00      	cmp	r7, #0
 800b082:	d146      	bne.n	800b112 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800b084:	449c      	add	ip, r3
 800b086:	1ad7      	subs	r7, r2, r3
 800b088:	f1b9 0f00 	cmp.w	r9, #0
 800b08c:	d009      	beq.n	800b0a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800b08e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800b092:	9039      	str	r0, [sp, #228]	; 0xe4
 800b094:	913d      	str	r1, [sp, #244]	; 0xf4
 800b096:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800b09a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800b09e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800b0a2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b0a4:	910e      	str	r1, [sp, #56]	; 0x38
 800b0a6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b0aa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b0ae:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b0b2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b0b6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b0ba:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b0be:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b0c2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b0c6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b0ca:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b0ce:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b0d2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b0d6:	f04f 0800 	mov.w	r8, #0
 800b0da:	f1be 0f00 	cmp.w	lr, #0
 800b0de:	d030      	beq.n	800b142 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800b0e0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b0e2:	4431      	add	r1, r6
 800b0e4:	4549      	cmp	r1, r9
 800b0e6:	4450      	add	r0, sl
 800b0e8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b0ec:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b0f0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b0f4:	db08      	blt.n	800b108 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800b0f6:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b0fa:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b0fe:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b102:	3001      	adds	r0, #1
 800b104:	eba1 0109 	sub.w	r1, r1, r9
 800b108:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b10c:	f04f 0801 	mov.w	r8, #1
 800b110:	e7e3      	b.n	800b0da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800b112:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b114:	4431      	add	r1, r6
 800b116:	4541      	cmp	r1, r8
 800b118:	4450      	add	r0, sl
 800b11a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b11e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b122:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b126:	db08      	blt.n	800b13a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800b128:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b12c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b130:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b134:	3001      	adds	r0, #1
 800b136:	eba1 0108 	sub.w	r1, r1, r8
 800b13a:	3f01      	subs	r7, #1
 800b13c:	f04f 0901 	mov.w	r9, #1
 800b140:	e79e      	b.n	800b080 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800b142:	449c      	add	ip, r3
 800b144:	1aff      	subs	r7, r7, r3
 800b146:	f1b8 0f00 	cmp.w	r8, #0
 800b14a:	d009      	beq.n	800b160 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800b14c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b150:	9019      	str	r0, [sp, #100]	; 0x64
 800b152:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b156:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b15a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b15e:	911d      	str	r1, [sp, #116]	; 0x74
 800b160:	1ad2      	subs	r2, r2, r3
 800b162:	e6b5      	b.n	800aed0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b164:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b166:	681b      	ldr	r3, [r3, #0]
 800b168:	b923      	cbnz	r3, 800b174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b16a:	4b04      	ldr	r3, [pc, #16]	; (800b17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800b16c:	6818      	ldr	r0, [r3, #0]
 800b16e:	6803      	ldr	r3, [r0, #0]
 800b170:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b172:	4798      	blx	r3
 800b174:	b05b      	add	sp, #364	; 0x16c
 800b176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b17a:	bf00      	nop
 800b17c:	2000a4f0 	.word	0x2000a4f0

0800b180 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800b180:	b570      	push	{r4, r5, r6, lr}
 800b182:	4604      	mov	r4, r0
 800b184:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800b188:	9804      	ldr	r0, [sp, #16]
 800b18a:	6061      	str	r1, [r4, #4]
 800b18c:	2500      	movs	r5, #0
 800b18e:	8025      	strh	r5, [r4, #0]
 800b190:	7223      	strb	r3, [r4, #8]
 800b192:	7266      	strb	r6, [r4, #9]
 800b194:	60e0      	str	r0, [r4, #12]
 800b196:	8222      	strh	r2, [r4, #16]
 800b198:	8265      	strh	r5, [r4, #18]
 800b19a:	82a5      	strh	r5, [r4, #20]
 800b19c:	82e5      	strh	r5, [r4, #22]
 800b19e:	8325      	strh	r5, [r4, #24]
 800b1a0:	8365      	strh	r5, [r4, #26]
 800b1a2:	83a5      	strh	r5, [r4, #28]
 800b1a4:	77a5      	strb	r5, [r4, #30]
 800b1a6:	b32e      	cbz	r6, 800b1f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800b1a8:	6803      	ldr	r3, [r0, #0]
 800b1aa:	695b      	ldr	r3, [r3, #20]
 800b1ac:	4798      	blx	r3
 800b1ae:	4606      	mov	r6, r0
 800b1b0:	b300      	cbz	r0, 800b1f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800b1b2:	68e0      	ldr	r0, [r4, #12]
 800b1b4:	6803      	ldr	r3, [r0, #0]
 800b1b6:	4631      	mov	r1, r6
 800b1b8:	68db      	ldr	r3, [r3, #12]
 800b1ba:	4798      	blx	r3
 800b1bc:	4605      	mov	r5, r0
 800b1be:	b1c8      	cbz	r0, 800b1f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800b1c0:	7b43      	ldrb	r3, [r0, #13]
 800b1c2:	7a82      	ldrb	r2, [r0, #10]
 800b1c4:	005b      	lsls	r3, r3, #1
 800b1c6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b1ca:	4313      	orrs	r3, r2
 800b1cc:	83a3      	strh	r3, [r4, #28]
 800b1ce:	7a63      	ldrb	r3, [r4, #9]
 800b1d0:	2b04      	cmp	r3, #4
 800b1d2:	d10f      	bne.n	800b1f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800b1d4:	68e0      	ldr	r0, [r4, #12]
 800b1d6:	6803      	ldr	r3, [r0, #0]
 800b1d8:	462a      	mov	r2, r5
 800b1da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b1dc:	4631      	mov	r1, r6
 800b1de:	4798      	blx	r3
 800b1e0:	7b6b      	ldrb	r3, [r5, #13]
 800b1e2:	005b      	lsls	r3, r3, #1
 800b1e4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800b1e8:	7aab      	ldrb	r3, [r5, #10]
 800b1ea:	4313      	orrs	r3, r2
 800b1ec:	4418      	add	r0, r3
 800b1ee:	8ba3      	ldrh	r3, [r4, #28]
 800b1f0:	4418      	add	r0, r3
 800b1f2:	83a0      	strh	r0, [r4, #28]
 800b1f4:	4620      	mov	r0, r4
 800b1f6:	bd70      	pop	{r4, r5, r6, pc}

0800b1f8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800b1f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b1fc:	2400      	movs	r4, #0
 800b1fe:	b085      	sub	sp, #20
 800b200:	4681      	mov	r9, r0
 800b202:	4688      	mov	r8, r1
 800b204:	4692      	mov	sl, r2
 800b206:	469b      	mov	fp, r3
 800b208:	4627      	mov	r7, r4
 800b20a:	4625      	mov	r5, r4
 800b20c:	4626      	mov	r6, r4
 800b20e:	4554      	cmp	r4, sl
 800b210:	da2a      	bge.n	800b268 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b212:	2300      	movs	r3, #0
 800b214:	9303      	str	r3, [sp, #12]
 800b216:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b21a:	429d      	cmp	r5, r3
 800b21c:	d004      	beq.n	800b228 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800b21e:	f242 030b 	movw	r3, #8203	; 0x200b
 800b222:	429d      	cmp	r5, r3
 800b224:	bf18      	it	ne
 800b226:	462f      	movne	r7, r5
 800b228:	ab03      	add	r3, sp, #12
 800b22a:	4642      	mov	r2, r8
 800b22c:	4659      	mov	r1, fp
 800b22e:	4648      	mov	r0, r9
 800b230:	f002 fe9e 	bl	800df70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800b234:	4605      	mov	r5, r0
 800b236:	b1b8      	cbz	r0, 800b268 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b238:	280a      	cmp	r0, #10
 800b23a:	d015      	beq.n	800b268 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800b23c:	9a03      	ldr	r2, [sp, #12]
 800b23e:	b18a      	cbz	r2, 800b264 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800b240:	7b50      	ldrb	r0, [r2, #13]
 800b242:	7a93      	ldrb	r3, [r2, #10]
 800b244:	8895      	ldrh	r5, [r2, #4]
 800b246:	0040      	lsls	r0, r0, #1
 800b248:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800b24c:	4303      	orrs	r3, r0
 800b24e:	9301      	str	r3, [sp, #4]
 800b250:	f8d8 3000 	ldr.w	r3, [r8]
 800b254:	4639      	mov	r1, r7
 800b256:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b258:	4640      	mov	r0, r8
 800b25a:	4798      	blx	r3
 800b25c:	9b01      	ldr	r3, [sp, #4]
 800b25e:	4418      	add	r0, r3
 800b260:	4406      	add	r6, r0
 800b262:	b2b6      	uxth	r6, r6
 800b264:	3401      	adds	r4, #1
 800b266:	e7d2      	b.n	800b20e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800b268:	4630      	mov	r0, r6
 800b26a:	b005      	add	sp, #20
 800b26c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b270 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800b270:	2a02      	cmp	r2, #2
 800b272:	b530      	push	{r4, r5, lr}
 800b274:	d011      	beq.n	800b29a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800b276:	2a03      	cmp	r2, #3
 800b278:	d01c      	beq.n	800b2b4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800b27a:	2a01      	cmp	r2, #1
 800b27c:	d10c      	bne.n	800b298 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800b27e:	888b      	ldrh	r3, [r1, #4]
 800b280:	8801      	ldrh	r1, [r0, #0]
 800b282:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800b286:	8844      	ldrh	r4, [r0, #2]
 800b288:	8004      	strh	r4, [r0, #0]
 800b28a:	1a5b      	subs	r3, r3, r1
 800b28c:	1a9b      	subs	r3, r3, r2
 800b28e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800b292:	8043      	strh	r3, [r0, #2]
 800b294:	8081      	strh	r1, [r0, #4]
 800b296:	80c2      	strh	r2, [r0, #6]
 800b298:	bd30      	pop	{r4, r5, pc}
 800b29a:	88cb      	ldrh	r3, [r1, #6]
 800b29c:	8842      	ldrh	r2, [r0, #2]
 800b29e:	1a9b      	subs	r3, r3, r2
 800b2a0:	88c2      	ldrh	r2, [r0, #6]
 800b2a2:	1a9b      	subs	r3, r3, r2
 800b2a4:	888a      	ldrh	r2, [r1, #4]
 800b2a6:	8801      	ldrh	r1, [r0, #0]
 800b2a8:	8043      	strh	r3, [r0, #2]
 800b2aa:	1a52      	subs	r2, r2, r1
 800b2ac:	8881      	ldrh	r1, [r0, #4]
 800b2ae:	1a52      	subs	r2, r2, r1
 800b2b0:	8002      	strh	r2, [r0, #0]
 800b2b2:	e7f1      	b.n	800b298 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800b2b4:	88cb      	ldrh	r3, [r1, #6]
 800b2b6:	8841      	ldrh	r1, [r0, #2]
 800b2b8:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800b2bc:	f9b0 5000 	ldrsh.w	r5, [r0]
 800b2c0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800b2c4:	8045      	strh	r5, [r0, #2]
 800b2c6:	1a5b      	subs	r3, r3, r1
 800b2c8:	1a9b      	subs	r3, r3, r2
 800b2ca:	8003      	strh	r3, [r0, #0]
 800b2cc:	8082      	strh	r2, [r0, #4]
 800b2ce:	80c4      	strh	r4, [r0, #6]
 800b2d0:	e7e2      	b.n	800b298 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800b2d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800b2d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b2d6:	b09f      	sub	sp, #124	; 0x7c
 800b2d8:	9116      	str	r1, [sp, #88]	; 0x58
 800b2da:	9317      	str	r3, [sp, #92]	; 0x5c
 800b2dc:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800b2de:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b2e0:	8809      	ldrh	r1, [r1, #0]
 800b2e2:	889b      	ldrh	r3, [r3, #4]
 800b2e4:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800b2e8:	9212      	str	r2, [sp, #72]	; 0x48
 800b2ea:	440b      	add	r3, r1
 800b2ec:	b21b      	sxth	r3, r3
 800b2ee:	9310      	str	r3, [sp, #64]	; 0x40
 800b2f0:	f8d8 3000 	ldr.w	r3, [r8]
 800b2f4:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800b2f8:	7a59      	ldrb	r1, [r3, #9]
 800b2fa:	7a1b      	ldrb	r3, [r3, #8]
 800b2fc:	9011      	str	r0, [sp, #68]	; 0x44
 800b2fe:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800b302:	9114      	str	r1, [sp, #80]	; 0x50
 800b304:	9315      	str	r3, [sp, #84]	; 0x54
 800b306:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800b30a:	2a00      	cmp	r2, #0
 800b30c:	d067      	beq.n	800b3de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10c>
 800b30e:	f898 3010 	ldrb.w	r3, [r8, #16]
 800b312:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800b314:	2b04      	cmp	r3, #4
 800b316:	bf14      	ite	ne
 800b318:	2301      	movne	r3, #1
 800b31a:	2302      	moveq	r3, #2
 800b31c:	4413      	add	r3, r2
 800b31e:	f04f 0900 	mov.w	r9, #0
 800b322:	930f      	str	r3, [sp, #60]	; 0x3c
 800b324:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800b328:	464c      	mov	r4, r9
 800b32a:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800b32e:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800b332:	4293      	cmp	r3, r2
 800b334:	f280 808c 	bge.w	800b450 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800b338:	2300      	movs	r3, #0
 800b33a:	931c      	str	r3, [sp, #112]	; 0x70
 800b33c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b340:	429c      	cmp	r4, r3
 800b342:	d006      	beq.n	800b352 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x80>
 800b344:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b346:	f242 020b 	movw	r2, #8203	; 0x200b
 800b34a:	4294      	cmp	r4, r2
 800b34c:	bf18      	it	ne
 800b34e:	4623      	movne	r3, r4
 800b350:	930d      	str	r3, [sp, #52]	; 0x34
 800b352:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b354:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800b356:	f8d8 2000 	ldr.w	r2, [r8]
 800b35a:	428b      	cmp	r3, r1
 800b35c:	db41      	blt.n	800b3e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x110>
 800b35e:	6813      	ldr	r3, [r2, #0]
 800b360:	4610      	mov	r0, r2
 800b362:	695b      	ldr	r3, [r3, #20]
 800b364:	4798      	blx	r3
 800b366:	4604      	mov	r4, r0
 800b368:	f8d8 0000 	ldr.w	r0, [r8]
 800b36c:	6803      	ldr	r3, [r0, #0]
 800b36e:	aa1d      	add	r2, sp, #116	; 0x74
 800b370:	689e      	ldr	r6, [r3, #8]
 800b372:	4621      	mov	r1, r4
 800b374:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800b378:	47b0      	blx	r6
 800b37a:	901c      	str	r0, [sp, #112]	; 0x70
 800b37c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b380:	429c      	cmp	r4, r3
 800b382:	f000 80e9 	beq.w	800b558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800b386:	f242 030b 	movw	r3, #8203	; 0x200b
 800b38a:	429c      	cmp	r4, r3
 800b38c:	f000 80e4 	beq.w	800b558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800b390:	2c00      	cmp	r4, #0
 800b392:	f000 80f6 	beq.w	800b582 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800b396:	2c0a      	cmp	r4, #10
 800b398:	d060      	beq.n	800b45c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800b39a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800b39c:	b36a      	cbz	r2, 800b3fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x128>
 800b39e:	8894      	ldrh	r4, [r2, #4]
 800b3a0:	f1bb 0f00 	cmp.w	fp, #0
 800b3a4:	d03b      	beq.n	800b41e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14c>
 800b3a6:	f892 900d 	ldrb.w	r9, [r2, #13]
 800b3aa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800b3ae:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800b3b2:	f892 900a 	ldrb.w	r9, [r2, #10]
 800b3b6:	f1bb 0f01 	cmp.w	fp, #1
 800b3ba:	ea49 0903 	orr.w	r9, r9, r3
 800b3be:	d134      	bne.n	800b42a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x158>
 800b3c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b3c2:	eba5 0509 	sub.w	r5, r5, r9
 800b3c6:	2b00      	cmp	r3, #0
 800b3c8:	d14f      	bne.n	800b46a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800b3ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800b3cc:	eb09 0305 	add.w	r3, r9, r5
 800b3d0:	4413      	add	r3, r2
 800b3d2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800b3d4:	f9b2 2000 	ldrsh.w	r2, [r2]
 800b3d8:	4293      	cmp	r3, r2
 800b3da:	da51      	bge.n	800b480 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800b3dc:	e038      	b.n	800b450 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17e>
 800b3de:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b3e0:	e79d      	b.n	800b31e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800b3e2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800b3e6:	9301      	str	r3, [sp, #4]
 800b3e8:	ab1d      	add	r3, sp, #116	; 0x74
 800b3ea:	9300      	str	r3, [sp, #0]
 800b3ec:	4659      	mov	r1, fp
 800b3ee:	ab1c      	add	r3, sp, #112	; 0x70
 800b3f0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800b3f2:	f002 fe15 	bl	800e020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800b3f6:	4604      	mov	r4, r0
 800b3f8:	e7c0      	b.n	800b37c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xaa>
 800b3fa:	f8d8 0000 	ldr.w	r0, [r8]
 800b3fe:	6803      	ldr	r3, [r0, #0]
 800b400:	691b      	ldr	r3, [r3, #16]
 800b402:	4798      	blx	r3
 800b404:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b408:	4298      	cmp	r0, r3
 800b40a:	f000 80a5 	beq.w	800b558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800b40e:	f242 030b 	movw	r3, #8203	; 0x200b
 800b412:	4298      	cmp	r0, r3
 800b414:	f000 80a0 	beq.w	800b558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800b418:	f1bb 0f00 	cmp.w	fp, #0
 800b41c:	d100      	bne.n	800b420 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800b41e:	444d      	add	r5, r9
 800b420:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800b422:	2a00      	cmp	r2, #0
 800b424:	d1bf      	bne.n	800b3a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd4>
 800b426:	4691      	mov	r9, r2
 800b428:	e096      	b.n	800b558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800b42a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b42c:	2b00      	cmp	r3, #0
 800b42e:	f000 80aa 	beq.w	800b586 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 800b432:	f1bb 0f00 	cmp.w	fp, #0
 800b436:	d118      	bne.n	800b46a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x198>
 800b438:	f8d8 0000 	ldr.w	r0, [r8]
 800b43c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b43e:	6803      	ldr	r3, [r0, #0]
 800b440:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b442:	4798      	blx	r3
 800b444:	4405      	add	r5, r0
 800b446:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b448:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b44a:	1aeb      	subs	r3, r5, r3
 800b44c:	4293      	cmp	r3, r2
 800b44e:	dd17      	ble.n	800b480 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800b450:	2c00      	cmp	r4, #0
 800b452:	f000 8096 	beq.w	800b582 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800b456:	2c0a      	cmp	r4, #10
 800b458:	f040 8084 	bne.w	800b564 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 800b45c:	240a      	movs	r4, #10
 800b45e:	fab4 f084 	clz	r0, r4
 800b462:	0940      	lsrs	r0, r0, #5
 800b464:	b01f      	add	sp, #124	; 0x7c
 800b466:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b46a:	f8d8 0000 	ldr.w	r0, [r8]
 800b46e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b470:	6803      	ldr	r3, [r0, #0]
 800b472:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b474:	4798      	blx	r3
 800b476:	f1bb 0f01 	cmp.w	fp, #1
 800b47a:	eba5 0500 	sub.w	r5, r5, r0
 800b47e:	d0a4      	beq.n	800b3ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf8>
 800b480:	981c      	ldr	r0, [sp, #112]	; 0x70
 800b482:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b484:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800b488:	f9b3 6000 	ldrsh.w	r6, [r3]
 800b48c:	7b43      	ldrb	r3, [r0, #13]
 800b48e:	015b      	lsls	r3, r3, #5
 800b490:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800b494:	7983      	ldrb	r3, [r0, #6]
 800b496:	4429      	add	r1, r5
 800b498:	4313      	orrs	r3, r2
 800b49a:	440b      	add	r3, r1
 800b49c:	42b3      	cmp	r3, r6
 800b49e:	db5b      	blt.n	800b558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800b4a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b4a2:	4299      	cmp	r1, r3
 800b4a4:	da58      	bge.n	800b558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800b4a6:	f8d8 0000 	ldr.w	r0, [r8]
 800b4aa:	6803      	ldr	r3, [r0, #0]
 800b4ac:	42ae      	cmp	r6, r5
 800b4ae:	bfc8      	it	gt
 800b4b0:	1b76      	subgt	r6, r6, r5
 800b4b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4b4:	bfcc      	ite	gt
 800b4b6:	b2b6      	uxthgt	r6, r6
 800b4b8:	2600      	movle	r6, #0
 800b4ba:	4798      	blx	r3
 800b4bc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800b4be:	7b5a      	ldrb	r2, [r3, #13]
 800b4c0:	00d1      	lsls	r1, r2, #3
 800b4c2:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800b4c6:	7a19      	ldrb	r1, [r3, #8]
 800b4c8:	4339      	orrs	r1, r7
 800b4ca:	0657      	lsls	r7, r2, #25
 800b4cc:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800b4ce:	bf44      	itt	mi
 800b4d0:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800b4d4:	b209      	sxthmi	r1, r1
 800b4d6:	19c7      	adds	r7, r0, r7
 800b4d8:	1a7f      	subs	r7, r7, r1
 800b4da:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800b4dc:	b2bf      	uxth	r7, r7
 800b4de:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800b4e2:	fa0f fa87 	sxth.w	sl, r7
 800b4e6:	4551      	cmp	r1, sl
 800b4e8:	dd3a      	ble.n	800b560 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800b4ea:	0112      	lsls	r2, r2, #4
 800b4ec:	79d8      	ldrb	r0, [r3, #7]
 800b4ee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800b4f2:	4302      	orrs	r2, r0
 800b4f4:	4492      	add	sl, r2
 800b4f6:	4551      	cmp	r1, sl
 800b4f8:	dc2e      	bgt.n	800b558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x286>
 800b4fa:	1bcf      	subs	r7, r1, r7
 800b4fc:	b2bf      	uxth	r7, r7
 800b4fe:	468a      	mov	sl, r1
 800b500:	9319      	str	r3, [sp, #100]	; 0x64
 800b502:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b504:	f8d8 0000 	ldr.w	r0, [r8]
 800b508:	681a      	ldr	r2, [r3, #0]
 800b50a:	6801      	ldr	r1, [r0, #0]
 800b50c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800b50e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800b510:	9313      	str	r3, [sp, #76]	; 0x4c
 800b512:	9218      	str	r2, [sp, #96]	; 0x60
 800b514:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800b516:	4788      	blx	r1
 800b518:	f898 1006 	ldrb.w	r1, [r8, #6]
 800b51c:	910b      	str	r1, [sp, #44]	; 0x2c
 800b51e:	f898 100e 	ldrb.w	r1, [r8, #14]
 800b522:	910a      	str	r1, [sp, #40]	; 0x28
 800b524:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800b528:	9109      	str	r1, [sp, #36]	; 0x24
 800b52a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800b52c:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800b530:	9305      	str	r3, [sp, #20]
 800b532:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b534:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800b536:	9206      	str	r2, [sp, #24]
 800b538:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800b53c:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800b540:	e9cd a601 	strd	sl, r6, [sp, #4]
 800b544:	442e      	add	r6, r5
 800b546:	b236      	sxth	r6, r6
 800b548:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b54a:	9600      	str	r6, [sp, #0]
 800b54c:	681a      	ldr	r2, [r3, #0]
 800b54e:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b550:	685b      	ldr	r3, [r3, #4]
 800b552:	9811      	ldr	r0, [sp, #68]	; 0x44
 800b554:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800b556:	47b0      	blx	r6
 800b558:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b55a:	3301      	adds	r3, #1
 800b55c:	930e      	str	r3, [sp, #56]	; 0x38
 800b55e:	e6e6      	b.n	800b32e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800b560:	2700      	movs	r7, #0
 800b562:	e7cd      	b.n	800b500 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x22e>
 800b564:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800b566:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b568:	3501      	adds	r5, #1
 800b56a:	429d      	cmp	r5, r3
 800b56c:	f6bf af77 	bge.w	800b45e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b570:	4659      	mov	r1, fp
 800b572:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800b574:	f7f7 f95c 	bl	8002830 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b578:	4604      	mov	r4, r0
 800b57a:	b110      	cbz	r0, 800b582 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b0>
 800b57c:	280a      	cmp	r0, #10
 800b57e:	d1f2      	bne.n	800b566 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800b580:	e76c      	b.n	800b45c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18a>
 800b582:	2400      	movs	r4, #0
 800b584:	e76b      	b.n	800b45e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b586:	f1bb 0f00 	cmp.w	fp, #0
 800b58a:	f43f af5c 	beq.w	800b446 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x174>
 800b58e:	e777      	b.n	800b480 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800b590 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800b590:	b530      	push	{r4, r5, lr}
 800b592:	8a44      	ldrh	r4, [r0, #18]
 800b594:	8ac5      	ldrh	r5, [r0, #22]
 800b596:	82c3      	strh	r3, [r0, #22]
 800b598:	442c      	add	r4, r5
 800b59a:	1ae4      	subs	r4, r4, r3
 800b59c:	8244      	strh	r4, [r0, #18]
 800b59e:	8b03      	ldrh	r3, [r0, #24]
 800b5a0:	8a84      	ldrh	r4, [r0, #20]
 800b5a2:	4422      	add	r2, r4
 800b5a4:	440c      	add	r4, r1
 800b5a6:	1a59      	subs	r1, r3, r1
 800b5a8:	8342      	strh	r2, [r0, #26]
 800b5aa:	8284      	strh	r4, [r0, #20]
 800b5ac:	8301      	strh	r1, [r0, #24]
 800b5ae:	bd30      	pop	{r4, r5, pc}

0800b5b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800b5b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5b4:	7a43      	ldrb	r3, [r0, #9]
 800b5b6:	1eda      	subs	r2, r3, #3
 800b5b8:	b087      	sub	sp, #28
 800b5ba:	4604      	mov	r4, r0
 800b5bc:	b2d2      	uxtb	r2, r2
 800b5be:	460f      	mov	r7, r1
 800b5c0:	2900      	cmp	r1, #0
 800b5c2:	d036      	beq.n	800b632 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800b5c4:	2a01      	cmp	r2, #1
 800b5c6:	d932      	bls.n	800b62e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800b5c8:	1e58      	subs	r0, r3, #1
 800b5ca:	f1d0 0b00 	rsbs	fp, r0, #0
 800b5ce:	eb4b 0b00 	adc.w	fp, fp, r0
 800b5d2:	1e99      	subs	r1, r3, #2
 800b5d4:	424b      	negs	r3, r1
 800b5d6:	414b      	adcs	r3, r1
 800b5d8:	9303      	str	r3, [sp, #12]
 800b5da:	2300      	movs	r3, #0
 800b5dc:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800b5e0:	2500      	movs	r5, #0
 800b5e2:	8265      	strh	r5, [r4, #18]
 800b5e4:	82a5      	strh	r5, [r4, #20]
 800b5e6:	46a9      	mov	r9, r5
 800b5e8:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800b5ec:	2300      	movs	r3, #0
 800b5ee:	9305      	str	r3, [sp, #20]
 800b5f0:	8823      	ldrh	r3, [r4, #0]
 800b5f2:	2b20      	cmp	r3, #32
 800b5f4:	d02b      	beq.n	800b64e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800b5f6:	eba3 020a 	sub.w	r2, r3, sl
 800b5fa:	4256      	negs	r6, r2
 800b5fc:	4156      	adcs	r6, r2
 800b5fe:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800b602:	4293      	cmp	r3, r2
 800b604:	d004      	beq.n	800b610 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800b606:	4553      	cmp	r3, sl
 800b608:	bf16      	itet	ne
 800b60a:	4699      	movne	r9, r3
 800b60c:	2601      	moveq	r6, #1
 800b60e:	2600      	movne	r6, #0
 800b610:	ab05      	add	r3, sp, #20
 800b612:	68e2      	ldr	r2, [r4, #12]
 800b614:	7a21      	ldrb	r1, [r4, #8]
 800b616:	6860      	ldr	r0, [r4, #4]
 800b618:	f002 fcaa 	bl	800df70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800b61c:	8020      	strh	r0, [r4, #0]
 800b61e:	b9c8      	cbnz	r0, 800b654 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800b620:	8b22      	ldrh	r2, [r4, #24]
 800b622:	2300      	movs	r3, #0
 800b624:	4611      	mov	r1, r2
 800b626:	4620      	mov	r0, r4
 800b628:	f7ff ffb2 	bl	800b590 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800b62c:	e066      	b.n	800b6fc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800b62e:	468b      	mov	fp, r1
 800b630:	e7cf      	b.n	800b5d2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800b632:	3b01      	subs	r3, #1
 800b634:	2a01      	cmp	r2, #1
 800b636:	bf8c      	ite	hi
 800b638:	2200      	movhi	r2, #0
 800b63a:	2201      	movls	r2, #1
 800b63c:	2b01      	cmp	r3, #1
 800b63e:	bf8c      	ite	hi
 800b640:	2300      	movhi	r3, #0
 800b642:	2301      	movls	r3, #1
 800b644:	9202      	str	r2, [sp, #8]
 800b646:	9301      	str	r3, [sp, #4]
 800b648:	9103      	str	r1, [sp, #12]
 800b64a:	468b      	mov	fp, r1
 800b64c:	e7c8      	b.n	800b5e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800b64e:	4699      	mov	r9, r3
 800b650:	2601      	movs	r6, #1
 800b652:	e7dd      	b.n	800b610 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800b654:	8ae3      	ldrh	r3, [r4, #22]
 800b656:	280a      	cmp	r0, #10
 800b658:	f103 0301 	add.w	r3, r3, #1
 800b65c:	82e3      	strh	r3, [r4, #22]
 800b65e:	d0df      	beq.n	800b620 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800b660:	9a05      	ldr	r2, [sp, #20]
 800b662:	bb42      	cbnz	r2, 800b6b6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800b664:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b668:	4298      	cmp	r0, r3
 800b66a:	d001      	beq.n	800b670 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800b66c:	4550      	cmp	r0, sl
 800b66e:	d1bd      	bne.n	800b5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b670:	8823      	ldrh	r3, [r4, #0]
 800b672:	8b21      	ldrh	r1, [r4, #24]
 800b674:	2b20      	cmp	r3, #32
 800b676:	d001      	beq.n	800b67c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800b678:	4553      	cmp	r3, sl
 800b67a:	d131      	bne.n	800b6e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800b67c:	2e00      	cmp	r6, #0
 800b67e:	bf0a      	itet	eq
 800b680:	460d      	moveq	r5, r1
 800b682:	4630      	movne	r0, r6
 800b684:	2001      	moveq	r0, #1
 800b686:	440a      	add	r2, r1
 800b688:	8aa3      	ldrh	r3, [r4, #20]
 800b68a:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800b68e:	b292      	uxth	r2, r2
 800b690:	8322      	strh	r2, [r4, #24]
 800b692:	4413      	add	r3, r2
 800b694:	2f00      	cmp	r7, #0
 800b696:	d03a      	beq.n	800b70e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800b698:	f1bb 0f00 	cmp.w	fp, #0
 800b69c:	d102      	bne.n	800b6a4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800b69e:	9903      	ldr	r1, [sp, #12]
 800b6a0:	b301      	cbz	r1, 800b6e4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800b6a2:	b1f8      	cbz	r0, 800b6e4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800b6a4:	8ba1      	ldrh	r1, [r4, #28]
 800b6a6:	4419      	add	r1, r3
 800b6a8:	458c      	cmp	ip, r1
 800b6aa:	da2a      	bge.n	800b702 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800b6ac:	8a61      	ldrh	r1, [r4, #18]
 800b6ae:	b341      	cbz	r1, 800b702 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800b6b0:	4563      	cmp	r3, ip
 800b6b2:	dd9b      	ble.n	800b5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b6b4:	e01c      	b.n	800b6f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800b6b6:	8893      	ldrh	r3, [r2, #4]
 800b6b8:	8023      	strh	r3, [r4, #0]
 800b6ba:	f892 800d 	ldrb.w	r8, [r2, #13]
 800b6be:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800b6c2:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800b6c6:	f892 800a 	ldrb.w	r8, [r2, #10]
 800b6ca:	ea48 0800 	orr.w	r8, r8, r0
 800b6ce:	68e0      	ldr	r0, [r4, #12]
 800b6d0:	6803      	ldr	r3, [r0, #0]
 800b6d2:	4649      	mov	r1, r9
 800b6d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b6d6:	4798      	blx	r3
 800b6d8:	eb08 0200 	add.w	r2, r8, r0
 800b6dc:	b292      	uxth	r2, r2
 800b6de:	e7c7      	b.n	800b670 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800b6e0:	2000      	movs	r0, #0
 800b6e2:	e7d0      	b.n	800b686 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800b6e4:	4563      	cmp	r3, ip
 800b6e6:	dd81      	ble.n	800b5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b6e8:	8a63      	ldrh	r3, [r4, #18]
 800b6ea:	2b00      	cmp	r3, #0
 800b6ec:	f43f af7e 	beq.w	800b5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b6f0:	2301      	movs	r3, #1
 800b6f2:	77a3      	strb	r3, [r4, #30]
 800b6f4:	8ba2      	ldrh	r2, [r4, #28]
 800b6f6:	8b63      	ldrh	r3, [r4, #26]
 800b6f8:	4413      	add	r3, r2
 800b6fa:	8363      	strh	r3, [r4, #26]
 800b6fc:	b007      	add	sp, #28
 800b6fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b702:	2300      	movs	r3, #0
 800b704:	4611      	mov	r1, r2
 800b706:	4620      	mov	r0, r4
 800b708:	f7ff ff42 	bl	800b590 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800b70c:	e76e      	b.n	800b5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b70e:	4563      	cmp	r3, ip
 800b710:	dd14      	ble.n	800b73c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800b712:	9b02      	ldr	r3, [sp, #8]
 800b714:	b113      	cbz	r3, 800b71c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800b716:	2301      	movs	r3, #1
 800b718:	460a      	mov	r2, r1
 800b71a:	e783      	b.n	800b624 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800b71c:	9b01      	ldr	r3, [sp, #4]
 800b71e:	2b00      	cmp	r3, #0
 800b720:	f43f af64 	beq.w	800b5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b724:	2800      	cmp	r0, #0
 800b726:	f47f af61 	bne.w	800b5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b72a:	b116      	cbz	r6, 800b732 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800b72c:	2301      	movs	r3, #1
 800b72e:	462a      	mov	r2, r5
 800b730:	e779      	b.n	800b626 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800b732:	8a63      	ldrh	r3, [r4, #18]
 800b734:	2b00      	cmp	r3, #0
 800b736:	f43f af59 	beq.w	800b5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b73a:	e7df      	b.n	800b6fc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800b73c:	2800      	cmp	r0, #0
 800b73e:	f47f af55 	bne.w	800b5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b742:	2e00      	cmp	r6, #0
 800b744:	f43f af52 	beq.w	800b5ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b748:	2301      	movs	r3, #1
 800b74a:	462a      	mov	r2, r5
 800b74c:	e7db      	b.n	800b706 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800b74e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800b74e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b752:	b0e5      	sub	sp, #404	; 0x194
 800b754:	4689      	mov	r9, r1
 800b756:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800b75a:	900a      	str	r0, [sp, #40]	; 0x28
 800b75c:	461c      	mov	r4, r3
 800b75e:	f1ba 0f00 	cmp.w	sl, #0
 800b762:	f000 80b4 	beq.w	800b8ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800b766:	681b      	ldr	r3, [r3, #0]
 800b768:	2b00      	cmp	r3, #0
 800b76a:	f000 80b0 	beq.w	800b8ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800b76e:	7ba3      	ldrb	r3, [r4, #14]
 800b770:	2b00      	cmp	r3, #0
 800b772:	f000 80ac 	beq.w	800b8ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800b776:	6810      	ldr	r0, [r2, #0]
 800b778:	6851      	ldr	r1, [r2, #4]
 800b77a:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800b77e:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800b782:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800b786:	4643      	mov	r3, r8
 800b788:	c303      	stmia	r3!, {r0, r1}
 800b78a:	2500      	movs	r5, #0
 800b78c:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800b790:	79a2      	ldrb	r2, [r4, #6]
 800b792:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800b796:	a90f      	add	r1, sp, #60	; 0x3c
 800b798:	4640      	mov	r0, r8
 800b79a:	950f      	str	r5, [sp, #60]	; 0x3c
 800b79c:	f7ff fd68 	bl	800b270 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800b7a0:	a90f      	add	r1, sp, #60	; 0x3c
 800b7a2:	4608      	mov	r0, r1
 800b7a4:	79a2      	ldrb	r2, [r4, #6]
 800b7a6:	af19      	add	r7, sp, #100	; 0x64
 800b7a8:	f7ff fd62 	bl	800b270 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800b7ac:	4638      	mov	r0, r7
 800b7ae:	f002 f88d 	bl	800d8cc <_ZN8touchgfx12TextProviderC1Ev>
 800b7b2:	6820      	ldr	r0, [r4, #0]
 800b7b4:	6803      	ldr	r3, [r0, #0]
 800b7b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b7b8:	4798      	blx	r3
 800b7ba:	4606      	mov	r6, r0
 800b7bc:	6820      	ldr	r0, [r4, #0]
 800b7be:	6803      	ldr	r3, [r0, #0]
 800b7c0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800b7c2:	4798      	blx	r3
 800b7c4:	4633      	mov	r3, r6
 800b7c6:	9000      	str	r0, [sp, #0]
 800b7c8:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800b7ca:	4651      	mov	r1, sl
 800b7cc:	4638      	mov	r0, r7
 800b7ce:	f002 f8d0 	bl	800d972 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800b7d2:	6820      	ldr	r0, [r4, #0]
 800b7d4:	7923      	ldrb	r3, [r4, #4]
 800b7d6:	9308      	str	r3, [sp, #32]
 800b7d8:	6803      	ldr	r3, [r0, #0]
 800b7da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b7dc:	4798      	blx	r3
 800b7de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b7e2:	181e      	adds	r6, r3, r0
 800b7e4:	42ae      	cmp	r6, r5
 800b7e6:	dd06      	ble.n	800b7f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800b7e8:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800b7ec:	4282      	cmp	r2, r0
 800b7ee:	bfa4      	itt	ge
 800b7f0:	189d      	addge	r5, r3, r2
 800b7f2:	fb95 f5f6 	sdivge	r5, r5, r6
 800b7f6:	a832      	add	r0, sp, #200	; 0xc8
 800b7f8:	f002 f868 	bl	800d8cc <_ZN8touchgfx12TextProviderC1Ev>
 800b7fc:	7c23      	ldrb	r3, [r4, #16]
 800b7fe:	b17b      	cbz	r3, 800b820 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800b800:	6820      	ldr	r0, [r4, #0]
 800b802:	6803      	ldr	r3, [r0, #0]
 800b804:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b806:	4798      	blx	r3
 800b808:	4683      	mov	fp, r0
 800b80a:	6820      	ldr	r0, [r4, #0]
 800b80c:	6803      	ldr	r3, [r0, #0]
 800b80e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800b810:	4798      	blx	r3
 800b812:	465b      	mov	r3, fp
 800b814:	9000      	str	r0, [sp, #0]
 800b816:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800b818:	4651      	mov	r1, sl
 800b81a:	a832      	add	r0, sp, #200	; 0xc8
 800b81c:	f002 f8a9 	bl	800d972 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800b820:	7be1      	ldrb	r1, [r4, #15]
 800b822:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b826:	7963      	ldrb	r3, [r4, #5]
 800b828:	1a52      	subs	r2, r2, r1
 800b82a:	7c21      	ldrb	r1, [r4, #16]
 800b82c:	9101      	str	r1, [sp, #4]
 800b82e:	6821      	ldr	r1, [r4, #0]
 800b830:	9100      	str	r1, [sp, #0]
 800b832:	b292      	uxth	r2, r2
 800b834:	a932      	add	r1, sp, #200	; 0xc8
 800b836:	a811      	add	r0, sp, #68	; 0x44
 800b838:	f7ff fca2 	bl	800b180 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800b83c:	7c23      	ldrb	r3, [r4, #16]
 800b83e:	b9bb      	cbnz	r3, 800b870 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800b840:	fa1f fa86 	uxth.w	sl, r6
 800b844:	2d00      	cmp	r5, #0
 800b846:	dd45      	ble.n	800b8d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800b848:	4638      	mov	r0, r7
 800b84a:	f002 fc8b 	bl	800e164 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b84e:	2800      	cmp	r0, #0
 800b850:	d03d      	beq.n	800b8ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800b852:	280a      	cmp	r0, #10
 800b854:	d1f6      	bne.n	800b844 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800b856:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b85a:	4453      	add	r3, sl
 800b85c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b860:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800b864:	eba3 030a 	sub.w	r3, r3, sl
 800b868:	3d01      	subs	r5, #1
 800b86a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800b86e:	e7e9      	b.n	800b844 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800b870:	0073      	lsls	r3, r6, #1
 800b872:	9309      	str	r3, [sp, #36]	; 0x24
 800b874:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800b878:	fa1f fa86 	uxth.w	sl, r6
 800b87c:	2d00      	cmp	r5, #0
 800b87e:	dd29      	ble.n	800b8d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800b880:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800b884:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b886:	428b      	cmp	r3, r1
 800b888:	bfd4      	ite	le
 800b88a:	2100      	movle	r1, #0
 800b88c:	2101      	movgt	r1, #1
 800b88e:	a811      	add	r0, sp, #68	; 0x44
 800b890:	f7ff fe8e 	bl	800b5b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b894:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800b898:	3b01      	subs	r3, #1
 800b89a:	b29b      	uxth	r3, r3
 800b89c:	455b      	cmp	r3, fp
 800b89e:	930b      	str	r3, [sp, #44]	; 0x2c
 800b8a0:	d005      	beq.n	800b8ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800b8a2:	7961      	ldrb	r1, [r4, #5]
 800b8a4:	4638      	mov	r0, r7
 800b8a6:	f7f6 ffc3 	bl	8002830 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b8aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b8ac:	e7f4      	b.n	800b898 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800b8ae:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b8b2:	4453      	add	r3, sl
 800b8b4:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b8b8:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800b8bc:	eba3 030a 	sub.w	r3, r3, sl
 800b8c0:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800b8c4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b8c8:	3d01      	subs	r5, #1
 800b8ca:	2b00      	cmp	r3, #0
 800b8cc:	d1d6      	bne.n	800b87c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800b8ce:	b065      	add	sp, #404	; 0x194
 800b8d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8d4:	0075      	lsls	r5, r6, #1
 800b8d6:	f04f 0a00 	mov.w	sl, #0
 800b8da:	7c23      	ldrb	r3, [r4, #16]
 800b8dc:	2b00      	cmp	r3, #0
 800b8de:	d066      	beq.n	800b9ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800b8e0:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800b8e4:	428d      	cmp	r5, r1
 800b8e6:	bfd4      	ite	le
 800b8e8:	2100      	movle	r1, #0
 800b8ea:	2101      	movgt	r1, #1
 800b8ec:	a811      	add	r0, sp, #68	; 0x44
 800b8ee:	f7ff fe5f 	bl	800b5b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b8f2:	9b08      	ldr	r3, [sp, #32]
 800b8f4:	2b00      	cmp	r3, #0
 800b8f6:	d055      	beq.n	800b9a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800b8f8:	f894 b010 	ldrb.w	fp, [r4, #16]
 800b8fc:	2264      	movs	r2, #100	; 0x64
 800b8fe:	4639      	mov	r1, r7
 800b900:	a84b      	add	r0, sp, #300	; 0x12c
 800b902:	f00f fa47 	bl	801ad94 <memcpy>
 800b906:	f1bb 0f00 	cmp.w	fp, #0
 800b90a:	d058      	beq.n	800b9be <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800b90c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800b910:	7922      	ldrb	r2, [r4, #4]
 800b912:	2a01      	cmp	r2, #1
 800b914:	d13c      	bne.n	800b990 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800b916:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800b91a:	1ac0      	subs	r0, r0, r3
 800b91c:	2302      	movs	r3, #2
 800b91e:	fb90 f0f3 	sdiv	r0, r0, r3
 800b922:	b200      	sxth	r0, r0
 800b924:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b928:	4418      	add	r0, r3
 800b92a:	7c23      	ldrb	r3, [r4, #16]
 800b92c:	b200      	sxth	r0, r0
 800b92e:	2b00      	cmp	r3, #0
 800b930:	d03a      	beq.n	800b9a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800b932:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800b936:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800b93a:	9000      	str	r0, [sp, #0]
 800b93c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800b940:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800b944:	980a      	ldr	r0, [sp, #40]	; 0x28
 800b946:	e9cd a703 	strd	sl, r7, [sp, #12]
 800b94a:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800b94e:	464a      	mov	r2, r9
 800b950:	2100      	movs	r1, #0
 800b952:	f7ff fcbe 	bl	800b2d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800b956:	2800      	cmp	r0, #0
 800b958:	d1b9      	bne.n	800b8ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800b95a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b95e:	b2b2      	uxth	r2, r6
 800b960:	4611      	mov	r1, r2
 800b962:	4413      	add	r3, r2
 800b964:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800b968:	1a52      	subs	r2, r2, r1
 800b96a:	7c21      	ldrb	r1, [r4, #16]
 800b96c:	b21b      	sxth	r3, r3
 800b96e:	b212      	sxth	r2, r2
 800b970:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b974:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800b978:	b109      	cbz	r1, 800b97e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800b97a:	42b2      	cmp	r2, r6
 800b97c:	dba7      	blt.n	800b8ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800b97e:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800b982:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800b986:	440a      	add	r2, r1
 800b988:	b212      	sxth	r2, r2
 800b98a:	4293      	cmp	r3, r2
 800b98c:	dda5      	ble.n	800b8da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800b98e:	e79e      	b.n	800b8ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800b990:	2a02      	cmp	r2, #2
 800b992:	d105      	bne.n	800b9a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800b994:	7be2      	ldrb	r2, [r4, #15]
 800b996:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800b99a:	1a80      	subs	r0, r0, r2
 800b99c:	1ac0      	subs	r0, r0, r3
 800b99e:	e7c0      	b.n	800b922 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800b9a0:	2000      	movs	r0, #0
 800b9a2:	e7bf      	b.n	800b924 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800b9a4:	7be0      	ldrb	r0, [r4, #15]
 800b9a6:	e7bd      	b.n	800b924 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800b9a8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b9ac:	e7c3      	b.n	800b936 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800b9ae:	9b08      	ldr	r3, [sp, #32]
 800b9b0:	2b00      	cmp	r3, #0
 800b9b2:	d0f7      	beq.n	800b9a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800b9b4:	2264      	movs	r2, #100	; 0x64
 800b9b6:	4639      	mov	r1, r7
 800b9b8:	a84b      	add	r0, sp, #300	; 0x12c
 800b9ba:	f00f f9eb 	bl	801ad94 <memcpy>
 800b9be:	2300      	movs	r3, #0
 800b9c0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b9c4:	6821      	ldr	r1, [r4, #0]
 800b9c6:	a84b      	add	r0, sp, #300	; 0x12c
 800b9c8:	f7ff fc16 	bl	800b1f8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800b9cc:	b203      	sxth	r3, r0
 800b9ce:	e79f      	b.n	800b910 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0800b9d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800b9d0:	b510      	push	{r4, lr}
 800b9d2:	2b02      	cmp	r3, #2
 800b9d4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b9d8:	d00b      	beq.n	800b9f2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800b9da:	2b03      	cmp	r3, #3
 800b9dc:	d00e      	beq.n	800b9fc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800b9de:	2b01      	cmp	r3, #1
 800b9e0:	d001      	beq.n	800b9e6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800b9e2:	1860      	adds	r0, r4, r1
 800b9e4:	bd10      	pop	{r4, pc}
 800b9e6:	8880      	ldrh	r0, [r0, #4]
 800b9e8:	4420      	add	r0, r4
 800b9ea:	b200      	sxth	r0, r0
 800b9ec:	1a80      	subs	r0, r0, r2
 800b9ee:	3801      	subs	r0, #1
 800b9f0:	e7f8      	b.n	800b9e4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800b9f2:	8880      	ldrh	r0, [r0, #4]
 800b9f4:	4420      	add	r0, r4
 800b9f6:	b200      	sxth	r0, r0
 800b9f8:	1a40      	subs	r0, r0, r1
 800b9fa:	e7f8      	b.n	800b9ee <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800b9fc:	18a0      	adds	r0, r4, r2
 800b9fe:	e7f1      	b.n	800b9e4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800ba00 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ba00:	b510      	push	{r4, lr}
 800ba02:	2b02      	cmp	r3, #2
 800ba04:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800ba08:	d006      	beq.n	800ba18 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800ba0a:	2b03      	cmp	r3, #3
 800ba0c:	d00a      	beq.n	800ba24 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ba0e:	2b01      	cmp	r3, #1
 800ba10:	bf14      	ite	ne
 800ba12:	18a0      	addne	r0, r4, r2
 800ba14:	1860      	addeq	r0, r4, r1
 800ba16:	bd10      	pop	{r4, pc}
 800ba18:	88c0      	ldrh	r0, [r0, #6]
 800ba1a:	4420      	add	r0, r4
 800ba1c:	b200      	sxth	r0, r0
 800ba1e:	1a80      	subs	r0, r0, r2
 800ba20:	3801      	subs	r0, #1
 800ba22:	e7f8      	b.n	800ba16 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800ba24:	88c0      	ldrh	r0, [r0, #6]
 800ba26:	4420      	add	r0, r4
 800ba28:	b200      	sxth	r0, r0
 800ba2a:	1a40      	subs	r0, r0, r1
 800ba2c:	e7f8      	b.n	800ba20 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800ba30 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800ba30:	4b01      	ldr	r3, [pc, #4]	; (800ba38 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800ba32:	2200      	movs	r2, #0
 800ba34:	601a      	str	r2, [r3, #0]
 800ba36:	4770      	bx	lr
 800ba38:	2000a4f8 	.word	0x2000a4f8

0800ba3c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800ba3c:	4603      	mov	r3, r0
 800ba3e:	b1c8      	cbz	r0, 800ba74 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800ba40:	0c02      	lsrs	r2, r0, #16
 800ba42:	0412      	lsls	r2, r2, #16
 800ba44:	b9a2      	cbnz	r2, 800ba70 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800ba46:	0403      	lsls	r3, r0, #16
 800ba48:	2010      	movs	r0, #16
 800ba4a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800ba4e:	bf04      	itt	eq
 800ba50:	021b      	lsleq	r3, r3, #8
 800ba52:	3008      	addeq	r0, #8
 800ba54:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800ba58:	bf04      	itt	eq
 800ba5a:	011b      	lsleq	r3, r3, #4
 800ba5c:	3004      	addeq	r0, #4
 800ba5e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800ba62:	bf04      	itt	eq
 800ba64:	009b      	lsleq	r3, r3, #2
 800ba66:	3002      	addeq	r0, #2
 800ba68:	2b00      	cmp	r3, #0
 800ba6a:	db04      	blt.n	800ba76 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800ba6c:	3001      	adds	r0, #1
 800ba6e:	4770      	bx	lr
 800ba70:	2000      	movs	r0, #0
 800ba72:	e7ea      	b.n	800ba4a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800ba74:	2020      	movs	r0, #32
 800ba76:	4770      	bx	lr

0800ba78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800ba78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba7c:	b087      	sub	sp, #28
 800ba7e:	4681      	mov	r9, r0
 800ba80:	4698      	mov	r8, r3
 800ba82:	4610      	mov	r0, r2
 800ba84:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800ba88:	460d      	mov	r5, r1
 800ba8a:	b981      	cbnz	r1, 800baae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800ba8c:	b14b      	cbz	r3, 800baa2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800ba8e:	460b      	mov	r3, r1
 800ba90:	e9cd 4700 	strd	r4, r7, [sp]
 800ba94:	464a      	mov	r2, r9
 800ba96:	4641      	mov	r1, r8
 800ba98:	f7ff ffee 	bl	800ba78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ba9c:	b007      	add	sp, #28
 800ba9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800baa2:	f04f 33ff 	mov.w	r3, #4294967295
 800baa6:	603b      	str	r3, [r7, #0]
 800baa8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800baac:	e7f6      	b.n	800ba9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800baae:	fa32 fa01 	lsrs.w	sl, r2, r1
 800bab2:	d107      	bne.n	800bac4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800bab4:	fb09 f602 	mul.w	r6, r9, r2
 800bab8:	fbb6 f0f4 	udiv	r0, r6, r4
 800babc:	fb04 6610 	mls	r6, r4, r0, r6
 800bac0:	603e      	str	r6, [r7, #0]
 800bac2:	e7eb      	b.n	800ba9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800bac4:	2601      	movs	r6, #1
 800bac6:	408e      	lsls	r6, r1
 800bac8:	3e01      	subs	r6, #1
 800baca:	4016      	ands	r6, r2
 800bacc:	fa09 fb01 	lsl.w	fp, r9, r1
 800bad0:	4630      	mov	r0, r6
 800bad2:	fbbb f3f4 	udiv	r3, fp, r4
 800bad6:	9302      	str	r3, [sp, #8]
 800bad8:	fb0a f303 	mul.w	r3, sl, r3
 800badc:	9303      	str	r3, [sp, #12]
 800bade:	f7ff ffad 	bl	800ba3c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800bae2:	464a      	mov	r2, r9
 800bae4:	460b      	mov	r3, r1
 800bae6:	e9cd 4700 	strd	r4, r7, [sp]
 800baea:	4601      	mov	r1, r0
 800baec:	4630      	mov	r0, r6
 800baee:	f7ff ffc3 	bl	800ba78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800baf2:	9b02      	ldr	r3, [sp, #8]
 800baf4:	fb04 bb13 	mls	fp, r4, r3, fp
 800baf8:	4606      	mov	r6, r0
 800bafa:	4658      	mov	r0, fp
 800bafc:	eb05 0108 	add.w	r1, r5, r8
 800bb00:	f7ff ff9c 	bl	800ba3c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800bb04:	ab05      	add	r3, sp, #20
 800bb06:	e9cd 4300 	strd	r4, r3, [sp]
 800bb0a:	465a      	mov	r2, fp
 800bb0c:	4603      	mov	r3, r0
 800bb0e:	4650      	mov	r0, sl
 800bb10:	f7ff ffb2 	bl	800ba78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800bb14:	6839      	ldr	r1, [r7, #0]
 800bb16:	9a05      	ldr	r2, [sp, #20]
 800bb18:	9b03      	ldr	r3, [sp, #12]
 800bb1a:	4411      	add	r1, r2
 800bb1c:	fbb1 f2f4 	udiv	r2, r1, r4
 800bb20:	18d3      	adds	r3, r2, r3
 800bb22:	441e      	add	r6, r3
 800bb24:	fb04 1412 	mls	r4, r4, r2, r1
 800bb28:	4430      	add	r0, r6
 800bb2a:	603c      	str	r4, [r7, #0]
 800bb2c:	e7b6      	b.n	800ba9c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800bb2e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800bb2e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bb32:	b085      	sub	sp, #20
 800bb34:	f1b0 0900 	subs.w	r9, r0, #0
 800bb38:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800bb3a:	461d      	mov	r5, r3
 800bb3c:	bfbf      	itttt	lt
 800bb3e:	6823      	ldrlt	r3, [r4, #0]
 800bb40:	425b      	neglt	r3, r3
 800bb42:	f1c9 0900 	rsblt	r9, r9, #0
 800bb46:	6023      	strlt	r3, [r4, #0]
 800bb48:	bfb4      	ite	lt
 800bb4a:	f04f 36ff 	movlt.w	r6, #4294967295
 800bb4e:	2601      	movge	r6, #1
 800bb50:	2a00      	cmp	r2, #0
 800bb52:	4617      	mov	r7, r2
 800bb54:	da04      	bge.n	800bb60 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800bb56:	6823      	ldr	r3, [r4, #0]
 800bb58:	425b      	negs	r3, r3
 800bb5a:	4257      	negs	r7, r2
 800bb5c:	4276      	negs	r6, r6
 800bb5e:	6023      	str	r3, [r4, #0]
 800bb60:	2d00      	cmp	r5, #0
 800bb62:	4638      	mov	r0, r7
 800bb64:	bfba      	itte	lt
 800bb66:	426d      	neglt	r5, r5
 800bb68:	f04f 38ff 	movlt.w	r8, #4294967295
 800bb6c:	f04f 0801 	movge.w	r8, #1
 800bb70:	f7ff ff64 	bl	800ba3c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800bb74:	ab03      	add	r3, sp, #12
 800bb76:	e9cd 5300 	strd	r5, r3, [sp]
 800bb7a:	463a      	mov	r2, r7
 800bb7c:	4603      	mov	r3, r0
 800bb7e:	4648      	mov	r0, r9
 800bb80:	f7ff ff7a 	bl	800ba78 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800bb84:	6823      	ldr	r3, [r4, #0]
 800bb86:	9a03      	ldr	r2, [sp, #12]
 800bb88:	4546      	cmp	r6, r8
 800bb8a:	441a      	add	r2, r3
 800bb8c:	fb92 f3f5 	sdiv	r3, r2, r5
 800bb90:	4418      	add	r0, r3
 800bb92:	bf18      	it	ne
 800bb94:	4240      	negne	r0, r0
 800bb96:	fb05 2313 	mls	r3, r5, r3, r2
 800bb9a:	1c72      	adds	r2, r6, #1
 800bb9c:	6023      	str	r3, [r4, #0]
 800bb9e:	d105      	bne.n	800bbac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800bba0:	2b00      	cmp	r3, #0
 800bba2:	f1c3 0200 	rsb	r2, r3, #0
 800bba6:	db0b      	blt.n	800bbc0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800bba8:	6022      	str	r2, [r4, #0]
 800bbaa:	e006      	b.n	800bbba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800bbac:	2e01      	cmp	r6, #1
 800bbae:	d104      	bne.n	800bbba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800bbb0:	2b00      	cmp	r3, #0
 800bbb2:	da02      	bge.n	800bbba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800bbb4:	442b      	add	r3, r5
 800bbb6:	3801      	subs	r0, #1
 800bbb8:	6023      	str	r3, [r4, #0]
 800bbba:	b005      	add	sp, #20
 800bbbc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bbc0:	3801      	subs	r0, #1
 800bbc2:	1b52      	subs	r2, r2, r5
 800bbc4:	e7f0      	b.n	800bba8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800bbc8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800bbc8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bbcc:	4c1c      	ldr	r4, [pc, #112]	; (800bc40 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800bbce:	6807      	ldr	r7, [r0, #0]
 800bbd0:	69a3      	ldr	r3, [r4, #24]
 800bbd2:	4605      	mov	r5, r0
 800bbd4:	b92b      	cbnz	r3, 800bbe2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800bbd6:	6840      	ldr	r0, [r0, #4]
 800bbd8:	e9c5 7000 	strd	r7, r0, [r5]
 800bbdc:	b004      	add	sp, #16
 800bbde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bbe2:	68a2      	ldr	r2, [r4, #8]
 800bbe4:	6820      	ldr	r0, [r4, #0]
 800bbe6:	ae04      	add	r6, sp, #16
 800bbe8:	f04f 0802 	mov.w	r8, #2
 800bbec:	fb93 f1f8 	sdiv	r1, r3, r8
 800bbf0:	440a      	add	r2, r1
 800bbf2:	f846 2d04 	str.w	r2, [r6, #-4]!
 800bbf6:	69e1      	ldr	r1, [r4, #28]
 800bbf8:	9600      	str	r6, [sp, #0]
 800bbfa:	463a      	mov	r2, r7
 800bbfc:	f7ff ff97 	bl	800bb2e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800bc00:	69a3      	ldr	r3, [r4, #24]
 800bc02:	686a      	ldr	r2, [r5, #4]
 800bc04:	6a21      	ldr	r1, [r4, #32]
 800bc06:	9600      	str	r6, [sp, #0]
 800bc08:	4607      	mov	r7, r0
 800bc0a:	6860      	ldr	r0, [r4, #4]
 800bc0c:	f7ff ff8f 	bl	800bb2e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800bc10:	6962      	ldr	r2, [r4, #20]
 800bc12:	69a3      	ldr	r3, [r4, #24]
 800bc14:	fb93 f8f8 	sdiv	r8, r3, r8
 800bc18:	4442      	add	r2, r8
 800bc1a:	9203      	str	r2, [sp, #12]
 800bc1c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bc1e:	682a      	ldr	r2, [r5, #0]
 800bc20:	9600      	str	r6, [sp, #0]
 800bc22:	4407      	add	r7, r0
 800bc24:	68e0      	ldr	r0, [r4, #12]
 800bc26:	f7ff ff82 	bl	800bb2e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800bc2a:	9600      	str	r6, [sp, #0]
 800bc2c:	4680      	mov	r8, r0
 800bc2e:	69a3      	ldr	r3, [r4, #24]
 800bc30:	686a      	ldr	r2, [r5, #4]
 800bc32:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800bc34:	6920      	ldr	r0, [r4, #16]
 800bc36:	f7ff ff7a 	bl	800bb2e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800bc3a:	4440      	add	r0, r8
 800bc3c:	e7cc      	b.n	800bbd8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800bc3e:	bf00      	nop
 800bc40:	2000a4fc 	.word	0x2000a4fc

0800bc44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800bc44:	4b07      	ldr	r3, [pc, #28]	; (800bc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800bc46:	781b      	ldrb	r3, [r3, #0]
 800bc48:	2b01      	cmp	r3, #1
 800bc4a:	d109      	bne.n	800bc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800bc4c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800bc50:	f9b0 2000 	ldrsh.w	r2, [r0]
 800bc54:	8003      	strh	r3, [r0, #0]
 800bc56:	4b04      	ldr	r3, [pc, #16]	; (800bc68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800bc58:	881b      	ldrh	r3, [r3, #0]
 800bc5a:	3b01      	subs	r3, #1
 800bc5c:	1a9b      	subs	r3, r3, r2
 800bc5e:	800b      	strh	r3, [r1, #0]
 800bc60:	4770      	bx	lr
 800bc62:	bf00      	nop
 800bc64:	2000a4e8 	.word	0x2000a4e8
 800bc68:	2000a4e4 	.word	0x2000a4e4

0800bc6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800bc6c:	b510      	push	{r4, lr}
 800bc6e:	4b07      	ldr	r3, [pc, #28]	; (800bc8c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800bc70:	781b      	ldrb	r3, [r3, #0]
 800bc72:	2b01      	cmp	r3, #1
 800bc74:	d108      	bne.n	800bc88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800bc76:	4b06      	ldr	r3, [pc, #24]	; (800bc90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800bc78:	880c      	ldrh	r4, [r1, #0]
 800bc7a:	881b      	ldrh	r3, [r3, #0]
 800bc7c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800bc80:	3b01      	subs	r3, #1
 800bc82:	1b1b      	subs	r3, r3, r4
 800bc84:	8003      	strh	r3, [r0, #0]
 800bc86:	800a      	strh	r2, [r1, #0]
 800bc88:	bd10      	pop	{r4, pc}
 800bc8a:	bf00      	nop
 800bc8c:	2000a4e8 	.word	0x2000a4e8
 800bc90:	2000a4e4 	.word	0x2000a4e4

0800bc94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800bc94:	b510      	push	{r4, lr}
 800bc96:	4b0a      	ldr	r3, [pc, #40]	; (800bcc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800bc98:	781b      	ldrb	r3, [r3, #0]
 800bc9a:	2b01      	cmp	r3, #1
 800bc9c:	d10e      	bne.n	800bcbc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800bc9e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800bca2:	8843      	ldrh	r3, [r0, #2]
 800bca4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800bca8:	8044      	strh	r4, [r0, #2]
 800bcaa:	18ca      	adds	r2, r1, r3
 800bcac:	4b05      	ldr	r3, [pc, #20]	; (800bcc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800bcae:	881b      	ldrh	r3, [r3, #0]
 800bcb0:	1a9b      	subs	r3, r3, r2
 800bcb2:	8003      	strh	r3, [r0, #0]
 800bcb4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bcb8:	80c3      	strh	r3, [r0, #6]
 800bcba:	8081      	strh	r1, [r0, #4]
 800bcbc:	bd10      	pop	{r4, pc}
 800bcbe:	bf00      	nop
 800bcc0:	2000a4e8 	.word	0x2000a4e8
 800bcc4:	2000a4e4 	.word	0x2000a4e4

0800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800bcc8:	4b08      	ldr	r3, [pc, #32]	; (800bcec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800bcca:	781b      	ldrb	r3, [r3, #0]
 800bccc:	2b01      	cmp	r3, #1
 800bcce:	d10c      	bne.n	800bcea <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800bcd0:	8803      	ldrh	r3, [r0, #0]
 800bcd2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800bcd6:	8842      	ldrh	r2, [r0, #2]
 800bcd8:	8002      	strh	r2, [r0, #0]
 800bcda:	185a      	adds	r2, r3, r1
 800bcdc:	4b04      	ldr	r3, [pc, #16]	; (800bcf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800bcde:	881b      	ldrh	r3, [r3, #0]
 800bce0:	1a9b      	subs	r3, r3, r2
 800bce2:	8043      	strh	r3, [r0, #2]
 800bce4:	88c3      	ldrh	r3, [r0, #6]
 800bce6:	8083      	strh	r3, [r0, #4]
 800bce8:	80c1      	strh	r1, [r0, #6]
 800bcea:	4770      	bx	lr
 800bcec:	2000a4e8 	.word	0x2000a4e8
 800bcf0:	2000a4e4 	.word	0x2000a4e4

0800bcf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800bcf4:	b510      	push	{r4, lr}
 800bcf6:	4b07      	ldr	r3, [pc, #28]	; (800bd14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800bcf8:	781b      	ldrb	r3, [r3, #0]
 800bcfa:	2b01      	cmp	r3, #1
 800bcfc:	d108      	bne.n	800bd10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800bcfe:	f9b1 3000 	ldrsh.w	r3, [r1]
 800bd02:	f9b0 4000 	ldrsh.w	r4, [r0]
 800bd06:	8003      	strh	r3, [r0, #0]
 800bd08:	8893      	ldrh	r3, [r2, #4]
 800bd0a:	3b01      	subs	r3, #1
 800bd0c:	1b1b      	subs	r3, r3, r4
 800bd0e:	800b      	strh	r3, [r1, #0]
 800bd10:	bd10      	pop	{r4, pc}
 800bd12:	bf00      	nop
 800bd14:	2000a4e8 	.word	0x2000a4e8

0800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800bd18:	b510      	push	{r4, lr}
 800bd1a:	4b0a      	ldr	r3, [pc, #40]	; (800bd44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800bd1c:	781b      	ldrb	r3, [r3, #0]
 800bd1e:	2b01      	cmp	r3, #1
 800bd20:	460a      	mov	r2, r1
 800bd22:	d10d      	bne.n	800bd40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800bd24:	8881      	ldrh	r1, [r0, #4]
 800bd26:	8803      	ldrh	r3, [r0, #0]
 800bd28:	440b      	add	r3, r1
 800bd2a:	4601      	mov	r1, r0
 800bd2c:	3b01      	subs	r3, #1
 800bd2e:	f821 3b02 	strh.w	r3, [r1], #2
 800bd32:	f7ff ffdf 	bl	800bcf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800bd36:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bd3a:	88c2      	ldrh	r2, [r0, #6]
 800bd3c:	8082      	strh	r2, [r0, #4]
 800bd3e:	80c3      	strh	r3, [r0, #6]
 800bd40:	bd10      	pop	{r4, pc}
 800bd42:	bf00      	nop
 800bd44:	2000a4e8 	.word	0x2000a4e8

0800bd48 <_ZN8touchgfx11Application13requestRedrawEv>:
 800bd48:	4b06      	ldr	r3, [pc, #24]	; (800bd64 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800bd4a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bd4e:	4b06      	ldr	r3, [pc, #24]	; (800bd68 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800bd50:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800bd54:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bd58:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800bd5c:	2100      	movs	r1, #0
 800bd5e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800bd62:	4770      	bx	lr
 800bd64:	2000a4e4 	.word	0x2000a4e4
 800bd68:	2000a4e6 	.word	0x2000a4e6

0800bd6c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800bd6c:	4b03      	ldr	r3, [pc, #12]	; (800bd7c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800bd6e:	6818      	ldr	r0, [r3, #0]
 800bd70:	b110      	cbz	r0, 800bd78 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800bd72:	6803      	ldr	r3, [r0, #0]
 800bd74:	699b      	ldr	r3, [r3, #24]
 800bd76:	4718      	bx	r3
 800bd78:	4770      	bx	lr
 800bd7a:	bf00      	nop
 800bd7c:	2000a52c 	.word	0x2000a52c

0800bd80 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800bd80:	4770      	bx	lr
	...

0800bd84 <_ZN8touchgfx11Application4drawEv>:
 800bd84:	b507      	push	{r0, r1, r2, lr}
 800bd86:	4b09      	ldr	r3, [pc, #36]	; (800bdac <_ZN8touchgfx11Application4drawEv+0x28>)
 800bd88:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bd8c:	4b08      	ldr	r3, [pc, #32]	; (800bdb0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800bd8e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800bd92:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bd96:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bd9a:	6803      	ldr	r3, [r0, #0]
 800bd9c:	2100      	movs	r1, #0
 800bd9e:	9100      	str	r1, [sp, #0]
 800bda0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bda2:	4669      	mov	r1, sp
 800bda4:	4798      	blx	r3
 800bda6:	b003      	add	sp, #12
 800bda8:	f85d fb04 	ldr.w	pc, [sp], #4
 800bdac:	2000a4e4 	.word	0x2000a4e4
 800bdb0:	2000a4e6 	.word	0x2000a4e6

0800bdb4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800bdb4:	4b03      	ldr	r3, [pc, #12]	; (800bdc4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800bdb6:	6818      	ldr	r0, [r3, #0]
 800bdb8:	b110      	cbz	r0, 800bdc0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800bdba:	6803      	ldr	r3, [r0, #0]
 800bdbc:	69db      	ldr	r3, [r3, #28]
 800bdbe:	4718      	bx	r3
 800bdc0:	4770      	bx	lr
 800bdc2:	bf00      	nop
 800bdc4:	2000a52c 	.word	0x2000a52c

0800bdc8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800bdc8:	4b03      	ldr	r3, [pc, #12]	; (800bdd8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800bdca:	6818      	ldr	r0, [r3, #0]
 800bdcc:	b110      	cbz	r0, 800bdd4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800bdce:	6803      	ldr	r3, [r0, #0]
 800bdd0:	6a1b      	ldr	r3, [r3, #32]
 800bdd2:	4718      	bx	r3
 800bdd4:	4770      	bx	lr
 800bdd6:	bf00      	nop
 800bdd8:	2000a52c 	.word	0x2000a52c

0800bddc <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800bddc:	2300      	movs	r3, #0
 800bdde:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800bde2:	4770      	bx	lr

0800bde4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800bde4:	4b03      	ldr	r3, [pc, #12]	; (800bdf4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800bde6:	6818      	ldr	r0, [r3, #0]
 800bde8:	b110      	cbz	r0, 800bdf0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800bdea:	6803      	ldr	r3, [r0, #0]
 800bdec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bdee:	4718      	bx	r3
 800bdf0:	4770      	bx	lr
 800bdf2:	bf00      	nop
 800bdf4:	2000a52c 	.word	0x2000a52c

0800bdf8 <_ZN8touchgfx11ApplicationD1Ev>:
 800bdf8:	4770      	bx	lr

0800bdfa <_ZN8touchgfx11ApplicationD0Ev>:
 800bdfa:	b510      	push	{r4, lr}
 800bdfc:	f44f 719c 	mov.w	r1, #312	; 0x138
 800be00:	4604      	mov	r4, r0
 800be02:	f00e ff1b 	bl	801ac3c <_ZdlPvj>
 800be06:	4620      	mov	r0, r4
 800be08:	bd10      	pop	{r4, pc}
	...

0800be0c <_ZN8touchgfx11Application15handleTickEventEv>:
 800be0c:	b570      	push	{r4, r5, r6, lr}
 800be0e:	4d38      	ldr	r5, [pc, #224]	; (800bef0 <_ZN8touchgfx11Application15handleTickEventEv+0xe4>)
 800be10:	4604      	mov	r4, r0
 800be12:	6828      	ldr	r0, [r5, #0]
 800be14:	b140      	cbz	r0, 800be28 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800be16:	7a03      	ldrb	r3, [r0, #8]
 800be18:	b933      	cbnz	r3, 800be28 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800be1a:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800be1e:	6803      	ldr	r3, [r0, #0]
 800be20:	689b      	ldr	r3, [r3, #8]
 800be22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be26:	4718      	bx	r3
 800be28:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800be2c:	b97b      	cbnz	r3, 800be4e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800be2e:	b170      	cbz	r0, 800be4e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800be30:	7a03      	ldrb	r3, [r0, #8]
 800be32:	b163      	cbz	r3, 800be4e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800be34:	4b2f      	ldr	r3, [pc, #188]	; (800bef4 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800be36:	6818      	ldr	r0, [r3, #0]
 800be38:	b110      	cbz	r0, 800be40 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800be3a:	6803      	ldr	r3, [r0, #0]
 800be3c:	691b      	ldr	r3, [r3, #16]
 800be3e:	4798      	blx	r3
 800be40:	6828      	ldr	r0, [r5, #0]
 800be42:	6803      	ldr	r3, [r0, #0]
 800be44:	68db      	ldr	r3, [r3, #12]
 800be46:	4798      	blx	r3
 800be48:	2301      	movs	r3, #1
 800be4a:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800be4e:	2500      	movs	r5, #0
 800be50:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800be54:	42a8      	cmp	r0, r5
 800be56:	dd0c      	ble.n	800be72 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800be58:	1963      	adds	r3, r4, r5
 800be5a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800be5e:	b132      	cbz	r2, 800be6e <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800be60:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800be64:	4413      	add	r3, r2
 800be66:	6858      	ldr	r0, [r3, #4]
 800be68:	6803      	ldr	r3, [r0, #0]
 800be6a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800be6c:	4798      	blx	r3
 800be6e:	3501      	adds	r5, #1
 800be70:	e7ee      	b.n	800be50 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800be72:	2300      	movs	r3, #0
 800be74:	461a      	mov	r2, r3
 800be76:	4298      	cmp	r0, r3
 800be78:	d10f      	bne.n	800be9a <_ZN8touchgfx11Application15handleTickEventEv+0x8e>
 800be7a:	1d25      	adds	r5, r4, #4
 800be7c:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800be80:	4291      	cmp	r1, r2
 800be82:	dd2d      	ble.n	800bee0 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>
 800be84:	1e48      	subs	r0, r1, #1
 800be86:	b280      	uxth	r0, r0
 800be88:	4288      	cmp	r0, r1
 800be8a:	d31a      	bcc.n	800bec2 <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800be8c:	4b1a      	ldr	r3, [pc, #104]	; (800bef8 <_ZN8touchgfx11Application15handleTickEventEv+0xec>)
 800be8e:	4a1b      	ldr	r2, [pc, #108]	; (800befc <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800be90:	481b      	ldr	r0, [pc, #108]	; (800bf00 <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800be92:	f44f 71e5 	mov.w	r1, #458	; 0x1ca
 800be96:	f00e feff 	bl	801ac98 <__assert_func>
 800be9a:	18e1      	adds	r1, r4, r3
 800be9c:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800bea0:	b16d      	cbz	r5, 800bebe <_ZN8touchgfx11Application15handleTickEventEv+0xb2>
 800bea2:	429a      	cmp	r2, r3
 800bea4:	d00a      	beq.n	800bebc <_ZN8touchgfx11Application15handleTickEventEv+0xb0>
 800bea6:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800beaa:	4431      	add	r1, r6
 800beac:	684e      	ldr	r6, [r1, #4]
 800beae:	b291      	uxth	r1, r2
 800beb0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800beb4:	604e      	str	r6, [r1, #4]
 800beb6:	18a1      	adds	r1, r4, r2
 800beb8:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800bebc:	3201      	adds	r2, #1
 800bebe:	3301      	adds	r3, #1
 800bec0:	e7d9      	b.n	800be76 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800bec2:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800bec6:	3304      	adds	r3, #4
 800bec8:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800becc:	428b      	cmp	r3, r1
 800bece:	d004      	beq.n	800beda <_ZN8touchgfx11Application15handleTickEventEv+0xce>
 800bed0:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800bed4:	f843 6c04 	str.w	r6, [r3, #-4]
 800bed8:	e7f8      	b.n	800becc <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800beda:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800bede:	e7cd      	b.n	800be7c <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800bee0:	4b04      	ldr	r3, [pc, #16]	; (800bef4 <_ZN8touchgfx11Application15handleTickEventEv+0xe8>)
 800bee2:	6818      	ldr	r0, [r3, #0]
 800bee4:	b110      	cbz	r0, 800beec <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800bee6:	6803      	ldr	r3, [r0, #0]
 800bee8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800beea:	e79a      	b.n	800be22 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800beec:	bd70      	pop	{r4, r5, r6, pc}
 800beee:	bf00      	nop
 800bef0:	2000a530 	.word	0x2000a530
 800bef4:	2000a52c 	.word	0x2000a52c
 800bef8:	0801dc32 	.word	0x0801dc32
 800befc:	0801de24 	.word	0x0801de24
 800bf00:	0801dc40 	.word	0x0801dc40

0800bf04 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800bf04:	b570      	push	{r4, r5, r6, lr}
 800bf06:	4606      	mov	r6, r0
 800bf08:	460c      	mov	r4, r1
 800bf0a:	b929      	cbnz	r1, 800bf18 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800bf0c:	4b0c      	ldr	r3, [pc, #48]	; (800bf40 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800bf0e:	4a0d      	ldr	r2, [pc, #52]	; (800bf44 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800bf10:	480d      	ldr	r0, [pc, #52]	; (800bf48 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800bf12:	215e      	movs	r1, #94	; 0x5e
 800bf14:	f00e fec0 	bl	801ac98 <__assert_func>
 800bf18:	4d0c      	ldr	r5, [pc, #48]	; (800bf4c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800bf1a:	2300      	movs	r3, #0
 800bf1c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800bf20:	6828      	ldr	r0, [r5, #0]
 800bf22:	b110      	cbz	r0, 800bf2a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800bf24:	6803      	ldr	r3, [r0, #0]
 800bf26:	695b      	ldr	r3, [r3, #20]
 800bf28:	4798      	blx	r3
 800bf2a:	602c      	str	r4, [r5, #0]
 800bf2c:	6823      	ldr	r3, [r4, #0]
 800bf2e:	4620      	mov	r0, r4
 800bf30:	68db      	ldr	r3, [r3, #12]
 800bf32:	4798      	blx	r3
 800bf34:	6833      	ldr	r3, [r6, #0]
 800bf36:	4630      	mov	r0, r6
 800bf38:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bf3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf3e:	4718      	bx	r3
 800bf40:	0801dbfe 	.word	0x0801dbfe
 800bf44:	0801dce4 	.word	0x0801dce4
 800bf48:	0801dc08 	.word	0x0801dc08
 800bf4c:	2000a52c 	.word	0x2000a52c

0800bf50 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800bf50:	b510      	push	{r4, lr}
 800bf52:	f9b1 4000 	ldrsh.w	r4, [r1]
 800bf56:	888a      	ldrh	r2, [r1, #4]
 800bf58:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bf5c:	4422      	add	r2, r4
 800bf5e:	b212      	sxth	r2, r2
 800bf60:	4293      	cmp	r3, r2
 800bf62:	da15      	bge.n	800bf90 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bf64:	8882      	ldrh	r2, [r0, #4]
 800bf66:	4413      	add	r3, r2
 800bf68:	b21b      	sxth	r3, r3
 800bf6a:	429c      	cmp	r4, r3
 800bf6c:	da10      	bge.n	800bf90 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bf6e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800bf72:	88c9      	ldrh	r1, [r1, #6]
 800bf74:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800bf78:	4419      	add	r1, r3
 800bf7a:	b209      	sxth	r1, r1
 800bf7c:	428a      	cmp	r2, r1
 800bf7e:	da07      	bge.n	800bf90 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800bf80:	88c0      	ldrh	r0, [r0, #6]
 800bf82:	4410      	add	r0, r2
 800bf84:	b200      	sxth	r0, r0
 800bf86:	4283      	cmp	r3, r0
 800bf88:	bfac      	ite	ge
 800bf8a:	2000      	movge	r0, #0
 800bf8c:	2001      	movlt	r0, #1
 800bf8e:	bd10      	pop	{r4, pc}
 800bf90:	2000      	movs	r0, #0
 800bf92:	e7fc      	b.n	800bf8e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800bf94 <_ZN8touchgfx4Rect10restrictToEss>:
 800bf94:	f9b0 3000 	ldrsh.w	r3, [r0]
 800bf98:	2b00      	cmp	r3, #0
 800bf9a:	b510      	push	{r4, lr}
 800bf9c:	da04      	bge.n	800bfa8 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800bf9e:	8884      	ldrh	r4, [r0, #4]
 800bfa0:	4423      	add	r3, r4
 800bfa2:	8083      	strh	r3, [r0, #4]
 800bfa4:	2300      	movs	r3, #0
 800bfa6:	8003      	strh	r3, [r0, #0]
 800bfa8:	f9b0 4000 	ldrsh.w	r4, [r0]
 800bfac:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bfb0:	1b09      	subs	r1, r1, r4
 800bfb2:	428b      	cmp	r3, r1
 800bfb4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800bfb8:	bfc8      	it	gt
 800bfba:	8081      	strhgt	r1, [r0, #4]
 800bfbc:	2b00      	cmp	r3, #0
 800bfbe:	da04      	bge.n	800bfca <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800bfc0:	88c1      	ldrh	r1, [r0, #6]
 800bfc2:	440b      	add	r3, r1
 800bfc4:	80c3      	strh	r3, [r0, #6]
 800bfc6:	2300      	movs	r3, #0
 800bfc8:	8043      	strh	r3, [r0, #2]
 800bfca:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800bfce:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800bfd2:	1a52      	subs	r2, r2, r1
 800bfd4:	4293      	cmp	r3, r2
 800bfd6:	bfc8      	it	gt
 800bfd8:	80c2      	strhgt	r2, [r0, #6]
 800bfda:	bd10      	pop	{r4, pc}

0800bfdc <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800bfdc:	b510      	push	{r4, lr}
 800bfde:	4b10      	ldr	r3, [pc, #64]	; (800c020 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800bfe0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bfe4:	4b0f      	ldr	r3, [pc, #60]	; (800c024 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800bfe6:	460c      	mov	r4, r1
 800bfe8:	4620      	mov	r0, r4
 800bfea:	f9b3 1000 	ldrsh.w	r1, [r3]
 800bfee:	f7ff ffd1 	bl	800bf94 <_ZN8touchgfx4Rect10restrictToEss>
 800bff2:	4b0d      	ldr	r3, [pc, #52]	; (800c028 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800bff4:	6818      	ldr	r0, [r3, #0]
 800bff6:	b190      	cbz	r0, 800c01e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800bff8:	6803      	ldr	r3, [r0, #0]
 800bffa:	4621      	mov	r1, r4
 800bffc:	689b      	ldr	r3, [r3, #8]
 800bffe:	4798      	blx	r3
 800c000:	4b0a      	ldr	r3, [pc, #40]	; (800c02c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800c002:	6818      	ldr	r0, [r3, #0]
 800c004:	b118      	cbz	r0, 800c00e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800c006:	6803      	ldr	r3, [r0, #0]
 800c008:	4621      	mov	r1, r4
 800c00a:	689b      	ldr	r3, [r3, #8]
 800c00c:	4798      	blx	r3
 800c00e:	4b08      	ldr	r3, [pc, #32]	; (800c030 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800c010:	6818      	ldr	r0, [r3, #0]
 800c012:	6803      	ldr	r3, [r0, #0]
 800c014:	4621      	mov	r1, r4
 800c016:	69db      	ldr	r3, [r3, #28]
 800c018:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c01c:	4718      	bx	r3
 800c01e:	bd10      	pop	{r4, pc}
 800c020:	2000a4e6 	.word	0x2000a4e6
 800c024:	2000a4e4 	.word	0x2000a4e4
 800c028:	2000a52c 	.word	0x2000a52c
 800c02c:	2000a528 	.word	0x2000a528
 800c030:	2000a4f0 	.word	0x2000a4f0

0800c034 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800c034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c036:	4606      	mov	r6, r0
 800c038:	4608      	mov	r0, r1
 800c03a:	460f      	mov	r7, r1
 800c03c:	f7fd f8a3 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c040:	b9e8      	cbnz	r0, 800c07e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c042:	f9b7 5000 	ldrsh.w	r5, [r7]
 800c046:	f9b6 4000 	ldrsh.w	r4, [r6]
 800c04a:	42a5      	cmp	r5, r4
 800c04c:	db17      	blt.n	800c07e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c04e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c052:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800c056:	429a      	cmp	r2, r3
 800c058:	db11      	blt.n	800c07e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c05a:	88b9      	ldrh	r1, [r7, #4]
 800c05c:	440d      	add	r5, r1
 800c05e:	88b1      	ldrh	r1, [r6, #4]
 800c060:	440c      	add	r4, r1
 800c062:	b22d      	sxth	r5, r5
 800c064:	b224      	sxth	r4, r4
 800c066:	42a5      	cmp	r5, r4
 800c068:	dc09      	bgt.n	800c07e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800c06a:	88f8      	ldrh	r0, [r7, #6]
 800c06c:	4410      	add	r0, r2
 800c06e:	88f2      	ldrh	r2, [r6, #6]
 800c070:	4413      	add	r3, r2
 800c072:	b200      	sxth	r0, r0
 800c074:	b21b      	sxth	r3, r3
 800c076:	4298      	cmp	r0, r3
 800c078:	bfcc      	ite	gt
 800c07a:	2000      	movgt	r0, #0
 800c07c:	2001      	movle	r0, #1
 800c07e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c080 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c082:	4604      	mov	r4, r0
 800c084:	4608      	mov	r0, r1
 800c086:	460d      	mov	r5, r1
 800c088:	f7fd f87d 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c08c:	b978      	cbnz	r0, 800c0ae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c08e:	4620      	mov	r0, r4
 800c090:	f7fd f879 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c094:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c098:	b150      	cbz	r0, 800c0b0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c09a:	8026      	strh	r6, [r4, #0]
 800c09c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c0a0:	8063      	strh	r3, [r4, #2]
 800c0a2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c0a6:	80a3      	strh	r3, [r4, #4]
 800c0a8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c0ac:	80e3      	strh	r3, [r4, #6]
 800c0ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c0b0:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c0b4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c0b8:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c0bc:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c0c0:	88ed      	ldrh	r5, [r5, #6]
 800c0c2:	42b1      	cmp	r1, r6
 800c0c4:	460f      	mov	r7, r1
 800c0c6:	bfa8      	it	ge
 800c0c8:	4637      	movge	r7, r6
 800c0ca:	4293      	cmp	r3, r2
 800c0cc:	4618      	mov	r0, r3
 800c0ce:	4466      	add	r6, ip
 800c0d0:	bfa8      	it	ge
 800c0d2:	4610      	movge	r0, r2
 800c0d4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c0d8:	8027      	strh	r7, [r4, #0]
 800c0da:	442a      	add	r2, r5
 800c0dc:	88e5      	ldrh	r5, [r4, #6]
 800c0de:	8060      	strh	r0, [r4, #2]
 800c0e0:	4461      	add	r1, ip
 800c0e2:	442b      	add	r3, r5
 800c0e4:	b236      	sxth	r6, r6
 800c0e6:	b209      	sxth	r1, r1
 800c0e8:	b212      	sxth	r2, r2
 800c0ea:	b21b      	sxth	r3, r3
 800c0ec:	428e      	cmp	r6, r1
 800c0ee:	bfac      	ite	ge
 800c0f0:	ebc7 0106 	rsbge	r1, r7, r6
 800c0f4:	ebc7 0101 	rsblt	r1, r7, r1
 800c0f8:	429a      	cmp	r2, r3
 800c0fa:	bfac      	ite	ge
 800c0fc:	ebc0 0202 	rsbge	r2, r0, r2
 800c100:	ebc0 0203 	rsblt	r2, r0, r3
 800c104:	80a1      	strh	r1, [r4, #4]
 800c106:	80e2      	strh	r2, [r4, #6]
 800c108:	e7d1      	b.n	800c0ae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800c10c <_ZN8touchgfx11Application11getInstanceEv>:
 800c10c:	4b01      	ldr	r3, [pc, #4]	; (800c114 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800c10e:	6818      	ldr	r0, [r3, #0]
 800c110:	4770      	bx	lr
 800c112:	bf00      	nop
 800c114:	2000a53c 	.word	0x2000a53c

0800c118 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800c118:	2300      	movs	r3, #0
 800c11a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800c11e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800c122:	30a8      	adds	r0, #168	; 0xa8
 800c124:	f802 3b01 	strb.w	r3, [r2], #1
 800c128:	4282      	cmp	r2, r0
 800c12a:	d1fb      	bne.n	800c124 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800c12c:	4770      	bx	lr

0800c12e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800c12e:	4603      	mov	r3, r0
 800c130:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800c134:	2200      	movs	r2, #0
 800c136:	801a      	strh	r2, [r3, #0]
 800c138:	805a      	strh	r2, [r3, #2]
 800c13a:	809a      	strh	r2, [r3, #4]
 800c13c:	80da      	strh	r2, [r3, #6]
 800c13e:	3308      	adds	r3, #8
 800c140:	428b      	cmp	r3, r1
 800c142:	d1f8      	bne.n	800c136 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800c144:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c148:	4770      	bx	lr
	...

0800c14c <_ZN8touchgfx11ApplicationC1Ev>:
 800c14c:	b570      	push	{r4, r5, r6, lr}
 800c14e:	4b19      	ldr	r3, [pc, #100]	; (800c1b4 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800c150:	6003      	str	r3, [r0, #0]
 800c152:	2500      	movs	r5, #0
 800c154:	4604      	mov	r4, r0
 800c156:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800c15a:	30a8      	adds	r0, #168	; 0xa8
 800c15c:	f7ff ffe7 	bl	800c12e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c160:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800c164:	f7ff ffe3 	bl	800c12e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c168:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800c16c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800c170:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800c174:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800c178:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800c17c:	490e      	ldr	r1, [pc, #56]	; (800c1b8 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800c17e:	480f      	ldr	r0, [pc, #60]	; (800c1bc <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800c180:	4e0f      	ldr	r6, [pc, #60]	; (800c1c0 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800c182:	f00e fc33 	bl	801a9ec <CRC_Lock>
 800c186:	4b0f      	ldr	r3, [pc, #60]	; (800c1c4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800c188:	b158      	cbz	r0, 800c1a2 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 800c18a:	801d      	strh	r5, [r3, #0]
 800c18c:	4a0e      	ldr	r2, [pc, #56]	; (800c1c8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800c18e:	2300      	movs	r3, #0
 800c190:	6013      	str	r3, [r2, #0]
 800c192:	4a0e      	ldr	r2, [pc, #56]	; (800c1cc <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800c194:	6033      	str	r3, [r6, #0]
 800c196:	4620      	mov	r0, r4
 800c198:	6013      	str	r3, [r2, #0]
 800c19a:	f7ff ffbd 	bl	800c118 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800c19e:	4620      	mov	r0, r4
 800c1a0:	bd70      	pop	{r4, r5, r6, pc}
 800c1a2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800c1a6:	2002      	movs	r0, #2
 800c1a8:	801a      	strh	r2, [r3, #0]
 800c1aa:	6030      	str	r0, [r6, #0]
 800c1ac:	f001 fa14 	bl	800d5d8 <_ZN8touchgfx6Screen4drawEv>
 800c1b0:	e7ec      	b.n	800c18c <_ZN8touchgfx11ApplicationC1Ev+0x40>
 800c1b2:	bf00      	nop
 800c1b4:	0801dca0 	.word	0x0801dca0
 800c1b8:	b5e8b5cd 	.word	0xb5e8b5cd
 800c1bc:	f407a5c2 	.word	0xf407a5c2
 800c1c0:	2000a52c 	.word	0x2000a52c
 800c1c4:	20000060 	.word	0x20000060
 800c1c8:	2000a53c 	.word	0x2000a53c
 800c1cc:	2000a530 	.word	0x2000a530

0800c1d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800c1d0:	b510      	push	{r4, lr}
 800c1d2:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800c1d6:	428b      	cmp	r3, r1
 800c1d8:	d806      	bhi.n	800c1e8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x18>
 800c1da:	4b0b      	ldr	r3, [pc, #44]	; (800c208 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x38>)
 800c1dc:	4a0b      	ldr	r2, [pc, #44]	; (800c20c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3c>)
 800c1de:	480c      	ldr	r0, [pc, #48]	; (800c210 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x40>)
 800c1e0:	f240 11dd 	movw	r1, #477	; 0x1dd
 800c1e4:	f00e fd58 	bl	801ac98 <__assert_func>
 800c1e8:	3b01      	subs	r3, #1
 800c1ea:	b29b      	uxth	r3, r3
 800c1ec:	428b      	cmp	r3, r1
 800c1ee:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800c1f2:	d908      	bls.n	800c206 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x36>
 800c1f4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800c1f8:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800c1fc:	681a      	ldr	r2, [r3, #0]
 800c1fe:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800c202:	685a      	ldr	r2, [r3, #4]
 800c204:	6062      	str	r2, [r4, #4]
 800c206:	bd10      	pop	{r4, pc}
 800c208:	0801dc32 	.word	0x0801dc32
 800c20c:	0801dd28 	.word	0x0801dd28
 800c210:	0801dc40 	.word	0x0801dc40

0800c214 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800c214:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c216:	466b      	mov	r3, sp
 800c218:	e883 0006 	stmia.w	r3, {r1, r2}
 800c21c:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800c220:	2a07      	cmp	r2, #7
 800c222:	4604      	mov	r4, r0
 800c224:	d906      	bls.n	800c234 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800c226:	4b09      	ldr	r3, [pc, #36]	; (800c24c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800c228:	4a09      	ldr	r2, [pc, #36]	; (800c250 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800c22a:	480a      	ldr	r0, [pc, #40]	; (800c254 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800c22c:	f240 11a3 	movw	r1, #419	; 0x1a3
 800c230:	f00e fd32 	bl	801ac98 <__assert_func>
 800c234:	1c51      	adds	r1, r2, #1
 800c236:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800c23a:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800c23e:	cb03      	ldmia	r3!, {r0, r1}
 800c240:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800c244:	6069      	str	r1, [r5, #4]
 800c246:	b003      	add	sp, #12
 800c248:	bd30      	pop	{r4, r5, pc}
 800c24a:	bf00      	nop
 800c24c:	0801dc69 	.word	0x0801dc69
 800c250:	0801ddbe 	.word	0x0801ddbe
 800c254:	0801dc40 	.word	0x0801dc40

0800c258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800c258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c25c:	4b94      	ldr	r3, [pc, #592]	; (800c4b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800c25e:	b08d      	sub	sp, #52	; 0x34
 800c260:	ac08      	add	r4, sp, #32
 800c262:	e884 0006 	stmia.w	r4, {r1, r2}
 800c266:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c26a:	4b92      	ldr	r3, [pc, #584]	; (800c4b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800c26c:	4683      	mov	fp, r0
 800c26e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800c272:	4620      	mov	r0, r4
 800c274:	f7ff fe8e 	bl	800bf94 <_ZN8touchgfx4Rect10restrictToEss>
 800c278:	4620      	mov	r0, r4
 800c27a:	f7fc ff84 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c27e:	2800      	cmp	r0, #0
 800c280:	d16a      	bne.n	800c358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800c282:	9402      	str	r4, [sp, #8]
 800c284:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800c288:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800c28c:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800c290:	2400      	movs	r4, #0
 800c292:	9301      	str	r3, [sp, #4]
 800c294:	36a0      	adds	r6, #160	; 0xa0
 800c296:	42a5      	cmp	r5, r4
 800c298:	d00d      	beq.n	800c2b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800c29a:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800c29e:	9802      	ldr	r0, [sp, #8]
 800c2a0:	f7ff fec8 	bl	800c034 <_ZNK8touchgfx4Rect8includesERKS0_>
 800c2a4:	b128      	cbz	r0, 800c2b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800c2a6:	1e69      	subs	r1, r5, #1
 800c2a8:	1b09      	subs	r1, r1, r4
 800c2aa:	b289      	uxth	r1, r1
 800c2ac:	9801      	ldr	r0, [sp, #4]
 800c2ae:	f7ff ff8f 	bl	800c1d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c2b2:	3401      	adds	r4, #1
 800c2b4:	e7ef      	b.n	800c296 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 800c2b6:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800c2ba:	9703      	str	r7, [sp, #12]
 800c2bc:	1e7b      	subs	r3, r7, #1
 800c2be:	9300      	str	r3, [sp, #0]
 800c2c0:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800c2c4:	2400      	movs	r4, #0
 800c2c6:	4655      	mov	r5, sl
 800c2c8:	9704      	str	r7, [sp, #16]
 800c2ca:	4626      	mov	r6, r4
 800c2cc:	9b04      	ldr	r3, [sp, #16]
 800c2ce:	2b00      	cmp	r3, #0
 800c2d0:	d078      	beq.n	800c3c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 800c2d2:	9902      	ldr	r1, [sp, #8]
 800c2d4:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800c2d8:	f7ff fe3a 	bl	800bf50 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c2dc:	b360      	cbz	r0, 800c338 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800c2de:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800c2e2:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800c2e6:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800c2ea:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800c2ee:	45e6      	cmp	lr, ip
 800c2f0:	db35      	blt.n	800c35e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800c2f2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800c2f6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800c2fa:	4472      	add	r2, lr
 800c2fc:	4463      	add	r3, ip
 800c2fe:	b212      	sxth	r2, r2
 800c300:	b21b      	sxth	r3, r3
 800c302:	429a      	cmp	r2, r3
 800c304:	dc2b      	bgt.n	800c35e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800c306:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800c30a:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800c30e:	fa1f f288 	uxth.w	r2, r8
 800c312:	4413      	add	r3, r2
 800c314:	b29b      	uxth	r3, r3
 800c316:	45c1      	cmp	r9, r8
 800c318:	fa0f fe83 	sxth.w	lr, r3
 800c31c:	fa1f fc89 	uxth.w	ip, r9
 800c320:	db0f      	blt.n	800c342 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800c322:	eba3 030c 	sub.w	r3, r3, ip
 800c326:	1ac9      	subs	r1, r1, r3
 800c328:	b209      	sxth	r1, r1
 800c32a:	2900      	cmp	r1, #0
 800c32c:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800c330:	dd12      	ble.n	800c358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800c332:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800c336:	4604      	mov	r4, r0
 800c338:	9b04      	ldr	r3, [sp, #16]
 800c33a:	3b01      	subs	r3, #1
 800c33c:	9304      	str	r3, [sp, #16]
 800c33e:	3d08      	subs	r5, #8
 800c340:	e7c4      	b.n	800c2cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 800c342:	4461      	add	r1, ip
 800c344:	b209      	sxth	r1, r1
 800c346:	4571      	cmp	r1, lr
 800c348:	dc3a      	bgt.n	800c3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800c34a:	eba2 020c 	sub.w	r2, r2, ip
 800c34e:	b212      	sxth	r2, r2
 800c350:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800c354:	2a00      	cmp	r2, #0
 800c356:	dcee      	bgt.n	800c336 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800c358:	b00d      	add	sp, #52	; 0x34
 800c35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c35e:	45c1      	cmp	r9, r8
 800c360:	db2e      	blt.n	800c3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800c362:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800c366:	4499      	add	r9, r3
 800c368:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800c36c:	4498      	add	r8, r3
 800c36e:	fa0f f989 	sxth.w	r9, r9
 800c372:	fa0f f888 	sxth.w	r8, r8
 800c376:	45c1      	cmp	r9, r8
 800c378:	dc22      	bgt.n	800c3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800c37a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800c37e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800c382:	fa1f f28c 	uxth.w	r2, ip
 800c386:	4413      	add	r3, r2
 800c388:	b29b      	uxth	r3, r3
 800c38a:	45e6      	cmp	lr, ip
 800c38c:	fa1f f88e 	uxth.w	r8, lr
 800c390:	fa0f f983 	sxth.w	r9, r3
 800c394:	db0a      	blt.n	800c3ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 800c396:	eba3 0308 	sub.w	r3, r3, r8
 800c39a:	1ac9      	subs	r1, r1, r3
 800c39c:	b209      	sxth	r1, r1
 800c39e:	2900      	cmp	r1, #0
 800c3a0:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800c3a4:	ddd8      	ble.n	800c358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800c3a6:	f8ad 9020 	strh.w	r9, [sp, #32]
 800c3aa:	e7c4      	b.n	800c336 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800c3ac:	4441      	add	r1, r8
 800c3ae:	b209      	sxth	r1, r1
 800c3b0:	4549      	cmp	r1, r9
 800c3b2:	dc05      	bgt.n	800c3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800c3b4:	eba2 0208 	sub.w	r2, r2, r8
 800c3b8:	b212      	sxth	r2, r2
 800c3ba:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800c3be:	e7c9      	b.n	800c354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800c3c0:	4606      	mov	r6, r0
 800c3c2:	e7b9      	b.n	800c338 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800c3c4:	2c00      	cmp	r4, #0
 800c3c6:	f47f af7d 	bne.w	800c2c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 800c3ca:	2e00      	cmp	r6, #0
 800c3cc:	f000 81e1 	beq.w	800c792 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800c3d0:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800c3d4:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800c3d8:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800c3dc:	b2b9      	uxth	r1, r7
 800c3de:	9104      	str	r1, [sp, #16]
 800c3e0:	9804      	ldr	r0, [sp, #16]
 800c3e2:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800c3e6:	4401      	add	r1, r0
 800c3e8:	b2b3      	uxth	r3, r6
 800c3ea:	b289      	uxth	r1, r1
 800c3ec:	441a      	add	r2, r3
 800c3ee:	9105      	str	r1, [sp, #20]
 800c3f0:	b292      	uxth	r2, r2
 800c3f2:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800c3f6:	fa0f f882 	sxth.w	r8, r2
 800c3fa:	4655      	mov	r5, sl
 800c3fc:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800c400:	9b03      	ldr	r3, [sp, #12]
 800c402:	2b00      	cmp	r3, #0
 800c404:	d058      	beq.n	800c4b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 800c406:	9902      	ldr	r1, [sp, #8]
 800c408:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800c40c:	f7ff fda0 	bl	800bf50 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c410:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c414:	b1d8      	cbz	r0, 800c44e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800c416:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800c41a:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800c41e:	4576      	cmp	r6, lr
 800c420:	dc26      	bgt.n	800c470 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800c422:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800c426:	44f4      	add	ip, lr
 800c428:	fa0f fc8c 	sxth.w	ip, ip
 800c42c:	45e0      	cmp	r8, ip
 800c42e:	db1f      	blt.n	800c470 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800c430:	428f      	cmp	r7, r1
 800c432:	fa1f fc81 	uxth.w	ip, r1
 800c436:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800c43a:	dc0f      	bgt.n	800c45c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 800c43c:	9805      	ldr	r0, [sp, #20]
 800c43e:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800c442:	eba0 0c0c 	sub.w	ip, r0, ip
 800c446:	eba1 010c 	sub.w	r1, r1, ip
 800c44a:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800c44e:	4620      	mov	r0, r4
 800c450:	9903      	ldr	r1, [sp, #12]
 800c452:	3901      	subs	r1, #1
 800c454:	9103      	str	r1, [sp, #12]
 800c456:	3d08      	subs	r5, #8
 800c458:	4604      	mov	r4, r0
 800c45a:	e7cf      	b.n	800c3fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 800c45c:	4461      	add	r1, ip
 800c45e:	b209      	sxth	r1, r1
 800c460:	4549      	cmp	r1, r9
 800c462:	dcf5      	bgt.n	800c450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800c464:	9904      	ldr	r1, [sp, #16]
 800c466:	eba1 0c0c 	sub.w	ip, r1, ip
 800c46a:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800c46e:	e7ee      	b.n	800c44e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800c470:	428f      	cmp	r7, r1
 800c472:	dced      	bgt.n	800c450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800c474:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800c478:	4461      	add	r1, ip
 800c47a:	b209      	sxth	r1, r1
 800c47c:	4589      	cmp	r9, r1
 800c47e:	dbe7      	blt.n	800c450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800c480:	4576      	cmp	r6, lr
 800c482:	fa1f fc8e 	uxth.w	ip, lr
 800c486:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800c48a:	dc08      	bgt.n	800c49e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800c48c:	eba2 0c0c 	sub.w	ip, r2, ip
 800c490:	eba1 010c 	sub.w	r1, r1, ip
 800c494:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800c498:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800c49c:	e7d7      	b.n	800c44e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800c49e:	4461      	add	r1, ip
 800c4a0:	b209      	sxth	r1, r1
 800c4a2:	4588      	cmp	r8, r1
 800c4a4:	dbd4      	blt.n	800c450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800c4a6:	eba3 0c0c 	sub.w	ip, r3, ip
 800c4aa:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800c4ae:	e7ce      	b.n	800c44e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800c4b0:	2000a4e6 	.word	0x2000a4e6
 800c4b4:	2000a4e4 	.word	0x2000a4e4
 800c4b8:	2c00      	cmp	r4, #0
 800c4ba:	f000 816a 	beq.w	800c792 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800c4be:	9b00      	ldr	r3, [sp, #0]
 800c4c0:	3301      	adds	r3, #1
 800c4c2:	f000 8166 	beq.w	800c792 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800c4c6:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800c4ca:	4621      	mov	r1, r4
 800c4cc:	9802      	ldr	r0, [sp, #8]
 800c4ce:	f7ff fdb1 	bl	800c034 <_ZNK8touchgfx4Rect8includesERKS0_>
 800c4d2:	b120      	cbz	r0, 800c4de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 800c4d4:	f8bd 1000 	ldrh.w	r1, [sp]
 800c4d8:	9801      	ldr	r0, [sp, #4]
 800c4da:	f7ff fe79 	bl	800c1d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c4de:	9902      	ldr	r1, [sp, #8]
 800c4e0:	4620      	mov	r0, r4
 800c4e2:	f7ff fd35 	bl	800bf50 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c4e6:	2800      	cmp	r0, #0
 800c4e8:	f000 809b 	beq.w	800c622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800c4ec:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800c4f0:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800c4f4:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800c4f8:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800c4fc:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800c500:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800c504:	fa1f f288 	uxth.w	r2, r8
 800c508:	19d5      	adds	r5, r2, r7
 800c50a:	fa1f f985 	uxth.w	r9, r5
 800c50e:	fa0f f589 	sxth.w	r5, r9
 800c512:	b2a1      	uxth	r1, r4
 800c514:	440b      	add	r3, r1
 800c516:	9503      	str	r5, [sp, #12]
 800c518:	45a0      	cmp	r8, r4
 800c51a:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800c51e:	9507      	str	r5, [sp, #28]
 800c520:	b29b      	uxth	r3, r3
 800c522:	f340 809d 	ble.w	800c660 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800c526:	1a52      	subs	r2, r2, r1
 800c528:	b292      	uxth	r2, r2
 800c52a:	4584      	cmp	ip, r0
 800c52c:	fa0f fe83 	sxth.w	lr, r3
 800c530:	b215      	sxth	r5, r2
 800c532:	dd2f      	ble.n	800c594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33c>
 800c534:	9e00      	ldr	r6, [sp, #0]
 800c536:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800c53a:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800c53e:	9e03      	ldr	r6, [sp, #12]
 800c540:	eba6 060e 	sub.w	r6, r6, lr
 800c544:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800c548:	fa1f fc8c 	uxth.w	ip, ip
 800c54c:	b280      	uxth	r0, r0
 800c54e:	ebac 0300 	sub.w	r3, ip, r0
 800c552:	448c      	add	ip, r1
 800c554:	4470      	add	r0, lr
 800c556:	b29b      	uxth	r3, r3
 800c558:	fa0f fc8c 	sxth.w	ip, ip
 800c55c:	b200      	sxth	r0, r0
 800c55e:	b21c      	sxth	r4, r3
 800c560:	ebac 0000 	sub.w	r0, ip, r0
 800c564:	4366      	muls	r6, r4
 800c566:	4368      	muls	r0, r5
 800c568:	4286      	cmp	r6, r0
 800c56a:	db09      	blt.n	800c580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800c56c:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800c570:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800c574:	4417      	add	r7, r2
 800c576:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c57a:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800c57e:	e681      	b.n	800c284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c580:	440b      	add	r3, r1
 800c582:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800c586:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800c58a:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800c58e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800c592:	e677      	b.n	800c284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c594:	9e03      	ldr	r6, [sp, #12]
 800c596:	45b6      	cmp	lr, r6
 800c598:	da28      	bge.n	800c5ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 800c59a:	9b00      	ldr	r3, [sp, #0]
 800c59c:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800c5a0:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800c5a4:	eb04 030c 	add.w	r3, r4, ip
 800c5a8:	fa1f f883 	uxth.w	r8, r3
 800c5ac:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800c5b0:	4403      	add	r3, r0
 800c5b2:	eba3 0308 	sub.w	r3, r3, r8
 800c5b6:	b29b      	uxth	r3, r3
 800c5b8:	fa0f f988 	sxth.w	r9, r8
 800c5bc:	eba0 000c 	sub.w	r0, r0, ip
 800c5c0:	fa0f f883 	sxth.w	r8, r3
 800c5c4:	eba6 060e 	sub.w	r6, r6, lr
 800c5c8:	4368      	muls	r0, r5
 800c5ca:	fb08 f606 	mul.w	r6, r8, r6
 800c5ce:	42b0      	cmp	r0, r6
 800c5d0:	dc06      	bgt.n	800c5e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800c5d2:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800c5d6:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800c5da:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800c5de:	e7c9      	b.n	800c574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31c>
 800c5e0:	4423      	add	r3, r4
 800c5e2:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800c5e6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800c5ea:	e64b      	b.n	800c284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c5ec:	9807      	ldr	r0, [sp, #28]
 800c5ee:	eba3 0309 	sub.w	r3, r3, r9
 800c5f2:	b29b      	uxth	r3, r3
 800c5f4:	2806      	cmp	r0, #6
 800c5f6:	fa0f fc83 	sxth.w	ip, r3
 800c5fa:	d818      	bhi.n	800c62e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 800c5fc:	4652      	mov	r2, sl
 800c5fe:	ab0a      	add	r3, sp, #40	; 0x28
 800c600:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800c604:	6851      	ldr	r1, [r2, #4]
 800c606:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800c60a:	c303      	stmia	r3!, {r0, r1}
 800c60c:	9b03      	ldr	r3, [sp, #12]
 800c60e:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800c612:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800c616:	ab0a      	add	r3, sp, #40	; 0x28
 800c618:	e893 0006 	ldmia.w	r3, {r1, r2}
 800c61c:	9801      	ldr	r0, [sp, #4]
 800c61e:	f7ff fdf9 	bl	800c214 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c622:	9b00      	ldr	r3, [sp, #0]
 800c624:	3b01      	subs	r3, #1
 800c626:	9300      	str	r3, [sp, #0]
 800c628:	f1aa 0a08 	sub.w	sl, sl, #8
 800c62c:	e747      	b.n	800c4be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 800c62e:	9800      	ldr	r0, [sp, #0]
 800c630:	45ac      	cmp	ip, r5
 800c632:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800c636:	db0c      	blt.n	800c652 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fa>
 800c638:	4417      	add	r7, r2
 800c63a:	b2bf      	uxth	r7, r7
 800c63c:	4458      	add	r0, fp
 800c63e:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800c642:	440f      	add	r7, r1
 800c644:	f8ad 4020 	strh.w	r4, [sp, #32]
 800c648:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800c64c:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800c650:	e618      	b.n	800c284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c652:	4458      	add	r0, fp
 800c654:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800c658:	443b      	add	r3, r7
 800c65a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800c65e:	e611      	b.n	800c284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c660:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800c664:	fa1f f18c 	uxth.w	r1, ip
 800c668:	eb01 0e05 	add.w	lr, r1, r5
 800c66c:	b282      	uxth	r2, r0
 800c66e:	fa1f fe8e 	uxth.w	lr, lr
 800c672:	9204      	str	r2, [sp, #16]
 800c674:	fa0f f28e 	sxth.w	r2, lr
 800c678:	9205      	str	r2, [sp, #20]
 800c67a:	9e04      	ldr	r6, [sp, #16]
 800c67c:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800c680:	4432      	add	r2, r6
 800c682:	b292      	uxth	r2, r2
 800c684:	4584      	cmp	ip, r0
 800c686:	9206      	str	r2, [sp, #24]
 800c688:	da26      	bge.n	800c6d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x480>
 800c68a:	eba3 0309 	sub.w	r3, r3, r9
 800c68e:	eba2 020e 	sub.w	r2, r2, lr
 800c692:	b29b      	uxth	r3, r3
 800c694:	b292      	uxth	r2, r2
 800c696:	fa0f fa83 	sxth.w	sl, r3
 800c69a:	b211      	sxth	r1, r2
 800c69c:	eba0 000c 	sub.w	r0, r0, ip
 800c6a0:	eba4 0408 	sub.w	r4, r4, r8
 800c6a4:	fb0a f000 	mul.w	r0, sl, r0
 800c6a8:	434c      	muls	r4, r1
 800c6aa:	42a0      	cmp	r0, r4
 800c6ac:	9800      	ldr	r0, [sp, #0]
 800c6ae:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800c6b2:	dc06      	bgt.n	800c6c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800c6b4:	4458      	add	r0, fp
 800c6b6:	9a05      	ldr	r2, [sp, #20]
 800c6b8:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800c6bc:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800c6c0:	e7ca      	b.n	800c658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800c6c2:	eb0b 0300 	add.w	r3, fp, r0
 800c6c6:	9903      	ldr	r1, [sp, #12]
 800c6c8:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800c6cc:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800c6d0:	442a      	add	r2, r5
 800c6d2:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800c6d6:	e5d5      	b.n	800c284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c6d8:	9e04      	ldr	r6, [sp, #16]
 800c6da:	9a03      	ldr	r2, [sp, #12]
 800c6dc:	1b89      	subs	r1, r1, r6
 800c6de:	b21e      	sxth	r6, r3
 800c6e0:	b289      	uxth	r1, r1
 800c6e2:	4296      	cmp	r6, r2
 800c6e4:	fa0f fc81 	sxth.w	ip, r1
 800c6e8:	dd26      	ble.n	800c738 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4e0>
 800c6ea:	eba3 0309 	sub.w	r3, r3, r9
 800c6ee:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800c6f2:	9e05      	ldr	r6, [sp, #20]
 800c6f4:	b29b      	uxth	r3, r3
 800c6f6:	eba6 0902 	sub.w	r9, r6, r2
 800c6fa:	b218      	sxth	r0, r3
 800c6fc:	eba4 0408 	sub.w	r4, r4, r8
 800c700:	fb0c f404 	mul.w	r4, ip, r4
 800c704:	fb00 f909 	mul.w	r9, r0, r9
 800c708:	9a00      	ldr	r2, [sp, #0]
 800c70a:	454c      	cmp	r4, r9
 800c70c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800c710:	db03      	blt.n	800c71a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800c712:	445a      	add	r2, fp
 800c714:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800c718:	e79e      	b.n	800c658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x400>
 800c71a:	eb0b 0302 	add.w	r3, fp, r2
 800c71e:	9a03      	ldr	r2, [sp, #12]
 800c720:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800c724:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800c728:	4429      	add	r1, r5
 800c72a:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800c72e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800c732:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800c736:	e5a5      	b.n	800c284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c738:	9b06      	ldr	r3, [sp, #24]
 800c73a:	9c07      	ldr	r4, [sp, #28]
 800c73c:	eba3 020e 	sub.w	r2, r3, lr
 800c740:	b292      	uxth	r2, r2
 800c742:	2c06      	cmp	r4, #6
 800c744:	b213      	sxth	r3, r2
 800c746:	d80d      	bhi.n	800c764 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 800c748:	4651      	mov	r1, sl
 800c74a:	aa0a      	add	r2, sp, #40	; 0x28
 800c74c:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800c750:	6849      	ldr	r1, [r1, #4]
 800c752:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800c756:	9b05      	ldr	r3, [sp, #20]
 800c758:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800c75c:	c203      	stmia	r2!, {r0, r1}
 800c75e:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800c762:	e758      	b.n	800c616 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800c764:	9c00      	ldr	r4, [sp, #0]
 800c766:	4563      	cmp	r3, ip
 800c768:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800c76c:	db0d      	blt.n	800c78a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 800c76e:	4429      	add	r1, r5
 800c770:	9a04      	ldr	r2, [sp, #16]
 800c772:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800c776:	b289      	uxth	r1, r1
 800c778:	445c      	add	r4, fp
 800c77a:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800c77e:	4411      	add	r1, r2
 800c780:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800c784:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800c788:	e57c      	b.n	800c284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c78a:	445c      	add	r4, fp
 800c78c:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800c790:	e79e      	b.n	800c6d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x478>
 800c792:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800c796:	2f07      	cmp	r7, #7
 800c798:	d806      	bhi.n	800c7a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x550>
 800c79a:	ab08      	add	r3, sp, #32
 800c79c:	e893 0006 	ldmia.w	r3, {r1, r2}
 800c7a0:	9801      	ldr	r0, [sp, #4]
 800c7a2:	f7ff fd37 	bl	800c214 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c7a6:	e5d7      	b.n	800c358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800c7a8:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800c7ac:	f107 39ff 	add.w	r9, r7, #4294967295
 800c7b0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800c7b4:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800c7b8:	f04f 35ff 	mov.w	r5, #4294967295
 800c7bc:	2400      	movs	r4, #0
 800c7be:	9304      	str	r3, [sp, #16]
 800c7c0:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800c7c4:	9300      	str	r3, [sp, #0]
 800c7c6:	f109 32ff 	add.w	r2, r9, #4294967295
 800c7ca:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800c7ce:	9303      	str	r3, [sp, #12]
 800c7d0:	4690      	mov	r8, r2
 800c7d2:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800c7d6:	f1b8 3fff 	cmp.w	r8, #4294967295
 800c7da:	bf14      	ite	ne
 800c7dc:	9904      	ldrne	r1, [sp, #16]
 800c7de:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800c7e2:	6818      	ldr	r0, [r3, #0]
 800c7e4:	9206      	str	r2, [sp, #24]
 800c7e6:	bf18      	it	ne
 800c7e8:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800c7ec:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800c7f0:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800c7f4:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800c7f8:	9305      	str	r3, [sp, #20]
 800c7fa:	fb16 f601 	smulbb	r6, r6, r1
 800c7fe:	6859      	ldr	r1, [r3, #4]
 800c800:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800c804:	4671      	mov	r1, lr
 800c806:	a80a      	add	r0, sp, #40	; 0x28
 800c808:	f7ff fc3a 	bl	800c080 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c80c:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800c810:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800c814:	9b03      	ldr	r3, [sp, #12]
 800c816:	9a00      	ldr	r2, [sp, #0]
 800c818:	fb11 f100 	smulbb	r1, r1, r0
 800c81c:	fb02 6603 	mla	r6, r2, r3, r6
 800c820:	1b8e      	subs	r6, r1, r6
 800c822:	2008      	movs	r0, #8
 800c824:	fb91 f1f0 	sdiv	r1, r1, r0
 800c828:	42b1      	cmp	r1, r6
 800c82a:	dc21      	bgt.n	800c870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800c82c:	4556      	cmp	r6, sl
 800c82e:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800c832:	da03      	bge.n	800c83c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e4>
 800c834:	b1e6      	cbz	r6, 800c870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800c836:	46b2      	mov	sl, r6
 800c838:	4645      	mov	r5, r8
 800c83a:	464c      	mov	r4, r9
 800c83c:	f108 38ff 	add.w	r8, r8, #4294967295
 800c840:	f118 0f02 	cmn.w	r8, #2
 800c844:	d1c7      	bne.n	800c7d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57e>
 800c846:	f1b2 3fff 	cmp.w	r2, #4294967295
 800c84a:	f1a7 0708 	sub.w	r7, r7, #8
 800c84e:	4691      	mov	r9, r2
 800c850:	d1b6      	bne.n	800c7c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x568>
 800c852:	9b01      	ldr	r3, [sp, #4]
 800c854:	b2a6      	uxth	r6, r4
 800c856:	00e4      	lsls	r4, r4, #3
 800c858:	1918      	adds	r0, r3, r4
 800c85a:	1c6b      	adds	r3, r5, #1
 800c85c:	d10b      	bne.n	800c876 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x61e>
 800c85e:	4601      	mov	r1, r0
 800c860:	9802      	ldr	r0, [sp, #8]
 800c862:	f7ff fc0d 	bl	800c080 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c866:	4631      	mov	r1, r6
 800c868:	9801      	ldr	r0, [sp, #4]
 800c86a:	f7ff fcb1 	bl	800c1d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c86e:	e509      	b.n	800c284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800c870:	4645      	mov	r5, r8
 800c872:	464c      	mov	r4, r9
 800c874:	e7ed      	b.n	800c852 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 800c876:	9b01      	ldr	r3, [sp, #4]
 800c878:	00ed      	lsls	r5, r5, #3
 800c87a:	1959      	adds	r1, r3, r5
 800c87c:	f7ff fc00 	bl	800c080 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c880:	9b02      	ldr	r3, [sp, #8]
 800c882:	cb03      	ldmia	r3!, {r0, r1}
 800c884:	445d      	add	r5, fp
 800c886:	445c      	add	r4, fp
 800c888:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800c88c:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800c890:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800c894:	9b02      	ldr	r3, [sp, #8]
 800c896:	6861      	ldr	r1, [r4, #4]
 800c898:	c303      	stmia	r3!, {r0, r1}
 800c89a:	e7e4      	b.n	800c866 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60e>

0800c89c <_ZN8touchgfx11Application10invalidateEv>:
 800c89c:	4b09      	ldr	r3, [pc, #36]	; (800c8c4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800c89e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c8a2:	4b09      	ldr	r3, [pc, #36]	; (800c8c8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800c8a4:	b082      	sub	sp, #8
 800c8a6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c8aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c8ae:	2100      	movs	r1, #0
 800c8b0:	9100      	str	r1, [sp, #0]
 800c8b2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c8b6:	ab02      	add	r3, sp, #8
 800c8b8:	e913 0006 	ldmdb	r3, {r1, r2}
 800c8bc:	b002      	add	sp, #8
 800c8be:	f7ff bccb 	b.w	800c258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c8c2:	bf00      	nop
 800c8c4:	2000a4e4 	.word	0x2000a4e4
 800c8c8:	2000a4e6 	.word	0x2000a4e6

0800c8cc <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800c8cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c8d0:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800c8d4:	b09b      	sub	sp, #108	; 0x6c
 800c8d6:	4604      	mov	r4, r0
 800c8d8:	4630      	mov	r0, r6
 800c8da:	f7fc fc54 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c8de:	4605      	mov	r5, r0
 800c8e0:	b940      	cbnz	r0, 800c8f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800c8e2:	e896 0006 	ldmia.w	r6, {r1, r2}
 800c8e6:	4620      	mov	r0, r4
 800c8e8:	f7ff fcb6 	bl	800c258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c8ec:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c8f0:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c8f4:	4bc6      	ldr	r3, [pc, #792]	; (800cc10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 800c8f6:	681b      	ldr	r3, [r3, #0]
 800c8f8:	b33b      	cbz	r3, 800c94a <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800c8fa:	4dc6      	ldr	r5, [pc, #792]	; (800cc14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 800c8fc:	4628      	mov	r0, r5
 800c8fe:	f7fc fc42 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c902:	4606      	mov	r6, r0
 800c904:	bb08      	cbnz	r0, 800c94a <_ZN8touchgfx11Application15drawCachedAreasEv+0x7e>
 800c906:	4628      	mov	r0, r5
 800c908:	f7ff f9c4 	bl	800bc94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800c90c:	6829      	ldr	r1, [r5, #0]
 800c90e:	686a      	ldr	r2, [r5, #4]
 800c910:	4620      	mov	r0, r4
 800c912:	f7ff fca1 	bl	800c258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c916:	802e      	strh	r6, [r5, #0]
 800c918:	806e      	strh	r6, [r5, #2]
 800c91a:	80ae      	strh	r6, [r5, #4]
 800c91c:	80ee      	strh	r6, [r5, #6]
 800c91e:	4dbe      	ldr	r5, [pc, #760]	; (800cc18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800c920:	a809      	add	r0, sp, #36	; 0x24
 800c922:	f7ff fc04 	bl	800c12e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c926:	882f      	ldrh	r7, [r5, #0]
 800c928:	463e      	mov	r6, r7
 800c92a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c92e:	42b3      	cmp	r3, r6
 800c930:	d912      	bls.n	800c958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x8c>
 800c932:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800c936:	a809      	add	r0, sp, #36	; 0x24
 800c938:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800c93c:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800c940:	3601      	adds	r6, #1
 800c942:	f7ff fc67 	bl	800c214 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c946:	b2b6      	uxth	r6, r6
 800c948:	e7ef      	b.n	800c92a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5e>
 800c94a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c94e:	2b00      	cmp	r3, #0
 800c950:	d1e5      	bne.n	800c91e <_ZN8touchgfx11Application15drawCachedAreasEv+0x52>
 800c952:	b01b      	add	sp, #108	; 0x6c
 800c954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c958:	463e      	mov	r6, r7
 800c95a:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800c95e:	42b3      	cmp	r3, r6
 800c960:	d90b      	bls.n	800c97a <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800c962:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800c966:	4620      	mov	r0, r4
 800c968:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800c96c:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800c970:	3601      	adds	r6, #1
 800c972:	f7ff fc71 	bl	800c258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c976:	b2b6      	uxth	r6, r6
 800c978:	e7ef      	b.n	800c95a <_ZN8touchgfx11Application15drawCachedAreasEv+0x8e>
 800c97a:	4ea8      	ldr	r6, [pc, #672]	; (800cc1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800c97c:	6833      	ldr	r3, [r6, #0]
 800c97e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800c982:	2b01      	cmp	r3, #1
 800c984:	f040 80d2 	bne.w	800cb2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x260>
 800c988:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800c98c:	f8b4 c0e8 	ldrh.w	ip, [r4, #232]	; 0xe8
 800c990:	4639      	mov	r1, r7
 800c992:	33aa      	adds	r3, #170	; 0xaa
 800c994:	2700      	movs	r7, #0
 800c996:	458c      	cmp	ip, r1
 800c998:	f103 0308 	add.w	r3, r3, #8
 800c99c:	dd0a      	ble.n	800c9b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe8>
 800c99e:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800c9a2:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800c9a6:	4402      	add	r2, r0
 800c9a8:	b212      	sxth	r2, r2
 800c9aa:	4297      	cmp	r7, r2
 800c9ac:	bfb8      	it	lt
 800c9ae:	4617      	movlt	r7, r2
 800c9b0:	3101      	adds	r1, #1
 800c9b2:	e7f0      	b.n	800c996 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800c9b4:	4b9a      	ldr	r3, [pc, #616]	; (800cc20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800c9b6:	f8b3 9000 	ldrh.w	r9, [r3]
 800c9ba:	2300      	movs	r3, #0
 800c9bc:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800c9c0:	f1b9 0f0f 	cmp.w	r9, #15
 800c9c4:	bf8c      	ite	hi
 800c9c6:	ea4f 09d9 	movhi.w	r9, r9, lsr #3
 800c9ca:	f04f 0901 	movls.w	r9, #1
 800c9ce:	f8bd 801a 	ldrh.w	r8, [sp, #26]
 800c9d2:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800c9d6:	4440      	add	r0, r8
 800c9d8:	fa0f f880 	sxth.w	r8, r0
 800c9dc:	6830      	ldr	r0, [r6, #0]
 800c9de:	4547      	cmp	r7, r8
 800c9e0:	6803      	ldr	r3, [r0, #0]
 800c9e2:	f340 8086 	ble.w	800caf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x226>
 800c9e6:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800c9ea:	4798      	blx	r3
 800c9ec:	eb08 0309 	add.w	r3, r8, r9
 800c9f0:	4298      	cmp	r0, r3
 800c9f2:	da08      	bge.n	800ca06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800c9f4:	4287      	cmp	r7, r0
 800c9f6:	dd06      	ble.n	800ca06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800c9f8:	4580      	cmp	r8, r0
 800c9fa:	dd70      	ble.n	800cade <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800c9fc:	f1b8 0f00 	cmp.w	r8, #0
 800ca00:	dd6d      	ble.n	800cade <_ZN8touchgfx11Application15drawCachedAreasEv+0x212>
 800ca02:	4638      	mov	r0, r7
 800ca04:	e004      	b.n	800ca10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x144>
 800ca06:	4580      	cmp	r8, r0
 800ca08:	dcfb      	bgt.n	800ca02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 800ca0a:	42b8      	cmp	r0, r7
 800ca0c:	bfa8      	it	ge
 800ca0e:	4638      	movge	r0, r7
 800ca10:	4b84      	ldr	r3, [pc, #528]	; (800cc24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800ca12:	f8ad 8016 	strh.w	r8, [sp, #22]
 800ca16:	eba0 0008 	sub.w	r0, r0, r8
 800ca1a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ca1e:	f8b5 8000 	ldrh.w	r8, [r5]
 800ca22:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ca26:	2200      	movs	r2, #0
 800ca28:	f8ad 2014 	strh.w	r2, [sp, #20]
 800ca2c:	f8ad 001a 	strh.w	r0, [sp, #26]
 800ca30:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800ca34:	4543      	cmp	r3, r8
 800ca36:	d9ca      	bls.n	800c9ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800ca38:	eb04 02c8 	add.w	r2, r4, r8, lsl #3
 800ca3c:	ab07      	add	r3, sp, #28
 800ca3e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800ca42:	6851      	ldr	r1, [r2, #4]
 800ca44:	c303      	stmia	r3!, {r0, r1}
 800ca46:	a905      	add	r1, sp, #20
 800ca48:	a807      	add	r0, sp, #28
 800ca4a:	f7ff fa81 	bl	800bf50 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ca4e:	2800      	cmp	r0, #0
 800ca50:	d04c      	beq.n	800caec <_ZN8touchgfx11Application15drawCachedAreasEv+0x220>
 800ca52:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800ca56:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800ca5a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 800ca5e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800ca62:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800ca66:	4686      	mov	lr, r0
 800ca68:	4290      	cmp	r0, r2
 800ca6a:	4450      	add	r0, sl
 800ca6c:	f8bd a018 	ldrh.w	sl, [sp, #24]
 800ca70:	bfb8      	it	lt
 800ca72:	4696      	movlt	lr, r2
 800ca74:	4452      	add	r2, sl
 800ca76:	b280      	uxth	r0, r0
 800ca78:	b292      	uxth	r2, r2
 800ca7a:	4299      	cmp	r1, r3
 800ca7c:	fa0f fb80 	sxth.w	fp, r0
 800ca80:	fa0f fa82 	sxth.w	sl, r2
 800ca84:	468c      	mov	ip, r1
 800ca86:	bfb8      	it	lt
 800ca88:	469c      	movlt	ip, r3
 800ca8a:	45d3      	cmp	fp, sl
 800ca8c:	bfb8      	it	lt
 800ca8e:	4602      	movlt	r2, r0
 800ca90:	eba2 020e 	sub.w	r2, r2, lr
 800ca94:	f8ad 2020 	strh.w	r2, [sp, #32]
 800ca98:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800ca9c:	f8ad e01c 	strh.w	lr, [sp, #28]
 800caa0:	4411      	add	r1, r2
 800caa2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800caa6:	f8ad c01e 	strh.w	ip, [sp, #30]
 800caaa:	4413      	add	r3, r2
 800caac:	b289      	uxth	r1, r1
 800caae:	b29b      	uxth	r3, r3
 800cab0:	b208      	sxth	r0, r1
 800cab2:	b21a      	sxth	r2, r3
 800cab4:	4290      	cmp	r0, r2
 800cab6:	bfb8      	it	lt
 800cab8:	460b      	movlt	r3, r1
 800caba:	eba3 030c 	sub.w	r3, r3, ip
 800cabe:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cac2:	a807      	add	r0, sp, #28
 800cac4:	f7fc fb5f 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cac8:	b920      	cbnz	r0, 800cad4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x208>
 800caca:	6823      	ldr	r3, [r4, #0]
 800cacc:	a907      	add	r1, sp, #28
 800cace:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cad0:	4620      	mov	r0, r4
 800cad2:	4798      	blx	r3
 800cad4:	f108 0801 	add.w	r8, r8, #1
 800cad8:	fa1f f888 	uxth.w	r8, r8
 800cadc:	e7a8      	b.n	800ca30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x164>
 800cade:	6830      	ldr	r0, [r6, #0]
 800cae0:	6803      	ldr	r3, [r0, #0]
 800cae2:	2101      	movs	r1, #1
 800cae4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800cae8:	4798      	blx	r3
 800caea:	e770      	b.n	800c9ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x102>
 800caec:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800caf0:	e7e7      	b.n	800cac2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1f6>
 800caf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800caf4:	4798      	blx	r3
 800caf6:	4b4c      	ldr	r3, [pc, #304]	; (800cc28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800caf8:	781b      	ldrb	r3, [r3, #0]
 800cafa:	2b00      	cmp	r3, #0
 800cafc:	f43f af29 	beq.w	800c952 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800cb00:	2300      	movs	r3, #0
 800cb02:	882d      	ldrh	r5, [r5, #0]
 800cb04:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800cb08:	34ea      	adds	r4, #234	; 0xea
 800cb0a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800cb0e:	42ab      	cmp	r3, r5
 800cb10:	f67f af1f 	bls.w	800c952 <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800cb14:	ab1a      	add	r3, sp, #104	; 0x68
 800cb16:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800cb1a:	3b44      	subs	r3, #68	; 0x44
 800cb1c:	e893 0006 	ldmia.w	r3, {r1, r2}
 800cb20:	4620      	mov	r0, r4
 800cb22:	3501      	adds	r5, #1
 800cb24:	f7ff fb76 	bl	800c214 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800cb28:	b2ad      	uxth	r5, r5
 800cb2a:	e7ee      	b.n	800cb0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800cb2c:	2b02      	cmp	r3, #2
 800cb2e:	f040 8136 	bne.w	800cd9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800cb32:	4b3e      	ldr	r3, [pc, #248]	; (800cc2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800cb34:	781b      	ldrb	r3, [r3, #0]
 800cb36:	2b01      	cmp	r3, #1
 800cb38:	d02c      	beq.n	800cb94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c8>
 800cb3a:	f104 0aa8 	add.w	sl, r4, #168	; 0xa8
 800cb3e:	882a      	ldrh	r2, [r5, #0]
 800cb40:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800cb44:	3201      	adds	r2, #1
 800cb46:	b292      	uxth	r2, r2
 800cb48:	2900      	cmp	r1, #0
 800cb4a:	d0d4      	beq.n	800caf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800cb4c:	f8b4 70aa 	ldrh.w	r7, [r4, #170]	; 0xaa
 800cb50:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800cb54:	441f      	add	r7, r3
 800cb56:	b23f      	sxth	r7, r7
 800cb58:	4610      	mov	r0, r2
 800cb5a:	f04f 0900 	mov.w	r9, #0
 800cb5e:	b283      	uxth	r3, r0
 800cb60:	4299      	cmp	r1, r3
 800cb62:	ea4f 08c9 	mov.w	r8, r9, lsl #3
 800cb66:	f240 80c5 	bls.w	800ccf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x428>
 800cb6a:	44a0      	add	r8, r4
 800cb6c:	eb04 0bc0 	add.w	fp, r4, r0, lsl #3
 800cb70:	f9b8 30aa 	ldrsh.w	r3, [r8, #170]	; 0xaa
 800cb74:	f9bb e0aa 	ldrsh.w	lr, [fp, #170]	; 0xaa
 800cb78:	4573      	cmp	r3, lr
 800cb7a:	4684      	mov	ip, r0
 800cb7c:	f340 80a7 	ble.w	800ccce <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 800cb80:	f8bb 70ae 	ldrh.w	r7, [fp, #174]	; 0xae
 800cb84:	4477      	add	r7, lr
 800cb86:	b23f      	sxth	r7, r7
 800cb88:	429f      	cmp	r7, r3
 800cb8a:	bfa8      	it	ge
 800cb8c:	461f      	movge	r7, r3
 800cb8e:	3001      	adds	r0, #1
 800cb90:	46e1      	mov	r9, ip
 800cb92:	e7e4      	b.n	800cb5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x292>
 800cb94:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800cb98:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800cb9c:	f1bb 0f00 	cmp.w	fp, #0
 800cba0:	d0a9      	beq.n	800caf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800cba2:	882b      	ldrh	r3, [r5, #0]
 800cba4:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800cba8:	3301      	adds	r3, #1
 800cbaa:	b29b      	uxth	r3, r3
 800cbac:	f04f 0800 	mov.w	r8, #0
 800cbb0:	b299      	uxth	r1, r3
 800cbb2:	458b      	cmp	fp, r1
 800cbb4:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800cbb8:	d93a      	bls.n	800cc30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 800cbba:	4427      	add	r7, r4
 800cbbc:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800cbc0:	f8b7 10ac 	ldrh.w	r1, [r7, #172]	; 0xac
 800cbc4:	f8b7 00a8 	ldrh.w	r0, [r7, #168]	; 0xa8
 800cbc8:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800cbcc:	4408      	add	r0, r1
 800cbce:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800cbd2:	4471      	add	r1, lr
 800cbd4:	b200      	sxth	r0, r0
 800cbd6:	b209      	sxth	r1, r1
 800cbd8:	4288      	cmp	r0, r1
 800cbda:	469c      	mov	ip, r3
 800cbdc:	da06      	bge.n	800cbec <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 800cbde:	4586      	cmp	lr, r0
 800cbe0:	4672      	mov	r2, lr
 800cbe2:	bfb8      	it	lt
 800cbe4:	4602      	movlt	r2, r0
 800cbe6:	3301      	adds	r3, #1
 800cbe8:	46e0      	mov	r8, ip
 800cbea:	e7e1      	b.n	800cbb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e4>
 800cbec:	d10b      	bne.n	800cc06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800cbee:	f9b7 c0ae 	ldrsh.w	ip, [r7, #174]	; 0xae
 800cbf2:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800cbf6:	458c      	cmp	ip, r1
 800cbf8:	bfb4      	ite	lt
 800cbfa:	469c      	movlt	ip, r3
 800cbfc:	46c4      	movge	ip, r8
 800cbfe:	4572      	cmp	r2, lr
 800cc00:	bfb8      	it	lt
 800cc02:	4672      	movlt	r2, lr
 800cc04:	e7ef      	b.n	800cbe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800cc06:	428a      	cmp	r2, r1
 800cc08:	bfb8      	it	lt
 800cc0a:	460a      	movlt	r2, r1
 800cc0c:	46c4      	mov	ip, r8
 800cc0e:	e7ea      	b.n	800cbe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800cc10:	2000a528 	.word	0x2000a528
 800cc14:	2000a534 	.word	0x2000a534
 800cc18:	20000060 	.word	0x20000060
 800cc1c:	2000a4f0 	.word	0x2000a4f0
 800cc20:	2000a4e6 	.word	0x2000a4e6
 800cc24:	2000a4e4 	.word	0x2000a4e4
 800cc28:	2000a4ee 	.word	0x2000a4ee
 800cc2c:	2000a4e8 	.word	0x2000a4e8
 800cc30:	19e1      	adds	r1, r4, r7
 800cc32:	ab07      	add	r3, sp, #28
 800cc34:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800cc38:	6849      	ldr	r1, [r1, #4]
 800cc3a:	c303      	stmia	r3!, {r0, r1}
 800cc3c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800cc40:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800cc44:	2b13      	cmp	r3, #19
 800cc46:	bfd8      	it	le
 800cc48:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800cc4c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800cc50:	440b      	add	r3, r1
 800cc52:	1a9b      	subs	r3, r3, r2
 800cc54:	a807      	add	r0, sp, #28
 800cc56:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cc5a:	f7ff f835 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800cc5e:	a807      	add	r0, sp, #28
 800cc60:	f7fc fa91 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cc64:	2800      	cmp	r0, #0
 800cc66:	d197      	bne.n	800cb98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800cc68:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800cc6c:	6830      	ldr	r0, [r6, #0]
 800cc6e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800cc72:	f8d0 e000 	ldr.w	lr, [r0]
 800cc76:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800cc7a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800cc7e:	f1bc 0f14 	cmp.w	ip, #20
 800cc82:	bfa8      	it	ge
 800cc84:	f04f 0c14 	movge.w	ip, #20
 800cc88:	fa1f fc8c 	uxth.w	ip, ip
 800cc8c:	f8cd c000 	str.w	ip, [sp]
 800cc90:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800cc94:	47d0      	blx	sl
 800cc96:	4682      	mov	sl, r0
 800cc98:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800cc9c:	a807      	add	r0, sp, #28
 800cc9e:	f7fe fff9 	bl	800bc94 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800cca2:	6823      	ldr	r3, [r4, #0]
 800cca4:	4427      	add	r7, r4
 800cca6:	4620      	mov	r0, r4
 800cca8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ccaa:	a907      	add	r1, sp, #28
 800ccac:	4798      	blx	r3
 800ccae:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	; 0xac
 800ccb2:	eba0 000a 	sub.w	r0, r0, sl
 800ccb6:	b200      	sxth	r0, r0
 800ccb8:	f8a7 00ac 	strh.w	r0, [r7, #172]	; 0xac
 800ccbc:	2800      	cmp	r0, #0
 800ccbe:	f47f af6b 	bne.w	800cb98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800ccc2:	fa1f f188 	uxth.w	r1, r8
 800ccc6:	4648      	mov	r0, r9
 800ccc8:	f7ff fa82 	bl	800c1d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cccc:	e764      	b.n	800cb98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2cc>
 800ccce:	d10c      	bne.n	800ccea <_ZN8touchgfx11Application15drawCachedAreasEv+0x41e>
 800ccd0:	f9b8 e0ac 	ldrsh.w	lr, [r8, #172]	; 0xac
 800ccd4:	f9bb c0ac 	ldrsh.w	ip, [fp, #172]	; 0xac
 800ccd8:	45e6      	cmp	lr, ip
 800ccda:	bfb4      	ite	lt
 800ccdc:	4684      	movlt	ip, r0
 800ccde:	46cc      	movge	ip, r9
 800cce0:	f8bb e0ae 	ldrh.w	lr, [fp, #174]	; 0xae
 800cce4:	4473      	add	r3, lr
 800cce6:	b21b      	sxth	r3, r3
 800cce8:	e74e      	b.n	800cb88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2bc>
 800ccea:	4577      	cmp	r7, lr
 800ccec:	bfa8      	it	ge
 800ccee:	4677      	movge	r7, lr
 800ccf0:	46cc      	mov	ip, r9
 800ccf2:	e74c      	b.n	800cb8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c2>
 800ccf4:	eb0a 0008 	add.w	r0, sl, r8
 800ccf8:	44a0      	add	r8, r4
 800ccfa:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800ccfe:	f9b8 b0ae 	ldrsh.w	fp, [r8, #174]	; 0xae
 800cd02:	f1bb 0f13 	cmp.w	fp, #19
 800cd06:	bfde      	ittt	le
 800cd08:	f8b8 70aa 	ldrhle.w	r7, [r8, #170]	; 0xaa
 800cd0c:	445f      	addle	r7, fp
 800cd0e:	b23f      	sxthle	r7, r7
 800cd10:	f7fc fa39 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cd14:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800cd18:	2800      	cmp	r0, #0
 800cd1a:	f47f af15 	bne.w	800cb48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27c>
 800cd1e:	f9b8 20aa 	ldrsh.w	r2, [r8, #170]	; 0xaa
 800cd22:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800cd26:	1abf      	subs	r7, r7, r2
 800cd28:	2f14      	cmp	r7, #20
 800cd2a:	f9b8 10a8 	ldrsh.w	r1, [r8, #168]	; 0xa8
 800cd2e:	f9b8 30ac 	ldrsh.w	r3, [r8, #172]	; 0xac
 800cd32:	6830      	ldr	r0, [r6, #0]
 800cd34:	f8ad 101c 	strh.w	r1, [sp, #28]
 800cd38:	f8ad 201e 	strh.w	r2, [sp, #30]
 800cd3c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cd40:	bfa8      	it	ge
 800cd42:	2714      	movge	r7, #20
 800cd44:	f8d0 c000 	ldr.w	ip, [r0]
 800cd48:	b2bf      	uxth	r7, r7
 800cd4a:	fa1f fb8b 	uxth.w	fp, fp
 800cd4e:	455f      	cmp	r7, fp
 800cd50:	bf94      	ite	ls
 800cd52:	9700      	strls	r7, [sp, #0]
 800cd54:	f8cd b000 	strhi.w	fp, [sp]
 800cd58:	b292      	uxth	r2, r2
 800cd5a:	f8dc 7090 	ldr.w	r7, [ip, #144]	; 0x90
 800cd5e:	b29b      	uxth	r3, r3
 800cd60:	b289      	uxth	r1, r1
 800cd62:	47b8      	blx	r7
 800cd64:	6823      	ldr	r3, [r4, #0]
 800cd66:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800cd6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cd6c:	a907      	add	r1, sp, #28
 800cd6e:	4620      	mov	r0, r4
 800cd70:	4798      	blx	r3
 800cd72:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800cd76:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800cd7a:	f8b8 20aa 	ldrh.w	r2, [r8, #170]	; 0xaa
 800cd7e:	1a5b      	subs	r3, r3, r1
 800cd80:	440a      	add	r2, r1
 800cd82:	b21b      	sxth	r3, r3
 800cd84:	f8a8 20aa 	strh.w	r2, [r8, #170]	; 0xaa
 800cd88:	f8a8 30ae 	strh.w	r3, [r8, #174]	; 0xae
 800cd8c:	2b00      	cmp	r3, #0
 800cd8e:	f47f aed6 	bne.w	800cb3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800cd92:	fa1f f189 	uxth.w	r1, r9
 800cd96:	4650      	mov	r0, sl
 800cd98:	f7ff fa1a 	bl	800c1d0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cd9c:	e6cf      	b.n	800cb3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x272>
 800cd9e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800cda2:	42bb      	cmp	r3, r7
 800cda4:	f67f aea7 	bls.w	800caf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800cda8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800cdac:	ab07      	add	r3, sp, #28
 800cdae:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800cdb2:	6851      	ldr	r1, [r2, #4]
 800cdb4:	c303      	stmia	r3!, {r0, r1}
 800cdb6:	a807      	add	r0, sp, #28
 800cdb8:	f7fc f9e5 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cdbc:	b920      	cbnz	r0, 800cdc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fc>
 800cdbe:	6823      	ldr	r3, [r4, #0]
 800cdc0:	a907      	add	r1, sp, #28
 800cdc2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cdc4:	4620      	mov	r0, r4
 800cdc6:	4798      	blx	r3
 800cdc8:	3701      	adds	r7, #1
 800cdca:	b2bf      	uxth	r7, r7
 800cdcc:	e7e7      	b.n	800cd9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x4d2>
 800cdce:	bf00      	nop

0800cdd0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800cdd0:	4b03      	ldr	r3, [pc, #12]	; (800cde0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800cdd2:	2200      	movs	r2, #0
 800cdd4:	801a      	strh	r2, [r3, #0]
 800cdd6:	805a      	strh	r2, [r3, #2]
 800cdd8:	809a      	strh	r2, [r3, #4]
 800cdda:	80da      	strh	r2, [r3, #6]
 800cddc:	4770      	bx	lr
 800cdde:	bf00      	nop
 800cde0:	2000a534 	.word	0x2000a534

0800cde4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800cde4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cde8:	4606      	mov	r6, r0
 800cdea:	b09d      	sub	sp, #116	; 0x74
 800cdec:	a803      	add	r0, sp, #12
 800cdee:	4614      	mov	r4, r2
 800cdf0:	468a      	mov	sl, r1
 800cdf2:	461d      	mov	r5, r3
 800cdf4:	f000 fd6a 	bl	800d8cc <_ZN8touchgfx12TextProviderC1Ev>
 800cdf8:	6833      	ldr	r3, [r6, #0]
 800cdfa:	4630      	mov	r0, r6
 800cdfc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cdfe:	4798      	blx	r3
 800ce00:	6833      	ldr	r3, [r6, #0]
 800ce02:	4607      	mov	r7, r0
 800ce04:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ce06:	4630      	mov	r0, r6
 800ce08:	4798      	blx	r3
 800ce0a:	462a      	mov	r2, r5
 800ce0c:	9000      	str	r0, [sp, #0]
 800ce0e:	4621      	mov	r1, r4
 800ce10:	463b      	mov	r3, r7
 800ce12:	a803      	add	r0, sp, #12
 800ce14:	f000 fdad 	bl	800d972 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ce18:	2500      	movs	r5, #0
 800ce1a:	462c      	mov	r4, r5
 800ce1c:	46a9      	mov	r9, r5
 800ce1e:	46a8      	mov	r8, r5
 800ce20:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800ce24:	2300      	movs	r3, #0
 800ce26:	9302      	str	r3, [sp, #8]
 800ce28:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ce2c:	429c      	cmp	r4, r3
 800ce2e:	d002      	beq.n	800ce36 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800ce30:	455c      	cmp	r4, fp
 800ce32:	bf18      	it	ne
 800ce34:	4625      	movne	r5, r4
 800ce36:	ab02      	add	r3, sp, #8
 800ce38:	4632      	mov	r2, r6
 800ce3a:	4651      	mov	r1, sl
 800ce3c:	a803      	add	r0, sp, #12
 800ce3e:	f001 f897 	bl	800df70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ce42:	4604      	mov	r4, r0
 800ce44:	b108      	cbz	r0, 800ce4a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800ce46:	280a      	cmp	r0, #10
 800ce48:	d10a      	bne.n	800ce60 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800ce4a:	45c1      	cmp	r9, r8
 800ce4c:	bf38      	it	cc
 800ce4e:	46c1      	movcc	r9, r8
 800ce50:	f04f 0800 	mov.w	r8, #0
 800ce54:	2c00      	cmp	r4, #0
 800ce56:	d1e5      	bne.n	800ce24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ce58:	4648      	mov	r0, r9
 800ce5a:	b01d      	add	sp, #116	; 0x74
 800ce5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce60:	9a02      	ldr	r2, [sp, #8]
 800ce62:	2a00      	cmp	r2, #0
 800ce64:	d0de      	beq.n	800ce24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800ce66:	7b57      	ldrb	r7, [r2, #13]
 800ce68:	6833      	ldr	r3, [r6, #0]
 800ce6a:	8894      	ldrh	r4, [r2, #4]
 800ce6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ce6e:	007f      	lsls	r7, r7, #1
 800ce70:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800ce74:	7a97      	ldrb	r7, [r2, #10]
 800ce76:	4629      	mov	r1, r5
 800ce78:	4307      	orrs	r7, r0
 800ce7a:	4630      	mov	r0, r6
 800ce7c:	4798      	blx	r3
 800ce7e:	4438      	add	r0, r7
 800ce80:	4480      	add	r8, r0
 800ce82:	fa1f f888 	uxth.w	r8, r8
 800ce86:	e7e5      	b.n	800ce54 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800ce88 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ce88:	b508      	push	{r3, lr}
 800ce8a:	6803      	ldr	r3, [r0, #0]
 800ce8c:	68db      	ldr	r3, [r3, #12]
 800ce8e:	4798      	blx	r3
 800ce90:	b128      	cbz	r0, 800ce9e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ce92:	7b43      	ldrb	r3, [r0, #13]
 800ce94:	7a80      	ldrb	r0, [r0, #10]
 800ce96:	005b      	lsls	r3, r3, #1
 800ce98:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ce9c:	4318      	orrs	r0, r3
 800ce9e:	bd08      	pop	{r3, pc}

0800cea0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800cea0:	b40e      	push	{r1, r2, r3}
 800cea2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cea4:	b09e      	sub	sp, #120	; 0x78
 800cea6:	ab23      	add	r3, sp, #140	; 0x8c
 800cea8:	4605      	mov	r5, r0
 800ceaa:	f853 4b04 	ldr.w	r4, [r3], #4
 800ceae:	9303      	str	r3, [sp, #12]
 800ceb0:	a805      	add	r0, sp, #20
 800ceb2:	f000 fd0b 	bl	800d8cc <_ZN8touchgfx12TextProviderC1Ev>
 800ceb6:	682b      	ldr	r3, [r5, #0]
 800ceb8:	4628      	mov	r0, r5
 800ceba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cebc:	4798      	blx	r3
 800cebe:	682b      	ldr	r3, [r5, #0]
 800cec0:	4606      	mov	r6, r0
 800cec2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cec4:	4628      	mov	r0, r5
 800cec6:	4798      	blx	r3
 800cec8:	4633      	mov	r3, r6
 800ceca:	ae1e      	add	r6, sp, #120	; 0x78
 800cecc:	4621      	mov	r1, r4
 800cece:	9000      	str	r0, [sp, #0]
 800ced0:	9a03      	ldr	r2, [sp, #12]
 800ced2:	2400      	movs	r4, #0
 800ced4:	a805      	add	r0, sp, #20
 800ced6:	f000 fd4c 	bl	800d972 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ceda:	f846 4d68 	str.w	r4, [r6, #-104]!
 800cede:	462a      	mov	r2, r5
 800cee0:	4633      	mov	r3, r6
 800cee2:	4621      	mov	r1, r4
 800cee4:	a805      	add	r0, sp, #20
 800cee6:	f001 f843 	bl	800df70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ceea:	b1f0      	cbz	r0, 800cf2a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800ceec:	280a      	cmp	r0, #10
 800ceee:	d018      	beq.n	800cf22 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800cef0:	9f04      	ldr	r7, [sp, #16]
 800cef2:	b1b7      	cbz	r7, 800cf22 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800cef4:	7b78      	ldrb	r0, [r7, #13]
 800cef6:	7a3b      	ldrb	r3, [r7, #8]
 800cef8:	88aa      	ldrh	r2, [r5, #4]
 800cefa:	00c1      	lsls	r1, r0, #3
 800cefc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800cf00:	4319      	orrs	r1, r3
 800cf02:	0643      	lsls	r3, r0, #25
 800cf04:	bf44      	itt	mi
 800cf06:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800cf0a:	b219      	sxthmi	r1, r3
 800cf0c:	0100      	lsls	r0, r0, #4
 800cf0e:	79fb      	ldrb	r3, [r7, #7]
 800cf10:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800cf14:	4303      	orrs	r3, r0
 800cf16:	4413      	add	r3, r2
 800cf18:	1a5b      	subs	r3, r3, r1
 800cf1a:	b29b      	uxth	r3, r3
 800cf1c:	42a3      	cmp	r3, r4
 800cf1e:	bfc8      	it	gt
 800cf20:	b21c      	sxthgt	r4, r3
 800cf22:	4633      	mov	r3, r6
 800cf24:	462a      	mov	r2, r5
 800cf26:	2100      	movs	r1, #0
 800cf28:	e7dc      	b.n	800cee4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800cf2a:	b2a0      	uxth	r0, r4
 800cf2c:	b01e      	add	sp, #120	; 0x78
 800cf2e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800cf32:	b003      	add	sp, #12
 800cf34:	4770      	bx	lr

0800cf36 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800cf36:	b40e      	push	{r1, r2, r3}
 800cf38:	b570      	push	{r4, r5, r6, lr}
 800cf3a:	b09d      	sub	sp, #116	; 0x74
 800cf3c:	ab21      	add	r3, sp, #132	; 0x84
 800cf3e:	4604      	mov	r4, r0
 800cf40:	f853 5b04 	ldr.w	r5, [r3], #4
 800cf44:	9302      	str	r3, [sp, #8]
 800cf46:	a803      	add	r0, sp, #12
 800cf48:	f000 fcc0 	bl	800d8cc <_ZN8touchgfx12TextProviderC1Ev>
 800cf4c:	6823      	ldr	r3, [r4, #0]
 800cf4e:	4620      	mov	r0, r4
 800cf50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cf52:	4798      	blx	r3
 800cf54:	6823      	ldr	r3, [r4, #0]
 800cf56:	4606      	mov	r6, r0
 800cf58:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cf5a:	4620      	mov	r0, r4
 800cf5c:	4798      	blx	r3
 800cf5e:	4633      	mov	r3, r6
 800cf60:	9000      	str	r0, [sp, #0]
 800cf62:	9a02      	ldr	r2, [sp, #8]
 800cf64:	4629      	mov	r1, r5
 800cf66:	a803      	add	r0, sp, #12
 800cf68:	f000 fd03 	bl	800d972 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800cf6c:	a803      	add	r0, sp, #12
 800cf6e:	f001 f8f9 	bl	800e164 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800cf72:	2401      	movs	r4, #1
 800cf74:	b2a3      	uxth	r3, r4
 800cf76:	b140      	cbz	r0, 800cf8a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800cf78:	280a      	cmp	r0, #10
 800cf7a:	bf08      	it	eq
 800cf7c:	3301      	addeq	r3, #1
 800cf7e:	a803      	add	r0, sp, #12
 800cf80:	bf08      	it	eq
 800cf82:	b21c      	sxtheq	r4, r3
 800cf84:	f001 f8ee 	bl	800e164 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800cf88:	e7f4      	b.n	800cf74 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800cf8a:	4618      	mov	r0, r3
 800cf8c:	b01d      	add	sp, #116	; 0x74
 800cf8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cf92:	b003      	add	sp, #12
 800cf94:	4770      	bx	lr

0800cf96 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800cf96:	b40e      	push	{r1, r2, r3}
 800cf98:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf9a:	b09e      	sub	sp, #120	; 0x78
 800cf9c:	ab23      	add	r3, sp, #140	; 0x8c
 800cf9e:	4604      	mov	r4, r0
 800cfa0:	f853 5b04 	ldr.w	r5, [r3], #4
 800cfa4:	9303      	str	r3, [sp, #12]
 800cfa6:	a805      	add	r0, sp, #20
 800cfa8:	f000 fc90 	bl	800d8cc <_ZN8touchgfx12TextProviderC1Ev>
 800cfac:	6823      	ldr	r3, [r4, #0]
 800cfae:	4620      	mov	r0, r4
 800cfb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cfb2:	4798      	blx	r3
 800cfb4:	6823      	ldr	r3, [r4, #0]
 800cfb6:	4606      	mov	r6, r0
 800cfb8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cfba:	4620      	mov	r0, r4
 800cfbc:	4798      	blx	r3
 800cfbe:	4633      	mov	r3, r6
 800cfc0:	4629      	mov	r1, r5
 800cfc2:	9000      	str	r0, [sp, #0]
 800cfc4:	9a03      	ldr	r2, [sp, #12]
 800cfc6:	a805      	add	r0, sp, #20
 800cfc8:	ad1e      	add	r5, sp, #120	; 0x78
 800cfca:	f000 fcd2 	bl	800d972 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800cfce:	2100      	movs	r1, #0
 800cfd0:	f845 1d68 	str.w	r1, [r5, #-104]!
 800cfd4:	4622      	mov	r2, r4
 800cfd6:	462b      	mov	r3, r5
 800cfd8:	a805      	add	r0, sp, #20
 800cfda:	f000 ffc9 	bl	800df70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800cfde:	26ff      	movs	r6, #255	; 0xff
 800cfe0:	b1d8      	cbz	r0, 800d01a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800cfe2:	280a      	cmp	r0, #10
 800cfe4:	d012      	beq.n	800d00c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800cfe6:	9804      	ldr	r0, [sp, #16]
 800cfe8:	b180      	cbz	r0, 800d00c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800cfea:	7b47      	ldrb	r7, [r0, #13]
 800cfec:	7922      	ldrb	r2, [r4, #4]
 800cfee:	00fb      	lsls	r3, r7, #3
 800cff0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800cff4:	7a03      	ldrb	r3, [r0, #8]
 800cff6:	430b      	orrs	r3, r1
 800cff8:	0679      	lsls	r1, r7, #25
 800cffa:	bf44      	itt	mi
 800cffc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d000:	b21b      	sxthmi	r3, r3
 800d002:	1ad3      	subs	r3, r2, r3
 800d004:	b2db      	uxtb	r3, r3
 800d006:	429e      	cmp	r6, r3
 800d008:	bf28      	it	cs
 800d00a:	461e      	movcs	r6, r3
 800d00c:	462b      	mov	r3, r5
 800d00e:	4622      	mov	r2, r4
 800d010:	2100      	movs	r1, #0
 800d012:	a805      	add	r0, sp, #20
 800d014:	f000 ffac 	bl	800df70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d018:	e7e2      	b.n	800cfe0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800d01a:	4630      	mov	r0, r6
 800d01c:	b01e      	add	sp, #120	; 0x78
 800d01e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d022:	b003      	add	sp, #12
 800d024:	4770      	bx	lr

0800d026 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d026:	b513      	push	{r0, r1, r4, lr}
 800d028:	6803      	ldr	r3, [r0, #0]
 800d02a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800d02e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d032:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d036:	2400      	movs	r4, #0
 800d038:	9400      	str	r4, [sp, #0]
 800d03a:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d03e:	691b      	ldr	r3, [r3, #16]
 800d040:	4669      	mov	r1, sp
 800d042:	4798      	blx	r3
 800d044:	b002      	add	sp, #8
 800d046:	bd10      	pop	{r4, pc}

0800d048 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d048:	b538      	push	{r3, r4, r5, lr}
 800d04a:	680b      	ldr	r3, [r1, #0]
 800d04c:	460c      	mov	r4, r1
 800d04e:	68db      	ldr	r3, [r3, #12]
 800d050:	4605      	mov	r5, r0
 800d052:	4798      	blx	r3
 800d054:	6823      	ldr	r3, [r4, #0]
 800d056:	4620      	mov	r0, r4
 800d058:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d05a:	4629      	mov	r1, r5
 800d05c:	4798      	blx	r3
 800d05e:	4628      	mov	r0, r5
 800d060:	bd38      	pop	{r3, r4, r5, pc}

0800d062 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d062:	b410      	push	{r4}
 800d064:	880a      	ldrh	r2, [r1, #0]
 800d066:	8884      	ldrh	r4, [r0, #4]
 800d068:	4422      	add	r2, r4
 800d06a:	800a      	strh	r2, [r1, #0]
 800d06c:	88c4      	ldrh	r4, [r0, #6]
 800d06e:	884a      	ldrh	r2, [r1, #2]
 800d070:	4422      	add	r2, r4
 800d072:	804a      	strh	r2, [r1, #2]
 800d074:	6940      	ldr	r0, [r0, #20]
 800d076:	b120      	cbz	r0, 800d082 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d078:	6803      	ldr	r3, [r0, #0]
 800d07a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d07e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d080:	4718      	bx	r3
 800d082:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d086:	4770      	bx	lr

0800d088 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800d088:	b570      	push	{r4, r5, r6, lr}
 800d08a:	8882      	ldrh	r2, [r0, #4]
 800d08c:	880b      	ldrh	r3, [r1, #0]
 800d08e:	4413      	add	r3, r2
 800d090:	800b      	strh	r3, [r1, #0]
 800d092:	88c2      	ldrh	r2, [r0, #6]
 800d094:	884b      	ldrh	r3, [r1, #2]
 800d096:	460c      	mov	r4, r1
 800d098:	4413      	add	r3, r2
 800d09a:	804b      	strh	r3, [r1, #2]
 800d09c:	4605      	mov	r5, r0
 800d09e:	1d01      	adds	r1, r0, #4
 800d0a0:	4620      	mov	r0, r4
 800d0a2:	f7fc f82d 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 800d0a6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d0aa:	2b00      	cmp	r3, #0
 800d0ac:	dd0b      	ble.n	800d0c6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d0ae:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d0b2:	2b00      	cmp	r3, #0
 800d0b4:	dd07      	ble.n	800d0c6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d0b6:	6968      	ldr	r0, [r5, #20]
 800d0b8:	b128      	cbz	r0, 800d0c6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800d0ba:	6803      	ldr	r3, [r0, #0]
 800d0bc:	4621      	mov	r1, r4
 800d0be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d0c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0c4:	4718      	bx	r3
 800d0c6:	bd70      	pop	{r4, r5, r6, pc}

0800d0c8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800d0c8:	b570      	push	{r4, r5, r6, lr}
 800d0ca:	8882      	ldrh	r2, [r0, #4]
 800d0cc:	880b      	ldrh	r3, [r1, #0]
 800d0ce:	4413      	add	r3, r2
 800d0d0:	800b      	strh	r3, [r1, #0]
 800d0d2:	88c2      	ldrh	r2, [r0, #6]
 800d0d4:	884b      	ldrh	r3, [r1, #2]
 800d0d6:	460c      	mov	r4, r1
 800d0d8:	4413      	add	r3, r2
 800d0da:	804b      	strh	r3, [r1, #2]
 800d0dc:	4605      	mov	r5, r0
 800d0de:	1d01      	adds	r1, r0, #4
 800d0e0:	4620      	mov	r0, r4
 800d0e2:	f7fc f80d 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 800d0e6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d0ea:	2b00      	cmp	r3, #0
 800d0ec:	dd18      	ble.n	800d120 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800d0ee:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d0f2:	2b00      	cmp	r3, #0
 800d0f4:	dd14      	ble.n	800d120 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800d0f6:	6968      	ldr	r0, [r5, #20]
 800d0f8:	b128      	cbz	r0, 800d106 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800d0fa:	6803      	ldr	r3, [r0, #0]
 800d0fc:	4621      	mov	r1, r4
 800d0fe:	691b      	ldr	r3, [r3, #16]
 800d100:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d104:	4718      	bx	r3
 800d106:	4b07      	ldr	r3, [pc, #28]	; (800d124 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800d108:	681b      	ldr	r3, [r3, #0]
 800d10a:	3304      	adds	r3, #4
 800d10c:	429d      	cmp	r5, r3
 800d10e:	d107      	bne.n	800d120 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800d110:	f7fe fffc 	bl	800c10c <_ZN8touchgfx11Application11getInstanceEv>
 800d114:	6821      	ldr	r1, [r4, #0]
 800d116:	6862      	ldr	r2, [r4, #4]
 800d118:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d11c:	f7ff b89c 	b.w	800c258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d120:	bd70      	pop	{r4, r5, r6, pc}
 800d122:	bf00      	nop
 800d124:	2000a52c 	.word	0x2000a52c

0800d128 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800d128:	b570      	push	{r4, r5, r6, lr}
 800d12a:	4604      	mov	r4, r0
 800d12c:	4616      	mov	r6, r2
 800d12e:	460d      	mov	r5, r1
 800d130:	b901      	cbnz	r1, 800d134 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800d132:	b192      	cbz	r2, 800d15a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800d134:	6823      	ldr	r3, [r4, #0]
 800d136:	4620      	mov	r0, r4
 800d138:	699b      	ldr	r3, [r3, #24]
 800d13a:	4798      	blx	r3
 800d13c:	88e2      	ldrh	r2, [r4, #6]
 800d13e:	88a1      	ldrh	r1, [r4, #4]
 800d140:	4432      	add	r2, r6
 800d142:	4429      	add	r1, r5
 800d144:	4620      	mov	r0, r4
 800d146:	b212      	sxth	r2, r2
 800d148:	b209      	sxth	r1, r1
 800d14a:	f7f5 f9b6 	bl	80024ba <_ZN8touchgfx8Drawable5setXYEss>
 800d14e:	6823      	ldr	r3, [r4, #0]
 800d150:	4620      	mov	r0, r4
 800d152:	699b      	ldr	r3, [r3, #24]
 800d154:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d158:	4718      	bx	r3
 800d15a:	bd70      	pop	{r4, r5, r6, pc}

0800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800d15c:	b510      	push	{r4, lr}
 800d15e:	4604      	mov	r4, r0
 800d160:	4608      	mov	r0, r1
 800d162:	2300      	movs	r3, #0
 800d164:	8023      	strh	r3, [r4, #0]
 800d166:	8063      	strh	r3, [r4, #2]
 800d168:	6803      	ldr	r3, [r0, #0]
 800d16a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d16e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800d172:	80a1      	strh	r1, [r4, #4]
 800d174:	80e2      	strh	r2, [r4, #6]
 800d176:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d178:	4621      	mov	r1, r4
 800d17a:	4798      	blx	r3
 800d17c:	4620      	mov	r0, r4
 800d17e:	bd10      	pop	{r4, pc}

0800d180 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800d180:	b530      	push	{r4, r5, lr}
 800d182:	8083      	strh	r3, [r0, #4]
 800d184:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800d188:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800d18c:	7183      	strb	r3, [r0, #6]
 800d18e:	79c3      	ldrb	r3, [r0, #7]
 800d190:	6101      	str	r1, [r0, #16]
 800d192:	f365 0306 	bfi	r3, r5, #0, #7
 800d196:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800d19a:	8282      	strh	r2, [r0, #20]
 800d19c:	f365 13c7 	bfi	r3, r5, #7, #1
 800d1a0:	71c3      	strb	r3, [r0, #7]
 800d1a2:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800d1a6:	7203      	strb	r3, [r0, #8]
 800d1a8:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800d1ac:	7243      	strb	r3, [r0, #9]
 800d1ae:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d1b2:	8143      	strh	r3, [r0, #10]
 800d1b4:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800d1b8:	8183      	strh	r3, [r0, #12]
 800d1ba:	4b01      	ldr	r3, [pc, #4]	; (800d1c0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800d1bc:	6003      	str	r3, [r0, #0]
 800d1be:	bd30      	pop	{r4, r5, pc}
 800d1c0:	0801dec0 	.word	0x0801dec0

0800d1c4 <_ZNK8touchgfx9ConstFont4findEt>:
 800d1c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d1c6:	6904      	ldr	r4, [r0, #16]
 800d1c8:	b3bc      	cbz	r4, 800d23a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d1ca:	88a3      	ldrh	r3, [r4, #4]
 800d1cc:	8a82      	ldrh	r2, [r0, #20]
 800d1ce:	1acb      	subs	r3, r1, r3
 800d1d0:	f102 32ff 	add.w	r2, r2, #4294967295
 800d1d4:	d431      	bmi.n	800d23a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d1d6:	4293      	cmp	r3, r2
 800d1d8:	dd0c      	ble.n	800d1f4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800d1da:	230e      	movs	r3, #14
 800d1dc:	fb03 4302 	mla	r3, r3, r2, r4
 800d1e0:	889b      	ldrh	r3, [r3, #4]
 800d1e2:	1a5b      	subs	r3, r3, r1
 800d1e4:	1ad3      	subs	r3, r2, r3
 800d1e6:	429a      	cmp	r2, r3
 800d1e8:	db27      	blt.n	800d23a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d1ea:	2b00      	cmp	r3, #0
 800d1ec:	bfbc      	itt	lt
 800d1ee:	2302      	movlt	r3, #2
 800d1f0:	fb92 f3f3 	sdivlt	r3, r2, r3
 800d1f4:	2500      	movs	r5, #0
 800d1f6:	260e      	movs	r6, #14
 800d1f8:	4295      	cmp	r5, r2
 800d1fa:	dc1e      	bgt.n	800d23a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d1fc:	fb06 4003 	mla	r0, r6, r3, r4
 800d200:	8887      	ldrh	r7, [r0, #4]
 800d202:	42b9      	cmp	r1, r7
 800d204:	d01a      	beq.n	800d23c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800d206:	d20d      	bcs.n	800d224 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800d208:	1e5a      	subs	r2, r3, #1
 800d20a:	4295      	cmp	r5, r2
 800d20c:	dc15      	bgt.n	800d23a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d20e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800d212:	1a5b      	subs	r3, r3, r1
 800d214:	1ad3      	subs	r3, r2, r3
 800d216:	429a      	cmp	r2, r3
 800d218:	db0f      	blt.n	800d23a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d21a:	429d      	cmp	r5, r3
 800d21c:	ddec      	ble.n	800d1f8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d21e:	1953      	adds	r3, r2, r5
 800d220:	105b      	asrs	r3, r3, #1
 800d222:	e7e9      	b.n	800d1f8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d224:	1c5d      	adds	r5, r3, #1
 800d226:	42aa      	cmp	r2, r5
 800d228:	db07      	blt.n	800d23a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d22a:	8a43      	ldrh	r3, [r0, #18]
 800d22c:	1acb      	subs	r3, r1, r3
 800d22e:	442b      	add	r3, r5
 800d230:	429d      	cmp	r5, r3
 800d232:	dc02      	bgt.n	800d23a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800d234:	429a      	cmp	r2, r3
 800d236:	dadf      	bge.n	800d1f8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800d238:	e7f1      	b.n	800d21e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800d23a:	2000      	movs	r0, #0
 800d23c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d23e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800d23e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d240:	4604      	mov	r4, r0
 800d242:	4617      	mov	r7, r2
 800d244:	461e      	mov	r6, r3
 800d246:	b911      	cbnz	r1, 800d24e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800d248:	2500      	movs	r5, #0
 800d24a:	4628      	mov	r0, r5
 800d24c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d24e:	290a      	cmp	r1, #10
 800d250:	d0fa      	beq.n	800d248 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d252:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800d256:	4291      	cmp	r1, r2
 800d258:	d0f6      	beq.n	800d248 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d25a:	f242 020b 	movw	r2, #8203	; 0x200b
 800d25e:	4291      	cmp	r1, r2
 800d260:	d0f2      	beq.n	800d248 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d262:	f7ff ffaf 	bl	800d1c4 <_ZNK8touchgfx9ConstFont4findEt>
 800d266:	4605      	mov	r5, r0
 800d268:	b950      	cbnz	r0, 800d280 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800d26a:	6823      	ldr	r3, [r4, #0]
 800d26c:	4620      	mov	r0, r4
 800d26e:	691b      	ldr	r3, [r3, #16]
 800d270:	4798      	blx	r3
 800d272:	4601      	mov	r1, r0
 800d274:	4620      	mov	r0, r4
 800d276:	f7ff ffa5 	bl	800d1c4 <_ZNK8touchgfx9ConstFont4findEt>
 800d27a:	4605      	mov	r5, r0
 800d27c:	2800      	cmp	r0, #0
 800d27e:	d0e3      	beq.n	800d248 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800d280:	6823      	ldr	r3, [r4, #0]
 800d282:	4629      	mov	r1, r5
 800d284:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d286:	4620      	mov	r0, r4
 800d288:	4798      	blx	r3
 800d28a:	6038      	str	r0, [r7, #0]
 800d28c:	6823      	ldr	r3, [r4, #0]
 800d28e:	4620      	mov	r0, r4
 800d290:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d292:	4798      	blx	r3
 800d294:	7030      	strb	r0, [r6, #0]
 800d296:	e7d8      	b.n	800d24a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800d298 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800d298:	2000      	movs	r0, #0
 800d29a:	4770      	bx	lr

0800d29c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800d29c:	2001      	movs	r0, #1
 800d29e:	4770      	bx	lr

0800d2a0 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800d2a0:	2002      	movs	r0, #2
 800d2a2:	4770      	bx	lr

0800d2a4 <_ZN8touchgfx6ScreenD1Ev>:
 800d2a4:	4770      	bx	lr

0800d2a6 <_ZN8touchgfx12GestureEventD1Ev>:
 800d2a6:	4770      	bx	lr

0800d2a8 <_ZN8touchgfx9DragEventD1Ev>:
 800d2a8:	4770      	bx	lr

0800d2aa <_ZN8touchgfx10ClickEventD1Ev>:
 800d2aa:	4770      	bx	lr

0800d2ac <_ZN8touchgfx10ClickEventD0Ev>:
 800d2ac:	b510      	push	{r4, lr}
 800d2ae:	210c      	movs	r1, #12
 800d2b0:	4604      	mov	r4, r0
 800d2b2:	f00d fcc3 	bl	801ac3c <_ZdlPvj>
 800d2b6:	4620      	mov	r0, r4
 800d2b8:	bd10      	pop	{r4, pc}

0800d2ba <_ZN8touchgfx9DragEventD0Ev>:
 800d2ba:	b510      	push	{r4, lr}
 800d2bc:	2110      	movs	r1, #16
 800d2be:	4604      	mov	r4, r0
 800d2c0:	f00d fcbc 	bl	801ac3c <_ZdlPvj>
 800d2c4:	4620      	mov	r0, r4
 800d2c6:	bd10      	pop	{r4, pc}

0800d2c8 <_ZN8touchgfx12GestureEventD0Ev>:
 800d2c8:	b510      	push	{r4, lr}
 800d2ca:	210c      	movs	r1, #12
 800d2cc:	4604      	mov	r4, r0
 800d2ce:	f00d fcb5 	bl	801ac3c <_ZdlPvj>
 800d2d2:	4620      	mov	r0, r4
 800d2d4:	bd10      	pop	{r4, pc}

0800d2d6 <_ZN8touchgfx6ScreenD0Ev>:
 800d2d6:	b510      	push	{r4, lr}
 800d2d8:	213c      	movs	r1, #60	; 0x3c
 800d2da:	4604      	mov	r4, r0
 800d2dc:	f00d fcae 	bl	801ac3c <_ZdlPvj>
 800d2e0:	4620      	mov	r0, r4
 800d2e2:	bd10      	pop	{r4, pc}

0800d2e4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800d2e4:	b530      	push	{r4, r5, lr}
 800d2e6:	460d      	mov	r5, r1
 800d2e8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800d2ea:	b087      	sub	sp, #28
 800d2ec:	4604      	mov	r4, r0
 800d2ee:	b301      	cbz	r1, 800d332 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800d2f0:	a801      	add	r0, sp, #4
 800d2f2:	f7ff ff33 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d2f6:	892a      	ldrh	r2, [r5, #8]
 800d2f8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800d2fc:	7928      	ldrb	r0, [r5, #4]
 800d2fe:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800d302:	f88d 0010 	strb.w	r0, [sp, #16]
 800d306:	1ad2      	subs	r2, r2, r3
 800d308:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800d30a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d30c:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d310:	441a      	add	r2, r3
 800d312:	896b      	ldrh	r3, [r5, #10]
 800d314:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800d318:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d31c:	1b5b      	subs	r3, r3, r5
 800d31e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800d320:	442b      	add	r3, r5
 800d322:	4d05      	ldr	r5, [pc, #20]	; (800d338 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800d324:	9503      	str	r5, [sp, #12]
 800d326:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d32a:	6803      	ldr	r3, [r0, #0]
 800d32c:	a903      	add	r1, sp, #12
 800d32e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d330:	4798      	blx	r3
 800d332:	b007      	add	sp, #28
 800d334:	bd30      	pop	{r4, r5, pc}
 800d336:	bf00      	nop
 800d338:	0801df40 	.word	0x0801df40

0800d33c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800d33c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d340:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800d342:	b08a      	sub	sp, #40	; 0x28
 800d344:	4604      	mov	r4, r0
 800d346:	460d      	mov	r5, r1
 800d348:	b113      	cbz	r3, 800d350 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800d34a:	790b      	ldrb	r3, [r1, #4]
 800d34c:	2b00      	cmp	r3, #0
 800d34e:	d044      	beq.n	800d3da <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800d350:	f104 0804 	add.w	r8, r4, #4
 800d354:	4641      	mov	r1, r8
 800d356:	a803      	add	r0, sp, #12
 800d358:	f7ff ff00 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d35c:	792b      	ldrb	r3, [r5, #4]
 800d35e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800d362:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800d366:	b983      	cbnz	r3, 800d38a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800d368:	892a      	ldrh	r2, [r5, #8]
 800d36a:	88e9      	ldrh	r1, [r5, #6]
 800d36c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800d370:	1b92      	subs	r2, r2, r6
 800d372:	1bc9      	subs	r1, r1, r7
 800d374:	9301      	str	r3, [sp, #4]
 800d376:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800d37a:	9300      	str	r3, [sp, #0]
 800d37c:	b212      	sxth	r2, r2
 800d37e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800d382:	b209      	sxth	r1, r1
 800d384:	4640      	mov	r0, r8
 800d386:	f7fb fdd7 	bl	8008f38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800d38a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d38c:	b329      	cbz	r1, 800d3da <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800d38e:	a805      	add	r0, sp, #20
 800d390:	f7ff fee4 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d394:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d398:	792b      	ldrb	r3, [r5, #4]
 800d39a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800d39c:	f88d 3020 	strb.w	r3, [sp, #32]
 800d3a0:	1abf      	subs	r7, r7, r2
 800d3a2:	88ea      	ldrh	r2, [r5, #6]
 800d3a4:	4417      	add	r7, r2
 800d3a6:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800d3a8:	4417      	add	r7, r2
 800d3aa:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d3ae:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800d3b2:	1ab6      	subs	r6, r6, r2
 800d3b4:	892a      	ldrh	r2, [r5, #8]
 800d3b6:	4416      	add	r6, r2
 800d3b8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d3ba:	4416      	add	r6, r2
 800d3bc:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800d3c0:	4a07      	ldr	r2, [pc, #28]	; (800d3e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800d3c2:	9207      	str	r2, [sp, #28]
 800d3c4:	2600      	movs	r6, #0
 800d3c6:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800d3ca:	6803      	ldr	r3, [r0, #0]
 800d3cc:	a907      	add	r1, sp, #28
 800d3ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d3d0:	4798      	blx	r3
 800d3d2:	792b      	ldrb	r3, [r5, #4]
 800d3d4:	b10b      	cbz	r3, 800d3da <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800d3d6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800d3da:	b00a      	add	sp, #40	; 0x28
 800d3dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d3e0:	0801df18 	.word	0x0801df18

0800d3e4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800d3e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d3e8:	460c      	mov	r4, r1
 800d3ea:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800d3ec:	b088      	sub	sp, #32
 800d3ee:	4605      	mov	r5, r0
 800d3f0:	2900      	cmp	r1, #0
 800d3f2:	d06d      	beq.n	800d4d0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800d3f4:	4668      	mov	r0, sp
 800d3f6:	f7ff feb1 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d3fa:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800d3fc:	88e3      	ldrh	r3, [r4, #6]
 800d3fe:	f9bd 8000 	ldrsh.w	r8, [sp]
 800d402:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800d406:	440b      	add	r3, r1
 800d408:	b21b      	sxth	r3, r3
 800d40a:	4543      	cmp	r3, r8
 800d40c:	db31      	blt.n	800d472 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800d40e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800d412:	44c4      	add	ip, r8
 800d414:	fa0f fc8c 	sxth.w	ip, ip
 800d418:	4563      	cmp	r3, ip
 800d41a:	da2a      	bge.n	800d472 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800d41c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800d41e:	8926      	ldrh	r6, [r4, #8]
 800d420:	4416      	add	r6, r2
 800d422:	b236      	sxth	r6, r6
 800d424:	42be      	cmp	r6, r7
 800d426:	db24      	blt.n	800d472 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800d428:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800d42c:	4438      	add	r0, r7
 800d42e:	b200      	sxth	r0, r0
 800d430:	4286      	cmp	r6, r0
 800d432:	da1e      	bge.n	800d472 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800d434:	8963      	ldrh	r3, [r4, #10]
 800d436:	4419      	add	r1, r3
 800d438:	b209      	sxth	r1, r1
 800d43a:	4541      	cmp	r1, r8
 800d43c:	db08      	blt.n	800d450 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800d43e:	4561      	cmp	r1, ip
 800d440:	da06      	bge.n	800d450 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800d442:	89a3      	ldrh	r3, [r4, #12]
 800d444:	441a      	add	r2, r3
 800d446:	b212      	sxth	r2, r2
 800d448:	42ba      	cmp	r2, r7
 800d44a:	db01      	blt.n	800d450 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800d44c:	4282      	cmp	r2, r0
 800d44e:	db10      	blt.n	800d472 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800d450:	4b21      	ldr	r3, [pc, #132]	; (800d4d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800d452:	9304      	str	r3, [sp, #16]
 800d454:	2302      	movs	r3, #2
 800d456:	f88d 3014 	strb.w	r3, [sp, #20]
 800d45a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800d45c:	2300      	movs	r3, #0
 800d45e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d462:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d466:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d46a:	6803      	ldr	r3, [r0, #0]
 800d46c:	a904      	add	r1, sp, #16
 800d46e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d470:	4798      	blx	r3
 800d472:	1d29      	adds	r1, r5, #4
 800d474:	a802      	add	r0, sp, #8
 800d476:	f7ff fe71 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d47a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d47e:	88e0      	ldrh	r0, [r4, #6]
 800d480:	7921      	ldrb	r1, [r4, #4]
 800d482:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800d486:	8922      	ldrh	r2, [r4, #8]
 800d488:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800d48a:	f88d 1014 	strb.w	r1, [sp, #20]
 800d48e:	eba3 0808 	sub.w	r8, r3, r8
 800d492:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d496:	1bdf      	subs	r7, r3, r7
 800d498:	b2bb      	uxth	r3, r7
 800d49a:	fa1f f888 	uxth.w	r8, r8
 800d49e:	8967      	ldrh	r7, [r4, #10]
 800d4a0:	89a4      	ldrh	r4, [r4, #12]
 800d4a2:	4440      	add	r0, r8
 800d4a4:	4460      	add	r0, ip
 800d4a6:	441a      	add	r2, r3
 800d4a8:	44b8      	add	r8, r7
 800d4aa:	4423      	add	r3, r4
 800d4ac:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d4b0:	4433      	add	r3, r6
 800d4b2:	4432      	add	r2, r6
 800d4b4:	44e0      	add	r8, ip
 800d4b6:	4c09      	ldr	r4, [pc, #36]	; (800d4dc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800d4b8:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800d4ba:	9404      	str	r4, [sp, #16]
 800d4bc:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d4c0:	f8ad 801a 	strh.w	r8, [sp, #26]
 800d4c4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d4c8:	6803      	ldr	r3, [r0, #0]
 800d4ca:	a904      	add	r1, sp, #16
 800d4cc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d4ce:	4798      	blx	r3
 800d4d0:	b008      	add	sp, #32
 800d4d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d4d6:	bf00      	nop
 800d4d8:	0801df18 	.word	0x0801df18
 800d4dc:	0801df2c 	.word	0x0801df2c

0800d4e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800d4e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d4e2:	4604      	mov	r4, r0
 800d4e4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800d4e8:	3201      	adds	r2, #1
 800d4ea:	d112      	bne.n	800d512 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800d4ec:	6803      	ldr	r3, [r0, #0]
 800d4ee:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800d4f2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d4f6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d4fa:	2500      	movs	r5, #0
 800d4fc:	9500      	str	r5, [sp, #0]
 800d4fe:	466d      	mov	r5, sp
 800d500:	4629      	mov	r1, r5
 800d502:	f8ad 2006 	strh.w	r2, [sp, #6]
 800d506:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d508:	4798      	blx	r3
 800d50a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d50e:	e884 0003 	stmia.w	r4, {r0, r1}
 800d512:	4620      	mov	r0, r4
 800d514:	b003      	add	sp, #12
 800d516:	bd30      	pop	{r4, r5, pc}

0800d518 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800d518:	b513      	push	{r0, r1, r4, lr}
 800d51a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800d51e:	3301      	adds	r3, #1
 800d520:	4604      	mov	r4, r0
 800d522:	d109      	bne.n	800d538 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800d524:	4601      	mov	r1, r0
 800d526:	4668      	mov	r0, sp
 800d528:	f7ff fe18 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d52c:	f8bd 3000 	ldrh.w	r3, [sp]
 800d530:	8423      	strh	r3, [r4, #32]
 800d532:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d536:	8463      	strh	r3, [r4, #34]	; 0x22
 800d538:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800d53c:	b002      	add	sp, #8
 800d53e:	bd10      	pop	{r4, pc}

0800d540 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800d540:	b513      	push	{r0, r1, r4, lr}
 800d542:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800d546:	3301      	adds	r3, #1
 800d548:	4604      	mov	r4, r0
 800d54a:	d109      	bne.n	800d560 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800d54c:	4601      	mov	r1, r0
 800d54e:	4668      	mov	r0, sp
 800d550:	f7ff fe04 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d554:	f8bd 3000 	ldrh.w	r3, [sp]
 800d558:	8423      	strh	r3, [r4, #32]
 800d55a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d55e:	8463      	strh	r3, [r4, #34]	; 0x22
 800d560:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800d564:	b002      	add	sp, #8
 800d566:	bd10      	pop	{r4, pc}

0800d568 <_ZN8touchgfx6ScreenC1Ev>:
 800d568:	b570      	push	{r4, r5, r6, lr}
 800d56a:	4605      	mov	r5, r0
 800d56c:	4b16      	ldr	r3, [pc, #88]	; (800d5c8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800d56e:	f845 3b04 	str.w	r3, [r5], #4
 800d572:	2300      	movs	r3, #0
 800d574:	8103      	strh	r3, [r0, #8]
 800d576:	8143      	strh	r3, [r0, #10]
 800d578:	8183      	strh	r3, [r0, #12]
 800d57a:	81c3      	strh	r3, [r0, #14]
 800d57c:	8203      	strh	r3, [r0, #16]
 800d57e:	8243      	strh	r3, [r0, #18]
 800d580:	8283      	strh	r3, [r0, #20]
 800d582:	82c3      	strh	r3, [r0, #22]
 800d584:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800d588:	6203      	str	r3, [r0, #32]
 800d58a:	8483      	strh	r3, [r0, #36]	; 0x24
 800d58c:	84c3      	strh	r3, [r0, #38]	; 0x26
 800d58e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800d592:	4a0e      	ldr	r2, [pc, #56]	; (800d5cc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800d594:	6343      	str	r3, [r0, #52]	; 0x34
 800d596:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800d59a:	4b0d      	ldr	r3, [pc, #52]	; (800d5d0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800d59c:	6042      	str	r2, [r0, #4]
 800d59e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d5a2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800d5a4:	4a0b      	ldr	r2, [pc, #44]	; (800d5d4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800d5a6:	4604      	mov	r4, r0
 800d5a8:	2101      	movs	r1, #1
 800d5aa:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800d5ae:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800d5b2:	f9b2 1000 	ldrsh.w	r1, [r2]
 800d5b6:	4628      	mov	r0, r5
 800d5b8:	4798      	blx	r3
 800d5ba:	6863      	ldr	r3, [r4, #4]
 800d5bc:	4628      	mov	r0, r5
 800d5be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d5c0:	4631      	mov	r1, r6
 800d5c2:	4798      	blx	r3
 800d5c4:	4620      	mov	r0, r4
 800d5c6:	bd70      	pop	{r4, r5, r6, pc}
 800d5c8:	0801df54 	.word	0x0801df54
 800d5cc:	0801d1a8 	.word	0x0801d1a8
 800d5d0:	2000a4e6 	.word	0x2000a4e6
 800d5d4:	2000a4e4 	.word	0x2000a4e4

0800d5d8 <_ZN8touchgfx6Screen4drawEv>:
 800d5d8:	b507      	push	{r0, r1, r2, lr}
 800d5da:	4b09      	ldr	r3, [pc, #36]	; (800d600 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800d5dc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d5e0:	4b08      	ldr	r3, [pc, #32]	; (800d604 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800d5e2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d5e6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d5ea:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d5ee:	6803      	ldr	r3, [r0, #0]
 800d5f0:	2100      	movs	r1, #0
 800d5f2:	9100      	str	r1, [sp, #0]
 800d5f4:	689b      	ldr	r3, [r3, #8]
 800d5f6:	4669      	mov	r1, sp
 800d5f8:	4798      	blx	r3
 800d5fa:	b003      	add	sp, #12
 800d5fc:	f85d fb04 	ldr.w	pc, [sp], #4
 800d600:	2000a4e4 	.word	0x2000a4e4
 800d604:	2000a4e6 	.word	0x2000a4e6

0800d608 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800d608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d60c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800d610:	2b00      	cmp	r3, #0
 800d612:	b089      	sub	sp, #36	; 0x24
 800d614:	4680      	mov	r8, r0
 800d616:	460c      	mov	r4, r1
 800d618:	4615      	mov	r5, r2
 800d61a:	dd0e      	ble.n	800d63a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d61c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800d620:	2b00      	cmp	r3, #0
 800d622:	dd0a      	ble.n	800d63a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d624:	4628      	mov	r0, r5
 800d626:	f7ff ff5b 	bl	800d4e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d62a:	4621      	mov	r1, r4
 800d62c:	f7fe fc90 	bl	800bf50 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d630:	69eb      	ldr	r3, [r5, #28]
 800d632:	b928      	cbnz	r0, 800d640 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800d634:	461d      	mov	r5, r3
 800d636:	2b00      	cmp	r3, #0
 800d638:	d1f4      	bne.n	800d624 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800d63a:	b009      	add	sp, #36	; 0x24
 800d63c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d640:	ae04      	add	r6, sp, #16
 800d642:	2b00      	cmp	r3, #0
 800d644:	f000 80b5 	beq.w	800d7b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800d648:	682b      	ldr	r3, [r5, #0]
 800d64a:	4629      	mov	r1, r5
 800d64c:	68db      	ldr	r3, [r3, #12]
 800d64e:	a802      	add	r0, sp, #8
 800d650:	4798      	blx	r3
 800d652:	4628      	mov	r0, r5
 800d654:	f7ff ff60 	bl	800d518 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800d658:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800d65c:	4407      	add	r7, r0
 800d65e:	4628      	mov	r0, r5
 800d660:	f7ff ff6e 	bl	800d540 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800d664:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800d668:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800d66c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d670:	4418      	add	r0, r3
 800d672:	4621      	mov	r1, r4
 800d674:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d678:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d67c:	b23f      	sxth	r7, r7
 800d67e:	4630      	mov	r0, r6
 800d680:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d684:	f8ad 7010 	strh.w	r7, [sp, #16]
 800d688:	f7fb fd3a 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 800d68c:	4628      	mov	r0, r5
 800d68e:	f7ff ff27 	bl	800d4e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d692:	4602      	mov	r2, r0
 800d694:	e896 0003 	ldmia.w	r6, {r0, r1}
 800d698:	ab06      	add	r3, sp, #24
 800d69a:	e883 0003 	stmia.w	r3, {r0, r1}
 800d69e:	4611      	mov	r1, r2
 800d6a0:	4618      	mov	r0, r3
 800d6a2:	f7fb fd2d 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 800d6a6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d6aa:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d6ae:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800d6b2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800d6b6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800d6ba:	4299      	cmp	r1, r3
 800d6bc:	d10b      	bne.n	800d6d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800d6be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800d6c2:	4552      	cmp	r2, sl
 800d6c4:	d107      	bne.n	800d6d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800d6c6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800d6ca:	455a      	cmp	r2, fp
 800d6cc:	d103      	bne.n	800d6d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800d6ce:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800d6d2:	454a      	cmp	r2, r9
 800d6d4:	d06d      	beq.n	800d7b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800d6d6:	f1bb 0f00 	cmp.w	fp, #0
 800d6da:	dd65      	ble.n	800d7a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800d6dc:	f1b9 0f00 	cmp.w	r9, #0
 800d6e0:	dd62      	ble.n	800d7a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800d6e2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800d6e6:	fa1f f08a 	uxth.w	r0, sl
 800d6ea:	4552      	cmp	r2, sl
 800d6ec:	9000      	str	r0, [sp, #0]
 800d6ee:	da12      	bge.n	800d716 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800d6f0:	9301      	str	r3, [sp, #4]
 800d6f2:	9b00      	ldr	r3, [sp, #0]
 800d6f4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800d6f8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d6fc:	1a9a      	subs	r2, r3, r2
 800d6fe:	f8ad 1010 	strh.w	r1, [sp, #16]
 800d702:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d706:	f8ad 2016 	strh.w	r2, [sp, #22]
 800d70a:	69ea      	ldr	r2, [r5, #28]
 800d70c:	4631      	mov	r1, r6
 800d70e:	4640      	mov	r0, r8
 800d710:	f7ff ff7a 	bl	800d608 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d714:	9b01      	ldr	r3, [sp, #4]
 800d716:	f9b4 2000 	ldrsh.w	r2, [r4]
 800d71a:	429a      	cmp	r2, r3
 800d71c:	b29f      	uxth	r7, r3
 800d71e:	da0d      	bge.n	800d73c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800d720:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d724:	1aba      	subs	r2, r7, r2
 800d726:	f8ad a012 	strh.w	sl, [sp, #18]
 800d72a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d72e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800d732:	69ea      	ldr	r2, [r5, #28]
 800d734:	4631      	mov	r1, r6
 800d736:	4640      	mov	r0, r8
 800d738:	f7ff ff66 	bl	800d608 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d73c:	8822      	ldrh	r2, [r4, #0]
 800d73e:	88a3      	ldrh	r3, [r4, #4]
 800d740:	445f      	add	r7, fp
 800d742:	4413      	add	r3, r2
 800d744:	b29b      	uxth	r3, r3
 800d746:	b2bf      	uxth	r7, r7
 800d748:	b23a      	sxth	r2, r7
 800d74a:	b219      	sxth	r1, r3
 800d74c:	4291      	cmp	r1, r2
 800d74e:	dd0d      	ble.n	800d76c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800d750:	1bdb      	subs	r3, r3, r7
 800d752:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d756:	f8ad a012 	strh.w	sl, [sp, #18]
 800d75a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d75e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800d762:	69ea      	ldr	r2, [r5, #28]
 800d764:	4631      	mov	r1, r6
 800d766:	4640      	mov	r0, r8
 800d768:	f7ff ff4e 	bl	800d608 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d76c:	88e2      	ldrh	r2, [r4, #6]
 800d76e:	8863      	ldrh	r3, [r4, #2]
 800d770:	4413      	add	r3, r2
 800d772:	9a00      	ldr	r2, [sp, #0]
 800d774:	444a      	add	r2, r9
 800d776:	b29b      	uxth	r3, r3
 800d778:	fa1f f982 	uxth.w	r9, r2
 800d77c:	fa0f f289 	sxth.w	r2, r9
 800d780:	b219      	sxth	r1, r3
 800d782:	428a      	cmp	r2, r1
 800d784:	da15      	bge.n	800d7b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800d786:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800d78a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800d78e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d792:	eba3 0309 	sub.w	r3, r3, r9
 800d796:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d79a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d79e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d7a2:	69ea      	ldr	r2, [r5, #28]
 800d7a4:	4631      	mov	r1, r6
 800d7a6:	e001      	b.n	800d7ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800d7a8:	69ea      	ldr	r2, [r5, #28]
 800d7aa:	4621      	mov	r1, r4
 800d7ac:	4640      	mov	r0, r8
 800d7ae:	f7ff ff2b 	bl	800d608 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d7b2:	4628      	mov	r0, r5
 800d7b4:	f7ff fe94 	bl	800d4e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d7b8:	6861      	ldr	r1, [r4, #4]
 800d7ba:	4602      	mov	r2, r0
 800d7bc:	6820      	ldr	r0, [r4, #0]
 800d7be:	4633      	mov	r3, r6
 800d7c0:	c303      	stmia	r3!, {r0, r1}
 800d7c2:	4611      	mov	r1, r2
 800d7c4:	4630      	mov	r0, r6
 800d7c6:	f7fb fc9b 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 800d7ca:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d7ce:	2b00      	cmp	r3, #0
 800d7d0:	f77f af33 	ble.w	800d63a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d7d4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d7d8:	2b00      	cmp	r3, #0
 800d7da:	f77f af2e 	ble.w	800d63a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d7de:	4628      	mov	r0, r5
 800d7e0:	f7ff fe9a 	bl	800d518 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800d7e4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800d7e8:	1a18      	subs	r0, r3, r0
 800d7ea:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d7ee:	4628      	mov	r0, r5
 800d7f0:	f7ff fea6 	bl	800d540 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800d7f4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d7f8:	1a18      	subs	r0, r3, r0
 800d7fa:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d7fe:	682b      	ldr	r3, [r5, #0]
 800d800:	4631      	mov	r1, r6
 800d802:	689b      	ldr	r3, [r3, #8]
 800d804:	4628      	mov	r0, r5
 800d806:	4798      	blx	r3
 800d808:	e717      	b.n	800d63a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800d80a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800d80a:	b570      	push	{r4, r5, r6, lr}
 800d80c:	460c      	mov	r4, r1
 800d80e:	b086      	sub	sp, #24
 800d810:	1d06      	adds	r6, r0, #4
 800d812:	2300      	movs	r3, #0
 800d814:	4631      	mov	r1, r6
 800d816:	4605      	mov	r5, r0
 800d818:	a802      	add	r0, sp, #8
 800d81a:	9301      	str	r3, [sp, #4]
 800d81c:	f7ff fc9e 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d820:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d824:	8822      	ldrh	r2, [r4, #0]
 800d826:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800d82a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800d82e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d832:	1ad2      	subs	r2, r2, r3
 800d834:	8863      	ldrh	r3, [r4, #2]
 800d836:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d83a:	1a5b      	subs	r3, r3, r1
 800d83c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800d840:	f8ad 1016 	strh.w	r1, [sp, #22]
 800d844:	aa01      	add	r2, sp, #4
 800d846:	a904      	add	r1, sp, #16
 800d848:	4630      	mov	r0, r6
 800d84a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d84e:	f7fb fd2f 	bl	80092b0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800d852:	9a01      	ldr	r2, [sp, #4]
 800d854:	b11a      	cbz	r2, 800d85e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800d856:	4621      	mov	r1, r4
 800d858:	4628      	mov	r0, r5
 800d85a:	f7ff fed5 	bl	800d608 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d85e:	b006      	add	sp, #24
 800d860:	bd70      	pop	{r4, r5, r6, pc}

0800d862 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800d862:	b530      	push	{r4, r5, lr}
 800d864:	4602      	mov	r2, r0
 800d866:	4604      	mov	r4, r0
 800d868:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800d86c:	b085      	sub	sp, #20
 800d86e:	460d      	mov	r5, r1
 800d870:	6851      	ldr	r1, [r2, #4]
 800d872:	466b      	mov	r3, sp
 800d874:	c303      	stmia	r3!, {r0, r1}
 800d876:	4629      	mov	r1, r5
 800d878:	4668      	mov	r0, sp
 800d87a:	f7fb fc41 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 800d87e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d882:	b12b      	cbz	r3, 800d890 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800d884:	4669      	mov	r1, sp
 800d886:	4620      	mov	r0, r4
 800d888:	f7ff ffbf 	bl	800d80a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800d88c:	b005      	add	sp, #20
 800d88e:	bd30      	pop	{r4, r5, pc}
 800d890:	3404      	adds	r4, #4
 800d892:	4621      	mov	r1, r4
 800d894:	a802      	add	r0, sp, #8
 800d896:	f7ff fc61 	bl	800d15c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d89a:	f8bd 3000 	ldrh.w	r3, [sp]
 800d89e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800d8a2:	1a9b      	subs	r3, r3, r2
 800d8a4:	f8ad 3000 	strh.w	r3, [sp]
 800d8a8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800d8ac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d8b0:	4669      	mov	r1, sp
 800d8b2:	1a9b      	subs	r3, r3, r2
 800d8b4:	4620      	mov	r0, r4
 800d8b6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d8ba:	f7fb fcc0 	bl	800923e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800d8be:	e7e5      	b.n	800d88c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800d8c0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800d8c0:	680a      	ldr	r2, [r1, #0]
 800d8c2:	460b      	mov	r3, r1
 800d8c4:	6992      	ldr	r2, [r2, #24]
 800d8c6:	1d01      	adds	r1, r0, #4
 800d8c8:	4618      	mov	r0, r3
 800d8ca:	4710      	bx	r2

0800d8cc <_ZN8touchgfx12TextProviderC1Ev>:
 800d8cc:	b538      	push	{r3, r4, r5, lr}
 800d8ce:	2500      	movs	r5, #0
 800d8d0:	2302      	movs	r3, #2
 800d8d2:	4604      	mov	r4, r0
 800d8d4:	e9c0 5500 	strd	r5, r5, [r0]
 800d8d8:	7403      	strb	r3, [r0, #16]
 800d8da:	6145      	str	r5, [r0, #20]
 800d8dc:	7605      	strb	r5, [r0, #24]
 800d8de:	83c5      	strh	r5, [r0, #30]
 800d8e0:	8405      	strh	r5, [r0, #32]
 800d8e2:	86c5      	strh	r5, [r0, #54]	; 0x36
 800d8e4:	8705      	strh	r5, [r0, #56]	; 0x38
 800d8e6:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800d8e8:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800d8ec:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800d8f0:	220e      	movs	r2, #14
 800d8f2:	4629      	mov	r1, r5
 800d8f4:	304c      	adds	r0, #76	; 0x4c
 800d8f6:	f00d fa5b 	bl	801adb0 <memset>
 800d8fa:	2301      	movs	r3, #1
 800d8fc:	4620      	mov	r0, r4
 800d8fe:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800d902:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800d906:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800d90a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800d90e:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800d912:	f7f4 ffcf 	bl	80028b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800d916:	4620      	mov	r0, r4
 800d918:	bd38      	pop	{r3, r4, r5, pc}

0800d91a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800d91a:	b530      	push	{r4, r5, lr}
 800d91c:	2500      	movs	r5, #0
 800d91e:	2401      	movs	r4, #1
 800d920:	6843      	ldr	r3, [r0, #4]
 800d922:	b913      	cbnz	r3, 800d92a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800d924:	6803      	ldr	r3, [r0, #0]
 800d926:	b313      	cbz	r3, 800d96e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800d928:	6043      	str	r3, [r0, #4]
 800d92a:	7e03      	ldrb	r3, [r0, #24]
 800d92c:	b143      	cbz	r3, 800d940 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800d92e:	6943      	ldr	r3, [r0, #20]
 800d930:	b12b      	cbz	r3, 800d93e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800d932:	881a      	ldrh	r2, [r3, #0]
 800d934:	b11a      	cbz	r2, 800d93e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800d936:	1c9a      	adds	r2, r3, #2
 800d938:	6142      	str	r2, [r0, #20]
 800d93a:	8818      	ldrh	r0, [r3, #0]
 800d93c:	bd30      	pop	{r4, r5, pc}
 800d93e:	7605      	strb	r5, [r0, #24]
 800d940:	6843      	ldr	r3, [r0, #4]
 800d942:	8819      	ldrh	r1, [r3, #0]
 800d944:	b199      	cbz	r1, 800d96e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800d946:	1c9a      	adds	r2, r3, #2
 800d948:	2902      	cmp	r1, #2
 800d94a:	6042      	str	r2, [r0, #4]
 800d94c:	d1f5      	bne.n	800d93a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800d94e:	7c03      	ldrb	r3, [r0, #16]
 800d950:	2b01      	cmp	r3, #1
 800d952:	d8e5      	bhi.n	800d920 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d954:	1c5a      	adds	r2, r3, #1
 800d956:	3302      	adds	r3, #2
 800d958:	7402      	strb	r2, [r0, #16]
 800d95a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800d95e:	6143      	str	r3, [r0, #20]
 800d960:	2b00      	cmp	r3, #0
 800d962:	d0dd      	beq.n	800d920 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d964:	881b      	ldrh	r3, [r3, #0]
 800d966:	2b00      	cmp	r3, #0
 800d968:	d0da      	beq.n	800d920 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d96a:	7604      	strb	r4, [r0, #24]
 800d96c:	e7d8      	b.n	800d920 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d96e:	2000      	movs	r0, #0
 800d970:	e7e4      	b.n	800d93c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800d972 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800d972:	b430      	push	{r4, r5}
 800d974:	6001      	str	r1, [r0, #0]
 800d976:	2100      	movs	r1, #0
 800d978:	6041      	str	r1, [r0, #4]
 800d97a:	6815      	ldr	r5, [r2, #0]
 800d97c:	6085      	str	r5, [r0, #8]
 800d97e:	6852      	ldr	r2, [r2, #4]
 800d980:	6443      	str	r3, [r0, #68]	; 0x44
 800d982:	9b02      	ldr	r3, [sp, #8]
 800d984:	60c2      	str	r2, [r0, #12]
 800d986:	7401      	strb	r1, [r0, #16]
 800d988:	6141      	str	r1, [r0, #20]
 800d98a:	7601      	strb	r1, [r0, #24]
 800d98c:	8701      	strh	r1, [r0, #56]	; 0x38
 800d98e:	8401      	strh	r1, [r0, #32]
 800d990:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800d994:	6483      	str	r3, [r0, #72]	; 0x48
 800d996:	bc30      	pop	{r4, r5}
 800d998:	f7f4 bf8c 	b.w	80028b4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800d99c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800d99c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d99e:	4605      	mov	r5, r0
 800d9a0:	4608      	mov	r0, r1
 800d9a2:	b1e9      	cbz	r1, 800d9e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800d9a4:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800d9a8:	460b      	mov	r3, r1
 800d9aa:	f101 0708 	add.w	r7, r1, #8
 800d9ae:	4622      	mov	r2, r4
 800d9b0:	6818      	ldr	r0, [r3, #0]
 800d9b2:	6859      	ldr	r1, [r3, #4]
 800d9b4:	4626      	mov	r6, r4
 800d9b6:	c603      	stmia	r6!, {r0, r1}
 800d9b8:	3308      	adds	r3, #8
 800d9ba:	42bb      	cmp	r3, r7
 800d9bc:	4634      	mov	r4, r6
 800d9be:	d1f7      	bne.n	800d9b0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800d9c0:	6818      	ldr	r0, [r3, #0]
 800d9c2:	6030      	str	r0, [r6, #0]
 800d9c4:	889b      	ldrh	r3, [r3, #4]
 800d9c6:	80b3      	strh	r3, [r6, #4]
 800d9c8:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800d9cc:	015b      	lsls	r3, r3, #5
 800d9ce:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d9d2:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800d9d6:	430b      	orrs	r3, r1
 800d9d8:	425b      	negs	r3, r3
 800d9da:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800d9de:	4610      	mov	r0, r2
 800d9e0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d9e2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800d9e2:	b538      	push	{r3, r4, r5, lr}
 800d9e4:	460c      	mov	r4, r1
 800d9e6:	6811      	ldr	r1, [r2, #0]
 800d9e8:	4610      	mov	r0, r2
 800d9ea:	68cd      	ldr	r5, [r1, #12]
 800d9ec:	4619      	mov	r1, r3
 800d9ee:	47a8      	blx	r5
 800d9f0:	2800      	cmp	r0, #0
 800d9f2:	bf08      	it	eq
 800d9f4:	4620      	moveq	r0, r4
 800d9f6:	bd38      	pop	{r3, r4, r5, pc}

0800d9f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800d9f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d9fa:	4604      	mov	r4, r0
 800d9fc:	4615      	mov	r5, r2
 800d9fe:	4608      	mov	r0, r1
 800da00:	b93a      	cbnz	r2, 800da12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800da02:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800da06:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800da0a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800da0e:	4628      	mov	r0, r5
 800da10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800da12:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800da16:	8893      	ldrh	r3, [r2, #4]
 800da18:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800da1c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800da20:	79ee      	ldrb	r6, [r5, #7]
 800da22:	4316      	orrs	r6, r2
 800da24:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800da28:	189a      	adds	r2, r3, r2
 800da2a:	b291      	uxth	r1, r2
 800da2c:	291d      	cmp	r1, #29
 800da2e:	b2b7      	uxth	r7, r6
 800da30:	f200 8083 	bhi.w	800db3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800da34:	2201      	movs	r2, #1
 800da36:	408a      	lsls	r2, r1
 800da38:	4978      	ldr	r1, [pc, #480]	; (800dc1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800da3a:	420a      	tst	r2, r1
 800da3c:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800da40:	d12d      	bne.n	800da9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800da42:	f412 7f60 	tst.w	r2, #896	; 0x380
 800da46:	d078      	beq.n	800db3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800da48:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800da4c:	462b      	mov	r3, r5
 800da4e:	f105 0e08 	add.w	lr, r5, #8
 800da52:	4615      	mov	r5, r2
 800da54:	6818      	ldr	r0, [r3, #0]
 800da56:	6859      	ldr	r1, [r3, #4]
 800da58:	4694      	mov	ip, r2
 800da5a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800da5e:	3308      	adds	r3, #8
 800da60:	4573      	cmp	r3, lr
 800da62:	4662      	mov	r2, ip
 800da64:	d1f6      	bne.n	800da54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800da66:	6818      	ldr	r0, [r3, #0]
 800da68:	f8cc 0000 	str.w	r0, [ip]
 800da6c:	889b      	ldrh	r3, [r3, #4]
 800da6e:	f8ac 3004 	strh.w	r3, [ip, #4]
 800da72:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800da76:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800da7a:	b2b3      	uxth	r3, r6
 800da7c:	1aca      	subs	r2, r1, r3
 800da7e:	b292      	uxth	r2, r2
 800da80:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800da84:	10d2      	asrs	r2, r2, #3
 800da86:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800da8a:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800da8e:	4302      	orrs	r2, r0
 800da90:	1bcf      	subs	r7, r1, r7
 800da92:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800da96:	1afb      	subs	r3, r7, r3
 800da98:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800da9c:	e7b7      	b.n	800da0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800da9e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800daa0:	b92b      	cbnz	r3, 800daae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800daa2:	4b5f      	ldr	r3, [pc, #380]	; (800dc20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800daa4:	4a5f      	ldr	r2, [pc, #380]	; (800dc24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800daa6:	4860      	ldr	r0, [pc, #384]	; (800dc28 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800daa8:	21c0      	movs	r1, #192	; 0xc0
 800daaa:	f00d f8f5 	bl	801ac98 <__assert_func>
 800daae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800dab0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800dab4:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800dab6:	f640 6333 	movw	r3, #3635	; 0xe33
 800daba:	4299      	cmp	r1, r3
 800dabc:	d110      	bne.n	800dae0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800dabe:	6803      	ldr	r3, [r0, #0]
 800dac0:	68db      	ldr	r3, [r3, #12]
 800dac2:	4798      	blx	r3
 800dac4:	7b41      	ldrb	r1, [r0, #13]
 800dac6:	00cb      	lsls	r3, r1, #3
 800dac8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800dacc:	7a03      	ldrb	r3, [r0, #8]
 800dace:	0648      	lsls	r0, r1, #25
 800dad0:	ea43 0302 	orr.w	r3, r3, r2
 800dad4:	bf44      	itt	mi
 800dad6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800dada:	b21b      	sxthmi	r3, r3
 800dadc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800dae0:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800dae4:	443b      	add	r3, r7
 800dae6:	4433      	add	r3, r6
 800dae8:	b29b      	uxth	r3, r3
 800daea:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800daee:	462a      	mov	r2, r5
 800daf0:	f105 0c08 	add.w	ip, r5, #8
 800daf4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800daf8:	4635      	mov	r5, r6
 800dafa:	6810      	ldr	r0, [r2, #0]
 800dafc:	6851      	ldr	r1, [r2, #4]
 800dafe:	4637      	mov	r7, r6
 800db00:	c703      	stmia	r7!, {r0, r1}
 800db02:	3208      	adds	r2, #8
 800db04:	4562      	cmp	r2, ip
 800db06:	463e      	mov	r6, r7
 800db08:	d1f7      	bne.n	800dafa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800db0a:	6810      	ldr	r0, [r2, #0]
 800db0c:	6038      	str	r0, [r7, #0]
 800db0e:	8892      	ldrh	r2, [r2, #4]
 800db10:	80ba      	strh	r2, [r7, #4]
 800db12:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800db16:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800db1a:	10db      	asrs	r3, r3, #3
 800db1c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800db20:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800db24:	4313      	orrs	r3, r2
 800db26:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800db2a:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800db2e:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800db32:	1a9b      	subs	r3, r3, r2
 800db34:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800db38:	e769      	b.n	800da0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800db3a:	f023 0204 	bic.w	r2, r3, #4
 800db3e:	f640 611b 	movw	r1, #3611	; 0xe1b
 800db42:	428a      	cmp	r2, r1
 800db44:	d003      	beq.n	800db4e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800db46:	f640 621d 	movw	r2, #3613	; 0xe1d
 800db4a:	4293      	cmp	r3, r2
 800db4c:	d120      	bne.n	800db90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800db4e:	3b01      	subs	r3, #1
 800db50:	4602      	mov	r2, r0
 800db52:	b29b      	uxth	r3, r3
 800db54:	4629      	mov	r1, r5
 800db56:	4620      	mov	r0, r4
 800db58:	f7ff ff43 	bl	800d9e2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800db5c:	7b41      	ldrb	r1, [r0, #13]
 800db5e:	00cb      	lsls	r3, r1, #3
 800db60:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800db64:	7a03      	ldrb	r3, [r0, #8]
 800db66:	0649      	lsls	r1, r1, #25
 800db68:	ea43 0302 	orr.w	r3, r3, r2
 800db6c:	bf44      	itt	mi
 800db6e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800db72:	b21b      	sxthmi	r3, r3
 800db74:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800db78:	7b6b      	ldrb	r3, [r5, #13]
 800db7a:	7aaa      	ldrb	r2, [r5, #10]
 800db7c:	005b      	lsls	r3, r3, #1
 800db7e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800db82:	4313      	orrs	r3, r2
 800db84:	115a      	asrs	r2, r3, #5
 800db86:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800db8a:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800db8e:	e036      	b.n	800dbfe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800db90:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800db94:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800db98:	7a2a      	ldrb	r2, [r5, #8]
 800db9a:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800db9e:	ea42 0201 	orr.w	r2, r2, r1
 800dba2:	bf1c      	itt	ne
 800dba4:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800dba8:	b212      	sxthne	r2, r2
 800dbaa:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800dbae:	f640 6109 	movw	r1, #3593	; 0xe09
 800dbb2:	f023 0210 	bic.w	r2, r3, #16
 800dbb6:	428a      	cmp	r2, r1
 800dbb8:	d003      	beq.n	800dbc2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800dbba:	f640 6213 	movw	r2, #3603	; 0xe13
 800dbbe:	4293      	cmp	r3, r2
 800dbc0:	d12a      	bne.n	800dc18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800dbc2:	7b6e      	ldrb	r6, [r5, #13]
 800dbc4:	0076      	lsls	r6, r6, #1
 800dbc6:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800dbca:	7aae      	ldrb	r6, [r5, #10]
 800dbcc:	4316      	orrs	r6, r2
 800dbce:	f640 6213 	movw	r2, #3603	; 0xe13
 800dbd2:	4293      	cmp	r3, r2
 800dbd4:	bf18      	it	ne
 800dbd6:	f103 33ff 	addne.w	r3, r3, #4294967295
 800dbda:	4602      	mov	r2, r0
 800dbdc:	bf14      	ite	ne
 800dbde:	b29b      	uxthne	r3, r3
 800dbe0:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800dbe4:	4629      	mov	r1, r5
 800dbe6:	4620      	mov	r0, r4
 800dbe8:	f7ff fefb 	bl	800d9e2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800dbec:	7b43      	ldrb	r3, [r0, #13]
 800dbee:	7a82      	ldrb	r2, [r0, #10]
 800dbf0:	005b      	lsls	r3, r3, #1
 800dbf2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dbf6:	4313      	orrs	r3, r2
 800dbf8:	1af6      	subs	r6, r6, r3
 800dbfa:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800dbfe:	7b69      	ldrb	r1, [r5, #13]
 800dc00:	00cb      	lsls	r3, r1, #3
 800dc02:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800dc06:	7a2b      	ldrb	r3, [r5, #8]
 800dc08:	4313      	orrs	r3, r2
 800dc0a:	064a      	lsls	r2, r1, #25
 800dc0c:	bf44      	itt	mi
 800dc0e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800dc12:	b21b      	sxthmi	r3, r3
 800dc14:	1bdb      	subs	r3, r3, r7
 800dc16:	e73f      	b.n	800da98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800dc18:	2300      	movs	r3, #0
 800dc1a:	e7b6      	b.n	800db8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800dc1c:	3fc00079 	.word	0x3fc00079
 800dc20:	0801ca98 	.word	0x0801ca98
 800dc24:	0801e1af 	.word	0x0801e1af
 800dc28:	0801cb6a 	.word	0x0801cb6a

0800dc2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800dc2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dc30:	4604      	mov	r4, r0
 800dc32:	b942      	cbnz	r2, 800dc46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800dc34:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800dc38:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800dc3c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800dc40:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800dc44:	e046      	b.n	800dcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800dc46:	7b51      	ldrb	r1, [r2, #13]
 800dc48:	8893      	ldrh	r3, [r2, #4]
 800dc4a:	010f      	lsls	r7, r1, #4
 800dc4c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800dc50:	79d7      	ldrb	r7, [r2, #7]
 800dc52:	4307      	orrs	r7, r0
 800dc54:	2f04      	cmp	r7, #4
 800dc56:	b2bd      	uxth	r5, r7
 800dc58:	bfcc      	ite	gt
 800dc5a:	08bf      	lsrgt	r7, r7, #2
 800dc5c:	2701      	movle	r7, #1
 800dc5e:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800dc62:	f200 80ab 	bhi.w	800ddbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800dc66:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800dc6a:	4283      	cmp	r3, r0
 800dc6c:	d216      	bcs.n	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800dc6e:	f240 605b 	movw	r0, #1627	; 0x65b
 800dc72:	4283      	cmp	r3, r0
 800dc74:	d859      	bhi.n	800dd2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800dc76:	f240 6057 	movw	r0, #1623	; 0x657
 800dc7a:	4283      	cmp	r3, r0
 800dc7c:	d20e      	bcs.n	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800dc7e:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800dc82:	d24a      	bcs.n	800dd1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800dc84:	f240 604e 	movw	r0, #1614	; 0x64e
 800dc88:	4283      	cmp	r3, r0
 800dc8a:	d207      	bcs.n	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800dc8c:	f240 601a 	movw	r0, #1562	; 0x61a
 800dc90:	4283      	cmp	r3, r0
 800dc92:	d02a      	beq.n	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800dc94:	d821      	bhi.n	800dcda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800dc96:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800dc9a:	d35b      	bcc.n	800dd54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800dc9c:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800dca0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800dca4:	f040 80d0 	bne.w	800de48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800dca8:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800dcac:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800dcb0:	f040 80ca 	bne.w	800de48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800dcb4:	00cb      	lsls	r3, r1, #3
 800dcb6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800dcba:	7a13      	ldrb	r3, [r2, #8]
 800dcbc:	0649      	lsls	r1, r1, #25
 800dcbe:	ea43 0300 	orr.w	r3, r3, r0
 800dcc2:	bf44      	itt	mi
 800dcc4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800dcc8:	b21b      	sxthmi	r3, r3
 800dcca:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800dcce:	1b5d      	subs	r5, r3, r5
 800dcd0:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800dcd4:	4610      	mov	r0, r2
 800dcd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dcda:	f240 604b 	movw	r0, #1611	; 0x64b
 800dcde:	4283      	cmp	r3, r0
 800dce0:	d338      	bcc.n	800dd54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800dce2:	f240 604c 	movw	r0, #1612	; 0x64c
 800dce6:	4283      	cmp	r3, r0
 800dce8:	d9d8      	bls.n	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800dcea:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800dcee:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800dcf2:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800dcf6:	f040 80f1 	bne.w	800dedc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800dcfa:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800dcfe:	f040 80ed 	bne.w	800dedc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800dd02:	00cb      	lsls	r3, r1, #3
 800dd04:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800dd08:	7a13      	ldrb	r3, [r2, #8]
 800dd0a:	064e      	lsls	r6, r1, #25
 800dd0c:	ea43 0300 	orr.w	r3, r3, r0
 800dd10:	bf44      	itt	mi
 800dd12:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800dd16:	b21b      	sxthmi	r3, r3
 800dd18:	e7d9      	b.n	800dcce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800dd1a:	f240 6054 	movw	r0, #1620	; 0x654
 800dd1e:	4283      	cmp	r3, r0
 800dd20:	d8e3      	bhi.n	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800dd22:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800dd26:	d9e0      	bls.n	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800dd28:	e7b8      	b.n	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800dd2a:	f240 6074 	movw	r0, #1652	; 0x674
 800dd2e:	4283      	cmp	r3, r0
 800dd30:	d0b4      	beq.n	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800dd32:	d82d      	bhi.n	800dd90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800dd34:	f240 605e 	movw	r0, #1630	; 0x65e
 800dd38:	4283      	cmp	r3, r0
 800dd3a:	d804      	bhi.n	800dd46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800dd3c:	f240 605d 	movw	r0, #1629	; 0x65d
 800dd40:	4283      	cmp	r3, r0
 800dd42:	d3d2      	bcc.n	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800dd44:	e7aa      	b.n	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800dd46:	f240 605f 	movw	r0, #1631	; 0x65f
 800dd4a:	4283      	cmp	r3, r0
 800dd4c:	d0cd      	beq.n	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800dd4e:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800dd52:	d0a3      	beq.n	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800dd54:	00cb      	lsls	r3, r1, #3
 800dd56:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800dd5a:	7a13      	ldrb	r3, [r2, #8]
 800dd5c:	0649      	lsls	r1, r1, #25
 800dd5e:	ea43 0300 	orr.w	r3, r3, r0
 800dd62:	bf44      	itt	mi
 800dd64:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800dd68:	b21b      	sxthmi	r3, r3
 800dd6a:	1b5d      	subs	r5, r3, r5
 800dd6c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800dd70:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800dd74:	7b53      	ldrb	r3, [r2, #13]
 800dd76:	015b      	lsls	r3, r3, #5
 800dd78:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800dd7c:	7993      	ldrb	r3, [r2, #6]
 800dd7e:	430b      	orrs	r3, r1
 800dd80:	005b      	lsls	r3, r3, #1
 800dd82:	2105      	movs	r1, #5
 800dd84:	fb93 f3f1 	sdiv	r3, r3, r1
 800dd88:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800dd8c:	440b      	add	r3, r1
 800dd8e:	e757      	b.n	800dc40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800dd90:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800dd94:	4283      	cmp	r3, r0
 800dd96:	d809      	bhi.n	800ddac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800dd98:	f240 60df 	movw	r0, #1759	; 0x6df
 800dd9c:	4283      	cmp	r3, r0
 800dd9e:	f4bf af7d 	bcs.w	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800dda2:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800dda6:	2b05      	cmp	r3, #5
 800dda8:	d8d4      	bhi.n	800dd54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ddaa:	e777      	b.n	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ddac:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800ddb0:	4283      	cmp	r3, r0
 800ddb2:	d09a      	beq.n	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ddb4:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800ddb8:	4283      	cmp	r3, r0
 800ddba:	e7ca      	b.n	800dd52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800ddbc:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800ddc0:	d22b      	bcs.n	800de1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800ddc2:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800ddc6:	4283      	cmp	r3, r0
 800ddc8:	d28f      	bcs.n	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ddca:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800ddce:	4283      	cmp	r3, r0
 800ddd0:	d816      	bhi.n	800de00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800ddd2:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800ddd6:	4283      	cmp	r3, r0
 800ddd8:	f4bf af60 	bcs.w	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800dddc:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800dde0:	4283      	cmp	r3, r0
 800dde2:	d80a      	bhi.n	800ddfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800dde4:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800dde8:	4283      	cmp	r3, r0
 800ddea:	f4bf af57 	bcs.w	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ddee:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800ddf2:	4283      	cmp	r3, r0
 800ddf4:	f43f af79 	beq.w	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ddf8:	e7ac      	b.n	800dd54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ddfa:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800ddfe:	e7f8      	b.n	800ddf2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800de00:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800de04:	4283      	cmp	r3, r0
 800de06:	d802      	bhi.n	800de0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800de08:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800de0c:	e798      	b.n	800dd40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800de0e:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800de12:	4283      	cmp	r3, r0
 800de14:	f47f af42 	bne.w	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800de18:	e767      	b.n	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800de1a:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800de1e:	4283      	cmp	r3, r0
 800de20:	f43f af63 	beq.w	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800de24:	d802      	bhi.n	800de2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800de26:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800de2a:	e7f2      	b.n	800de12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800de2c:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800de30:	4283      	cmp	r3, r0
 800de32:	d805      	bhi.n	800de40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800de34:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800de38:	4283      	cmp	r3, r0
 800de3a:	f4ff af2f 	bcc.w	800dc9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800de3e:	e754      	b.n	800dcea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800de40:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800de44:	4283      	cmp	r3, r0
 800de46:	e7af      	b.n	800dda8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800de48:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800de4c:	4617      	mov	r7, r2
 800de4e:	f102 0808 	add.w	r8, r2, #8
 800de52:	4666      	mov	r6, ip
 800de54:	6838      	ldr	r0, [r7, #0]
 800de56:	6879      	ldr	r1, [r7, #4]
 800de58:	46e6      	mov	lr, ip
 800de5a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800de5e:	3708      	adds	r7, #8
 800de60:	4547      	cmp	r7, r8
 800de62:	46f4      	mov	ip, lr
 800de64:	d1f6      	bne.n	800de54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800de66:	6838      	ldr	r0, [r7, #0]
 800de68:	f8ce 0000 	str.w	r0, [lr]
 800de6c:	88b9      	ldrh	r1, [r7, #4]
 800de6e:	f8ae 1004 	strh.w	r1, [lr, #4]
 800de72:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800de76:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800de7a:	d009      	beq.n	800de90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800de7c:	7b51      	ldrb	r1, [r2, #13]
 800de7e:	7992      	ldrb	r2, [r2, #6]
 800de80:	0149      	lsls	r1, r1, #5
 800de82:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800de86:	4311      	orrs	r1, r2
 800de88:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800de8c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800de90:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800de94:	d00d      	beq.n	800deb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800de96:	442b      	add	r3, r5
 800de98:	b29b      	uxth	r3, r3
 800de9a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800de9e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800dea2:	10db      	asrs	r3, r3, #3
 800dea4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800dea8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800deac:	4313      	orrs	r3, r2
 800deae:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800deb2:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800deb6:	00cb      	lsls	r3, r1, #3
 800deb8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800debc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800dec0:	064f      	lsls	r7, r1, #25
 800dec2:	ea43 0302 	orr.w	r3, r3, r2
 800dec6:	bf44      	itt	mi
 800dec8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800decc:	b21b      	sxthmi	r3, r3
 800dece:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ded2:	1b5d      	subs	r5, r3, r5
 800ded4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ded8:	4632      	mov	r2, r6
 800deda:	e6fb      	b.n	800dcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800dedc:	f104 0e4c 	add.w	lr, r4, #76	; 0x4c
 800dee0:	4694      	mov	ip, r2
 800dee2:	f102 0908 	add.w	r9, r2, #8
 800dee6:	4676      	mov	r6, lr
 800dee8:	f8dc 0000 	ldr.w	r0, [ip]
 800deec:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800def0:	46f0      	mov	r8, lr
 800def2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800def6:	f10c 0c08 	add.w	ip, ip, #8
 800defa:	45cc      	cmp	ip, r9
 800defc:	46c6      	mov	lr, r8
 800defe:	d1f3      	bne.n	800dee8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800df00:	f8dc 0000 	ldr.w	r0, [ip]
 800df04:	f8c8 0000 	str.w	r0, [r8]
 800df08:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800df0c:	f8a8 1004 	strh.w	r1, [r8, #4]
 800df10:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800df14:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800df18:	d009      	beq.n	800df2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800df1a:	7b51      	ldrb	r1, [r2, #13]
 800df1c:	7992      	ldrb	r2, [r2, #6]
 800df1e:	0149      	lsls	r1, r1, #5
 800df20:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800df24:	4311      	orrs	r1, r2
 800df26:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800df2a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800df2e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800df32:	d00d      	beq.n	800df50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800df34:	1bdb      	subs	r3, r3, r7
 800df36:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800df3a:	b29b      	uxth	r3, r3
 800df3c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800df40:	10db      	asrs	r3, r3, #3
 800df42:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800df46:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800df4a:	4313      	orrs	r3, r2
 800df4c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800df50:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800df54:	00cb      	lsls	r3, r1, #3
 800df56:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800df5a:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800df5e:	0648      	lsls	r0, r1, #25
 800df60:	ea43 0302 	orr.w	r3, r3, r2
 800df64:	bf44      	itt	mi
 800df66:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800df6a:	b21b      	sxthmi	r3, r3
 800df6c:	e7b1      	b.n	800ded2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800df70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800df70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df74:	461e      	mov	r6, r3
 800df76:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800df78:	4604      	mov	r4, r0
 800df7a:	4617      	mov	r7, r2
 800df7c:	b92b      	cbnz	r3, 800df8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800df7e:	4b25      	ldr	r3, [pc, #148]	; (800e014 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800df80:	4a25      	ldr	r2, [pc, #148]	; (800e018 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800df82:	4826      	ldr	r0, [pc, #152]	; (800e01c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800df84:	21c0      	movs	r1, #192	; 0xc0
 800df86:	f00c fe87 	bl	801ac98 <__assert_func>
 800df8a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800df8c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800df90:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800df94:	f7f4 fc4c 	bl	8002830 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800df98:	4605      	mov	r5, r0
 800df9a:	b918      	cbnz	r0, 800dfa4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800df9c:	6030      	str	r0, [r6, #0]
 800df9e:	4628      	mov	r0, r5
 800dfa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dfa4:	683b      	ldr	r3, [r7, #0]
 800dfa6:	4601      	mov	r1, r0
 800dfa8:	68db      	ldr	r3, [r3, #12]
 800dfaa:	4638      	mov	r0, r7
 800dfac:	4798      	blx	r3
 800dfae:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800dfb2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800dfb6:	4602      	mov	r2, r0
 800dfb8:	6030      	str	r0, [r6, #0]
 800dfba:	d213      	bcs.n	800dfe4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800dfbc:	4643      	mov	r3, r8
 800dfbe:	4639      	mov	r1, r7
 800dfc0:	4620      	mov	r0, r4
 800dfc2:	f7ff fe33 	bl	800dc2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800dfc6:	6030      	str	r0, [r6, #0]
 800dfc8:	6833      	ldr	r3, [r6, #0]
 800dfca:	b143      	cbz	r3, 800dfde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800dfcc:	7b5a      	ldrb	r2, [r3, #13]
 800dfce:	7a9b      	ldrb	r3, [r3, #10]
 800dfd0:	0052      	lsls	r2, r2, #1
 800dfd2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800dfd6:	4313      	orrs	r3, r2
 800dfd8:	bf0c      	ite	eq
 800dfda:	2301      	moveq	r3, #1
 800dfdc:	2300      	movne	r3, #0
 800dfde:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800dfe2:	e7dc      	b.n	800df9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800dfe4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800dfe8:	b29b      	uxth	r3, r3
 800dfea:	2b7f      	cmp	r3, #127	; 0x7f
 800dfec:	d804      	bhi.n	800dff8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800dfee:	4639      	mov	r1, r7
 800dff0:	4620      	mov	r0, r4
 800dff2:	f7ff fd01 	bl	800d9f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800dff6:	e7e6      	b.n	800dfc6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800dff8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800dffc:	2b00      	cmp	r3, #0
 800dffe:	d0e3      	beq.n	800dfc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e000:	f640 1302 	movw	r3, #2306	; 0x902
 800e004:	429d      	cmp	r5, r3
 800e006:	d1df      	bne.n	800dfc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800e008:	4601      	mov	r1, r0
 800e00a:	4620      	mov	r0, r4
 800e00c:	f7ff fcc6 	bl	800d99c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e010:	e7d9      	b.n	800dfc6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800e012:	bf00      	nop
 800e014:	0801ca98 	.word	0x0801ca98
 800e018:	0801e1af 	.word	0x0801e1af
 800e01c:	0801cb6a 	.word	0x0801cb6a

0800e020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800e020:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e024:	461e      	mov	r6, r3
 800e026:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800e028:	4604      	mov	r4, r0
 800e02a:	4617      	mov	r7, r2
 800e02c:	b92b      	cbnz	r3, 800e03a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800e02e:	4b26      	ldr	r3, [pc, #152]	; (800e0c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800e030:	4a26      	ldr	r2, [pc, #152]	; (800e0cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800e032:	4827      	ldr	r0, [pc, #156]	; (800e0d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800e034:	21c0      	movs	r1, #192	; 0xc0
 800e036:	f00c fe2f 	bl	801ac98 <__assert_func>
 800e03a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e03c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800e040:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800e044:	f7f4 fbf4 	bl	8002830 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e048:	4605      	mov	r5, r0
 800e04a:	b918      	cbnz	r0, 800e054 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800e04c:	6030      	str	r0, [r6, #0]
 800e04e:	4628      	mov	r0, r5
 800e050:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800e054:	683b      	ldr	r3, [r7, #0]
 800e056:	4601      	mov	r1, r0
 800e058:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800e05c:	4638      	mov	r0, r7
 800e05e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e062:	47c8      	blx	r9
 800e064:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800e068:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800e06c:	4602      	mov	r2, r0
 800e06e:	6030      	str	r0, [r6, #0]
 800e070:	d213      	bcs.n	800e09a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800e072:	4643      	mov	r3, r8
 800e074:	4639      	mov	r1, r7
 800e076:	4620      	mov	r0, r4
 800e078:	f7ff fdd8 	bl	800dc2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800e07c:	6030      	str	r0, [r6, #0]
 800e07e:	6833      	ldr	r3, [r6, #0]
 800e080:	b143      	cbz	r3, 800e094 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800e082:	7b5a      	ldrb	r2, [r3, #13]
 800e084:	7a9b      	ldrb	r3, [r3, #10]
 800e086:	0052      	lsls	r2, r2, #1
 800e088:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e08c:	4313      	orrs	r3, r2
 800e08e:	bf0c      	ite	eq
 800e090:	2301      	moveq	r3, #1
 800e092:	2300      	movne	r3, #0
 800e094:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800e098:	e7d9      	b.n	800e04e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800e09a:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800e09e:	b29b      	uxth	r3, r3
 800e0a0:	2b7f      	cmp	r3, #127	; 0x7f
 800e0a2:	d804      	bhi.n	800e0ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800e0a4:	4639      	mov	r1, r7
 800e0a6:	4620      	mov	r0, r4
 800e0a8:	f7ff fca6 	bl	800d9f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e0ac:	e7e6      	b.n	800e07c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e0ae:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800e0b2:	2b00      	cmp	r3, #0
 800e0b4:	d0e3      	beq.n	800e07e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e0b6:	f640 1302 	movw	r3, #2306	; 0x902
 800e0ba:	429d      	cmp	r5, r3
 800e0bc:	d1df      	bne.n	800e07e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800e0be:	4601      	mov	r1, r0
 800e0c0:	4620      	mov	r0, r4
 800e0c2:	f7ff fc6b 	bl	800d99c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e0c6:	e7d9      	b.n	800e07c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800e0c8:	0801ca98 	.word	0x0801ca98
 800e0cc:	0801e1af 	.word	0x0801e1af
 800e0d0:	0801cb6a 	.word	0x0801cb6a

0800e0d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800e0d4:	b510      	push	{r4, lr}
 800e0d6:	4604      	mov	r4, r0
 800e0d8:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800e0dc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e0de:	b9d9      	cbnz	r1, 800e118 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x44>
 800e0e0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e0e2:	2b0a      	cmp	r3, #10
 800e0e4:	d037      	beq.n	800e156 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800e0e6:	4620      	mov	r0, r4
 800e0e8:	f7ff fc17 	bl	800d91a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800e0ec:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e0ee:	2b09      	cmp	r3, #9
 800e0f0:	d906      	bls.n	800e100 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800e0f2:	4b19      	ldr	r3, [pc, #100]	; (800e158 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800e0f4:	4a19      	ldr	r2, [pc, #100]	; (800e15c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800e0f6:	481a      	ldr	r0, [pc, #104]	; (800e160 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8c>)
 800e0f8:	f44f 7182 	mov.w	r1, #260	; 0x104
 800e0fc:	f00c fdcc 	bl	801ac98 <__assert_func>
 800e100:	1c5a      	adds	r2, r3, #1
 800e102:	8722      	strh	r2, [r4, #56]	; 0x38
 800e104:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e106:	4413      	add	r3, r2
 800e108:	b29b      	uxth	r3, r3
 800e10a:	2b09      	cmp	r3, #9
 800e10c:	bf88      	it	hi
 800e10e:	3b0a      	subhi	r3, #10
 800e110:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e114:	8458      	strh	r0, [r3, #34]	; 0x22
 800e116:	e7e3      	b.n	800e0e0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xc>
 800e118:	2b0a      	cmp	r3, #10
 800e11a:	d01c      	beq.n	800e156 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x82>
 800e11c:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800e11e:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800e122:	3901      	subs	r1, #1
 800e124:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800e126:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800e12a:	1c51      	adds	r1, r2, #1
 800e12c:	b289      	uxth	r1, r1
 800e12e:	2901      	cmp	r1, #1
 800e130:	bf8a      	itet	hi
 800e132:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800e136:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800e138:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800e13a:	2b09      	cmp	r3, #9
 800e13c:	d8d9      	bhi.n	800e0f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1e>
 800e13e:	1c5a      	adds	r2, r3, #1
 800e140:	8722      	strh	r2, [r4, #56]	; 0x38
 800e142:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e144:	4413      	add	r3, r2
 800e146:	b29b      	uxth	r3, r3
 800e148:	2b09      	cmp	r3, #9
 800e14a:	bf88      	it	hi
 800e14c:	3b0a      	subhi	r3, #10
 800e14e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e152:	8458      	strh	r0, [r3, #34]	; 0x22
 800e154:	e7c0      	b.n	800e0d8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800e156:	bd10      	pop	{r4, pc}
 800e158:	0801df80 	.word	0x0801df80
 800e15c:	0801e305 	.word	0x0801e305
 800e160:	0801cb6a 	.word	0x0801cb6a

0800e164 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800e164:	b538      	push	{r3, r4, r5, lr}
 800e166:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800e168:	4604      	mov	r4, r0
 800e16a:	b92a      	cbnz	r2, 800e178 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800e16c:	4b13      	ldr	r3, [pc, #76]	; (800e1bc <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800e16e:	4a14      	ldr	r2, [pc, #80]	; (800e1c0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800e170:	4814      	ldr	r0, [pc, #80]	; (800e1c4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800e172:	21d5      	movs	r1, #213	; 0xd5
 800e174:	f00c fd90 	bl	801ac98 <__assert_func>
 800e178:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e17a:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800e17e:	3a01      	subs	r2, #1
 800e180:	8c4d      	ldrh	r5, [r1, #34]	; 0x22
 800e182:	8702      	strh	r2, [r0, #56]	; 0x38
 800e184:	1c5a      	adds	r2, r3, #1
 800e186:	b292      	uxth	r2, r2
 800e188:	2a09      	cmp	r2, #9
 800e18a:	bf86      	itte	hi
 800e18c:	3b09      	subhi	r3, #9
 800e18e:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800e190:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800e192:	f7ff ff9f 	bl	800e0d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800e196:	8c23      	ldrh	r3, [r4, #32]
 800e198:	2b01      	cmp	r3, #1
 800e19a:	bf9c      	itt	ls
 800e19c:	3301      	addls	r3, #1
 800e19e:	8423      	strhls	r3, [r4, #32]
 800e1a0:	8be3      	ldrh	r3, [r4, #30]
 800e1a2:	b90b      	cbnz	r3, 800e1a8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800e1a4:	2302      	movs	r3, #2
 800e1a6:	83e3      	strh	r3, [r4, #30]
 800e1a8:	8be3      	ldrh	r3, [r4, #30]
 800e1aa:	3b01      	subs	r3, #1
 800e1ac:	b29b      	uxth	r3, r3
 800e1ae:	83e3      	strh	r3, [r4, #30]
 800e1b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e1b4:	4628      	mov	r0, r5
 800e1b6:	8365      	strh	r5, [r4, #26]
 800e1b8:	bd38      	pop	{r3, r4, r5, pc}
 800e1ba:	bf00      	nop
 800e1bc:	0801ca98 	.word	0x0801ca98
 800e1c0:	0801e25a 	.word	0x0801e25a
 800e1c4:	0801cb6a 	.word	0x0801cb6a

0800e1c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800e1c8:	b538      	push	{r3, r4, r5, lr}
 800e1ca:	428a      	cmp	r2, r1
 800e1cc:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800e1ce:	d90c      	bls.n	800e1ea <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800e1d0:	b92c      	cbnz	r4, 800e1de <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800e1d2:	4b1c      	ldr	r3, [pc, #112]	; (800e244 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800e1d4:	4a1c      	ldr	r2, [pc, #112]	; (800e248 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800e1d6:	21e1      	movs	r1, #225	; 0xe1
 800e1d8:	481c      	ldr	r0, [pc, #112]	; (800e24c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800e1da:	f00c fd5d 	bl	801ac98 <__assert_func>
 800e1de:	3c01      	subs	r4, #1
 800e1e0:	8704      	strh	r4, [r0, #56]	; 0x38
 800e1e2:	4b1b      	ldr	r3, [pc, #108]	; (800e250 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800e1e4:	4a1b      	ldr	r2, [pc, #108]	; (800e254 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800e1e6:	21c5      	movs	r1, #197	; 0xc5
 800e1e8:	e7f6      	b.n	800e1d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800e1ea:	428c      	cmp	r4, r1
 800e1ec:	d203      	bcs.n	800e1f6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800e1ee:	4b1a      	ldr	r3, [pc, #104]	; (800e258 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800e1f0:	4a1a      	ldr	r2, [pc, #104]	; (800e25c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800e1f2:	21cb      	movs	r1, #203	; 0xcb
 800e1f4:	e7f0      	b.n	800e1d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800e1f6:	1a64      	subs	r4, r4, r1
 800e1f8:	8704      	strh	r4, [r0, #56]	; 0x38
 800e1fa:	8ec4      	ldrh	r4, [r0, #54]	; 0x36
 800e1fc:	4421      	add	r1, r4
 800e1fe:	b289      	uxth	r1, r1
 800e200:	2909      	cmp	r1, #9
 800e202:	bf88      	it	hi
 800e204:	390a      	subhi	r1, #10
 800e206:	86c1      	strh	r1, [r0, #54]	; 0x36
 800e208:	250a      	movs	r5, #10
 800e20a:	b1ba      	cbz	r2, 800e23c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800e20c:	3a01      	subs	r2, #1
 800e20e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800e210:	b292      	uxth	r2, r2
 800e212:	2909      	cmp	r1, #9
 800e214:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800e218:	d903      	bls.n	800e222 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800e21a:	4b11      	ldr	r3, [pc, #68]	; (800e260 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800e21c:	4a11      	ldr	r2, [pc, #68]	; (800e264 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800e21e:	21e6      	movs	r1, #230	; 0xe6
 800e220:	e7da      	b.n	800e1d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800e222:	3101      	adds	r1, #1
 800e224:	8701      	strh	r1, [r0, #56]	; 0x38
 800e226:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800e228:	b901      	cbnz	r1, 800e22c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800e22a:	86c5      	strh	r5, [r0, #54]	; 0x36
 800e22c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800e22e:	3901      	subs	r1, #1
 800e230:	b289      	uxth	r1, r1
 800e232:	86c1      	strh	r1, [r0, #54]	; 0x36
 800e234:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800e238:	844c      	strh	r4, [r1, #34]	; 0x22
 800e23a:	e7e6      	b.n	800e20a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800e23c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e240:	f7ff bf48 	b.w	800e0d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800e244:	0801ca98 	.word	0x0801ca98
 800e248:	0801e033 	.word	0x0801e033
 800e24c:	0801cb6a 	.word	0x0801cb6a
 800e250:	0801cb96 	.word	0x0801cb96
 800e254:	0801e0dd 	.word	0x0801e0dd
 800e258:	0801df8c 	.word	0x0801df8c
 800e25c:	0801e3b4 	.word	0x0801e3b4
 800e260:	0801df98 	.word	0x0801df98
 800e264:	0801dfab 	.word	0x0801dfab

0800e268 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800e268:	3a01      	subs	r2, #1
 800e26a:	b570      	push	{r4, r5, r6, lr}
 800e26c:	b292      	uxth	r2, r2
 800e26e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800e272:	42b2      	cmp	r2, r6
 800e274:	d019      	beq.n	800e2aa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800e276:	8c04      	ldrh	r4, [r0, #32]
 800e278:	f831 5b02 	ldrh.w	r5, [r1], #2
 800e27c:	4294      	cmp	r4, r2
 800e27e:	d805      	bhi.n	800e28c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800e280:	4b19      	ldr	r3, [pc, #100]	; (800e2e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800e282:	4a1a      	ldr	r2, [pc, #104]	; (800e2ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800e284:	481a      	ldr	r0, [pc, #104]	; (800e2f0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800e286:	21c5      	movs	r1, #197	; 0xc5
 800e288:	f00c fd06 	bl	801ac98 <__assert_func>
 800e28c:	8bc4      	ldrh	r4, [r0, #30]
 800e28e:	4414      	add	r4, r2
 800e290:	b2a4      	uxth	r4, r4
 800e292:	2c01      	cmp	r4, #1
 800e294:	bf88      	it	hi
 800e296:	3c02      	subhi	r4, #2
 800e298:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800e29c:	3a01      	subs	r2, #1
 800e29e:	8b64      	ldrh	r4, [r4, #26]
 800e2a0:	42ac      	cmp	r4, r5
 800e2a2:	b292      	uxth	r2, r2
 800e2a4:	d0e5      	beq.n	800e272 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800e2a6:	2000      	movs	r0, #0
 800e2a8:	bd70      	pop	{r4, r5, r6, pc}
 800e2aa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800e2ae:	2400      	movs	r4, #0
 800e2b0:	4413      	add	r3, r2
 800e2b2:	b2a2      	uxth	r2, r4
 800e2b4:	429a      	cmp	r2, r3
 800e2b6:	da14      	bge.n	800e2e2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800e2b8:	8f06      	ldrh	r6, [r0, #56]	; 0x38
 800e2ba:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800e2be:	4296      	cmp	r6, r2
 800e2c0:	d802      	bhi.n	800e2c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800e2c2:	4b09      	ldr	r3, [pc, #36]	; (800e2e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800e2c4:	4a0b      	ldr	r2, [pc, #44]	; (800e2f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800e2c6:	e7dd      	b.n	800e284 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800e2c8:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800e2ca:	4432      	add	r2, r6
 800e2cc:	b292      	uxth	r2, r2
 800e2ce:	2a09      	cmp	r2, #9
 800e2d0:	bf88      	it	hi
 800e2d2:	3a0a      	subhi	r2, #10
 800e2d4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800e2d8:	3401      	adds	r4, #1
 800e2da:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800e2dc:	42aa      	cmp	r2, r5
 800e2de:	d0e8      	beq.n	800e2b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800e2e0:	e7e1      	b.n	800e2a6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800e2e2:	2001      	movs	r0, #1
 800e2e4:	e7e0      	b.n	800e2a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800e2e6:	bf00      	nop
 800e2e8:	0801cb96 	.word	0x0801cb96
 800e2ec:	0801e438 	.word	0x0801e438
 800e2f0:	0801cb6a 	.word	0x0801cb6a
 800e2f4:	0801e0dd 	.word	0x0801e0dd

0800e2f8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800e2f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2fc:	4605      	mov	r5, r0
 800e2fe:	4616      	mov	r6, r2
 800e300:	1c8c      	adds	r4, r1, #2
 800e302:	8809      	ldrh	r1, [r1, #0]
 800e304:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800e308:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800e30c:	42b3      	cmp	r3, r6
 800e30e:	d124      	bne.n	800e35a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800e310:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800e314:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800e318:	f001 070f 	and.w	r7, r1, #15
 800e31c:	f8cd 8000 	str.w	r8, [sp]
 800e320:	464b      	mov	r3, r9
 800e322:	4652      	mov	r2, sl
 800e324:	4621      	mov	r1, r4
 800e326:	4628      	mov	r0, r5
 800e328:	f7ff ff9e 	bl	800e268 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800e32c:	4683      	mov	fp, r0
 800e32e:	b168      	cbz	r0, 800e34c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800e330:	eb0a 0109 	add.w	r1, sl, r9
 800e334:	4441      	add	r1, r8
 800e336:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800e33a:	463a      	mov	r2, r7
 800e33c:	4649      	mov	r1, r9
 800e33e:	4628      	mov	r0, r5
 800e340:	f7ff ff42 	bl	800e1c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800e344:	4658      	mov	r0, fp
 800e346:	b003      	add	sp, #12
 800e348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e34c:	eb07 010a 	add.w	r1, r7, sl
 800e350:	4449      	add	r1, r9
 800e352:	4441      	add	r1, r8
 800e354:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800e358:	e7d2      	b.n	800e300 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800e35a:	f04f 0b00 	mov.w	fp, #0
 800e35e:	e7f1      	b.n	800e344 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800e360 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800e360:	b570      	push	{r4, r5, r6, lr}
 800e362:	8810      	ldrh	r0, [r2, #0]
 800e364:	4298      	cmp	r0, r3
 800e366:	d817      	bhi.n	800e398 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e368:	1e48      	subs	r0, r1, #1
 800e36a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800e36e:	4298      	cmp	r0, r3
 800e370:	d312      	bcc.n	800e398 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e372:	2400      	movs	r4, #0
 800e374:	428c      	cmp	r4, r1
 800e376:	d20f      	bcs.n	800e398 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e378:	1860      	adds	r0, r4, r1
 800e37a:	1040      	asrs	r0, r0, #1
 800e37c:	0085      	lsls	r5, r0, #2
 800e37e:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800e382:	42b3      	cmp	r3, r6
 800e384:	d902      	bls.n	800e38c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800e386:	3001      	adds	r0, #1
 800e388:	b284      	uxth	r4, r0
 800e38a:	e7f3      	b.n	800e374 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e38c:	d201      	bcs.n	800e392 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800e38e:	b281      	uxth	r1, r0
 800e390:	e7f0      	b.n	800e374 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e392:	442a      	add	r2, r5
 800e394:	8850      	ldrh	r0, [r2, #2]
 800e396:	bd70      	pop	{r4, r5, r6, pc}
 800e398:	2000      	movs	r0, #0
 800e39a:	e7fc      	b.n	800e396 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800e39c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800e39c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e3a0:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800e3a2:	886f      	ldrh	r7, [r5, #2]
 800e3a4:	4604      	mov	r4, r0
 800e3a6:	087f      	lsrs	r7, r7, #1
 800e3a8:	260b      	movs	r6, #11
 800e3aa:	3e01      	subs	r6, #1
 800e3ac:	d01b      	beq.n	800e3e6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800e3ae:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e3b0:	b92b      	cbnz	r3, 800e3be <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800e3b2:	4b0e      	ldr	r3, [pc, #56]	; (800e3ec <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800e3b4:	4a0e      	ldr	r2, [pc, #56]	; (800e3f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800e3b6:	480f      	ldr	r0, [pc, #60]	; (800e3f4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800e3b8:	21c0      	movs	r1, #192	; 0xc0
 800e3ba:	f00c fc6d 	bl	801ac98 <__assert_func>
 800e3be:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e3c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e3c4:	462a      	mov	r2, r5
 800e3c6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800e3ca:	4639      	mov	r1, r7
 800e3cc:	4643      	mov	r3, r8
 800e3ce:	4620      	mov	r0, r4
 800e3d0:	f7ff ffc6 	bl	800e360 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800e3d4:	b138      	cbz	r0, 800e3e6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800e3d6:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800e3da:	4642      	mov	r2, r8
 800e3dc:	4620      	mov	r0, r4
 800e3de:	f7ff ff8b 	bl	800e2f8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800e3e2:	2800      	cmp	r0, #0
 800e3e4:	d1e1      	bne.n	800e3aa <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800e3e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e3ea:	bf00      	nop
 800e3ec:	0801ca98 	.word	0x0801ca98
 800e3f0:	0801e1af 	.word	0x0801e1af
 800e3f4:	0801cb6a 	.word	0x0801cb6a

0800e3f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800e3f8:	b570      	push	{r4, r5, r6, lr}
 800e3fa:	694a      	ldr	r2, [r1, #20]
 800e3fc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800e3fe:	684b      	ldr	r3, [r1, #4]
 800e400:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800e402:	1b54      	subs	r4, r2, r5
 800e404:	f000 8106 	beq.w	800e614 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800e408:	1b9b      	subs	r3, r3, r6
 800e40a:	d003      	beq.n	800e414 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800e40c:	4363      	muls	r3, r4
 800e40e:	2210      	movs	r2, #16
 800e410:	fb93 f3f2 	sdiv	r3, r3, r2
 800e414:	680c      	ldr	r4, [r1, #0]
 800e416:	698a      	ldr	r2, [r1, #24]
 800e418:	1b65      	subs	r5, r4, r5
 800e41a:	f000 80fd 	beq.w	800e618 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800e41e:	1b92      	subs	r2, r2, r6
 800e420:	d003      	beq.n	800e42a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800e422:	436a      	muls	r2, r5
 800e424:	2410      	movs	r4, #16
 800e426:	fb92 f2f4 	sdiv	r2, r2, r4
 800e42a:	1a9b      	subs	r3, r3, r2
 800e42c:	ee07 3a90 	vmov	s15, r3
 800e430:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800e654 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800e434:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e438:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e43c:	ee67 7a84 	vmul.f32	s15, s15, s8
 800e440:	460a      	mov	r2, r1
 800e442:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800e446:	4603      	mov	r3, r0
 800e448:	f100 040c 	add.w	r4, r0, #12
 800e44c:	eeb1 6a43 	vneg.f32	s12, s6
 800e450:	edd2 7a02 	vldr	s15, [r2, #8]
 800e454:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800e458:	3214      	adds	r2, #20
 800e45a:	ece3 6a01 	vstmia	r3!, {s13}
 800e45e:	ed52 7a02 	vldr	s15, [r2, #-8]
 800e462:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e466:	429c      	cmp	r4, r3
 800e468:	edc3 7a02 	vstr	s15, [r3, #8]
 800e46c:	ed52 7a01 	vldr	s15, [r2, #-4]
 800e470:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e474:	edc3 7a05 	vstr	s15, [r3, #20]
 800e478:	d1ea      	bne.n	800e450 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800e47a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800e47c:	698b      	ldr	r3, [r1, #24]
 800e47e:	edd0 4a02 	vldr	s9, [r0, #8]
 800e482:	edd0 3a00 	vldr	s7, [r0]
 800e486:	edd0 6a01 	vldr	s13, [r0, #4]
 800e48a:	ed90 5a05 	vldr	s10, [r0, #20]
 800e48e:	ed90 2a03 	vldr	s4, [r0, #12]
 800e492:	edd0 5a04 	vldr	s11, [r0, #16]
 800e496:	ed90 1a07 	vldr	s2, [r0, #28]
 800e49a:	edd0 2a06 	vldr	s5, [r0, #24]
 800e49e:	1a9b      	subs	r3, r3, r2
 800e4a0:	ee07 3a90 	vmov	s15, r3
 800e4a4:	684b      	ldr	r3, [r1, #4]
 800e4a6:	1a9b      	subs	r3, r3, r2
 800e4a8:	ee07 3a10 	vmov	s14, r3
 800e4ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e4b0:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800e4b4:	ee67 7a84 	vmul.f32	s15, s15, s8
 800e4b8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800e4bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e4c0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800e4c4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e4c8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800e4cc:	eee6 7a87 	vfma.f32	s15, s13, s14
 800e4d0:	ee32 5a45 	vsub.f32	s10, s4, s10
 800e4d4:	ee67 7a83 	vmul.f32	s15, s15, s6
 800e4d8:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800e4dc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800e4de:	694a      	ldr	r2, [r1, #20]
 800e4e0:	1b13      	subs	r3, r2, r4
 800e4e2:	ee07 3a10 	vmov	s14, r3
 800e4e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e4ea:	680b      	ldr	r3, [r1, #0]
 800e4ec:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e4f0:	1b1b      	subs	r3, r3, r4
 800e4f2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800e4f6:	ee07 3a10 	vmov	s14, r3
 800e4fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e4fe:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e502:	eee6 4a87 	vfma.f32	s9, s13, s14
 800e506:	ee64 4a86 	vmul.f32	s9, s9, s12
 800e50a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800e50e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800e510:	698b      	ldr	r3, [r1, #24]
 800e512:	1a9b      	subs	r3, r3, r2
 800e514:	ee06 3a90 	vmov	s13, r3
 800e518:	684b      	ldr	r3, [r1, #4]
 800e51a:	1a9b      	subs	r3, r3, r2
 800e51c:	ee07 3a10 	vmov	s14, r3
 800e520:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800e524:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e528:	ee66 6a84 	vmul.f32	s13, s13, s8
 800e52c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e530:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800e534:	eee5 6a87 	vfma.f32	s13, s11, s14
 800e538:	ee66 6a83 	vmul.f32	s13, s13, s6
 800e53c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800e540:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800e542:	694a      	ldr	r2, [r1, #20]
 800e544:	1b13      	subs	r3, r2, r4
 800e546:	ee07 3a10 	vmov	s14, r3
 800e54a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e54e:	680b      	ldr	r3, [r1, #0]
 800e550:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e554:	1b1b      	subs	r3, r3, r4
 800e556:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800e55a:	ee07 3a10 	vmov	s14, r3
 800e55e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e562:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e566:	eea5 5a87 	vfma.f32	s10, s11, s14
 800e56a:	edd0 5a08 	vldr	s11, [r0, #32]
 800e56e:	ee25 5a06 	vmul.f32	s10, s10, s12
 800e572:	ee31 1a65 	vsub.f32	s2, s2, s11
 800e576:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800e57a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800e57c:	698b      	ldr	r3, [r1, #24]
 800e57e:	1a9b      	subs	r3, r3, r2
 800e580:	ee07 3a10 	vmov	s14, r3
 800e584:	684b      	ldr	r3, [r1, #4]
 800e586:	1a9b      	subs	r3, r3, r2
 800e588:	ee01 3a90 	vmov	s3, r3
 800e58c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e590:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800e594:	ee27 7a04 	vmul.f32	s14, s14, s8
 800e598:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800e59c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800e5a0:	ee61 1a84 	vmul.f32	s3, s3, s8
 800e5a4:	eea1 7a21 	vfma.f32	s14, s2, s3
 800e5a8:	ee27 7a03 	vmul.f32	s14, s14, s6
 800e5ac:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800e5b0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800e5b2:	694a      	ldr	r2, [r1, #20]
 800e5b4:	1b13      	subs	r3, r2, r4
 800e5b6:	ee03 3a10 	vmov	s6, r3
 800e5ba:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800e5be:	680b      	ldr	r3, [r1, #0]
 800e5c0:	ee23 3a04 	vmul.f32	s6, s6, s8
 800e5c4:	1b1b      	subs	r3, r3, r4
 800e5c6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800e5ca:	ee03 3a10 	vmov	s6, r3
 800e5ce:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800e5d2:	ee23 4a04 	vmul.f32	s8, s6, s8
 800e5d6:	eee1 5a04 	vfma.f32	s11, s2, s8
 800e5da:	ee25 6a86 	vmul.f32	s12, s11, s12
 800e5de:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800e5e2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800e5e6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800e5ea:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800e5ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e5f2:	dd13      	ble.n	800e61c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800e5f4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e5f8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800e5fc:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e5fe:	eee3 7a87 	vfma.f32	s15, s7, s14
 800e602:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800e606:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e60a:	dd15      	ble.n	800e638 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800e60c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e610:	6403      	str	r3, [r0, #64]	; 0x40
 800e612:	bd70      	pop	{r4, r5, r6, pc}
 800e614:	4623      	mov	r3, r4
 800e616:	e6fd      	b.n	800e414 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800e618:	462a      	mov	r2, r5
 800e61a:	e706      	b.n	800e42a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800e61c:	d502      	bpl.n	800e624 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800e61e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800e622:	e7e9      	b.n	800e5f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800e624:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800e628:	eea3 2a85 	vfma.f32	s4, s7, s10
 800e62c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800e630:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e634:	dade      	bge.n	800e5f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800e636:	e7f2      	b.n	800e61e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800e638:	d502      	bpl.n	800e640 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800e63a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800e63e:	e7e7      	b.n	800e610 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800e640:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800e644:	eee3 4a86 	vfma.f32	s9, s7, s12
 800e648:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800e64c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e650:	dadc      	bge.n	800e60c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800e652:	e7f2      	b.n	800e63a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800e654:	3d800000 	.word	0x3d800000

0800e658 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800e658:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e65c:	2714      	movs	r7, #20
 800e65e:	435f      	muls	r7, r3
 800e660:	eb02 0c07 	add.w	ip, r2, r7
 800e664:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800e668:	f115 0e0f 	adds.w	lr, r5, #15
 800e66c:	d432      	bmi.n	800e6d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x7c>
 800e66e:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800e672:	9c08      	ldr	r4, [sp, #32]
 800e674:	f8c0 e014 	str.w	lr, [r0, #20]
 800e678:	2614      	movs	r6, #20
 800e67a:	4366      	muls	r6, r4
 800e67c:	eb02 0806 	add.w	r8, r2, r6
 800e680:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800e684:	f115 040f 	adds.w	r4, r5, #15
 800e688:	d430      	bmi.n	800e6ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800e68a:	1124      	asrs	r4, r4, #4
 800e68c:	eba4 040e 	sub.w	r4, r4, lr
 800e690:	6184      	str	r4, [r0, #24]
 800e692:	2c00      	cmp	r4, #0
 800e694:	f000 80a9 	beq.w	800e7ea <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x192>
 800e698:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800e69c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800e6a0:	5995      	ldr	r5, [r2, r6]
 800e6a2:	eba4 0809 	sub.w	r8, r4, r9
 800e6a6:	59d4      	ldr	r4, [r2, r7]
 800e6a8:	eba5 0a04 	sub.w	sl, r5, r4
 800e6ac:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800e6b0:	fb0e fe05 	mul.w	lr, lr, r5
 800e6b4:	fb0a ee19 	mls	lr, sl, r9, lr
 800e6b8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800e6bc:	fb08 e404 	mla	r4, r8, r4, lr
 800e6c0:	3c01      	subs	r4, #1
 800e6c2:	2e00      	cmp	r6, #0
 800e6c4:	4434      	add	r4, r6
 800e6c6:	dc1d      	bgt.n	800e704 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xac>
 800e6c8:	4b5a      	ldr	r3, [pc, #360]	; (800e834 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1dc>)
 800e6ca:	4a5b      	ldr	r2, [pc, #364]	; (800e838 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e0>)
 800e6cc:	485b      	ldr	r0, [pc, #364]	; (800e83c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e4>)
 800e6ce:	21f7      	movs	r1, #247	; 0xf7
 800e6d0:	f00c fae2 	bl	801ac98 <__assert_func>
 800e6d4:	f1c5 0501 	rsb	r5, r5, #1
 800e6d8:	f015 050f 	ands.w	r5, r5, #15
 800e6dc:	bf18      	it	ne
 800e6de:	2501      	movne	r5, #1
 800e6e0:	2410      	movs	r4, #16
 800e6e2:	fb9e fef4 	sdiv	lr, lr, r4
 800e6e6:	ebae 0e05 	sub.w	lr, lr, r5
 800e6ea:	e7c2      	b.n	800e672 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1a>
 800e6ec:	f1c5 0501 	rsb	r5, r5, #1
 800e6f0:	f015 050f 	ands.w	r5, r5, #15
 800e6f4:	bf18      	it	ne
 800e6f6:	2501      	movne	r5, #1
 800e6f8:	f04f 0910 	mov.w	r9, #16
 800e6fc:	fb94 f4f9 	sdiv	r4, r4, r9
 800e700:	1b64      	subs	r4, r4, r5
 800e702:	e7c3      	b.n	800e68c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x34>
 800e704:	2c00      	cmp	r4, #0
 800e706:	db72      	blt.n	800e7ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x196>
 800e708:	fb94 fef6 	sdiv	lr, r4, r6
 800e70c:	f8c0 e000 	str.w	lr, [r0]
 800e710:	fb06 441e 	mls	r4, r6, lr, r4
 800e714:	6104      	str	r4, [r0, #16]
 800e716:	2d00      	cmp	r5, #0
 800e718:	db7b      	blt.n	800e812 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1ba>
 800e71a:	fb95 f4f6 	sdiv	r4, r5, r6
 800e71e:	6044      	str	r4, [r0, #4]
 800e720:	fb06 5514 	mls	r5, r6, r4, r5
 800e724:	6085      	str	r5, [r0, #8]
 800e726:	60c6      	str	r6, [r0, #12]
 800e728:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800e72c:	6945      	ldr	r5, [r0, #20]
 800e72e:	59d2      	ldr	r2, [r2, r7]
 800e730:	eddf 6a43 	vldr	s13, [pc, #268]	; 800e840 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1e8>
 800e734:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800e738:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800e73c:	ee07 4a10 	vmov	s14, r4
 800e740:	6804      	ldr	r4, [r0, #0]
 800e742:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800e746:	ee07 2a90 	vmov	s15, r2
 800e74a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e74e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e752:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800e756:	ee27 7a26 	vmul.f32	s14, s14, s13
 800e75a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800e75e:	edd3 6a00 	vldr	s13, [r3]
 800e762:	eee6 6a07 	vfma.f32	s13, s12, s14
 800e766:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 800e76a:	eee6 6a27 	vfma.f32	s13, s12, s15
 800e76e:	edc0 6a07 	vstr	s13, [r0, #28]
 800e772:	edd0 6a01 	vldr	s13, [r0, #4]
 800e776:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 800e77a:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800e77e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800e782:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800e786:	ed80 6a08 	vstr	s12, [r0, #32]
 800e78a:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800e78c:	6242      	str	r2, [r0, #36]	; 0x24
 800e78e:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 800e792:	ed93 6a03 	vldr	s12, [r3, #12]
 800e796:	eea5 6a87 	vfma.f32	s12, s11, s14
 800e79a:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800e79e:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800e7a2:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 800e7a6:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800e7aa:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 800e7ae:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800e7b2:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 800e7b6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800e7b8:	6302      	str	r2, [r0, #48]	; 0x30
 800e7ba:	ed93 6a06 	vldr	s12, [r3, #24]
 800e7be:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 800e7c2:	eea5 6a87 	vfma.f32	s12, s11, s14
 800e7c6:	eeb0 7a46 	vmov.f32	s14, s12
 800e7ca:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 800e7ce:	eea6 7a27 	vfma.f32	s14, s12, s15
 800e7d2:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800e7d6:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 800e7da:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 800e7de:	eee6 7a87 	vfma.f32	s15, s13, s14
 800e7e2:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 800e7e6:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 800e7e8:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e7ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e7ee:	4264      	negs	r4, r4
 800e7f0:	fb94 fef6 	sdiv	lr, r4, r6
 800e7f4:	f1ce 0800 	rsb	r8, lr, #0
 800e7f8:	fb06 441e 	mls	r4, r6, lr, r4
 800e7fc:	f8c0 8000 	str.w	r8, [r0]
 800e800:	6104      	str	r4, [r0, #16]
 800e802:	2c00      	cmp	r4, #0
 800e804:	d087      	beq.n	800e716 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbe>
 800e806:	ea6f 0e0e 	mvn.w	lr, lr
 800e80a:	f8c0 e000 	str.w	lr, [r0]
 800e80e:	1b34      	subs	r4, r6, r4
 800e810:	e780      	b.n	800e714 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xbc>
 800e812:	426d      	negs	r5, r5
 800e814:	fb95 f4f6 	sdiv	r4, r5, r6
 800e818:	f1c4 0e00 	rsb	lr, r4, #0
 800e81c:	fb06 5514 	mls	r5, r6, r4, r5
 800e820:	f8c0 e004 	str.w	lr, [r0, #4]
 800e824:	6085      	str	r5, [r0, #8]
 800e826:	2d00      	cmp	r5, #0
 800e828:	f43f af7d 	beq.w	800e726 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xce>
 800e82c:	43e4      	mvns	r4, r4
 800e82e:	6044      	str	r4, [r0, #4]
 800e830:	1b75      	subs	r5, r6, r5
 800e832:	e777      	b.n	800e724 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0xcc>
 800e834:	0801e509 	.word	0x0801e509
 800e838:	0801e548 	.word	0x0801e548
 800e83c:	0801e519 	.word	0x0801e519
 800e840:	3d800000 	.word	0x3d800000

0800e844 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800e844:	4b01      	ldr	r3, [pc, #4]	; (800e84c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800e846:	6018      	str	r0, [r3, #0]
 800e848:	4770      	bx	lr
 800e84a:	bf00      	nop
 800e84c:	2000a550 	.word	0x2000a550

0800e850 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800e850:	4b06      	ldr	r3, [pc, #24]	; (800e86c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800e852:	881a      	ldrh	r2, [r3, #0]
 800e854:	4282      	cmp	r2, r0
 800e856:	d807      	bhi.n	800e868 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800e858:	4b05      	ldr	r3, [pc, #20]	; (800e870 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800e85a:	881b      	ldrh	r3, [r3, #0]
 800e85c:	4413      	add	r3, r2
 800e85e:	4298      	cmp	r0, r3
 800e860:	bfac      	ite	ge
 800e862:	2000      	movge	r0, #0
 800e864:	2001      	movlt	r0, #1
 800e866:	4770      	bx	lr
 800e868:	2000      	movs	r0, #0
 800e86a:	4770      	bx	lr
 800e86c:	2000a570 	.word	0x2000a570
 800e870:	2000a574 	.word	0x2000a574

0800e874 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800e874:	b508      	push	{r3, lr}
 800e876:	4601      	mov	r1, r0
 800e878:	f7ff ffea 	bl	800e850 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800e87c:	b118      	cbz	r0, 800e886 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800e87e:	4b02      	ldr	r3, [pc, #8]	; (800e888 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800e880:	681b      	ldr	r3, [r3, #0]
 800e882:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800e886:	bd08      	pop	{r3, pc}
 800e888:	2000a554 	.word	0x2000a554

0800e88c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800e88c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e88e:	4c24      	ldr	r4, [pc, #144]	; (800e920 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800e890:	6823      	ldr	r3, [r4, #0]
 800e892:	2b00      	cmp	r3, #0
 800e894:	d042      	beq.n	800e91c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800e896:	4a23      	ldr	r2, [pc, #140]	; (800e924 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800e898:	4d23      	ldr	r5, [pc, #140]	; (800e928 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800e89a:	8811      	ldrh	r1, [r2, #0]
 800e89c:	f8b5 c000 	ldrh.w	ip, [r5]
 800e8a0:	4822      	ldr	r0, [pc, #136]	; (800e92c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800e8a2:	4461      	add	r1, ip
 800e8a4:	1c4a      	adds	r2, r1, #1
 800e8a6:	f022 0201 	bic.w	r2, r2, #1
 800e8aa:	008f      	lsls	r7, r1, #2
 800e8ac:	0412      	lsls	r2, r2, #16
 800e8ae:	19de      	adds	r6, r3, r7
 800e8b0:	0c12      	lsrs	r2, r2, #16
 800e8b2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800e8b6:	6006      	str	r6, [r0, #0]
 800e8b8:	4e1d      	ldr	r6, [pc, #116]	; (800e930 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800e8ba:	19da      	adds	r2, r3, r7
 800e8bc:	6032      	str	r2, [r6, #0]
 800e8be:	220e      	movs	r2, #14
 800e8c0:	fb02 f20c 	mul.w	r2, r2, ip
 800e8c4:	3203      	adds	r2, #3
 800e8c6:	f022 0203 	bic.w	r2, r2, #3
 800e8ca:	443a      	add	r2, r7
 800e8cc:	4f19      	ldr	r7, [pc, #100]	; (800e934 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800e8ce:	4413      	add	r3, r2
 800e8d0:	603b      	str	r3, [r7, #0]
 800e8d2:	4f19      	ldr	r7, [pc, #100]	; (800e938 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800e8d4:	2300      	movs	r3, #0
 800e8d6:	803b      	strh	r3, [r7, #0]
 800e8d8:	4f18      	ldr	r7, [pc, #96]	; (800e93c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800e8da:	683f      	ldr	r7, [r7, #0]
 800e8dc:	1aba      	subs	r2, r7, r2
 800e8de:	4f18      	ldr	r7, [pc, #96]	; (800e940 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800e8e0:	603a      	str	r2, [r7, #0]
 800e8e2:	4a18      	ldr	r2, [pc, #96]	; (800e944 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800e8e4:	469c      	mov	ip, r3
 800e8e6:	8013      	strh	r3, [r2, #0]
 800e8e8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800e8ec:	428b      	cmp	r3, r1
 800e8ee:	d10d      	bne.n	800e90c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800e8f0:	882d      	ldrh	r5, [r5, #0]
 800e8f2:	6830      	ldr	r0, [r6, #0]
 800e8f4:	2300      	movs	r3, #0
 800e8f6:	240e      	movs	r4, #14
 800e8f8:	429d      	cmp	r5, r3
 800e8fa:	d90f      	bls.n	800e91c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800e8fc:	fb04 0203 	mla	r2, r4, r3, r0
 800e900:	3301      	adds	r3, #1
 800e902:	7b11      	ldrb	r1, [r2, #12]
 800e904:	f36f 1145 	bfc	r1, #5, #1
 800e908:	7311      	strb	r1, [r2, #12]
 800e90a:	e7f5      	b.n	800e8f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800e90c:	6822      	ldr	r2, [r4, #0]
 800e90e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800e912:	6802      	ldr	r2, [r0, #0]
 800e914:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800e918:	3301      	adds	r3, #1
 800e91a:	e7e7      	b.n	800e8ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800e91c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e91e:	bf00      	nop
 800e920:	2000a554 	.word	0x2000a554
 800e924:	2000a570 	.word	0x2000a570
 800e928:	2000a574 	.word	0x2000a574
 800e92c:	2000a568 	.word	0x2000a568
 800e930:	2000a558 	.word	0x2000a558
 800e934:	2000a560 	.word	0x2000a560
 800e938:	2000a572 	.word	0x2000a572
 800e93c:	2000a55c 	.word	0x2000a55c
 800e940:	2000a56c 	.word	0x2000a56c
 800e944:	2000a564 	.word	0x2000a564

0800e948 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800e948:	b510      	push	{r4, lr}
 800e94a:	4b10      	ldr	r3, [pc, #64]	; (800e98c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800e94c:	681b      	ldr	r3, [r3, #0]
 800e94e:	b9db      	cbnz	r3, 800e988 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800e950:	b1d1      	cbz	r1, 800e988 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800e952:	4b0f      	ldr	r3, [pc, #60]	; (800e990 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800e954:	801a      	strh	r2, [r3, #0]
 800e956:	4b0f      	ldr	r3, [pc, #60]	; (800e994 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800e958:	881b      	ldrh	r3, [r3, #0]
 800e95a:	b292      	uxth	r2, r2
 800e95c:	240e      	movs	r4, #14
 800e95e:	4413      	add	r3, r2
 800e960:	4362      	muls	r2, r4
 800e962:	2406      	movs	r4, #6
 800e964:	fb04 2203 	mla	r2, r4, r3, r2
 800e968:	428a      	cmp	r2, r1
 800e96a:	d305      	bcc.n	800e978 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800e96c:	4b0a      	ldr	r3, [pc, #40]	; (800e998 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800e96e:	4a0b      	ldr	r2, [pc, #44]	; (800e99c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800e970:	480b      	ldr	r0, [pc, #44]	; (800e9a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800e972:	2134      	movs	r1, #52	; 0x34
 800e974:	f00c f990 	bl	801ac98 <__assert_func>
 800e978:	4b0a      	ldr	r3, [pc, #40]	; (800e9a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800e97a:	6019      	str	r1, [r3, #0]
 800e97c:	4b0a      	ldr	r3, [pc, #40]	; (800e9a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800e97e:	6018      	str	r0, [r3, #0]
 800e980:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e984:	f7ff bf82 	b.w	800e88c <_ZN8touchgfx6Bitmap10clearCacheEv>
 800e988:	bd10      	pop	{r4, pc}
 800e98a:	bf00      	nop
 800e98c:	2000a560 	.word	0x2000a560
 800e990:	2000a574 	.word	0x2000a574
 800e994:	2000a570 	.word	0x2000a570
 800e998:	0801e5e6 	.word	0x0801e5e6
 800e99c:	0801e63f 	.word	0x0801e63f
 800e9a0:	0801e5c1 	.word	0x0801e5c1
 800e9a4:	2000a55c 	.word	0x2000a55c
 800e9a8:	2000a554 	.word	0x2000a554

0800e9ac <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800e9ac:	b470      	push	{r4, r5, r6}
 800e9ae:	4c07      	ldr	r4, [pc, #28]	; (800e9cc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800e9b0:	6826      	ldr	r6, [r4, #0]
 800e9b2:	4605      	mov	r5, r0
 800e9b4:	4610      	mov	r0, r2
 800e9b6:	9a03      	ldr	r2, [sp, #12]
 800e9b8:	b936      	cbnz	r6, 800e9c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800e9ba:	6025      	str	r5, [r4, #0]
 800e9bc:	4c04      	ldr	r4, [pc, #16]	; (800e9d0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800e9be:	8021      	strh	r1, [r4, #0]
 800e9c0:	bc70      	pop	{r4, r5, r6}
 800e9c2:	4619      	mov	r1, r3
 800e9c4:	f7ff bfc0 	b.w	800e948 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800e9c8:	bc70      	pop	{r4, r5, r6}
 800e9ca:	4770      	bx	lr
 800e9cc:	2000a578 	.word	0x2000a578
 800e9d0:	2000a570 	.word	0x2000a570

0800e9d4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800e9d4:	b508      	push	{r3, lr}
 800e9d6:	4b17      	ldr	r3, [pc, #92]	; (800ea34 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800e9d8:	6819      	ldr	r1, [r3, #0]
 800e9da:	b931      	cbnz	r1, 800e9ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800e9dc:	4b16      	ldr	r3, [pc, #88]	; (800ea38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800e9de:	4a17      	ldr	r2, [pc, #92]	; (800ea3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800e9e0:	4817      	ldr	r0, [pc, #92]	; (800ea40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800e9e2:	f240 4184 	movw	r1, #1156	; 0x484
 800e9e6:	f00c f957 	bl	801ac98 <__assert_func>
 800e9ea:	4a16      	ldr	r2, [pc, #88]	; (800ea44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800e9ec:	8803      	ldrh	r3, [r0, #0]
 800e9ee:	8812      	ldrh	r2, [r2, #0]
 800e9f0:	4293      	cmp	r3, r2
 800e9f2:	d204      	bcs.n	800e9fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800e9f4:	2214      	movs	r2, #20
 800e9f6:	fb02 1303 	mla	r3, r2, r3, r1
 800e9fa:	8918      	ldrh	r0, [r3, #8]
 800e9fc:	bd08      	pop	{r3, pc}
 800e9fe:	4912      	ldr	r1, [pc, #72]	; (800ea48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x74>)
 800ea00:	8809      	ldrh	r1, [r1, #0]
 800ea02:	4411      	add	r1, r2
 800ea04:	428b      	cmp	r3, r1
 800ea06:	da06      	bge.n	800ea16 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800ea08:	1a9b      	subs	r3, r3, r2
 800ea0a:	4a10      	ldr	r2, [pc, #64]	; (800ea4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x78>)
 800ea0c:	6812      	ldr	r2, [r2, #0]
 800ea0e:	210e      	movs	r1, #14
 800ea10:	fb01 2303 	mla	r3, r1, r3, r2
 800ea14:	e7f1      	b.n	800e9fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800ea16:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ea1a:	4293      	cmp	r3, r2
 800ea1c:	d107      	bne.n	800ea2e <_ZNK8touchgfx6Bitmap8getWidthEv+0x5a>
 800ea1e:	4b0c      	ldr	r3, [pc, #48]	; (800ea50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x7c>)
 800ea20:	781b      	ldrb	r3, [r3, #0]
 800ea22:	b913      	cbnz	r3, 800ea2a <_ZNK8touchgfx6Bitmap8getWidthEv+0x56>
 800ea24:	4b0b      	ldr	r3, [pc, #44]	; (800ea54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x80>)
 800ea26:	8818      	ldrh	r0, [r3, #0]
 800ea28:	e7e8      	b.n	800e9fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800ea2a:	4b0b      	ldr	r3, [pc, #44]	; (800ea58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x84>)
 800ea2c:	e7fb      	b.n	800ea26 <_ZNK8touchgfx6Bitmap8getWidthEv+0x52>
 800ea2e:	2000      	movs	r0, #0
 800ea30:	e7e4      	b.n	800e9fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800ea32:	bf00      	nop
 800ea34:	2000a578 	.word	0x2000a578
 800ea38:	0801da88 	.word	0x0801da88
 800ea3c:	0801e6ec 	.word	0x0801e6ec
 800ea40:	0801e5c1 	.word	0x0801e5c1
 800ea44:	2000a570 	.word	0x2000a570
 800ea48:	2000a574 	.word	0x2000a574
 800ea4c:	2000a558 	.word	0x2000a558
 800ea50:	2000a4e8 	.word	0x2000a4e8
 800ea54:	2000a4ea 	.word	0x2000a4ea
 800ea58:	2000a4ec 	.word	0x2000a4ec

0800ea5c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800ea5c:	b508      	push	{r3, lr}
 800ea5e:	4b17      	ldr	r3, [pc, #92]	; (800eabc <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800ea60:	6819      	ldr	r1, [r3, #0]
 800ea62:	b931      	cbnz	r1, 800ea72 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800ea64:	4b16      	ldr	r3, [pc, #88]	; (800eac0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800ea66:	4a17      	ldr	r2, [pc, #92]	; (800eac4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800ea68:	4817      	ldr	r0, [pc, #92]	; (800eac8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800ea6a:	f44f 6193 	mov.w	r1, #1176	; 0x498
 800ea6e:	f00c f913 	bl	801ac98 <__assert_func>
 800ea72:	4a16      	ldr	r2, [pc, #88]	; (800eacc <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800ea74:	8803      	ldrh	r3, [r0, #0]
 800ea76:	8812      	ldrh	r2, [r2, #0]
 800ea78:	4293      	cmp	r3, r2
 800ea7a:	d204      	bcs.n	800ea86 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800ea7c:	2214      	movs	r2, #20
 800ea7e:	fb02 1303 	mla	r3, r2, r3, r1
 800ea82:	8958      	ldrh	r0, [r3, #10]
 800ea84:	bd08      	pop	{r3, pc}
 800ea86:	4912      	ldr	r1, [pc, #72]	; (800ead0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x74>)
 800ea88:	8809      	ldrh	r1, [r1, #0]
 800ea8a:	4411      	add	r1, r2
 800ea8c:	428b      	cmp	r3, r1
 800ea8e:	da06      	bge.n	800ea9e <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800ea90:	1a9b      	subs	r3, r3, r2
 800ea92:	4a10      	ldr	r2, [pc, #64]	; (800ead4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x78>)
 800ea94:	6812      	ldr	r2, [r2, #0]
 800ea96:	210e      	movs	r1, #14
 800ea98:	fb01 2303 	mla	r3, r1, r3, r2
 800ea9c:	e7f1      	b.n	800ea82 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800ea9e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800eaa2:	4293      	cmp	r3, r2
 800eaa4:	d107      	bne.n	800eab6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5a>
 800eaa6:	4b0c      	ldr	r3, [pc, #48]	; (800ead8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x7c>)
 800eaa8:	781b      	ldrb	r3, [r3, #0]
 800eaaa:	b913      	cbnz	r3, 800eab2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x56>
 800eaac:	4b0b      	ldr	r3, [pc, #44]	; (800eadc <_ZNK8touchgfx6Bitmap9getHeightEv+0x80>)
 800eaae:	8818      	ldrh	r0, [r3, #0]
 800eab0:	e7e8      	b.n	800ea84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800eab2:	4b0b      	ldr	r3, [pc, #44]	; (800eae0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x84>)
 800eab4:	e7fb      	b.n	800eaae <_ZNK8touchgfx6Bitmap9getHeightEv+0x52>
 800eab6:	2000      	movs	r0, #0
 800eab8:	e7e4      	b.n	800ea84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800eaba:	bf00      	nop
 800eabc:	2000a578 	.word	0x2000a578
 800eac0:	0801da88 	.word	0x0801da88
 800eac4:	0801e718 	.word	0x0801e718
 800eac8:	0801e5c1 	.word	0x0801e5c1
 800eacc:	2000a570 	.word	0x2000a570
 800ead0:	2000a574 	.word	0x2000a574
 800ead4:	2000a558 	.word	0x2000a558
 800ead8:	2000a4e8 	.word	0x2000a4e8
 800eadc:	2000a4ec 	.word	0x2000a4ec
 800eae0:	2000a4ea 	.word	0x2000a4ea

0800eae4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800eae4:	b510      	push	{r4, lr}
 800eae6:	4b23      	ldr	r3, [pc, #140]	; (800eb74 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800eae8:	681c      	ldr	r4, [r3, #0]
 800eaea:	b934      	cbnz	r4, 800eafa <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800eaec:	4b22      	ldr	r3, [pc, #136]	; (800eb78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800eaee:	4a23      	ldr	r2, [pc, #140]	; (800eb7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800eaf0:	4823      	ldr	r0, [pc, #140]	; (800eb80 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800eaf2:	f240 41ac 	movw	r1, #1196	; 0x4ac
 800eaf6:	f00c f8cf 	bl	801ac98 <__assert_func>
 800eafa:	4a22      	ldr	r2, [pc, #136]	; (800eb84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800eafc:	880b      	ldrh	r3, [r1, #0]
 800eafe:	8812      	ldrh	r2, [r2, #0]
 800eb00:	4293      	cmp	r3, r2
 800eb02:	d211      	bcs.n	800eb28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800eb04:	2214      	movs	r2, #20
 800eb06:	fb02 4303 	mla	r3, r2, r3, r4
 800eb0a:	8a1a      	ldrh	r2, [r3, #16]
 800eb0c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800eb10:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800eb14:	8a5b      	ldrh	r3, [r3, #18]
 800eb16:	8004      	strh	r4, [r0, #0]
 800eb18:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800eb1c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800eb20:	8041      	strh	r1, [r0, #2]
 800eb22:	8082      	strh	r2, [r0, #4]
 800eb24:	80c3      	strh	r3, [r0, #6]
 800eb26:	e00e      	b.n	800eb46 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800eb28:	4917      	ldr	r1, [pc, #92]	; (800eb88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800eb2a:	8809      	ldrh	r1, [r1, #0]
 800eb2c:	4411      	add	r1, r2
 800eb2e:	428b      	cmp	r3, r1
 800eb30:	da0a      	bge.n	800eb48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800eb32:	1a9b      	subs	r3, r3, r2
 800eb34:	4a15      	ldr	r2, [pc, #84]	; (800eb8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800eb36:	6812      	ldr	r2, [r2, #0]
 800eb38:	210e      	movs	r1, #14
 800eb3a:	fb01 2303 	mla	r3, r1, r3, r2
 800eb3e:	681a      	ldr	r2, [r3, #0]
 800eb40:	6002      	str	r2, [r0, #0]
 800eb42:	685a      	ldr	r2, [r3, #4]
 800eb44:	6042      	str	r2, [r0, #4]
 800eb46:	bd10      	pop	{r4, pc}
 800eb48:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800eb4c:	4293      	cmp	r3, r2
 800eb4e:	d10b      	bne.n	800eb68 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800eb50:	4b0f      	ldr	r3, [pc, #60]	; (800eb90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800eb52:	f9b3 1000 	ldrsh.w	r1, [r3]
 800eb56:	4b0f      	ldr	r3, [pc, #60]	; (800eb94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800eb58:	8081      	strh	r1, [r0, #4]
 800eb5a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800eb5e:	80c2      	strh	r2, [r0, #6]
 800eb60:	2300      	movs	r3, #0
 800eb62:	8003      	strh	r3, [r0, #0]
 800eb64:	8043      	strh	r3, [r0, #2]
 800eb66:	e7ee      	b.n	800eb46 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800eb68:	2300      	movs	r3, #0
 800eb6a:	8003      	strh	r3, [r0, #0]
 800eb6c:	8043      	strh	r3, [r0, #2]
 800eb6e:	8083      	strh	r3, [r0, #4]
 800eb70:	e7d8      	b.n	800eb24 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800eb72:	bf00      	nop
 800eb74:	2000a578 	.word	0x2000a578
 800eb78:	0801da88 	.word	0x0801da88
 800eb7c:	0801e685 	.word	0x0801e685
 800eb80:	0801e5c1 	.word	0x0801e5c1
 800eb84:	2000a570 	.word	0x2000a570
 800eb88:	2000a574 	.word	0x2000a574
 800eb8c:	2000a558 	.word	0x2000a558
 800eb90:	2000a4e4 	.word	0x2000a4e4
 800eb94:	2000a4e6 	.word	0x2000a4e6

0800eb98 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800eb98:	4b18      	ldr	r3, [pc, #96]	; (800ebfc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800eb9a:	681b      	ldr	r3, [r3, #0]
 800eb9c:	b34b      	cbz	r3, 800ebf2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800eb9e:	4a18      	ldr	r2, [pc, #96]	; (800ec00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800eba0:	8800      	ldrh	r0, [r0, #0]
 800eba2:	8812      	ldrh	r2, [r2, #0]
 800eba4:	4290      	cmp	r0, r2
 800eba6:	d211      	bcs.n	800ebcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800eba8:	2214      	movs	r2, #20
 800ebaa:	fb02 3300 	mla	r3, r2, r0, r3
 800ebae:	8a1a      	ldrh	r2, [r3, #16]
 800ebb0:	8919      	ldrh	r1, [r3, #8]
 800ebb2:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800ebb6:	428a      	cmp	r2, r1
 800ebb8:	db1d      	blt.n	800ebf6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800ebba:	8a58      	ldrh	r0, [r3, #18]
 800ebbc:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800ebc0:	895b      	ldrh	r3, [r3, #10]
 800ebc2:	4298      	cmp	r0, r3
 800ebc4:	bfac      	ite	ge
 800ebc6:	2000      	movge	r0, #0
 800ebc8:	2001      	movlt	r0, #1
 800ebca:	4770      	bx	lr
 800ebcc:	4b0d      	ldr	r3, [pc, #52]	; (800ec04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800ebce:	881b      	ldrh	r3, [r3, #0]
 800ebd0:	4413      	add	r3, r2
 800ebd2:	4298      	cmp	r0, r3
 800ebd4:	da0d      	bge.n	800ebf2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800ebd6:	4b0c      	ldr	r3, [pc, #48]	; (800ec08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800ebd8:	681b      	ldr	r3, [r3, #0]
 800ebda:	1a80      	subs	r0, r0, r2
 800ebdc:	220e      	movs	r2, #14
 800ebde:	fb02 3300 	mla	r3, r2, r0, r3
 800ebe2:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800ebe6:	891a      	ldrh	r2, [r3, #8]
 800ebe8:	4291      	cmp	r1, r2
 800ebea:	db04      	blt.n	800ebf6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800ebec:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800ebf0:	e7e6      	b.n	800ebc0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800ebf2:	2000      	movs	r0, #0
 800ebf4:	4770      	bx	lr
 800ebf6:	2001      	movs	r0, #1
 800ebf8:	4770      	bx	lr
 800ebfa:	bf00      	nop
 800ebfc:	2000a578 	.word	0x2000a578
 800ec00:	2000a570 	.word	0x2000a570
 800ec04:	2000a574 	.word	0x2000a574
 800ec08:	2000a558 	.word	0x2000a558

0800ec0c <_ZNK8touchgfx6Bitmap7getDataEv>:
 800ec0c:	b508      	push	{r3, lr}
 800ec0e:	4b12      	ldr	r3, [pc, #72]	; (800ec58 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800ec10:	6819      	ldr	r1, [r3, #0]
 800ec12:	b931      	cbnz	r1, 800ec22 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800ec14:	4b11      	ldr	r3, [pc, #68]	; (800ec5c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800ec16:	4a12      	ldr	r2, [pc, #72]	; (800ec60 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800ec18:	4812      	ldr	r0, [pc, #72]	; (800ec64 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800ec1a:	f44f 619a 	mov.w	r1, #1232	; 0x4d0
 800ec1e:	f00c f83b 	bl	801ac98 <__assert_func>
 800ec22:	8803      	ldrh	r3, [r0, #0]
 800ec24:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ec28:	4293      	cmp	r3, r2
 800ec2a:	d012      	beq.n	800ec52 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800ec2c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ec30:	4293      	cmp	r3, r2
 800ec32:	d103      	bne.n	800ec3c <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800ec34:	4b0c      	ldr	r3, [pc, #48]	; (800ec68 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800ec36:	681b      	ldr	r3, [r3, #0]
 800ec38:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800ec3a:	bd08      	pop	{r3, pc}
 800ec3c:	4a0b      	ldr	r2, [pc, #44]	; (800ec6c <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800ec3e:	6812      	ldr	r2, [r2, #0]
 800ec40:	b11a      	cbz	r2, 800ec4a <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800ec42:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800ec46:	2800      	cmp	r0, #0
 800ec48:	d1f7      	bne.n	800ec3a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800ec4a:	2214      	movs	r2, #20
 800ec4c:	4353      	muls	r3, r2
 800ec4e:	58c8      	ldr	r0, [r1, r3]
 800ec50:	e7f3      	b.n	800ec3a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800ec52:	2000      	movs	r0, #0
 800ec54:	e7f1      	b.n	800ec3a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800ec56:	bf00      	nop
 800ec58:	2000a578 	.word	0x2000a578
 800ec5c:	0801da88 	.word	0x0801da88
 800ec60:	0801e6bb 	.word	0x0801e6bb
 800ec64:	0801e5c1 	.word	0x0801e5c1
 800ec68:	2000a4f0 	.word	0x2000a4f0
 800ec6c:	2000a554 	.word	0x2000a554

0800ec70 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800ec70:	8802      	ldrh	r2, [r0, #0]
 800ec72:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800ec76:	429a      	cmp	r2, r3
 800ec78:	d845      	bhi.n	800ed06 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800ec7a:	4b24      	ldr	r3, [pc, #144]	; (800ed0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800ec7c:	8818      	ldrh	r0, [r3, #0]
 800ec7e:	4282      	cmp	r2, r0
 800ec80:	d221      	bcs.n	800ecc6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800ec82:	4b23      	ldr	r3, [pc, #140]	; (800ed10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800ec84:	6819      	ldr	r1, [r3, #0]
 800ec86:	2314      	movs	r3, #20
 800ec88:	fb03 1302 	mla	r3, r3, r2, r1
 800ec8c:	6858      	ldr	r0, [r3, #4]
 800ec8e:	2800      	cmp	r0, #0
 800ec90:	d03a      	beq.n	800ed08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800ec92:	4920      	ldr	r1, [pc, #128]	; (800ed14 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800ec94:	6809      	ldr	r1, [r1, #0]
 800ec96:	2900      	cmp	r1, #0
 800ec98:	d036      	beq.n	800ed08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800ec9a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800ec9e:	2900      	cmp	r1, #0
 800eca0:	d032      	beq.n	800ed08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800eca2:	891a      	ldrh	r2, [r3, #8]
 800eca4:	8958      	ldrh	r0, [r3, #10]
 800eca6:	4350      	muls	r0, r2
 800eca8:	7c5a      	ldrb	r2, [r3, #17]
 800ecaa:	7cdb      	ldrb	r3, [r3, #19]
 800ecac:	0952      	lsrs	r2, r2, #5
 800ecae:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800ecb2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ecb6:	2b0b      	cmp	r3, #11
 800ecb8:	bf18      	it	ne
 800ecba:	0040      	lslne	r0, r0, #1
 800ecbc:	3003      	adds	r0, #3
 800ecbe:	f020 0003 	bic.w	r0, r0, #3
 800ecc2:	4408      	add	r0, r1
 800ecc4:	4770      	bx	lr
 800ecc6:	4b14      	ldr	r3, [pc, #80]	; (800ed18 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800ecc8:	881b      	ldrh	r3, [r3, #0]
 800ecca:	4403      	add	r3, r0
 800eccc:	429a      	cmp	r2, r3
 800ecce:	da1a      	bge.n	800ed06 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800ecd0:	4b12      	ldr	r3, [pc, #72]	; (800ed1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800ecd2:	681b      	ldr	r3, [r3, #0]
 800ecd4:	1a10      	subs	r0, r2, r0
 800ecd6:	210e      	movs	r1, #14
 800ecd8:	fb01 3000 	mla	r0, r1, r0, r3
 800ecdc:	7b03      	ldrb	r3, [r0, #12]
 800ecde:	f003 031f 	and.w	r3, r3, #31
 800ece2:	2b0b      	cmp	r3, #11
 800ece4:	d10b      	bne.n	800ecfe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800ece6:	8903      	ldrh	r3, [r0, #8]
 800ece8:	8940      	ldrh	r0, [r0, #10]
 800ecea:	4358      	muls	r0, r3
 800ecec:	4b09      	ldr	r3, [pc, #36]	; (800ed14 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800ecee:	6819      	ldr	r1, [r3, #0]
 800ecf0:	3003      	adds	r0, #3
 800ecf2:	f020 0303 	bic.w	r3, r0, #3
 800ecf6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800ecfa:	4418      	add	r0, r3
 800ecfc:	4770      	bx	lr
 800ecfe:	2b0d      	cmp	r3, #13
 800ed00:	d101      	bne.n	800ed06 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800ed02:	300d      	adds	r0, #13
 800ed04:	4770      	bx	lr
 800ed06:	2000      	movs	r0, #0
 800ed08:	4770      	bx	lr
 800ed0a:	bf00      	nop
 800ed0c:	2000a570 	.word	0x2000a570
 800ed10:	2000a578 	.word	0x2000a578
 800ed14:	2000a554 	.word	0x2000a554
 800ed18:	2000a574 	.word	0x2000a574
 800ed1c:	2000a558 	.word	0x2000a558

0800ed20 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800ed20:	b510      	push	{r4, lr}
 800ed22:	4b17      	ldr	r3, [pc, #92]	; (800ed80 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800ed24:	6819      	ldr	r1, [r3, #0]
 800ed26:	8803      	ldrh	r3, [r0, #0]
 800ed28:	b1e9      	cbz	r1, 800ed66 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800ed2a:	4a16      	ldr	r2, [pc, #88]	; (800ed84 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800ed2c:	8812      	ldrh	r2, [r2, #0]
 800ed2e:	429a      	cmp	r2, r3
 800ed30:	d90a      	bls.n	800ed48 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800ed32:	2214      	movs	r2, #20
 800ed34:	fb02 1303 	mla	r3, r2, r3, r1
 800ed38:	7c58      	ldrb	r0, [r3, #17]
 800ed3a:	0942      	lsrs	r2, r0, #5
 800ed3c:	7cd8      	ldrb	r0, [r3, #19]
 800ed3e:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800ed42:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800ed46:	bd10      	pop	{r4, pc}
 800ed48:	490f      	ldr	r1, [pc, #60]	; (800ed88 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800ed4a:	8809      	ldrh	r1, [r1, #0]
 800ed4c:	4411      	add	r1, r2
 800ed4e:	428b      	cmp	r3, r1
 800ed50:	da09      	bge.n	800ed66 <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800ed52:	1a9b      	subs	r3, r3, r2
 800ed54:	4a0d      	ldr	r2, [pc, #52]	; (800ed8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800ed56:	6812      	ldr	r2, [r2, #0]
 800ed58:	210e      	movs	r1, #14
 800ed5a:	fb01 2303 	mla	r3, r1, r3, r2
 800ed5e:	7b18      	ldrb	r0, [r3, #12]
 800ed60:	f000 001f 	and.w	r0, r0, #31
 800ed64:	e7ef      	b.n	800ed46 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800ed66:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ed6a:	4293      	cmp	r3, r2
 800ed6c:	d106      	bne.n	800ed7c <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800ed6e:	f7fa fc95 	bl	800969c <_ZN8touchgfx3HAL3lcdEv>
 800ed72:	6803      	ldr	r3, [r0, #0]
 800ed74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed7a:	4718      	bx	r3
 800ed7c:	2000      	movs	r0, #0
 800ed7e:	e7e2      	b.n	800ed46 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800ed80:	2000a578 	.word	0x2000a578
 800ed84:	2000a570 	.word	0x2000a570
 800ed88:	2000a574 	.word	0x2000a574
 800ed8c:	2000a558 	.word	0x2000a558

0800ed90 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800ed90:	2010      	movs	r0, #16
 800ed92:	4770      	bx	lr

0800ed94 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800ed94:	2000      	movs	r0, #0
 800ed96:	4770      	bx	lr

0800ed98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800ed98:	2bff      	cmp	r3, #255	; 0xff
 800ed9a:	d050      	beq.n	800ee3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800ed9c:	2a0b      	cmp	r2, #11
 800ed9e:	d04a      	beq.n	800ee36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800eda0:	d80e      	bhi.n	800edc0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800eda2:	2a03      	cmp	r2, #3
 800eda4:	d03f      	beq.n	800ee26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800eda6:	d804      	bhi.n	800edb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800eda8:	2a01      	cmp	r2, #1
 800edaa:	d03e      	beq.n	800ee2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800edac:	d93f      	bls.n	800ee2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800edae:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800edb0:	4770      	bx	lr
 800edb2:	2a09      	cmp	r2, #9
 800edb4:	d03f      	beq.n	800ee36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800edb6:	d83c      	bhi.n	800ee32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800edb8:	2a08      	cmp	r2, #8
 800edba:	d03a      	beq.n	800ee32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800edbc:	2000      	movs	r0, #0
 800edbe:	4770      	bx	lr
 800edc0:	2a2f      	cmp	r2, #47	; 0x2f
 800edc2:	d024      	beq.n	800ee0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800edc4:	d80d      	bhi.n	800ede2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800edc6:	2a2d      	cmp	r2, #45	; 0x2d
 800edc8:	d014      	beq.n	800edf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800edca:	d826      	bhi.n	800ee1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800edcc:	2a2c      	cmp	r2, #44	; 0x2c
 800edce:	d1f5      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800edd0:	684b      	ldr	r3, [r1, #4]
 800edd2:	781b      	ldrb	r3, [r3, #0]
 800edd4:	2b01      	cmp	r3, #1
 800edd6:	d018      	beq.n	800ee0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800edd8:	d323      	bcc.n	800ee22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800edda:	2b02      	cmp	r3, #2
 800eddc:	d1ee      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800edde:	6880      	ldr	r0, [r0, #8]
 800ede0:	4770      	bx	lr
 800ede2:	2a31      	cmp	r2, #49	; 0x31
 800ede4:	d004      	beq.n	800edf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800ede6:	d328      	bcc.n	800ee3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800ede8:	2a32      	cmp	r2, #50	; 0x32
 800edea:	d026      	beq.n	800ee3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800edec:	2a33      	cmp	r2, #51	; 0x33
 800edee:	d1e5      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800edf0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800edf2:	4770      	bx	lr
 800edf4:	684b      	ldr	r3, [r1, #4]
 800edf6:	781b      	ldrb	r3, [r3, #0]
 800edf8:	2b01      	cmp	r3, #1
 800edfa:	d004      	beq.n	800ee06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800edfc:	d30b      	bcc.n	800ee16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800edfe:	2b02      	cmp	r3, #2
 800ee00:	d1dc      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee02:	6900      	ldr	r0, [r0, #16]
 800ee04:	4770      	bx	lr
 800ee06:	6a00      	ldr	r0, [r0, #32]
 800ee08:	4770      	bx	lr
 800ee0a:	6980      	ldr	r0, [r0, #24]
 800ee0c:	4770      	bx	lr
 800ee0e:	684b      	ldr	r3, [r1, #4]
 800ee10:	781b      	ldrb	r3, [r3, #0]
 800ee12:	2b00      	cmp	r3, #0
 800ee14:	d1d2      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee16:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ee18:	4770      	bx	lr
 800ee1a:	684b      	ldr	r3, [r1, #4]
 800ee1c:	781b      	ldrb	r3, [r3, #0]
 800ee1e:	2b00      	cmp	r3, #0
 800ee20:	d1cc      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee22:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800ee24:	4770      	bx	lr
 800ee26:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800ee28:	4770      	bx	lr
 800ee2a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800ee2c:	4770      	bx	lr
 800ee2e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800ee30:	4770      	bx	lr
 800ee32:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800ee34:	4770      	bx	lr
 800ee36:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800ee38:	4770      	bx	lr
 800ee3a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800ee3c:	4770      	bx	lr
 800ee3e:	2a0b      	cmp	r2, #11
 800ee40:	d049      	beq.n	800eed6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800ee42:	d80e      	bhi.n	800ee62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800ee44:	2a03      	cmp	r2, #3
 800ee46:	d040      	beq.n	800eeca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800ee48:	d804      	bhi.n	800ee54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800ee4a:	2a01      	cmp	r2, #1
 800ee4c:	d03f      	beq.n	800eece <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800ee4e:	d940      	bls.n	800eed2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800ee50:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800ee52:	4770      	bx	lr
 800ee54:	2a09      	cmp	r2, #9
 800ee56:	d03e      	beq.n	800eed6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800ee58:	d801      	bhi.n	800ee5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800ee5a:	2a08      	cmp	r2, #8
 800ee5c:	d1ae      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee5e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800ee60:	4770      	bx	lr
 800ee62:	2a2f      	cmp	r2, #47	; 0x2f
 800ee64:	d024      	beq.n	800eeb0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800ee66:	d80d      	bhi.n	800ee84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800ee68:	2a2d      	cmp	r2, #45	; 0x2d
 800ee6a:	d014      	beq.n	800ee96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800ee6c:	d826      	bhi.n	800eebc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800ee6e:	2a2c      	cmp	r2, #44	; 0x2c
 800ee70:	d1a4      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee72:	684b      	ldr	r3, [r1, #4]
 800ee74:	781b      	ldrb	r3, [r3, #0]
 800ee76:	2b01      	cmp	r3, #1
 800ee78:	d018      	beq.n	800eeac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800ee7a:	d324      	bcc.n	800eec6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800ee7c:	2b02      	cmp	r3, #2
 800ee7e:	d19d      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee80:	68c0      	ldr	r0, [r0, #12]
 800ee82:	4770      	bx	lr
 800ee84:	2a31      	cmp	r2, #49	; 0x31
 800ee86:	d004      	beq.n	800ee92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800ee88:	d327      	bcc.n	800eeda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800ee8a:	2a32      	cmp	r2, #50	; 0x32
 800ee8c:	d025      	beq.n	800eeda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800ee8e:	2a33      	cmp	r2, #51	; 0x33
 800ee90:	d194      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800ee92:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800ee94:	4770      	bx	lr
 800ee96:	684b      	ldr	r3, [r1, #4]
 800ee98:	781b      	ldrb	r3, [r3, #0]
 800ee9a:	2b01      	cmp	r3, #1
 800ee9c:	d004      	beq.n	800eea8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800ee9e:	d30b      	bcc.n	800eeb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800eea0:	2b02      	cmp	r3, #2
 800eea2:	d18b      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800eea4:	6940      	ldr	r0, [r0, #20]
 800eea6:	4770      	bx	lr
 800eea8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800eeaa:	4770      	bx	lr
 800eeac:	69c0      	ldr	r0, [r0, #28]
 800eeae:	4770      	bx	lr
 800eeb0:	684b      	ldr	r3, [r1, #4]
 800eeb2:	781b      	ldrb	r3, [r3, #0]
 800eeb4:	2b00      	cmp	r3, #0
 800eeb6:	d181      	bne.n	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800eeb8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800eeba:	4770      	bx	lr
 800eebc:	684b      	ldr	r3, [r1, #4]
 800eebe:	781b      	ldrb	r3, [r3, #0]
 800eec0:	2b00      	cmp	r3, #0
 800eec2:	f47f af7b 	bne.w	800edbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800eec6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800eec8:	4770      	bx	lr
 800eeca:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800eecc:	4770      	bx	lr
 800eece:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800eed0:	4770      	bx	lr
 800eed2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800eed4:	4770      	bx	lr
 800eed6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800eed8:	4770      	bx	lr
 800eeda:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800eedc:	4770      	bx	lr

0800eede <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800eede:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eee2:	b087      	sub	sp, #28
 800eee4:	9815      	ldr	r0, [sp, #84]	; 0x54
 800eee6:	9205      	str	r2, [sp, #20]
 800eee8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800eeec:	9202      	str	r2, [sp, #8]
 800eeee:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800eef2:	9101      	str	r1, [sp, #4]
 800eef4:	6841      	ldr	r1, [r0, #4]
 800eef6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800eefa:	fb01 2404 	mla	r4, r1, r4, r2
 800eefe:	6802      	ldr	r2, [r0, #0]
 800ef00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ef04:	f8de 2000 	ldr.w	r2, [lr]
 800ef08:	9203      	str	r2, [sp, #12]
 800ef0a:	f8de 2004 	ldr.w	r2, [lr, #4]
 800ef0e:	3204      	adds	r2, #4
 800ef10:	9204      	str	r2, [sp, #16]
 800ef12:	9a02      	ldr	r2, [sp, #8]
 800ef14:	43d6      	mvns	r6, r2
 800ef16:	b2f6      	uxtb	r6, r6
 800ef18:	9a01      	ldr	r2, [sp, #4]
 800ef1a:	2a00      	cmp	r2, #0
 800ef1c:	dc03      	bgt.n	800ef26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800ef1e:	9a05      	ldr	r2, [sp, #20]
 800ef20:	2a00      	cmp	r2, #0
 800ef22:	f340 8129 	ble.w	800f178 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800ef26:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ef28:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800ef2c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800ef30:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ef34:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ef36:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ef3a:	2b00      	cmp	r3, #0
 800ef3c:	dd0e      	ble.n	800ef5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800ef3e:	1408      	asrs	r0, r1, #16
 800ef40:	d405      	bmi.n	800ef4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ef42:	4560      	cmp	r0, ip
 800ef44:	da03      	bge.n	800ef4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ef46:	1410      	asrs	r0, r2, #16
 800ef48:	d401      	bmi.n	800ef4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ef4a:	42b8      	cmp	r0, r7
 800ef4c:	db07      	blt.n	800ef5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800ef4e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ef50:	4401      	add	r1, r0
 800ef52:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ef54:	3b01      	subs	r3, #1
 800ef56:	4402      	add	r2, r0
 800ef58:	3402      	adds	r4, #2
 800ef5a:	e7ee      	b.n	800ef3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800ef5c:	d071      	beq.n	800f042 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800ef5e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ef60:	1e58      	subs	r0, r3, #1
 800ef62:	fb05 1500 	mla	r5, r5, r0, r1
 800ef66:	142d      	asrs	r5, r5, #16
 800ef68:	d45f      	bmi.n	800f02a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ef6a:	4565      	cmp	r5, ip
 800ef6c:	da5d      	bge.n	800f02a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ef6e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ef70:	fb05 2000 	mla	r0, r5, r0, r2
 800ef74:	1400      	asrs	r0, r0, #16
 800ef76:	d458      	bmi.n	800f02a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ef78:	42b8      	cmp	r0, r7
 800ef7a:	da56      	bge.n	800f02a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800ef7c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800ef80:	4699      	mov	r9, r3
 800ef82:	46a2      	mov	sl, r4
 800ef84:	f1b9 0f00 	cmp.w	r9, #0
 800ef88:	dd57      	ble.n	800f03a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800ef8a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ef8e:	9803      	ldr	r0, [sp, #12]
 800ef90:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800ef94:	140d      	asrs	r5, r1, #16
 800ef96:	fb07 000c 	mla	r0, r7, ip, r0
 800ef9a:	f109 39ff 	add.w	r9, r9, #4294967295
 800ef9e:	5d40      	ldrb	r0, [r0, r5]
 800efa0:	9d04      	ldr	r5, [sp, #16]
 800efa2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800efa6:	f8ba 5000 	ldrh.w	r5, [sl]
 800efaa:	122f      	asrs	r7, r5, #8
 800efac:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800efb0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800efb4:	fb17 f706 	smulbb	r7, r7, r6
 800efb8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800efbc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800efc0:	00ed      	lsls	r5, r5, #3
 800efc2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800efc6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800efca:	10c7      	asrs	r7, r0, #3
 800efcc:	b2ed      	uxtb	r5, r5
 800efce:	00c0      	lsls	r0, r0, #3
 800efd0:	fb18 f806 	smulbb	r8, r8, r6
 800efd4:	fb15 f506 	smulbb	r5, r5, r6
 800efd8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800efdc:	b2c0      	uxtb	r0, r0
 800efde:	fa1f fc8c 	uxth.w	ip, ip
 800efe2:	fb07 870b 	mla	r7, r7, fp, r8
 800efe6:	fb00 500b 	mla	r0, r0, fp, r5
 800efea:	b280      	uxth	r0, r0
 800efec:	b2bf      	uxth	r7, r7
 800efee:	f10c 0501 	add.w	r5, ip, #1
 800eff2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800eff6:	f107 0801 	add.w	r8, r7, #1
 800effa:	1c45      	adds	r5, r0, #1
 800effc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800f000:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800f004:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f006:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f00a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f00e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800f012:	ea45 0c0c 	orr.w	ip, r5, ip
 800f016:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800f01a:	4401      	add	r1, r0
 800f01c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f01e:	ea4c 0c08 	orr.w	ip, ip, r8
 800f022:	f82a cb02 	strh.w	ip, [sl], #2
 800f026:	4402      	add	r2, r0
 800f028:	e7ac      	b.n	800ef84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800f02a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800f02e:	f04f 0800 	mov.w	r8, #0
 800f032:	eb03 0008 	add.w	r0, r3, r8
 800f036:	2800      	cmp	r0, #0
 800f038:	dc41      	bgt.n	800f0be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f03a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f03e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f042:	9b01      	ldr	r3, [sp, #4]
 800f044:	2b00      	cmp	r3, #0
 800f046:	f340 8097 	ble.w	800f178 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800f04a:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f04e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f052:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f056:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f058:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f05c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f060:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f064:	eef0 6a62 	vmov.f32	s13, s5
 800f068:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f06c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f070:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f074:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800f078:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f07c:	eef0 6a43 	vmov.f32	s13, s6
 800f080:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f084:	ee12 2a90 	vmov	r2, s5
 800f088:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f08c:	fb92 f3f3 	sdiv	r3, r2, r3
 800f090:	ee13 2a10 	vmov	r2, s6
 800f094:	9313      	str	r3, [sp, #76]	; 0x4c
 800f096:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f098:	fb92 f3f3 	sdiv	r3, r2, r3
 800f09c:	9314      	str	r3, [sp, #80]	; 0x50
 800f09e:	9b01      	ldr	r3, [sp, #4]
 800f0a0:	9a05      	ldr	r2, [sp, #20]
 800f0a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f0a6:	3b01      	subs	r3, #1
 800f0a8:	9301      	str	r3, [sp, #4]
 800f0aa:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800f0ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f0b0:	eeb0 3a67 	vmov.f32	s6, s15
 800f0b4:	bf08      	it	eq
 800f0b6:	4613      	moveq	r3, r2
 800f0b8:	eef0 2a47 	vmov.f32	s5, s14
 800f0bc:	e72c      	b.n	800ef18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 800f0be:	140f      	asrs	r7, r1, #16
 800f0c0:	d453      	bmi.n	800f16a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800f0c2:	f8de 5008 	ldr.w	r5, [lr, #8]
 800f0c6:	42bd      	cmp	r5, r7
 800f0c8:	dd4f      	ble.n	800f16a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800f0ca:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f0ce:	d44c      	bmi.n	800f16a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800f0d0:	f8de 000c 	ldr.w	r0, [lr, #12]
 800f0d4:	4560      	cmp	r0, ip
 800f0d6:	dd48      	ble.n	800f16a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800f0d8:	9803      	ldr	r0, [sp, #12]
 800f0da:	b22d      	sxth	r5, r5
 800f0dc:	fb0c 0505 	mla	r5, ip, r5, r0
 800f0e0:	5de8      	ldrb	r0, [r5, r7]
 800f0e2:	9d04      	ldr	r5, [sp, #16]
 800f0e4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800f0e8:	f06f 0501 	mvn.w	r5, #1
 800f0ec:	fb05 fb08 	mul.w	fp, r5, r8
 800f0f0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f0f4:	f834 500b 	ldrh.w	r5, [r4, fp]
 800f0f8:	122f      	asrs	r7, r5, #8
 800f0fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f0fe:	fb17 f706 	smulbb	r7, r7, r6
 800f102:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800f106:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f10a:	00ed      	lsls	r5, r5, #3
 800f10c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800f110:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f114:	10c7      	asrs	r7, r0, #3
 800f116:	b2ed      	uxtb	r5, r5
 800f118:	00c0      	lsls	r0, r0, #3
 800f11a:	fb19 f906 	smulbb	r9, r9, r6
 800f11e:	fb15 f506 	smulbb	r5, r5, r6
 800f122:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f126:	b2c0      	uxtb	r0, r0
 800f128:	fa1f fc8c 	uxth.w	ip, ip
 800f12c:	fb07 970a 	mla	r7, r7, sl, r9
 800f130:	fb00 500a 	mla	r0, r0, sl, r5
 800f134:	b2bf      	uxth	r7, r7
 800f136:	b280      	uxth	r0, r0
 800f138:	f10c 0501 	add.w	r5, ip, #1
 800f13c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f140:	f107 0901 	add.w	r9, r7, #1
 800f144:	1c45      	adds	r5, r0, #1
 800f146:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800f14a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f14e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f152:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f156:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f15a:	ea45 0c0c 	orr.w	ip, r5, ip
 800f15e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f162:	ea4c 0c09 	orr.w	ip, ip, r9
 800f166:	f824 c00b 	strh.w	ip, [r4, fp]
 800f16a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f16c:	4401      	add	r1, r0
 800f16e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f170:	f108 38ff 	add.w	r8, r8, #4294967295
 800f174:	4402      	add	r2, r0
 800f176:	e75c      	b.n	800f032 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 800f178:	b007      	add	sp, #28
 800f17a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f17e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f17e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f182:	b085      	sub	sp, #20
 800f184:	4693      	mov	fp, r2
 800f186:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f188:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800f18a:	6870      	ldr	r0, [r6, #4]
 800f18c:	9100      	str	r1, [sp, #0]
 800f18e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f192:	fb00 2404 	mla	r4, r0, r4, r2
 800f196:	6832      	ldr	r2, [r6, #0]
 800f198:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f19c:	682a      	ldr	r2, [r5, #0]
 800f19e:	9201      	str	r2, [sp, #4]
 800f1a0:	686a      	ldr	r2, [r5, #4]
 800f1a2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800f1a6:	3204      	adds	r2, #4
 800f1a8:	9202      	str	r2, [sp, #8]
 800f1aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f1ae:	9a00      	ldr	r2, [sp, #0]
 800f1b0:	2a00      	cmp	r2, #0
 800f1b2:	dc03      	bgt.n	800f1bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800f1b4:	f1bb 0f00 	cmp.w	fp, #0
 800f1b8:	f340 80a0 	ble.w	800f2fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800f1bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f1be:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800f1c2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800f1c6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f1ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f1cc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f1d0:	2b00      	cmp	r3, #0
 800f1d2:	dd0c      	ble.n	800f1ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800f1d4:	1406      	asrs	r6, r0, #16
 800f1d6:	d405      	bmi.n	800f1e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f1d8:	454e      	cmp	r6, r9
 800f1da:	da03      	bge.n	800f1e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f1dc:	1416      	asrs	r6, r2, #16
 800f1de:	d401      	bmi.n	800f1e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f1e0:	4546      	cmp	r6, r8
 800f1e2:	db05      	blt.n	800f1f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800f1e4:	4470      	add	r0, lr
 800f1e6:	4462      	add	r2, ip
 800f1e8:	3b01      	subs	r3, #1
 800f1ea:	3402      	adds	r4, #2
 800f1ec:	e7f0      	b.n	800f1d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800f1ee:	d00f      	beq.n	800f210 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800f1f0:	1e5e      	subs	r6, r3, #1
 800f1f2:	fb0e 0706 	mla	r7, lr, r6, r0
 800f1f6:	143f      	asrs	r7, r7, #16
 800f1f8:	d541      	bpl.n	800f27e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 800f1fa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800f1fe:	4698      	mov	r8, r3
 800f200:	9603      	str	r6, [sp, #12]
 800f202:	f1b8 0f00 	cmp.w	r8, #0
 800f206:	dc59      	bgt.n	800f2bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f208:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f20c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f210:	9b00      	ldr	r3, [sp, #0]
 800f212:	2b00      	cmp	r3, #0
 800f214:	dd72      	ble.n	800f2fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800f216:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f21a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f21e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f222:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f224:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f228:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f22c:	eeb0 6a62 	vmov.f32	s12, s5
 800f230:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f234:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f238:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f23c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f240:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f244:	eeb0 6a43 	vmov.f32	s12, s6
 800f248:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f24c:	ee12 2a90 	vmov	r2, s5
 800f250:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f254:	fb92 fef3 	sdiv	lr, r2, r3
 800f258:	ee13 2a10 	vmov	r2, s6
 800f25c:	fb92 fcf3 	sdiv	ip, r2, r3
 800f260:	9b00      	ldr	r3, [sp, #0]
 800f262:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f266:	3b01      	subs	r3, #1
 800f268:	9300      	str	r3, [sp, #0]
 800f26a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f26e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f270:	eeb0 3a67 	vmov.f32	s6, s15
 800f274:	bf08      	it	eq
 800f276:	465b      	moveq	r3, fp
 800f278:	eef0 2a47 	vmov.f32	s5, s14
 800f27c:	e797      	b.n	800f1ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800f27e:	454f      	cmp	r7, r9
 800f280:	dabb      	bge.n	800f1fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800f282:	fb0c 2606 	mla	r6, ip, r6, r2
 800f286:	1436      	asrs	r6, r6, #16
 800f288:	d4b7      	bmi.n	800f1fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800f28a:	4546      	cmp	r6, r8
 800f28c:	dab5      	bge.n	800f1fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800f28e:	461e      	mov	r6, r3
 800f290:	46a0      	mov	r8, r4
 800f292:	2e00      	cmp	r6, #0
 800f294:	ddb8      	ble.n	800f208 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800f296:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800f29a:	9901      	ldr	r1, [sp, #4]
 800f29c:	1417      	asrs	r7, r2, #16
 800f29e:	ea4f 4920 	mov.w	r9, r0, asr #16
 800f2a2:	fb0a 1707 	mla	r7, sl, r7, r1
 800f2a6:	9902      	ldr	r1, [sp, #8]
 800f2a8:	f817 7009 	ldrb.w	r7, [r7, r9]
 800f2ac:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800f2b0:	f828 7b02 	strh.w	r7, [r8], #2
 800f2b4:	4470      	add	r0, lr
 800f2b6:	4462      	add	r2, ip
 800f2b8:	3e01      	subs	r6, #1
 800f2ba:	e7ea      	b.n	800f292 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 800f2bc:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f2c0:	d417      	bmi.n	800f2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800f2c2:	68ae      	ldr	r6, [r5, #8]
 800f2c4:	454e      	cmp	r6, r9
 800f2c6:	dd14      	ble.n	800f2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800f2c8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800f2cc:	d411      	bmi.n	800f2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800f2ce:	68ef      	ldr	r7, [r5, #12]
 800f2d0:	4557      	cmp	r7, sl
 800f2d2:	dd0e      	ble.n	800f2f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800f2d4:	9f01      	ldr	r7, [sp, #4]
 800f2d6:	b236      	sxth	r6, r6
 800f2d8:	fb0a 7606 	mla	r6, sl, r6, r7
 800f2dc:	9f02      	ldr	r7, [sp, #8]
 800f2de:	f816 6009 	ldrb.w	r6, [r6, r9]
 800f2e2:	f06f 0101 	mvn.w	r1, #1
 800f2e6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800f2ea:	fb01 f608 	mul.w	r6, r1, r8
 800f2ee:	9903      	ldr	r1, [sp, #12]
 800f2f0:	538f      	strh	r7, [r1, r6]
 800f2f2:	4470      	add	r0, lr
 800f2f4:	4462      	add	r2, ip
 800f2f6:	f108 38ff 	add.w	r8, r8, #4294967295
 800f2fa:	e782      	b.n	800f202 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800f2fc:	b005      	add	sp, #20
 800f2fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f302 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f302:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f306:	b087      	sub	sp, #28
 800f308:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800f30a:	9205      	str	r2, [sp, #20]
 800f30c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f310:	9203      	str	r2, [sp, #12]
 800f312:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800f316:	9102      	str	r1, [sp, #8]
 800f318:	6861      	ldr	r1, [r4, #4]
 800f31a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 800f31e:	fb01 2000 	mla	r0, r1, r0, r2
 800f322:	6822      	ldr	r2, [r4, #0]
 800f324:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 800f328:	9200      	str	r2, [sp, #0]
 800f32a:	f8dc 2000 	ldr.w	r2, [ip]
 800f32e:	9204      	str	r2, [sp, #16]
 800f330:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800f334:	3204      	adds	r2, #4
 800f336:	9201      	str	r2, [sp, #4]
 800f338:	9a03      	ldr	r2, [sp, #12]
 800f33a:	43d5      	mvns	r5, r2
 800f33c:	b2ed      	uxtb	r5, r5
 800f33e:	9a02      	ldr	r2, [sp, #8]
 800f340:	2a00      	cmp	r2, #0
 800f342:	dc03      	bgt.n	800f34c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 800f344:	9a05      	ldr	r2, [sp, #20]
 800f346:	2a00      	cmp	r2, #0
 800f348:	f340 812c 	ble.w	800f5a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800f34c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f34e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 800f352:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 800f356:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f35a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f35c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f360:	2b00      	cmp	r3, #0
 800f362:	dd10      	ble.n	800f386 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800f364:	140c      	asrs	r4, r1, #16
 800f366:	d405      	bmi.n	800f374 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800f368:	4574      	cmp	r4, lr
 800f36a:	da03      	bge.n	800f374 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800f36c:	1414      	asrs	r4, r2, #16
 800f36e:	d401      	bmi.n	800f374 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800f370:	42bc      	cmp	r4, r7
 800f372:	db09      	blt.n	800f388 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 800f374:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f376:	9800      	ldr	r0, [sp, #0]
 800f378:	4421      	add	r1, r4
 800f37a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f37c:	3002      	adds	r0, #2
 800f37e:	4422      	add	r2, r4
 800f380:	3b01      	subs	r3, #1
 800f382:	9000      	str	r0, [sp, #0]
 800f384:	e7ec      	b.n	800f360 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 800f386:	d071      	beq.n	800f46c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 800f388:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f38a:	1e5c      	subs	r4, r3, #1
 800f38c:	fb06 1604 	mla	r6, r6, r4, r1
 800f390:	1436      	asrs	r6, r6, #16
 800f392:	d45d      	bmi.n	800f450 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800f394:	4576      	cmp	r6, lr
 800f396:	da5b      	bge.n	800f450 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800f398:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f39a:	fb06 2404 	mla	r4, r6, r4, r2
 800f39e:	1424      	asrs	r4, r4, #16
 800f3a0:	d456      	bmi.n	800f450 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800f3a2:	42bc      	cmp	r4, r7
 800f3a4:	da54      	bge.n	800f450 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800f3a6:	f8dd 9000 	ldr.w	r9, [sp]
 800f3aa:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 800f3ae:	4698      	mov	r8, r3
 800f3b0:	f1b8 0f00 	cmp.w	r8, #0
 800f3b4:	dd54      	ble.n	800f460 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 800f3b6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800f3ba:	9804      	ldr	r0, [sp, #16]
 800f3bc:	1414      	asrs	r4, r2, #16
 800f3be:	fb07 0404 	mla	r4, r7, r4, r0
 800f3c2:	140e      	asrs	r6, r1, #16
 800f3c4:	9801      	ldr	r0, [sp, #4]
 800f3c6:	f814 e006 	ldrb.w	lr, [r4, r6]
 800f3ca:	f8b9 4000 	ldrh.w	r4, [r9]
 800f3ce:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800f3d2:	eb00 0b0e 	add.w	fp, r0, lr
 800f3d6:	1227      	asrs	r7, r4, #8
 800f3d8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800f3dc:	f89b b001 	ldrb.w	fp, [fp, #1]
 800f3e0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 800f3e4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f3e6:	fb16 f60a 	smulbb	r6, r6, sl
 800f3ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f3ee:	fb07 6705 	mla	r7, r7, r5, r6
 800f3f2:	10e6      	asrs	r6, r4, #3
 800f3f4:	00e4      	lsls	r4, r4, #3
 800f3f6:	b2e4      	uxtb	r4, r4
 800f3f8:	fb1b fb0a 	smulbb	fp, fp, sl
 800f3fc:	fb14 f405 	smulbb	r4, r4, r5
 800f400:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f404:	b2bf      	uxth	r7, r7
 800f406:	fb06 b605 	mla	r6, r6, r5, fp
 800f40a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 800f40e:	b2b6      	uxth	r6, r6
 800f410:	fa1f fe8e 	uxth.w	lr, lr
 800f414:	1c7c      	adds	r4, r7, #1
 800f416:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800f41a:	f106 0b01 	add.w	fp, r6, #1
 800f41e:	f10e 0401 	add.w	r4, lr, #1
 800f422:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 800f426:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800f42a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f42e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800f432:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800f436:	4327      	orrs	r7, r4
 800f438:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800f43c:	4401      	add	r1, r0
 800f43e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f440:	ea47 070b 	orr.w	r7, r7, fp
 800f444:	f829 7b02 	strh.w	r7, [r9], #2
 800f448:	4402      	add	r2, r0
 800f44a:	f108 38ff 	add.w	r8, r8, #4294967295
 800f44e:	e7af      	b.n	800f3b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 800f450:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 800f454:	f04f 0e00 	mov.w	lr, #0
 800f458:	eb03 040e 	add.w	r4, r3, lr
 800f45c:	2c00      	cmp	r4, #0
 800f45e:	dc43      	bgt.n	800f4e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 800f460:	9a00      	ldr	r2, [sp, #0]
 800f462:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f466:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800f46a:	9300      	str	r3, [sp, #0]
 800f46c:	9b02      	ldr	r3, [sp, #8]
 800f46e:	2b00      	cmp	r3, #0
 800f470:	f340 8098 	ble.w	800f5a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800f474:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f478:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f47c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f480:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f482:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f486:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f48a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f48e:	eef0 6a62 	vmov.f32	s13, s5
 800f492:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f496:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f49a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f49e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800f4a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f4a6:	eef0 6a43 	vmov.f32	s13, s6
 800f4aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f4ae:	ee12 2a90 	vmov	r2, s5
 800f4b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f4b6:	fb92 f3f3 	sdiv	r3, r2, r3
 800f4ba:	ee13 2a10 	vmov	r2, s6
 800f4be:	9313      	str	r3, [sp, #76]	; 0x4c
 800f4c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f4c2:	fb92 f3f3 	sdiv	r3, r2, r3
 800f4c6:	9314      	str	r3, [sp, #80]	; 0x50
 800f4c8:	9b02      	ldr	r3, [sp, #8]
 800f4ca:	9a05      	ldr	r2, [sp, #20]
 800f4cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f4d0:	3b01      	subs	r3, #1
 800f4d2:	9302      	str	r3, [sp, #8]
 800f4d4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800f4d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f4da:	eeb0 3a67 	vmov.f32	s6, s15
 800f4de:	bf08      	it	eq
 800f4e0:	4613      	moveq	r3, r2
 800f4e2:	eef0 2a47 	vmov.f32	s5, s14
 800f4e6:	e72a      	b.n	800f33e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800f4e8:	140f      	asrs	r7, r1, #16
 800f4ea:	d454      	bmi.n	800f596 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800f4ec:	f8dc 6008 	ldr.w	r6, [ip, #8]
 800f4f0:	42be      	cmp	r6, r7
 800f4f2:	dd50      	ble.n	800f596 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800f4f4:	ea5f 4822 	movs.w	r8, r2, asr #16
 800f4f8:	d44d      	bmi.n	800f596 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800f4fa:	f8dc 400c 	ldr.w	r4, [ip, #12]
 800f4fe:	4544      	cmp	r4, r8
 800f500:	dd49      	ble.n	800f596 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800f502:	9c04      	ldr	r4, [sp, #16]
 800f504:	b236      	sxth	r6, r6
 800f506:	fb08 4606 	mla	r6, r8, r6, r4
 800f50a:	f06f 0001 	mvn.w	r0, #1
 800f50e:	f816 8007 	ldrb.w	r8, [r6, r7]
 800f512:	9c01      	ldr	r4, [sp, #4]
 800f514:	fb00 fa0e 	mul.w	sl, r0, lr
 800f518:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800f51c:	9800      	ldr	r0, [sp, #0]
 800f51e:	eb04 0b08 	add.w	fp, r4, r8
 800f522:	f830 400a 	ldrh.w	r4, [r0, sl]
 800f526:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800f52a:	9801      	ldr	r0, [sp, #4]
 800f52c:	f89b b001 	ldrb.w	fp, [fp, #1]
 800f530:	f810 8008 	ldrb.w	r8, [r0, r8]
 800f534:	9800      	ldr	r0, [sp, #0]
 800f536:	1227      	asrs	r7, r4, #8
 800f538:	fb16 f609 	smulbb	r6, r6, r9
 800f53c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f540:	fb07 6705 	mla	r7, r7, r5, r6
 800f544:	10e6      	asrs	r6, r4, #3
 800f546:	00e4      	lsls	r4, r4, #3
 800f548:	b2e4      	uxtb	r4, r4
 800f54a:	fb1b fb09 	smulbb	fp, fp, r9
 800f54e:	fb14 f405 	smulbb	r4, r4, r5
 800f552:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f556:	b2bf      	uxth	r7, r7
 800f558:	fb06 b605 	mla	r6, r6, r5, fp
 800f55c:	fb08 4809 	mla	r8, r8, r9, r4
 800f560:	b2b6      	uxth	r6, r6
 800f562:	fa1f f888 	uxth.w	r8, r8
 800f566:	1c7c      	adds	r4, r7, #1
 800f568:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800f56c:	f106 0b01 	add.w	fp, r6, #1
 800f570:	f108 0401 	add.w	r4, r8, #1
 800f574:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 800f578:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800f57c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f580:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800f584:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800f588:	4327      	orrs	r7, r4
 800f58a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800f58e:	ea47 070b 	orr.w	r7, r7, fp
 800f592:	f820 700a 	strh.w	r7, [r0, sl]
 800f596:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f598:	4401      	add	r1, r0
 800f59a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f59c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f5a0:	4402      	add	r2, r0
 800f5a2:	e759      	b.n	800f458 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800f5a4:	b007      	add	sp, #28
 800f5a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f5ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f5ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5b0:	b085      	sub	sp, #20
 800f5b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f5b6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f5b8:	9203      	str	r2, [sp, #12]
 800f5ba:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f5be:	6870      	ldr	r0, [r6, #4]
 800f5c0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800f5c2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 800f5c6:	686f      	ldr	r7, [r5, #4]
 800f5c8:	9101      	str	r1, [sp, #4]
 800f5ca:	fb00 2404 	mla	r4, r0, r4, r2
 800f5ce:	6832      	ldr	r2, [r6, #0]
 800f5d0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f5d4:	682a      	ldr	r2, [r5, #0]
 800f5d6:	9202      	str	r2, [sp, #8]
 800f5d8:	3704      	adds	r7, #4
 800f5da:	9a01      	ldr	r2, [sp, #4]
 800f5dc:	2a00      	cmp	r2, #0
 800f5de:	dc03      	bgt.n	800f5e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800f5e0:	9a03      	ldr	r2, [sp, #12]
 800f5e2:	2a00      	cmp	r2, #0
 800f5e4:	f340 80cc 	ble.w	800f780 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800f5e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f5ea:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800f5ee:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800f5f2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f5f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f5f8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f5fc:	2b00      	cmp	r3, #0
 800f5fe:	dd0d      	ble.n	800f61c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800f600:	1406      	asrs	r6, r0, #16
 800f602:	d405      	bmi.n	800f610 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800f604:	454e      	cmp	r6, r9
 800f606:	da03      	bge.n	800f610 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800f608:	1416      	asrs	r6, r2, #16
 800f60a:	d401      	bmi.n	800f610 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800f60c:	4546      	cmp	r6, r8
 800f60e:	db06      	blt.n	800f61e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800f610:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800f612:	4460      	add	r0, ip
 800f614:	4432      	add	r2, r6
 800f616:	3b01      	subs	r3, #1
 800f618:	3402      	adds	r4, #2
 800f61a:	e7ef      	b.n	800f5fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 800f61c:	d00f      	beq.n	800f63e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800f61e:	1e5e      	subs	r6, r3, #1
 800f620:	fb0c 0e06 	mla	lr, ip, r6, r0
 800f624:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800f628:	d543      	bpl.n	800f6b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 800f62a:	4698      	mov	r8, r3
 800f62c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 800f630:	f1b8 0f00 	cmp.w	r8, #0
 800f634:	dc71      	bgt.n	800f71a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 800f636:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f63a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f63e:	9b01      	ldr	r3, [sp, #4]
 800f640:	2b00      	cmp	r3, #0
 800f642:	f340 809d 	ble.w	800f780 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800f646:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f64a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f64e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f652:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f654:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f658:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f65c:	eeb0 6a62 	vmov.f32	s12, s5
 800f660:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f664:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f668:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f66c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f670:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f674:	eeb0 6a43 	vmov.f32	s12, s6
 800f678:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f67c:	ee12 2a90 	vmov	r2, s5
 800f680:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f684:	fb92 fcf3 	sdiv	ip, r2, r3
 800f688:	ee13 2a10 	vmov	r2, s6
 800f68c:	fb92 f3f3 	sdiv	r3, r2, r3
 800f690:	9312      	str	r3, [sp, #72]	; 0x48
 800f692:	9b01      	ldr	r3, [sp, #4]
 800f694:	9a03      	ldr	r2, [sp, #12]
 800f696:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f69a:	3b01      	subs	r3, #1
 800f69c:	9301      	str	r3, [sp, #4]
 800f69e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f6a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f6a4:	eeb0 3a67 	vmov.f32	s6, s15
 800f6a8:	bf08      	it	eq
 800f6aa:	4613      	moveq	r3, r2
 800f6ac:	eef0 2a47 	vmov.f32	s5, s14
 800f6b0:	e793      	b.n	800f5da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 800f6b2:	45ce      	cmp	lr, r9
 800f6b4:	dab9      	bge.n	800f62a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f6b6:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f6b8:	fb01 2606 	mla	r6, r1, r6, r2
 800f6bc:	1436      	asrs	r6, r6, #16
 800f6be:	d4b4      	bmi.n	800f62a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f6c0:	4546      	cmp	r6, r8
 800f6c2:	dab2      	bge.n	800f62a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f6c4:	4698      	mov	r8, r3
 800f6c6:	46a2      	mov	sl, r4
 800f6c8:	f1b8 0f00 	cmp.w	r8, #0
 800f6cc:	ddb3      	ble.n	800f636 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800f6ce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800f6d2:	9902      	ldr	r1, [sp, #8]
 800f6d4:	1416      	asrs	r6, r2, #16
 800f6d6:	fb09 1606 	mla	r6, r9, r6, r1
 800f6da:	ea4f 4e20 	mov.w	lr, r0, asr #16
 800f6de:	492a      	ldr	r1, [pc, #168]	; (800f788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 800f6e0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 800f6e4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800f6e8:	eb07 0b0e 	add.w	fp, r7, lr
 800f6ec:	4460      	add	r0, ip
 800f6ee:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800f6f2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800f6f6:	00f6      	lsls	r6, r6, #3
 800f6f8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800f6fc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800f700:	ea49 0606 	orr.w	r6, r9, r6
 800f704:	f817 900e 	ldrb.w	r9, [r7, lr]
 800f708:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f70a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 800f70e:	f82a 6b02 	strh.w	r6, [sl], #2
 800f712:	440a      	add	r2, r1
 800f714:	f108 38ff 	add.w	r8, r8, #4294967295
 800f718:	e7d6      	b.n	800f6c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800f71a:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f71e:	d429      	bmi.n	800f774 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800f720:	68ae      	ldr	r6, [r5, #8]
 800f722:	454e      	cmp	r6, r9
 800f724:	dd26      	ble.n	800f774 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800f726:	ea5f 4b22 	movs.w	fp, r2, asr #16
 800f72a:	d423      	bmi.n	800f774 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800f72c:	68e9      	ldr	r1, [r5, #12]
 800f72e:	4559      	cmp	r1, fp
 800f730:	dd20      	ble.n	800f774 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800f732:	9902      	ldr	r1, [sp, #8]
 800f734:	fa0f fe86 	sxth.w	lr, r6
 800f738:	fb0b 1e0e 	mla	lr, fp, lr, r1
 800f73c:	f06f 0101 	mvn.w	r1, #1
 800f740:	f81e e009 	ldrb.w	lr, [lr, r9]
 800f744:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800f748:	eb07 060e 	add.w	r6, r7, lr
 800f74c:	fb01 f908 	mul.w	r9, r1, r8
 800f750:	f896 b002 	ldrb.w	fp, [r6, #2]
 800f754:	7876      	ldrb	r6, [r6, #1]
 800f756:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800f75a:	00f6      	lsls	r6, r6, #3
 800f75c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 800f760:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800f764:	ea4b 0606 	orr.w	r6, fp, r6
 800f768:	f817 b00e 	ldrb.w	fp, [r7, lr]
 800f76c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 800f770:	f82a 6009 	strh.w	r6, [sl, r9]
 800f774:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f776:	4460      	add	r0, ip
 800f778:	440a      	add	r2, r1
 800f77a:	f108 38ff 	add.w	r8, r8, #4294967295
 800f77e:	e757      	b.n	800f630 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800f780:	b005      	add	sp, #20
 800f782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f786:	bf00      	nop
 800f788:	fffff800 	.word	0xfffff800

0800f78c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f790:	b087      	sub	sp, #28
 800f792:	468b      	mov	fp, r1
 800f794:	9815      	ldr	r0, [sp, #84]	; 0x54
 800f796:	9204      	str	r2, [sp, #16]
 800f798:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f79c:	9205      	str	r2, [sp, #20]
 800f79e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f7a2:	6841      	ldr	r1, [r0, #4]
 800f7a4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 800f7a8:	fb01 2404 	mla	r4, r1, r4, r2
 800f7ac:	6802      	ldr	r2, [r0, #0]
 800f7ae:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f7b2:	f8dc 2000 	ldr.w	r2, [ip]
 800f7b6:	9201      	str	r2, [sp, #4]
 800f7b8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800f7bc:	3204      	adds	r2, #4
 800f7be:	9202      	str	r2, [sp, #8]
 800f7c0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f7c4:	f1bb 0f00 	cmp.w	fp, #0
 800f7c8:	dc03      	bgt.n	800f7d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 800f7ca:	9a04      	ldr	r2, [sp, #16]
 800f7cc:	2a00      	cmp	r2, #0
 800f7ce:	f340 8138 	ble.w	800fa42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800f7d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f7d4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800f7d8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 800f7dc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f7e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f7e2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f7e6:	2b00      	cmp	r3, #0
 800f7e8:	dd0e      	ble.n	800f808 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800f7ea:	1402      	asrs	r2, r0, #16
 800f7ec:	d405      	bmi.n	800f7fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800f7ee:	42ba      	cmp	r2, r7
 800f7f0:	da03      	bge.n	800f7fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800f7f2:	140a      	asrs	r2, r1, #16
 800f7f4:	d401      	bmi.n	800f7fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800f7f6:	42b2      	cmp	r2, r6
 800f7f8:	db07      	blt.n	800f80a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f7fa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f7fc:	4410      	add	r0, r2
 800f7fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f800:	3b01      	subs	r3, #1
 800f802:	4411      	add	r1, r2
 800f804:	3402      	adds	r4, #2
 800f806:	e7ee      	b.n	800f7e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 800f808:	d019      	beq.n	800f83e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 800f80a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f80c:	1e5a      	subs	r2, r3, #1
 800f80e:	fb05 0502 	mla	r5, r5, r2, r0
 800f812:	142d      	asrs	r5, r5, #16
 800f814:	d409      	bmi.n	800f82a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f816:	42bd      	cmp	r5, r7
 800f818:	da07      	bge.n	800f82a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f81a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f81c:	fb05 1202 	mla	r2, r5, r2, r1
 800f820:	1412      	asrs	r2, r2, #16
 800f822:	d402      	bmi.n	800f82a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f824:	42b2      	cmp	r2, r6
 800f826:	f2c0 80ac 	blt.w	800f982 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 800f82a:	f04f 0e00 	mov.w	lr, #0
 800f82e:	eb03 020e 	add.w	r2, r3, lr
 800f832:	2a00      	cmp	r2, #0
 800f834:	dc3e      	bgt.n	800f8b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 800f836:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f83a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f83e:	f1bb 0f00 	cmp.w	fp, #0
 800f842:	f340 80fe 	ble.w	800fa42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800f846:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f84a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f84e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f852:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f854:	f1bb 0b01 	subs.w	fp, fp, #1
 800f858:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f85c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f860:	eeb0 6a62 	vmov.f32	s12, s5
 800f864:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f868:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f86c:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f870:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f874:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f878:	eeb0 6a43 	vmov.f32	s12, s6
 800f87c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f880:	ee12 2a90 	vmov	r2, s5
 800f884:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f888:	fb92 f3f3 	sdiv	r3, r2, r3
 800f88c:	ee13 2a10 	vmov	r2, s6
 800f890:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f894:	9313      	str	r3, [sp, #76]	; 0x4c
 800f896:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f898:	fb92 f3f3 	sdiv	r3, r2, r3
 800f89c:	9a04      	ldr	r2, [sp, #16]
 800f89e:	9314      	str	r3, [sp, #80]	; 0x50
 800f8a0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f8a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f8a6:	eeb0 3a67 	vmov.f32	s6, s15
 800f8aa:	bf08      	it	eq
 800f8ac:	4613      	moveq	r3, r2
 800f8ae:	eef0 2a47 	vmov.f32	s5, s14
 800f8b2:	e787      	b.n	800f7c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800f8b4:	1406      	asrs	r6, r0, #16
 800f8b6:	d45d      	bmi.n	800f974 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f8b8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800f8bc:	42b5      	cmp	r5, r6
 800f8be:	dd59      	ble.n	800f974 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f8c0:	140f      	asrs	r7, r1, #16
 800f8c2:	d457      	bmi.n	800f974 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f8c4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 800f8c8:	42ba      	cmp	r2, r7
 800f8ca:	dd53      	ble.n	800f974 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f8cc:	9a01      	ldr	r2, [sp, #4]
 800f8ce:	b22d      	sxth	r5, r5
 800f8d0:	fb07 2505 	mla	r5, r7, r5, r2
 800f8d4:	5daa      	ldrb	r2, [r5, r6]
 800f8d6:	9d02      	ldr	r5, [sp, #8]
 800f8d8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f8dc:	0e2e      	lsrs	r6, r5, #24
 800f8de:	d049      	beq.n	800f974 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f8e0:	f06f 0201 	mvn.w	r2, #1
 800f8e4:	fb02 f20e 	mul.w	r2, r2, lr
 800f8e8:	9203      	str	r2, [sp, #12]
 800f8ea:	f834 8002 	ldrh.w	r8, [r4, r2]
 800f8ee:	9a05      	ldr	r2, [sp, #20]
 800f8f0:	4356      	muls	r6, r2
 800f8f2:	1c72      	adds	r2, r6, #1
 800f8f4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f8f8:	1212      	asrs	r2, r2, #8
 800f8fa:	fa1f f982 	uxth.w	r9, r2
 800f8fe:	ea4f 2728 	mov.w	r7, r8, asr #8
 800f902:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f906:	43d2      	mvns	r2, r2
 800f908:	b2d2      	uxtb	r2, r2
 800f90a:	fb16 f609 	smulbb	r6, r6, r9
 800f90e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f912:	fb07 6702 	mla	r7, r7, r2, r6
 800f916:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f91a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800f91e:	b2ed      	uxtb	r5, r5
 800f920:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f924:	fa5f f888 	uxtb.w	r8, r8
 800f928:	fb15 f509 	smulbb	r5, r5, r9
 800f92c:	fb08 5502 	mla	r5, r8, r2, r5
 800f930:	b2bf      	uxth	r7, r7
 800f932:	fb1a fa09 	smulbb	sl, sl, r9
 800f936:	b2ad      	uxth	r5, r5
 800f938:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f93c:	fb06 a602 	mla	r6, r6, r2, sl
 800f940:	1c7a      	adds	r2, r7, #1
 800f942:	f105 0a01 	add.w	sl, r5, #1
 800f946:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f94a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f94e:	b2b6      	uxth	r6, r6
 800f950:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f954:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f958:	ea4a 0707 	orr.w	r7, sl, r7
 800f95c:	f106 0a01 	add.w	sl, r6, #1
 800f960:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f964:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f968:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f96c:	9a03      	ldr	r2, [sp, #12]
 800f96e:	ea47 070a 	orr.w	r7, r7, sl
 800f972:	52a7      	strh	r7, [r4, r2]
 800f974:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f976:	4410      	add	r0, r2
 800f978:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f97a:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f97e:	4411      	add	r1, r2
 800f980:	e755      	b.n	800f82e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800f982:	f04f 0800 	mov.w	r8, #0
 800f986:	eba3 0208 	sub.w	r2, r3, r8
 800f98a:	2a00      	cmp	r2, #0
 800f98c:	f77f af53 	ble.w	800f836 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 800f990:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 800f994:	9f01      	ldr	r7, [sp, #4]
 800f996:	140a      	asrs	r2, r1, #16
 800f998:	1405      	asrs	r5, r0, #16
 800f99a:	fb06 7202 	mla	r2, r6, r2, r7
 800f99e:	5d52      	ldrb	r2, [r2, r5]
 800f9a0:	9d02      	ldr	r5, [sp, #8]
 800f9a2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f9a6:	0e2e      	lsrs	r6, r5, #24
 800f9a8:	d044      	beq.n	800fa34 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 800f9aa:	9a05      	ldr	r2, [sp, #20]
 800f9ac:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 800f9b0:	4356      	muls	r6, r2
 800f9b2:	1c72      	adds	r2, r6, #1
 800f9b4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f9b8:	1212      	asrs	r2, r2, #8
 800f9ba:	fa1f f982 	uxth.w	r9, r2
 800f9be:	ea4f 272e 	mov.w	r7, lr, asr #8
 800f9c2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f9c6:	43d2      	mvns	r2, r2
 800f9c8:	b2d2      	uxtb	r2, r2
 800f9ca:	fb16 f609 	smulbb	r6, r6, r9
 800f9ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f9d2:	fb07 6702 	mla	r7, r7, r2, r6
 800f9d6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f9da:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f9de:	b2ed      	uxtb	r5, r5
 800f9e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f9e4:	fa5f fe8e 	uxtb.w	lr, lr
 800f9e8:	fb15 f509 	smulbb	r5, r5, r9
 800f9ec:	fb0e 5502 	mla	r5, lr, r2, r5
 800f9f0:	b2bf      	uxth	r7, r7
 800f9f2:	fb1a fa09 	smulbb	sl, sl, r9
 800f9f6:	b2ad      	uxth	r5, r5
 800f9f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f9fc:	fb06 a602 	mla	r6, r6, r2, sl
 800fa00:	1c7a      	adds	r2, r7, #1
 800fa02:	f105 0a01 	add.w	sl, r5, #1
 800fa06:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800fa0a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800fa0e:	b2b6      	uxth	r6, r6
 800fa10:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fa14:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fa18:	ea4a 0707 	orr.w	r7, sl, r7
 800fa1c:	f106 0a01 	add.w	sl, r6, #1
 800fa20:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fa24:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fa28:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fa2c:	ea47 070a 	orr.w	r7, r7, sl
 800fa30:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800fa34:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fa36:	4410      	add	r0, r2
 800fa38:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fa3a:	f108 0801 	add.w	r8, r8, #1
 800fa3e:	4411      	add	r1, r2
 800fa40:	e7a1      	b.n	800f986 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 800fa42:	b007      	add	sp, #28
 800fa44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fa48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fa48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa4c:	b085      	sub	sp, #20
 800fa4e:	468b      	mov	fp, r1
 800fa50:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fa52:	9203      	str	r2, [sp, #12]
 800fa54:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800fa58:	6841      	ldr	r1, [r0, #4]
 800fa5a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 800fa5e:	fb01 2404 	mla	r4, r1, r4, r2
 800fa62:	6802      	ldr	r2, [r0, #0]
 800fa64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fa68:	f8de 2000 	ldr.w	r2, [lr]
 800fa6c:	9200      	str	r2, [sp, #0]
 800fa6e:	f8de 2004 	ldr.w	r2, [lr, #4]
 800fa72:	3204      	adds	r2, #4
 800fa74:	9201      	str	r2, [sp, #4]
 800fa76:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fa7a:	f1bb 0f00 	cmp.w	fp, #0
 800fa7e:	dc03      	bgt.n	800fa88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800fa80:	9a03      	ldr	r2, [sp, #12]
 800fa82:	2a00      	cmp	r2, #0
 800fa84:	f340 8153 	ble.w	800fd2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800fa88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fa8a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800fa8e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800fa92:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fa96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fa98:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fa9c:	2b00      	cmp	r3, #0
 800fa9e:	dd0e      	ble.n	800fabe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800faa0:	1408      	asrs	r0, r1, #16
 800faa2:	d405      	bmi.n	800fab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800faa4:	42b8      	cmp	r0, r7
 800faa6:	da03      	bge.n	800fab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800faa8:	1410      	asrs	r0, r2, #16
 800faaa:	d401      	bmi.n	800fab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800faac:	42b0      	cmp	r0, r6
 800faae:	db07      	blt.n	800fac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800fab0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fab2:	4401      	add	r1, r0
 800fab4:	9812      	ldr	r0, [sp, #72]	; 0x48
 800fab6:	3b01      	subs	r3, #1
 800fab8:	4402      	add	r2, r0
 800faba:	3402      	adds	r4, #2
 800fabc:	e7ee      	b.n	800fa9c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800fabe:	d017      	beq.n	800faf0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800fac0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800fac2:	1e58      	subs	r0, r3, #1
 800fac4:	fb05 1500 	mla	r5, r5, r0, r1
 800fac8:	142d      	asrs	r5, r5, #16
 800faca:	d409      	bmi.n	800fae0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800facc:	42bd      	cmp	r5, r7
 800face:	da07      	bge.n	800fae0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800fad0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800fad2:	fb05 2000 	mla	r0, r5, r0, r2
 800fad6:	1400      	asrs	r0, r0, #16
 800fad8:	d402      	bmi.n	800fae0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800fada:	42b0      	cmp	r0, r6
 800fadc:	f2c0 80bc 	blt.w	800fc58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 800fae0:	2600      	movs	r6, #0
 800fae2:	1998      	adds	r0, r3, r6
 800fae4:	2800      	cmp	r0, #0
 800fae6:	dc3e      	bgt.n	800fb66 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 800fae8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800faec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800faf0:	f1bb 0f00 	cmp.w	fp, #0
 800faf4:	f340 811b 	ble.w	800fd2e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800faf8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fafc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fb00:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fb04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb06:	f1bb 0b01 	subs.w	fp, fp, #1
 800fb0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fb0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fb12:	eeb0 6a62 	vmov.f32	s12, s5
 800fb16:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fb1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fb1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fb22:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800fb26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fb2a:	eeb0 6a43 	vmov.f32	s12, s6
 800fb2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fb32:	ee12 2a90 	vmov	r2, s5
 800fb36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fb3a:	fb92 f3f3 	sdiv	r3, r2, r3
 800fb3e:	ee13 2a10 	vmov	r2, s6
 800fb42:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fb46:	9311      	str	r3, [sp, #68]	; 0x44
 800fb48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb4a:	fb92 f3f3 	sdiv	r3, r2, r3
 800fb4e:	9a03      	ldr	r2, [sp, #12]
 800fb50:	9312      	str	r3, [sp, #72]	; 0x48
 800fb52:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800fb56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb58:	eeb0 3a67 	vmov.f32	s6, s15
 800fb5c:	bf08      	it	eq
 800fb5e:	4613      	moveq	r3, r2
 800fb60:	eef0 2a47 	vmov.f32	s5, s14
 800fb64:	e789      	b.n	800fa7a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 800fb66:	140f      	asrs	r7, r1, #16
 800fb68:	d426      	bmi.n	800fbb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800fb6a:	f8de 5008 	ldr.w	r5, [lr, #8]
 800fb6e:	42bd      	cmp	r5, r7
 800fb70:	dd22      	ble.n	800fbb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800fb72:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800fb76:	d41f      	bmi.n	800fbb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800fb78:	f8de 000c 	ldr.w	r0, [lr, #12]
 800fb7c:	4560      	cmp	r0, ip
 800fb7e:	dd1b      	ble.n	800fbb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800fb80:	9800      	ldr	r0, [sp, #0]
 800fb82:	b22d      	sxth	r5, r5
 800fb84:	fb0c 0505 	mla	r5, ip, r5, r0
 800fb88:	5de8      	ldrb	r0, [r5, r7]
 800fb8a:	9d01      	ldr	r5, [sp, #4]
 800fb8c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800fb90:	0e07      	lsrs	r7, r0, #24
 800fb92:	2fff      	cmp	r7, #255	; 0xff
 800fb94:	d116      	bne.n	800fbc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 800fb96:	f06f 0501 	mvn.w	r5, #1
 800fb9a:	fb05 f706 	mul.w	r7, r5, r6
 800fb9e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800fba2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800fba6:	0945      	lsrs	r5, r0, #5
 800fba8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fbac:	ea4c 0505 	orr.w	r5, ip, r5
 800fbb0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800fbb4:	4305      	orrs	r5, r0
 800fbb6:	53e5      	strh	r5, [r4, r7]
 800fbb8:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fbba:	4401      	add	r1, r0
 800fbbc:	9812      	ldr	r0, [sp, #72]	; 0x48
 800fbbe:	3e01      	subs	r6, #1
 800fbc0:	4402      	add	r2, r0
 800fbc2:	e78e      	b.n	800fae2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 800fbc4:	b2fd      	uxtb	r5, r7
 800fbc6:	2f00      	cmp	r7, #0
 800fbc8:	d0f6      	beq.n	800fbb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800fbca:	f06f 0701 	mvn.w	r7, #1
 800fbce:	4377      	muls	r7, r6
 800fbd0:	fa1f f985 	uxth.w	r9, r5
 800fbd4:	f834 8007 	ldrh.w	r8, [r4, r7]
 800fbd8:	9702      	str	r7, [sp, #8]
 800fbda:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800fbde:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800fbe2:	43ed      	mvns	r5, r5
 800fbe4:	b2ed      	uxtb	r5, r5
 800fbe6:	fb17 f709 	smulbb	r7, r7, r9
 800fbea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fbee:	fb0c 7c05 	mla	ip, ip, r5, r7
 800fbf2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800fbf6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800fbfa:	b2c0      	uxtb	r0, r0
 800fbfc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800fc00:	fa5f f888 	uxtb.w	r8, r8
 800fc04:	fb10 f009 	smulbb	r0, r0, r9
 800fc08:	fb08 0005 	mla	r0, r8, r5, r0
 800fc0c:	b280      	uxth	r0, r0
 800fc0e:	fa1f fc8c 	uxth.w	ip, ip
 800fc12:	fb1a fa09 	smulbb	sl, sl, r9
 800fc16:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fc1a:	fb07 a705 	mla	r7, r7, r5, sl
 800fc1e:	f100 0a01 	add.w	sl, r0, #1
 800fc22:	f10c 0501 	add.w	r5, ip, #1
 800fc26:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800fc2a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fc2e:	b2bf      	uxth	r7, r7
 800fc30:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fc34:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fc38:	ea4a 0c0c 	orr.w	ip, sl, ip
 800fc3c:	f107 0a01 	add.w	sl, r7, #1
 800fc40:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800fc44:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fc48:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fc4c:	9802      	ldr	r0, [sp, #8]
 800fc4e:	ea4c 0c0a 	orr.w	ip, ip, sl
 800fc52:	f824 c000 	strh.w	ip, [r4, r0]
 800fc56:	e7af      	b.n	800fbb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 800fc58:	f04f 0800 	mov.w	r8, #0
 800fc5c:	eba3 0008 	sub.w	r0, r3, r8
 800fc60:	2800      	cmp	r0, #0
 800fc62:	f77f af41 	ble.w	800fae8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800fc66:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800fc6a:	9f00      	ldr	r7, [sp, #0]
 800fc6c:	1410      	asrs	r0, r2, #16
 800fc6e:	140d      	asrs	r5, r1, #16
 800fc70:	fb06 7000 	mla	r0, r6, r0, r7
 800fc74:	5d40      	ldrb	r0, [r0, r5]
 800fc76:	9d01      	ldr	r5, [sp, #4]
 800fc78:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 800fc7c:	0e2e      	lsrs	r6, r5, #24
 800fc7e:	2eff      	cmp	r6, #255	; 0xff
 800fc80:	d112      	bne.n	800fca8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 800fc82:	482c      	ldr	r0, [pc, #176]	; (800fd34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 800fc84:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 800fc88:	0968      	lsrs	r0, r5, #5
 800fc8a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 800fc8e:	4330      	orrs	r0, r6
 800fc90:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 800fc94:	4328      	orrs	r0, r5
 800fc96:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 800fc9a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fc9c:	4401      	add	r1, r0
 800fc9e:	9812      	ldr	r0, [sp, #72]	; 0x48
 800fca0:	f108 0801 	add.w	r8, r8, #1
 800fca4:	4402      	add	r2, r0
 800fca6:	e7d9      	b.n	800fc5c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 800fca8:	b2f0      	uxtb	r0, r6
 800fcaa:	2e00      	cmp	r6, #0
 800fcac:	d0f5      	beq.n	800fc9a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 800fcae:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800fcb2:	fa1f f980 	uxth.w	r9, r0
 800fcb6:	ea4f 272c 	mov.w	r7, ip, asr #8
 800fcba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800fcbe:	43c0      	mvns	r0, r0
 800fcc0:	b2c0      	uxtb	r0, r0
 800fcc2:	fb16 f609 	smulbb	r6, r6, r9
 800fcc6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fcca:	fb07 6700 	mla	r7, r7, r0, r6
 800fcce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800fcd2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800fcd6:	b2ed      	uxtb	r5, r5
 800fcd8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800fcdc:	fa5f fc8c 	uxtb.w	ip, ip
 800fce0:	fb15 f509 	smulbb	r5, r5, r9
 800fce4:	fb0c 5500 	mla	r5, ip, r0, r5
 800fce8:	b2bf      	uxth	r7, r7
 800fcea:	fb1a fa09 	smulbb	sl, sl, r9
 800fcee:	b2ad      	uxth	r5, r5
 800fcf0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fcf4:	fb06 a600 	mla	r6, r6, r0, sl
 800fcf8:	1c78      	adds	r0, r7, #1
 800fcfa:	f105 0a01 	add.w	sl, r5, #1
 800fcfe:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 800fd02:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800fd06:	b2b6      	uxth	r6, r6
 800fd08:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fd0c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fd10:	ea4a 0707 	orr.w	r7, sl, r7
 800fd14:	f106 0a01 	add.w	sl, r6, #1
 800fd18:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fd1c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fd20:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fd24:	ea47 070a 	orr.w	r7, r7, sl
 800fd28:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800fd2c:	e7b5      	b.n	800fc9a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 800fd2e:	b005      	add	sp, #20
 800fd30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd34:	fffff800 	.word	0xfffff800

0800fd38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fd38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd3c:	b087      	sub	sp, #28
 800fd3e:	468b      	mov	fp, r1
 800fd40:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800fd42:	9204      	str	r2, [sp, #16]
 800fd44:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800fd48:	9205      	str	r2, [sp, #20]
 800fd4a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800fd4e:	6861      	ldr	r1, [r4, #4]
 800fd50:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800fd54:	fb01 2000 	mla	r0, r1, r0, r2
 800fd58:	6822      	ldr	r2, [r4, #0]
 800fd5a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800fd5e:	f8de 2000 	ldr.w	r2, [lr]
 800fd62:	9201      	str	r2, [sp, #4]
 800fd64:	f8de 2004 	ldr.w	r2, [lr, #4]
 800fd68:	9202      	str	r2, [sp, #8]
 800fd6a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fd6e:	f1bb 0f00 	cmp.w	fp, #0
 800fd72:	dc03      	bgt.n	800fd7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 800fd74:	9a04      	ldr	r2, [sp, #16]
 800fd76:	2a00      	cmp	r2, #0
 800fd78:	f340 8142 	ble.w	8010000 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800fd7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fd7e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800fd82:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800fd86:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fd8a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fd8c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fd90:	2b00      	cmp	r3, #0
 800fd92:	dd0e      	ble.n	800fdb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 800fd94:	140c      	asrs	r4, r1, #16
 800fd96:	d405      	bmi.n	800fda4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800fd98:	42bc      	cmp	r4, r7
 800fd9a:	da03      	bge.n	800fda4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800fd9c:	1414      	asrs	r4, r2, #16
 800fd9e:	d401      	bmi.n	800fda4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800fda0:	42b4      	cmp	r4, r6
 800fda2:	db07      	blt.n	800fdb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800fda4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fda6:	4421      	add	r1, r4
 800fda8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800fdaa:	3b01      	subs	r3, #1
 800fdac:	4422      	add	r2, r4
 800fdae:	3002      	adds	r0, #2
 800fdb0:	e7ee      	b.n	800fd90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 800fdb2:	d019      	beq.n	800fde8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 800fdb4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fdb6:	1e5c      	subs	r4, r3, #1
 800fdb8:	fb05 1504 	mla	r5, r5, r4, r1
 800fdbc:	142d      	asrs	r5, r5, #16
 800fdbe:	d409      	bmi.n	800fdd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800fdc0:	42bd      	cmp	r5, r7
 800fdc2:	da07      	bge.n	800fdd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800fdc4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fdc6:	fb05 2404 	mla	r4, r5, r4, r2
 800fdca:	1424      	asrs	r4, r4, #16
 800fdcc:	d402      	bmi.n	800fdd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800fdce:	42b4      	cmp	r4, r6
 800fdd0:	f2c0 80b1 	blt.w	800ff36 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 800fdd4:	f04f 0800 	mov.w	r8, #0
 800fdd8:	eb03 0408 	add.w	r4, r3, r8
 800fddc:	2c00      	cmp	r4, #0
 800fdde:	dc3e      	bgt.n	800fe5e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 800fde0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fde4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800fde8:	f1bb 0f00 	cmp.w	fp, #0
 800fdec:	f340 8108 	ble.w	8010000 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800fdf0:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fdf4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fdf8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fdfc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fdfe:	f1bb 0b01 	subs.w	fp, fp, #1
 800fe02:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fe06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fe0a:	eeb0 6a62 	vmov.f32	s12, s5
 800fe0e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fe12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe16:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fe1a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fe1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fe22:	eeb0 6a43 	vmov.f32	s12, s6
 800fe26:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fe2a:	ee12 2a90 	vmov	r2, s5
 800fe2e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fe32:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe36:	ee13 2a10 	vmov	r2, s6
 800fe3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe3e:	9313      	str	r3, [sp, #76]	; 0x4c
 800fe40:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe42:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe46:	9a04      	ldr	r2, [sp, #16]
 800fe48:	9314      	str	r3, [sp, #80]	; 0x50
 800fe4a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fe4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe50:	eeb0 3a67 	vmov.f32	s6, s15
 800fe54:	bf08      	it	eq
 800fe56:	4613      	moveq	r3, r2
 800fe58:	eef0 2a47 	vmov.f32	s5, s14
 800fe5c:	e787      	b.n	800fd6e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 800fe5e:	140e      	asrs	r6, r1, #16
 800fe60:	d462      	bmi.n	800ff28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800fe62:	f8de 5008 	ldr.w	r5, [lr, #8]
 800fe66:	42b5      	cmp	r5, r6
 800fe68:	dd5e      	ble.n	800ff28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800fe6a:	1417      	asrs	r7, r2, #16
 800fe6c:	d45c      	bmi.n	800ff28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800fe6e:	f8de 400c 	ldr.w	r4, [lr, #12]
 800fe72:	42bc      	cmp	r4, r7
 800fe74:	dd58      	ble.n	800ff28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800fe76:	b22d      	sxth	r5, r5
 800fe78:	fb07 6505 	mla	r5, r7, r5, r6
 800fe7c:	9c02      	ldr	r4, [sp, #8]
 800fe7e:	5d66      	ldrb	r6, [r4, r5]
 800fe80:	2e00      	cmp	r6, #0
 800fe82:	d051      	beq.n	800ff28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800fe84:	9c01      	ldr	r4, [sp, #4]
 800fe86:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 800fe8a:	f06f 0401 	mvn.w	r4, #1
 800fe8e:	fb04 f408 	mul.w	r4, r4, r8
 800fe92:	9403      	str	r4, [sp, #12]
 800fe94:	5b05      	ldrh	r5, [r0, r4]
 800fe96:	9c05      	ldr	r4, [sp, #20]
 800fe98:	4366      	muls	r6, r4
 800fe9a:	1c74      	adds	r4, r6, #1
 800fe9c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800fea0:	1224      	asrs	r4, r4, #8
 800fea2:	b2a7      	uxth	r7, r4
 800fea4:	122e      	asrs	r6, r5, #8
 800fea6:	43e4      	mvns	r4, r4
 800fea8:	b2e4      	uxtb	r4, r4
 800feaa:	ea4f 2c29 	mov.w	ip, r9, asr #8
 800feae:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800feb2:	fb16 f604 	smulbb	r6, r6, r4
 800feb6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800feba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800febe:	00ed      	lsls	r5, r5, #3
 800fec0:	fb0c 6c07 	mla	ip, ip, r7, r6
 800fec4:	b2ed      	uxtb	r5, r5
 800fec6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 800feca:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800fece:	fb15 f504 	smulbb	r5, r5, r4
 800fed2:	fa5f f989 	uxtb.w	r9, r9
 800fed6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800feda:	fb09 5507 	mla	r5, r9, r7, r5
 800fede:	fb1a fa04 	smulbb	sl, sl, r4
 800fee2:	fa1f fc8c 	uxth.w	ip, ip
 800fee6:	b2ad      	uxth	r5, r5
 800fee8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800feec:	fb06 a607 	mla	r6, r6, r7, sl
 800fef0:	f10c 0401 	add.w	r4, ip, #1
 800fef4:	f105 0a01 	add.w	sl, r5, #1
 800fef8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800fefc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ff00:	b2b6      	uxth	r6, r6
 800ff02:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ff06:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ff0a:	ea4a 0c0c 	orr.w	ip, sl, ip
 800ff0e:	f106 0a01 	add.w	sl, r6, #1
 800ff12:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ff16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ff1a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ff1e:	9c03      	ldr	r4, [sp, #12]
 800ff20:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ff24:	f820 c004 	strh.w	ip, [r0, r4]
 800ff28:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800ff2a:	4421      	add	r1, r4
 800ff2c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800ff2e:	f108 38ff 	add.w	r8, r8, #4294967295
 800ff32:	4422      	add	r2, r4
 800ff34:	e750      	b.n	800fdd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800ff36:	f04f 0900 	mov.w	r9, #0
 800ff3a:	eba3 0409 	sub.w	r4, r3, r9
 800ff3e:	2c00      	cmp	r4, #0
 800ff40:	f77f af4e 	ble.w	800fde0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800ff44:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800ff48:	140d      	asrs	r5, r1, #16
 800ff4a:	1414      	asrs	r4, r2, #16
 800ff4c:	fb06 5404 	mla	r4, r6, r4, r5
 800ff50:	9d02      	ldr	r5, [sp, #8]
 800ff52:	5d2e      	ldrb	r6, [r5, r4]
 800ff54:	2e00      	cmp	r6, #0
 800ff56:	d04c      	beq.n	800fff2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 800ff58:	9d01      	ldr	r5, [sp, #4]
 800ff5a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 800ff5e:	9c05      	ldr	r4, [sp, #20]
 800ff60:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800ff64:	4366      	muls	r6, r4
 800ff66:	1c74      	adds	r4, r6, #1
 800ff68:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800ff6c:	1224      	asrs	r4, r4, #8
 800ff6e:	b2a7      	uxth	r7, r4
 800ff70:	122e      	asrs	r6, r5, #8
 800ff72:	43e4      	mvns	r4, r4
 800ff74:	b2e4      	uxtb	r4, r4
 800ff76:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800ff7a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800ff7e:	fb16 f604 	smulbb	r6, r6, r4
 800ff82:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800ff86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ff8a:	00ed      	lsls	r5, r5, #3
 800ff8c:	fb0c 6c07 	mla	ip, ip, r7, r6
 800ff90:	b2ed      	uxtb	r5, r5
 800ff92:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800ff96:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800ff9a:	fb15 f504 	smulbb	r5, r5, r4
 800ff9e:	fa5f f888 	uxtb.w	r8, r8
 800ffa2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800ffa6:	fb08 5507 	mla	r5, r8, r7, r5
 800ffaa:	fb1a fa04 	smulbb	sl, sl, r4
 800ffae:	fa1f fc8c 	uxth.w	ip, ip
 800ffb2:	b2ad      	uxth	r5, r5
 800ffb4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ffb8:	fb06 a607 	mla	r6, r6, r7, sl
 800ffbc:	f10c 0401 	add.w	r4, ip, #1
 800ffc0:	f105 0a01 	add.w	sl, r5, #1
 800ffc4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800ffc8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ffcc:	b2b6      	uxth	r6, r6
 800ffce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ffd2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ffd6:	ea4a 0c0c 	orr.w	ip, sl, ip
 800ffda:	f106 0a01 	add.w	sl, r6, #1
 800ffde:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ffe2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ffe6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ffea:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ffee:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800fff2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800fff4:	4421      	add	r1, r4
 800fff6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800fff8:	f109 0901 	add.w	r9, r9, #1
 800fffc:	4422      	add	r2, r4
 800fffe:	e79c      	b.n	800ff3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8010000:	b007      	add	sp, #28
 8010002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010006 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010006:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801000a:	b085      	sub	sp, #20
 801000c:	468b      	mov	fp, r1
 801000e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010010:	9203      	str	r2, [sp, #12]
 8010012:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8010016:	6861      	ldr	r1, [r4, #4]
 8010018:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801001c:	fb01 2000 	mla	r0, r1, r0, r2
 8010020:	6822      	ldr	r2, [r4, #0]
 8010022:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010026:	f8d8 2000 	ldr.w	r2, [r8]
 801002a:	9200      	str	r2, [sp, #0]
 801002c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8010030:	9201      	str	r2, [sp, #4]
 8010032:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010036:	f1bb 0f00 	cmp.w	fp, #0
 801003a:	dc03      	bgt.n	8010044 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801003c:	9a03      	ldr	r2, [sp, #12]
 801003e:	2a00      	cmp	r2, #0
 8010040:	f340 8146 	ble.w	80102d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010044:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010046:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801004a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801004e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010052:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010054:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010058:	2b00      	cmp	r3, #0
 801005a:	dd0e      	ble.n	801007a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801005c:	140c      	asrs	r4, r1, #16
 801005e:	d405      	bmi.n	801006c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010060:	42bc      	cmp	r4, r7
 8010062:	da03      	bge.n	801006c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010064:	1414      	asrs	r4, r2, #16
 8010066:	d401      	bmi.n	801006c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010068:	42b4      	cmp	r4, r6
 801006a:	db07      	blt.n	801007c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801006c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801006e:	4421      	add	r1, r4
 8010070:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010072:	3b01      	subs	r3, #1
 8010074:	4422      	add	r2, r4
 8010076:	3002      	adds	r0, #2
 8010078:	e7ee      	b.n	8010058 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801007a:	d017      	beq.n	80100ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801007c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801007e:	1e5c      	subs	r4, r3, #1
 8010080:	fb05 1504 	mla	r5, r5, r4, r1
 8010084:	142d      	asrs	r5, r5, #16
 8010086:	d409      	bmi.n	801009c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010088:	42bd      	cmp	r5, r7
 801008a:	da07      	bge.n	801009c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801008c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801008e:	fb05 2404 	mla	r4, r5, r4, r2
 8010092:	1424      	asrs	r4, r4, #16
 8010094:	d402      	bmi.n	801009c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010096:	42b4      	cmp	r4, r6
 8010098:	f2c0 80b3 	blt.w	8010202 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801009c:	2600      	movs	r6, #0
 801009e:	199c      	adds	r4, r3, r6
 80100a0:	2c00      	cmp	r4, #0
 80100a2:	dc3e      	bgt.n	8010122 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80100a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80100a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80100ac:	f1bb 0f00 	cmp.w	fp, #0
 80100b0:	f340 810e 	ble.w	80102d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80100b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80100b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80100bc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80100c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80100c2:	f1bb 0b01 	subs.w	fp, fp, #1
 80100c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80100ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80100ce:	eeb0 6a62 	vmov.f32	s12, s5
 80100d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80100d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80100da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80100de:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80100e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80100e6:	eeb0 6a43 	vmov.f32	s12, s6
 80100ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80100ee:	ee12 2a90 	vmov	r2, s5
 80100f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80100f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80100fa:	ee13 2a10 	vmov	r2, s6
 80100fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010102:	9311      	str	r3, [sp, #68]	; 0x44
 8010104:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010106:	fb92 f3f3 	sdiv	r3, r2, r3
 801010a:	9a03      	ldr	r2, [sp, #12]
 801010c:	9312      	str	r3, [sp, #72]	; 0x48
 801010e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010112:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010114:	eeb0 3a67 	vmov.f32	s6, s15
 8010118:	bf08      	it	eq
 801011a:	4613      	moveq	r3, r2
 801011c:	eef0 2a47 	vmov.f32	s5, s14
 8010120:	e789      	b.n	8010036 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010122:	140f      	asrs	r7, r1, #16
 8010124:	d418      	bmi.n	8010158 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8010126:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801012a:	42bd      	cmp	r5, r7
 801012c:	dd14      	ble.n	8010158 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801012e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010132:	d411      	bmi.n	8010158 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8010134:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8010138:	4564      	cmp	r4, ip
 801013a:	dd0d      	ble.n	8010158 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801013c:	b22d      	sxth	r5, r5
 801013e:	fb0c 7505 	mla	r5, ip, r5, r7
 8010142:	9c01      	ldr	r4, [sp, #4]
 8010144:	5d64      	ldrb	r4, [r4, r5]
 8010146:	2cff      	cmp	r4, #255	; 0xff
 8010148:	d10c      	bne.n	8010164 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801014a:	9c00      	ldr	r4, [sp, #0]
 801014c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8010150:	f06f 0401 	mvn.w	r4, #1
 8010154:	4374      	muls	r4, r6
 8010156:	5305      	strh	r5, [r0, r4]
 8010158:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801015a:	4421      	add	r1, r4
 801015c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801015e:	3e01      	subs	r6, #1
 8010160:	4422      	add	r2, r4
 8010162:	e79c      	b.n	801009e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010164:	2c00      	cmp	r4, #0
 8010166:	d0f7      	beq.n	8010158 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8010168:	9f00      	ldr	r7, [sp, #0]
 801016a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801016e:	f06f 0501 	mvn.w	r5, #1
 8010172:	4375      	muls	r5, r6
 8010174:	9502      	str	r5, [sp, #8]
 8010176:	5b45      	ldrh	r5, [r0, r5]
 8010178:	fa1f fc84 	uxth.w	ip, r4
 801017c:	122f      	asrs	r7, r5, #8
 801017e:	43e4      	mvns	r4, r4
 8010180:	b2e4      	uxtb	r4, r4
 8010182:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8010186:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801018a:	fb17 f704 	smulbb	r7, r7, r4
 801018e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010192:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010196:	00ed      	lsls	r5, r5, #3
 8010198:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801019c:	b2ed      	uxtb	r5, r5
 801019e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80101a2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80101a6:	fb15 f504 	smulbb	r5, r5, r4
 80101aa:	fa5f f989 	uxtb.w	r9, r9
 80101ae:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80101b2:	fb09 550c 	mla	r5, r9, ip, r5
 80101b6:	fb1a fa04 	smulbb	sl, sl, r4
 80101ba:	fa1f fe8e 	uxth.w	lr, lr
 80101be:	b2ad      	uxth	r5, r5
 80101c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80101c4:	fb07 a70c 	mla	r7, r7, ip, sl
 80101c8:	f10e 0401 	add.w	r4, lr, #1
 80101cc:	f105 0a01 	add.w	sl, r5, #1
 80101d0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80101d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80101d8:	b2bf      	uxth	r7, r7
 80101da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80101de:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80101e2:	ea4a 0e0e 	orr.w	lr, sl, lr
 80101e6:	f107 0a01 	add.w	sl, r7, #1
 80101ea:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80101ee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80101f2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80101f6:	9c02      	ldr	r4, [sp, #8]
 80101f8:	ea4e 0e0a 	orr.w	lr, lr, sl
 80101fc:	f820 e004 	strh.w	lr, [r0, r4]
 8010200:	e7aa      	b.n	8010158 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8010202:	f04f 0900 	mov.w	r9, #0
 8010206:	eba3 0409 	sub.w	r4, r3, r9
 801020a:	2c00      	cmp	r4, #0
 801020c:	f77f af4a 	ble.w	80100a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010210:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8010214:	1414      	asrs	r4, r2, #16
 8010216:	140d      	asrs	r5, r1, #16
 8010218:	fb06 5504 	mla	r5, r6, r4, r5
 801021c:	9c01      	ldr	r4, [sp, #4]
 801021e:	5d64      	ldrb	r4, [r4, r5]
 8010220:	2cff      	cmp	r4, #255	; 0xff
 8010222:	d10b      	bne.n	801023c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8010224:	9c00      	ldr	r4, [sp, #0]
 8010226:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801022a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801022e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010230:	4421      	add	r1, r4
 8010232:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010234:	f109 0901 	add.w	r9, r9, #1
 8010238:	4422      	add	r2, r4
 801023a:	e7e4      	b.n	8010206 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801023c:	2c00      	cmp	r4, #0
 801023e:	d0f6      	beq.n	801022e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8010240:	9e00      	ldr	r6, [sp, #0]
 8010242:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8010246:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801024a:	b2a7      	uxth	r7, r4
 801024c:	122e      	asrs	r6, r5, #8
 801024e:	43e4      	mvns	r4, r4
 8010250:	b2e4      	uxtb	r4, r4
 8010252:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010256:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801025a:	fb16 f604 	smulbb	r6, r6, r4
 801025e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010262:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010266:	00ed      	lsls	r5, r5, #3
 8010268:	fb0c 6c07 	mla	ip, ip, r7, r6
 801026c:	b2ed      	uxtb	r5, r5
 801026e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010272:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010276:	fb15 f504 	smulbb	r5, r5, r4
 801027a:	fa5f fe8e 	uxtb.w	lr, lr
 801027e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010282:	fb0e 5507 	mla	r5, lr, r7, r5
 8010286:	fb1a fa04 	smulbb	sl, sl, r4
 801028a:	fa1f fc8c 	uxth.w	ip, ip
 801028e:	b2ad      	uxth	r5, r5
 8010290:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010294:	fb06 a607 	mla	r6, r6, r7, sl
 8010298:	f10c 0401 	add.w	r4, ip, #1
 801029c:	f105 0a01 	add.w	sl, r5, #1
 80102a0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80102a4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80102a8:	b2b6      	uxth	r6, r6
 80102aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80102ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80102b2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80102b6:	f106 0a01 	add.w	sl, r6, #1
 80102ba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80102be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80102c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80102c6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80102ca:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80102ce:	e7ae      	b.n	801022e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80102d0:	b005      	add	sp, #20
 80102d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080102d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80102d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102da:	b085      	sub	sp, #20
 80102dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80102de:	9203      	str	r2, [sp, #12]
 80102e0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80102e4:	9201      	str	r2, [sp, #4]
 80102e6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80102ea:	9100      	str	r1, [sp, #0]
 80102ec:	6841      	ldr	r1, [r0, #4]
 80102ee:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80102f2:	fb01 2404 	mla	r4, r1, r4, r2
 80102f6:	6802      	ldr	r2, [r0, #0]
 80102f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80102fc:	f8de 2000 	ldr.w	r2, [lr]
 8010300:	9202      	str	r2, [sp, #8]
 8010302:	9a01      	ldr	r2, [sp, #4]
 8010304:	43d6      	mvns	r6, r2
 8010306:	b2f6      	uxtb	r6, r6
 8010308:	9a00      	ldr	r2, [sp, #0]
 801030a:	2a00      	cmp	r2, #0
 801030c:	dc03      	bgt.n	8010316 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801030e:	9a03      	ldr	r2, [sp, #12]
 8010310:	2a00      	cmp	r2, #0
 8010312:	f340 8124 	ble.w	801055e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8010316:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010318:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801031c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8010320:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010324:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010326:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801032a:	2b00      	cmp	r3, #0
 801032c:	dd0e      	ble.n	801034c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801032e:	1408      	asrs	r0, r1, #16
 8010330:	d405      	bmi.n	801033e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010332:	4560      	cmp	r0, ip
 8010334:	da03      	bge.n	801033e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010336:	1410      	asrs	r0, r2, #16
 8010338:	d401      	bmi.n	801033e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801033a:	42b8      	cmp	r0, r7
 801033c:	db07      	blt.n	801034e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801033e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010340:	4401      	add	r1, r0
 8010342:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010344:	3b01      	subs	r3, #1
 8010346:	4402      	add	r2, r0
 8010348:	3402      	adds	r4, #2
 801034a:	e7ee      	b.n	801032a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801034c:	d06e      	beq.n	801042c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801034e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010350:	1e58      	subs	r0, r3, #1
 8010352:	fb05 1500 	mla	r5, r5, r0, r1
 8010356:	142d      	asrs	r5, r5, #16
 8010358:	d45c      	bmi.n	8010414 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801035a:	4565      	cmp	r5, ip
 801035c:	da5a      	bge.n	8010414 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801035e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010360:	fb05 2000 	mla	r0, r5, r0, r2
 8010364:	1400      	asrs	r0, r0, #16
 8010366:	d455      	bmi.n	8010414 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8010368:	42b8      	cmp	r0, r7
 801036a:	da53      	bge.n	8010414 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801036c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8010370:	4699      	mov	r9, r3
 8010372:	46a2      	mov	sl, r4
 8010374:	f1b9 0f00 	cmp.w	r9, #0
 8010378:	dd54      	ble.n	8010424 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801037a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801037e:	140d      	asrs	r5, r1, #16
 8010380:	1410      	asrs	r0, r2, #16
 8010382:	fb07 5000 	mla	r0, r7, r0, r5
 8010386:	9d02      	ldr	r5, [sp, #8]
 8010388:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801038c:	f8ba 5000 	ldrh.w	r5, [sl]
 8010390:	122f      	asrs	r7, r5, #8
 8010392:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010396:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801039a:	fb17 f706 	smulbb	r7, r7, r6
 801039e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80103a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80103a6:	00ed      	lsls	r5, r5, #3
 80103a8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80103ac:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80103b0:	10c7      	asrs	r7, r0, #3
 80103b2:	b2ed      	uxtb	r5, r5
 80103b4:	00c0      	lsls	r0, r0, #3
 80103b6:	fb18 f806 	smulbb	r8, r8, r6
 80103ba:	fb15 f506 	smulbb	r5, r5, r6
 80103be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80103c2:	b2c0      	uxtb	r0, r0
 80103c4:	fa1f fc8c 	uxth.w	ip, ip
 80103c8:	fb07 870b 	mla	r7, r7, fp, r8
 80103cc:	fb00 500b 	mla	r0, r0, fp, r5
 80103d0:	b280      	uxth	r0, r0
 80103d2:	b2bf      	uxth	r7, r7
 80103d4:	f10c 0501 	add.w	r5, ip, #1
 80103d8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80103dc:	f107 0801 	add.w	r8, r7, #1
 80103e0:	1c45      	adds	r5, r0, #1
 80103e2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80103e6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80103ea:	9811      	ldr	r0, [sp, #68]	; 0x44
 80103ec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80103f0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80103f4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80103f8:	ea45 0c0c 	orr.w	ip, r5, ip
 80103fc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8010400:	4401      	add	r1, r0
 8010402:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010404:	ea4c 0c08 	orr.w	ip, ip, r8
 8010408:	f82a cb02 	strh.w	ip, [sl], #2
 801040c:	4402      	add	r2, r0
 801040e:	f109 39ff 	add.w	r9, r9, #4294967295
 8010412:	e7af      	b.n	8010374 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010414:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8010418:	f04f 0800 	mov.w	r8, #0
 801041c:	eb03 0008 	add.w	r0, r3, r8
 8010420:	2800      	cmp	r0, #0
 8010422:	dc41      	bgt.n	80104a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8010424:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010428:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801042c:	9b00      	ldr	r3, [sp, #0]
 801042e:	2b00      	cmp	r3, #0
 8010430:	f340 8095 	ble.w	801055e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8010434:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010438:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801043c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010440:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010442:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010446:	ee31 1a05 	vadd.f32	s2, s2, s10
 801044a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801044e:	eef0 6a62 	vmov.f32	s13, s5
 8010452:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010456:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801045a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801045e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8010462:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010466:	eef0 6a43 	vmov.f32	s13, s6
 801046a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801046e:	ee12 2a90 	vmov	r2, s5
 8010472:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010476:	fb92 f3f3 	sdiv	r3, r2, r3
 801047a:	ee13 2a10 	vmov	r2, s6
 801047e:	9311      	str	r3, [sp, #68]	; 0x44
 8010480:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010482:	fb92 f3f3 	sdiv	r3, r2, r3
 8010486:	9312      	str	r3, [sp, #72]	; 0x48
 8010488:	9b00      	ldr	r3, [sp, #0]
 801048a:	9a03      	ldr	r2, [sp, #12]
 801048c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010490:	3b01      	subs	r3, #1
 8010492:	9300      	str	r3, [sp, #0]
 8010494:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8010498:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801049a:	eeb0 3a67 	vmov.f32	s6, s15
 801049e:	bf08      	it	eq
 80104a0:	4613      	moveq	r3, r2
 80104a2:	eef0 2a47 	vmov.f32	s5, s14
 80104a6:	e72f      	b.n	8010308 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80104a8:	140f      	asrs	r7, r1, #16
 80104aa:	d451      	bmi.n	8010550 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80104ac:	f8de 5008 	ldr.w	r5, [lr, #8]
 80104b0:	42bd      	cmp	r5, r7
 80104b2:	dd4d      	ble.n	8010550 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80104b4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80104b8:	d44a      	bmi.n	8010550 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80104ba:	f8de 000c 	ldr.w	r0, [lr, #12]
 80104be:	4560      	cmp	r0, ip
 80104c0:	dd46      	ble.n	8010550 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80104c2:	b22d      	sxth	r5, r5
 80104c4:	fb0c 7505 	mla	r5, ip, r5, r7
 80104c8:	9802      	ldr	r0, [sp, #8]
 80104ca:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80104ce:	f06f 0501 	mvn.w	r5, #1
 80104d2:	fb05 fb08 	mul.w	fp, r5, r8
 80104d6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80104da:	f834 500b 	ldrh.w	r5, [r4, fp]
 80104de:	122f      	asrs	r7, r5, #8
 80104e0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80104e4:	fb17 f706 	smulbb	r7, r7, r6
 80104e8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80104ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80104f0:	00ed      	lsls	r5, r5, #3
 80104f2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80104f6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80104fa:	10c7      	asrs	r7, r0, #3
 80104fc:	b2ed      	uxtb	r5, r5
 80104fe:	00c0      	lsls	r0, r0, #3
 8010500:	fb19 f906 	smulbb	r9, r9, r6
 8010504:	fb15 f506 	smulbb	r5, r5, r6
 8010508:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801050c:	b2c0      	uxtb	r0, r0
 801050e:	fa1f fc8c 	uxth.w	ip, ip
 8010512:	fb07 970a 	mla	r7, r7, sl, r9
 8010516:	fb00 500a 	mla	r0, r0, sl, r5
 801051a:	b2bf      	uxth	r7, r7
 801051c:	b280      	uxth	r0, r0
 801051e:	f10c 0501 	add.w	r5, ip, #1
 8010522:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010526:	f107 0901 	add.w	r9, r7, #1
 801052a:	1c45      	adds	r5, r0, #1
 801052c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010530:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010534:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010538:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801053c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010540:	ea45 0c0c 	orr.w	ip, r5, ip
 8010544:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010548:	ea4c 0c09 	orr.w	ip, ip, r9
 801054c:	f824 c00b 	strh.w	ip, [r4, fp]
 8010550:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010552:	4401      	add	r1, r0
 8010554:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010556:	f108 38ff 	add.w	r8, r8, #4294967295
 801055a:	4402      	add	r2, r0
 801055c:	e75e      	b.n	801041c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801055e:	b005      	add	sp, #20
 8010560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010564 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010568:	b085      	sub	sp, #20
 801056a:	4693      	mov	fp, r2
 801056c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801056e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8010570:	6870      	ldr	r0, [r6, #4]
 8010572:	9101      	str	r1, [sp, #4]
 8010574:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010578:	fb00 2404 	mla	r4, r0, r4, r2
 801057c:	6832      	ldr	r2, [r6, #0]
 801057e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8010582:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010586:	682a      	ldr	r2, [r5, #0]
 8010588:	9202      	str	r2, [sp, #8]
 801058a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801058e:	9a01      	ldr	r2, [sp, #4]
 8010590:	2a00      	cmp	r2, #0
 8010592:	dc03      	bgt.n	801059c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8010594:	f1bb 0f00 	cmp.w	fp, #0
 8010598:	f340 809a 	ble.w	80106d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801059c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801059e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80105a2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80105a6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80105aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80105ac:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80105b0:	2b00      	cmp	r3, #0
 80105b2:	dd0c      	ble.n	80105ce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80105b4:	1406      	asrs	r6, r0, #16
 80105b6:	d405      	bmi.n	80105c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80105b8:	454e      	cmp	r6, r9
 80105ba:	da03      	bge.n	80105c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80105bc:	1416      	asrs	r6, r2, #16
 80105be:	d401      	bmi.n	80105c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80105c0:	4546      	cmp	r6, r8
 80105c2:	db05      	blt.n	80105d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80105c4:	4470      	add	r0, lr
 80105c6:	4462      	add	r2, ip
 80105c8:	3b01      	subs	r3, #1
 80105ca:	3402      	adds	r4, #2
 80105cc:	e7f0      	b.n	80105b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80105ce:	d00f      	beq.n	80105f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80105d0:	1e5e      	subs	r6, r3, #1
 80105d2:	fb0e 0706 	mla	r7, lr, r6, r0
 80105d6:	143f      	asrs	r7, r7, #16
 80105d8:	d541      	bpl.n	801065e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80105da:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80105de:	4698      	mov	r8, r3
 80105e0:	9603      	str	r6, [sp, #12]
 80105e2:	f1b8 0f00 	cmp.w	r8, #0
 80105e6:	dc56      	bgt.n	8010696 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80105e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80105ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80105f0:	9b01      	ldr	r3, [sp, #4]
 80105f2:	2b00      	cmp	r3, #0
 80105f4:	dd6c      	ble.n	80106d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80105f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80105fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80105fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010602:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010604:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010608:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801060c:	eeb0 6a62 	vmov.f32	s12, s5
 8010610:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010614:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010618:	ee77 2a62 	vsub.f32	s5, s14, s5
 801061c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010620:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010624:	eeb0 6a43 	vmov.f32	s12, s6
 8010628:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801062c:	ee12 2a90 	vmov	r2, s5
 8010630:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010634:	fb92 fef3 	sdiv	lr, r2, r3
 8010638:	ee13 2a10 	vmov	r2, s6
 801063c:	fb92 fcf3 	sdiv	ip, r2, r3
 8010640:	9b01      	ldr	r3, [sp, #4]
 8010642:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010646:	3b01      	subs	r3, #1
 8010648:	9301      	str	r3, [sp, #4]
 801064a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801064e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010650:	eeb0 3a67 	vmov.f32	s6, s15
 8010654:	bf08      	it	eq
 8010656:	465b      	moveq	r3, fp
 8010658:	eef0 2a47 	vmov.f32	s5, s14
 801065c:	e797      	b.n	801058e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801065e:	454f      	cmp	r7, r9
 8010660:	dabb      	bge.n	80105da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010662:	fb0c 2606 	mla	r6, ip, r6, r2
 8010666:	1436      	asrs	r6, r6, #16
 8010668:	d4b7      	bmi.n	80105da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801066a:	4546      	cmp	r6, r8
 801066c:	dab5      	bge.n	80105da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801066e:	461e      	mov	r6, r3
 8010670:	46a0      	mov	r8, r4
 8010672:	2e00      	cmp	r6, #0
 8010674:	ddb8      	ble.n	80105e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8010676:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801067a:	9902      	ldr	r1, [sp, #8]
 801067c:	1417      	asrs	r7, r2, #16
 801067e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8010682:	fb0a 9707 	mla	r7, sl, r7, r9
 8010686:	4470      	add	r0, lr
 8010688:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801068c:	f828 7b02 	strh.w	r7, [r8], #2
 8010690:	4462      	add	r2, ip
 8010692:	3e01      	subs	r6, #1
 8010694:	e7ed      	b.n	8010672 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8010696:	ea5f 4920 	movs.w	r9, r0, asr #16
 801069a:	d414      	bmi.n	80106c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801069c:	68ae      	ldr	r6, [r5, #8]
 801069e:	454e      	cmp	r6, r9
 80106a0:	dd11      	ble.n	80106c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80106a2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80106a6:	d40e      	bmi.n	80106c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80106a8:	68ef      	ldr	r7, [r5, #12]
 80106aa:	4557      	cmp	r7, sl
 80106ac:	dd0b      	ble.n	80106c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80106ae:	b236      	sxth	r6, r6
 80106b0:	fb0a 9606 	mla	r6, sl, r6, r9
 80106b4:	9f02      	ldr	r7, [sp, #8]
 80106b6:	f06f 0101 	mvn.w	r1, #1
 80106ba:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80106be:	fb01 f608 	mul.w	r6, r1, r8
 80106c2:	9903      	ldr	r1, [sp, #12]
 80106c4:	538f      	strh	r7, [r1, r6]
 80106c6:	4470      	add	r0, lr
 80106c8:	4462      	add	r2, ip
 80106ca:	f108 38ff 	add.w	r8, r8, #4294967295
 80106ce:	e788      	b.n	80105e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80106d0:	b005      	add	sp, #20
 80106d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080106d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80106d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106da:	b087      	sub	sp, #28
 80106dc:	468b      	mov	fp, r1
 80106de:	9815      	ldr	r0, [sp, #84]	; 0x54
 80106e0:	9203      	str	r2, [sp, #12]
 80106e2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80106e6:	9204      	str	r2, [sp, #16]
 80106e8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80106ec:	6841      	ldr	r1, [r0, #4]
 80106ee:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80106f2:	fb01 2505 	mla	r5, r1, r5, r2
 80106f6:	6802      	ldr	r2, [r0, #0]
 80106f8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80106fc:	f8d9 2000 	ldr.w	r2, [r9]
 8010700:	9201      	str	r2, [sp, #4]
 8010702:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010706:	f1bb 0f00 	cmp.w	fp, #0
 801070a:	dc03      	bgt.n	8010714 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801070c:	9a03      	ldr	r2, [sp, #12]
 801070e:	2a00      	cmp	r2, #0
 8010710:	f340 8159 	ble.w	80109c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8010714:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010716:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801071a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801071e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010722:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010724:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010728:	2b00      	cmp	r3, #0
 801072a:	dd0e      	ble.n	801074a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801072c:	1402      	asrs	r2, r0, #16
 801072e:	d405      	bmi.n	801073c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010730:	42ba      	cmp	r2, r7
 8010732:	da03      	bge.n	801073c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010734:	140a      	asrs	r2, r1, #16
 8010736:	d401      	bmi.n	801073c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010738:	42b2      	cmp	r2, r6
 801073a:	db07      	blt.n	801074c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801073c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801073e:	4410      	add	r0, r2
 8010740:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010742:	3b01      	subs	r3, #1
 8010744:	4411      	add	r1, r2
 8010746:	3502      	adds	r5, #2
 8010748:	e7ee      	b.n	8010728 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801074a:	d017      	beq.n	801077c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801074c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801074e:	1e5a      	subs	r2, r3, #1
 8010750:	fb04 0402 	mla	r4, r4, r2, r0
 8010754:	1424      	asrs	r4, r4, #16
 8010756:	d409      	bmi.n	801076c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010758:	42bc      	cmp	r4, r7
 801075a:	da07      	bge.n	801076c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801075c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801075e:	fb04 1202 	mla	r2, r4, r2, r1
 8010762:	1412      	asrs	r2, r2, #16
 8010764:	d402      	bmi.n	801076c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8010766:	42b2      	cmp	r2, r6
 8010768:	f2c0 80bf 	blt.w	80108ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801076c:	2700      	movs	r7, #0
 801076e:	19da      	adds	r2, r3, r7
 8010770:	2a00      	cmp	r2, #0
 8010772:	dc3e      	bgt.n	80107f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8010774:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010778:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801077c:	f1bb 0f00 	cmp.w	fp, #0
 8010780:	f340 8121 	ble.w	80109c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8010784:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010788:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801078c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010790:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010792:	f1bb 0b01 	subs.w	fp, fp, #1
 8010796:	ee31 1a05 	vadd.f32	s2, s2, s10
 801079a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801079e:	eeb0 6a62 	vmov.f32	s12, s5
 80107a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80107a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80107aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80107ae:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80107b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80107b6:	eeb0 6a43 	vmov.f32	s12, s6
 80107ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80107be:	ee12 2a90 	vmov	r2, s5
 80107c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80107c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80107ca:	ee13 2a10 	vmov	r2, s6
 80107ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80107d2:	9313      	str	r3, [sp, #76]	; 0x4c
 80107d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80107d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80107da:	9a03      	ldr	r2, [sp, #12]
 80107dc:	9314      	str	r3, [sp, #80]	; 0x50
 80107de:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80107e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80107e4:	eeb0 3a67 	vmov.f32	s6, s15
 80107e8:	bf08      	it	eq
 80107ea:	4613      	moveq	r3, r2
 80107ec:	eef0 2a47 	vmov.f32	s5, s14
 80107f0:	e789      	b.n	8010706 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80107f2:	1406      	asrs	r6, r0, #16
 80107f4:	d42d      	bmi.n	8010852 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80107f6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80107fa:	42b4      	cmp	r4, r6
 80107fc:	dd29      	ble.n	8010852 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80107fe:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8010802:	d426      	bmi.n	8010852 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8010804:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8010808:	4562      	cmp	r2, ip
 801080a:	dd22      	ble.n	8010852 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801080c:	b224      	sxth	r4, r4
 801080e:	9a01      	ldr	r2, [sp, #4]
 8010810:	fb0c 6404 	mla	r4, ip, r4, r6
 8010814:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8010818:	0e22      	lsrs	r2, r4, #24
 801081a:	d01a      	beq.n	8010852 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801081c:	9e04      	ldr	r6, [sp, #16]
 801081e:	4372      	muls	r2, r6
 8010820:	1c56      	adds	r6, r2, #1
 8010822:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8010826:	1212      	asrs	r2, r2, #8
 8010828:	0a26      	lsrs	r6, r4, #8
 801082a:	2aff      	cmp	r2, #255	; 0xff
 801082c:	9605      	str	r6, [sp, #20]
 801082e:	d116      	bne.n	801085e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8010830:	f06f 0201 	mvn.w	r2, #1
 8010834:	fb02 fc07 	mul.w	ip, r2, r7
 8010838:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801083c:	0962      	lsrs	r2, r4, #5
 801083e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010842:	f026 0607 	bic.w	r6, r6, #7
 8010846:	4316      	orrs	r6, r2
 8010848:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801084c:	4326      	orrs	r6, r4
 801084e:	f825 600c 	strh.w	r6, [r5, ip]
 8010852:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010854:	4410      	add	r0, r2
 8010856:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010858:	3f01      	subs	r7, #1
 801085a:	4411      	add	r1, r2
 801085c:	e787      	b.n	801076e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801085e:	f06f 0601 	mvn.w	r6, #1
 8010862:	437e      	muls	r6, r7
 8010864:	fa1f fa82 	uxth.w	sl, r2
 8010868:	f835 8006 	ldrh.w	r8, [r5, r6]
 801086c:	9602      	str	r6, [sp, #8]
 801086e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010872:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8010876:	43d2      	mvns	r2, r2
 8010878:	b2d2      	uxtb	r2, r2
 801087a:	fb1c fc0a 	smulbb	ip, ip, sl
 801087e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010882:	fb0e ce02 	mla	lr, lr, r2, ip
 8010886:	b2e4      	uxtb	r4, r4
 8010888:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801088c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010890:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010894:	fa5f f888 	uxtb.w	r8, r8
 8010898:	fb14 f40a 	smulbb	r4, r4, sl
 801089c:	fb08 4402 	mla	r4, r8, r2, r4
 80108a0:	fa1f fe8e 	uxth.w	lr, lr
 80108a4:	fb16 f60a 	smulbb	r6, r6, sl
 80108a8:	b2a4      	uxth	r4, r4
 80108aa:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80108ae:	fb0c 6c02 	mla	ip, ip, r2, r6
 80108b2:	f10e 0201 	add.w	r2, lr, #1
 80108b6:	1c66      	adds	r6, r4, #1
 80108b8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80108bc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80108c0:	fa1f fc8c 	uxth.w	ip, ip
 80108c4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80108c8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80108cc:	ea46 0e0e 	orr.w	lr, r6, lr
 80108d0:	f10c 0601 	add.w	r6, ip, #1
 80108d4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80108d8:	0976      	lsrs	r6, r6, #5
 80108da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80108de:	9a02      	ldr	r2, [sp, #8]
 80108e0:	ea4e 0e06 	orr.w	lr, lr, r6
 80108e4:	f825 e002 	strh.w	lr, [r5, r2]
 80108e8:	e7b3      	b.n	8010852 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80108ea:	f04f 0800 	mov.w	r8, #0
 80108ee:	eba3 0208 	sub.w	r2, r3, r8
 80108f2:	2a00      	cmp	r2, #0
 80108f4:	f77f af3e 	ble.w	8010774 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80108f8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80108fc:	1404      	asrs	r4, r0, #16
 80108fe:	140a      	asrs	r2, r1, #16
 8010900:	fb06 4202 	mla	r2, r6, r2, r4
 8010904:	9c01      	ldr	r4, [sp, #4]
 8010906:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801090a:	0e22      	lsrs	r2, r4, #24
 801090c:	d016      	beq.n	801093c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801090e:	9e04      	ldr	r6, [sp, #16]
 8010910:	4372      	muls	r2, r6
 8010912:	1c56      	adds	r6, r2, #1
 8010914:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8010918:	1212      	asrs	r2, r2, #8
 801091a:	2aff      	cmp	r2, #255	; 0xff
 801091c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8010920:	d113      	bne.n	801094a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8010922:	0962      	lsrs	r2, r4, #5
 8010924:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8010928:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801092c:	f026 0607 	bic.w	r6, r6, #7
 8010930:	4316      	orrs	r6, r2
 8010932:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8010936:	4326      	orrs	r6, r4
 8010938:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801093c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801093e:	4410      	add	r0, r2
 8010940:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010942:	f108 0801 	add.w	r8, r8, #1
 8010946:	4411      	add	r1, r2
 8010948:	e7d1      	b.n	80108ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801094a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801094e:	fa1f fa82 	uxth.w	sl, r2
 8010952:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010956:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801095a:	43d2      	mvns	r2, r2
 801095c:	b2d2      	uxtb	r2, r2
 801095e:	fb17 f70a 	smulbb	r7, r7, sl
 8010962:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010966:	fb0c 7c02 	mla	ip, ip, r2, r7
 801096a:	b2e4      	uxtb	r4, r4
 801096c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8010970:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010974:	fa5f fe8e 	uxtb.w	lr, lr
 8010978:	fb14 f40a 	smulbb	r4, r4, sl
 801097c:	fb0e 4402 	mla	r4, lr, r2, r4
 8010980:	b2f6      	uxtb	r6, r6
 8010982:	fa1f fc8c 	uxth.w	ip, ip
 8010986:	fb16 f60a 	smulbb	r6, r6, sl
 801098a:	b2a4      	uxth	r4, r4
 801098c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010990:	fb07 6702 	mla	r7, r7, r2, r6
 8010994:	f10c 0201 	add.w	r2, ip, #1
 8010998:	1c66      	adds	r6, r4, #1
 801099a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801099e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80109a2:	b2bf      	uxth	r7, r7
 80109a4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80109a8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80109ac:	ea46 0c0c 	orr.w	ip, r6, ip
 80109b0:	1c7e      	adds	r6, r7, #1
 80109b2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80109b6:	0976      	lsrs	r6, r6, #5
 80109b8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80109bc:	ea4c 0c06 	orr.w	ip, ip, r6
 80109c0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80109c4:	e7ba      	b.n	801093c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80109c6:	b007      	add	sp, #28
 80109c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080109cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80109cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109d0:	b085      	sub	sp, #20
 80109d2:	468b      	mov	fp, r1
 80109d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80109d6:	9203      	str	r2, [sp, #12]
 80109d8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80109dc:	6841      	ldr	r1, [r0, #4]
 80109de:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80109e2:	fb01 2404 	mla	r4, r1, r4, r2
 80109e6:	6802      	ldr	r2, [r0, #0]
 80109e8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80109ec:	f8d8 2000 	ldr.w	r2, [r8]
 80109f0:	9201      	str	r2, [sp, #4]
 80109f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80109f6:	f1bb 0f00 	cmp.w	fp, #0
 80109fa:	dc03      	bgt.n	8010a04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80109fc:	9a03      	ldr	r2, [sp, #12]
 80109fe:	2a00      	cmp	r2, #0
 8010a00:	f340 814f 	ble.w	8010ca2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8010a04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010a06:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8010a0a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8010a0e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010a12:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010a14:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010a18:	2b00      	cmp	r3, #0
 8010a1a:	dd0e      	ble.n	8010a3a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010a1c:	1408      	asrs	r0, r1, #16
 8010a1e:	d405      	bmi.n	8010a2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8010a20:	42b8      	cmp	r0, r7
 8010a22:	da03      	bge.n	8010a2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8010a24:	1410      	asrs	r0, r2, #16
 8010a26:	d401      	bmi.n	8010a2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8010a28:	42b0      	cmp	r0, r6
 8010a2a:	db07      	blt.n	8010a3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010a2c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010a2e:	4401      	add	r1, r0
 8010a30:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010a32:	3b01      	subs	r3, #1
 8010a34:	4402      	add	r2, r0
 8010a36:	3402      	adds	r4, #2
 8010a38:	e7ee      	b.n	8010a18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8010a3a:	d017      	beq.n	8010a6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010a3c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010a3e:	1e58      	subs	r0, r3, #1
 8010a40:	fb05 1500 	mla	r5, r5, r0, r1
 8010a44:	142d      	asrs	r5, r5, #16
 8010a46:	d409      	bmi.n	8010a5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8010a48:	42bd      	cmp	r5, r7
 8010a4a:	da07      	bge.n	8010a5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8010a4c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010a4e:	fb05 2000 	mla	r0, r5, r0, r2
 8010a52:	1400      	asrs	r0, r0, #16
 8010a54:	d402      	bmi.n	8010a5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8010a56:	42b0      	cmp	r0, r6
 8010a58:	f2c0 80ba 	blt.w	8010bd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8010a5c:	2600      	movs	r6, #0
 8010a5e:	1998      	adds	r0, r3, r6
 8010a60:	2800      	cmp	r0, #0
 8010a62:	dc3e      	bgt.n	8010ae2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8010a64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010a68:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010a6c:	f1bb 0f00 	cmp.w	fp, #0
 8010a70:	f340 8117 	ble.w	8010ca2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8010a74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010a78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010a7c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010a80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010a82:	f1bb 0b01 	subs.w	fp, fp, #1
 8010a86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010a8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010a8e:	eeb0 6a62 	vmov.f32	s12, s5
 8010a92:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010a96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010a9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010a9e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010aa2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010aa6:	eeb0 6a43 	vmov.f32	s12, s6
 8010aaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010aae:	ee12 2a90 	vmov	r2, s5
 8010ab2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ab6:	fb92 f3f3 	sdiv	r3, r2, r3
 8010aba:	ee13 2a10 	vmov	r2, s6
 8010abe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010ac2:	9311      	str	r3, [sp, #68]	; 0x44
 8010ac4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ac6:	fb92 f3f3 	sdiv	r3, r2, r3
 8010aca:	9a03      	ldr	r2, [sp, #12]
 8010acc:	9312      	str	r3, [sp, #72]	; 0x48
 8010ace:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010ad2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010ad4:	eeb0 3a67 	vmov.f32	s6, s15
 8010ad8:	bf08      	it	eq
 8010ada:	4613      	moveq	r3, r2
 8010adc:	eef0 2a47 	vmov.f32	s5, s14
 8010ae0:	e789      	b.n	80109f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8010ae2:	140f      	asrs	r7, r1, #16
 8010ae4:	d424      	bmi.n	8010b30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8010ae6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8010aea:	42bd      	cmp	r5, r7
 8010aec:	dd20      	ble.n	8010b30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8010aee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010af2:	d41d      	bmi.n	8010b30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8010af4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8010af8:	4560      	cmp	r0, ip
 8010afa:	dd19      	ble.n	8010b30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8010afc:	b22d      	sxth	r5, r5
 8010afe:	fb0c 7505 	mla	r5, ip, r5, r7
 8010b02:	9801      	ldr	r0, [sp, #4]
 8010b04:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8010b08:	0e07      	lsrs	r7, r0, #24
 8010b0a:	2fff      	cmp	r7, #255	; 0xff
 8010b0c:	d116      	bne.n	8010b3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010b0e:	f06f 0501 	mvn.w	r5, #1
 8010b12:	fb05 f706 	mul.w	r7, r5, r6
 8010b16:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010b1a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010b1e:	0945      	lsrs	r5, r0, #5
 8010b20:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010b24:	ea4c 0505 	orr.w	r5, ip, r5
 8010b28:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010b2c:	4305      	orrs	r5, r0
 8010b2e:	53e5      	strh	r5, [r4, r7]
 8010b30:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010b32:	4401      	add	r1, r0
 8010b34:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010b36:	3e01      	subs	r6, #1
 8010b38:	4402      	add	r2, r0
 8010b3a:	e790      	b.n	8010a5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010b3c:	b2fd      	uxtb	r5, r7
 8010b3e:	2f00      	cmp	r7, #0
 8010b40:	d0f6      	beq.n	8010b30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8010b42:	f06f 0701 	mvn.w	r7, #1
 8010b46:	4377      	muls	r7, r6
 8010b48:	fa1f f985 	uxth.w	r9, r5
 8010b4c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8010b50:	9702      	str	r7, [sp, #8]
 8010b52:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010b56:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010b5a:	43ed      	mvns	r5, r5
 8010b5c:	b2ed      	uxtb	r5, r5
 8010b5e:	fb17 f709 	smulbb	r7, r7, r9
 8010b62:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010b66:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010b6a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010b6e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8010b72:	b2c0      	uxtb	r0, r0
 8010b74:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010b78:	fa5f fe8e 	uxtb.w	lr, lr
 8010b7c:	fb10 f009 	smulbb	r0, r0, r9
 8010b80:	fb0e 0005 	mla	r0, lr, r5, r0
 8010b84:	b280      	uxth	r0, r0
 8010b86:	fa1f fc8c 	uxth.w	ip, ip
 8010b8a:	fb1a fa09 	smulbb	sl, sl, r9
 8010b8e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010b92:	fb07 a705 	mla	r7, r7, r5, sl
 8010b96:	f100 0a01 	add.w	sl, r0, #1
 8010b9a:	f10c 0501 	add.w	r5, ip, #1
 8010b9e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010ba2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010ba6:	b2bf      	uxth	r7, r7
 8010ba8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010bac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010bb0:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010bb4:	f107 0a01 	add.w	sl, r7, #1
 8010bb8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010bbc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010bc0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010bc4:	9802      	ldr	r0, [sp, #8]
 8010bc6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010bca:	f824 c000 	strh.w	ip, [r4, r0]
 8010bce:	e7af      	b.n	8010b30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8010bd0:	f04f 0e00 	mov.w	lr, #0
 8010bd4:	eba3 000e 	sub.w	r0, r3, lr
 8010bd8:	2800      	cmp	r0, #0
 8010bda:	f77f af43 	ble.w	8010a64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010bde:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8010be2:	140d      	asrs	r5, r1, #16
 8010be4:	1410      	asrs	r0, r2, #16
 8010be6:	fb06 5000 	mla	r0, r6, r0, r5
 8010bea:	9d01      	ldr	r5, [sp, #4]
 8010bec:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8010bf0:	0e2e      	lsrs	r6, r5, #24
 8010bf2:	2eff      	cmp	r6, #255	; 0xff
 8010bf4:	d112      	bne.n	8010c1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8010bf6:	482c      	ldr	r0, [pc, #176]	; (8010ca8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8010bf8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8010bfc:	0968      	lsrs	r0, r5, #5
 8010bfe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8010c02:	4330      	orrs	r0, r6
 8010c04:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8010c08:	4328      	orrs	r0, r5
 8010c0a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8010c0e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010c10:	4401      	add	r1, r0
 8010c12:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010c14:	f10e 0e01 	add.w	lr, lr, #1
 8010c18:	4402      	add	r2, r0
 8010c1a:	e7db      	b.n	8010bd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8010c1c:	b2f0      	uxtb	r0, r6
 8010c1e:	2e00      	cmp	r6, #0
 8010c20:	d0f5      	beq.n	8010c0e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8010c22:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010c26:	fa1f f980 	uxth.w	r9, r0
 8010c2a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010c2e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010c32:	43c0      	mvns	r0, r0
 8010c34:	b2c0      	uxtb	r0, r0
 8010c36:	fb16 f609 	smulbb	r6, r6, r9
 8010c3a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010c3e:	fb07 6700 	mla	r7, r7, r0, r6
 8010c42:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010c46:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010c4a:	b2ed      	uxtb	r5, r5
 8010c4c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010c50:	fa5f fc8c 	uxtb.w	ip, ip
 8010c54:	fb15 f509 	smulbb	r5, r5, r9
 8010c58:	fb0c 5500 	mla	r5, ip, r0, r5
 8010c5c:	b2bf      	uxth	r7, r7
 8010c5e:	fb1a fa09 	smulbb	sl, sl, r9
 8010c62:	b2ad      	uxth	r5, r5
 8010c64:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010c68:	fb06 a600 	mla	r6, r6, r0, sl
 8010c6c:	1c78      	adds	r0, r7, #1
 8010c6e:	f105 0a01 	add.w	sl, r5, #1
 8010c72:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8010c76:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010c7a:	b2b6      	uxth	r6, r6
 8010c7c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010c80:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010c84:	ea4a 0707 	orr.w	r7, sl, r7
 8010c88:	f106 0a01 	add.w	sl, r6, #1
 8010c8c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010c90:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010c94:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010c98:	ea47 070a 	orr.w	r7, r7, sl
 8010c9c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8010ca0:	e7b5      	b.n	8010c0e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8010ca2:	b005      	add	sp, #20
 8010ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ca8:	fffff800 	.word	0xfffff800

08010cac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cb0:	b087      	sub	sp, #28
 8010cb2:	468b      	mov	fp, r1
 8010cb4:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010cb6:	9203      	str	r2, [sp, #12]
 8010cb8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010cbc:	9204      	str	r2, [sp, #16]
 8010cbe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010cc2:	6841      	ldr	r1, [r0, #4]
 8010cc4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8010cc8:	fb01 2404 	mla	r4, r1, r4, r2
 8010ccc:	6802      	ldr	r2, [r0, #0]
 8010cce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010cd2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8010cd6:	3201      	adds	r2, #1
 8010cd8:	f022 0201 	bic.w	r2, r2, #1
 8010cdc:	9200      	str	r2, [sp, #0]
 8010cde:	f8d9 2000 	ldr.w	r2, [r9]
 8010ce2:	9201      	str	r2, [sp, #4]
 8010ce4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010ce8:	f1bb 0f00 	cmp.w	fp, #0
 8010cec:	dc03      	bgt.n	8010cf6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8010cee:	9a03      	ldr	r2, [sp, #12]
 8010cf0:	2a00      	cmp	r2, #0
 8010cf2:	f340 8169 	ble.w	8010fc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8010cf6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010cf8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8010cfc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8010d00:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010d04:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010d06:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010d0a:	2b00      	cmp	r3, #0
 8010d0c:	dd0e      	ble.n	8010d2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8010d0e:	1402      	asrs	r2, r0, #16
 8010d10:	d405      	bmi.n	8010d1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010d12:	42ba      	cmp	r2, r7
 8010d14:	da03      	bge.n	8010d1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010d16:	140a      	asrs	r2, r1, #16
 8010d18:	d401      	bmi.n	8010d1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010d1a:	42b2      	cmp	r2, r6
 8010d1c:	db07      	blt.n	8010d2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8010d1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010d20:	4410      	add	r0, r2
 8010d22:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010d24:	3b01      	subs	r3, #1
 8010d26:	4411      	add	r1, r2
 8010d28:	3402      	adds	r4, #2
 8010d2a:	e7ee      	b.n	8010d0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8010d2c:	d017      	beq.n	8010d5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8010d2e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010d30:	1e5a      	subs	r2, r3, #1
 8010d32:	fb05 0502 	mla	r5, r5, r2, r0
 8010d36:	142d      	asrs	r5, r5, #16
 8010d38:	d409      	bmi.n	8010d4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010d3a:	42bd      	cmp	r5, r7
 8010d3c:	da07      	bge.n	8010d4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010d3e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010d40:	fb05 1202 	mla	r2, r5, r2, r1
 8010d44:	1412      	asrs	r2, r2, #16
 8010d46:	d402      	bmi.n	8010d4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010d48:	42b2      	cmp	r2, r6
 8010d4a:	f2c0 80c7 	blt.w	8010edc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8010d4e:	2700      	movs	r7, #0
 8010d50:	19da      	adds	r2, r3, r7
 8010d52:	2a00      	cmp	r2, #0
 8010d54:	dc3e      	bgt.n	8010dd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010d56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010d5a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010d5e:	f1bb 0f00 	cmp.w	fp, #0
 8010d62:	f340 8131 	ble.w	8010fc8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8010d66:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010d6a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010d6e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010d72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010d74:	f1bb 0b01 	subs.w	fp, fp, #1
 8010d78:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010d7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010d80:	eeb0 6a62 	vmov.f32	s12, s5
 8010d84:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010d88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010d8c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010d90:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010d94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010d98:	eeb0 6a43 	vmov.f32	s12, s6
 8010d9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010da0:	ee12 2a90 	vmov	r2, s5
 8010da4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010da8:	fb92 f3f3 	sdiv	r3, r2, r3
 8010dac:	ee13 2a10 	vmov	r2, s6
 8010db0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010db4:	9313      	str	r3, [sp, #76]	; 0x4c
 8010db6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010db8:	fb92 f3f3 	sdiv	r3, r2, r3
 8010dbc:	9a03      	ldr	r2, [sp, #12]
 8010dbe:	9314      	str	r3, [sp, #80]	; 0x50
 8010dc0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010dc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010dc6:	eeb0 3a67 	vmov.f32	s6, s15
 8010dca:	bf08      	it	eq
 8010dcc:	4613      	moveq	r3, r2
 8010dce:	eef0 2a47 	vmov.f32	s5, s14
 8010dd2:	e789      	b.n	8010ce8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010dd4:	1405      	asrs	r5, r0, #16
 8010dd6:	d435      	bmi.n	8010e44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8010dd8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8010ddc:	42aa      	cmp	r2, r5
 8010dde:	dd31      	ble.n	8010e44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8010de0:	140e      	asrs	r6, r1, #16
 8010de2:	d42f      	bmi.n	8010e44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8010de4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8010de8:	42b2      	cmp	r2, r6
 8010dea:	dd2b      	ble.n	8010e44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8010dec:	9a00      	ldr	r2, [sp, #0]
 8010dee:	fb06 5502 	mla	r5, r6, r2, r5
 8010df2:	086a      	lsrs	r2, r5, #1
 8010df4:	9e01      	ldr	r6, [sp, #4]
 8010df6:	5cb2      	ldrb	r2, [r6, r2]
 8010df8:	07ee      	lsls	r6, r5, #31
 8010dfa:	bf54      	ite	pl
 8010dfc:	f002 020f 	andpl.w	r2, r2, #15
 8010e00:	1112      	asrmi	r2, r2, #4
 8010e02:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010e06:	b2d2      	uxtb	r2, r2
 8010e08:	b1e2      	cbz	r2, 8010e44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8010e0a:	9d04      	ldr	r5, [sp, #16]
 8010e0c:	436a      	muls	r2, r5
 8010e0e:	1c55      	adds	r5, r2, #1
 8010e10:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8010e14:	4d6e      	ldr	r5, [pc, #440]	; (8010fd0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8010e16:	682d      	ldr	r5, [r5, #0]
 8010e18:	1212      	asrs	r2, r2, #8
 8010e1a:	0a2e      	lsrs	r6, r5, #8
 8010e1c:	2aff      	cmp	r2, #255	; 0xff
 8010e1e:	9605      	str	r6, [sp, #20]
 8010e20:	d116      	bne.n	8010e50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8010e22:	f06f 0201 	mvn.w	r2, #1
 8010e26:	fb02 fc07 	mul.w	ip, r2, r7
 8010e2a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8010e2e:	096a      	lsrs	r2, r5, #5
 8010e30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010e34:	f026 0607 	bic.w	r6, r6, #7
 8010e38:	4316      	orrs	r6, r2
 8010e3a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8010e3e:	432e      	orrs	r6, r5
 8010e40:	f824 600c 	strh.w	r6, [r4, ip]
 8010e44:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010e46:	4410      	add	r0, r2
 8010e48:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010e4a:	3f01      	subs	r7, #1
 8010e4c:	4411      	add	r1, r2
 8010e4e:	e77f      	b.n	8010d50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8010e50:	f06f 0601 	mvn.w	r6, #1
 8010e54:	437e      	muls	r6, r7
 8010e56:	fa1f fa82 	uxth.w	sl, r2
 8010e5a:	f834 8006 	ldrh.w	r8, [r4, r6]
 8010e5e:	9602      	str	r6, [sp, #8]
 8010e60:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010e64:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8010e68:	43d2      	mvns	r2, r2
 8010e6a:	b2d2      	uxtb	r2, r2
 8010e6c:	fb1c fc0a 	smulbb	ip, ip, sl
 8010e70:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010e74:	fb0e ce02 	mla	lr, lr, r2, ip
 8010e78:	b2ed      	uxtb	r5, r5
 8010e7a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8010e7e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010e82:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010e86:	fa5f f888 	uxtb.w	r8, r8
 8010e8a:	fb15 f50a 	smulbb	r5, r5, sl
 8010e8e:	fb08 5502 	mla	r5, r8, r2, r5
 8010e92:	fa1f fe8e 	uxth.w	lr, lr
 8010e96:	fb16 f60a 	smulbb	r6, r6, sl
 8010e9a:	b2ad      	uxth	r5, r5
 8010e9c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010ea0:	fb0c 6c02 	mla	ip, ip, r2, r6
 8010ea4:	f10e 0201 	add.w	r2, lr, #1
 8010ea8:	1c6e      	adds	r6, r5, #1
 8010eaa:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8010eae:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8010eb2:	fa1f fc8c 	uxth.w	ip, ip
 8010eb6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010eba:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8010ebe:	ea46 0e0e 	orr.w	lr, r6, lr
 8010ec2:	f10c 0601 	add.w	r6, ip, #1
 8010ec6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8010eca:	0976      	lsrs	r6, r6, #5
 8010ecc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010ed0:	9a02      	ldr	r2, [sp, #8]
 8010ed2:	ea4e 0e06 	orr.w	lr, lr, r6
 8010ed6:	f824 e002 	strh.w	lr, [r4, r2]
 8010eda:	e7b3      	b.n	8010e44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8010edc:	f04f 0800 	mov.w	r8, #0
 8010ee0:	eba3 0208 	sub.w	r2, r3, r8
 8010ee4:	2a00      	cmp	r2, #0
 8010ee6:	f77f af36 	ble.w	8010d56 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8010eea:	9e00      	ldr	r6, [sp, #0]
 8010eec:	1402      	asrs	r2, r0, #16
 8010eee:	140d      	asrs	r5, r1, #16
 8010ef0:	fb06 2505 	mla	r5, r6, r5, r2
 8010ef4:	086a      	lsrs	r2, r5, #1
 8010ef6:	9e01      	ldr	r6, [sp, #4]
 8010ef8:	5cb2      	ldrb	r2, [r6, r2]
 8010efa:	07ed      	lsls	r5, r5, #31
 8010efc:	bf54      	ite	pl
 8010efe:	f002 020f 	andpl.w	r2, r2, #15
 8010f02:	1112      	asrmi	r2, r2, #4
 8010f04:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010f08:	b2d2      	uxtb	r2, r2
 8010f0a:	b1c2      	cbz	r2, 8010f3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8010f0c:	9d04      	ldr	r5, [sp, #16]
 8010f0e:	436a      	muls	r2, r5
 8010f10:	1c55      	adds	r5, r2, #1
 8010f12:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8010f16:	4d2e      	ldr	r5, [pc, #184]	; (8010fd0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8010f18:	1212      	asrs	r2, r2, #8
 8010f1a:	682e      	ldr	r6, [r5, #0]
 8010f1c:	2aff      	cmp	r2, #255	; 0xff
 8010f1e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8010f22:	d113      	bne.n	8010f4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8010f24:	0972      	lsrs	r2, r6, #5
 8010f26:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8010f2a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010f2e:	f025 0507 	bic.w	r5, r5, #7
 8010f32:	4315      	orrs	r5, r2
 8010f34:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8010f38:	4335      	orrs	r5, r6
 8010f3a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8010f3e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010f40:	4410      	add	r0, r2
 8010f42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010f44:	f108 0801 	add.w	r8, r8, #1
 8010f48:	4411      	add	r1, r2
 8010f4a:	e7c9      	b.n	8010ee0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8010f4c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8010f50:	fa1f fa82 	uxth.w	sl, r2
 8010f54:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010f58:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8010f5c:	43d2      	mvns	r2, r2
 8010f5e:	b2d2      	uxtb	r2, r2
 8010f60:	fb17 f70a 	smulbb	r7, r7, sl
 8010f64:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010f68:	fb0c 7c02 	mla	ip, ip, r2, r7
 8010f6c:	b2f6      	uxtb	r6, r6
 8010f6e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8010f72:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010f76:	fa5f fe8e 	uxtb.w	lr, lr
 8010f7a:	fb16 f60a 	smulbb	r6, r6, sl
 8010f7e:	fb0e 6602 	mla	r6, lr, r2, r6
 8010f82:	b2ed      	uxtb	r5, r5
 8010f84:	fa1f fc8c 	uxth.w	ip, ip
 8010f88:	fb15 f50a 	smulbb	r5, r5, sl
 8010f8c:	b2b6      	uxth	r6, r6
 8010f8e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010f92:	fb07 5702 	mla	r7, r7, r2, r5
 8010f96:	f10c 0201 	add.w	r2, ip, #1
 8010f9a:	1c75      	adds	r5, r6, #1
 8010f9c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8010fa0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8010fa4:	b2bf      	uxth	r7, r7
 8010fa6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8010faa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010fae:	ea45 0c0c 	orr.w	ip, r5, ip
 8010fb2:	1c7d      	adds	r5, r7, #1
 8010fb4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8010fb8:	096d      	lsrs	r5, r5, #5
 8010fba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010fbe:	ea4c 0c05 	orr.w	ip, ip, r5
 8010fc2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8010fc6:	e7ba      	b.n	8010f3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8010fc8:	b007      	add	sp, #28
 8010fca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fce:	bf00      	nop
 8010fd0:	2000a4f8 	.word	0x2000a4f8

08010fd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010fd8:	b087      	sub	sp, #28
 8010fda:	f8df 830c 	ldr.w	r8, [pc, #780]	; 80112e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8010fde:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010fe0:	9205      	str	r2, [sp, #20]
 8010fe2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010fe6:	9101      	str	r1, [sp, #4]
 8010fe8:	6841      	ldr	r1, [r0, #4]
 8010fea:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8010fee:	fb01 2404 	mla	r4, r1, r4, r2
 8010ff2:	6802      	ldr	r2, [r0, #0]
 8010ff4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010ff8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8010ffc:	3201      	adds	r2, #1
 8010ffe:	f022 0201 	bic.w	r2, r2, #1
 8011002:	9202      	str	r2, [sp, #8]
 8011004:	f8db 2000 	ldr.w	r2, [fp]
 8011008:	9203      	str	r2, [sp, #12]
 801100a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801100e:	9a01      	ldr	r2, [sp, #4]
 8011010:	2a00      	cmp	r2, #0
 8011012:	dc03      	bgt.n	801101c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8011014:	9a05      	ldr	r2, [sp, #20]
 8011016:	2a00      	cmp	r2, #0
 8011018:	f340 8162 	ble.w	80112e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801101c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801101e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8011022:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8011026:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801102a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801102c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011030:	2b00      	cmp	r3, #0
 8011032:	dd0e      	ble.n	8011052 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011034:	1402      	asrs	r2, r0, #16
 8011036:	d405      	bmi.n	8011044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011038:	42ba      	cmp	r2, r7
 801103a:	da03      	bge.n	8011044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801103c:	140a      	asrs	r2, r1, #16
 801103e:	d401      	bmi.n	8011044 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011040:	42b2      	cmp	r2, r6
 8011042:	db07      	blt.n	8011054 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011044:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011046:	4410      	add	r0, r2
 8011048:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801104a:	3b01      	subs	r3, #1
 801104c:	4411      	add	r1, r2
 801104e:	3402      	adds	r4, #2
 8011050:	e7ee      	b.n	8011030 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011052:	d017      	beq.n	8011084 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8011054:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011056:	1e5a      	subs	r2, r3, #1
 8011058:	fb05 0502 	mla	r5, r5, r2, r0
 801105c:	142d      	asrs	r5, r5, #16
 801105e:	d409      	bmi.n	8011074 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011060:	42bd      	cmp	r5, r7
 8011062:	da07      	bge.n	8011074 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011064:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011066:	fb05 1202 	mla	r2, r5, r2, r1
 801106a:	1412      	asrs	r2, r2, #16
 801106c:	d402      	bmi.n	8011074 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801106e:	42b2      	cmp	r2, r6
 8011070:	f2c0 80c3 	blt.w	80111fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8011074:	2500      	movs	r5, #0
 8011076:	195a      	adds	r2, r3, r5
 8011078:	2a00      	cmp	r2, #0
 801107a:	dc3f      	bgt.n	80110fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801107c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011080:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011084:	9b01      	ldr	r3, [sp, #4]
 8011086:	2b00      	cmp	r3, #0
 8011088:	f340 812a 	ble.w	80112e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801108c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011090:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011094:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011098:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801109a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801109e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80110a2:	eeb0 6a62 	vmov.f32	s12, s5
 80110a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80110aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80110b2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80110b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80110ba:	eeb0 6a43 	vmov.f32	s12, s6
 80110be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80110c2:	ee12 2a90 	vmov	r2, s5
 80110c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80110ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80110ce:	ee13 2a10 	vmov	r2, s6
 80110d2:	9313      	str	r3, [sp, #76]	; 0x4c
 80110d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80110d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80110da:	9314      	str	r3, [sp, #80]	; 0x50
 80110dc:	9b01      	ldr	r3, [sp, #4]
 80110de:	9a05      	ldr	r2, [sp, #20]
 80110e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80110e4:	3b01      	subs	r3, #1
 80110e6:	9301      	str	r3, [sp, #4]
 80110e8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80110ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80110ee:	eeb0 3a67 	vmov.f32	s6, s15
 80110f2:	bf08      	it	eq
 80110f4:	4613      	moveq	r3, r2
 80110f6:	eef0 2a47 	vmov.f32	s5, s14
 80110fa:	e788      	b.n	801100e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80110fc:	1406      	asrs	r6, r0, #16
 80110fe:	d42c      	bmi.n	801115a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8011100:	f8db 2008 	ldr.w	r2, [fp, #8]
 8011104:	42b2      	cmp	r2, r6
 8011106:	dd28      	ble.n	801115a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8011108:	140f      	asrs	r7, r1, #16
 801110a:	d426      	bmi.n	801115a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801110c:	f8db 200c 	ldr.w	r2, [fp, #12]
 8011110:	42ba      	cmp	r2, r7
 8011112:	dd22      	ble.n	801115a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8011114:	9a02      	ldr	r2, [sp, #8]
 8011116:	fb07 6602 	mla	r6, r7, r2, r6
 801111a:	0872      	lsrs	r2, r6, #1
 801111c:	9f03      	ldr	r7, [sp, #12]
 801111e:	5cba      	ldrb	r2, [r7, r2]
 8011120:	07f6      	lsls	r6, r6, #31
 8011122:	bf54      	ite	pl
 8011124:	f002 020f 	andpl.w	r2, r2, #15
 8011128:	1112      	asrmi	r2, r2, #4
 801112a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801112e:	b2d2      	uxtb	r2, r2
 8011130:	2aff      	cmp	r2, #255	; 0xff
 8011132:	d118      	bne.n	8011166 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8011134:	f8d8 2000 	ldr.w	r2, [r8]
 8011138:	f06f 0601 	mvn.w	r6, #1
 801113c:	fb06 f705 	mul.w	r7, r6, r5
 8011140:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8011144:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8011148:	0956      	lsrs	r6, r2, #5
 801114a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801114e:	ea4c 0606 	orr.w	r6, ip, r6
 8011152:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8011156:	4316      	orrs	r6, r2
 8011158:	53e6      	strh	r6, [r4, r7]
 801115a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801115c:	4410      	add	r0, r2
 801115e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011160:	3d01      	subs	r5, #1
 8011162:	4411      	add	r1, r2
 8011164:	e787      	b.n	8011076 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011166:	2a00      	cmp	r2, #0
 8011168:	d0f7      	beq.n	801115a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801116a:	f06f 0601 	mvn.w	r6, #1
 801116e:	436e      	muls	r6, r5
 8011170:	f8d8 c000 	ldr.w	ip, [r8]
 8011174:	f834 e006 	ldrh.w	lr, [r4, r6]
 8011178:	9604      	str	r6, [sp, #16]
 801117a:	fa1f f982 	uxth.w	r9, r2
 801117e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011182:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8011186:	43d2      	mvns	r2, r2
 8011188:	b2d2      	uxtb	r2, r2
 801118a:	fb16 f609 	smulbb	r6, r6, r9
 801118e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011192:	fb07 6702 	mla	r7, r7, r2, r6
 8011196:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801119a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801119e:	fa5f fc8c 	uxtb.w	ip, ip
 80111a2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80111a6:	fa5f fe8e 	uxtb.w	lr, lr
 80111aa:	fb1c fc09 	smulbb	ip, ip, r9
 80111ae:	fb0e cc02 	mla	ip, lr, r2, ip
 80111b2:	b2bf      	uxth	r7, r7
 80111b4:	fb1a fa09 	smulbb	sl, sl, r9
 80111b8:	fa1f fc8c 	uxth.w	ip, ip
 80111bc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80111c0:	fb06 a602 	mla	r6, r6, r2, sl
 80111c4:	1c7a      	adds	r2, r7, #1
 80111c6:	f10c 0a01 	add.w	sl, ip, #1
 80111ca:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80111ce:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80111d2:	b2b6      	uxth	r6, r6
 80111d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80111d8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80111dc:	ea4a 0707 	orr.w	r7, sl, r7
 80111e0:	f106 0a01 	add.w	sl, r6, #1
 80111e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80111e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80111ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80111f0:	9a04      	ldr	r2, [sp, #16]
 80111f2:	ea47 070a 	orr.w	r7, r7, sl
 80111f6:	52a7      	strh	r7, [r4, r2]
 80111f8:	e7af      	b.n	801115a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80111fa:	f04f 0e00 	mov.w	lr, #0
 80111fe:	eba3 020e 	sub.w	r2, r3, lr
 8011202:	2a00      	cmp	r2, #0
 8011204:	f77f af3a 	ble.w	801107c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8011208:	9e02      	ldr	r6, [sp, #8]
 801120a:	1402      	asrs	r2, r0, #16
 801120c:	140d      	asrs	r5, r1, #16
 801120e:	fb06 2505 	mla	r5, r6, r5, r2
 8011212:	086a      	lsrs	r2, r5, #1
 8011214:	9e03      	ldr	r6, [sp, #12]
 8011216:	5cb2      	ldrb	r2, [r6, r2]
 8011218:	07ed      	lsls	r5, r5, #31
 801121a:	bf54      	ite	pl
 801121c:	f002 020f 	andpl.w	r2, r2, #15
 8011220:	1112      	asrmi	r2, r2, #4
 8011222:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011226:	b2d2      	uxtb	r2, r2
 8011228:	2aff      	cmp	r2, #255	; 0xff
 801122a:	d115      	bne.n	8011258 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801122c:	f8d8 5000 	ldr.w	r5, [r8]
 8011230:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8011234:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8011238:	096a      	lsrs	r2, r5, #5
 801123a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801123e:	4332      	orrs	r2, r6
 8011240:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011244:	432a      	orrs	r2, r5
 8011246:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801124a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801124c:	4410      	add	r0, r2
 801124e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011250:	f10e 0e01 	add.w	lr, lr, #1
 8011254:	4411      	add	r1, r2
 8011256:	e7d2      	b.n	80111fe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8011258:	2a00      	cmp	r2, #0
 801125a:	d0f6      	beq.n	801124a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801125c:	f8d8 7000 	ldr.w	r7, [r8]
 8011260:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011264:	fa1f f982 	uxth.w	r9, r2
 8011268:	ea4f 262c 	mov.w	r6, ip, asr #8
 801126c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8011270:	43d2      	mvns	r2, r2
 8011272:	b2d2      	uxtb	r2, r2
 8011274:	fb15 f509 	smulbb	r5, r5, r9
 8011278:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801127c:	fb06 5602 	mla	r6, r6, r2, r5
 8011280:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8011284:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8011288:	b2ff      	uxtb	r7, r7
 801128a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801128e:	fa5f fc8c 	uxtb.w	ip, ip
 8011292:	fb17 f709 	smulbb	r7, r7, r9
 8011296:	fb0c 7702 	mla	r7, ip, r2, r7
 801129a:	b2b6      	uxth	r6, r6
 801129c:	fb1a fa09 	smulbb	sl, sl, r9
 80112a0:	b2bf      	uxth	r7, r7
 80112a2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80112a6:	fb05 a502 	mla	r5, r5, r2, sl
 80112aa:	1c72      	adds	r2, r6, #1
 80112ac:	f107 0a01 	add.w	sl, r7, #1
 80112b0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80112b4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80112b8:	b2ad      	uxth	r5, r5
 80112ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80112be:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80112c2:	ea4a 0606 	orr.w	r6, sl, r6
 80112c6:	f105 0a01 	add.w	sl, r5, #1
 80112ca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80112ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80112d2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80112d6:	ea46 060a 	orr.w	r6, r6, sl
 80112da:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80112de:	e7b4      	b.n	801124a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80112e0:	b007      	add	sp, #28
 80112e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80112e6:	bf00      	nop
 80112e8:	2000a4f8 	.word	0x2000a4f8

080112ec <_ZN8touchgfx8LCD16bppD1Ev>:
 80112ec:	4770      	bx	lr

080112ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80112ee:	4770      	bx	lr

080112f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80112f0:	4770      	bx	lr

080112f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80112f2:	4770      	bx	lr

080112f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80112f4:	4770      	bx	lr

080112f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80112f6:	4770      	bx	lr

080112f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80112f8:	4770      	bx	lr

080112fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80112fa:	4770      	bx	lr

080112fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80112fc:	4770      	bx	lr

080112fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80112fe:	4770      	bx	lr

08011300 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8011300:	4770      	bx	lr

08011302 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011302:	4770      	bx	lr

08011304 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011304:	4770      	bx	lr

08011306 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011306:	4770      	bx	lr

08011308 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8011308:	4770      	bx	lr

0801130a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801130a:	4770      	bx	lr

0801130c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801130c:	4770      	bx	lr

0801130e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801130e:	4770      	bx	lr

08011310 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011310:	4770      	bx	lr

08011312 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8011312:	4770      	bx	lr

08011314 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011314:	4770      	bx	lr

08011316 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011316:	4770      	bx	lr

08011318 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8011318:	4770      	bx	lr

0801131a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801131a:	4770      	bx	lr

0801131c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801131c:	4770      	bx	lr

0801131e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801131e:	4770      	bx	lr

08011320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8011320:	4770      	bx	lr

08011322 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011322:	4770      	bx	lr

08011324 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8011324:	4770      	bx	lr
	...

08011328 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8011328:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801132c:	4692      	mov	sl, r2
 801132e:	4a22      	ldr	r2, [pc, #136]	; (80113b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x90>)
 8011330:	6812      	ldr	r2, [r2, #0]
 8011332:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8011336:	2a02      	cmp	r2, #2
 8011338:	b088      	sub	sp, #32
 801133a:	4605      	mov	r5, r0
 801133c:	4689      	mov	r9, r1
 801133e:	d106      	bne.n	801134e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8011340:	4b1e      	ldr	r3, [pc, #120]	; (80113bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x94>)
 8011342:	4a1f      	ldr	r2, [pc, #124]	; (80113c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8011344:	f44f 7158 	mov.w	r1, #864	; 0x360
 8011348:	481e      	ldr	r0, [pc, #120]	; (80113c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x9c>)
 801134a:	f009 fca5 	bl	801ac98 <__assert_func>
 801134e:	ac08      	add	r4, sp, #32
 8011350:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8011354:	4620      	mov	r0, r4
 8011356:	f7fd fce3 	bl	800ed20 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801135a:	682b      	ldr	r3, [r5, #0]
 801135c:	4606      	mov	r6, r0
 801135e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011360:	4628      	mov	r0, r5
 8011362:	4798      	blx	r3
 8011364:	4286      	cmp	r6, r0
 8011366:	d004      	beq.n	8011372 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8011368:	4b17      	ldr	r3, [pc, #92]	; (80113c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa0>)
 801136a:	4a15      	ldr	r2, [pc, #84]	; (80113c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 801136c:	f240 3162 	movw	r1, #866	; 0x362
 8011370:	e7ea      	b.n	8011348 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011372:	4620      	mov	r0, r4
 8011374:	f7fd fc4a 	bl	800ec0c <_ZNK8touchgfx6Bitmap7getDataEv>
 8011378:	4606      	mov	r6, r0
 801137a:	b920      	cbnz	r0, 8011386 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 801137c:	4b13      	ldr	r3, [pc, #76]	; (80113cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0xa4>)
 801137e:	4a10      	ldr	r2, [pc, #64]	; (80113c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x98>)
 8011380:	f44f 7159 	mov.w	r1, #868	; 0x364
 8011384:	e7e0      	b.n	8011348 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011386:	682b      	ldr	r3, [r5, #0]
 8011388:	4620      	mov	r0, r4
 801138a:	f8d3 8018 	ldr.w	r8, [r3, #24]
 801138e:	f7fd fb21 	bl	800e9d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011392:	4607      	mov	r7, r0
 8011394:	4620      	mov	r0, r4
 8011396:	f7fd fb61 	bl	800ea5c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801139a:	b23f      	sxth	r7, r7
 801139c:	b200      	sxth	r0, r0
 801139e:	9002      	str	r0, [sp, #8]
 80113a0:	e9cd 6700 	strd	r6, r7, [sp]
 80113a4:	a806      	add	r0, sp, #24
 80113a6:	4653      	mov	r3, sl
 80113a8:	464a      	mov	r2, r9
 80113aa:	4629      	mov	r1, r5
 80113ac:	47c0      	blx	r8
 80113ae:	4630      	mov	r0, r6
 80113b0:	b008      	add	sp, #32
 80113b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80113b6:	bf00      	nop
 80113b8:	2000a4f0 	.word	0x2000a4f0
 80113bc:	0801e8e2 	.word	0x0801e8e2
 80113c0:	0801f1df 	.word	0x0801f1df
 80113c4:	0801e994 	.word	0x0801e994
 80113c8:	0801e9c6 	.word	0x0801e9c6
 80113cc:	0801ea1b 	.word	0x0801ea1b

080113d0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80113d0:	b508      	push	{r3, lr}
 80113d2:	4b06      	ldr	r3, [pc, #24]	; (80113ec <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 80113d4:	8818      	ldrh	r0, [r3, #0]
 80113d6:	b928      	cbnz	r0, 80113e4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 80113d8:	4b05      	ldr	r3, [pc, #20]	; (80113f0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 80113da:	4a06      	ldr	r2, [pc, #24]	; (80113f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 80113dc:	4806      	ldr	r0, [pc, #24]	; (80113f8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 80113de:	2153      	movs	r1, #83	; 0x53
 80113e0:	f009 fc5a 	bl	801ac98 <__assert_func>
 80113e4:	0040      	lsls	r0, r0, #1
 80113e6:	b280      	uxth	r0, r0
 80113e8:	bd08      	pop	{r3, pc}
 80113ea:	bf00      	nop
 80113ec:	2000a4ea 	.word	0x2000a4ea
 80113f0:	0801ea8a 	.word	0x0801ea8a
 80113f4:	0801f09c 	.word	0x0801f09c
 80113f8:	0801eacc 	.word	0x0801eacc

080113fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80113fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8011400:	2300      	movs	r3, #0
 8011402:	9300      	str	r3, [sp, #0]
 8011404:	4b3d      	ldr	r3, [pc, #244]	; (80114fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8011406:	781b      	ldrb	r3, [r3, #0]
 8011408:	2b00      	cmp	r3, #0
 801140a:	d137      	bne.n	801147c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801140c:	4a3c      	ldr	r2, [pc, #240]	; (8011500 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801140e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8011412:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011416:	2b00      	cmp	r3, #0
 8011418:	d132      	bne.n	8011480 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801141a:	4b3a      	ldr	r3, [pc, #232]	; (8011504 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801141c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011420:	6808      	ldr	r0, [r1, #0]
 8011422:	6849      	ldr	r1, [r1, #4]
 8011424:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011428:	ac02      	add	r4, sp, #8
 801142a:	ab02      	add	r3, sp, #8
 801142c:	c303      	stmia	r3!, {r0, r1}
 801142e:	4669      	mov	r1, sp
 8011430:	4620      	mov	r0, r4
 8011432:	f7fa fc71 	bl	800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011436:	4668      	mov	r0, sp
 8011438:	f7fa fc46 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801143c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011440:	f8bd 2000 	ldrh.w	r2, [sp]
 8011444:	4d30      	ldr	r5, [pc, #192]	; (8011508 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8011446:	4413      	add	r3, r2
 8011448:	f8ad 3008 	strh.w	r3, [sp, #8]
 801144c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8011450:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011454:	6828      	ldr	r0, [r5, #0]
 8011456:	4413      	add	r3, r2
 8011458:	f8ad 300a 	strh.w	r3, [sp, #10]
 801145c:	6803      	ldr	r3, [r0, #0]
 801145e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011460:	4798      	blx	r3
 8011462:	f010 0f01 	tst.w	r0, #1
 8011466:	462f      	mov	r7, r5
 8011468:	d00c      	beq.n	8011484 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801146a:	6828      	ldr	r0, [r5, #0]
 801146c:	6803      	ldr	r3, [r0, #0]
 801146e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011472:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8011474:	4798      	blx	r3
 8011476:	b004      	add	sp, #16
 8011478:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801147c:	4a21      	ldr	r2, [pc, #132]	; (8011504 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801147e:	e7c6      	b.n	801140e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8011480:	4b1f      	ldr	r3, [pc, #124]	; (8011500 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8011482:	e7cb      	b.n	801141c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8011484:	6838      	ldr	r0, [r7, #0]
 8011486:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801148a:	6803      	ldr	r3, [r0, #0]
 801148c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8011490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011492:	4798      	blx	r3
 8011494:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8011498:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801149c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80114a0:	fb16 3602 	smlabb	r6, r6, r2, r3
 80114a4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80114a8:	6838      	ldr	r0, [r7, #0]
 80114aa:	6803      	ldr	r3, [r0, #0]
 80114ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80114ae:	4798      	blx	r3
 80114b0:	4a13      	ldr	r2, [pc, #76]	; (8011500 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80114b2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80114b6:	8813      	ldrh	r3, [r2, #0]
 80114b8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80114bc:	fb03 1404 	mla	r4, r3, r4, r1
 80114c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80114c4:	435d      	muls	r5, r3
 80114c6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80114ca:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80114ce:	4691      	mov	r9, r2
 80114d0:	6838      	ldr	r0, [r7, #0]
 80114d2:	42ac      	cmp	r4, r5
 80114d4:	6803      	ldr	r3, [r0, #0]
 80114d6:	d20e      	bcs.n	80114f6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80114d8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80114dc:	4632      	mov	r2, r6
 80114de:	4643      	mov	r3, r8
 80114e0:	4621      	mov	r1, r4
 80114e2:	47d0      	blx	sl
 80114e4:	f8b9 3000 	ldrh.w	r3, [r9]
 80114e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80114ec:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80114f0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80114f4:	e7ec      	b.n	80114d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80114f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80114f8:	4798      	blx	r3
 80114fa:	e7bc      	b.n	8011476 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80114fc:	2000a4e8 	.word	0x2000a4e8
 8011500:	2000a4ea 	.word	0x2000a4ea
 8011504:	2000a4ec 	.word	0x2000a4ec
 8011508:	2000a4f0 	.word	0x2000a4f0

0801150c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801150c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011510:	b08b      	sub	sp, #44	; 0x2c
 8011512:	460f      	mov	r7, r1
 8011514:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8011518:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801151c:	4616      	mov	r6, r2
 801151e:	f1bb 0f00 	cmp.w	fp, #0
 8011522:	d049      	beq.n	80115b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8011524:	6810      	ldr	r0, [r2, #0]
 8011526:	6851      	ldr	r1, [r2, #4]
 8011528:	ad06      	add	r5, sp, #24
 801152a:	c503      	stmia	r5!, {r0, r1}
 801152c:	6818      	ldr	r0, [r3, #0]
 801152e:	6859      	ldr	r1, [r3, #4]
 8011530:	ad08      	add	r5, sp, #32
 8011532:	c503      	stmia	r5!, {r0, r1}
 8011534:	a806      	add	r0, sp, #24
 8011536:	f7fa fbc7 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801153a:	4631      	mov	r1, r6
 801153c:	a808      	add	r0, sp, #32
 801153e:	f7fa fbeb 	bl	800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011542:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011546:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801154a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801154e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8011552:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8011556:	fb16 2103 	smlabb	r1, r6, r3, r2
 801155a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801155e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8011562:	4f5f      	ldr	r7, [pc, #380]	; (80116e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8011564:	440a      	add	r2, r1
 8011566:	f8ad 2020 	strh.w	r2, [sp, #32]
 801156a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801156e:	6838      	ldr	r0, [r7, #0]
 8011570:	4413      	add	r3, r2
 8011572:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011576:	6803      	ldr	r3, [r0, #0]
 8011578:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801157a:	4798      	blx	r3
 801157c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8011580:	46b9      	mov	r9, r7
 8011582:	d01c      	beq.n	80115be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8011584:	f010 0f04 	tst.w	r0, #4
 8011588:	d01d      	beq.n	80115c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801158a:	f8d9 0000 	ldr.w	r0, [r9]
 801158e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8011592:	6801      	ldr	r1, [r0, #0]
 8011594:	f8cd b00c 	str.w	fp, [sp, #12]
 8011598:	2700      	movs	r7, #0
 801159a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801159e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80115a2:	9402      	str	r4, [sp, #8]
 80115a4:	b2ad      	uxth	r5, r5
 80115a6:	fa1f f488 	uxth.w	r4, r8
 80115aa:	9501      	str	r5, [sp, #4]
 80115ac:	9400      	str	r4, [sp, #0]
 80115ae:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80115b0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80115b4:	4631      	mov	r1, r6
 80115b6:	47a0      	blx	r4
 80115b8:	b00b      	add	sp, #44	; 0x2c
 80115ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115be:	b914      	cbnz	r4, 80115c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80115c0:	f010 0f01 	tst.w	r0, #1
 80115c4:	e7e0      	b.n	8011588 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80115c6:	f8d9 0000 	ldr.w	r0, [r9]
 80115ca:	6803      	ldr	r3, [r0, #0]
 80115cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80115ce:	4798      	blx	r3
 80115d0:	4b44      	ldr	r3, [pc, #272]	; (80116e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80115d2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80115d6:	881a      	ldrh	r2, [r3, #0]
 80115d8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80115dc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80115e0:	fb02 1404 	mla	r4, r2, r4, r1
 80115e4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80115e8:	469a      	mov	sl, r3
 80115ea:	fb05 f502 	mul.w	r5, r5, r2
 80115ee:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80115f2:	d059      	beq.n	80116a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80115f4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80115f8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80115fc:	fa1f f28b 	uxth.w	r2, fp
 8011600:	fa1f f989 	uxth.w	r9, r9
 8011604:	469e      	mov	lr, r3
 8011606:	42ac      	cmp	r4, r5
 8011608:	d264      	bcs.n	80116d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801160a:	eb04 0a07 	add.w	sl, r4, r7
 801160e:	4554      	cmp	r4, sl
 8011610:	d23d      	bcs.n	801168e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8011612:	8821      	ldrh	r1, [r4, #0]
 8011614:	f836 3b02 	ldrh.w	r3, [r6], #2
 8011618:	1208      	asrs	r0, r1, #8
 801161a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801161e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011622:	fb10 f009 	smulbb	r0, r0, r9
 8011626:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801162a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801162e:	00c9      	lsls	r1, r1, #3
 8011630:	fb0c 0c02 	mla	ip, ip, r2, r0
 8011634:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8011638:	10d8      	asrs	r0, r3, #3
 801163a:	b2c9      	uxtb	r1, r1
 801163c:	00db      	lsls	r3, r3, #3
 801163e:	fa1f fc8c 	uxth.w	ip, ip
 8011642:	fb1b fb09 	smulbb	fp, fp, r9
 8011646:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801164a:	b2db      	uxtb	r3, r3
 801164c:	fb11 f109 	smulbb	r1, r1, r9
 8011650:	fb00 b002 	mla	r0, r0, r2, fp
 8011654:	fb03 1302 	mla	r3, r3, r2, r1
 8011658:	f10c 0b01 	add.w	fp, ip, #1
 801165c:	b29b      	uxth	r3, r3
 801165e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8011662:	b280      	uxth	r0, r0
 8011664:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8011668:	f103 0c01 	add.w	ip, r3, #1
 801166c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8011670:	1c43      	adds	r3, r0, #1
 8011672:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8011676:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801167a:	0940      	lsrs	r0, r0, #5
 801167c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8011680:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011684:	ea4c 0c00 	orr.w	ip, ip, r0
 8011688:	f824 cb02 	strh.w	ip, [r4], #2
 801168c:	e7bf      	b.n	801160e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801168e:	f8be 3000 	ldrh.w	r3, [lr]
 8011692:	eba3 0308 	sub.w	r3, r3, r8
 8011696:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801169a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801169e:	eba3 0308 	sub.w	r3, r3, r8
 80116a2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80116a6:	e7ae      	b.n	8011606 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80116a8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80116ac:	f8d9 0000 	ldr.w	r0, [r9]
 80116b0:	42ac      	cmp	r4, r5
 80116b2:	6803      	ldr	r3, [r0, #0]
 80116b4:	d20e      	bcs.n	80116d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80116b6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80116ba:	4632      	mov	r2, r6
 80116bc:	463b      	mov	r3, r7
 80116be:	4621      	mov	r1, r4
 80116c0:	47c0      	blx	r8
 80116c2:	f8ba 3000 	ldrh.w	r3, [sl]
 80116c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80116ca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80116ce:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80116d2:	e7eb      	b.n	80116ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80116d4:	4b02      	ldr	r3, [pc, #8]	; (80116e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80116d6:	6818      	ldr	r0, [r3, #0]
 80116d8:	6803      	ldr	r3, [r0, #0]
 80116da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116dc:	4798      	blx	r3
 80116de:	e76b      	b.n	80115b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80116e0:	2000a4f0 	.word	0x2000a4f0
 80116e4:	2000a4ea 	.word	0x2000a4ea

080116e8 <_ZN8touchgfx8LCD16bppD0Ev>:
 80116e8:	b510      	push	{r4, lr}
 80116ea:	2178      	movs	r1, #120	; 0x78
 80116ec:	4604      	mov	r4, r0
 80116ee:	f009 faa5 	bl	801ac3c <_ZdlPvj>
 80116f2:	4620      	mov	r0, r4
 80116f4:	bd10      	pop	{r4, pc}

080116f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80116f6:	b510      	push	{r4, lr}
 80116f8:	2104      	movs	r1, #4
 80116fa:	4604      	mov	r4, r0
 80116fc:	f009 fa9e 	bl	801ac3c <_ZdlPvj>
 8011700:	4620      	mov	r0, r4
 8011702:	bd10      	pop	{r4, pc}

08011704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8011704:	b510      	push	{r4, lr}
 8011706:	2104      	movs	r1, #4
 8011708:	4604      	mov	r4, r0
 801170a:	f009 fa97 	bl	801ac3c <_ZdlPvj>
 801170e:	4620      	mov	r0, r4
 8011710:	bd10      	pop	{r4, pc}

08011712 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011712:	b510      	push	{r4, lr}
 8011714:	2104      	movs	r1, #4
 8011716:	4604      	mov	r4, r0
 8011718:	f009 fa90 	bl	801ac3c <_ZdlPvj>
 801171c:	4620      	mov	r0, r4
 801171e:	bd10      	pop	{r4, pc}

08011720 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8011720:	b510      	push	{r4, lr}
 8011722:	2104      	movs	r1, #4
 8011724:	4604      	mov	r4, r0
 8011726:	f009 fa89 	bl	801ac3c <_ZdlPvj>
 801172a:	4620      	mov	r0, r4
 801172c:	bd10      	pop	{r4, pc}

0801172e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801172e:	b510      	push	{r4, lr}
 8011730:	2104      	movs	r1, #4
 8011732:	4604      	mov	r4, r0
 8011734:	f009 fa82 	bl	801ac3c <_ZdlPvj>
 8011738:	4620      	mov	r0, r4
 801173a:	bd10      	pop	{r4, pc}

0801173c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801173c:	b510      	push	{r4, lr}
 801173e:	2104      	movs	r1, #4
 8011740:	4604      	mov	r4, r0
 8011742:	f009 fa7b 	bl	801ac3c <_ZdlPvj>
 8011746:	4620      	mov	r0, r4
 8011748:	bd10      	pop	{r4, pc}

0801174a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801174a:	b510      	push	{r4, lr}
 801174c:	2104      	movs	r1, #4
 801174e:	4604      	mov	r4, r0
 8011750:	f009 fa74 	bl	801ac3c <_ZdlPvj>
 8011754:	4620      	mov	r0, r4
 8011756:	bd10      	pop	{r4, pc}

08011758 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8011758:	b510      	push	{r4, lr}
 801175a:	2104      	movs	r1, #4
 801175c:	4604      	mov	r4, r0
 801175e:	f009 fa6d 	bl	801ac3c <_ZdlPvj>
 8011762:	4620      	mov	r0, r4
 8011764:	bd10      	pop	{r4, pc}

08011766 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011766:	b510      	push	{r4, lr}
 8011768:	2104      	movs	r1, #4
 801176a:	4604      	mov	r4, r0
 801176c:	f009 fa66 	bl	801ac3c <_ZdlPvj>
 8011770:	4620      	mov	r0, r4
 8011772:	bd10      	pop	{r4, pc}

08011774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011774:	b510      	push	{r4, lr}
 8011776:	2104      	movs	r1, #4
 8011778:	4604      	mov	r4, r0
 801177a:	f009 fa5f 	bl	801ac3c <_ZdlPvj>
 801177e:	4620      	mov	r0, r4
 8011780:	bd10      	pop	{r4, pc}

08011782 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011782:	b510      	push	{r4, lr}
 8011784:	2104      	movs	r1, #4
 8011786:	4604      	mov	r4, r0
 8011788:	f009 fa58 	bl	801ac3c <_ZdlPvj>
 801178c:	4620      	mov	r0, r4
 801178e:	bd10      	pop	{r4, pc}

08011790 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011790:	b510      	push	{r4, lr}
 8011792:	2104      	movs	r1, #4
 8011794:	4604      	mov	r4, r0
 8011796:	f009 fa51 	bl	801ac3c <_ZdlPvj>
 801179a:	4620      	mov	r0, r4
 801179c:	bd10      	pop	{r4, pc}

0801179e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801179e:	b510      	push	{r4, lr}
 80117a0:	2104      	movs	r1, #4
 80117a2:	4604      	mov	r4, r0
 80117a4:	f009 fa4a 	bl	801ac3c <_ZdlPvj>
 80117a8:	4620      	mov	r0, r4
 80117aa:	bd10      	pop	{r4, pc}

080117ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80117ac:	b510      	push	{r4, lr}
 80117ae:	2104      	movs	r1, #4
 80117b0:	4604      	mov	r4, r0
 80117b2:	f009 fa43 	bl	801ac3c <_ZdlPvj>
 80117b6:	4620      	mov	r0, r4
 80117b8:	bd10      	pop	{r4, pc}

080117ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80117ba:	b510      	push	{r4, lr}
 80117bc:	2104      	movs	r1, #4
 80117be:	4604      	mov	r4, r0
 80117c0:	f009 fa3c 	bl	801ac3c <_ZdlPvj>
 80117c4:	4620      	mov	r0, r4
 80117c6:	bd10      	pop	{r4, pc}

080117c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80117c8:	b510      	push	{r4, lr}
 80117ca:	2104      	movs	r1, #4
 80117cc:	4604      	mov	r4, r0
 80117ce:	f009 fa35 	bl	801ac3c <_ZdlPvj>
 80117d2:	4620      	mov	r0, r4
 80117d4:	bd10      	pop	{r4, pc}

080117d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80117d6:	b510      	push	{r4, lr}
 80117d8:	2104      	movs	r1, #4
 80117da:	4604      	mov	r4, r0
 80117dc:	f009 fa2e 	bl	801ac3c <_ZdlPvj>
 80117e0:	4620      	mov	r0, r4
 80117e2:	bd10      	pop	{r4, pc}

080117e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80117e4:	b510      	push	{r4, lr}
 80117e6:	2104      	movs	r1, #4
 80117e8:	4604      	mov	r4, r0
 80117ea:	f009 fa27 	bl	801ac3c <_ZdlPvj>
 80117ee:	4620      	mov	r0, r4
 80117f0:	bd10      	pop	{r4, pc}

080117f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80117f2:	b510      	push	{r4, lr}
 80117f4:	2104      	movs	r1, #4
 80117f6:	4604      	mov	r4, r0
 80117f8:	f009 fa20 	bl	801ac3c <_ZdlPvj>
 80117fc:	4620      	mov	r0, r4
 80117fe:	bd10      	pop	{r4, pc}

08011800 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011800:	b510      	push	{r4, lr}
 8011802:	2104      	movs	r1, #4
 8011804:	4604      	mov	r4, r0
 8011806:	f009 fa19 	bl	801ac3c <_ZdlPvj>
 801180a:	4620      	mov	r0, r4
 801180c:	bd10      	pop	{r4, pc}

0801180e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801180e:	b510      	push	{r4, lr}
 8011810:	2104      	movs	r1, #4
 8011812:	4604      	mov	r4, r0
 8011814:	f009 fa12 	bl	801ac3c <_ZdlPvj>
 8011818:	4620      	mov	r0, r4
 801181a:	bd10      	pop	{r4, pc}

0801181c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801181c:	b510      	push	{r4, lr}
 801181e:	2104      	movs	r1, #4
 8011820:	4604      	mov	r4, r0
 8011822:	f009 fa0b 	bl	801ac3c <_ZdlPvj>
 8011826:	4620      	mov	r0, r4
 8011828:	bd10      	pop	{r4, pc}

0801182a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801182a:	b510      	push	{r4, lr}
 801182c:	2104      	movs	r1, #4
 801182e:	4604      	mov	r4, r0
 8011830:	f009 fa04 	bl	801ac3c <_ZdlPvj>
 8011834:	4620      	mov	r0, r4
 8011836:	bd10      	pop	{r4, pc}

08011838 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011838:	b510      	push	{r4, lr}
 801183a:	2104      	movs	r1, #4
 801183c:	4604      	mov	r4, r0
 801183e:	f009 f9fd 	bl	801ac3c <_ZdlPvj>
 8011842:	4620      	mov	r0, r4
 8011844:	bd10      	pop	{r4, pc}

08011846 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8011846:	b510      	push	{r4, lr}
 8011848:	2104      	movs	r1, #4
 801184a:	4604      	mov	r4, r0
 801184c:	f009 f9f6 	bl	801ac3c <_ZdlPvj>
 8011850:	4620      	mov	r0, r4
 8011852:	bd10      	pop	{r4, pc}

08011854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8011854:	b510      	push	{r4, lr}
 8011856:	2104      	movs	r1, #4
 8011858:	4604      	mov	r4, r0
 801185a:	f009 f9ef 	bl	801ac3c <_ZdlPvj>
 801185e:	4620      	mov	r0, r4
 8011860:	bd10      	pop	{r4, pc}

08011862 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8011862:	b510      	push	{r4, lr}
 8011864:	2104      	movs	r1, #4
 8011866:	4604      	mov	r4, r0
 8011868:	f009 f9e8 	bl	801ac3c <_ZdlPvj>
 801186c:	4620      	mov	r0, r4
 801186e:	bd10      	pop	{r4, pc}

08011870 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8011870:	b510      	push	{r4, lr}
 8011872:	2104      	movs	r1, #4
 8011874:	4604      	mov	r4, r0
 8011876:	f009 f9e1 	bl	801ac3c <_ZdlPvj>
 801187a:	4620      	mov	r0, r4
 801187c:	bd10      	pop	{r4, pc}
	...

08011880 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8011880:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011882:	4606      	mov	r6, r0
 8011884:	b087      	sub	sp, #28
 8011886:	460c      	mov	r4, r1
 8011888:	4617      	mov	r7, r2
 801188a:	461d      	mov	r5, r3
 801188c:	b333      	cbz	r3, 80118dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801188e:	4608      	mov	r0, r1
 8011890:	f7f7 fc79 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011894:	bb10      	cbnz	r0, 80118dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8011896:	6820      	ldr	r0, [r4, #0]
 8011898:	6861      	ldr	r1, [r4, #4]
 801189a:	4c1c      	ldr	r4, [pc, #112]	; (801190c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801189c:	ab04      	add	r3, sp, #16
 801189e:	c303      	stmia	r3!, {r0, r1}
 80118a0:	a804      	add	r0, sp, #16
 80118a2:	f7fa fa11 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80118a6:	6820      	ldr	r0, [r4, #0]
 80118a8:	6803      	ldr	r3, [r0, #0]
 80118aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80118ac:	4798      	blx	r3
 80118ae:	2dff      	cmp	r5, #255	; 0xff
 80118b0:	d016      	beq.n	80118e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80118b2:	f010 0f08 	tst.w	r0, #8
 80118b6:	6820      	ldr	r0, [r4, #0]
 80118b8:	d015      	beq.n	80118e6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80118ba:	2400      	movs	r4, #0
 80118bc:	6801      	ldr	r1, [r0, #0]
 80118be:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80118c2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80118c6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80118ca:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80118ce:	9401      	str	r4, [sp, #4]
 80118d0:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80118d4:	9400      	str	r4, [sp, #0]
 80118d6:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80118d8:	4639      	mov	r1, r7
 80118da:	47a0      	blx	r4
 80118dc:	b007      	add	sp, #28
 80118de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80118e0:	f010 0f02 	tst.w	r0, #2
 80118e4:	e7e7      	b.n	80118b6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80118e6:	6803      	ldr	r3, [r0, #0]
 80118e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80118ea:	4798      	blx	r3
 80118ec:	4b08      	ldr	r3, [pc, #32]	; (8011910 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80118ee:	881a      	ldrh	r2, [r3, #0]
 80118f0:	6833      	ldr	r3, [r6, #0]
 80118f2:	e9cd 7500 	strd	r7, r5, [sp]
 80118f6:	4601      	mov	r1, r0
 80118f8:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80118fa:	4630      	mov	r0, r6
 80118fc:	ab04      	add	r3, sp, #16
 80118fe:	47a8      	blx	r5
 8011900:	6820      	ldr	r0, [r4, #0]
 8011902:	6803      	ldr	r3, [r0, #0]
 8011904:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011906:	4798      	blx	r3
 8011908:	e7e8      	b.n	80118dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801190a:	bf00      	nop
 801190c:	2000a4f0 	.word	0x2000a4f0
 8011910:	2000a4ea 	.word	0x2000a4ea

08011914 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8011914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011918:	4690      	mov	r8, r2
 801191a:	4a8d      	ldr	r2, [pc, #564]	; (8011b50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>)
 801191c:	6812      	ldr	r2, [r2, #0]
 801191e:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8011922:	b091      	sub	sp, #68	; 0x44
 8011924:	2a02      	cmp	r2, #2
 8011926:	4606      	mov	r6, r0
 8011928:	460d      	mov	r5, r1
 801192a:	461c      	mov	r4, r3
 801192c:	f9bd b06c 	ldrsh.w	fp, [sp, #108]	; 0x6c
 8011930:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8011934:	d106      	bne.n	8011944 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x30>
 8011936:	4b87      	ldr	r3, [pc, #540]	; (8011b54 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x240>)
 8011938:	4a87      	ldr	r2, [pc, #540]	; (8011b58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801193a:	f240 316b 	movw	r1, #875	; 0x36b
 801193e:	4887      	ldr	r0, [pc, #540]	; (8011b5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x248>)
 8011940:	f009 f9aa 	bl	801ac98 <__assert_func>
 8011944:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8011946:	b923      	cbnz	r3, 8011952 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x3e>
 8011948:	4b85      	ldr	r3, [pc, #532]	; (8011b60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x24c>)
 801194a:	4a83      	ldr	r2, [pc, #524]	; (8011b58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x244>)
 801194c:	f44f 715b 	mov.w	r1, #876	; 0x36c
 8011950:	e7f5      	b.n	801193e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x2a>
 8011952:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011956:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801195a:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 801195e:	f10d 0928 	add.w	r9, sp, #40	; 0x28
 8011962:	4621      	mov	r1, r4
 8011964:	4648      	mov	r0, r9
 8011966:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801196a:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 801196e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8011972:	f7f7 fbc5 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 8011976:	4641      	mov	r1, r8
 8011978:	4648      	mov	r0, r9
 801197a:	f7f7 fbc1 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 801197e:	4a79      	ldr	r2, [pc, #484]	; (8011b64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x250>)
 8011980:	f8b2 c000 	ldrh.w	ip, [r2]
 8011984:	4a78      	ldr	r2, [pc, #480]	; (8011b68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x254>)
 8011986:	8810      	ldrh	r0, [r2, #0]
 8011988:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801198c:	2a00      	cmp	r2, #0
 801198e:	fa0f f18c 	sxth.w	r1, ip
 8011992:	fa0f fe80 	sxth.w	lr, r0
 8011996:	da07      	bge.n	80119a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x94>
 8011998:	f8bd 802c 	ldrh.w	r8, [sp, #44]	; 0x2c
 801199c:	4442      	add	r2, r8
 801199e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80119a2:	2200      	movs	r2, #0
 80119a4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80119a8:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80119ac:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80119b0:	1a89      	subs	r1, r1, r2
 80119b2:	4588      	cmp	r8, r1
 80119b4:	bfc4      	itt	gt
 80119b6:	ebac 0102 	subgt.w	r1, ip, r2
 80119ba:	f8ad 102c 	strhgt.w	r1, [sp, #44]	; 0x2c
 80119be:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80119c2:	2900      	cmp	r1, #0
 80119c4:	da07      	bge.n	80119d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xc2>
 80119c6:	f8bd 802e 	ldrh.w	r8, [sp, #46]	; 0x2e
 80119ca:	4441      	add	r1, r8
 80119cc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80119d0:	2100      	movs	r1, #0
 80119d2:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80119d6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80119da:	f9bd 102e 	ldrsh.w	r1, [sp, #46]	; 0x2e
 80119de:	ebae 0e0a 	sub.w	lr, lr, sl
 80119e2:	4571      	cmp	r1, lr
 80119e4:	bfc4      	itt	gt
 80119e6:	eba0 010a 	subgt.w	r1, r0, sl
 80119ea:	f8ad 102e 	strhgt.w	r1, [sp, #46]	; 0x2e
 80119ee:	495f      	ldr	r1, [pc, #380]	; (8011b6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x258>)
 80119f0:	7809      	ldrb	r1, [r1, #0]
 80119f2:	b9a9      	cbnz	r1, 8011a20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x10c>
 80119f4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80119f8:	45e0      	cmp	r8, ip
 80119fa:	bf14      	ite	ne
 80119fc:	2300      	movne	r3, #0
 80119fe:	2301      	moveq	r3, #1
 8011a00:	4648      	mov	r0, r9
 8011a02:	9202      	str	r2, [sp, #8]
 8011a04:	9305      	str	r3, [sp, #20]
 8011a06:	f7f7 fbbe 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011a0a:	9a02      	ldr	r2, [sp, #8]
 8011a0c:	b160      	cbz	r0, 8011a28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x114>
 8011a0e:	2300      	movs	r3, #0
 8011a10:	8033      	strh	r3, [r6, #0]
 8011a12:	8073      	strh	r3, [r6, #2]
 8011a14:	80b3      	strh	r3, [r6, #4]
 8011a16:	4630      	mov	r0, r6
 8011a18:	80f3      	strh	r3, [r6, #6]
 8011a1a:	b011      	add	sp, #68	; 0x44
 8011a1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a20:	f9bd 802e 	ldrsh.w	r8, [sp, #46]	; 0x2e
 8011a24:	4580      	cmp	r8, r0
 8011a26:	e7e8      	b.n	80119fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe6>
 8011a28:	8821      	ldrh	r1, [r4, #0]
 8011a2a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8011a2e:	9304      	str	r3, [sp, #16]
 8011a30:	1a52      	subs	r2, r2, r1
 8011a32:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8011a36:	9306      	str	r3, [sp, #24]
 8011a38:	b213      	sxth	r3, r2
 8011a3a:	9302      	str	r3, [sp, #8]
 8011a3c:	8863      	ldrh	r3, [r4, #2]
 8011a3e:	900e      	str	r0, [sp, #56]	; 0x38
 8011a40:	ebaa 0a03 	sub.w	sl, sl, r3
 8011a44:	fa0f f38a 	sxth.w	r3, sl
 8011a48:	9303      	str	r3, [sp, #12]
 8011a4a:	9b02      	ldr	r3, [sp, #8]
 8011a4c:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011a50:	9b03      	ldr	r3, [sp, #12]
 8011a52:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011a56:	9b04      	ldr	r3, [sp, #16]
 8011a58:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011a5c:	a90e      	add	r1, sp, #56	; 0x38
 8011a5e:	9b06      	ldr	r3, [sp, #24]
 8011a60:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011a64:	a80c      	add	r0, sp, #48	; 0x30
 8011a66:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8011a6a:	f8ad b03c 	strh.w	fp, [sp, #60]	; 0x3c
 8011a6e:	f7fa f953 	bl	800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011a72:	4648      	mov	r0, r9
 8011a74:	f7fa f928 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011a78:	a80e      	add	r0, sp, #56	; 0x38
 8011a7a:	f7fa f925 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011a7e:	4b3c      	ldr	r3, [pc, #240]	; (8011b70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x25c>)
 8011a80:	f9bd 703c 	ldrsh.w	r7, [sp, #60]	; 0x3c
 8011a84:	881b      	ldrh	r3, [r3, #0]
 8011a86:	9307      	str	r3, [sp, #28]
 8011a88:	682b      	ldr	r3, [r5, #0]
 8011a8a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8011b50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 8011a8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011a90:	4628      	mov	r0, r5
 8011a92:	4798      	blx	r3
 8011a94:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8011a98:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8011a9c:	4682      	mov	sl, r0
 8011a9e:	fb17 2303 	smlabb	r3, r7, r3, r2
 8011aa2:	f8d8 0000 	ldr.w	r0, [r8]
 8011aa6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011aa8:	eb02 0443 	add.w	r4, r2, r3, lsl #1
 8011aac:	6803      	ldr	r3, [r0, #0]
 8011aae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011ab0:	4798      	blx	r3
 8011ab2:	9009      	str	r0, [sp, #36]	; 0x24
 8011ab4:	f8d8 0000 	ldr.w	r0, [r8]
 8011ab8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8011abc:	6802      	ldr	r2, [r0, #0]
 8011abe:	9308      	str	r3, [sp, #32]
 8011ac0:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8011ac2:	f9bd 502a 	ldrsh.w	r5, [sp, #42]	; 0x2a
 8011ac6:	4790      	blx	r2
 8011ac8:	f010 0f01 	tst.w	r0, #1
 8011acc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011ace:	d011      	beq.n	8011af4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e0>
 8011ad0:	f8d8 0000 	ldr.w	r0, [r8]
 8011ad4:	6803      	ldr	r3, [r0, #0]
 8011ad6:	f8cd b000 	str.w	fp, [sp]
 8011ada:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 8011adc:	e899 0006 	ldmia.w	r9, {r1, r2}
 8011ae0:	4623      	mov	r3, r4
 8011ae2:	47a8      	blx	r5
 8011ae4:	9b02      	ldr	r3, [sp, #8]
 8011ae6:	8033      	strh	r3, [r6, #0]
 8011ae8:	9b03      	ldr	r3, [sp, #12]
 8011aea:	8073      	strh	r3, [r6, #2]
 8011aec:	9b04      	ldr	r3, [sp, #16]
 8011aee:	80b3      	strh	r3, [r6, #4]
 8011af0:	9b06      	ldr	r3, [sp, #24]
 8011af2:	e790      	b.n	8011a16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x102>
 8011af4:	9a08      	ldr	r2, [sp, #32]
 8011af6:	fb0a f505 	mul.w	r5, sl, r5
 8011afa:	eb05 0542 	add.w	r5, r5, r2, lsl #1
 8011afe:	9a05      	ldr	r2, [sp, #20]
 8011b00:	441d      	add	r5, r3
 8011b02:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8011b06:	b162      	cbz	r2, 8011b22 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8011b08:	9a07      	ldr	r2, [sp, #28]
 8011b0a:	4297      	cmp	r7, r2
 8011b0c:	d109      	bne.n	8011b22 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x20e>
 8011b0e:	f8d8 0000 	ldr.w	r0, [r8]
 8011b12:	6802      	ldr	r2, [r0, #0]
 8011b14:	fb03 f30a 	mul.w	r3, r3, sl
 8011b18:	6b57      	ldr	r7, [r2, #52]	; 0x34
 8011b1a:	4621      	mov	r1, r4
 8011b1c:	462a      	mov	r2, r5
 8011b1e:	47b8      	blx	r7
 8011b20:	e7e0      	b.n	8011ae4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8011b22:	437b      	muls	r3, r7
 8011b24:	f8df b028 	ldr.w	fp, [pc, #40]	; 8011b50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x23c>
 8011b28:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 8011b2c:	007f      	lsls	r7, r7, #1
 8011b2e:	4544      	cmp	r4, r8
 8011b30:	d2d8      	bcs.n	8011ae4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1d0>
 8011b32:	f8db 0000 	ldr.w	r0, [fp]
 8011b36:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8011b3a:	6802      	ldr	r2, [r0, #0]
 8011b3c:	4621      	mov	r1, r4
 8011b3e:	f8d2 9034 	ldr.w	r9, [r2, #52]	; 0x34
 8011b42:	005b      	lsls	r3, r3, #1
 8011b44:	462a      	mov	r2, r5
 8011b46:	47c8      	blx	r9
 8011b48:	4455      	add	r5, sl
 8011b4a:	443c      	add	r4, r7
 8011b4c:	e7ef      	b.n	8011b2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21a>
 8011b4e:	bf00      	nop
 8011b50:	2000a4f0 	.word	0x2000a4f0
 8011b54:	0801e8e2 	.word	0x0801e8e2
 8011b58:	0801f14c 	.word	0x0801f14c
 8011b5c:	0801e994 	.word	0x0801e994
 8011b60:	0801e894 	.word	0x0801e894
 8011b64:	2000a4e4 	.word	0x2000a4e4
 8011b68:	2000a4e6 	.word	0x2000a4e6
 8011b6c:	2000a4e8 	.word	0x2000a4e8
 8011b70:	2000a4ea 	.word	0x2000a4ea

08011b74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8011b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011b78:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8011b7c:	9e08      	ldr	r6, [sp, #32]
 8011b7e:	4688      	mov	r8, r1
 8011b80:	4614      	mov	r4, r2
 8011b82:	461d      	mov	r5, r3
 8011b84:	2f00      	cmp	r7, #0
 8011b86:	f000 80b3 	beq.w	8011cf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8011b8a:	4618      	mov	r0, r3
 8011b8c:	f7f7 fafb 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011b90:	2800      	cmp	r0, #0
 8011b92:	f040 80ad 	bne.w	8011cf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8011b96:	f9b5 1000 	ldrsh.w	r1, [r5]
 8011b9a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8011b9e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8011ba2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8011ba6:	fb04 1303 	mla	r3, r4, r3, r1
 8011baa:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8011bae:	4365      	muls	r5, r4
 8011bb0:	2fff      	cmp	r7, #255	; 0xff
 8011bb2:	eba4 0200 	sub.w	r2, r4, r0
 8011bb6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8011bba:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8011bbe:	d04b      	beq.n	8011c58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8011bc0:	b2bc      	uxth	r4, r7
 8011bc2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8011bc6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8011bca:	fa5f f788 	uxtb.w	r7, r8
 8011bce:	b2f3      	uxtb	r3, r6
 8011bd0:	0040      	lsls	r0, r0, #1
 8011bd2:	fb0e fe04 	mul.w	lr, lr, r4
 8011bd6:	4367      	muls	r7, r4
 8011bd8:	4363      	muls	r3, r4
 8011bda:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8011bde:	fa1f fc8c 	uxth.w	ip, ip
 8011be2:	42a9      	cmp	r1, r5
 8011be4:	f080 8084 	bcs.w	8011cf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8011be8:	eb01 0900 	add.w	r9, r1, r0
 8011bec:	4549      	cmp	r1, r9
 8011bee:	d231      	bcs.n	8011c54 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8011bf0:	880a      	ldrh	r2, [r1, #0]
 8011bf2:	1214      	asrs	r4, r2, #8
 8011bf4:	10d6      	asrs	r6, r2, #3
 8011bf6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8011bfa:	00d2      	lsls	r2, r2, #3
 8011bfc:	b2d2      	uxtb	r2, r2
 8011bfe:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8011c02:	fb14 f40c 	smulbb	r4, r4, ip
 8011c06:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8011c0a:	4474      	add	r4, lr
 8011c0c:	fb12 f20c 	smulbb	r2, r2, ip
 8011c10:	b2a4      	uxth	r4, r4
 8011c12:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011c16:	441a      	add	r2, r3
 8011c18:	b292      	uxth	r2, r2
 8011c1a:	f104 0a01 	add.w	sl, r4, #1
 8011c1e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8011c22:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8011c26:	fb16 f60c 	smulbb	r6, r6, ip
 8011c2a:	f102 0a01 	add.w	sl, r2, #1
 8011c2e:	443e      	add	r6, r7
 8011c30:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8011c34:	b2b6      	uxth	r6, r6
 8011c36:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8011c3a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011c3e:	4322      	orrs	r2, r4
 8011c40:	1c74      	adds	r4, r6, #1
 8011c42:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8011c46:	0976      	lsrs	r6, r6, #5
 8011c48:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011c4c:	4332      	orrs	r2, r6
 8011c4e:	f821 2b02 	strh.w	r2, [r1], #2
 8011c52:	e7cb      	b.n	8011bec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 8011c54:	4441      	add	r1, r8
 8011c56:	e7c4      	b.n	8011be2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8011c58:	4f26      	ldr	r7, [pc, #152]	; (8011cf4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>)
 8011c5a:	0973      	lsrs	r3, r6, #5
 8011c5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011c60:	ea08 0707 	and.w	r7, r8, r7
 8011c64:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8011c68:	433b      	orrs	r3, r7
 8011c6a:	4333      	orrs	r3, r6
 8011c6c:	07e6      	lsls	r6, r4, #31
 8011c6e:	b29b      	uxth	r3, r3
 8011c70:	d50b      	bpl.n	8011c8a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x116>
 8011c72:	0040      	lsls	r0, r0, #1
 8011c74:	0052      	lsls	r2, r2, #1
 8011c76:	42a9      	cmp	r1, r5
 8011c78:	d23a      	bcs.n	8011cf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8011c7a:	180c      	adds	r4, r1, r0
 8011c7c:	42a1      	cmp	r1, r4
 8011c7e:	d202      	bcs.n	8011c86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x112>
 8011c80:	f821 3b02 	strh.w	r3, [r1], #2
 8011c84:	e7fa      	b.n	8011c7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x108>
 8011c86:	4411      	add	r1, r2
 8011c88:	e7f5      	b.n	8011c76 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x102>
 8011c8a:	078f      	lsls	r7, r1, #30
 8011c8c:	d008      	beq.n	8011ca0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12c>
 8011c8e:	0066      	lsls	r6, r4, #1
 8011c90:	460a      	mov	r2, r1
 8011c92:	42aa      	cmp	r2, r5
 8011c94:	d202      	bcs.n	8011c9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x128>
 8011c96:	8013      	strh	r3, [r2, #0]
 8011c98:	4432      	add	r2, r6
 8011c9a:	e7fa      	b.n	8011c92 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 8011c9c:	3102      	adds	r1, #2
 8011c9e:	3801      	subs	r0, #1
 8011ca0:	07c6      	lsls	r6, r0, #31
 8011ca2:	d50b      	bpl.n	8011cbc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 8011ca4:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8011ca8:	3a01      	subs	r2, #1
 8011caa:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8011cae:	0066      	lsls	r6, r4, #1
 8011cb0:	42aa      	cmp	r2, r5
 8011cb2:	d202      	bcs.n	8011cba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8011cb4:	8013      	strh	r3, [r2, #0]
 8011cb6:	4432      	add	r2, r6
 8011cb8:	e7fa      	b.n	8011cb0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13c>
 8011cba:	3801      	subs	r0, #1
 8011cbc:	b1c0      	cbz	r0, 8011cf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8011cbe:	1040      	asrs	r0, r0, #1
 8011cc0:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8011cc4:	0080      	lsls	r0, r0, #2
 8011cc6:	0064      	lsls	r4, r4, #1
 8011cc8:	42a9      	cmp	r1, r5
 8011cca:	d211      	bcs.n	8011cf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x17c>
 8011ccc:	078a      	lsls	r2, r1, #30
 8011cce:	d006      	beq.n	8011cde <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16a>
 8011cd0:	4b09      	ldr	r3, [pc, #36]	; (8011cf8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>)
 8011cd2:	4a0a      	ldr	r2, [pc, #40]	; (8011cfc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 8011cd4:	480a      	ldr	r0, [pc, #40]	; (8011d00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8011cd6:	f240 4137 	movw	r1, #1079	; 0x437
 8011cda:	f008 ffdd 	bl	801ac98 <__assert_func>
 8011cde:	180e      	adds	r6, r1, r0
 8011ce0:	460a      	mov	r2, r1
 8011ce2:	42b2      	cmp	r2, r6
 8011ce4:	d202      	bcs.n	8011cec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x178>
 8011ce6:	f842 3b04 	str.w	r3, [r2], #4
 8011cea:	e7fa      	b.n	8011ce2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16e>
 8011cec:	4421      	add	r1, r4
 8011cee:	e7eb      	b.n	8011cc8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x154>
 8011cf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011cf4:	00fff800 	.word	0x00fff800
 8011cf8:	0801e745 	.word	0x0801e745
 8011cfc:	0801ed98 	.word	0x0801ed98
 8011d00:	0801e994 	.word	0x0801e994

08011d04 <_ZN8touchgfx8LCD16bppC1Ev>:
 8011d04:	2200      	movs	r2, #0
 8011d06:	4910      	ldr	r1, [pc, #64]	; (8011d48 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8011d08:	6042      	str	r2, [r0, #4]
 8011d0a:	6001      	str	r1, [r0, #0]
 8011d0c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8011d10:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8011d14:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8011d18:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8011d1c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8011d20:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8011d24:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8011d28:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8011d2c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8011d30:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8011d34:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8011d38:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8011d3c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8011d40:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8011d44:	4770      	bx	lr
 8011d46:	bf00      	nop
 8011d48:	0801ed48 	.word	0x0801ed48

08011d4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8011d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d50:	460d      	mov	r5, r1
 8011d52:	b08d      	sub	sp, #52	; 0x34
 8011d54:	4604      	mov	r4, r0
 8011d56:	6808      	ldr	r0, [r1, #0]
 8011d58:	6849      	ldr	r1, [r1, #4]
 8011d5a:	4699      	mov	r9, r3
 8011d5c:	ab08      	add	r3, sp, #32
 8011d5e:	c303      	stmia	r3!, {r0, r1}
 8011d60:	6810      	ldr	r0, [r2, #0]
 8011d62:	6851      	ldr	r1, [r2, #4]
 8011d64:	ab0a      	add	r3, sp, #40	; 0x28
 8011d66:	c303      	stmia	r3!, {r0, r1}
 8011d68:	a808      	add	r0, sp, #32
 8011d6a:	f7f9 ffad 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011d6e:	4629      	mov	r1, r5
 8011d70:	a80a      	add	r0, sp, #40	; 0x28
 8011d72:	f7f9 ffd1 	bl	800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011d76:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011d7a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8011d7e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8011d82:	4d63      	ldr	r5, [pc, #396]	; (8011f10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8011d84:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8011d88:	6828      	ldr	r0, [r5, #0]
 8011d8a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8011d8e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011d92:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8011d96:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8011d9a:	440a      	add	r2, r1
 8011d9c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011da0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011da4:	4413      	add	r3, r2
 8011da6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011daa:	6803      	ldr	r3, [r0, #0]
 8011dac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011dae:	4798      	blx	r3
 8011db0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011db4:	d119      	bne.n	8011dea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8011db6:	f010 0f20 	tst.w	r0, #32
 8011dba:	6828      	ldr	r0, [r5, #0]
 8011dbc:	d018      	beq.n	8011df0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8011dbe:	2500      	movs	r5, #0
 8011dc0:	6801      	ldr	r1, [r0, #0]
 8011dc2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8011dc6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8011dca:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8011dce:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8011dd2:	9502      	str	r5, [sp, #8]
 8011dd4:	b2b6      	uxth	r6, r6
 8011dd6:	fa1f f588 	uxth.w	r5, r8
 8011dda:	9601      	str	r6, [sp, #4]
 8011ddc:	9500      	str	r5, [sp, #0]
 8011dde:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8011de0:	4621      	mov	r1, r4
 8011de2:	47a8      	blx	r5
 8011de4:	b00d      	add	sp, #52	; 0x34
 8011de6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011dea:	f010 0f40 	tst.w	r0, #64	; 0x40
 8011dee:	e7e4      	b.n	8011dba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8011df0:	6803      	ldr	r3, [r0, #0]
 8011df2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011df4:	4798      	blx	r3
 8011df6:	4947      	ldr	r1, [pc, #284]	; (8011f14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8011df8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8011dfc:	880b      	ldrh	r3, [r1, #0]
 8011dfe:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8011e02:	fb03 5202 	mla	r2, r3, r2, r5
 8011e06:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8011e0a:	4373      	muls	r3, r6
 8011e0c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011e10:	9307      	str	r3, [sp, #28]
 8011e12:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8011e16:	9306      	str	r3, [sp, #24]
 8011e18:	468a      	mov	sl, r1
 8011e1a:	9b07      	ldr	r3, [sp, #28]
 8011e1c:	4298      	cmp	r0, r3
 8011e1e:	d270      	bcs.n	8011f02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8011e20:	9b06      	ldr	r3, [sp, #24]
 8011e22:	4621      	mov	r1, r4
 8011e24:	eb00 0b03 	add.w	fp, r0, r3
 8011e28:	4558      	cmp	r0, fp
 8011e2a:	d25d      	bcs.n	8011ee8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8011e2c:	f851 4b04 	ldr.w	r4, [r1], #4
 8011e30:	0e23      	lsrs	r3, r4, #24
 8011e32:	d014      	beq.n	8011e5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8011e34:	2bff      	cmp	r3, #255	; 0xff
 8011e36:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8011e3a:	d112      	bne.n	8011e62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8011e3c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011e40:	d10f      	bne.n	8011e62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8011e42:	0963      	lsrs	r3, r4, #5
 8011e44:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8011e48:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011e4c:	f02c 0c07 	bic.w	ip, ip, #7
 8011e50:	ea43 0c0c 	orr.w	ip, r3, ip
 8011e54:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011e58:	ea4c 0404 	orr.w	r4, ip, r4
 8011e5c:	8004      	strh	r4, [r0, #0]
 8011e5e:	3002      	adds	r0, #2
 8011e60:	e7e2      	b.n	8011e28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8011e62:	fb09 f303 	mul.w	r3, r9, r3
 8011e66:	8807      	ldrh	r7, [r0, #0]
 8011e68:	1c5a      	adds	r2, r3, #1
 8011e6a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8011e6e:	1212      	asrs	r2, r2, #8
 8011e70:	123e      	asrs	r6, r7, #8
 8011e72:	b293      	uxth	r3, r2
 8011e74:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8011e78:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011e7c:	43d2      	mvns	r2, r2
 8011e7e:	b2d2      	uxtb	r2, r2
 8011e80:	10fd      	asrs	r5, r7, #3
 8011e82:	fb1e fe03 	smulbb	lr, lr, r3
 8011e86:	00ff      	lsls	r7, r7, #3
 8011e88:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8011e8c:	fb06 e602 	mla	r6, r6, r2, lr
 8011e90:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011e94:	b2ff      	uxtb	r7, r7
 8011e96:	fa5f fc8c 	uxtb.w	ip, ip
 8011e9a:	b2e4      	uxtb	r4, r4
 8011e9c:	b2b6      	uxth	r6, r6
 8011e9e:	fb1c fc03 	smulbb	ip, ip, r3
 8011ea2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8011ea6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8011eaa:	fb14 f403 	smulbb	r4, r4, r3
 8011eae:	fb05 c502 	mla	r5, r5, r2, ip
 8011eb2:	f106 0e01 	add.w	lr, r6, #1
 8011eb6:	fb07 4702 	mla	r7, r7, r2, r4
 8011eba:	b2ad      	uxth	r5, r5
 8011ebc:	b2bf      	uxth	r7, r7
 8011ebe:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8011ec2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8011ec6:	f105 0c01 	add.w	ip, r5, #1
 8011eca:	1c7e      	adds	r6, r7, #1
 8011ecc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011ed0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8011ed4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011ed8:	096d      	lsrs	r5, r5, #5
 8011eda:	ea46 060e 	orr.w	r6, r6, lr
 8011ede:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011ee2:	432e      	orrs	r6, r5
 8011ee4:	8006      	strh	r6, [r0, #0]
 8011ee6:	e7ba      	b.n	8011e5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8011ee8:	f8ba 3000 	ldrh.w	r3, [sl]
 8011eec:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8011ef0:	eba3 0308 	sub.w	r3, r3, r8
 8011ef4:	eba4 0408 	sub.w	r4, r4, r8
 8011ef8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011efc:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8011f00:	e78b      	b.n	8011e1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8011f02:	4b03      	ldr	r3, [pc, #12]	; (8011f10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8011f04:	6818      	ldr	r0, [r3, #0]
 8011f06:	6803      	ldr	r3, [r0, #0]
 8011f08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f0a:	4798      	blx	r3
 8011f0c:	e76a      	b.n	8011de4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8011f0e:	bf00      	nop
 8011f10:	2000a4f0 	.word	0x2000a4f0
 8011f14:	2000a4ea 	.word	0x2000a4ea

08011f18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8011f18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011f1c:	460c      	mov	r4, r1
 8011f1e:	b085      	sub	sp, #20
 8011f20:	6810      	ldr	r0, [r2, #0]
 8011f22:	6851      	ldr	r1, [r2, #4]
 8011f24:	466d      	mov	r5, sp
 8011f26:	c503      	stmia	r5!, {r0, r1}
 8011f28:	6818      	ldr	r0, [r3, #0]
 8011f2a:	6859      	ldr	r1, [r3, #4]
 8011f2c:	4616      	mov	r6, r2
 8011f2e:	c503      	stmia	r5!, {r0, r1}
 8011f30:	4668      	mov	r0, sp
 8011f32:	f7f9 fec9 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011f36:	4631      	mov	r1, r6
 8011f38:	a802      	add	r0, sp, #8
 8011f3a:	f7f9 feed 	bl	800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011f3e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8011f42:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8011f46:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8011f4a:	4d28      	ldr	r5, [pc, #160]	; (8011fec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8011f4c:	4e28      	ldr	r6, [pc, #160]	; (8011ff0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8011f4e:	6828      	ldr	r0, [r5, #0]
 8011f50:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011f54:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8011f58:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011f5c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8011f60:	f8bd 1000 	ldrh.w	r1, [sp]
 8011f64:	440a      	add	r2, r1
 8011f66:	f8ad 2008 	strh.w	r2, [sp, #8]
 8011f6a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8011f6e:	4413      	add	r3, r2
 8011f70:	f8ad 300a 	strh.w	r3, [sp, #10]
 8011f74:	6803      	ldr	r3, [r0, #0]
 8011f76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011f78:	4798      	blx	r3
 8011f7a:	8833      	ldrh	r3, [r6, #0]
 8011f7c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8011f80:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8011f84:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8011ff4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8011f88:	fb03 1202 	mla	r2, r3, r2, r1
 8011f8c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8011f90:	fb08 f303 	mul.w	r3, r8, r3
 8011f94:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011f98:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8011f9c:	4298      	cmp	r0, r3
 8011f9e:	d21d      	bcs.n	8011fdc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8011fa0:	eb00 080c 	add.w	r8, r0, ip
 8011fa4:	4540      	cmp	r0, r8
 8011fa6:	d20f      	bcs.n	8011fc8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8011fa8:	f854 1b04 	ldr.w	r1, [r4], #4
 8011fac:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8011fb0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8011fb4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8011fb8:	ea42 0209 	orr.w	r2, r2, r9
 8011fbc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011fc0:	430a      	orrs	r2, r1
 8011fc2:	f820 2b02 	strh.w	r2, [r0], #2
 8011fc6:	e7ed      	b.n	8011fa4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8011fc8:	8832      	ldrh	r2, [r6, #0]
 8011fca:	1bd2      	subs	r2, r2, r7
 8011fcc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8011fd0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8011fd4:	1bd2      	subs	r2, r2, r7
 8011fd6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8011fda:	e7df      	b.n	8011f9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8011fdc:	6828      	ldr	r0, [r5, #0]
 8011fde:	6803      	ldr	r3, [r0, #0]
 8011fe0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fe2:	4798      	blx	r3
 8011fe4:	b005      	add	sp, #20
 8011fe6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011fea:	bf00      	nop
 8011fec:	2000a4f0 	.word	0x2000a4f0
 8011ff0:	2000a4ea 	.word	0x2000a4ea
 8011ff4:	fffff800 	.word	0xfffff800

08011ff8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8011ff8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011ffc:	460e      	mov	r6, r1
 8011ffe:	b08e      	sub	sp, #56	; 0x38
 8012000:	4604      	mov	r4, r0
 8012002:	6808      	ldr	r0, [r1, #0]
 8012004:	6849      	ldr	r1, [r1, #4]
 8012006:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80121e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801200a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 80121e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801200e:	461d      	mov	r5, r3
 8012010:	ab0a      	add	r3, sp, #40	; 0x28
 8012012:	c303      	stmia	r3!, {r0, r1}
 8012014:	6810      	ldr	r0, [r2, #0]
 8012016:	6851      	ldr	r1, [r2, #4]
 8012018:	ab0c      	add	r3, sp, #48	; 0x30
 801201a:	c303      	stmia	r3!, {r0, r1}
 801201c:	a80a      	add	r0, sp, #40	; 0x28
 801201e:	f7f9 fe53 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012022:	4631      	mov	r1, r6
 8012024:	a80c      	add	r0, sp, #48	; 0x30
 8012026:	f7f9 fe77 	bl	800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801202a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801202e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012032:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8012036:	f8d8 0000 	ldr.w	r0, [r8]
 801203a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801203e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8012042:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012046:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801204a:	440c      	add	r4, r1
 801204c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8012050:	440a      	add	r2, r1
 8012052:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8012056:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801205a:	4413      	add	r3, r2
 801205c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012060:	6803      	ldr	r3, [r0, #0]
 8012062:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012064:	4798      	blx	r3
 8012066:	2dff      	cmp	r5, #255	; 0xff
 8012068:	d124      	bne.n	80120b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801206a:	f010 0f01 	tst.w	r0, #1
 801206e:	f8d8 0000 	ldr.w	r0, [r8]
 8012072:	d022      	beq.n	80120ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8012074:	2100      	movs	r1, #0
 8012076:	f8d0 c000 	ldr.w	ip, [r0]
 801207a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801207e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8012082:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8012086:	f04f 0e01 	mov.w	lr, #1
 801208a:	f8cd e018 	str.w	lr, [sp, #24]
 801208e:	f8b9 e000 	ldrh.w	lr, [r9]
 8012092:	9503      	str	r5, [sp, #12]
 8012094:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8012098:	b2b6      	uxth	r6, r6
 801209a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801209e:	9102      	str	r1, [sp, #8]
 80120a0:	b2bf      	uxth	r7, r7
 80120a2:	9601      	str	r6, [sp, #4]
 80120a4:	9700      	str	r7, [sp, #0]
 80120a6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80120aa:	4621      	mov	r1, r4
 80120ac:	47a8      	blx	r5
 80120ae:	b00e      	add	sp, #56	; 0x38
 80120b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80120b4:	f010 0f04 	tst.w	r0, #4
 80120b8:	e7d9      	b.n	801206e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80120ba:	6803      	ldr	r3, [r0, #0]
 80120bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80120be:	4798      	blx	r3
 80120c0:	f8b9 3000 	ldrh.w	r3, [r9]
 80120c4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80120c8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 80120cc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80120d0:	fb03 1202 	mla	r2, r3, r2, r1
 80120d4:	ebac 0c07 	sub.w	ip, ip, r7
 80120d8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80120dc:	435e      	muls	r6, r3
 80120de:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80120e2:	2dff      	cmp	r5, #255	; 0xff
 80120e4:	eba3 0707 	sub.w	r7, r3, r7
 80120e8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80120ec:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80120f0:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80120f4:	d049      	beq.n	801218a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80120f6:	43eb      	mvns	r3, r5
 80120f8:	fa1f f985 	uxth.w	r9, r5
 80120fc:	b2db      	uxtb	r3, r3
 80120fe:	42b0      	cmp	r0, r6
 8012100:	d266      	bcs.n	80121d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8012102:	eb00 0a0e 	add.w	sl, r0, lr
 8012106:	4550      	cmp	r0, sl
 8012108:	4621      	mov	r1, r4
 801210a:	f104 0403 	add.w	r4, r4, #3
 801210e:	d25b      	bcs.n	80121c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8012110:	8802      	ldrh	r2, [r0, #0]
 8012112:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8012116:	ea4f 2822 	mov.w	r8, r2, asr #8
 801211a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801211e:	fb11 f109 	smulbb	r1, r1, r9
 8012122:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8012126:	10d5      	asrs	r5, r2, #3
 8012128:	fb08 1803 	mla	r8, r8, r3, r1
 801212c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8012130:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012134:	fb11 f109 	smulbb	r1, r1, r9
 8012138:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801213c:	fb05 1503 	mla	r5, r5, r3, r1
 8012140:	00d2      	lsls	r2, r2, #3
 8012142:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8012146:	b2d2      	uxtb	r2, r2
 8012148:	fb11 f109 	smulbb	r1, r1, r9
 801214c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012150:	fa1f f888 	uxth.w	r8, r8
 8012154:	fb02 1203 	mla	r2, r2, r3, r1
 8012158:	b292      	uxth	r2, r2
 801215a:	f108 0101 	add.w	r1, r8, #1
 801215e:	b2ad      	uxth	r5, r5
 8012160:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8012164:	1c51      	adds	r1, r2, #1
 8012166:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801216a:	1c69      	adds	r1, r5, #1
 801216c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8012170:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8012174:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012178:	096d      	lsrs	r5, r5, #5
 801217a:	ea42 0208 	orr.w	r2, r2, r8
 801217e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012182:	432a      	orrs	r2, r5
 8012184:	f820 2b02 	strh.w	r2, [r0], #2
 8012188:	e7bd      	b.n	8012106 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801218a:	4a14      	ldr	r2, [pc, #80]	; (80121dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801218c:	42b0      	cmp	r0, r6
 801218e:	d21f      	bcs.n	80121d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8012190:	eb00 050e 	add.w	r5, r0, lr
 8012194:	42a8      	cmp	r0, r5
 8012196:	4621      	mov	r1, r4
 8012198:	f104 0403 	add.w	r4, r4, #3
 801219c:	d210      	bcs.n	80121c0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801219e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80121a2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80121a6:	00db      	lsls	r3, r3, #3
 80121a8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80121ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80121b0:	430b      	orrs	r3, r1
 80121b2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80121b6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80121ba:	f820 3b02 	strh.w	r3, [r0], #2
 80121be:	e7e9      	b.n	8012194 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80121c0:	4438      	add	r0, r7
 80121c2:	eb01 040c 	add.w	r4, r1, ip
 80121c6:	e7e1      	b.n	801218c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80121c8:	4438      	add	r0, r7
 80121ca:	eb01 040c 	add.w	r4, r1, ip
 80121ce:	e796      	b.n	80120fe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80121d0:	4b03      	ldr	r3, [pc, #12]	; (80121e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80121d2:	6818      	ldr	r0, [r3, #0]
 80121d4:	6803      	ldr	r3, [r0, #0]
 80121d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80121d8:	4798      	blx	r3
 80121da:	e768      	b.n	80120ae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80121dc:	fffff800 	.word	0xfffff800
 80121e0:	2000a4f0 	.word	0x2000a4f0
 80121e4:	2000a4ea 	.word	0x2000a4ea

080121e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80121e8:	b570      	push	{r4, r5, r6, lr}
 80121ea:	9c04      	ldr	r4, [sp, #16]
 80121ec:	f89d 6018 	ldrb.w	r6, [sp, #24]
 80121f0:	4605      	mov	r5, r0
 80121f2:	4608      	mov	r0, r1
 80121f4:	4619      	mov	r1, r3
 80121f6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80121fa:	2a0d      	cmp	r2, #13
 80121fc:	d825      	bhi.n	801224a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x62>
 80121fe:	e8df f002 	tbb	[pc, r2]
 8012202:	1807      	.short	0x1807
 8012204:	1d1d1d13 	.word	0x1d1d1d13
 8012208:	1d1d1d1d 	.word	0x1d1d1d1d
 801220c:	1d1d1d1d 	.word	0x1d1d1d1d
 8012210:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8012214:	682a      	ldr	r2, [r5, #0]
 8012216:	68d6      	ldr	r6, [r2, #12]
 8012218:	4623      	mov	r3, r4
 801221a:	460a      	mov	r2, r1
 801221c:	46b4      	mov	ip, r6
 801221e:	4601      	mov	r1, r0
 8012220:	4628      	mov	r0, r5
 8012222:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012226:	4760      	bx	ip
 8012228:	4622      	mov	r2, r4
 801222a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801222e:	f7ff bd8d 	b.w	8011d4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012232:	4622      	mov	r2, r4
 8012234:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012238:	f7ff bede 	b.w	8011ff8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801223c:	4b03      	ldr	r3, [pc, #12]	; (801224c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x64>)
 801223e:	4a04      	ldr	r2, [pc, #16]	; (8012250 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x68>)
 8012240:	4804      	ldr	r0, [pc, #16]	; (8012254 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x6c>)
 8012242:	f240 3159 	movw	r1, #857	; 0x359
 8012246:	f008 fd27 	bl	801ac98 <__assert_func>
 801224a:	bd70      	pop	{r4, r5, r6, pc}
 801224c:	0801ea59 	.word	0x0801ea59
 8012250:	0801f265 	.word	0x0801f265
 8012254:	0801e994 	.word	0x0801e994

08012258 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8012258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801225c:	b093      	sub	sp, #76	; 0x4c
 801225e:	880e      	ldrh	r6, [r1, #0]
 8012260:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012264:	4681      	mov	r9, r0
 8012266:	4688      	mov	r8, r1
 8012268:	4615      	mov	r5, r2
 801226a:	b136      	cbz	r6, 801227a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 801226c:	4b70      	ldr	r3, [pc, #448]	; (8012430 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801226e:	4a71      	ldr	r2, [pc, #452]	; (8012434 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8012270:	4871      	ldr	r0, [pc, #452]	; (8012438 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8012272:	f44f 71c3 	mov.w	r1, #390	; 0x186
 8012276:	f008 fd0f 	bl	801ac98 <__assert_func>
 801227a:	6810      	ldr	r0, [r2, #0]
 801227c:	6851      	ldr	r1, [r2, #4]
 801227e:	4f6f      	ldr	r7, [pc, #444]	; (801243c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012280:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8012440 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8012284:	ac0e      	add	r4, sp, #56	; 0x38
 8012286:	c403      	stmia	r4!, {r0, r1}
 8012288:	6818      	ldr	r0, [r3, #0]
 801228a:	6859      	ldr	r1, [r3, #4]
 801228c:	ac10      	add	r4, sp, #64	; 0x40
 801228e:	c403      	stmia	r4!, {r0, r1}
 8012290:	a80e      	add	r0, sp, #56	; 0x38
 8012292:	f7f9 fd19 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012296:	4629      	mov	r1, r5
 8012298:	a810      	add	r0, sp, #64	; 0x40
 801229a:	f7f9 fd3d 	bl	800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801229e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80122a2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80122a6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80122aa:	6838      	ldr	r0, [r7, #0]
 80122ac:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80122b0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80122b4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80122b8:	4489      	add	r9, r1
 80122ba:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80122be:	440a      	add	r2, r1
 80122c0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80122c4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80122c8:	4413      	add	r3, r2
 80122ca:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80122ce:	6803      	ldr	r3, [r0, #0]
 80122d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80122d2:	4798      	blx	r3
 80122d4:	f010 0f80 	tst.w	r0, #128	; 0x80
 80122d8:	6838      	ldr	r0, [r7, #0]
 80122da:	d01d      	beq.n	8012318 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xc0>
 80122dc:	6802      	ldr	r2, [r0, #0]
 80122de:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80122e2:	e9cd 6608 	strd	r6, r6, [sp, #32]
 80122e6:	210b      	movs	r1, #11
 80122e8:	9107      	str	r1, [sp, #28]
 80122ea:	f8bb 1000 	ldrh.w	r1, [fp]
 80122ee:	9106      	str	r1, [sp, #24]
 80122f0:	2101      	movs	r1, #1
 80122f2:	e9cd a104 	strd	sl, r1, [sp, #16]
 80122f6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80122fa:	9103      	str	r1, [sp, #12]
 80122fc:	b2a4      	uxth	r4, r4
 80122fe:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 8012302:	9100      	str	r1, [sp, #0]
 8012304:	b2ad      	uxth	r5, r5
 8012306:	9502      	str	r5, [sp, #8]
 8012308:	9401      	str	r4, [sp, #4]
 801230a:	6bd4      	ldr	r4, [r2, #60]	; 0x3c
 801230c:	4649      	mov	r1, r9
 801230e:	4642      	mov	r2, r8
 8012310:	47a0      	blx	r4
 8012312:	b013      	add	sp, #76	; 0x4c
 8012314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012318:	6803      	ldr	r3, [r0, #0]
 801231a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801231c:	4798      	blx	r3
 801231e:	f8bb 3000 	ldrh.w	r3, [fp]
 8012322:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8012326:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801232a:	fb03 1202 	mla	r2, r3, r2, r1
 801232e:	435d      	muls	r5, r3
 8012330:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012334:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8012338:	920c      	str	r2, [sp, #48]	; 0x30
 801233a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801233e:	1b12      	subs	r2, r2, r4
 8012340:	920d      	str	r2, [sp, #52]	; 0x34
 8012342:	0062      	lsls	r2, r4, #1
 8012344:	1b1c      	subs	r4, r3, r4
 8012346:	0063      	lsls	r3, r4, #1
 8012348:	920a      	str	r2, [sp, #40]	; 0x28
 801234a:	930b      	str	r3, [sp, #44]	; 0x2c
 801234c:	f04f 0e04 	mov.w	lr, #4
 8012350:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012352:	4298      	cmp	r0, r3
 8012354:	d266      	bcs.n	8012424 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1cc>
 8012356:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012358:	eb00 0b03 	add.w	fp, r0, r3
 801235c:	4558      	cmp	r0, fp
 801235e:	d25c      	bcs.n	801241a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c2>
 8012360:	f819 3b01 	ldrb.w	r3, [r9], #1
 8012364:	fb1e e303 	smlabb	r3, lr, r3, lr
 8012368:	f858 2003 	ldr.w	r2, [r8, r3]
 801236c:	0e11      	lsrs	r1, r2, #24
 801236e:	d012      	beq.n	8012396 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 8012370:	29ff      	cmp	r1, #255	; 0xff
 8012372:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8012376:	d110      	bne.n	801239a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 8012378:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801237c:	d10d      	bne.n	801239a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x142>
 801237e:	0953      	lsrs	r3, r2, #5
 8012380:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8012384:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012388:	f027 0707 	bic.w	r7, r7, #7
 801238c:	431f      	orrs	r7, r3
 801238e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012392:	433a      	orrs	r2, r7
 8012394:	8002      	strh	r2, [r0, #0]
 8012396:	3002      	adds	r0, #2
 8012398:	e7e0      	b.n	801235c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x104>
 801239a:	fb0a f101 	mul.w	r1, sl, r1
 801239e:	8806      	ldrh	r6, [r0, #0]
 80123a0:	1c4b      	adds	r3, r1, #1
 80123a2:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80123a6:	1235      	asrs	r5, r6, #8
 80123a8:	10f4      	asrs	r4, r6, #3
 80123aa:	121b      	asrs	r3, r3, #8
 80123ac:	00f6      	lsls	r6, r6, #3
 80123ae:	b299      	uxth	r1, r3
 80123b0:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80123b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80123b8:	b2f6      	uxtb	r6, r6
 80123ba:	43db      	mvns	r3, r3
 80123bc:	b2d2      	uxtb	r2, r2
 80123be:	b2db      	uxtb	r3, r3
 80123c0:	fb1c fc01 	smulbb	ip, ip, r1
 80123c4:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80123c8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80123cc:	fb12 f201 	smulbb	r2, r2, r1
 80123d0:	fb05 c503 	mla	r5, r5, r3, ip
 80123d4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80123d8:	b2ff      	uxtb	r7, r7
 80123da:	fb06 2203 	mla	r2, r6, r3, r2
 80123de:	b2ad      	uxth	r5, r5
 80123e0:	fb17 f701 	smulbb	r7, r7, r1
 80123e4:	b292      	uxth	r2, r2
 80123e6:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80123ea:	fb04 7403 	mla	r4, r4, r3, r7
 80123ee:	f105 0c01 	add.w	ip, r5, #1
 80123f2:	1c57      	adds	r7, r2, #1
 80123f4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80123f8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80123fc:	b2a4      	uxth	r4, r4
 80123fe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8012402:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8012406:	433d      	orrs	r5, r7
 8012408:	1c67      	adds	r7, r4, #1
 801240a:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801240e:	0964      	lsrs	r4, r4, #5
 8012410:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8012414:	4325      	orrs	r5, r4
 8012416:	8005      	strh	r5, [r0, #0]
 8012418:	e7bd      	b.n	8012396 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13e>
 801241a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801241c:	4418      	add	r0, r3
 801241e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012420:	4499      	add	r9, r3
 8012422:	e795      	b.n	8012350 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf8>
 8012424:	4b05      	ldr	r3, [pc, #20]	; (801243c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012426:	6818      	ldr	r0, [r3, #0]
 8012428:	6803      	ldr	r3, [r0, #0]
 801242a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801242c:	4798      	blx	r3
 801242e:	e770      	b.n	8012312 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xba>
 8012430:	0801e844 	.word	0x0801e844
 8012434:	0801efa3 	.word	0x0801efa3
 8012438:	0801e994 	.word	0x0801e994
 801243c:	2000a4f0 	.word	0x2000a4f0
 8012440:	2000a4ea 	.word	0x2000a4ea

08012444 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8012444:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012448:	4614      	mov	r4, r2
 801244a:	880a      	ldrh	r2, [r1, #0]
 801244c:	b087      	sub	sp, #28
 801244e:	2a02      	cmp	r2, #2
 8012450:	4680      	mov	r8, r0
 8012452:	460d      	mov	r5, r1
 8012454:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8012458:	d006      	beq.n	8012468 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 801245a:	4b63      	ldr	r3, [pc, #396]	; (80125e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 801245c:	4a63      	ldr	r2, [pc, #396]	; (80125ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 801245e:	4864      	ldr	r0, [pc, #400]	; (80125f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8012460:	f240 11dd 	movw	r1, #477	; 0x1dd
 8012464:	f008 fc18 	bl	801ac98 <__assert_func>
 8012468:	2e00      	cmp	r6, #0
 801246a:	f000 80b9 	beq.w	80125e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 801246e:	6820      	ldr	r0, [r4, #0]
 8012470:	6861      	ldr	r1, [r4, #4]
 8012472:	af02      	add	r7, sp, #8
 8012474:	c703      	stmia	r7!, {r0, r1}
 8012476:	6818      	ldr	r0, [r3, #0]
 8012478:	6859      	ldr	r1, [r3, #4]
 801247a:	af04      	add	r7, sp, #16
 801247c:	c703      	stmia	r7!, {r0, r1}
 801247e:	a802      	add	r0, sp, #8
 8012480:	f7f9 fc22 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012484:	4621      	mov	r1, r4
 8012486:	a804      	add	r0, sp, #16
 8012488:	f7f9 fc46 	bl	800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801248c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8012490:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012494:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8012498:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801249c:	fb14 2103 	smlabb	r1, r4, r3, r2
 80124a0:	eb08 0401 	add.w	r4, r8, r1
 80124a4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80124a8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80124ac:	440a      	add	r2, r1
 80124ae:	f8ad 2010 	strh.w	r2, [sp, #16]
 80124b2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80124b6:	4413      	add	r3, r2
 80124b8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80124bc:	4b4d      	ldr	r3, [pc, #308]	; (80125f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80124be:	6818      	ldr	r0, [r3, #0]
 80124c0:	6803      	ldr	r3, [r0, #0]
 80124c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80124c4:	4798      	blx	r3
 80124c6:	4b4c      	ldr	r3, [pc, #304]	; (80125f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 80124c8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80124cc:	881a      	ldrh	r2, [r3, #0]
 80124ce:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80124d2:	2eff      	cmp	r6, #255	; 0xff
 80124d4:	fb02 c101 	mla	r1, r2, r1, ip
 80124d8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80124dc:	fb02 f207 	mul.w	r2, r2, r7
 80124e0:	f105 0104 	add.w	r1, r5, #4
 80124e4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80124e8:	461d      	mov	r5, r3
 80124ea:	d05a      	beq.n	80125a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 80124ec:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80124f0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80124f4:	b2b6      	uxth	r6, r6
 80124f6:	fa1f fe8e 	uxth.w	lr, lr
 80124fa:	9301      	str	r3, [sp, #4]
 80124fc:	4282      	cmp	r2, r0
 80124fe:	d96a      	bls.n	80125d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8012500:	eb00 0b0a 	add.w	fp, r0, sl
 8012504:	4583      	cmp	fp, r0
 8012506:	d940      	bls.n	801258a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 8012508:	f814 3b01 	ldrb.w	r3, [r4], #1
 801250c:	8805      	ldrh	r5, [r0, #0]
 801250e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8012512:	122f      	asrs	r7, r5, #8
 8012514:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012518:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801251c:	fb17 f70e 	smulbb	r7, r7, lr
 8012520:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012524:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012528:	00ed      	lsls	r5, r5, #3
 801252a:	fb0c 7c06 	mla	ip, ip, r6, r7
 801252e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012532:	10df      	asrs	r7, r3, #3
 8012534:	b2ed      	uxtb	r5, r5
 8012536:	00db      	lsls	r3, r3, #3
 8012538:	fa1f fc8c 	uxth.w	ip, ip
 801253c:	fb19 f90e 	smulbb	r9, r9, lr
 8012540:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012544:	b2db      	uxtb	r3, r3
 8012546:	fb15 f50e 	smulbb	r5, r5, lr
 801254a:	fb07 9706 	mla	r7, r7, r6, r9
 801254e:	fb03 5306 	mla	r3, r3, r6, r5
 8012552:	f10c 0901 	add.w	r9, ip, #1
 8012556:	b29b      	uxth	r3, r3
 8012558:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801255c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8012560:	f103 0c01 	add.w	ip, r3, #1
 8012564:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012568:	b2bf      	uxth	r7, r7
 801256a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801256e:	ea4c 0c09 	orr.w	ip, ip, r9
 8012572:	f107 0901 	add.w	r9, r7, #1
 8012576:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801257a:	097f      	lsrs	r7, r7, #5
 801257c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012580:	ea4c 0c07 	orr.w	ip, ip, r7
 8012584:	f820 cb02 	strh.w	ip, [r0], #2
 8012588:	e7bc      	b.n	8012504 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801258a:	9b01      	ldr	r3, [sp, #4]
 801258c:	881b      	ldrh	r3, [r3, #0]
 801258e:	eba3 0308 	sub.w	r3, r3, r8
 8012592:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012596:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801259a:	eba3 0308 	sub.w	r3, r3, r8
 801259e:	441c      	add	r4, r3
 80125a0:	e7ac      	b.n	80124fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 80125a2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80125a6:	4282      	cmp	r2, r0
 80125a8:	d915      	bls.n	80125d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 80125aa:	eb00 060a 	add.w	r6, r0, sl
 80125ae:	4286      	cmp	r6, r0
 80125b0:	d906      	bls.n	80125c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 80125b2:	f814 3b01 	ldrb.w	r3, [r4], #1
 80125b6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80125ba:	f820 3b02 	strh.w	r3, [r0], #2
 80125be:	e7f6      	b.n	80125ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 80125c0:	882b      	ldrh	r3, [r5, #0]
 80125c2:	eba3 0308 	sub.w	r3, r3, r8
 80125c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80125ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80125ce:	eba3 0308 	sub.w	r3, r3, r8
 80125d2:	441c      	add	r4, r3
 80125d4:	e7e7      	b.n	80125a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 80125d6:	4b07      	ldr	r3, [pc, #28]	; (80125f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 80125d8:	6818      	ldr	r0, [r3, #0]
 80125da:	6803      	ldr	r3, [r0, #0]
 80125dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80125de:	4798      	blx	r3
 80125e0:	b007      	add	sp, #28
 80125e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125e6:	bf00      	nop
 80125e8:	0801e774 	.word	0x0801e774
 80125ec:	0801ee0d 	.word	0x0801ee0d
 80125f0:	0801e994 	.word	0x0801e994
 80125f4:	2000a4f0 	.word	0x2000a4f0
 80125f8:	2000a4ea 	.word	0x2000a4ea

080125fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80125fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012600:	f8b1 9000 	ldrh.w	r9, [r1]
 8012604:	b091      	sub	sp, #68	; 0x44
 8012606:	f1b9 0f01 	cmp.w	r9, #1
 801260a:	4604      	mov	r4, r0
 801260c:	460f      	mov	r7, r1
 801260e:	4690      	mov	r8, r2
 8012610:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8012614:	d006      	beq.n	8012624 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 8012616:	4b84      	ldr	r3, [pc, #528]	; (8012828 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 8012618:	4a84      	ldr	r2, [pc, #528]	; (801282c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 801261a:	4885      	ldr	r0, [pc, #532]	; (8012830 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 801261c:	f240 212b 	movw	r1, #555	; 0x22b
 8012620:	f008 fb3a 	bl	801ac98 <__assert_func>
 8012624:	2d00      	cmp	r5, #0
 8012626:	d04f      	beq.n	80126c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8012628:	6810      	ldr	r0, [r2, #0]
 801262a:	6851      	ldr	r1, [r2, #4]
 801262c:	f8df b208 	ldr.w	fp, [pc, #520]	; 8012838 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8012630:	ae0c      	add	r6, sp, #48	; 0x30
 8012632:	c603      	stmia	r6!, {r0, r1}
 8012634:	6818      	ldr	r0, [r3, #0]
 8012636:	6859      	ldr	r1, [r3, #4]
 8012638:	ae0e      	add	r6, sp, #56	; 0x38
 801263a:	c603      	stmia	r6!, {r0, r1}
 801263c:	a80c      	add	r0, sp, #48	; 0x30
 801263e:	f7f9 fb43 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012642:	4641      	mov	r1, r8
 8012644:	a80e      	add	r0, sp, #56	; 0x38
 8012646:	f7f9 fb67 	bl	800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801264a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801264e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8012652:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8012656:	f8db 0000 	ldr.w	r0, [fp]
 801265a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801265e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8012662:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801283c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 8012666:	fb11 2103 	smlabb	r1, r1, r3, r2
 801266a:	440c      	add	r4, r1
 801266c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8012670:	440a      	add	r2, r1
 8012672:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8012676:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801267a:	4413      	add	r3, r2
 801267c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8012680:	6803      	ldr	r3, [r0, #0]
 8012682:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012684:	4798      	blx	r3
 8012686:	f010 0f80 	tst.w	r0, #128	; 0x80
 801268a:	f8db 0000 	ldr.w	r0, [fp]
 801268e:	d01e      	beq.n	80126ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8012690:	2200      	movs	r2, #0
 8012692:	6801      	ldr	r1, [r0, #0]
 8012694:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012698:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801269c:	220b      	movs	r2, #11
 801269e:	9207      	str	r2, [sp, #28]
 80126a0:	f8b8 2000 	ldrh.w	r2, [r8]
 80126a4:	9504      	str	r5, [sp, #16]
 80126a6:	e9cd 9205 	strd	r9, r2, [sp, #20]
 80126aa:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80126ae:	9203      	str	r2, [sp, #12]
 80126b0:	fa1f f28a 	uxth.w	r2, sl
 80126b4:	9202      	str	r2, [sp, #8]
 80126b6:	b2b6      	uxth	r6, r6
 80126b8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80126bc:	9200      	str	r2, [sp, #0]
 80126be:	9601      	str	r6, [sp, #4]
 80126c0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80126c2:	463a      	mov	r2, r7
 80126c4:	4621      	mov	r1, r4
 80126c6:	47a8      	blx	r5
 80126c8:	b011      	add	sp, #68	; 0x44
 80126ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80126ce:	6803      	ldr	r3, [r0, #0]
 80126d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80126d2:	4798      	blx	r3
 80126d4:	f8b8 2000 	ldrh.w	r2, [r8]
 80126d8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80126dc:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80126e0:	2dff      	cmp	r5, #255	; 0xff
 80126e2:	fb02 1303 	mla	r3, r2, r3, r1
 80126e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80126ea:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80126ee:	fb0a fa02 	mul.w	sl, sl, r2
 80126f2:	d062      	beq.n	80127ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 80126f4:	ea6f 0c05 	mvn.w	ip, r5
 80126f8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80126fc:	930a      	str	r3, [sp, #40]	; 0x28
 80126fe:	b2ad      	uxth	r5, r5
 8012700:	fa5f fc8c 	uxtb.w	ip, ip
 8012704:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8012708:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801270a:	4298      	cmp	r0, r3
 801270c:	f080 8085 	bcs.w	801281a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8012710:	eb00 0b09 	add.w	fp, r0, r9
 8012714:	4558      	cmp	r0, fp
 8012716:	d246      	bcs.n	80127a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8012718:	f814 eb01 	ldrb.w	lr, [r4], #1
 801271c:	2303      	movs	r3, #3
 801271e:	2204      	movs	r2, #4
 8012720:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8012724:	eb07 0a0e 	add.w	sl, r7, lr
 8012728:	8803      	ldrh	r3, [r0, #0]
 801272a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801272e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8012732:	1219      	asrs	r1, r3, #8
 8012734:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012738:	fb18 f805 	smulbb	r8, r8, r5
 801273c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8012740:	10da      	asrs	r2, r3, #3
 8012742:	fb01 810c 	mla	r1, r1, ip, r8
 8012746:	00db      	lsls	r3, r3, #3
 8012748:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801274c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8012750:	b2db      	uxtb	r3, r3
 8012752:	fb18 f805 	smulbb	r8, r8, r5
 8012756:	fb1e fe05 	smulbb	lr, lr, r5
 801275a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801275e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8012762:	b289      	uxth	r1, r1
 8012764:	fb02 820c 	mla	r2, r2, ip, r8
 8012768:	fb03 e30c 	mla	r3, r3, ip, lr
 801276c:	b292      	uxth	r2, r2
 801276e:	b29b      	uxth	r3, r3
 8012770:	f101 0801 	add.w	r8, r1, #1
 8012774:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8012778:	f103 0e01 	add.w	lr, r3, #1
 801277c:	f102 0801 	add.w	r8, r2, #1
 8012780:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8012784:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8012788:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801278c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8012790:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012794:	ea4e 0101 	orr.w	r1, lr, r1
 8012798:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801279c:	ea41 0108 	orr.w	r1, r1, r8
 80127a0:	f820 1b02 	strh.w	r1, [r0], #2
 80127a4:	e7b6      	b.n	8012714 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 80127a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80127a8:	881b      	ldrh	r3, [r3, #0]
 80127aa:	1b9b      	subs	r3, r3, r6
 80127ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80127b0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80127b4:	1b9b      	subs	r3, r3, r6
 80127b6:	441c      	add	r4, r3
 80127b8:	e7a6      	b.n	8012708 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 80127ba:	491e      	ldr	r1, [pc, #120]	; (8012834 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 80127bc:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80127c0:	2203      	movs	r2, #3
 80127c2:	2504      	movs	r5, #4
 80127c4:	4550      	cmp	r0, sl
 80127c6:	d228      	bcs.n	801281a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 80127c8:	eb00 0c09 	add.w	ip, r0, r9
 80127cc:	4560      	cmp	r0, ip
 80127ce:	4623      	mov	r3, r4
 80127d0:	d219      	bcs.n	8012806 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80127d2:	f893 e000 	ldrb.w	lr, [r3]
 80127d6:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80127da:	eb07 0b0e 	add.w	fp, r7, lr
 80127de:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80127e2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80127e6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80127ea:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80127ee:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80127f2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80127f6:	ea43 030b 	orr.w	r3, r3, fp
 80127fa:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80127fe:	3401      	adds	r4, #1
 8012800:	f820 3b02 	strh.w	r3, [r0], #2
 8012804:	e7e2      	b.n	80127cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 8012806:	f8b8 3000 	ldrh.w	r3, [r8]
 801280a:	1b9b      	subs	r3, r3, r6
 801280c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012810:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8012814:	1b9b      	subs	r3, r3, r6
 8012816:	441c      	add	r4, r3
 8012818:	e7d4      	b.n	80127c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801281a:	4b07      	ldr	r3, [pc, #28]	; (8012838 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 801281c:	6818      	ldr	r0, [r3, #0]
 801281e:	6803      	ldr	r3, [r0, #0]
 8012820:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012822:	4798      	blx	r3
 8012824:	e750      	b.n	80126c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8012826:	bf00      	nop
 8012828:	0801e7c2 	.word	0x0801e7c2
 801282c:	0801ee96 	.word	0x0801ee96
 8012830:	0801e994 	.word	0x0801e994
 8012834:	fffff800 	.word	0xfffff800
 8012838:	2000a4f0 	.word	0x2000a4f0
 801283c:	2000a4ea 	.word	0x2000a4ea

08012840 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8012840:	b430      	push	{r4, r5}
 8012842:	780d      	ldrb	r5, [r1, #0]
 8012844:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8012848:	2d01      	cmp	r5, #1
 801284a:	d00a      	beq.n	8012862 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801284c:	d305      	bcc.n	801285a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801284e:	2d02      	cmp	r5, #2
 8012850:	d10b      	bne.n	801286a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8012852:	9402      	str	r4, [sp, #8]
 8012854:	bc30      	pop	{r4, r5}
 8012856:	f7ff bdf5 	b.w	8012444 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801285a:	9402      	str	r4, [sp, #8]
 801285c:	bc30      	pop	{r4, r5}
 801285e:	f7ff bcfb 	b.w	8012258 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8012862:	9402      	str	r4, [sp, #8]
 8012864:	bc30      	pop	{r4, r5}
 8012866:	f7ff bec9 	b.w	80125fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801286a:	bc30      	pop	{r4, r5}
 801286c:	4770      	bx	lr
	...

08012870 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8012870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012874:	4604      	mov	r4, r0
 8012876:	b087      	sub	sp, #28
 8012878:	6810      	ldr	r0, [r2, #0]
 801287a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801287e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8012ab8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8012882:	460e      	mov	r6, r1
 8012884:	6851      	ldr	r1, [r2, #4]
 8012886:	ad02      	add	r5, sp, #8
 8012888:	c503      	stmia	r5!, {r0, r1}
 801288a:	6818      	ldr	r0, [r3, #0]
 801288c:	6859      	ldr	r1, [r3, #4]
 801288e:	ad04      	add	r5, sp, #16
 8012890:	4617      	mov	r7, r2
 8012892:	c503      	stmia	r5!, {r0, r1}
 8012894:	a802      	add	r0, sp, #8
 8012896:	f7f9 fa17 	bl	800bcc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801289a:	4639      	mov	r1, r7
 801289c:	a804      	add	r0, sp, #16
 801289e:	f7f9 fa3b 	bl	800bd18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80128a2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80128a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80128aa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80128ae:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80128b2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80128b6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80128ba:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80128be:	440e      	add	r6, r1
 80128c0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80128c4:	440a      	add	r2, r1
 80128c6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80128ca:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80128ce:	4413      	add	r3, r2
 80128d0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80128d4:	4b77      	ldr	r3, [pc, #476]	; (8012ab4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80128d6:	6818      	ldr	r0, [r3, #0]
 80128d8:	6803      	ldr	r3, [r0, #0]
 80128da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80128dc:	4798      	blx	r3
 80128de:	f8b9 b000 	ldrh.w	fp, [r9]
 80128e2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80128e6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80128ea:	fb0b 2303 	mla	r3, fp, r3, r2
 80128ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80128f2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80128f6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80128fa:	fb05 f50b 	mul.w	r5, r5, fp
 80128fe:	9300      	str	r3, [sp, #0]
 8012900:	d069      	beq.n	80129d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8012902:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8012906:	4558      	cmp	r0, fp
 8012908:	f080 80cc 	bcs.w	8012aa4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801290c:	9b00      	ldr	r3, [sp, #0]
 801290e:	18c3      	adds	r3, r0, r3
 8012910:	9301      	str	r3, [sp, #4]
 8012912:	4631      	mov	r1, r6
 8012914:	9b01      	ldr	r3, [sp, #4]
 8012916:	4298      	cmp	r0, r3
 8012918:	d24f      	bcs.n	80129ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801291a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801291e:	2a00      	cmp	r2, #0
 8012920:	d048      	beq.n	80129b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8012922:	fb0a f202 	mul.w	r2, sl, r2
 8012926:	1c53      	adds	r3, r2, #1
 8012928:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801292c:	121b      	asrs	r3, r3, #8
 801292e:	d041      	beq.n	80129b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8012930:	8802      	ldrh	r2, [r0, #0]
 8012932:	f8b4 c000 	ldrh.w	ip, [r4]
 8012936:	b29e      	uxth	r6, r3
 8012938:	1215      	asrs	r5, r2, #8
 801293a:	43db      	mvns	r3, r3
 801293c:	b2db      	uxtb	r3, r3
 801293e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012942:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8012946:	fb15 f503 	smulbb	r5, r5, r3
 801294a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801294e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012952:	00d2      	lsls	r2, r2, #3
 8012954:	fb07 5706 	mla	r7, r7, r6, r5
 8012958:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801295c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012960:	b2d2      	uxtb	r2, r2
 8012962:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012966:	b2bf      	uxth	r7, r7
 8012968:	fb1e fe03 	smulbb	lr, lr, r3
 801296c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012970:	fa5f fc8c 	uxtb.w	ip, ip
 8012974:	fb12 f203 	smulbb	r2, r2, r3
 8012978:	fb05 e506 	mla	r5, r5, r6, lr
 801297c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8012980:	f107 0e01 	add.w	lr, r7, #1
 8012984:	fa1f fc8c 	uxth.w	ip, ip
 8012988:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801298c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8012990:	f10c 0701 	add.w	r7, ip, #1
 8012994:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8012998:	b2ad      	uxth	r5, r5
 801299a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801299e:	ea47 070e 	orr.w	r7, r7, lr
 80129a2:	f105 0e01 	add.w	lr, r5, #1
 80129a6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80129aa:	096d      	lsrs	r5, r5, #5
 80129ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80129b0:	432f      	orrs	r7, r5
 80129b2:	8007      	strh	r7, [r0, #0]
 80129b4:	3002      	adds	r0, #2
 80129b6:	3402      	adds	r4, #2
 80129b8:	e7ac      	b.n	8012914 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80129ba:	f8b9 3000 	ldrh.w	r3, [r9]
 80129be:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80129c2:	eba3 0308 	sub.w	r3, r3, r8
 80129c6:	eba6 0608 	sub.w	r6, r6, r8
 80129ca:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80129ce:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80129d2:	440e      	add	r6, r1
 80129d4:	e797      	b.n	8012906 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80129d6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80129da:	42a8      	cmp	r0, r5
 80129dc:	d262      	bcs.n	8012aa4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80129de:	9b00      	ldr	r3, [sp, #0]
 80129e0:	4631      	mov	r1, r6
 80129e2:	eb00 0b03 	add.w	fp, r0, r3
 80129e6:	4558      	cmp	r0, fp
 80129e8:	d24e      	bcs.n	8012a88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80129ea:	f811 3b01 	ldrb.w	r3, [r1], #1
 80129ee:	b12b      	cbz	r3, 80129fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80129f0:	2bff      	cmp	r3, #255	; 0xff
 80129f2:	f8b4 e000 	ldrh.w	lr, [r4]
 80129f6:	d104      	bne.n	8012a02 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80129f8:	f8a0 e000 	strh.w	lr, [r0]
 80129fc:	3002      	adds	r0, #2
 80129fe:	3402      	adds	r4, #2
 8012a00:	e7f1      	b.n	80129e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8012a02:	8802      	ldrh	r2, [r0, #0]
 8012a04:	b29f      	uxth	r7, r3
 8012a06:	1216      	asrs	r6, r2, #8
 8012a08:	43db      	mvns	r3, r3
 8012a0a:	b2db      	uxtb	r3, r3
 8012a0c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012a10:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012a14:	fb16 f603 	smulbb	r6, r6, r3
 8012a18:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8012a1c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012a20:	00d2      	lsls	r2, r2, #3
 8012a22:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012a26:	b2d2      	uxtb	r2, r2
 8012a28:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012a2c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012a30:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012a34:	fb1a fa03 	smulbb	sl, sl, r3
 8012a38:	fa1f fc8c 	uxth.w	ip, ip
 8012a3c:	fb12 f303 	smulbb	r3, r2, r3
 8012a40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012a44:	fa5f fe8e 	uxtb.w	lr, lr
 8012a48:	fb06 a607 	mla	r6, r6, r7, sl
 8012a4c:	f10c 0201 	add.w	r2, ip, #1
 8012a50:	fb0e 3307 	mla	r3, lr, r7, r3
 8012a54:	b2b6      	uxth	r6, r6
 8012a56:	b29b      	uxth	r3, r3
 8012a58:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8012a5c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8012a60:	f106 0a01 	add.w	sl, r6, #1
 8012a64:	f103 0c01 	add.w	ip, r3, #1
 8012a68:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012a6c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8012a70:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8012a74:	0976      	lsrs	r6, r6, #5
 8012a76:	ea4c 0c02 	orr.w	ip, ip, r2
 8012a7a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012a7e:	ea4c 0c06 	orr.w	ip, ip, r6
 8012a82:	f8a0 c000 	strh.w	ip, [r0]
 8012a86:	e7b9      	b.n	80129fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8012a88:	f8b9 3000 	ldrh.w	r3, [r9]
 8012a8c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8012a90:	eba3 0308 	sub.w	r3, r3, r8
 8012a94:	eba6 0608 	sub.w	r6, r6, r8
 8012a98:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8012a9c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012aa0:	440e      	add	r6, r1
 8012aa2:	e79a      	b.n	80129da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8012aa4:	4b03      	ldr	r3, [pc, #12]	; (8012ab4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8012aa6:	6818      	ldr	r0, [r3, #0]
 8012aa8:	6803      	ldr	r3, [r0, #0]
 8012aaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012aac:	4798      	blx	r3
 8012aae:	b007      	add	sp, #28
 8012ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ab4:	2000a4f0 	.word	0x2000a4f0
 8012ab8:	2000a4ea 	.word	0x2000a4ea

08012abc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8012abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ac0:	b089      	sub	sp, #36	; 0x24
 8012ac2:	4682      	mov	sl, r0
 8012ac4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8012ac8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012aca:	460f      	mov	r7, r1
 8012acc:	4691      	mov	r9, r2
 8012ace:	4698      	mov	r8, r3
 8012ad0:	2e00      	cmp	r6, #0
 8012ad2:	d03d      	beq.n	8012b50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8012ad4:	4608      	mov	r0, r1
 8012ad6:	f7fb ff7d 	bl	800e9d4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012ada:	4605      	mov	r5, r0
 8012adc:	4638      	mov	r0, r7
 8012ade:	f7fb ffbd 	bl	800ea5c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012ae2:	f8ad 000e 	strh.w	r0, [sp, #14]
 8012ae6:	4638      	mov	r0, r7
 8012ae8:	f8ad 9008 	strh.w	r9, [sp, #8]
 8012aec:	f8ad 500c 	strh.w	r5, [sp, #12]
 8012af0:	f8ad 800a 	strh.w	r8, [sp, #10]
 8012af4:	f7fc f88a 	bl	800ec0c <_ZNK8touchgfx6Bitmap7getDataEv>
 8012af8:	4605      	mov	r5, r0
 8012afa:	4638      	mov	r0, r7
 8012afc:	f7fc f8b8 	bl	800ec70 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8012b00:	4681      	mov	r9, r0
 8012b02:	4638      	mov	r0, r7
 8012b04:	f7fc f90c 	bl	800ed20 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012b08:	280b      	cmp	r0, #11
 8012b0a:	f200 816f 	bhi.w	8012dec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x330>
 8012b0e:	e8df f010 	tbh	[pc, r0, lsl #1]
 8012b12:	00c3      	.short	0x00c3
 8012b14:	000c00b4 	.word	0x000c00b4
 8012b18:	016d016d 	.word	0x016d016d
 8012b1c:	016d016d 	.word	0x016d016d
 8012b20:	016d016d 	.word	0x016d016d
 8012b24:	016d016d 	.word	0x016d016d
 8012b28:	00bb      	.short	0x00bb
 8012b2a:	4bb3      	ldr	r3, [pc, #716]	; (8012df8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x33c>)
 8012b2c:	6818      	ldr	r0, [r3, #0]
 8012b2e:	6803      	ldr	r3, [r0, #0]
 8012b30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b32:	4798      	blx	r3
 8012b34:	2eff      	cmp	r6, #255	; 0xff
 8012b36:	d121      	bne.n	8012b7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8012b38:	0683      	lsls	r3, r0, #26
 8012b3a:	d41f      	bmi.n	8012b7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8012b3c:	4638      	mov	r0, r7
 8012b3e:	f7fc f82b 	bl	800eb98 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012b42:	b940      	cbnz	r0, 8012b56 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8012b44:	4623      	mov	r3, r4
 8012b46:	aa02      	add	r2, sp, #8
 8012b48:	4629      	mov	r1, r5
 8012b4a:	4650      	mov	r0, sl
 8012b4c:	f7ff f9e4 	bl	8011f18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8012b50:	b009      	add	sp, #36	; 0x24
 8012b52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b56:	f10d 0818 	add.w	r8, sp, #24
 8012b5a:	4639      	mov	r1, r7
 8012b5c:	4640      	mov	r0, r8
 8012b5e:	f7fb ffc1 	bl	800eae4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012b62:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012b66:	af04      	add	r7, sp, #16
 8012b68:	e887 0003 	stmia.w	r7, {r0, r1}
 8012b6c:	4638      	mov	r0, r7
 8012b6e:	4621      	mov	r1, r4
 8012b70:	f7f6 fac6 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 8012b74:	4638      	mov	r0, r7
 8012b76:	f7f6 fb06 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012b7a:	b130      	cbz	r0, 8012b8a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xce>
 8012b7c:	4633      	mov	r3, r6
 8012b7e:	4622      	mov	r2, r4
 8012b80:	a902      	add	r1, sp, #8
 8012b82:	4628      	mov	r0, r5
 8012b84:	f7ff f8e2 	bl	8011d4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012b88:	e7e2      	b.n	8012b50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8012b8a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012b8e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012b92:	4293      	cmp	r3, r2
 8012b94:	dd12      	ble.n	8012bbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x100>
 8012b96:	1a9b      	subs	r3, r3, r2
 8012b98:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012b9c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012ba0:	f8ad 0018 	strh.w	r0, [sp, #24]
 8012ba4:	f8ad 201a 	strh.w	r2, [sp, #26]
 8012ba8:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012bac:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012bb0:	4642      	mov	r2, r8
 8012bb2:	4633      	mov	r3, r6
 8012bb4:	a902      	add	r1, sp, #8
 8012bb6:	4628      	mov	r0, r5
 8012bb8:	f7ff f8c8 	bl	8011d4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012bbc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8012bc0:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012bc4:	4293      	cmp	r3, r2
 8012bc6:	dd12      	ble.n	8012bee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x132>
 8012bc8:	1a9b      	subs	r3, r3, r2
 8012bca:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8012bce:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8012bd2:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012bd6:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012bda:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012bde:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012be2:	23ff      	movs	r3, #255	; 0xff
 8012be4:	4642      	mov	r2, r8
 8012be6:	a902      	add	r1, sp, #8
 8012be8:	4628      	mov	r0, r5
 8012bea:	f7ff f8af 	bl	8011d4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012bee:	463b      	mov	r3, r7
 8012bf0:	aa02      	add	r2, sp, #8
 8012bf2:	4629      	mov	r1, r5
 8012bf4:	4650      	mov	r0, sl
 8012bf6:	f7ff f98f 	bl	8011f18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8012bfa:	88a2      	ldrh	r2, [r4, #4]
 8012bfc:	8823      	ldrh	r3, [r4, #0]
 8012bfe:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8012c02:	4413      	add	r3, r2
 8012c04:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012c08:	440a      	add	r2, r1
 8012c0a:	b29b      	uxth	r3, r3
 8012c0c:	b292      	uxth	r2, r2
 8012c0e:	b211      	sxth	r1, r2
 8012c10:	b218      	sxth	r0, r3
 8012c12:	4288      	cmp	r0, r1
 8012c14:	dd12      	ble.n	8012c3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x180>
 8012c16:	1a9b      	subs	r3, r3, r2
 8012c18:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8012c1c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8012c20:	f8ad 1018 	strh.w	r1, [sp, #24]
 8012c24:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012c28:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012c2c:	23ff      	movs	r3, #255	; 0xff
 8012c2e:	4642      	mov	r2, r8
 8012c30:	a902      	add	r1, sp, #8
 8012c32:	4628      	mov	r0, r5
 8012c34:	f8ad 601a 	strh.w	r6, [sp, #26]
 8012c38:	f7ff f888 	bl	8011d4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012c3c:	88e2      	ldrh	r2, [r4, #6]
 8012c3e:	8863      	ldrh	r3, [r4, #2]
 8012c40:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8012c44:	4413      	add	r3, r2
 8012c46:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012c4a:	440a      	add	r2, r1
 8012c4c:	b29b      	uxth	r3, r3
 8012c4e:	b292      	uxth	r2, r2
 8012c50:	b211      	sxth	r1, r2
 8012c52:	b218      	sxth	r0, r3
 8012c54:	4288      	cmp	r0, r1
 8012c56:	f77f af7b 	ble.w	8012b50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8012c5a:	1a9b      	subs	r3, r3, r2
 8012c5c:	f9b4 6000 	ldrsh.w	r6, [r4]
 8012c60:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012c64:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012c68:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012c6c:	f8ad 101a 	strh.w	r1, [sp, #26]
 8012c70:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012c74:	23ff      	movs	r3, #255	; 0xff
 8012c76:	4642      	mov	r2, r8
 8012c78:	e782      	b.n	8012b80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc4>
 8012c7a:	4633      	mov	r3, r6
 8012c7c:	4622      	mov	r2, r4
 8012c7e:	a902      	add	r1, sp, #8
 8012c80:	4628      	mov	r0, r5
 8012c82:	f7ff f9b9 	bl	8011ff8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8012c86:	e763      	b.n	8012b50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8012c88:	9600      	str	r6, [sp, #0]
 8012c8a:	4623      	mov	r3, r4
 8012c8c:	aa02      	add	r2, sp, #8
 8012c8e:	4649      	mov	r1, r9
 8012c90:	4628      	mov	r0, r5
 8012c92:	f7ff fdd5 	bl	8012840 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8012c96:	e75b      	b.n	8012b50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8012c98:	4638      	mov	r0, r7
 8012c9a:	f7fb ff7d 	bl	800eb98 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012c9e:	b950      	cbnz	r0, 8012cb6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fa>
 8012ca0:	e9cd 6000 	strd	r6, r0, [sp]
 8012ca4:	f8da 3000 	ldr.w	r3, [sl]
 8012ca8:	aa02      	add	r2, sp, #8
 8012caa:	68de      	ldr	r6, [r3, #12]
 8012cac:	4629      	mov	r1, r5
 8012cae:	4623      	mov	r3, r4
 8012cb0:	4650      	mov	r0, sl
 8012cb2:	47b0      	blx	r6
 8012cb4:	e74c      	b.n	8012b50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8012cb6:	f10d 0818 	add.w	r8, sp, #24
 8012cba:	4639      	mov	r1, r7
 8012cbc:	4640      	mov	r0, r8
 8012cbe:	f7fb ff11 	bl	800eae4 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012cc2:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012cc6:	af04      	add	r7, sp, #16
 8012cc8:	e887 0003 	stmia.w	r7, {r0, r1}
 8012ccc:	4638      	mov	r0, r7
 8012cce:	4621      	mov	r1, r4
 8012cd0:	f7f6 fa16 	bl	8009100 <_ZN8touchgfx4RectaNERKS0_>
 8012cd4:	4638      	mov	r0, r7
 8012cd6:	f7f6 fa56 	bl	8009186 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012cda:	b138      	cbz	r0, 8012cec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8012cdc:	9600      	str	r6, [sp, #0]
 8012cde:	4623      	mov	r3, r4
 8012ce0:	aa02      	add	r2, sp, #8
 8012ce2:	4649      	mov	r1, r9
 8012ce4:	4628      	mov	r0, r5
 8012ce6:	f7ff fdc3 	bl	8012870 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012cea:	e731      	b.n	8012b50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8012cec:	e9cd 6000 	strd	r6, r0, [sp]
 8012cf0:	f8da 3000 	ldr.w	r3, [sl]
 8012cf4:	aa02      	add	r2, sp, #8
 8012cf6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8012cfa:	4629      	mov	r1, r5
 8012cfc:	463b      	mov	r3, r7
 8012cfe:	4650      	mov	r0, sl
 8012d00:	47d8      	blx	fp
 8012d02:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012d06:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012d0a:	4293      	cmp	r3, r2
 8012d0c:	dd13      	ble.n	8012d36 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x27a>
 8012d0e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012d12:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012d16:	f8ad 0018 	strh.w	r0, [sp, #24]
 8012d1a:	1a9b      	subs	r3, r3, r2
 8012d1c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8012d20:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012d24:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012d28:	9600      	str	r6, [sp, #0]
 8012d2a:	4643      	mov	r3, r8
 8012d2c:	aa02      	add	r2, sp, #8
 8012d2e:	4649      	mov	r1, r9
 8012d30:	4628      	mov	r0, r5
 8012d32:	f7ff fd9d 	bl	8012870 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012d36:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8012d3a:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012d3e:	4293      	cmp	r3, r2
 8012d40:	dd13      	ble.n	8012d6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2ae>
 8012d42:	1a9b      	subs	r3, r3, r2
 8012d44:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8012d48:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8012d4c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012d50:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012d54:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012d58:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012d5c:	9600      	str	r6, [sp, #0]
 8012d5e:	4643      	mov	r3, r8
 8012d60:	aa02      	add	r2, sp, #8
 8012d62:	4649      	mov	r1, r9
 8012d64:	4628      	mov	r0, r5
 8012d66:	f7ff fd83 	bl	8012870 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012d6a:	88a2      	ldrh	r2, [r4, #4]
 8012d6c:	8823      	ldrh	r3, [r4, #0]
 8012d6e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8012d72:	4413      	add	r3, r2
 8012d74:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012d78:	440a      	add	r2, r1
 8012d7a:	b29b      	uxth	r3, r3
 8012d7c:	b292      	uxth	r2, r2
 8012d7e:	b211      	sxth	r1, r2
 8012d80:	b218      	sxth	r0, r3
 8012d82:	4288      	cmp	r0, r1
 8012d84:	dd13      	ble.n	8012dae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2f2>
 8012d86:	1a9b      	subs	r3, r3, r2
 8012d88:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8012d8c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8012d90:	f8ad 1018 	strh.w	r1, [sp, #24]
 8012d94:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012d98:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012d9c:	9600      	str	r6, [sp, #0]
 8012d9e:	4643      	mov	r3, r8
 8012da0:	aa02      	add	r2, sp, #8
 8012da2:	4649      	mov	r1, r9
 8012da4:	4628      	mov	r0, r5
 8012da6:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012daa:	f7ff fd61 	bl	8012870 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012dae:	88e2      	ldrh	r2, [r4, #6]
 8012db0:	8863      	ldrh	r3, [r4, #2]
 8012db2:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8012db6:	4413      	add	r3, r2
 8012db8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012dbc:	440a      	add	r2, r1
 8012dbe:	b29b      	uxth	r3, r3
 8012dc0:	b292      	uxth	r2, r2
 8012dc2:	b211      	sxth	r1, r2
 8012dc4:	b218      	sxth	r0, r3
 8012dc6:	4288      	cmp	r0, r1
 8012dc8:	f77f aec2 	ble.w	8012b50 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8012dcc:	f9b4 7000 	ldrsh.w	r7, [r4]
 8012dd0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012dd4:	f8ad 7018 	strh.w	r7, [sp, #24]
 8012dd8:	1a9b      	subs	r3, r3, r2
 8012dda:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012dde:	f8ad 101a 	strh.w	r1, [sp, #26]
 8012de2:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012de6:	9600      	str	r6, [sp, #0]
 8012de8:	4643      	mov	r3, r8
 8012dea:	e779      	b.n	8012ce0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8012dec:	4b03      	ldr	r3, [pc, #12]	; (8012dfc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x340>)
 8012dee:	4a04      	ldr	r2, [pc, #16]	; (8012e00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x344>)
 8012df0:	4804      	ldr	r0, [pc, #16]	; (8012e04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x348>)
 8012df2:	21b0      	movs	r1, #176	; 0xb0
 8012df4:	f007 ff50 	bl	801ac98 <__assert_func>
 8012df8:	2000a4f0 	.word	0x2000a4f0
 8012dfc:	0801e810 	.word	0x0801e810
 8012e00:	0801ef1f 	.word	0x0801ef1f
 8012e04:	0801e994 	.word	0x0801e994

08012e08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8012e08:	b508      	push	{r3, lr}
 8012e0a:	b180      	cbz	r0, 8012e2e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8012e0c:	2902      	cmp	r1, #2
 8012e0e:	d014      	beq.n	8012e3a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8012e10:	2903      	cmp	r1, #3
 8012e12:	d01d      	beq.n	8012e50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012e14:	2901      	cmp	r1, #1
 8012e16:	d101      	bne.n	8012e1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012e18:	2001      	movs	r0, #1
 8012e1a:	bd08      	pop	{r3, pc}
 8012e1c:	4b0e      	ldr	r3, [pc, #56]	; (8012e58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012e1e:	8818      	ldrh	r0, [r3, #0]
 8012e20:	b990      	cbnz	r0, 8012e48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8012e22:	4b0e      	ldr	r3, [pc, #56]	; (8012e5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8012e24:	4a0e      	ldr	r2, [pc, #56]	; (8012e60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8012e26:	480f      	ldr	r0, [pc, #60]	; (8012e64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8012e28:	2153      	movs	r1, #83	; 0x53
 8012e2a:	f007 ff35 	bl	801ac98 <__assert_func>
 8012e2e:	2902      	cmp	r1, #2
 8012e30:	d00e      	beq.n	8012e50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012e32:	2903      	cmp	r1, #3
 8012e34:	d0f2      	beq.n	8012e1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012e36:	2901      	cmp	r1, #1
 8012e38:	d1ee      	bne.n	8012e18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8012e3a:	4b07      	ldr	r3, [pc, #28]	; (8012e58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012e3c:	8818      	ldrh	r0, [r3, #0]
 8012e3e:	2800      	cmp	r0, #0
 8012e40:	d0ef      	beq.n	8012e22 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8012e42:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012e46:	e7e8      	b.n	8012e1a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012e48:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012e4c:	4240      	negs	r0, r0
 8012e4e:	e7e4      	b.n	8012e1a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012e50:	f04f 30ff 	mov.w	r0, #4294967295
 8012e54:	e7e1      	b.n	8012e1a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012e56:	bf00      	nop
 8012e58:	2000a4ea 	.word	0x2000a4ea
 8012e5c:	0801ea8a 	.word	0x0801ea8a
 8012e60:	0801f09c 	.word	0x0801f09c
 8012e64:	0801eacc 	.word	0x0801eacc

08012e68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8012e68:	b508      	push	{r3, lr}
 8012e6a:	b180      	cbz	r0, 8012e8e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8012e6c:	2902      	cmp	r1, #2
 8012e6e:	d014      	beq.n	8012e9a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8012e70:	2903      	cmp	r1, #3
 8012e72:	d018      	beq.n	8012ea6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012e74:	2901      	cmp	r1, #1
 8012e76:	d001      	beq.n	8012e7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012e78:	2001      	movs	r0, #1
 8012e7a:	e013      	b.n	8012ea4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012e7c:	4b0e      	ldr	r3, [pc, #56]	; (8012eb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012e7e:	8818      	ldrh	r0, [r3, #0]
 8012e80:	b970      	cbnz	r0, 8012ea0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8012e82:	4b0e      	ldr	r3, [pc, #56]	; (8012ebc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8012e84:	4a0e      	ldr	r2, [pc, #56]	; (8012ec0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8012e86:	480f      	ldr	r0, [pc, #60]	; (8012ec4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8012e88:	2153      	movs	r1, #83	; 0x53
 8012e8a:	f007 ff05 	bl	801ac98 <__assert_func>
 8012e8e:	2902      	cmp	r1, #2
 8012e90:	d009      	beq.n	8012ea6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012e92:	2903      	cmp	r1, #3
 8012e94:	d0f0      	beq.n	8012e78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8012e96:	2901      	cmp	r1, #1
 8012e98:	d1f0      	bne.n	8012e7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012e9a:	f04f 30ff 	mov.w	r0, #4294967295
 8012e9e:	e001      	b.n	8012ea4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012ea0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012ea4:	bd08      	pop	{r3, pc}
 8012ea6:	4b04      	ldr	r3, [pc, #16]	; (8012eb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012ea8:	8818      	ldrh	r0, [r3, #0]
 8012eaa:	2800      	cmp	r0, #0
 8012eac:	d0e9      	beq.n	8012e82 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8012eae:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012eb2:	4240      	negs	r0, r0
 8012eb4:	e7f6      	b.n	8012ea4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012eb6:	bf00      	nop
 8012eb8:	2000a4ea 	.word	0x2000a4ea
 8012ebc:	0801ea8a 	.word	0x0801ea8a
 8012ec0:	0801f09c 	.word	0x0801f09c
 8012ec4:	0801eacc 	.word	0x0801eacc

08012ec8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8012ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ecc:	b099      	sub	sp, #100	; 0x64
 8012ece:	910b      	str	r1, [sp, #44]	; 0x2c
 8012ed0:	a914      	add	r1, sp, #80	; 0x50
 8012ed2:	e881 000c 	stmia.w	r1, {r2, r3}
 8012ed6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8012eda:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8012ede:	930a      	str	r3, [sp, #40]	; 0x28
 8012ee0:	f891 900d 	ldrb.w	r9, [r1, #13]
 8012ee4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8012ee8:	9311      	str	r3, [sp, #68]	; 0x44
 8012eea:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8012eee:	930c      	str	r3, [sp, #48]	; 0x30
 8012ef0:	7988      	ldrb	r0, [r1, #6]
 8012ef2:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8012ef6:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8012efa:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8012efe:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8012f02:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8012f06:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8012f0a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012f0e:	4303      	orrs	r3, r0
 8012f10:	9309      	str	r3, [sp, #36]	; 0x24
 8012f12:	f000 81a1 	beq.w	8013258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8012f16:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8012f1a:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8012f1e:	f891 9007 	ldrb.w	r9, [r1, #7]
 8012f22:	ea59 0903 	orrs.w	r9, r9, r3
 8012f26:	f000 8197 	beq.w	8013258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8012f2a:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8012f2e:	b29b      	uxth	r3, r3
 8012f30:	2e00      	cmp	r6, #0
 8012f32:	f000 813a 	beq.w	80131aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8012f36:	1af6      	subs	r6, r6, r3
 8012f38:	b2b6      	uxth	r6, r6
 8012f3a:	0433      	lsls	r3, r6, #16
 8012f3c:	d502      	bpl.n	8012f44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8012f3e:	1bad      	subs	r5, r5, r6
 8012f40:	b22d      	sxth	r5, r5
 8012f42:	2600      	movs	r6, #0
 8012f44:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012f48:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8012f4c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8012f50:	428d      	cmp	r5, r1
 8012f52:	b28b      	uxth	r3, r1
 8012f54:	bfbf      	itttt	lt
 8012f56:	18f6      	addlt	r6, r6, r3
 8012f58:	1b75      	sublt	r5, r6, r5
 8012f5a:	b2ae      	uxthlt	r6, r5
 8012f5c:	460d      	movlt	r5, r1
 8012f5e:	8891      	ldrh	r1, [r2, #4]
 8012f60:	440b      	add	r3, r1
 8012f62:	b21b      	sxth	r3, r3
 8012f64:	9310      	str	r3, [sp, #64]	; 0x40
 8012f66:	88d3      	ldrh	r3, [r2, #6]
 8012f68:	8852      	ldrh	r2, [r2, #2]
 8012f6a:	4413      	add	r3, r2
 8012f6c:	b21b      	sxth	r3, r3
 8012f6e:	930f      	str	r3, [sp, #60]	; 0x3c
 8012f70:	4bbc      	ldr	r3, [pc, #752]	; (8013264 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8012f72:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012f74:	f893 b000 	ldrb.w	fp, [r3]
 8012f78:	f10b 3cff 	add.w	ip, fp, #4294967295
 8012f7c:	f1dc 0300 	rsbs	r3, ip, #0
 8012f80:	eb43 030c 	adc.w	r3, r3, ip
 8012f84:	930e      	str	r3, [sp, #56]	; 0x38
 8012f86:	4629      	mov	r1, r5
 8012f88:	4653      	mov	r3, sl
 8012f8a:	a814      	add	r0, sp, #80	; 0x50
 8012f8c:	f7f8 fd20 	bl	800b9d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8012f90:	4629      	mov	r1, r5
 8012f92:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8012f96:	4653      	mov	r3, sl
 8012f98:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012f9a:	a814      	add	r0, sp, #80	; 0x50
 8012f9c:	f7f8 fd30 	bl	800ba00 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8012fa0:	a918      	add	r1, sp, #96	; 0x60
 8012fa2:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8012fa6:	a817      	add	r0, sp, #92	; 0x5c
 8012fa8:	f7f8 fe4c 	bl	800bc44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8012fac:	f1ba 0f00 	cmp.w	sl, #0
 8012fb0:	f040 80fe 	bne.w	80131b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8012fb4:	f1bb 0f01 	cmp.w	fp, #1
 8012fb8:	f040 8102 	bne.w	80131c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f8>
 8012fbc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012fbe:	b153      	cbz	r3, 8012fd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 8012fc0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012fc2:	2408      	movs	r4, #8
 8012fc4:	fb94 f3f8 	sdiv	r3, r4, r8
 8012fc8:	1e5c      	subs	r4, r3, #1
 8012fca:	4414      	add	r4, r2
 8012fcc:	fb94 f4f3 	sdiv	r4, r4, r3
 8012fd0:	fb14 f403 	smulbb	r4, r4, r3
 8012fd4:	b2a4      	uxth	r4, r4
 8012fd6:	b906      	cbnz	r6, 8012fda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8012fd8:	b16f      	cbz	r7, 8012ff6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12e>
 8012fda:	fb07 6304 	mla	r3, r7, r4, r6
 8012fde:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8012fe0:	fb08 f303 	mul.w	r3, r8, r3
 8012fe4:	463a      	mov	r2, r7
 8012fe6:	f003 0707 	and.w	r7, r3, #7
 8012fea:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8012fee:	9328      	str	r3, [sp, #160]	; 0xa0
 8012ff0:	eba9 0302 	sub.w	r3, r9, r2
 8012ff4:	930d      	str	r3, [sp, #52]	; 0x34
 8012ff6:	4651      	mov	r1, sl
 8012ff8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8012ffa:	f7ff ff05 	bl	8012e08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8012ffe:	4651      	mov	r1, sl
 8013000:	4681      	mov	r9, r0
 8013002:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013004:	f7ff ff30 	bl	8012e68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8013008:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801300a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801300c:	eba3 0a02 	sub.w	sl, r3, r2
 8013010:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013012:	459a      	cmp	sl, r3
 8013014:	bfa8      	it	ge
 8013016:	469a      	movge	sl, r3
 8013018:	f1ba 0f00 	cmp.w	sl, #0
 801301c:	4683      	mov	fp, r0
 801301e:	f340 811b 	ble.w	8013258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 8013022:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013024:	1bad      	subs	r5, r5, r6
 8013026:	1b5d      	subs	r5, r3, r5
 8013028:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801302a:	429d      	cmp	r5, r3
 801302c:	bfd4      	ite	le
 801302e:	ebc6 0605 	rsble	r6, r6, r5
 8013032:	ebc6 0603 	rsbgt	r6, r6, r3
 8013036:	2e00      	cmp	r6, #0
 8013038:	f340 810e 	ble.w	8013258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 801303c:	1ba4      	subs	r4, r4, r6
 801303e:	fb08 f304 	mul.w	r3, r8, r4
 8013042:	930f      	str	r3, [sp, #60]	; 0x3c
 8013044:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013046:	2b00      	cmp	r3, #0
 8013048:	f040 8114 	bne.w	8013274 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801304c:	4b86      	ldr	r3, [pc, #536]	; (8013268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801304e:	6818      	ldr	r0, [r3, #0]
 8013050:	6803      	ldr	r3, [r0, #0]
 8013052:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013054:	4798      	blx	r3
 8013056:	2301      	movs	r3, #1
 8013058:	fa03 f308 	lsl.w	r3, r3, r8
 801305c:	4a83      	ldr	r2, [pc, #524]	; (801326c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801305e:	3b01      	subs	r3, #1
 8013060:	b2db      	uxtb	r3, r3
 8013062:	8811      	ldrh	r1, [r2, #0]
 8013064:	930e      	str	r3, [sp, #56]	; 0x38
 8013066:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801306a:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801306e:	fb01 2303 	mla	r3, r1, r3, r2
 8013072:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013076:	930a      	str	r3, [sp, #40]	; 0x28
 8013078:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801307a:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801307e:	9313      	str	r3, [sp, #76]	; 0x4c
 8013080:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013082:	0a19      	lsrs	r1, r3, #8
 8013084:	b2cb      	uxtb	r3, r1
 8013086:	9312      	str	r3, [sp, #72]	; 0x48
 8013088:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801308a:	b2db      	uxtb	r3, r3
 801308c:	9311      	str	r3, [sp, #68]	; 0x44
 801308e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013090:	095a      	lsrs	r2, r3, #5
 8013092:	4b77      	ldr	r3, [pc, #476]	; (8013270 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8013094:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013098:	400b      	ands	r3, r1
 801309a:	4313      	orrs	r3, r2
 801309c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801309e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80130a2:	4313      	orrs	r3, r2
 80130a4:	b29b      	uxth	r3, r3
 80130a6:	9310      	str	r3, [sp, #64]	; 0x40
 80130a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80130aa:	781a      	ldrb	r2, [r3, #0]
 80130ac:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80130b0:	413a      	asrs	r2, r7
 80130b2:	fb06 b919 	mls	r9, r6, r9, fp
 80130b6:	fb03 fb06 	mul.w	fp, r3, r6
 80130ba:	b2d2      	uxtb	r2, r2
 80130bc:	930d      	str	r3, [sp, #52]	; 0x34
 80130be:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80130c2:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80130c6:	f0c0 80ea 	bcc.w	801329e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d6>
 80130ca:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80130ce:	46b6      	mov	lr, r6
 80130d0:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80130d4:	f0c0 80d2 	bcc.w	801327c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 80130d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80130da:	4013      	ands	r3, r2
 80130dc:	d055      	beq.n	801318a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c2>
 80130de:	20ff      	movs	r0, #255	; 0xff
 80130e0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80130e2:	fb90 f1f1 	sdiv	r1, r0, r1
 80130e6:	434b      	muls	r3, r1
 80130e8:	2bfe      	cmp	r3, #254	; 0xfe
 80130ea:	dd03      	ble.n	80130f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x22c>
 80130ec:	990c      	ldr	r1, [sp, #48]	; 0x30
 80130ee:	4281      	cmp	r1, r0
 80130f0:	f000 80c2 	beq.w	8013278 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80130f4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80130f6:	f8bc 4000 	ldrh.w	r4, [ip]
 80130fa:	fb11 f303 	smulbb	r3, r1, r3
 80130fe:	b29b      	uxth	r3, r3
 8013100:	1c59      	adds	r1, r3, #1
 8013102:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013106:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801310a:	b29d      	uxth	r5, r3
 801310c:	43db      	mvns	r3, r3
 801310e:	b2db      	uxtb	r3, r3
 8013110:	9309      	str	r3, [sp, #36]	; 0x24
 8013112:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013114:	1220      	asrs	r0, r4, #8
 8013116:	fb13 f905 	smulbb	r9, r3, r5
 801311a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801311e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013120:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8013124:	fb00 9003 	mla	r0, r0, r3, r9
 8013128:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801312a:	10e1      	asrs	r1, r4, #3
 801312c:	fb13 f905 	smulbb	r9, r3, r5
 8013130:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013134:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013136:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801313a:	fb01 9103 	mla	r1, r1, r3, r9
 801313e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013140:	00e4      	lsls	r4, r4, #3
 8013142:	fb13 f505 	smulbb	r5, r3, r5
 8013146:	b2e4      	uxtb	r4, r4
 8013148:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801314a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801314e:	fb04 5403 	mla	r4, r4, r3, r5
 8013152:	b280      	uxth	r0, r0
 8013154:	b2a4      	uxth	r4, r4
 8013156:	1c43      	adds	r3, r0, #1
 8013158:	f104 0901 	add.w	r9, r4, #1
 801315c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8013160:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8013164:	b289      	uxth	r1, r1
 8013166:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801316a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801316e:	ea49 0000 	orr.w	r0, r9, r0
 8013172:	f101 0901 	add.w	r9, r1, #1
 8013176:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801317a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801317e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013182:	ea40 0009 	orr.w	r0, r0, r9
 8013186:	f8ac 0000 	strh.w	r0, [ip]
 801318a:	4447      	add	r7, r8
 801318c:	b2bf      	uxth	r7, r7
 801318e:	2f07      	cmp	r7, #7
 8013190:	bf81      	itttt	hi
 8013192:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8013194:	785a      	ldrbhi	r2, [r3, #1]
 8013196:	3301      	addhi	r3, #1
 8013198:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801319a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801319c:	bf9a      	itte	ls
 801319e:	fa42 f208 	asrls.w	r2, r2, r8
 80131a2:	b2d2      	uxtbls	r2, r2
 80131a4:	2700      	movhi	r7, #0
 80131a6:	449c      	add	ip, r3
 80131a8:	e792      	b.n	80130d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 80131aa:	441d      	add	r5, r3
 80131ac:	b22d      	sxth	r5, r5
 80131ae:	e6c9      	b.n	8012f44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 80131b0:	f1ba 0f01 	cmp.w	sl, #1
 80131b4:	f47f af02 	bne.w	8012fbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80131b8:	f1bb 0f01 	cmp.w	fp, #1
 80131bc:	f47f aefe 	bne.w	8012fbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80131c0:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 8013268 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80131c4:	f8db 0000 	ldr.w	r0, [fp]
 80131c8:	6803      	ldr	r3, [r0, #0]
 80131ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80131cc:	4798      	blx	r3
 80131ce:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80131d2:	465a      	mov	r2, fp
 80131d4:	d006      	beq.n	80131e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 80131d6:	f1b8 0f04 	cmp.w	r8, #4
 80131da:	d140      	bne.n	801325e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80131dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80131de:	3300      	adds	r3, #0
 80131e0:	bf18      	it	ne
 80131e2:	2301      	movne	r3, #1
 80131e4:	0580      	lsls	r0, r0, #22
 80131e6:	d563      	bpl.n	80132b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 80131e8:	f1b8 0f08 	cmp.w	r8, #8
 80131ec:	d160      	bne.n	80132b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 80131ee:	2b00      	cmp	r3, #0
 80131f0:	bf0c      	ite	eq
 80131f2:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80131f6:	f44f 7180 	movne.w	r1, #256	; 0x100
 80131fa:	2e00      	cmp	r6, #0
 80131fc:	f47f aede 	bne.w	8012fbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8013200:	2f00      	cmp	r7, #0
 8013202:	f47f aedb 	bne.w	8012fbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8013206:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013208:	9810      	ldr	r0, [sp, #64]	; 0x40
 801320a:	18eb      	adds	r3, r5, r3
 801320c:	4283      	cmp	r3, r0
 801320e:	f73f aed5 	bgt.w	8012fbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 8013212:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013214:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013216:	444b      	add	r3, r9
 8013218:	4283      	cmp	r3, r0
 801321a:	f73f aecf 	bgt.w	8012fbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 801321e:	6810      	ldr	r0, [r2, #0]
 8013220:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8013224:	6805      	ldr	r5, [r0, #0]
 8013226:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801322a:	f1b8 0f08 	cmp.w	r8, #8
 801322e:	f04f 0600 	mov.w	r6, #0
 8013232:	bf18      	it	ne
 8013234:	3401      	addne	r4, #1
 8013236:	e9cd 1605 	strd	r1, r6, [sp, #20]
 801323a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801323c:	9104      	str	r1, [sp, #16]
 801323e:	bf18      	it	ne
 8013240:	f024 0401 	bicne.w	r4, r4, #1
 8013244:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013246:	bf18      	it	ne
 8013248:	b2a4      	uxthne	r4, r4
 801324a:	e9cd 4102 	strd	r4, r1, [sp, #8]
 801324e:	e9cd 4900 	strd	r4, r9, [sp]
 8013252:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013254:	6d6c      	ldr	r4, [r5, #84]	; 0x54
 8013256:	47a0      	blx	r4
 8013258:	b019      	add	sp, #100	; 0x64
 801325a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801325e:	2300      	movs	r3, #0
 8013260:	e7c0      	b.n	80131e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31c>
 8013262:	bf00      	nop
 8013264:	2000a4e8 	.word	0x2000a4e8
 8013268:	2000a4f0 	.word	0x2000a4f0
 801326c:	2000a4ea 	.word	0x2000a4ea
 8013270:	00fff800 	.word	0x00fff800
 8013274:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013276:	e6ee      	b.n	8013056 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18e>
 8013278:	9810      	ldr	r0, [sp, #64]	; 0x40
 801327a:	e784      	b.n	8013186 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2be>
 801327c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801327e:	b153      	cbz	r3, 8013296 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ce>
 8013280:	441f      	add	r7, r3
 8013282:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013284:	b2bf      	uxth	r7, r7
 8013286:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 801328a:	f007 0707 	and.w	r7, r7, #7
 801328e:	781a      	ldrb	r2, [r3, #0]
 8013290:	9328      	str	r3, [sp, #160]	; 0xa0
 8013292:	413a      	asrs	r2, r7
 8013294:	b2d2      	uxtb	r2, r2
 8013296:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013298:	445b      	add	r3, fp
 801329a:	930a      	str	r3, [sp, #40]	; 0x28
 801329c:	e711      	b.n	80130c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1fa>
 801329e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80132a0:	2b00      	cmp	r3, #0
 80132a2:	d1d9      	bne.n	8013258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80132a4:	4b05      	ldr	r3, [pc, #20]	; (80132bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f4>)
 80132a6:	6818      	ldr	r0, [r3, #0]
 80132a8:	6803      	ldr	r3, [r0, #0]
 80132aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80132ac:	4798      	blx	r3
 80132ae:	e7d3      	b.n	8013258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
 80132b0:	2b00      	cmp	r3, #0
 80132b2:	f43f ae83 	beq.w	8012fbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf4>
 80132b6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80132ba:	e79e      	b.n	80131fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x332>
 80132bc:	2000a4f0 	.word	0x2000a4f0

080132c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80132c0:	b538      	push	{r3, r4, r5, lr}
 80132c2:	4c15      	ldr	r4, [pc, #84]	; (8013318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80132c4:	7823      	ldrb	r3, [r4, #0]
 80132c6:	f3bf 8f5b 	dmb	ish
 80132ca:	07da      	lsls	r2, r3, #31
 80132cc:	4605      	mov	r5, r0
 80132ce:	d40b      	bmi.n	80132e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80132d0:	4620      	mov	r0, r4
 80132d2:	f007 fcb5 	bl	801ac40 <__cxa_guard_acquire>
 80132d6:	b138      	cbz	r0, 80132e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80132d8:	4620      	mov	r0, r4
 80132da:	f007 fcbd 	bl	801ac58 <__cxa_guard_release>
 80132de:	4a0f      	ldr	r2, [pc, #60]	; (801331c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80132e0:	490f      	ldr	r1, [pc, #60]	; (8013320 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80132e2:	4810      	ldr	r0, [pc, #64]	; (8013324 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80132e4:	f007 fca5 	bl	801ac32 <__aeabi_atexit>
 80132e8:	4c0f      	ldr	r4, [pc, #60]	; (8013328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80132ea:	7823      	ldrb	r3, [r4, #0]
 80132ec:	f3bf 8f5b 	dmb	ish
 80132f0:	07db      	lsls	r3, r3, #31
 80132f2:	d40b      	bmi.n	801330c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80132f4:	4620      	mov	r0, r4
 80132f6:	f007 fca3 	bl	801ac40 <__cxa_guard_acquire>
 80132fa:	b138      	cbz	r0, 801330c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80132fc:	4620      	mov	r0, r4
 80132fe:	f007 fcab 	bl	801ac58 <__cxa_guard_release>
 8013302:	4a06      	ldr	r2, [pc, #24]	; (801331c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013304:	4909      	ldr	r1, [pc, #36]	; (801332c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8013306:	480a      	ldr	r0, [pc, #40]	; (8013330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013308:	f007 fc93 	bl	801ac32 <__aeabi_atexit>
 801330c:	4b05      	ldr	r3, [pc, #20]	; (8013324 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801330e:	612b      	str	r3, [r5, #16]
 8013310:	4b07      	ldr	r3, [pc, #28]	; (8013330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8013312:	616b      	str	r3, [r5, #20]
 8013314:	bd38      	pop	{r3, r4, r5, pc}
 8013316:	bf00      	nop
 8013318:	2000a5bc 	.word	0x2000a5bc
 801331c:	20000000 	.word	0x20000000
 8013320:	08011321 	.word	0x08011321
 8013324:	200000a4 	.word	0x200000a4
 8013328:	2000a5c0 	.word	0x2000a5c0
 801332c:	0801131f 	.word	0x0801131f
 8013330:	200000a8 	.word	0x200000a8

08013334 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8013334:	b538      	push	{r3, r4, r5, lr}
 8013336:	4c15      	ldr	r4, [pc, #84]	; (801338c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013338:	7823      	ldrb	r3, [r4, #0]
 801333a:	f3bf 8f5b 	dmb	ish
 801333e:	07da      	lsls	r2, r3, #31
 8013340:	4605      	mov	r5, r0
 8013342:	d40b      	bmi.n	801335c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013344:	4620      	mov	r0, r4
 8013346:	f007 fc7b 	bl	801ac40 <__cxa_guard_acquire>
 801334a:	b138      	cbz	r0, 801335c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801334c:	4620      	mov	r0, r4
 801334e:	f007 fc83 	bl	801ac58 <__cxa_guard_release>
 8013352:	4a0f      	ldr	r2, [pc, #60]	; (8013390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013354:	490f      	ldr	r1, [pc, #60]	; (8013394 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8013356:	4810      	ldr	r0, [pc, #64]	; (8013398 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013358:	f007 fc6b 	bl	801ac32 <__aeabi_atexit>
 801335c:	4c0f      	ldr	r4, [pc, #60]	; (801339c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801335e:	7823      	ldrb	r3, [r4, #0]
 8013360:	f3bf 8f5b 	dmb	ish
 8013364:	07db      	lsls	r3, r3, #31
 8013366:	d40b      	bmi.n	8013380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013368:	4620      	mov	r0, r4
 801336a:	f007 fc69 	bl	801ac40 <__cxa_guard_acquire>
 801336e:	b138      	cbz	r0, 8013380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013370:	4620      	mov	r0, r4
 8013372:	f007 fc71 	bl	801ac58 <__cxa_guard_release>
 8013376:	4a06      	ldr	r2, [pc, #24]	; (8013390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013378:	4909      	ldr	r1, [pc, #36]	; (80133a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801337a:	480a      	ldr	r0, [pc, #40]	; (80133a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801337c:	f007 fc59 	bl	801ac32 <__aeabi_atexit>
 8013380:	4b05      	ldr	r3, [pc, #20]	; (8013398 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013382:	60ab      	str	r3, [r5, #8]
 8013384:	4b07      	ldr	r3, [pc, #28]	; (80133a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013386:	60eb      	str	r3, [r5, #12]
 8013388:	bd38      	pop	{r3, r4, r5, pc}
 801338a:	bf00      	nop
 801338c:	2000a594 	.word	0x2000a594
 8013390:	20000000 	.word	0x20000000
 8013394:	08011325 	.word	0x08011325
 8013398:	2000007c 	.word	0x2000007c
 801339c:	2000a598 	.word	0x2000a598
 80133a0:	08011323 	.word	0x08011323
 80133a4:	20000080 	.word	0x20000080

080133a8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80133a8:	b510      	push	{r4, lr}
 80133aa:	4604      	mov	r4, r0
 80133ac:	f7ff ff88 	bl	80132c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80133b0:	4620      	mov	r0, r4
 80133b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80133b6:	f7ff bfbd 	b.w	8013334 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080133bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80133bc:	b538      	push	{r3, r4, r5, lr}
 80133be:	4c15      	ldr	r4, [pc, #84]	; (8013414 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80133c0:	7823      	ldrb	r3, [r4, #0]
 80133c2:	f3bf 8f5b 	dmb	ish
 80133c6:	07da      	lsls	r2, r3, #31
 80133c8:	4605      	mov	r5, r0
 80133ca:	d40b      	bmi.n	80133e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80133cc:	4620      	mov	r0, r4
 80133ce:	f007 fc37 	bl	801ac40 <__cxa_guard_acquire>
 80133d2:	b138      	cbz	r0, 80133e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80133d4:	4620      	mov	r0, r4
 80133d6:	f007 fc3f 	bl	801ac58 <__cxa_guard_release>
 80133da:	4a0f      	ldr	r2, [pc, #60]	; (8013418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80133dc:	490f      	ldr	r1, [pc, #60]	; (801341c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80133de:	4810      	ldr	r0, [pc, #64]	; (8013420 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80133e0:	f007 fc27 	bl	801ac32 <__aeabi_atexit>
 80133e4:	4c0f      	ldr	r4, [pc, #60]	; (8013424 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80133e6:	7823      	ldrb	r3, [r4, #0]
 80133e8:	f3bf 8f5b 	dmb	ish
 80133ec:	07db      	lsls	r3, r3, #31
 80133ee:	d40b      	bmi.n	8013408 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80133f0:	4620      	mov	r0, r4
 80133f2:	f007 fc25 	bl	801ac40 <__cxa_guard_acquire>
 80133f6:	b138      	cbz	r0, 8013408 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80133f8:	4620      	mov	r0, r4
 80133fa:	f007 fc2d 	bl	801ac58 <__cxa_guard_release>
 80133fe:	4a06      	ldr	r2, [pc, #24]	; (8013418 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013400:	4909      	ldr	r1, [pc, #36]	; (8013428 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8013402:	480a      	ldr	r0, [pc, #40]	; (801342c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013404:	f007 fc15 	bl	801ac32 <__aeabi_atexit>
 8013408:	4b05      	ldr	r3, [pc, #20]	; (8013420 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801340a:	622b      	str	r3, [r5, #32]
 801340c:	4b07      	ldr	r3, [pc, #28]	; (801342c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801340e:	626b      	str	r3, [r5, #36]	; 0x24
 8013410:	bd38      	pop	{r3, r4, r5, pc}
 8013412:	bf00      	nop
 8013414:	2000a5c4 	.word	0x2000a5c4
 8013418:	20000000 	.word	0x20000000
 801341c:	08011319 	.word	0x08011319
 8013420:	200000ac 	.word	0x200000ac
 8013424:	2000a5c8 	.word	0x2000a5c8
 8013428:	08011317 	.word	0x08011317
 801342c:	200000b0 	.word	0x200000b0

08013430 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013430:	b538      	push	{r3, r4, r5, lr}
 8013432:	4c15      	ldr	r4, [pc, #84]	; (8013488 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8013434:	7823      	ldrb	r3, [r4, #0]
 8013436:	f3bf 8f5b 	dmb	ish
 801343a:	07da      	lsls	r2, r3, #31
 801343c:	4605      	mov	r5, r0
 801343e:	d40b      	bmi.n	8013458 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013440:	4620      	mov	r0, r4
 8013442:	f007 fbfd 	bl	801ac40 <__cxa_guard_acquire>
 8013446:	b138      	cbz	r0, 8013458 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013448:	4620      	mov	r0, r4
 801344a:	f007 fc05 	bl	801ac58 <__cxa_guard_release>
 801344e:	4a0f      	ldr	r2, [pc, #60]	; (801348c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013450:	490f      	ldr	r1, [pc, #60]	; (8013490 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8013452:	4810      	ldr	r0, [pc, #64]	; (8013494 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013454:	f007 fbed 	bl	801ac32 <__aeabi_atexit>
 8013458:	4c0f      	ldr	r4, [pc, #60]	; (8013498 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801345a:	7823      	ldrb	r3, [r4, #0]
 801345c:	f3bf 8f5b 	dmb	ish
 8013460:	07db      	lsls	r3, r3, #31
 8013462:	d40b      	bmi.n	801347c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013464:	4620      	mov	r0, r4
 8013466:	f007 fbeb 	bl	801ac40 <__cxa_guard_acquire>
 801346a:	b138      	cbz	r0, 801347c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801346c:	4620      	mov	r0, r4
 801346e:	f007 fbf3 	bl	801ac58 <__cxa_guard_release>
 8013472:	4a06      	ldr	r2, [pc, #24]	; (801348c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013474:	4909      	ldr	r1, [pc, #36]	; (801349c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8013476:	480a      	ldr	r0, [pc, #40]	; (80134a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013478:	f007 fbdb 	bl	801ac32 <__aeabi_atexit>
 801347c:	4b05      	ldr	r3, [pc, #20]	; (8013494 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801347e:	61ab      	str	r3, [r5, #24]
 8013480:	4b07      	ldr	r3, [pc, #28]	; (80134a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013482:	61eb      	str	r3, [r5, #28]
 8013484:	bd38      	pop	{r3, r4, r5, pc}
 8013486:	bf00      	nop
 8013488:	2000a59c 	.word	0x2000a59c
 801348c:	20000000 	.word	0x20000000
 8013490:	0801131d 	.word	0x0801131d
 8013494:	20000084 	.word	0x20000084
 8013498:	2000a5a0 	.word	0x2000a5a0
 801349c:	0801131b 	.word	0x0801131b
 80134a0:	20000088 	.word	0x20000088

080134a4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80134a4:	b510      	push	{r4, lr}
 80134a6:	4604      	mov	r4, r0
 80134a8:	f7ff ff88 	bl	80133bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80134ac:	4620      	mov	r0, r4
 80134ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80134b2:	f7ff bfbd 	b.w	8013430 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080134b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80134b8:	b538      	push	{r3, r4, r5, lr}
 80134ba:	4c15      	ldr	r4, [pc, #84]	; (8013510 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80134bc:	7823      	ldrb	r3, [r4, #0]
 80134be:	f3bf 8f5b 	dmb	ish
 80134c2:	07da      	lsls	r2, r3, #31
 80134c4:	4605      	mov	r5, r0
 80134c6:	d40b      	bmi.n	80134e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80134c8:	4620      	mov	r0, r4
 80134ca:	f007 fbb9 	bl	801ac40 <__cxa_guard_acquire>
 80134ce:	b138      	cbz	r0, 80134e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80134d0:	4620      	mov	r0, r4
 80134d2:	f007 fbc1 	bl	801ac58 <__cxa_guard_release>
 80134d6:	4a0f      	ldr	r2, [pc, #60]	; (8013514 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80134d8:	490f      	ldr	r1, [pc, #60]	; (8013518 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80134da:	4810      	ldr	r0, [pc, #64]	; (801351c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80134dc:	f007 fba9 	bl	801ac32 <__aeabi_atexit>
 80134e0:	4c0f      	ldr	r4, [pc, #60]	; (8013520 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80134e2:	7823      	ldrb	r3, [r4, #0]
 80134e4:	f3bf 8f5b 	dmb	ish
 80134e8:	07db      	lsls	r3, r3, #31
 80134ea:	d40b      	bmi.n	8013504 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80134ec:	4620      	mov	r0, r4
 80134ee:	f007 fba7 	bl	801ac40 <__cxa_guard_acquire>
 80134f2:	b138      	cbz	r0, 8013504 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80134f4:	4620      	mov	r0, r4
 80134f6:	f007 fbaf 	bl	801ac58 <__cxa_guard_release>
 80134fa:	4a06      	ldr	r2, [pc, #24]	; (8013514 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80134fc:	4909      	ldr	r1, [pc, #36]	; (8013524 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80134fe:	480a      	ldr	r0, [pc, #40]	; (8013528 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013500:	f007 fb97 	bl	801ac32 <__aeabi_atexit>
 8013504:	4b05      	ldr	r3, [pc, #20]	; (801351c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013506:	632b      	str	r3, [r5, #48]	; 0x30
 8013508:	4b07      	ldr	r3, [pc, #28]	; (8013528 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801350a:	636b      	str	r3, [r5, #52]	; 0x34
 801350c:	bd38      	pop	{r3, r4, r5, pc}
 801350e:	bf00      	nop
 8013510:	2000a5d4 	.word	0x2000a5d4
 8013514:	20000000 	.word	0x20000000
 8013518:	08011311 	.word	0x08011311
 801351c:	200000bc 	.word	0x200000bc
 8013520:	2000a5d8 	.word	0x2000a5d8
 8013524:	0801130f 	.word	0x0801130f
 8013528:	200000c0 	.word	0x200000c0

0801352c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801352c:	b538      	push	{r3, r4, r5, lr}
 801352e:	4c15      	ldr	r4, [pc, #84]	; (8013584 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013530:	7823      	ldrb	r3, [r4, #0]
 8013532:	f3bf 8f5b 	dmb	ish
 8013536:	07da      	lsls	r2, r3, #31
 8013538:	4605      	mov	r5, r0
 801353a:	d40b      	bmi.n	8013554 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801353c:	4620      	mov	r0, r4
 801353e:	f007 fb7f 	bl	801ac40 <__cxa_guard_acquire>
 8013542:	b138      	cbz	r0, 8013554 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013544:	4620      	mov	r0, r4
 8013546:	f007 fb87 	bl	801ac58 <__cxa_guard_release>
 801354a:	4a0f      	ldr	r2, [pc, #60]	; (8013588 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801354c:	490f      	ldr	r1, [pc, #60]	; (801358c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801354e:	4810      	ldr	r0, [pc, #64]	; (8013590 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013550:	f007 fb6f 	bl	801ac32 <__aeabi_atexit>
 8013554:	4c0f      	ldr	r4, [pc, #60]	; (8013594 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8013556:	7823      	ldrb	r3, [r4, #0]
 8013558:	f3bf 8f5b 	dmb	ish
 801355c:	07db      	lsls	r3, r3, #31
 801355e:	d40b      	bmi.n	8013578 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013560:	4620      	mov	r0, r4
 8013562:	f007 fb6d 	bl	801ac40 <__cxa_guard_acquire>
 8013566:	b138      	cbz	r0, 8013578 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013568:	4620      	mov	r0, r4
 801356a:	f007 fb75 	bl	801ac58 <__cxa_guard_release>
 801356e:	4a06      	ldr	r2, [pc, #24]	; (8013588 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013570:	4909      	ldr	r1, [pc, #36]	; (8013598 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8013572:	480a      	ldr	r0, [pc, #40]	; (801359c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013574:	f007 fb5d 	bl	801ac32 <__aeabi_atexit>
 8013578:	4b05      	ldr	r3, [pc, #20]	; (8013590 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801357a:	62ab      	str	r3, [r5, #40]	; 0x28
 801357c:	4b07      	ldr	r3, [pc, #28]	; (801359c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801357e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8013580:	bd38      	pop	{r3, r4, r5, pc}
 8013582:	bf00      	nop
 8013584:	2000a5a4 	.word	0x2000a5a4
 8013588:	20000000 	.word	0x20000000
 801358c:	08011315 	.word	0x08011315
 8013590:	2000008c 	.word	0x2000008c
 8013594:	2000a5a8 	.word	0x2000a5a8
 8013598:	08011313 	.word	0x08011313
 801359c:	20000090 	.word	0x20000090

080135a0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80135a0:	b510      	push	{r4, lr}
 80135a2:	4604      	mov	r4, r0
 80135a4:	f7ff ff88 	bl	80134b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80135a8:	4620      	mov	r0, r4
 80135aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80135ae:	f7ff bfbd 	b.w	801352c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080135b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80135b4:	b538      	push	{r3, r4, r5, lr}
 80135b6:	4c15      	ldr	r4, [pc, #84]	; (801360c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80135b8:	7823      	ldrb	r3, [r4, #0]
 80135ba:	f3bf 8f5b 	dmb	ish
 80135be:	07da      	lsls	r2, r3, #31
 80135c0:	4605      	mov	r5, r0
 80135c2:	d40b      	bmi.n	80135dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80135c4:	4620      	mov	r0, r4
 80135c6:	f007 fb3b 	bl	801ac40 <__cxa_guard_acquire>
 80135ca:	b138      	cbz	r0, 80135dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80135cc:	4620      	mov	r0, r4
 80135ce:	f007 fb43 	bl	801ac58 <__cxa_guard_release>
 80135d2:	4a0f      	ldr	r2, [pc, #60]	; (8013610 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80135d4:	490f      	ldr	r1, [pc, #60]	; (8013614 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80135d6:	4810      	ldr	r0, [pc, #64]	; (8013618 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80135d8:	f007 fb2b 	bl	801ac32 <__aeabi_atexit>
 80135dc:	4c0f      	ldr	r4, [pc, #60]	; (801361c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80135de:	7823      	ldrb	r3, [r4, #0]
 80135e0:	f3bf 8f5b 	dmb	ish
 80135e4:	07db      	lsls	r3, r3, #31
 80135e6:	d40b      	bmi.n	8013600 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80135e8:	4620      	mov	r0, r4
 80135ea:	f007 fb29 	bl	801ac40 <__cxa_guard_acquire>
 80135ee:	b138      	cbz	r0, 8013600 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80135f0:	4620      	mov	r0, r4
 80135f2:	f007 fb31 	bl	801ac58 <__cxa_guard_release>
 80135f6:	4a06      	ldr	r2, [pc, #24]	; (8013610 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80135f8:	4909      	ldr	r1, [pc, #36]	; (8013620 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80135fa:	480a      	ldr	r0, [pc, #40]	; (8013624 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80135fc:	f007 fb19 	bl	801ac32 <__aeabi_atexit>
 8013600:	4b05      	ldr	r3, [pc, #20]	; (8013618 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013602:	652b      	str	r3, [r5, #80]	; 0x50
 8013604:	4b07      	ldr	r3, [pc, #28]	; (8013624 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013606:	656b      	str	r3, [r5, #84]	; 0x54
 8013608:	bd38      	pop	{r3, r4, r5, pc}
 801360a:	bf00      	nop
 801360c:	2000a5dc 	.word	0x2000a5dc
 8013610:	20000000 	.word	0x20000000
 8013614:	08011301 	.word	0x08011301
 8013618:	200000c4 	.word	0x200000c4
 801361c:	2000a5e0 	.word	0x2000a5e0
 8013620:	080112ff 	.word	0x080112ff
 8013624:	200000c8 	.word	0x200000c8

08013628 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013628:	b538      	push	{r3, r4, r5, lr}
 801362a:	4c15      	ldr	r4, [pc, #84]	; (8013680 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801362c:	7823      	ldrb	r3, [r4, #0]
 801362e:	f3bf 8f5b 	dmb	ish
 8013632:	07da      	lsls	r2, r3, #31
 8013634:	4605      	mov	r5, r0
 8013636:	d40b      	bmi.n	8013650 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013638:	4620      	mov	r0, r4
 801363a:	f007 fb01 	bl	801ac40 <__cxa_guard_acquire>
 801363e:	b138      	cbz	r0, 8013650 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013640:	4620      	mov	r0, r4
 8013642:	f007 fb09 	bl	801ac58 <__cxa_guard_release>
 8013646:	4a0f      	ldr	r2, [pc, #60]	; (8013684 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013648:	490f      	ldr	r1, [pc, #60]	; (8013688 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801364a:	4810      	ldr	r0, [pc, #64]	; (801368c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801364c:	f007 faf1 	bl	801ac32 <__aeabi_atexit>
 8013650:	4c0f      	ldr	r4, [pc, #60]	; (8013690 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8013652:	7823      	ldrb	r3, [r4, #0]
 8013654:	f3bf 8f5b 	dmb	ish
 8013658:	07db      	lsls	r3, r3, #31
 801365a:	d40b      	bmi.n	8013674 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801365c:	4620      	mov	r0, r4
 801365e:	f007 faef 	bl	801ac40 <__cxa_guard_acquire>
 8013662:	b138      	cbz	r0, 8013674 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013664:	4620      	mov	r0, r4
 8013666:	f007 faf7 	bl	801ac58 <__cxa_guard_release>
 801366a:	4a06      	ldr	r2, [pc, #24]	; (8013684 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801366c:	4909      	ldr	r1, [pc, #36]	; (8013694 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801366e:	480a      	ldr	r0, [pc, #40]	; (8013698 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013670:	f007 fadf 	bl	801ac32 <__aeabi_atexit>
 8013674:	4b05      	ldr	r3, [pc, #20]	; (801368c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013676:	64ab      	str	r3, [r5, #72]	; 0x48
 8013678:	4b07      	ldr	r3, [pc, #28]	; (8013698 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801367a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801367c:	bd38      	pop	{r3, r4, r5, pc}
 801367e:	bf00      	nop
 8013680:	2000a5e4 	.word	0x2000a5e4
 8013684:	20000000 	.word	0x20000000
 8013688:	08011305 	.word	0x08011305
 801368c:	200000cc 	.word	0x200000cc
 8013690:	2000a5e8 	.word	0x2000a5e8
 8013694:	08011303 	.word	0x08011303
 8013698:	200000d0 	.word	0x200000d0

0801369c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801369c:	b538      	push	{r3, r4, r5, lr}
 801369e:	4c15      	ldr	r4, [pc, #84]	; (80136f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80136a0:	7823      	ldrb	r3, [r4, #0]
 80136a2:	f3bf 8f5b 	dmb	ish
 80136a6:	07da      	lsls	r2, r3, #31
 80136a8:	4605      	mov	r5, r0
 80136aa:	d40b      	bmi.n	80136c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80136ac:	4620      	mov	r0, r4
 80136ae:	f007 fac7 	bl	801ac40 <__cxa_guard_acquire>
 80136b2:	b138      	cbz	r0, 80136c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80136b4:	4620      	mov	r0, r4
 80136b6:	f007 facf 	bl	801ac58 <__cxa_guard_release>
 80136ba:	4a0f      	ldr	r2, [pc, #60]	; (80136f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80136bc:	490f      	ldr	r1, [pc, #60]	; (80136fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80136be:	4810      	ldr	r0, [pc, #64]	; (8013700 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80136c0:	f007 fab7 	bl	801ac32 <__aeabi_atexit>
 80136c4:	4c0f      	ldr	r4, [pc, #60]	; (8013704 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80136c6:	7823      	ldrb	r3, [r4, #0]
 80136c8:	f3bf 8f5b 	dmb	ish
 80136cc:	07db      	lsls	r3, r3, #31
 80136ce:	d40b      	bmi.n	80136e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80136d0:	4620      	mov	r0, r4
 80136d2:	f007 fab5 	bl	801ac40 <__cxa_guard_acquire>
 80136d6:	b138      	cbz	r0, 80136e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80136d8:	4620      	mov	r0, r4
 80136da:	f007 fabd 	bl	801ac58 <__cxa_guard_release>
 80136de:	4a06      	ldr	r2, [pc, #24]	; (80136f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80136e0:	4909      	ldr	r1, [pc, #36]	; (8013708 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80136e2:	480a      	ldr	r0, [pc, #40]	; (801370c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80136e4:	f007 faa5 	bl	801ac32 <__aeabi_atexit>
 80136e8:	4b05      	ldr	r3, [pc, #20]	; (8013700 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80136ea:	642b      	str	r3, [r5, #64]	; 0x40
 80136ec:	4b07      	ldr	r3, [pc, #28]	; (801370c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80136ee:	646b      	str	r3, [r5, #68]	; 0x44
 80136f0:	bd38      	pop	{r3, r4, r5, pc}
 80136f2:	bf00      	nop
 80136f4:	2000a5ac 	.word	0x2000a5ac
 80136f8:	20000000 	.word	0x20000000
 80136fc:	08011309 	.word	0x08011309
 8013700:	20000094 	.word	0x20000094
 8013704:	2000a5b0 	.word	0x2000a5b0
 8013708:	08011307 	.word	0x08011307
 801370c:	20000098 	.word	0x20000098

08013710 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8013710:	b538      	push	{r3, r4, r5, lr}
 8013712:	4c15      	ldr	r4, [pc, #84]	; (8013768 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8013714:	7823      	ldrb	r3, [r4, #0]
 8013716:	f3bf 8f5b 	dmb	ish
 801371a:	07da      	lsls	r2, r3, #31
 801371c:	4605      	mov	r5, r0
 801371e:	d40b      	bmi.n	8013738 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013720:	4620      	mov	r0, r4
 8013722:	f007 fa8d 	bl	801ac40 <__cxa_guard_acquire>
 8013726:	b138      	cbz	r0, 8013738 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013728:	4620      	mov	r0, r4
 801372a:	f007 fa95 	bl	801ac58 <__cxa_guard_release>
 801372e:	4a0f      	ldr	r2, [pc, #60]	; (801376c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013730:	490f      	ldr	r1, [pc, #60]	; (8013770 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8013732:	4810      	ldr	r0, [pc, #64]	; (8013774 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013734:	f007 fa7d 	bl	801ac32 <__aeabi_atexit>
 8013738:	4c0f      	ldr	r4, [pc, #60]	; (8013778 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801373a:	7823      	ldrb	r3, [r4, #0]
 801373c:	f3bf 8f5b 	dmb	ish
 8013740:	07db      	lsls	r3, r3, #31
 8013742:	d40b      	bmi.n	801375c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013744:	4620      	mov	r0, r4
 8013746:	f007 fa7b 	bl	801ac40 <__cxa_guard_acquire>
 801374a:	b138      	cbz	r0, 801375c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801374c:	4620      	mov	r0, r4
 801374e:	f007 fa83 	bl	801ac58 <__cxa_guard_release>
 8013752:	4a06      	ldr	r2, [pc, #24]	; (801376c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013754:	4909      	ldr	r1, [pc, #36]	; (801377c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8013756:	480a      	ldr	r0, [pc, #40]	; (8013780 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013758:	f007 fa6b 	bl	801ac32 <__aeabi_atexit>
 801375c:	4b05      	ldr	r3, [pc, #20]	; (8013774 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801375e:	63ab      	str	r3, [r5, #56]	; 0x38
 8013760:	4b07      	ldr	r3, [pc, #28]	; (8013780 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013762:	63eb      	str	r3, [r5, #60]	; 0x3c
 8013764:	bd38      	pop	{r3, r4, r5, pc}
 8013766:	bf00      	nop
 8013768:	2000a5cc 	.word	0x2000a5cc
 801376c:	20000000 	.word	0x20000000
 8013770:	0801130d 	.word	0x0801130d
 8013774:	200000b4 	.word	0x200000b4
 8013778:	2000a5d0 	.word	0x2000a5d0
 801377c:	0801130b 	.word	0x0801130b
 8013780:	200000b8 	.word	0x200000b8

08013784 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8013784:	b510      	push	{r4, lr}
 8013786:	4604      	mov	r4, r0
 8013788:	f7ff ff14 	bl	80135b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801378c:	4620      	mov	r0, r4
 801378e:	f7ff ff85 	bl	801369c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8013792:	4620      	mov	r0, r4
 8013794:	f7ff ff48 	bl	8013628 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8013798:	4620      	mov	r0, r4
 801379a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801379e:	f7ff bfb7 	b.w	8013710 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080137a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80137a4:	b538      	push	{r3, r4, r5, lr}
 80137a6:	4c15      	ldr	r4, [pc, #84]	; (80137fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80137a8:	7823      	ldrb	r3, [r4, #0]
 80137aa:	f3bf 8f5b 	dmb	ish
 80137ae:	07da      	lsls	r2, r3, #31
 80137b0:	4605      	mov	r5, r0
 80137b2:	d40b      	bmi.n	80137cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80137b4:	4620      	mov	r0, r4
 80137b6:	f007 fa43 	bl	801ac40 <__cxa_guard_acquire>
 80137ba:	b138      	cbz	r0, 80137cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80137bc:	4620      	mov	r0, r4
 80137be:	f007 fa4b 	bl	801ac58 <__cxa_guard_release>
 80137c2:	4a0f      	ldr	r2, [pc, #60]	; (8013800 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80137c4:	490f      	ldr	r1, [pc, #60]	; (8013804 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80137c6:	4810      	ldr	r0, [pc, #64]	; (8013808 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80137c8:	f007 fa33 	bl	801ac32 <__aeabi_atexit>
 80137cc:	4c0f      	ldr	r4, [pc, #60]	; (801380c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80137ce:	7823      	ldrb	r3, [r4, #0]
 80137d0:	f3bf 8f5b 	dmb	ish
 80137d4:	07db      	lsls	r3, r3, #31
 80137d6:	d40b      	bmi.n	80137f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80137d8:	4620      	mov	r0, r4
 80137da:	f007 fa31 	bl	801ac40 <__cxa_guard_acquire>
 80137de:	b138      	cbz	r0, 80137f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80137e0:	4620      	mov	r0, r4
 80137e2:	f007 fa39 	bl	801ac58 <__cxa_guard_release>
 80137e6:	4a06      	ldr	r2, [pc, #24]	; (8013800 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80137e8:	4909      	ldr	r1, [pc, #36]	; (8013810 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80137ea:	480a      	ldr	r0, [pc, #40]	; (8013814 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80137ec:	f007 fa21 	bl	801ac32 <__aeabi_atexit>
 80137f0:	4b05      	ldr	r3, [pc, #20]	; (8013808 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80137f2:	662b      	str	r3, [r5, #96]	; 0x60
 80137f4:	4b07      	ldr	r3, [pc, #28]	; (8013814 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80137f6:	666b      	str	r3, [r5, #100]	; 0x64
 80137f8:	bd38      	pop	{r3, r4, r5, pc}
 80137fa:	bf00      	nop
 80137fc:	2000a5b4 	.word	0x2000a5b4
 8013800:	20000000 	.word	0x20000000
 8013804:	080112f9 	.word	0x080112f9
 8013808:	2000009c 	.word	0x2000009c
 801380c:	2000a5b8 	.word	0x2000a5b8
 8013810:	080112f7 	.word	0x080112f7
 8013814:	200000a0 	.word	0x200000a0

08013818 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8013818:	b538      	push	{r3, r4, r5, lr}
 801381a:	4c15      	ldr	r4, [pc, #84]	; (8013870 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801381c:	7823      	ldrb	r3, [r4, #0]
 801381e:	f3bf 8f5b 	dmb	ish
 8013822:	07da      	lsls	r2, r3, #31
 8013824:	4605      	mov	r5, r0
 8013826:	d40b      	bmi.n	8013840 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013828:	4620      	mov	r0, r4
 801382a:	f007 fa09 	bl	801ac40 <__cxa_guard_acquire>
 801382e:	b138      	cbz	r0, 8013840 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013830:	4620      	mov	r0, r4
 8013832:	f007 fa11 	bl	801ac58 <__cxa_guard_release>
 8013836:	4a0f      	ldr	r2, [pc, #60]	; (8013874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013838:	490f      	ldr	r1, [pc, #60]	; (8013878 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801383a:	4810      	ldr	r0, [pc, #64]	; (801387c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801383c:	f007 f9f9 	bl	801ac32 <__aeabi_atexit>
 8013840:	4c0f      	ldr	r4, [pc, #60]	; (8013880 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8013842:	7823      	ldrb	r3, [r4, #0]
 8013844:	f3bf 8f5b 	dmb	ish
 8013848:	07db      	lsls	r3, r3, #31
 801384a:	d40b      	bmi.n	8013864 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801384c:	4620      	mov	r0, r4
 801384e:	f007 f9f7 	bl	801ac40 <__cxa_guard_acquire>
 8013852:	b138      	cbz	r0, 8013864 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8013854:	4620      	mov	r0, r4
 8013856:	f007 f9ff 	bl	801ac58 <__cxa_guard_release>
 801385a:	4a06      	ldr	r2, [pc, #24]	; (8013874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801385c:	4909      	ldr	r1, [pc, #36]	; (8013884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801385e:	480a      	ldr	r0, [pc, #40]	; (8013888 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013860:	f007 f9e7 	bl	801ac32 <__aeabi_atexit>
 8013864:	4b05      	ldr	r3, [pc, #20]	; (801387c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8013866:	65ab      	str	r3, [r5, #88]	; 0x58
 8013868:	4b07      	ldr	r3, [pc, #28]	; (8013888 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801386a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801386c:	bd38      	pop	{r3, r4, r5, pc}
 801386e:	bf00      	nop
 8013870:	2000a58c 	.word	0x2000a58c
 8013874:	20000000 	.word	0x20000000
 8013878:	080112fd 	.word	0x080112fd
 801387c:	20000074 	.word	0x20000074
 8013880:	2000a590 	.word	0x2000a590
 8013884:	080112fb 	.word	0x080112fb
 8013888:	20000078 	.word	0x20000078

0801388c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801388c:	b510      	push	{r4, lr}
 801388e:	4604      	mov	r4, r0
 8013890:	f7ff ff88 	bl	80137a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8013894:	4620      	mov	r0, r4
 8013896:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801389a:	f7ff bfbd 	b.w	8013818 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080138a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80138a0:	b538      	push	{r3, r4, r5, lr}
 80138a2:	4c15      	ldr	r4, [pc, #84]	; (80138f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80138a4:	7823      	ldrb	r3, [r4, #0]
 80138a6:	f3bf 8f5b 	dmb	ish
 80138aa:	07da      	lsls	r2, r3, #31
 80138ac:	4605      	mov	r5, r0
 80138ae:	d40b      	bmi.n	80138c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80138b0:	4620      	mov	r0, r4
 80138b2:	f007 f9c5 	bl	801ac40 <__cxa_guard_acquire>
 80138b6:	b138      	cbz	r0, 80138c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80138b8:	4620      	mov	r0, r4
 80138ba:	f007 f9cd 	bl	801ac58 <__cxa_guard_release>
 80138be:	4a0f      	ldr	r2, [pc, #60]	; (80138fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80138c0:	490f      	ldr	r1, [pc, #60]	; (8013900 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80138c2:	4810      	ldr	r0, [pc, #64]	; (8013904 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80138c4:	f007 f9b5 	bl	801ac32 <__aeabi_atexit>
 80138c8:	4c0f      	ldr	r4, [pc, #60]	; (8013908 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80138ca:	7823      	ldrb	r3, [r4, #0]
 80138cc:	f3bf 8f5b 	dmb	ish
 80138d0:	07db      	lsls	r3, r3, #31
 80138d2:	d40b      	bmi.n	80138ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80138d4:	4620      	mov	r0, r4
 80138d6:	f007 f9b3 	bl	801ac40 <__cxa_guard_acquire>
 80138da:	b138      	cbz	r0, 80138ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80138dc:	4620      	mov	r0, r4
 80138de:	f007 f9bb 	bl	801ac58 <__cxa_guard_release>
 80138e2:	4a06      	ldr	r2, [pc, #24]	; (80138fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80138e4:	4909      	ldr	r1, [pc, #36]	; (801390c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80138e6:	480a      	ldr	r0, [pc, #40]	; (8013910 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80138e8:	f007 f9a3 	bl	801ac32 <__aeabi_atexit>
 80138ec:	4b05      	ldr	r3, [pc, #20]	; (8013904 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80138ee:	672b      	str	r3, [r5, #112]	; 0x70
 80138f0:	4b07      	ldr	r3, [pc, #28]	; (8013910 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80138f2:	676b      	str	r3, [r5, #116]	; 0x74
 80138f4:	bd38      	pop	{r3, r4, r5, pc}
 80138f6:	bf00      	nop
 80138f8:	2000a584 	.word	0x2000a584
 80138fc:	20000000 	.word	0x20000000
 8013900:	080112f1 	.word	0x080112f1
 8013904:	2000006c 	.word	0x2000006c
 8013908:	2000a588 	.word	0x2000a588
 801390c:	080112ef 	.word	0x080112ef
 8013910:	20000070 	.word	0x20000070

08013914 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8013914:	b538      	push	{r3, r4, r5, lr}
 8013916:	4c15      	ldr	r4, [pc, #84]	; (801396c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8013918:	7823      	ldrb	r3, [r4, #0]
 801391a:	f3bf 8f5b 	dmb	ish
 801391e:	07da      	lsls	r2, r3, #31
 8013920:	4605      	mov	r5, r0
 8013922:	d40b      	bmi.n	801393c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8013924:	4620      	mov	r0, r4
 8013926:	f007 f98b 	bl	801ac40 <__cxa_guard_acquire>
 801392a:	b138      	cbz	r0, 801393c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801392c:	4620      	mov	r0, r4
 801392e:	f007 f993 	bl	801ac58 <__cxa_guard_release>
 8013932:	4a0f      	ldr	r2, [pc, #60]	; (8013970 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8013934:	490f      	ldr	r1, [pc, #60]	; (8013974 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8013936:	4810      	ldr	r0, [pc, #64]	; (8013978 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8013938:	f007 f97b 	bl	801ac32 <__aeabi_atexit>
 801393c:	4c0f      	ldr	r4, [pc, #60]	; (801397c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801393e:	7823      	ldrb	r3, [r4, #0]
 8013940:	f3bf 8f5b 	dmb	ish
 8013944:	07db      	lsls	r3, r3, #31
 8013946:	d40b      	bmi.n	8013960 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8013948:	4620      	mov	r0, r4
 801394a:	f007 f979 	bl	801ac40 <__cxa_guard_acquire>
 801394e:	b138      	cbz	r0, 8013960 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8013950:	4620      	mov	r0, r4
 8013952:	f007 f981 	bl	801ac58 <__cxa_guard_release>
 8013956:	4a06      	ldr	r2, [pc, #24]	; (8013970 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8013958:	4909      	ldr	r1, [pc, #36]	; (8013980 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801395a:	480a      	ldr	r0, [pc, #40]	; (8013984 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801395c:	f007 f969 	bl	801ac32 <__aeabi_atexit>
 8013960:	4b05      	ldr	r3, [pc, #20]	; (8013978 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8013962:	66ab      	str	r3, [r5, #104]	; 0x68
 8013964:	4b07      	ldr	r3, [pc, #28]	; (8013984 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8013966:	66eb      	str	r3, [r5, #108]	; 0x6c
 8013968:	bd38      	pop	{r3, r4, r5, pc}
 801396a:	bf00      	nop
 801396c:	2000a57c 	.word	0x2000a57c
 8013970:	20000000 	.word	0x20000000
 8013974:	080112f5 	.word	0x080112f5
 8013978:	20000064 	.word	0x20000064
 801397c:	2000a580 	.word	0x2000a580
 8013980:	080112f3 	.word	0x080112f3
 8013984:	20000068 	.word	0x20000068

08013988 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8013988:	b510      	push	{r4, lr}
 801398a:	4604      	mov	r4, r0
 801398c:	f7ff ff88 	bl	80138a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8013990:	4620      	mov	r0, r4
 8013992:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013996:	f7ff bfbd 	b.w	8013914 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801399a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801399a:	b510      	push	{r4, lr}
 801399c:	4604      	mov	r4, r0
 801399e:	f7ff fff3 	bl	8013988 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80139a2:	4620      	mov	r0, r4
 80139a4:	f7ff ff72 	bl	801388c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80139a8:	4620      	mov	r0, r4
 80139aa:	f7ff fdf9 	bl	80135a0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80139ae:	4620      	mov	r0, r4
 80139b0:	f7ff fcfa 	bl	80133a8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80139b4:	4620      	mov	r0, r4
 80139b6:	f7ff fd75 	bl	80134a4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80139ba:	4620      	mov	r0, r4
 80139bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80139c0:	f7ff bee0 	b.w	8013784 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080139c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80139c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139c8:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80139cc:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80139d0:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80139d4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80139d8:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80139dc:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80139e0:	8808      	ldrh	r0, [r1, #0]
 80139e2:	fb0e 4708 	mla	r7, lr, r8, r4
 80139e6:	f1be 0f00 	cmp.w	lr, #0
 80139ea:	eb02 0a07 	add.w	sl, r2, r7
 80139ee:	db37      	blt.n	8013a60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80139f0:	45f3      	cmp	fp, lr
 80139f2:	dd35      	ble.n	8013a60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80139f4:	2c00      	cmp	r4, #0
 80139f6:	db31      	blt.n	8013a5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80139f8:	45a0      	cmp	r8, r4
 80139fa:	dd2f      	ble.n	8013a5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80139fc:	5dd2      	ldrb	r2, [r2, r7]
 80139fe:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8013a02:	1c62      	adds	r2, r4, #1
 8013a04:	d42f      	bmi.n	8013a66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013a06:	4590      	cmp	r8, r2
 8013a08:	dd2d      	ble.n	8013a66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013a0a:	b366      	cbz	r6, 8013a66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013a0c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8013a10:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013a14:	f11e 0e01 	adds.w	lr, lr, #1
 8013a18:	d429      	bmi.n	8013a6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8013a1a:	45f3      	cmp	fp, lr
 8013a1c:	dd27      	ble.n	8013a6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8013a1e:	f1bc 0f00 	cmp.w	ip, #0
 8013a22:	f000 80a1 	beq.w	8013b68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 8013a26:	2c00      	cmp	r4, #0
 8013a28:	db1f      	blt.n	8013a6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8013a2a:	45a0      	cmp	r8, r4
 8013a2c:	dd1d      	ble.n	8013a6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8013a2e:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8013a32:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8013a36:	3401      	adds	r4, #1
 8013a38:	d41c      	bmi.n	8013a74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8013a3a:	45a0      	cmp	r8, r4
 8013a3c:	dd1a      	ble.n	8013a74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8013a3e:	b1de      	cbz	r6, 8013a78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8013a40:	44d0      	add	r8, sl
 8013a42:	f898 2001 	ldrb.w	r2, [r8, #1]
 8013a46:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8013a4a:	2e0f      	cmp	r6, #15
 8013a4c:	d915      	bls.n	8013a7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8013a4e:	4b49      	ldr	r3, [pc, #292]	; (8013b74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8013a50:	4a49      	ldr	r2, [pc, #292]	; (8013b78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8013a52:	484a      	ldr	r0, [pc, #296]	; (8013b7c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8013a54:	f240 11db 	movw	r1, #475	; 0x1db
 8013a58:	f007 f91e 	bl	801ac98 <__assert_func>
 8013a5c:	4681      	mov	r9, r0
 8013a5e:	e7d0      	b.n	8013a02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8013a60:	4607      	mov	r7, r0
 8013a62:	4681      	mov	r9, r0
 8013a64:	e7d6      	b.n	8013a14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8013a66:	4607      	mov	r7, r0
 8013a68:	e7d4      	b.n	8013a14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8013a6a:	4686      	mov	lr, r0
 8013a6c:	e7e3      	b.n	8013a36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8013a6e:	4603      	mov	r3, r0
 8013a70:	4686      	mov	lr, r0
 8013a72:	e7ea      	b.n	8013a4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8013a74:	4603      	mov	r3, r0
 8013a76:	e7e8      	b.n	8013a4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8013a78:	4603      	mov	r3, r0
 8013a7a:	f1bc 0f0f 	cmp.w	ip, #15
 8013a7e:	d8e6      	bhi.n	8013a4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8013a80:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8013a84:	fb16 f80c 	smulbb	r8, r6, ip
 8013a88:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8013a8c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8013a90:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8013a94:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8013a98:	ea44 0909 	orr.w	r9, r4, r9
 8013a9c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8013aa0:	f1cc 0410 	rsb	r4, ip, #16
 8013aa4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013aa8:	1ba4      	subs	r4, r4, r6
 8013aaa:	041a      	lsls	r2, r3, #16
 8013aac:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8013ab0:	ea4a 0707 	orr.w	r7, sl, r7
 8013ab4:	4377      	muls	r7, r6
 8013ab6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8013aba:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8013abe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013ac2:	fb04 7409 	mla	r4, r4, r9, r7
 8013ac6:	4313      	orrs	r3, r2
 8013ac8:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8013acc:	fb08 4303 	mla	r3, r8, r3, r4
 8013ad0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8013ad4:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8013ad8:	4322      	orrs	r2, r4
 8013ada:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8013ade:	fb0c 3202 	mla	r2, ip, r2, r3
 8013ae2:	0d53      	lsrs	r3, r2, #21
 8013ae4:	0952      	lsrs	r2, r2, #5
 8013ae6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013aea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013aee:	431a      	orrs	r2, r3
 8013af0:	b293      	uxth	r3, r2
 8013af2:	b2af      	uxth	r7, r5
 8013af4:	1202      	asrs	r2, r0, #8
 8013af6:	43ed      	mvns	r5, r5
 8013af8:	b2ed      	uxtb	r5, r5
 8013afa:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013afe:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8013b02:	fb12 f205 	smulbb	r2, r2, r5
 8013b06:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013b0a:	fb0c 2c07 	mla	ip, ip, r7, r2
 8013b0e:	00dc      	lsls	r4, r3, #3
 8013b10:	10da      	asrs	r2, r3, #3
 8013b12:	10c6      	asrs	r6, r0, #3
 8013b14:	00c3      	lsls	r3, r0, #3
 8013b16:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013b1a:	b2db      	uxtb	r3, r3
 8013b1c:	fb16 f605 	smulbb	r6, r6, r5
 8013b20:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8013b24:	b2e4      	uxtb	r4, r4
 8013b26:	fb13 f305 	smulbb	r3, r3, r5
 8013b2a:	fa1f fc8c 	uxth.w	ip, ip
 8013b2e:	fb02 6207 	mla	r2, r2, r7, r6
 8013b32:	fb04 3307 	mla	r3, r4, r7, r3
 8013b36:	b296      	uxth	r6, r2
 8013b38:	b29a      	uxth	r2, r3
 8013b3a:	f10c 0301 	add.w	r3, ip, #1
 8013b3e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8013b42:	1c53      	adds	r3, r2, #1
 8013b44:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8013b48:	1c72      	adds	r2, r6, #1
 8013b4a:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8013b4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013b52:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8013b56:	0952      	lsrs	r2, r2, #5
 8013b58:	ea43 030c 	orr.w	r3, r3, ip
 8013b5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013b60:	4313      	orrs	r3, r2
 8013b62:	800b      	strh	r3, [r1, #0]
 8013b64:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b68:	2e0f      	cmp	r6, #15
 8013b6a:	f63f af70 	bhi.w	8013a4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8013b6e:	4603      	mov	r3, r0
 8013b70:	4686      	mov	lr, r0
 8013b72:	e785      	b.n	8013a80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8013b74:	0801eaff 	.word	0x0801eaff
 8013b78:	0801f0d7 	.word	0x0801f0d7
 8013b7c:	0801eacc 	.word	0x0801eacc

08013b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b84:	ed2d 8b08 	vpush	{d8-d11}
 8013b88:	b099      	sub	sp, #100	; 0x64
 8013b8a:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8013b8e:	9215      	str	r2, [sp, #84]	; 0x54
 8013b90:	9309      	str	r3, [sp, #36]	; 0x24
 8013b92:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013b94:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8013b98:	930d      	str	r3, [sp, #52]	; 0x34
 8013b9a:	910c      	str	r1, [sp, #48]	; 0x30
 8013b9c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8013ba0:	9016      	str	r0, [sp, #88]	; 0x58
 8013ba2:	6850      	ldr	r0, [r2, #4]
 8013ba4:	6812      	ldr	r2, [r2, #0]
 8013ba6:	fb00 1303 	mla	r3, r0, r3, r1
 8013baa:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8013bae:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013bb0:	681b      	ldr	r3, [r3, #0]
 8013bb2:	930b      	str	r3, [sp, #44]	; 0x2c
 8013bb4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013bb6:	685e      	ldr	r6, [r3, #4]
 8013bb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013bba:	43db      	mvns	r3, r3
 8013bbc:	b2db      	uxtb	r3, r3
 8013bbe:	eeb0 aa40 	vmov.f32	s20, s0
 8013bc2:	eef0 9a60 	vmov.f32	s19, s1
 8013bc6:	eeb0 9a41 	vmov.f32	s18, s2
 8013bca:	eeb0 8a62 	vmov.f32	s16, s5
 8013bce:	eef0 8a43 	vmov.f32	s17, s6
 8013bd2:	eef0 ba44 	vmov.f32	s23, s8
 8013bd6:	eeb0 ba64 	vmov.f32	s22, s9
 8013bda:	eef0 aa45 	vmov.f32	s21, s10
 8013bde:	3604      	adds	r6, #4
 8013be0:	930a      	str	r3, [sp, #40]	; 0x28
 8013be2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013be4:	2b00      	cmp	r3, #0
 8013be6:	dc03      	bgt.n	8013bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013be8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013bea:	2b00      	cmp	r3, #0
 8013bec:	f340 8225 	ble.w	801403a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8013bf0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013bf2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8013bf6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8013bfa:	1e48      	subs	r0, r1, #1
 8013bfc:	1e57      	subs	r7, r2, #1
 8013bfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c00:	2b00      	cmp	r3, #0
 8013c02:	f340 80e3 	ble.w	8013dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8013c06:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8013c0a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8013c0e:	d406      	bmi.n	8013c1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013c10:	4584      	cmp	ip, r0
 8013c12:	da04      	bge.n	8013c1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013c14:	2b00      	cmp	r3, #0
 8013c16:	db02      	blt.n	8013c1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013c18:	42bb      	cmp	r3, r7
 8013c1a:	f2c0 80d8 	blt.w	8013dce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8013c1e:	f11c 0c01 	adds.w	ip, ip, #1
 8013c22:	f100 80c9 	bmi.w	8013db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8013c26:	4561      	cmp	r1, ip
 8013c28:	f2c0 80c6 	blt.w	8013db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8013c2c:	3301      	adds	r3, #1
 8013c2e:	f100 80c3 	bmi.w	8013db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8013c32:	429a      	cmp	r2, r3
 8013c34:	f2c0 80c0 	blt.w	8013db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8013c38:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8013c3c:	4647      	mov	r7, r8
 8013c3e:	f1bb 0f00 	cmp.w	fp, #0
 8013c42:	f340 80e3 	ble.w	8013e0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013c46:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013c48:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013c4a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8013c4e:	689b      	ldr	r3, [r3, #8]
 8013c50:	ea5f 422a 	movs.w	r2, sl, asr #16
 8013c54:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8013c58:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8013c5c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8013c60:	f100 8121 	bmi.w	8013ea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8013c64:	f103 39ff 	add.w	r9, r3, #4294967295
 8013c68:	454a      	cmp	r2, r9
 8013c6a:	f280 811c 	bge.w	8013ea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8013c6e:	f1bc 0f00 	cmp.w	ip, #0
 8013c72:	f2c0 8118 	blt.w	8013ea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8013c76:	f10e 39ff 	add.w	r9, lr, #4294967295
 8013c7a:	45cc      	cmp	ip, r9
 8013c7c:	f280 8113 	bge.w	8013ea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 8013c80:	b21b      	sxth	r3, r3
 8013c82:	fb0c 2203 	mla	r2, ip, r3, r2
 8013c86:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8013c88:	eb04 0902 	add.w	r9, r4, r2
 8013c8c:	5ca2      	ldrb	r2, [r4, r2]
 8013c8e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8013c92:	2800      	cmp	r0, #0
 8013c94:	f000 80fe 	beq.w	8013e94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8013c98:	f899 2001 	ldrb.w	r2, [r9, #1]
 8013c9c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013ca0:	9211      	str	r2, [sp, #68]	; 0x44
 8013ca2:	b151      	cbz	r1, 8013cba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8013ca4:	eb09 0203 	add.w	r2, r9, r3
 8013ca8:	f819 3003 	ldrb.w	r3, [r9, r3]
 8013cac:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013cb0:	930f      	str	r3, [sp, #60]	; 0x3c
 8013cb2:	7853      	ldrb	r3, [r2, #1]
 8013cb4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013cb8:	9312      	str	r3, [sp, #72]	; 0x48
 8013cba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013cbc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013cbe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013cc2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013cc6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013cca:	ea4c 0c03 	orr.w	ip, ip, r3
 8013cce:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013cd0:	041b      	lsls	r3, r3, #16
 8013cd2:	fb10 f201 	smulbb	r2, r0, r1
 8013cd6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8013cda:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013cde:	10d2      	asrs	r2, r2, #3
 8013ce0:	4323      	orrs	r3, r4
 8013ce2:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8013ce6:	4353      	muls	r3, r2
 8013ce8:	fb09 330c 	mla	r3, r9, ip, r3
 8013cec:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8013cf0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013cf4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8013cf8:	ea4c 0e0e 	orr.w	lr, ip, lr
 8013cfc:	f1c1 0c10 	rsb	ip, r1, #16
 8013d00:	ebac 0c00 	sub.w	ip, ip, r0
 8013d04:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013d08:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8013d0c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013d0e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013d10:	0418      	lsls	r0, r3, #16
 8013d12:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013d16:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013d1a:	4318      	orrs	r0, r3
 8013d1c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8013d20:	fb02 c200 	mla	r2, r2, r0, ip
 8013d24:	0d53      	lsrs	r3, r2, #21
 8013d26:	0952      	lsrs	r2, r2, #5
 8013d28:	8838      	ldrh	r0, [r7, #0]
 8013d2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013d2e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013d32:	431a      	orrs	r2, r3
 8013d34:	b292      	uxth	r2, r2
 8013d36:	1201      	asrs	r1, r0, #8
 8013d38:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8013d3c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8013d40:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013d44:	fb11 f104 	smulbb	r1, r1, r4
 8013d48:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8013d4c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013d50:	00c0      	lsls	r0, r0, #3
 8013d52:	fb0c 1c03 	mla	ip, ip, r3, r1
 8013d56:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013d5a:	10d1      	asrs	r1, r2, #3
 8013d5c:	b2c0      	uxtb	r0, r0
 8013d5e:	00d2      	lsls	r2, r2, #3
 8013d60:	b2d2      	uxtb	r2, r2
 8013d62:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013d66:	fb1e fe04 	smulbb	lr, lr, r4
 8013d6a:	fb10 f004 	smulbb	r0, r0, r4
 8013d6e:	fa1f fc8c 	uxth.w	ip, ip
 8013d72:	fb01 e103 	mla	r1, r1, r3, lr
 8013d76:	fb02 0303 	mla	r3, r2, r3, r0
 8013d7a:	b29a      	uxth	r2, r3
 8013d7c:	f10c 0301 	add.w	r3, ip, #1
 8013d80:	b289      	uxth	r1, r1
 8013d82:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8013d86:	1c53      	adds	r3, r2, #1
 8013d88:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8013d8c:	1c4a      	adds	r2, r1, #1
 8013d8e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8013d92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013d96:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8013d9a:	0949      	lsrs	r1, r1, #5
 8013d9c:	ea43 030c 	orr.w	r3, r3, ip
 8013da0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013da4:	430b      	orrs	r3, r1
 8013da6:	803b      	strh	r3, [r7, #0]
 8013da8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013daa:	449a      	add	sl, r3
 8013dac:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013dae:	3702      	adds	r7, #2
 8013db0:	441d      	add	r5, r3
 8013db2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8013db6:	e742      	b.n	8013c3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8013db8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013dba:	449a      	add	sl, r3
 8013dbc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013dbe:	441d      	add	r5, r3
 8013dc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013dc2:	3b01      	subs	r3, #1
 8013dc4:	9309      	str	r3, [sp, #36]	; 0x24
 8013dc6:	f108 0802 	add.w	r8, r8, #2
 8013dca:	e718      	b.n	8013bfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013dcc:	d023      	beq.n	8013e16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8013dce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013dd0:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8013dd2:	3b01      	subs	r3, #1
 8013dd4:	fb00 a003 	mla	r0, r0, r3, sl
 8013dd8:	1400      	asrs	r0, r0, #16
 8013dda:	f53f af2d 	bmi.w	8013c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8013dde:	3901      	subs	r1, #1
 8013de0:	4288      	cmp	r0, r1
 8013de2:	f6bf af29 	bge.w	8013c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8013de6:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8013de8:	fb01 5303 	mla	r3, r1, r3, r5
 8013dec:	141b      	asrs	r3, r3, #16
 8013dee:	f53f af23 	bmi.w	8013c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8013df2:	3a01      	subs	r2, #1
 8013df4:	4293      	cmp	r3, r2
 8013df6:	f6bf af1f 	bge.w	8013c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8013dfa:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8013dfe:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8013e02:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8013e06:	f1be 0f00 	cmp.w	lr, #0
 8013e0a:	dc6c      	bgt.n	8013ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 8013e0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e0e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8013e12:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8013e16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e18:	2b00      	cmp	r3, #0
 8013e1a:	f340 810e 	ble.w	801403a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8013e1e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013e22:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013e26:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013e2a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013e2c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8013e30:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013e34:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013e38:	eef0 6a48 	vmov.f32	s13, s16
 8013e3c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013e40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013e44:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013e48:	ee16 aa90 	vmov	sl, s13
 8013e4c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013e50:	eef0 6a68 	vmov.f32	s13, s17
 8013e54:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013e58:	ee18 2a10 	vmov	r2, s16
 8013e5c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013e60:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e64:	ee18 2a90 	vmov	r2, s17
 8013e68:	932d      	str	r3, [sp, #180]	; 0xb4
 8013e6a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013e6c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013e70:	932e      	str	r3, [sp, #184]	; 0xb8
 8013e72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e74:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8013e76:	3b01      	subs	r3, #1
 8013e78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013e7c:	930c      	str	r3, [sp, #48]	; 0x30
 8013e7e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013e80:	bf08      	it	eq
 8013e82:	4613      	moveq	r3, r2
 8013e84:	ee16 5a90 	vmov	r5, s13
 8013e88:	9309      	str	r3, [sp, #36]	; 0x24
 8013e8a:	eef0 8a67 	vmov.f32	s17, s15
 8013e8e:	eeb0 8a47 	vmov.f32	s16, s14
 8013e92:	e6a6      	b.n	8013be2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8013e94:	2900      	cmp	r1, #0
 8013e96:	f43f af10 	beq.w	8013cba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8013e9a:	f819 3003 	ldrb.w	r3, [r9, r3]
 8013e9e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013ea2:	930f      	str	r3, [sp, #60]	; 0x3c
 8013ea4:	e709      	b.n	8013cba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8013ea6:	f112 0901 	adds.w	r9, r2, #1
 8013eaa:	f53f af7d 	bmi.w	8013da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013eae:	454b      	cmp	r3, r9
 8013eb0:	f6ff af7a 	blt.w	8013da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013eb4:	f11c 0901 	adds.w	r9, ip, #1
 8013eb8:	f53f af76 	bmi.w	8013da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013ebc:	45ce      	cmp	lr, r9
 8013ebe:	f6ff af73 	blt.w	8013da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013ec2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8013ec4:	9202      	str	r2, [sp, #8]
 8013ec6:	b21b      	sxth	r3, r3
 8013ec8:	fa0f f28e 	sxth.w	r2, lr
 8013ecc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8013ed0:	e9cd c003 	strd	ip, r0, [sp, #12]
 8013ed4:	9201      	str	r2, [sp, #4]
 8013ed6:	9300      	str	r3, [sp, #0]
 8013ed8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013eda:	9816      	ldr	r0, [sp, #88]	; 0x58
 8013edc:	4633      	mov	r3, r6
 8013ede:	4639      	mov	r1, r7
 8013ee0:	f7ff fd70 	bl	80139c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8013ee4:	e760      	b.n	8013da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013ee6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013ee8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8013eea:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8013eee:	ea4f 422a 	mov.w	r2, sl, asr #16
 8013ef2:	1429      	asrs	r1, r5, #16
 8013ef4:	fb03 2101 	mla	r1, r3, r1, r2
 8013ef8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013efa:	440a      	add	r2, r1
 8013efc:	5c61      	ldrb	r1, [r4, r1]
 8013efe:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8013f02:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8013f06:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8013f0a:	f1bc 0f00 	cmp.w	ip, #0
 8013f0e:	f000 808c 	beq.w	801402a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8013f12:	7857      	ldrb	r7, [r2, #1]
 8013f14:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8013f18:	9413      	str	r4, [sp, #76]	; 0x4c
 8013f1a:	b140      	cbz	r0, 8013f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8013f1c:	18d7      	adds	r7, r2, r3
 8013f1e:	5cd3      	ldrb	r3, [r2, r3]
 8013f20:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013f24:	9310      	str	r3, [sp, #64]	; 0x40
 8013f26:	787b      	ldrb	r3, [r7, #1]
 8013f28:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013f2c:	9314      	str	r3, [sp, #80]	; 0x50
 8013f2e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013f30:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8013f32:	fb1c f200 	smulbb	r2, ip, r0
 8013f36:	041f      	lsls	r7, r3, #16
 8013f38:	10d2      	asrs	r2, r2, #3
 8013f3a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013f3e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8013f42:	431f      	orrs	r7, r3
 8013f44:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8013f48:	9317      	str	r3, [sp, #92]	; 0x5c
 8013f4a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013f4c:	041b      	lsls	r3, r3, #16
 8013f4e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8013f52:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013f56:	ea43 030b 	orr.w	r3, r3, fp
 8013f5a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8013f5c:	4353      	muls	r3, r2
 8013f5e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8013f62:	fb04 3707 	mla	r7, r4, r7, r3
 8013f66:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013f6a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8013f6e:	ea43 0b01 	orr.w	fp, r3, r1
 8013f72:	f1c0 0110 	rsb	r1, r0, #16
 8013f76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f78:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013f7a:	eba1 0c0c 	sub.w	ip, r1, ip
 8013f7e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013f82:	fb0c 770b 	mla	r7, ip, fp, r7
 8013f86:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013f8a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8013f8e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013f92:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8013f96:	ea4c 0c0b 	orr.w	ip, ip, fp
 8013f9a:	fb02 770c 	mla	r7, r2, ip, r7
 8013f9e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013fa0:	0d79      	lsrs	r1, r7, #21
 8013fa2:	097f      	lsrs	r7, r7, #5
 8013fa4:	8812      	ldrh	r2, [r2, #0]
 8013fa6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013faa:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013fae:	430f      	orrs	r7, r1
 8013fb0:	b2bb      	uxth	r3, r7
 8013fb2:	1211      	asrs	r1, r2, #8
 8013fb4:	1218      	asrs	r0, r3, #8
 8013fb6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013fba:	fb11 f104 	smulbb	r1, r1, r4
 8013fbe:	10d7      	asrs	r7, r2, #3
 8013fc0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013fc4:	00d2      	lsls	r2, r2, #3
 8013fc6:	fb00 1009 	mla	r0, r0, r9, r1
 8013fca:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013fce:	10d9      	asrs	r1, r3, #3
 8013fd0:	b2d2      	uxtb	r2, r2
 8013fd2:	00db      	lsls	r3, r3, #3
 8013fd4:	fb17 f704 	smulbb	r7, r7, r4
 8013fd8:	fb12 f204 	smulbb	r2, r2, r4
 8013fdc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013fe0:	b2db      	uxtb	r3, r3
 8013fe2:	b280      	uxth	r0, r0
 8013fe4:	fb01 7109 	mla	r1, r1, r9, r7
 8013fe8:	fb03 2309 	mla	r3, r3, r9, r2
 8013fec:	b29b      	uxth	r3, r3
 8013fee:	b289      	uxth	r1, r1
 8013ff0:	1c42      	adds	r2, r0, #1
 8013ff2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8013ff6:	1c4f      	adds	r7, r1, #1
 8013ff8:	1c5a      	adds	r2, r3, #1
 8013ffa:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8013ffe:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8014002:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014006:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801400a:	0949      	lsrs	r1, r1, #5
 801400c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801400e:	4310      	orrs	r0, r2
 8014010:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014014:	4308      	orrs	r0, r1
 8014016:	f823 0b02 	strh.w	r0, [r3], #2
 801401a:	930e      	str	r3, [sp, #56]	; 0x38
 801401c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801401e:	449a      	add	sl, r3
 8014020:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014022:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014026:	441d      	add	r5, r3
 8014028:	e6ed      	b.n	8013e06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801402a:	2800      	cmp	r0, #0
 801402c:	f43f af7f 	beq.w	8013f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8014030:	5cd3      	ldrb	r3, [r2, r3]
 8014032:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014036:	9310      	str	r3, [sp, #64]	; 0x40
 8014038:	e779      	b.n	8013f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801403a:	b019      	add	sp, #100	; 0x64
 801403c:	ecbd 8b08 	vpop	{d8-d11}
 8014040:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014044 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8014044:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014048:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 801404c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8014050:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8014054:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8014058:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801405c:	8808      	ldrh	r0, [r1, #0]
 801405e:	fb06 570e 	mla	r7, r6, lr, r5
 8014062:	2e00      	cmp	r6, #0
 8014064:	eb02 0807 	add.w	r8, r2, r7
 8014068:	db38      	blt.n	80140dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801406a:	45b1      	cmp	r9, r6
 801406c:	dd36      	ble.n	80140dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801406e:	2d00      	cmp	r5, #0
 8014070:	db32      	blt.n	80140d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014072:	45ae      	cmp	lr, r5
 8014074:	dd30      	ble.n	80140d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014076:	5dd2      	ldrb	r2, [r2, r7]
 8014078:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801407c:	1c6a      	adds	r2, r5, #1
 801407e:	d430      	bmi.n	80140e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014080:	4596      	cmp	lr, r2
 8014082:	dd2e      	ble.n	80140e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014084:	b36c      	cbz	r4, 80140e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014086:	f898 2001 	ldrb.w	r2, [r8, #1]
 801408a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801408e:	3601      	adds	r6, #1
 8014090:	d42b      	bmi.n	80140ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014092:	45b1      	cmp	r9, r6
 8014094:	dd29      	ble.n	80140ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014096:	f1bc 0f00 	cmp.w	ip, #0
 801409a:	d028      	beq.n	80140ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 801409c:	2d00      	cmp	r5, #0
 801409e:	db22      	blt.n	80140e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80140a0:	45ae      	cmp	lr, r5
 80140a2:	dd20      	ble.n	80140e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80140a4:	f818 600e 	ldrb.w	r6, [r8, lr]
 80140a8:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 80140ac:	3501      	adds	r5, #1
 80140ae:	d407      	bmi.n	80140c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80140b0:	45ae      	cmp	lr, r5
 80140b2:	dd05      	ble.n	80140c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80140b4:	b134      	cbz	r4, 80140c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80140b6:	44c6      	add	lr, r8
 80140b8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80140bc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80140c0:	2c0f      	cmp	r4, #15
 80140c2:	d802      	bhi.n	80140ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80140c4:	f1bc 0f0f 	cmp.w	ip, #15
 80140c8:	d914      	bls.n	80140f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 80140ca:	4b26      	ldr	r3, [pc, #152]	; (8014164 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 80140cc:	4a26      	ldr	r2, [pc, #152]	; (8014168 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 80140ce:	4827      	ldr	r0, [pc, #156]	; (801416c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 80140d0:	f240 11db 	movw	r1, #475	; 0x1db
 80140d4:	f006 fde0 	bl	801ac98 <__assert_func>
 80140d8:	4607      	mov	r7, r0
 80140da:	e7cf      	b.n	801407c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 80140dc:	4602      	mov	r2, r0
 80140de:	4607      	mov	r7, r0
 80140e0:	e7d5      	b.n	801408e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80140e2:	4602      	mov	r2, r0
 80140e4:	e7d3      	b.n	801408e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80140e6:	4606      	mov	r6, r0
 80140e8:	e7e0      	b.n	80140ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 80140ea:	4606      	mov	r6, r0
 80140ec:	e7e8      	b.n	80140c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80140ee:	2c0f      	cmp	r4, #15
 80140f0:	d8eb      	bhi.n	80140ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80140f2:	4606      	mov	r6, r0
 80140f4:	043d      	lsls	r5, r7, #16
 80140f6:	fb14 f30c 	smulbb	r3, r4, ip
 80140fa:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80140fe:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8014102:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014106:	10db      	asrs	r3, r3, #3
 8014108:	432f      	orrs	r7, r5
 801410a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801410e:	f1cc 0510 	rsb	r5, ip, #16
 8014112:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014116:	1b2d      	subs	r5, r5, r4
 8014118:	ea4e 0202 	orr.w	r2, lr, r2
 801411c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8014120:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8014124:	4354      	muls	r4, r2
 8014126:	fb05 4507 	mla	r5, r5, r7, r4
 801412a:	0404      	lsls	r4, r0, #16
 801412c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014130:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014134:	4320      	orrs	r0, r4
 8014136:	fb03 5400 	mla	r4, r3, r0, r5
 801413a:	0430      	lsls	r0, r6, #16
 801413c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014140:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8014144:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8014148:	4330      	orrs	r0, r6
 801414a:	fb03 4000 	mla	r0, r3, r0, r4
 801414e:	0d43      	lsrs	r3, r0, #21
 8014150:	0940      	lsrs	r0, r0, #5
 8014152:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014156:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801415a:	4318      	orrs	r0, r3
 801415c:	8008      	strh	r0, [r1, #0]
 801415e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014162:	bf00      	nop
 8014164:	0801eaff 	.word	0x0801eaff
 8014168:	0801f0d7 	.word	0x0801f0d7
 801416c:	0801eacc 	.word	0x0801eacc

08014170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014174:	ed2d 8b0a 	vpush	{d8-d12}
 8014178:	b093      	sub	sp, #76	; 0x4c
 801417a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801417e:	920f      	str	r2, [sp, #60]	; 0x3c
 8014180:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014182:	9108      	str	r1, [sp, #32]
 8014184:	9306      	str	r3, [sp, #24]
 8014186:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801418a:	9010      	str	r0, [sp, #64]	; 0x40
 801418c:	6850      	ldr	r0, [r2, #4]
 801418e:	6812      	ldr	r2, [r2, #0]
 8014190:	fb00 1303 	mla	r3, r0, r3, r1
 8014194:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8014198:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801419a:	681b      	ldr	r3, [r3, #0]
 801419c:	9307      	str	r3, [sp, #28]
 801419e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80141a0:	685f      	ldr	r7, [r3, #4]
 80141a2:	eeb0 aa40 	vmov.f32	s20, s0
 80141a6:	eef0 9a60 	vmov.f32	s19, s1
 80141aa:	eeb0 9a41 	vmov.f32	s18, s2
 80141ae:	eeb0 8a62 	vmov.f32	s16, s5
 80141b2:	eef0 8a43 	vmov.f32	s17, s6
 80141b6:	eeb0 ca44 	vmov.f32	s24, s8
 80141ba:	eef0 ba64 	vmov.f32	s23, s9
 80141be:	eeb0 ba45 	vmov.f32	s22, s10
 80141c2:	3704      	adds	r7, #4
 80141c4:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80141c8:	9b08      	ldr	r3, [sp, #32]
 80141ca:	2b00      	cmp	r3, #0
 80141cc:	dc03      	bgt.n	80141d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80141ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80141d0:	2b00      	cmp	r3, #0
 80141d2:	f340 81b2 	ble.w	801453a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80141d6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80141d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80141dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80141e0:	1e48      	subs	r0, r1, #1
 80141e2:	f102 3cff 	add.w	ip, r2, #4294967295
 80141e6:	9b06      	ldr	r3, [sp, #24]
 80141e8:	2b00      	cmp	r3, #0
 80141ea:	f340 80a9 	ble.w	8014340 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80141ee:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80141f2:	ea4f 4326 	mov.w	r3, r6, asr #16
 80141f6:	d406      	bmi.n	8014206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80141f8:	4586      	cmp	lr, r0
 80141fa:	da04      	bge.n	8014206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80141fc:	2b00      	cmp	r3, #0
 80141fe:	db02      	blt.n	8014206 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014200:	4563      	cmp	r3, ip
 8014202:	f2c0 809e 	blt.w	8014342 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014206:	f11e 0e01 	adds.w	lr, lr, #1
 801420a:	f100 808f 	bmi.w	801432c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801420e:	4571      	cmp	r1, lr
 8014210:	f2c0 808c 	blt.w	801432c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014214:	3301      	adds	r3, #1
 8014216:	f100 8089 	bmi.w	801432c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801421a:	429a      	cmp	r2, r3
 801421c:	f2c0 8086 	blt.w	801432c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8014220:	f8dd b018 	ldr.w	fp, [sp, #24]
 8014224:	46c8      	mov	r8, r9
 8014226:	f1bb 0f00 	cmp.w	fp, #0
 801422a:	f340 80a6 	ble.w	801437a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801422e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014230:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014232:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014236:	689b      	ldr	r3, [r3, #8]
 8014238:	1422      	asrs	r2, r4, #16
 801423a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801423e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8014242:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8014246:	f100 80e3 	bmi.w	8014410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801424a:	f103 3aff 	add.w	sl, r3, #4294967295
 801424e:	4552      	cmp	r2, sl
 8014250:	f280 80de 	bge.w	8014410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014254:	f1bc 0f00 	cmp.w	ip, #0
 8014258:	f2c0 80da 	blt.w	8014410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801425c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8014260:	45d4      	cmp	ip, sl
 8014262:	f280 80d5 	bge.w	8014410 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8014266:	b21b      	sxth	r3, r3
 8014268:	fb0c 2203 	mla	r2, ip, r3, r2
 801426c:	9d07      	ldr	r5, [sp, #28]
 801426e:	eb05 0a02 	add.w	sl, r5, r2
 8014272:	5caa      	ldrb	r2, [r5, r2]
 8014274:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8014278:	2800      	cmp	r0, #0
 801427a:	f000 80c0 	beq.w	80143fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 801427e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014282:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014286:	920b      	str	r2, [sp, #44]	; 0x2c
 8014288:	b151      	cbz	r1, 80142a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801428a:	eb0a 0203 	add.w	r2, sl, r3
 801428e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014292:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014296:	9309      	str	r3, [sp, #36]	; 0x24
 8014298:	7853      	ldrb	r3, [r2, #1]
 801429a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801429e:	930c      	str	r3, [sp, #48]	; 0x30
 80142a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80142a2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80142a4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80142a8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80142ac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80142b0:	ea4c 0c03 	orr.w	ip, ip, r3
 80142b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80142b6:	041b      	lsls	r3, r3, #16
 80142b8:	fb10 f201 	smulbb	r2, r0, r1
 80142bc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80142c0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80142c4:	10d2      	asrs	r2, r2, #3
 80142c6:	432b      	orrs	r3, r5
 80142c8:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80142cc:	4353      	muls	r3, r2
 80142ce:	fb0a 330c 	mla	r3, sl, ip, r3
 80142d2:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80142d6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80142da:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80142de:	ea4c 0e0e 	orr.w	lr, ip, lr
 80142e2:	f1c1 0c10 	rsb	ip, r1, #16
 80142e6:	ebac 0c00 	sub.w	ip, ip, r0
 80142ea:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80142ee:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80142f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80142f4:	0418      	lsls	r0, r3, #16
 80142f6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80142fa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80142fe:	4318      	orrs	r0, r3
 8014300:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014304:	fb02 c200 	mla	r2, r2, r0, ip
 8014308:	0d53      	lsrs	r3, r2, #21
 801430a:	0952      	lsrs	r2, r2, #5
 801430c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014310:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014314:	431a      	orrs	r2, r3
 8014316:	f8a8 2000 	strh.w	r2, [r8]
 801431a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801431c:	441c      	add	r4, r3
 801431e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014320:	f108 0802 	add.w	r8, r8, #2
 8014324:	441e      	add	r6, r3
 8014326:	f10b 3bff 	add.w	fp, fp, #4294967295
 801432a:	e77c      	b.n	8014226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801432c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801432e:	441c      	add	r4, r3
 8014330:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014332:	441e      	add	r6, r3
 8014334:	9b06      	ldr	r3, [sp, #24]
 8014336:	3b01      	subs	r3, #1
 8014338:	9306      	str	r3, [sp, #24]
 801433a:	f109 0902 	add.w	r9, r9, #2
 801433e:	e752      	b.n	80141e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014340:	d020      	beq.n	8014384 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014342:	9b06      	ldr	r3, [sp, #24]
 8014344:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8014346:	3b01      	subs	r3, #1
 8014348:	fb00 4003 	mla	r0, r0, r3, r4
 801434c:	1400      	asrs	r0, r0, #16
 801434e:	f53f af67 	bmi.w	8014220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014352:	3901      	subs	r1, #1
 8014354:	4288      	cmp	r0, r1
 8014356:	f6bf af63 	bge.w	8014220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801435a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801435c:	fb01 6303 	mla	r3, r1, r3, r6
 8014360:	141b      	asrs	r3, r3, #16
 8014362:	f53f af5d 	bmi.w	8014220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014366:	3a01      	subs	r2, #1
 8014368:	4293      	cmp	r3, r2
 801436a:	f6bf af59 	bge.w	8014220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801436e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8014372:	46ca      	mov	sl, r9
 8014374:	f1b8 0f00 	cmp.w	r8, #0
 8014378:	dc67      	bgt.n	801444a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801437a:	9b06      	ldr	r3, [sp, #24]
 801437c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014380:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8014384:	9b08      	ldr	r3, [sp, #32]
 8014386:	2b00      	cmp	r3, #0
 8014388:	f340 80d7 	ble.w	801453a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801438c:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014390:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014394:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014398:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801439a:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801439e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80143a2:	eef0 6a48 	vmov.f32	s13, s16
 80143a6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80143aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80143ae:	ee37 8a48 	vsub.f32	s16, s14, s16
 80143b2:	ee16 4a90 	vmov	r4, s13
 80143b6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80143ba:	eef0 6a68 	vmov.f32	s13, s17
 80143be:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80143c2:	ee18 2a10 	vmov	r2, s16
 80143c6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80143ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80143ce:	ee18 2a90 	vmov	r2, s17
 80143d2:	9329      	str	r3, [sp, #164]	; 0xa4
 80143d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80143d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80143da:	932a      	str	r3, [sp, #168]	; 0xa8
 80143dc:	9b08      	ldr	r3, [sp, #32]
 80143de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80143e0:	3b01      	subs	r3, #1
 80143e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80143e6:	9308      	str	r3, [sp, #32]
 80143e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80143ea:	bf08      	it	eq
 80143ec:	4613      	moveq	r3, r2
 80143ee:	ee16 6a90 	vmov	r6, s13
 80143f2:	9306      	str	r3, [sp, #24]
 80143f4:	eef0 8a67 	vmov.f32	s17, s15
 80143f8:	eeb0 8a47 	vmov.f32	s16, s14
 80143fc:	e6e4      	b.n	80141c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80143fe:	2900      	cmp	r1, #0
 8014400:	f43f af4e 	beq.w	80142a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014404:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8014408:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801440c:	9309      	str	r3, [sp, #36]	; 0x24
 801440e:	e747      	b.n	80142a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8014410:	f112 0a01 	adds.w	sl, r2, #1
 8014414:	d481      	bmi.n	801431a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014416:	4553      	cmp	r3, sl
 8014418:	f6ff af7f 	blt.w	801431a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801441c:	f11c 0a01 	adds.w	sl, ip, #1
 8014420:	f53f af7b 	bmi.w	801431a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8014424:	45d6      	cmp	lr, sl
 8014426:	f6ff af78 	blt.w	801431a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801442a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801442e:	b21b      	sxth	r3, r3
 8014430:	fa0f f28e 	sxth.w	r2, lr
 8014434:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8014438:	9201      	str	r2, [sp, #4]
 801443a:	9300      	str	r3, [sp, #0]
 801443c:	9a07      	ldr	r2, [sp, #28]
 801443e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014440:	463b      	mov	r3, r7
 8014442:	4641      	mov	r1, r8
 8014444:	f7ff fdfe 	bl	8014044 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8014448:	e767      	b.n	801431a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801444a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801444c:	9d07      	ldr	r5, [sp, #28]
 801444e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014452:	1422      	asrs	r2, r4, #16
 8014454:	1431      	asrs	r1, r6, #16
 8014456:	fb03 2101 	mla	r1, r3, r1, r2
 801445a:	9a07      	ldr	r2, [sp, #28]
 801445c:	440a      	add	r2, r1
 801445e:	5c69      	ldrb	r1, [r5, r1]
 8014460:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8014464:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8014468:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801446c:	f1be 0f00 	cmp.w	lr, #0
 8014470:	d05c      	beq.n	801452c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8014472:	f892 c001 	ldrb.w	ip, [r2, #1]
 8014476:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801447a:	950d      	str	r5, [sp, #52]	; 0x34
 801447c:	b150      	cbz	r0, 8014494 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801447e:	eb02 0c03 	add.w	ip, r2, r3
 8014482:	5cd3      	ldrb	r3, [r2, r3]
 8014484:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014488:	930a      	str	r3, [sp, #40]	; 0x28
 801448a:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801448e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014492:	930e      	str	r3, [sp, #56]	; 0x38
 8014494:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014496:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014498:	fb1e f200 	smulbb	r2, lr, r0
 801449c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80144a0:	10d2      	asrs	r2, r2, #3
 80144a2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80144a6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80144aa:	ea4c 0c03 	orr.w	ip, ip, r3
 80144ae:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80144b2:	9311      	str	r3, [sp, #68]	; 0x44
 80144b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80144b6:	041b      	lsls	r3, r3, #16
 80144b8:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80144bc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80144c0:	ea43 030b 	orr.w	r3, r3, fp
 80144c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80144c6:	4353      	muls	r3, r2
 80144c8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80144cc:	fb05 3c0c 	mla	ip, r5, ip, r3
 80144d0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80144d4:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80144d8:	ea43 0b01 	orr.w	fp, r3, r1
 80144dc:	f1c0 0110 	rsb	r1, r0, #16
 80144e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80144e2:	eba1 0e0e 	sub.w	lr, r1, lr
 80144e6:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80144ea:	fb0e cc0b 	mla	ip, lr, fp, ip
 80144ee:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80144f2:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80144f6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80144fa:	ea4b 0e0e 	orr.w	lr, fp, lr
 80144fe:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014502:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014506:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801450a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801450e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014512:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8014516:	ea43 0c0c 	orr.w	ip, r3, ip
 801451a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801451c:	f82a cb02 	strh.w	ip, [sl], #2
 8014520:	441c      	add	r4, r3
 8014522:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014524:	f108 38ff 	add.w	r8, r8, #4294967295
 8014528:	441e      	add	r6, r3
 801452a:	e723      	b.n	8014374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801452c:	2800      	cmp	r0, #0
 801452e:	d0b1      	beq.n	8014494 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8014530:	5cd3      	ldrb	r3, [r2, r3]
 8014532:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014536:	930a      	str	r3, [sp, #40]	; 0x28
 8014538:	e7ac      	b.n	8014494 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801453a:	b013      	add	sp, #76	; 0x4c
 801453c:	ecbd 8b0a 	vpop	{d8-d12}
 8014540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8014544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014548:	468b      	mov	fp, r1
 801454a:	8809      	ldrh	r1, [r1, #0]
 801454c:	b089      	sub	sp, #36	; 0x24
 801454e:	10cd      	asrs	r5, r1, #3
 8014550:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8014554:	ea4f 2921 	mov.w	r9, r1, asr #8
 8014558:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801455c:	00c9      	lsls	r1, r1, #3
 801455e:	9500      	str	r5, [sp, #0]
 8014560:	b2c9      	uxtb	r1, r1
 8014562:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8014566:	9101      	str	r1, [sp, #4]
 8014568:	9900      	ldr	r1, [sp, #0]
 801456a:	9202      	str	r2, [sp, #8]
 801456c:	fb04 650e 	mla	r5, r4, lr, r6
 8014570:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014574:	eb02 0805 	add.w	r8, r2, r5
 8014578:	0209      	lsls	r1, r1, #8
 801457a:	9a01      	ldr	r2, [sp, #4]
 801457c:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8014580:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8014584:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8014588:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 801458c:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8014590:	4311      	orrs	r1, r2
 8014592:	2c00      	cmp	r4, #0
 8014594:	9107      	str	r1, [sp, #28]
 8014596:	db43      	blt.n	8014620 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014598:	45a2      	cmp	sl, r4
 801459a:	dd41      	ble.n	8014620 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801459c:	2e00      	cmp	r6, #0
 801459e:	db3d      	blt.n	801461c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80145a0:	45b6      	cmp	lr, r6
 80145a2:	dd3b      	ble.n	801461c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80145a4:	9a02      	ldr	r2, [sp, #8]
 80145a6:	5d55      	ldrb	r5, [r2, r5]
 80145a8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80145ac:	441d      	add	r5, r3
 80145ae:	1c72      	adds	r2, r6, #1
 80145b0:	d439      	bmi.n	8014626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80145b2:	4596      	cmp	lr, r2
 80145b4:	dd37      	ble.n	8014626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80145b6:	2f00      	cmp	r7, #0
 80145b8:	d035      	beq.n	8014626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80145ba:	f898 1001 	ldrb.w	r1, [r8, #1]
 80145be:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80145c2:	4419      	add	r1, r3
 80145c4:	3401      	adds	r4, #1
 80145c6:	d432      	bmi.n	801462e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80145c8:	45a2      	cmp	sl, r4
 80145ca:	dd30      	ble.n	801462e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80145cc:	b378      	cbz	r0, 801462e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80145ce:	2e00      	cmp	r6, #0
 80145d0:	db2b      	blt.n	801462a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80145d2:	45b6      	cmp	lr, r6
 80145d4:	dd29      	ble.n	801462a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80145d6:	f818 400e 	ldrb.w	r4, [r8, lr]
 80145da:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80145de:	441c      	add	r4, r3
 80145e0:	3601      	adds	r6, #1
 80145e2:	d427      	bmi.n	8014634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80145e4:	45b6      	cmp	lr, r6
 80145e6:	dd25      	ble.n	8014634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80145e8:	b327      	cbz	r7, 8014634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 80145ea:	44c6      	add	lr, r8
 80145ec:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80145f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80145f4:	4413      	add	r3, r2
 80145f6:	782a      	ldrb	r2, [r5, #0]
 80145f8:	9202      	str	r2, [sp, #8]
 80145fa:	780a      	ldrb	r2, [r1, #0]
 80145fc:	9203      	str	r2, [sp, #12]
 80145fe:	7822      	ldrb	r2, [r4, #0]
 8014600:	9204      	str	r2, [sp, #16]
 8014602:	2f0f      	cmp	r7, #15
 8014604:	781a      	ldrb	r2, [r3, #0]
 8014606:	9205      	str	r2, [sp, #20]
 8014608:	d801      	bhi.n	801460e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801460a:	280f      	cmp	r0, #15
 801460c:	d914      	bls.n	8014638 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801460e:	4b3f      	ldr	r3, [pc, #252]	; (801470c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8014610:	4a3f      	ldr	r2, [pc, #252]	; (8014710 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8014612:	4840      	ldr	r0, [pc, #256]	; (8014714 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8014614:	f240 11f9 	movw	r1, #505	; 0x1f9
 8014618:	f006 fb3e 	bl	801ac98 <__assert_func>
 801461c:	ad07      	add	r5, sp, #28
 801461e:	e7c6      	b.n	80145ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8014620:	a907      	add	r1, sp, #28
 8014622:	460d      	mov	r5, r1
 8014624:	e7ce      	b.n	80145c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014626:	a907      	add	r1, sp, #28
 8014628:	e7cc      	b.n	80145c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801462a:	ac07      	add	r4, sp, #28
 801462c:	e7d8      	b.n	80145e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801462e:	ab07      	add	r3, sp, #28
 8014630:	461c      	mov	r4, r3
 8014632:	e7e0      	b.n	80145f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014634:	ab07      	add	r3, sp, #28
 8014636:	e7de      	b.n	80145f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014638:	b2ba      	uxth	r2, r7
 801463a:	b280      	uxth	r0, r0
 801463c:	fb02 fa00 	mul.w	sl, r2, r0
 8014640:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014644:	0112      	lsls	r2, r2, #4
 8014646:	b280      	uxth	r0, r0
 8014648:	f891 8002 	ldrb.w	r8, [r1, #2]
 801464c:	7849      	ldrb	r1, [r1, #1]
 801464e:	78ae      	ldrb	r6, [r5, #2]
 8014650:	786d      	ldrb	r5, [r5, #1]
 8014652:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8014656:	eba2 020a 	sub.w	r2, r2, sl
 801465a:	b292      	uxth	r2, r2
 801465c:	ebae 0e00 	sub.w	lr, lr, r0
 8014660:	fa1f fe8e 	uxth.w	lr, lr
 8014664:	4351      	muls	r1, r2
 8014666:	fb02 f808 	mul.w	r8, r2, r8
 801466a:	fb0e 8806 	mla	r8, lr, r6, r8
 801466e:	fb0e 1505 	mla	r5, lr, r5, r1
 8014672:	78a6      	ldrb	r6, [r4, #2]
 8014674:	7861      	ldrb	r1, [r4, #1]
 8014676:	fa1f f78c 	uxth.w	r7, ip
 801467a:	fb00 8806 	mla	r8, r0, r6, r8
 801467e:	fb00 5501 	mla	r5, r0, r1, r5
 8014682:	789e      	ldrb	r6, [r3, #2]
 8014684:	7859      	ldrb	r1, [r3, #1]
 8014686:	9b00      	ldr	r3, [sp, #0]
 8014688:	ea6f 0c0c 	mvn.w	ip, ip
 801468c:	fa5f fc8c 	uxtb.w	ip, ip
 8014690:	fb0a 5101 	mla	r1, sl, r1, r5
 8014694:	fb13 f50c 	smulbb	r5, r3, ip
 8014698:	9b03      	ldr	r3, [sp, #12]
 801469a:	435a      	muls	r2, r3
 801469c:	9b02      	ldr	r3, [sp, #8]
 801469e:	fb0e 2203 	mla	r2, lr, r3, r2
 80146a2:	9b04      	ldr	r3, [sp, #16]
 80146a4:	fb00 2003 	mla	r0, r0, r3, r2
 80146a8:	9b05      	ldr	r3, [sp, #20]
 80146aa:	fb0a 8606 	mla	r6, sl, r6, r8
 80146ae:	fb19 f90c 	smulbb	r9, r9, ip
 80146b2:	fb0a 0a03 	mla	sl, sl, r3, r0
 80146b6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80146ba:	9b01      	ldr	r3, [sp, #4]
 80146bc:	fb06 9607 	mla	r6, r6, r7, r9
 80146c0:	b2b6      	uxth	r6, r6
 80146c2:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80146c6:	fb13 fc0c 	smulbb	ip, r3, ip
 80146ca:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80146ce:	fb01 5107 	mla	r1, r1, r7, r5
 80146d2:	f106 0901 	add.w	r9, r6, #1
 80146d6:	fb0a c707 	mla	r7, sl, r7, ip
 80146da:	b2bf      	uxth	r7, r7
 80146dc:	b289      	uxth	r1, r1
 80146de:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80146e2:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 80146e6:	1c4d      	adds	r5, r1, #1
 80146e8:	1c7e      	adds	r6, r7, #1
 80146ea:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80146ee:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 80146f2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80146f6:	0949      	lsrs	r1, r1, #5
 80146f8:	ea46 0609 	orr.w	r6, r6, r9
 80146fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014700:	430e      	orrs	r6, r1
 8014702:	f8ab 6000 	strh.w	r6, [fp]
 8014706:	b009      	add	sp, #36	; 0x24
 8014708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801470c:	0801eaff 	.word	0x0801eaff
 8014710:	0801f02e 	.word	0x0801f02e
 8014714:	0801eacc 	.word	0x0801eacc

08014718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801471c:	ed2d 8b08 	vpush	{d8-d11}
 8014720:	b095      	sub	sp, #84	; 0x54
 8014722:	eeb0 aa40 	vmov.f32	s20, s0
 8014726:	9212      	str	r2, [sp, #72]	; 0x48
 8014728:	9309      	str	r3, [sp, #36]	; 0x24
 801472a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801472c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8014730:	930f      	str	r3, [sp, #60]	; 0x3c
 8014732:	910e      	str	r1, [sp, #56]	; 0x38
 8014734:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8014738:	9013      	str	r0, [sp, #76]	; 0x4c
 801473a:	6850      	ldr	r0, [r2, #4]
 801473c:	6812      	ldr	r2, [r2, #0]
 801473e:	fb00 1303 	mla	r3, r0, r3, r1
 8014742:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014746:	930a      	str	r3, [sp, #40]	; 0x28
 8014748:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801474a:	681b      	ldr	r3, [r3, #0]
 801474c:	930d      	str	r3, [sp, #52]	; 0x34
 801474e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014750:	685c      	ldr	r4, [r3, #4]
 8014752:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014754:	43db      	mvns	r3, r3
 8014756:	b2db      	uxtb	r3, r3
 8014758:	eef0 9a60 	vmov.f32	s19, s1
 801475c:	eeb0 9a41 	vmov.f32	s18, s2
 8014760:	eeb0 8a62 	vmov.f32	s16, s5
 8014764:	eef0 8a43 	vmov.f32	s17, s6
 8014768:	eef0 ba44 	vmov.f32	s23, s8
 801476c:	eeb0 ba64 	vmov.f32	s22, s9
 8014770:	eef0 aa45 	vmov.f32	s21, s10
 8014774:	3404      	adds	r4, #4
 8014776:	930b      	str	r3, [sp, #44]	; 0x2c
 8014778:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801477a:	2b00      	cmp	r3, #0
 801477c:	dc03      	bgt.n	8014786 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801477e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014780:	2b00      	cmp	r3, #0
 8014782:	f340 8255 	ble.w	8014c30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8014786:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014788:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801478c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014790:	1e48      	subs	r0, r1, #1
 8014792:	1e55      	subs	r5, r2, #1
 8014794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014796:	2b00      	cmp	r3, #0
 8014798:	f340 80f9 	ble.w	801498e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801479c:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801479e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80147a0:	1436      	asrs	r6, r6, #16
 80147a2:	ea4f 4323 	mov.w	r3, r3, asr #16
 80147a6:	d406      	bmi.n	80147b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80147a8:	4286      	cmp	r6, r0
 80147aa:	da04      	bge.n	80147b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80147ac:	2b00      	cmp	r3, #0
 80147ae:	db02      	blt.n	80147b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80147b0:	42ab      	cmp	r3, r5
 80147b2:	f2c0 80ed 	blt.w	8014990 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80147b6:	3601      	adds	r6, #1
 80147b8:	f100 80da 	bmi.w	8014970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80147bc:	42b1      	cmp	r1, r6
 80147be:	f2c0 80d7 	blt.w	8014970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80147c2:	3301      	adds	r3, #1
 80147c4:	f100 80d4 	bmi.w	8014970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80147c8:	429a      	cmp	r2, r3
 80147ca:	f2c0 80d1 	blt.w	8014970 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80147ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147d0:	9311      	str	r3, [sp, #68]	; 0x44
 80147d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80147d4:	930c      	str	r3, [sp, #48]	; 0x30
 80147d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80147d8:	2b00      	cmp	r3, #0
 80147da:	f340 80fa 	ble.w	80149d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80147de:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80147e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80147e2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80147e4:	68c6      	ldr	r6, [r0, #12]
 80147e6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80147e8:	141d      	asrs	r5, r3, #16
 80147ea:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80147ee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80147f0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80147f2:	1400      	asrs	r0, r0, #16
 80147f4:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80147f8:	6892      	ldr	r2, [r2, #8]
 80147fa:	f100 813e 	bmi.w	8014a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80147fe:	1e57      	subs	r7, r2, #1
 8014800:	42b8      	cmp	r0, r7
 8014802:	f280 813a 	bge.w	8014a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8014806:	2d00      	cmp	r5, #0
 8014808:	f2c0 8137 	blt.w	8014a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801480c:	1e77      	subs	r7, r6, #1
 801480e:	42bd      	cmp	r5, r7
 8014810:	f280 8133 	bge.w	8014a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8014814:	b212      	sxth	r2, r2
 8014816:	fb05 0002 	mla	r0, r5, r2, r0
 801481a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801481c:	f815 a000 	ldrb.w	sl, [r5, r0]
 8014820:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8014824:	182e      	adds	r6, r5, r0
 8014826:	eb04 050a 	add.w	r5, r4, sl
 801482a:	2b00      	cmp	r3, #0
 801482c:	f000 8117 	beq.w	8014a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8014830:	f896 c001 	ldrb.w	ip, [r6, #1]
 8014834:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014838:	44a4      	add	ip, r4
 801483a:	2900      	cmp	r1, #0
 801483c:	f000 8117 	beq.w	8014a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8014840:	18b0      	adds	r0, r6, r2
 8014842:	5cb2      	ldrb	r2, [r6, r2]
 8014844:	7840      	ldrb	r0, [r0, #1]
 8014846:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801484a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801484e:	4422      	add	r2, r4
 8014850:	4420      	add	r0, r4
 8014852:	b29b      	uxth	r3, r3
 8014854:	b289      	uxth	r1, r1
 8014856:	fb03 f901 	mul.w	r9, r3, r1
 801485a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801485e:	011b      	lsls	r3, r3, #4
 8014860:	b289      	uxth	r1, r1
 8014862:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8014866:	f895 b002 	ldrb.w	fp, [r5, #2]
 801486a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801486c:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8014870:	f8b6 e000 	ldrh.w	lr, [r6]
 8014874:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8014878:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801487c:	eba3 0309 	sub.w	r3, r3, r9
 8014880:	b29b      	uxth	r3, r3
 8014882:	eba8 0801 	sub.w	r8, r8, r1
 8014886:	fa1f f888 	uxth.w	r8, r8
 801488a:	435f      	muls	r7, r3
 801488c:	fb08 770b 	mla	r7, r8, fp, r7
 8014890:	f892 b002 	ldrb.w	fp, [r2, #2]
 8014894:	9310      	str	r3, [sp, #64]	; 0x40
 8014896:	fb01 770b 	mla	r7, r1, fp, r7
 801489a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801489e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80148a0:	fb09 770b 	mla	r7, r9, fp, r7
 80148a4:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80148a8:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80148ac:	fb1b fb03 	smulbb	fp, fp, r3
 80148b0:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80148b4:	fb07 b706 	mla	r7, r7, r6, fp
 80148b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80148ba:	f895 b001 	ldrb.w	fp, [r5, #1]
 80148be:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80148c2:	f89c c000 	ldrb.w	ip, [ip]
 80148c6:	435d      	muls	r5, r3
 80148c8:	fb08 550b 	mla	r5, r8, fp, r5
 80148cc:	f892 b001 	ldrb.w	fp, [r2, #1]
 80148d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80148d2:	fb01 550b 	mla	r5, r1, fp, r5
 80148d6:	f890 b001 	ldrb.w	fp, [r0, #1]
 80148da:	fb09 550b 	mla	r5, r9, fp, r5
 80148de:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80148e2:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80148e6:	fb1b fb03 	smulbb	fp, fp, r3
 80148ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80148ec:	fb03 f30c 	mul.w	r3, r3, ip
 80148f0:	f892 c000 	ldrb.w	ip, [r2]
 80148f4:	fb08 330a 	mla	r3, r8, sl, r3
 80148f8:	fb01 330c 	mla	r3, r1, ip, r3
 80148fc:	f890 c000 	ldrb.w	ip, [r0]
 8014900:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014904:	fb09 3c0c 	mla	ip, r9, ip, r3
 8014908:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801490a:	fa5f fe8e 	uxtb.w	lr, lr
 801490e:	b2bf      	uxth	r7, r7
 8014910:	fb1e fe03 	smulbb	lr, lr, r3
 8014914:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8014918:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801491c:	fb05 b506 	mla	r5, r5, r6, fp
 8014920:	1c7b      	adds	r3, r7, #1
 8014922:	fb0c e606 	mla	r6, ip, r6, lr
 8014926:	b2ad      	uxth	r5, r5
 8014928:	b2b6      	uxth	r6, r6
 801492a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801492e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8014932:	f105 0b01 	add.w	fp, r5, #1
 8014936:	1c77      	adds	r7, r6, #1
 8014938:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801493c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8014940:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014944:	096d      	lsrs	r5, r5, #5
 8014946:	431f      	orrs	r7, r3
 8014948:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801494c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801494e:	433d      	orrs	r5, r7
 8014950:	801d      	strh	r5, [r3, #0]
 8014952:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014954:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014956:	3302      	adds	r3, #2
 8014958:	930c      	str	r3, [sp, #48]	; 0x30
 801495a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801495c:	4413      	add	r3, r2
 801495e:	9327      	str	r3, [sp, #156]	; 0x9c
 8014960:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014962:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014964:	4413      	add	r3, r2
 8014966:	9328      	str	r3, [sp, #160]	; 0xa0
 8014968:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801496a:	3b01      	subs	r3, #1
 801496c:	9311      	str	r3, [sp, #68]	; 0x44
 801496e:	e732      	b.n	80147d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014970:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014972:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8014974:	4433      	add	r3, r6
 8014976:	9327      	str	r3, [sp, #156]	; 0x9c
 8014978:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 801497a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801497c:	4433      	add	r3, r6
 801497e:	9328      	str	r3, [sp, #160]	; 0xa0
 8014980:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014982:	3b01      	subs	r3, #1
 8014984:	9309      	str	r3, [sp, #36]	; 0x24
 8014986:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014988:	3302      	adds	r3, #2
 801498a:	930a      	str	r3, [sp, #40]	; 0x28
 801498c:	e702      	b.n	8014794 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801498e:	d027      	beq.n	80149e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014990:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014992:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8014994:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8014996:	3b01      	subs	r3, #1
 8014998:	fb00 5003 	mla	r0, r0, r3, r5
 801499c:	1400      	asrs	r0, r0, #16
 801499e:	f53f af16 	bmi.w	80147ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80149a2:	3901      	subs	r1, #1
 80149a4:	4288      	cmp	r0, r1
 80149a6:	f6bf af12 	bge.w	80147ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80149aa:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80149ac:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80149ae:	fb01 0303 	mla	r3, r1, r3, r0
 80149b2:	141b      	asrs	r3, r3, #16
 80149b4:	f53f af0b 	bmi.w	80147ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80149b8:	3a01      	subs	r2, #1
 80149ba:	4293      	cmp	r3, r2
 80149bc:	f6bf af07 	bge.w	80147ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80149c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80149c2:	9311      	str	r3, [sp, #68]	; 0x44
 80149c4:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80149c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80149ca:	930c      	str	r3, [sp, #48]	; 0x30
 80149cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80149ce:	2b00      	cmp	r3, #0
 80149d0:	dc70      	bgt.n	8014ab4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80149d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80149d4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80149d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80149da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80149de:	930a      	str	r3, [sp, #40]	; 0x28
 80149e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80149e2:	2b00      	cmp	r3, #0
 80149e4:	f340 8124 	ble.w	8014c30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80149e8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80149ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80149f0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80149f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80149f6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80149fa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80149fe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014a02:	eef0 6a48 	vmov.f32	s13, s16
 8014a06:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014a0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014a0e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014a12:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8014a16:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014a1a:	eef0 6a68 	vmov.f32	s13, s17
 8014a1e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014a22:	ee18 2a10 	vmov	r2, s16
 8014a26:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014a2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a2e:	ee18 2a90 	vmov	r2, s17
 8014a32:	9329      	str	r3, [sp, #164]	; 0xa4
 8014a34:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014a36:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a3a:	932a      	str	r3, [sp, #168]	; 0xa8
 8014a3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a3e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014a40:	3b01      	subs	r3, #1
 8014a42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014a46:	930e      	str	r3, [sp, #56]	; 0x38
 8014a48:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014a4a:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8014a4e:	bf08      	it	eq
 8014a50:	4613      	moveq	r3, r2
 8014a52:	9309      	str	r3, [sp, #36]	; 0x24
 8014a54:	eef0 8a67 	vmov.f32	s17, s15
 8014a58:	eeb0 8a47 	vmov.f32	s16, s14
 8014a5c:	e68c      	b.n	8014778 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014a5e:	b149      	cbz	r1, 8014a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8014a60:	5cb2      	ldrb	r2, [r6, r2]
 8014a62:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014a66:	4422      	add	r2, r4
 8014a68:	4628      	mov	r0, r5
 8014a6a:	46ac      	mov	ip, r5
 8014a6c:	e6f1      	b.n	8014852 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014a6e:	4628      	mov	r0, r5
 8014a70:	462a      	mov	r2, r5
 8014a72:	e6ee      	b.n	8014852 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8014a74:	4628      	mov	r0, r5
 8014a76:	462a      	mov	r2, r5
 8014a78:	e7f7      	b.n	8014a6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8014a7a:	1c47      	adds	r7, r0, #1
 8014a7c:	f53f af69 	bmi.w	8014952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8014a80:	42ba      	cmp	r2, r7
 8014a82:	f6ff af66 	blt.w	8014952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8014a86:	1c6f      	adds	r7, r5, #1
 8014a88:	f53f af63 	bmi.w	8014952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8014a8c:	42be      	cmp	r6, r7
 8014a8e:	f6ff af60 	blt.w	8014952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8014a92:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014a94:	9002      	str	r0, [sp, #8]
 8014a96:	b236      	sxth	r6, r6
 8014a98:	b212      	sxth	r2, r2
 8014a9a:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8014a9e:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8014aa2:	9200      	str	r2, [sp, #0]
 8014aa4:	9601      	str	r6, [sp, #4]
 8014aa6:	4623      	mov	r3, r4
 8014aa8:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8014aac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014aae:	f7ff fd49 	bl	8014544 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8014ab2:	e74e      	b.n	8014952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8014ab4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014ab6:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8014ab8:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8014aba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014abc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014ac0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014ac2:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8014ac6:	142d      	asrs	r5, r5, #16
 8014ac8:	1400      	asrs	r0, r0, #16
 8014aca:	fb02 5000 	mla	r0, r2, r0, r5
 8014ace:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8014ad0:	f815 9000 	ldrb.w	r9, [r5, r0]
 8014ad4:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014ad8:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8014adc:	182e      	adds	r6, r5, r0
 8014ade:	eb04 0509 	add.w	r5, r4, r9
 8014ae2:	2b00      	cmp	r3, #0
 8014ae4:	f000 8096 	beq.w	8014c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8014ae8:	7877      	ldrb	r7, [r6, #1]
 8014aea:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8014aee:	4427      	add	r7, r4
 8014af0:	2900      	cmp	r1, #0
 8014af2:	f000 8097 	beq.w	8014c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8014af6:	18b0      	adds	r0, r6, r2
 8014af8:	5cb2      	ldrb	r2, [r6, r2]
 8014afa:	7840      	ldrb	r0, [r0, #1]
 8014afc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014b00:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014b04:	4422      	add	r2, r4
 8014b06:	4420      	add	r0, r4
 8014b08:	b29b      	uxth	r3, r3
 8014b0a:	b289      	uxth	r1, r1
 8014b0c:	fb03 f801 	mul.w	r8, r3, r1
 8014b10:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8014b12:	f895 b002 	ldrb.w	fp, [r5, #2]
 8014b16:	f8b6 c000 	ldrh.w	ip, [r6]
 8014b1a:	78be      	ldrb	r6, [r7, #2]
 8014b1c:	f814 9009 	ldrb.w	r9, [r4, r9]
 8014b20:	011b      	lsls	r3, r3, #4
 8014b22:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8014b26:	b289      	uxth	r1, r1
 8014b28:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014b2c:	eba3 0308 	sub.w	r3, r3, r8
 8014b30:	b29b      	uxth	r3, r3
 8014b32:	ebae 0e01 	sub.w	lr, lr, r1
 8014b36:	fa1f fe8e 	uxth.w	lr, lr
 8014b3a:	435e      	muls	r6, r3
 8014b3c:	fb0e 660b 	mla	r6, lr, fp, r6
 8014b40:	f892 b002 	ldrb.w	fp, [r2, #2]
 8014b44:	9310      	str	r3, [sp, #64]	; 0x40
 8014b46:	fb01 660b 	mla	r6, r1, fp, r6
 8014b4a:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014b4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014b50:	fb08 660b 	mla	r6, r8, fp, r6
 8014b54:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8014b58:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8014b5c:	fb1b fb03 	smulbb	fp, fp, r3
 8014b60:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014b64:	fb06 b60a 	mla	r6, r6, sl, fp
 8014b68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b6a:	f895 b001 	ldrb.w	fp, [r5, #1]
 8014b6e:	787d      	ldrb	r5, [r7, #1]
 8014b70:	783f      	ldrb	r7, [r7, #0]
 8014b72:	435d      	muls	r5, r3
 8014b74:	fb0e 550b 	mla	r5, lr, fp, r5
 8014b78:	f892 b001 	ldrb.w	fp, [r2, #1]
 8014b7c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014b7e:	fb01 550b 	mla	r5, r1, fp, r5
 8014b82:	f890 b001 	ldrb.w	fp, [r0, #1]
 8014b86:	fb08 550b 	mla	r5, r8, fp, r5
 8014b8a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8014b8e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014b92:	fb1b fb03 	smulbb	fp, fp, r3
 8014b96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b98:	437b      	muls	r3, r7
 8014b9a:	7817      	ldrb	r7, [r2, #0]
 8014b9c:	fb0e 3309 	mla	r3, lr, r9, r3
 8014ba0:	fb01 3307 	mla	r3, r1, r7, r3
 8014ba4:	7807      	ldrb	r7, [r0, #0]
 8014ba6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014baa:	fb08 3707 	mla	r7, r8, r7, r3
 8014bae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014bb0:	fa5f fc8c 	uxtb.w	ip, ip
 8014bb4:	fb1c fc03 	smulbb	ip, ip, r3
 8014bb8:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8014bbc:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8014bc0:	fb05 b50a 	mla	r5, r5, sl, fp
 8014bc4:	fb07 c70a 	mla	r7, r7, sl, ip
 8014bc8:	b2b6      	uxth	r6, r6
 8014bca:	b2ad      	uxth	r5, r5
 8014bcc:	b2bf      	uxth	r7, r7
 8014bce:	1c73      	adds	r3, r6, #1
 8014bd0:	1c7a      	adds	r2, r7, #1
 8014bd2:	f105 0b01 	add.w	fp, r5, #1
 8014bd6:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8014bda:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8014bde:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8014be2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014be6:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8014bea:	096d      	lsrs	r5, r5, #5
 8014bec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014bee:	4316      	orrs	r6, r2
 8014bf0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014bf4:	432e      	orrs	r6, r5
 8014bf6:	f823 6b02 	strh.w	r6, [r3], #2
 8014bfa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014bfc:	930c      	str	r3, [sp, #48]	; 0x30
 8014bfe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8014c00:	4413      	add	r3, r2
 8014c02:	9327      	str	r3, [sp, #156]	; 0x9c
 8014c04:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014c06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014c08:	4413      	add	r3, r2
 8014c0a:	9328      	str	r3, [sp, #160]	; 0xa0
 8014c0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014c0e:	3b01      	subs	r3, #1
 8014c10:	9311      	str	r3, [sp, #68]	; 0x44
 8014c12:	e6db      	b.n	80149cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8014c14:	b149      	cbz	r1, 8014c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8014c16:	5cb2      	ldrb	r2, [r6, r2]
 8014c18:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014c1c:	4422      	add	r2, r4
 8014c1e:	4628      	mov	r0, r5
 8014c20:	462f      	mov	r7, r5
 8014c22:	e771      	b.n	8014b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8014c24:	4628      	mov	r0, r5
 8014c26:	462a      	mov	r2, r5
 8014c28:	e76e      	b.n	8014b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8014c2a:	4628      	mov	r0, r5
 8014c2c:	462a      	mov	r2, r5
 8014c2e:	e7f7      	b.n	8014c20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8014c30:	b015      	add	sp, #84	; 0x54
 8014c32:	ecbd 8b08 	vpop	{d8-d11}
 8014c36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014c3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8014c3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c40:	880e      	ldrh	r6, [r1, #0]
 8014c42:	b085      	sub	sp, #20
 8014c44:	0230      	lsls	r0, r6, #8
 8014c46:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8014c4a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8014c4e:	0170      	lsls	r0, r6, #5
 8014c50:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014c54:	9101      	str	r1, [sp, #4]
 8014c56:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8014c5a:	00f6      	lsls	r6, r6, #3
 8014c5c:	ea4b 0000 	orr.w	r0, fp, r0
 8014c60:	b2f6      	uxtb	r6, r6
 8014c62:	4691      	mov	r9, r2
 8014c64:	fb05 7a0c 	mla	sl, r5, ip, r7
 8014c68:	4306      	orrs	r6, r0
 8014c6a:	2d00      	cmp	r5, #0
 8014c6c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8014c70:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8014c74:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8014c78:	9603      	str	r6, [sp, #12]
 8014c7a:	eb09 0e0a 	add.w	lr, r9, sl
 8014c7e:	db42      	blt.n	8014d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8014c80:	45a8      	cmp	r8, r5
 8014c82:	dd40      	ble.n	8014d06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 8014c84:	2f00      	cmp	r7, #0
 8014c86:	db3c      	blt.n	8014d02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8014c88:	45bc      	cmp	ip, r7
 8014c8a:	dd3a      	ble.n	8014d02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 8014c8c:	f819 600a 	ldrb.w	r6, [r9, sl]
 8014c90:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014c94:	441e      	add	r6, r3
 8014c96:	1c78      	adds	r0, r7, #1
 8014c98:	d438      	bmi.n	8014d0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8014c9a:	4584      	cmp	ip, r0
 8014c9c:	dd36      	ble.n	8014d0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8014c9e:	b3aa      	cbz	r2, 8014d0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 8014ca0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014ca4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014ca8:	4418      	add	r0, r3
 8014caa:	3501      	adds	r5, #1
 8014cac:	d432      	bmi.n	8014d14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8014cae:	45a8      	cmp	r8, r5
 8014cb0:	dd30      	ble.n	8014d14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8014cb2:	b37c      	cbz	r4, 8014d14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8014cb4:	2f00      	cmp	r7, #0
 8014cb6:	db2b      	blt.n	8014d10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8014cb8:	45bc      	cmp	ip, r7
 8014cba:	dd29      	ble.n	8014d10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8014cbc:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8014cc0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014cc4:	441d      	add	r5, r3
 8014cc6:	3701      	adds	r7, #1
 8014cc8:	d427      	bmi.n	8014d1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8014cca:	45bc      	cmp	ip, r7
 8014ccc:	dd25      	ble.n	8014d1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8014cce:	b322      	cbz	r2, 8014d1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8014cd0:	44f4      	add	ip, lr
 8014cd2:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8014cd6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8014cda:	443b      	add	r3, r7
 8014cdc:	781f      	ldrb	r7, [r3, #0]
 8014cde:	f896 9000 	ldrb.w	r9, [r6]
 8014ce2:	f890 a000 	ldrb.w	sl, [r0]
 8014ce6:	f895 8000 	ldrb.w	r8, [r5]
 8014cea:	2a0f      	cmp	r2, #15
 8014cec:	4639      	mov	r1, r7
 8014cee:	d801      	bhi.n	8014cf4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8014cf0:	2c0f      	cmp	r4, #15
 8014cf2:	d914      	bls.n	8014d1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8014cf4:	4b2c      	ldr	r3, [pc, #176]	; (8014da8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8014cf6:	4a2d      	ldr	r2, [pc, #180]	; (8014dac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8014cf8:	482d      	ldr	r0, [pc, #180]	; (8014db0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 8014cfa:	f240 11f9 	movw	r1, #505	; 0x1f9
 8014cfe:	f005 ffcb 	bl	801ac98 <__assert_func>
 8014d02:	ae03      	add	r6, sp, #12
 8014d04:	e7c7      	b.n	8014c96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8014d06:	a803      	add	r0, sp, #12
 8014d08:	4606      	mov	r6, r0
 8014d0a:	e7ce      	b.n	8014caa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8014d0c:	a803      	add	r0, sp, #12
 8014d0e:	e7cc      	b.n	8014caa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8014d10:	ad03      	add	r5, sp, #12
 8014d12:	e7d8      	b.n	8014cc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8014d14:	ab03      	add	r3, sp, #12
 8014d16:	461d      	mov	r5, r3
 8014d18:	e7e0      	b.n	8014cdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8014d1a:	ab03      	add	r3, sp, #12
 8014d1c:	e7de      	b.n	8014cdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 8014d1e:	b292      	uxth	r2, r2
 8014d20:	b2a4      	uxth	r4, r4
 8014d22:	fb02 fe04 	mul.w	lr, r2, r4
 8014d26:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 8014d2a:	0112      	lsls	r2, r2, #4
 8014d2c:	b2a4      	uxth	r4, r4
 8014d2e:	f890 c002 	ldrb.w	ip, [r0, #2]
 8014d32:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014d36:	7840      	ldrb	r0, [r0, #1]
 8014d38:	7876      	ldrb	r6, [r6, #1]
 8014d3a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8014d3e:	eba2 020e 	sub.w	r2, r2, lr
 8014d42:	b292      	uxth	r2, r2
 8014d44:	1b3f      	subs	r7, r7, r4
 8014d46:	b2bf      	uxth	r7, r7
 8014d48:	fb02 fc0c 	mul.w	ip, r2, ip
 8014d4c:	fb07 cc0b 	mla	ip, r7, fp, ip
 8014d50:	f895 b002 	ldrb.w	fp, [r5, #2]
 8014d54:	fb04 cc0b 	mla	ip, r4, fp, ip
 8014d58:	f893 b002 	ldrb.w	fp, [r3, #2]
 8014d5c:	785b      	ldrb	r3, [r3, #1]
 8014d5e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8014d62:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8014d66:	fb02 fc0a 	mul.w	ip, r2, sl
 8014d6a:	4342      	muls	r2, r0
 8014d6c:	7868      	ldrb	r0, [r5, #1]
 8014d6e:	fb07 cc09 	mla	ip, r7, r9, ip
 8014d72:	fb07 2206 	mla	r2, r7, r6, r2
 8014d76:	fb04 cc08 	mla	ip, r4, r8, ip
 8014d7a:	fb04 2400 	mla	r4, r4, r0, r2
 8014d7e:	fb0e cc01 	mla	ip, lr, r1, ip
 8014d82:	fb0e 4e03 	mla	lr, lr, r3, r4
 8014d86:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014d8a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8014d8e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014d92:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8014d96:	9b01      	ldr	r3, [sp, #4]
 8014d98:	ea4c 0c0e 	orr.w	ip, ip, lr
 8014d9c:	f8a3 c000 	strh.w	ip, [r3]
 8014da0:	b005      	add	sp, #20
 8014da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014da6:	bf00      	nop
 8014da8:	0801eaff 	.word	0x0801eaff
 8014dac:	0801f02e 	.word	0x0801f02e
 8014db0:	0801eacc 	.word	0x0801eacc

08014db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014db8:	ed2d 8b08 	vpush	{d8-d11}
 8014dbc:	b08f      	sub	sp, #60	; 0x3c
 8014dbe:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8014dc2:	920c      	str	r2, [sp, #48]	; 0x30
 8014dc4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8014dc6:	910a      	str	r1, [sp, #40]	; 0x28
 8014dc8:	9306      	str	r3, [sp, #24]
 8014dca:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8014dce:	900d      	str	r0, [sp, #52]	; 0x34
 8014dd0:	6850      	ldr	r0, [r2, #4]
 8014dd2:	6812      	ldr	r2, [r2, #0]
 8014dd4:	fb00 1303 	mla	r3, r0, r3, r1
 8014dd8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014ddc:	9307      	str	r3, [sp, #28]
 8014dde:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014de0:	681b      	ldr	r3, [r3, #0]
 8014de2:	9308      	str	r3, [sp, #32]
 8014de4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014de6:	685c      	ldr	r4, [r3, #4]
 8014de8:	eeb0 aa40 	vmov.f32	s20, s0
 8014dec:	eef0 9a60 	vmov.f32	s19, s1
 8014df0:	eeb0 9a41 	vmov.f32	s18, s2
 8014df4:	eeb0 8a62 	vmov.f32	s16, s5
 8014df8:	eef0 8a43 	vmov.f32	s17, s6
 8014dfc:	eef0 ba44 	vmov.f32	s23, s8
 8014e00:	eeb0 ba64 	vmov.f32	s22, s9
 8014e04:	eef0 aa45 	vmov.f32	s21, s10
 8014e08:	3404      	adds	r4, #4
 8014e0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014e0c:	2b00      	cmp	r3, #0
 8014e0e:	dc03      	bgt.n	8014e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014e10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e12:	2b00      	cmp	r3, #0
 8014e14:	f340 81d6 	ble.w	80151c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8014e18:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014e1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014e1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014e22:	1e48      	subs	r0, r1, #1
 8014e24:	1e56      	subs	r6, r2, #1
 8014e26:	9b06      	ldr	r3, [sp, #24]
 8014e28:	2b00      	cmp	r3, #0
 8014e2a:	f340 80b7 	ble.w	8014f9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014e2e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8014e32:	ea4f 4325 	mov.w	r3, r5, asr #16
 8014e36:	d406      	bmi.n	8014e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014e38:	4287      	cmp	r7, r0
 8014e3a:	da04      	bge.n	8014e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014e3c:	2b00      	cmp	r3, #0
 8014e3e:	db02      	blt.n	8014e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014e40:	42b3      	cmp	r3, r6
 8014e42:	f2c0 80ac 	blt.w	8014f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8014e46:	3701      	adds	r7, #1
 8014e48:	f100 809d 	bmi.w	8014f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014e4c:	42b9      	cmp	r1, r7
 8014e4e:	f2c0 809a 	blt.w	8014f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014e52:	3301      	adds	r3, #1
 8014e54:	f100 8097 	bmi.w	8014f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014e58:	429a      	cmp	r2, r3
 8014e5a:	f2c0 8094 	blt.w	8014f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014e5e:	9b06      	ldr	r3, [sp, #24]
 8014e60:	930b      	str	r3, [sp, #44]	; 0x2c
 8014e62:	9b07      	ldr	r3, [sp, #28]
 8014e64:	9309      	str	r3, [sp, #36]	; 0x24
 8014e66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014e68:	2b00      	cmp	r3, #0
 8014e6a:	f340 80b5 	ble.w	8014fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8014e6e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8014e70:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014e72:	68c7      	ldr	r7, [r0, #12]
 8014e74:	6892      	ldr	r2, [r2, #8]
 8014e76:	ea5f 402b 	movs.w	r0, fp, asr #16
 8014e7a:	ea4f 4625 	mov.w	r6, r5, asr #16
 8014e7e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8014e82:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014e86:	f100 80fb 	bmi.w	8015080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8014e8a:	f102 3cff 	add.w	ip, r2, #4294967295
 8014e8e:	4560      	cmp	r0, ip
 8014e90:	f280 80f6 	bge.w	8015080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8014e94:	2e00      	cmp	r6, #0
 8014e96:	f2c0 80f3 	blt.w	8015080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8014e9a:	f107 3cff 	add.w	ip, r7, #4294967295
 8014e9e:	4566      	cmp	r6, ip
 8014ea0:	f280 80ee 	bge.w	8015080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8014ea4:	b212      	sxth	r2, r2
 8014ea6:	fb06 0002 	mla	r0, r6, r2, r0
 8014eaa:	9e08      	ldr	r6, [sp, #32]
 8014eac:	1837      	adds	r7, r6, r0
 8014eae:	5c30      	ldrb	r0, [r6, r0]
 8014eb0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8014eb4:	eb04 0c08 	add.w	ip, r4, r8
 8014eb8:	2b00      	cmp	r3, #0
 8014eba:	f000 80d3 	beq.w	8015064 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8014ebe:	787e      	ldrb	r6, [r7, #1]
 8014ec0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014ec4:	4426      	add	r6, r4
 8014ec6:	2900      	cmp	r1, #0
 8014ec8:	f000 80d4 	beq.w	8015074 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8014ecc:	18b8      	adds	r0, r7, r2
 8014ece:	5cba      	ldrb	r2, [r7, r2]
 8014ed0:	7840      	ldrb	r0, [r0, #1]
 8014ed2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014ed6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014eda:	4422      	add	r2, r4
 8014edc:	4420      	add	r0, r4
 8014ede:	b29b      	uxth	r3, r3
 8014ee0:	b289      	uxth	r1, r1
 8014ee2:	fb03 f901 	mul.w	r9, r3, r1
 8014ee6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014eea:	011b      	lsls	r3, r3, #4
 8014eec:	b289      	uxth	r1, r1
 8014eee:	78b7      	ldrb	r7, [r6, #2]
 8014ef0:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014ef4:	f89c c001 	ldrb.w	ip, [ip, #1]
 8014ef8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014efc:	eba3 0309 	sub.w	r3, r3, r9
 8014f00:	b29b      	uxth	r3, r3
 8014f02:	ebae 0e01 	sub.w	lr, lr, r1
 8014f06:	fa1f fe8e 	uxth.w	lr, lr
 8014f0a:	435f      	muls	r7, r3
 8014f0c:	fb0e 770a 	mla	r7, lr, sl, r7
 8014f10:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014f14:	fb01 770a 	mla	r7, r1, sl, r7
 8014f18:	f890 a002 	ldrb.w	sl, [r0, #2]
 8014f1c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8014f20:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014f24:	f896 8000 	ldrb.w	r8, [r6]
 8014f28:	7876      	ldrb	r6, [r6, #1]
 8014f2a:	fb03 f808 	mul.w	r8, r3, r8
 8014f2e:	fb0e 8807 	mla	r8, lr, r7, r8
 8014f32:	7817      	ldrb	r7, [r2, #0]
 8014f34:	fb01 8807 	mla	r8, r1, r7, r8
 8014f38:	7807      	ldrb	r7, [r0, #0]
 8014f3a:	fb09 8707 	mla	r7, r9, r7, r8
 8014f3e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8014f42:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014f46:	ea47 070a 	orr.w	r7, r7, sl
 8014f4a:	4373      	muls	r3, r6
 8014f4c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8014f50:	fb0e 330c 	mla	r3, lr, ip, r3
 8014f54:	fb01 310a 	mla	r1, r1, sl, r3
 8014f58:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014f5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f5e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8014f62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014f66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014f6a:	ea47 070a 	orr.w	r7, r7, sl
 8014f6e:	801f      	strh	r7, [r3, #0]
 8014f70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f72:	3302      	adds	r3, #2
 8014f74:	9309      	str	r3, [sp, #36]	; 0x24
 8014f76:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014f78:	449b      	add	fp, r3
 8014f7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014f7c:	441d      	add	r5, r3
 8014f7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014f80:	3b01      	subs	r3, #1
 8014f82:	930b      	str	r3, [sp, #44]	; 0x2c
 8014f84:	e76f      	b.n	8014e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014f86:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014f88:	449b      	add	fp, r3
 8014f8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014f8c:	441d      	add	r5, r3
 8014f8e:	9b06      	ldr	r3, [sp, #24]
 8014f90:	3b01      	subs	r3, #1
 8014f92:	9306      	str	r3, [sp, #24]
 8014f94:	9b07      	ldr	r3, [sp, #28]
 8014f96:	3302      	adds	r3, #2
 8014f98:	9307      	str	r3, [sp, #28]
 8014f9a:	e744      	b.n	8014e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f9c:	d023      	beq.n	8014fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8014f9e:	9b06      	ldr	r3, [sp, #24]
 8014fa0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8014fa2:	3b01      	subs	r3, #1
 8014fa4:	fb00 b003 	mla	r0, r0, r3, fp
 8014fa8:	1400      	asrs	r0, r0, #16
 8014faa:	f53f af58 	bmi.w	8014e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014fae:	3901      	subs	r1, #1
 8014fb0:	4288      	cmp	r0, r1
 8014fb2:	f6bf af54 	bge.w	8014e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014fb6:	9924      	ldr	r1, [sp, #144]	; 0x90
 8014fb8:	fb01 5303 	mla	r3, r1, r3, r5
 8014fbc:	141b      	asrs	r3, r3, #16
 8014fbe:	f53f af4e 	bmi.w	8014e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014fc2:	3a01      	subs	r2, #1
 8014fc4:	4293      	cmp	r3, r2
 8014fc6:	f6bf af4a 	bge.w	8014e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014fca:	9b06      	ldr	r3, [sp, #24]
 8014fcc:	9309      	str	r3, [sp, #36]	; 0x24
 8014fce:	9b07      	ldr	r3, [sp, #28]
 8014fd0:	930b      	str	r3, [sp, #44]	; 0x2c
 8014fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014fd4:	2b00      	cmp	r3, #0
 8014fd6:	dc70      	bgt.n	80150ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8014fd8:	9b06      	ldr	r3, [sp, #24]
 8014fda:	9a07      	ldr	r2, [sp, #28]
 8014fdc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014fe0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014fe4:	9307      	str	r3, [sp, #28]
 8014fe6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014fe8:	2b00      	cmp	r3, #0
 8014fea:	f340 80eb 	ble.w	80151c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8014fee:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014ff2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014ff6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014ffa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014ffc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015000:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015004:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015008:	eef0 6a48 	vmov.f32	s13, s16
 801500c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015010:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015014:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015018:	ee16 ba90 	vmov	fp, s13
 801501c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015020:	eef0 6a68 	vmov.f32	s13, s17
 8015024:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015028:	ee18 2a10 	vmov	r2, s16
 801502c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015030:	fb92 f3f3 	sdiv	r3, r2, r3
 8015034:	ee18 2a90 	vmov	r2, s17
 8015038:	9323      	str	r3, [sp, #140]	; 0x8c
 801503a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801503c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015040:	9324      	str	r3, [sp, #144]	; 0x90
 8015042:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015044:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015046:	3b01      	subs	r3, #1
 8015048:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801504c:	930a      	str	r3, [sp, #40]	; 0x28
 801504e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015050:	bf08      	it	eq
 8015052:	4613      	moveq	r3, r2
 8015054:	ee16 5a90 	vmov	r5, s13
 8015058:	9306      	str	r3, [sp, #24]
 801505a:	eef0 8a67 	vmov.f32	s17, s15
 801505e:	eeb0 8a47 	vmov.f32	s16, s14
 8015062:	e6d2      	b.n	8014e0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8015064:	b149      	cbz	r1, 801507a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8015066:	5cba      	ldrb	r2, [r7, r2]
 8015068:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801506c:	4422      	add	r2, r4
 801506e:	4660      	mov	r0, ip
 8015070:	4666      	mov	r6, ip
 8015072:	e734      	b.n	8014ede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8015074:	4660      	mov	r0, ip
 8015076:	4662      	mov	r2, ip
 8015078:	e731      	b.n	8014ede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 801507a:	4660      	mov	r0, ip
 801507c:	4662      	mov	r2, ip
 801507e:	e7f7      	b.n	8015070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8015080:	f110 0c01 	adds.w	ip, r0, #1
 8015084:	f53f af74 	bmi.w	8014f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015088:	4562      	cmp	r2, ip
 801508a:	f6ff af71 	blt.w	8014f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801508e:	f116 0c01 	adds.w	ip, r6, #1
 8015092:	f53f af6d 	bmi.w	8014f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015096:	4567      	cmp	r7, ip
 8015098:	f6ff af6a 	blt.w	8014f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801509c:	b23f      	sxth	r7, r7
 801509e:	b212      	sxth	r2, r2
 80150a0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80150a4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80150a8:	9200      	str	r2, [sp, #0]
 80150aa:	9701      	str	r7, [sp, #4]
 80150ac:	4623      	mov	r3, r4
 80150ae:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80150b2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80150b4:	f7ff fdc2 	bl	8014c3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80150b8:	e75a      	b.n	8014f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80150ba:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80150bc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80150c0:	ea4f 462b 	mov.w	r6, fp, asr #16
 80150c4:	1428      	asrs	r0, r5, #16
 80150c6:	fb02 6000 	mla	r0, r2, r0, r6
 80150ca:	9e08      	ldr	r6, [sp, #32]
 80150cc:	f816 8000 	ldrb.w	r8, [r6, r0]
 80150d0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80150d4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80150d8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80150dc:	1837      	adds	r7, r6, r0
 80150de:	eb04 0c08 	add.w	ip, r4, r8
 80150e2:	2b00      	cmp	r3, #0
 80150e4:	d060      	beq.n	80151a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80150e6:	787e      	ldrb	r6, [r7, #1]
 80150e8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80150ec:	4426      	add	r6, r4
 80150ee:	2900      	cmp	r1, #0
 80150f0:	d062      	beq.n	80151b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 80150f2:	18b8      	adds	r0, r7, r2
 80150f4:	5cba      	ldrb	r2, [r7, r2]
 80150f6:	7840      	ldrb	r0, [r0, #1]
 80150f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80150fc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015100:	4422      	add	r2, r4
 8015102:	4420      	add	r0, r4
 8015104:	b29b      	uxth	r3, r3
 8015106:	b289      	uxth	r1, r1
 8015108:	fb03 f901 	mul.w	r9, r3, r1
 801510c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015110:	011b      	lsls	r3, r3, #4
 8015112:	b289      	uxth	r1, r1
 8015114:	78b7      	ldrb	r7, [r6, #2]
 8015116:	f89c a002 	ldrb.w	sl, [ip, #2]
 801511a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801511e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015122:	eba3 0309 	sub.w	r3, r3, r9
 8015126:	b29b      	uxth	r3, r3
 8015128:	ebae 0e01 	sub.w	lr, lr, r1
 801512c:	fa1f fe8e 	uxth.w	lr, lr
 8015130:	435f      	muls	r7, r3
 8015132:	fb0e 770a 	mla	r7, lr, sl, r7
 8015136:	f892 a002 	ldrb.w	sl, [r2, #2]
 801513a:	fb01 770a 	mla	r7, r1, sl, r7
 801513e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015142:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015146:	f814 7008 	ldrb.w	r7, [r4, r8]
 801514a:	f896 8000 	ldrb.w	r8, [r6]
 801514e:	7876      	ldrb	r6, [r6, #1]
 8015150:	fb03 f808 	mul.w	r8, r3, r8
 8015154:	fb0e 8807 	mla	r8, lr, r7, r8
 8015158:	7817      	ldrb	r7, [r2, #0]
 801515a:	fb01 8807 	mla	r8, r1, r7, r8
 801515e:	7807      	ldrb	r7, [r0, #0]
 8015160:	fb09 8707 	mla	r7, r9, r7, r8
 8015164:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015168:	4373      	muls	r3, r6
 801516a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801516e:	7856      	ldrb	r6, [r2, #1]
 8015170:	ea47 070a 	orr.w	r7, r7, sl
 8015174:	fb0e 330c 	mla	r3, lr, ip, r3
 8015178:	f890 a001 	ldrb.w	sl, [r0, #1]
 801517c:	fb01 3306 	mla	r3, r1, r6, r3
 8015180:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015184:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015188:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801518a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801518e:	ea47 070a 	orr.w	r7, r7, sl
 8015192:	f823 7b02 	strh.w	r7, [r3], #2
 8015196:	930b      	str	r3, [sp, #44]	; 0x2c
 8015198:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801519a:	449b      	add	fp, r3
 801519c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801519e:	441d      	add	r5, r3
 80151a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80151a2:	3b01      	subs	r3, #1
 80151a4:	9309      	str	r3, [sp, #36]	; 0x24
 80151a6:	e714      	b.n	8014fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 80151a8:	b149      	cbz	r1, 80151be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 80151aa:	5cba      	ldrb	r2, [r7, r2]
 80151ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80151b0:	4422      	add	r2, r4
 80151b2:	4660      	mov	r0, ip
 80151b4:	4666      	mov	r6, ip
 80151b6:	e7a5      	b.n	8015104 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80151b8:	4660      	mov	r0, ip
 80151ba:	4662      	mov	r2, ip
 80151bc:	e7a2      	b.n	8015104 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80151be:	4660      	mov	r0, ip
 80151c0:	4662      	mov	r2, ip
 80151c2:	e7f7      	b.n	80151b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 80151c4:	b00f      	add	sp, #60	; 0x3c
 80151c6:	ecbd 8b08 	vpop	{d8-d11}
 80151ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080151d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80151d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151d4:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 80151d8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80151dc:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 80151e0:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80151e4:	f89d 7044 	ldrb.w	r7, [sp, #68]	; 0x44
 80151e8:	fb04 560c 	mla	r6, r4, ip, r5
 80151ec:	2c00      	cmp	r4, #0
 80151ee:	eb02 0e06 	add.w	lr, r2, r6
 80151f2:	db3d      	blt.n	8015270 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 80151f4:	45a0      	cmp	r8, r4
 80151f6:	dd3b      	ble.n	8015270 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa0>
 80151f8:	2d00      	cmp	r5, #0
 80151fa:	db37      	blt.n	801526c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 80151fc:	45ac      	cmp	ip, r5
 80151fe:	dd35      	ble.n	801526c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9c>
 8015200:	5d92      	ldrb	r2, [r2, r6]
 8015202:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8015206:	1c6e      	adds	r6, r5, #1
 8015208:	d435      	bmi.n	8015276 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801520a:	45b4      	cmp	ip, r6
 801520c:	dd33      	ble.n	8015276 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801520e:	b3a0      	cbz	r0, 801527a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xaa>
 8015210:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015214:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8015218:	3401      	adds	r4, #1
 801521a:	d432      	bmi.n	8015282 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 801521c:	45a0      	cmp	r8, r4
 801521e:	dd30      	ble.n	8015282 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb2>
 8015220:	b397      	cbz	r7, 8015288 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb8>
 8015222:	2d00      	cmp	r5, #0
 8015224:	db2b      	blt.n	801527e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 8015226:	45ac      	cmp	ip, r5
 8015228:	dd29      	ble.n	801527e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xae>
 801522a:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801522e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8015232:	3501      	adds	r5, #1
 8015234:	d42b      	bmi.n	801528e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8015236:	45ac      	cmp	ip, r5
 8015238:	dd29      	ble.n	801528e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801523a:	b350      	cbz	r0, 8015292 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 801523c:	44f4      	add	ip, lr
 801523e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8015242:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8015246:	280f      	cmp	r0, #15
 8015248:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801524c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015250:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015254:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8015258:	d801      	bhi.n	801525e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x8e>
 801525a:	2f0f      	cmp	r7, #15
 801525c:	d91b      	bls.n	8015296 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc6>
 801525e:	4b8d      	ldr	r3, [pc, #564]	; (8015494 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8015260:	4a8d      	ldr	r2, [pc, #564]	; (8015498 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8015262:	488e      	ldr	r0, [pc, #568]	; (801549c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8015264:	f240 11f9 	movw	r1, #505	; 0x1f9
 8015268:	f005 fd16 	bl	801ac98 <__assert_func>
 801526c:	2200      	movs	r2, #0
 801526e:	e7ca      	b.n	8015206 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x36>
 8015270:	2600      	movs	r6, #0
 8015272:	4632      	mov	r2, r6
 8015274:	e7d0      	b.n	8015218 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 8015276:	2600      	movs	r6, #0
 8015278:	e7ce      	b.n	8015218 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801527a:	4606      	mov	r6, r0
 801527c:	e7cc      	b.n	8015218 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x48>
 801527e:	2400      	movs	r4, #0
 8015280:	e7d7      	b.n	8015232 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x62>
 8015282:	2300      	movs	r3, #0
 8015284:	461c      	mov	r4, r3
 8015286:	e7de      	b.n	8015246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8015288:	463b      	mov	r3, r7
 801528a:	463c      	mov	r4, r7
 801528c:	e7db      	b.n	8015246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 801528e:	2300      	movs	r3, #0
 8015290:	e7d9      	b.n	8015246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8015292:	4603      	mov	r3, r0
 8015294:	e7d7      	b.n	8015246 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x76>
 8015296:	b280      	uxth	r0, r0
 8015298:	b2bf      	uxth	r7, r7
 801529a:	fb07 fe00 	mul.w	lr, r7, r0
 801529e:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80152a2:	0100      	lsls	r0, r0, #4
 80152a4:	eba0 0c0e 	sub.w	ip, r0, lr
 80152a8:	b2bf      	uxth	r7, r7
 80152aa:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80152ae:	fa1f fc8c 	uxth.w	ip, ip
 80152b2:	1bed      	subs	r5, r5, r7
 80152b4:	b2ad      	uxth	r5, r5
 80152b6:	fb0a f00c 	mul.w	r0, sl, ip
 80152ba:	fb0b 0005 	mla	r0, fp, r5, r0
 80152be:	fb07 0009 	mla	r0, r7, r9, r0
 80152c2:	fb0e 0008 	mla	r0, lr, r8, r0
 80152c6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80152ca:	9001      	str	r0, [sp, #4]
 80152cc:	2800      	cmp	r0, #0
 80152ce:	f000 80de 	beq.w	801548e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2be>
 80152d2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80152d6:	d018      	beq.n	801530a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x13a>
 80152d8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80152dc:	fb0b f000 	mul.w	r0, fp, r0
 80152e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80152e4:	fb0b fb02 	mul.w	fp, fp, r2
 80152e8:	0a02      	lsrs	r2, r0, #8
 80152ea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80152ee:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80152f2:	4402      	add	r2, r0
 80152f4:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80152f8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80152fc:	0a12      	lsrs	r2, r2, #8
 80152fe:	0a00      	lsrs	r0, r0, #8
 8015300:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015304:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015308:	4302      	orrs	r2, r0
 801530a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801530e:	d01a      	beq.n	8015346 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x176>
 8015310:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8015314:	fb0a f000 	mul.w	r0, sl, r0
 8015318:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801531c:	fb0a fa06 	mul.w	sl, sl, r6
 8015320:	0a06      	lsrs	r6, r0, #8
 8015322:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015326:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801532a:	4406      	add	r6, r0
 801532c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8015330:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8015334:	0a36      	lsrs	r6, r6, #8
 8015336:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801533a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801533e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015342:	ea46 060a 	orr.w	r6, r6, sl
 8015346:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801534a:	d01b      	beq.n	8015384 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1b4>
 801534c:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015350:	fb09 fa0a 	mul.w	sl, r9, sl
 8015354:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015358:	fb09 f004 	mul.w	r0, r9, r4
 801535c:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015360:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015364:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015368:	f500 7980 	add.w	r9, r0, #256	; 0x100
 801536c:	4454      	add	r4, sl
 801536e:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 8015372:	0a24      	lsrs	r4, r4, #8
 8015374:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015378:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801537c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8015380:	ea44 0409 	orr.w	r4, r4, r9
 8015384:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015388:	d01b      	beq.n	80153c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1f2>
 801538a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801538e:	fb08 f909 	mul.w	r9, r8, r9
 8015392:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015396:	fb08 f003 	mul.w	r0, r8, r3
 801539a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801539e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80153a2:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80153a6:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80153aa:	444b      	add	r3, r9
 80153ac:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 80153b0:	0a1b      	lsrs	r3, r3, #8
 80153b2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80153b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80153ba:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80153be:	ea43 0308 	orr.w	r3, r3, r8
 80153c2:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80153c6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80153ca:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 80153ce:	fb0c f808 	mul.w	r8, ip, r8
 80153d2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80153d6:	fb0c f606 	mul.w	r6, ip, r6
 80153da:	fb05 8909 	mla	r9, r5, r9, r8
 80153de:	fb05 6502 	mla	r5, r5, r2, r6
 80153e2:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80153e6:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80153ea:	9a01      	ldr	r2, [sp, #4]
 80153ec:	8808      	ldrh	r0, [r1, #0]
 80153ee:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80153f2:	fb07 9908 	mla	r9, r7, r8, r9
 80153f6:	fb07 5704 	mla	r7, r7, r4, r5
 80153fa:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80153fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015402:	b2b6      	uxth	r6, r6
 8015404:	fb0e 9808 	mla	r8, lr, r8, r9
 8015408:	fb0e 7e03 	mla	lr, lr, r3, r7
 801540c:	4372      	muls	r2, r6
 801540e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015412:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015416:	1c53      	adds	r3, r2, #1
 8015418:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801541c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015420:	ea48 0e0e 	orr.w	lr, r8, lr
 8015424:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015428:	1205      	asrs	r5, r0, #8
 801542a:	ea4f 421e 	mov.w	r2, lr, lsr #16
 801542e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8015432:	b2db      	uxtb	r3, r3
 8015434:	fb12 f206 	smulbb	r2, r2, r6
 8015438:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801543c:	fb05 2503 	mla	r5, r5, r3, r2
 8015440:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8015444:	10c2      	asrs	r2, r0, #3
 8015446:	fa5f fe8e 	uxtb.w	lr, lr
 801544a:	00c0      	lsls	r0, r0, #3
 801544c:	fb14 f406 	smulbb	r4, r4, r6
 8015450:	b2c0      	uxtb	r0, r0
 8015452:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015456:	fb1e fe06 	smulbb	lr, lr, r6
 801545a:	fb02 4203 	mla	r2, r2, r3, r4
 801545e:	b2ad      	uxth	r5, r5
 8015460:	fb00 e303 	mla	r3, r0, r3, lr
 8015464:	b298      	uxth	r0, r3
 8015466:	b294      	uxth	r4, r2
 8015468:	1c6b      	adds	r3, r5, #1
 801546a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801546e:	1c62      	adds	r2, r4, #1
 8015470:	1c43      	adds	r3, r0, #1
 8015472:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015476:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801547a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801547e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015482:	0952      	lsrs	r2, r2, #5
 8015484:	432b      	orrs	r3, r5
 8015486:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801548a:	4313      	orrs	r3, r2
 801548c:	800b      	strh	r3, [r1, #0]
 801548e:	b003      	add	sp, #12
 8015490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015494:	0801eaff 	.word	0x0801eaff
 8015498:	0801f02e 	.word	0x0801f02e
 801549c:	0801eacc 	.word	0x0801eacc

080154a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80154a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154a4:	ed2d 8b08 	vpush	{d8-d11}
 80154a8:	b09f      	sub	sp, #124	; 0x7c
 80154aa:	eeb0 aa40 	vmov.f32	s20, s0
 80154ae:	921b      	str	r2, [sp, #108]	; 0x6c
 80154b0:	9309      	str	r3, [sp, #36]	; 0x24
 80154b2:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80154b4:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 80154b8:	931c      	str	r3, [sp, #112]	; 0x70
 80154ba:	9119      	str	r1, [sp, #100]	; 0x64
 80154bc:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 80154c0:	901d      	str	r0, [sp, #116]	; 0x74
 80154c2:	6850      	ldr	r0, [r2, #4]
 80154c4:	6812      	ldr	r2, [r2, #0]
 80154c6:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 80154c8:	fb00 1303 	mla	r3, r0, r3, r1
 80154cc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80154d0:	930c      	str	r3, [sp, #48]	; 0x30
 80154d2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80154d4:	681b      	ldr	r3, [r3, #0]
 80154d6:	9312      	str	r3, [sp, #72]	; 0x48
 80154d8:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80154da:	685e      	ldr	r6, [r3, #4]
 80154dc:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80154e0:	930d      	str	r3, [sp, #52]	; 0x34
 80154e2:	eef0 9a60 	vmov.f32	s19, s1
 80154e6:	eeb0 9a41 	vmov.f32	s18, s2
 80154ea:	eeb0 8a62 	vmov.f32	s16, s5
 80154ee:	eef0 8a43 	vmov.f32	s17, s6
 80154f2:	eef0 ba44 	vmov.f32	s23, s8
 80154f6:	eeb0 ba64 	vmov.f32	s22, s9
 80154fa:	eef0 aa45 	vmov.f32	s21, s10
 80154fe:	3604      	adds	r6, #4
 8015500:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015502:	2b00      	cmp	r3, #0
 8015504:	dc03      	bgt.n	801550e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015506:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015508:	2b00      	cmp	r3, #0
 801550a:	f340 8388 	ble.w	8015c1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 801550e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015510:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015514:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015518:	1e48      	subs	r0, r1, #1
 801551a:	1e57      	subs	r7, r2, #1
 801551c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801551e:	2b00      	cmp	r3, #0
 8015520:	f340 8195 	ble.w	801584e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8015524:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8015526:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801552a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801552e:	d406      	bmi.n	801553e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015530:	4584      	cmp	ip, r0
 8015532:	da04      	bge.n	801553e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015534:	2b00      	cmp	r3, #0
 8015536:	db02      	blt.n	801553e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015538:	42bb      	cmp	r3, r7
 801553a:	f2c0 8189 	blt.w	8015850 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801553e:	f11c 0c01 	adds.w	ip, ip, #1
 8015542:	f100 8177 	bmi.w	8015834 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015546:	4561      	cmp	r1, ip
 8015548:	f2c0 8174 	blt.w	8015834 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801554c:	3301      	adds	r3, #1
 801554e:	f100 8171 	bmi.w	8015834 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015552:	429a      	cmp	r2, r3
 8015554:	f2c0 816e 	blt.w	8015834 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8015558:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801555a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801555c:	931a      	str	r3, [sp, #104]	; 0x68
 801555e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8015560:	2b00      	cmp	r3, #0
 8015562:	f340 8193 	ble.w	801588c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8015566:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015568:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801556c:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801556e:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8015572:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015574:	141b      	asrs	r3, r3, #16
 8015576:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801557a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801557e:	f100 81d6 	bmi.w	801592e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8015582:	f100 38ff 	add.w	r8, r0, #4294967295
 8015586:	4543      	cmp	r3, r8
 8015588:	f280 81d1 	bge.w	801592e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801558c:	f1bc 0f00 	cmp.w	ip, #0
 8015590:	f2c0 81cd 	blt.w	801592e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8015594:	f10e 38ff 	add.w	r8, lr, #4294967295
 8015598:	45c4      	cmp	ip, r8
 801559a:	f280 81c8 	bge.w	801592e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801559e:	b200      	sxth	r0, r0
 80155a0:	fb0c 3300 	mla	r3, ip, r0, r3
 80155a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80155a6:	eb04 0803 	add.w	r8, r4, r3
 80155aa:	5ce3      	ldrb	r3, [r4, r3]
 80155ac:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80155b0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80155b4:	2a00      	cmp	r2, #0
 80155b6:	f000 81af 	beq.w	8015918 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 80155ba:	f898 c001 	ldrb.w	ip, [r8, #1]
 80155be:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80155c2:	940e      	str	r4, [sp, #56]	; 0x38
 80155c4:	0e24      	lsrs	r4, r4, #24
 80155c6:	9415      	str	r4, [sp, #84]	; 0x54
 80155c8:	b179      	cbz	r1, 80155ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80155ca:	eb08 0c00 	add.w	ip, r8, r0
 80155ce:	f818 0000 	ldrb.w	r0, [r8, r0]
 80155d2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80155d6:	900a      	str	r0, [sp, #40]	; 0x28
 80155d8:	0e00      	lsrs	r0, r0, #24
 80155da:	9013      	str	r0, [sp, #76]	; 0x4c
 80155dc:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80155e0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80155e4:	900f      	str	r0, [sp, #60]	; 0x3c
 80155e6:	0e00      	lsrs	r0, r0, #24
 80155e8:	9016      	str	r0, [sp, #88]	; 0x58
 80155ea:	b292      	uxth	r2, r2
 80155ec:	b289      	uxth	r1, r1
 80155ee:	fb02 f901 	mul.w	r9, r2, r1
 80155f2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80155f6:	0112      	lsls	r2, r2, #4
 80155f8:	eba2 0809 	sub.w	r8, r2, r9
 80155fc:	b289      	uxth	r1, r1
 80155fe:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8015602:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015604:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015606:	fa1f f888 	uxth.w	r8, r8
 801560a:	1a52      	subs	r2, r2, r1
 801560c:	b292      	uxth	r2, r2
 801560e:	fb08 f000 	mul.w	r0, r8, r0
 8015612:	fb02 000e 	mla	r0, r2, lr, r0
 8015616:	fb01 0004 	mla	r0, r1, r4, r0
 801561a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801561c:	fb09 0004 	mla	r0, r9, r4, r0
 8015620:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015624:	2800      	cmp	r0, #0
 8015626:	f000 80fa 	beq.w	801581e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801562a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801562e:	d01b      	beq.n	8015668 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015630:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8015634:	fb0e fa0a 	mul.w	sl, lr, sl
 8015638:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801563c:	fb0e fe03 	mul.w	lr, lr, r3
 8015640:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8015644:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015648:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801564c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8015650:	4453      	add	r3, sl
 8015652:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8015656:	0a1b      	lsrs	r3, r3, #8
 8015658:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801565c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015660:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015664:	ea43 030c 	orr.w	r3, r3, ip
 8015668:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801566a:	2cff      	cmp	r4, #255	; 0xff
 801566c:	d021      	beq.n	80156b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801566e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015670:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015674:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015676:	fb04 fb0b 	mul.w	fp, r4, fp
 801567a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801567c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015680:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015682:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015686:	fb04 fa0a 	mul.w	sl, r4, sl
 801568a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801568e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015692:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015696:	44de      	add	lr, fp
 8015698:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801569c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80156a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80156a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80156a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80156ac:	ea4e 040a 	orr.w	r4, lr, sl
 80156b0:	940e      	str	r4, [sp, #56]	; 0x38
 80156b2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80156b4:	2cff      	cmp	r4, #255	; 0xff
 80156b6:	d021      	beq.n	80156fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80156b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80156ba:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80156be:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80156c0:	fb04 fb0b 	mul.w	fp, r4, fp
 80156c4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80156c6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80156ca:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80156cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80156d0:	fb04 fa0a 	mul.w	sl, r4, sl
 80156d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80156d8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80156dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80156e0:	44de      	add	lr, fp
 80156e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80156e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80156ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80156ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80156f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80156f6:	ea4e 040a 	orr.w	r4, lr, sl
 80156fa:	940a      	str	r4, [sp, #40]	; 0x28
 80156fc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80156fe:	2cff      	cmp	r4, #255	; 0xff
 8015700:	d021      	beq.n	8015746 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8015702:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015704:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015708:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801570a:	fb04 fb0b 	mul.w	fp, r4, fp
 801570e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015710:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015714:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8015716:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801571a:	fb04 fa0a 	mul.w	sl, r4, sl
 801571e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015722:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015726:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801572a:	44de      	add	lr, fp
 801572c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015730:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015734:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015738:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801573c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015740:	ea4e 040a 	orr.w	r4, lr, sl
 8015744:	940f      	str	r4, [sp, #60]	; 0x3c
 8015746:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015748:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801574c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801574e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8015752:	fb08 fc0c 	mul.w	ip, r8, ip
 8015756:	fb02 cc0e 	mla	ip, r2, lr, ip
 801575a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801575e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015760:	fb01 cc0e 	mla	ip, r1, lr, ip
 8015764:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8015768:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801576a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801576e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8015772:	fb08 f80e 	mul.w	r8, r8, lr
 8015776:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801577a:	fb02 8303 	mla	r3, r2, r3, r8
 801577e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015780:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015782:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8015786:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015788:	fb01 330a 	mla	r3, r1, sl, r3
 801578c:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8015790:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015792:	fb09 3901 	mla	r9, r9, r1, r3
 8015796:	4342      	muls	r2, r0
 8015798:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801579c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80157a0:	883b      	ldrh	r3, [r7, #0]
 80157a2:	1c50      	adds	r0, r2, #1
 80157a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80157a8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80157ac:	ea4c 0c09 	orr.w	ip, ip, r9
 80157b0:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80157b4:	1219      	asrs	r1, r3, #8
 80157b6:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80157ba:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80157be:	b2c0      	uxtb	r0, r0
 80157c0:	fb12 f204 	smulbb	r2, r2, r4
 80157c4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80157c8:	fb01 2100 	mla	r1, r1, r0, r2
 80157cc:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80157d0:	10da      	asrs	r2, r3, #3
 80157d2:	fa5f fc8c 	uxtb.w	ip, ip
 80157d6:	00db      	lsls	r3, r3, #3
 80157d8:	fb1c fc04 	smulbb	ip, ip, r4
 80157dc:	b2db      	uxtb	r3, r3
 80157de:	b289      	uxth	r1, r1
 80157e0:	fb03 c300 	mla	r3, r3, r0, ip
 80157e4:	fa1f fc83 	uxth.w	ip, r3
 80157e8:	1c4b      	adds	r3, r1, #1
 80157ea:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80157ee:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80157f2:	fb1e fe04 	smulbb	lr, lr, r4
 80157f6:	f10c 0301 	add.w	r3, ip, #1
 80157fa:	fb02 e200 	mla	r2, r2, r0, lr
 80157fe:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8015802:	b292      	uxth	r2, r2
 8015804:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8015808:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801580c:	430b      	orrs	r3, r1
 801580e:	1c51      	adds	r1, r2, #1
 8015810:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015814:	0952      	lsrs	r2, r2, #5
 8015816:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801581a:	4313      	orrs	r3, r2
 801581c:	803b      	strh	r3, [r7, #0]
 801581e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8015820:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8015822:	441a      	add	r2, r3
 8015824:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015826:	9231      	str	r2, [sp, #196]	; 0xc4
 8015828:	441d      	add	r5, r3
 801582a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801582c:	3b01      	subs	r3, #1
 801582e:	3702      	adds	r7, #2
 8015830:	931a      	str	r3, [sp, #104]	; 0x68
 8015832:	e694      	b.n	801555e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015834:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8015836:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8015838:	441c      	add	r4, r3
 801583a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801583c:	9431      	str	r4, [sp, #196]	; 0xc4
 801583e:	441d      	add	r5, r3
 8015840:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015842:	3b01      	subs	r3, #1
 8015844:	9309      	str	r3, [sp, #36]	; 0x24
 8015846:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015848:	3302      	adds	r3, #2
 801584a:	930c      	str	r3, [sp, #48]	; 0x30
 801584c:	e666      	b.n	801551c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801584e:	d024      	beq.n	801589a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 8015850:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015852:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8015854:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8015856:	3b01      	subs	r3, #1
 8015858:	fb00 4003 	mla	r0, r0, r3, r4
 801585c:	1400      	asrs	r0, r0, #16
 801585e:	f53f ae7b 	bmi.w	8015558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015862:	3901      	subs	r1, #1
 8015864:	4288      	cmp	r0, r1
 8015866:	f6bf ae77 	bge.w	8015558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801586a:	9934      	ldr	r1, [sp, #208]	; 0xd0
 801586c:	fb01 5303 	mla	r3, r1, r3, r5
 8015870:	141b      	asrs	r3, r3, #16
 8015872:	f53f ae71 	bmi.w	8015558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015876:	3a01      	subs	r2, #1
 8015878:	4293      	cmp	r3, r2
 801587a:	f6bf ae6d 	bge.w	8015558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801587e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8015882:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8015886:	f1bb 0f00 	cmp.w	fp, #0
 801588a:	dc70      	bgt.n	801596e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801588c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801588e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015892:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015894:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015898:	930c      	str	r3, [sp, #48]	; 0x30
 801589a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801589c:	2b00      	cmp	r3, #0
 801589e:	f340 81be 	ble.w	8015c1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80158a2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80158a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80158aa:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80158ae:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80158b0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80158b4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80158b8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80158bc:	eef0 6a48 	vmov.f32	s13, s16
 80158c0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80158c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80158c8:	ee37 8a48 	vsub.f32	s16, s14, s16
 80158cc:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 80158d0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80158d4:	eef0 6a68 	vmov.f32	s13, s17
 80158d8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80158dc:	ee18 2a10 	vmov	r2, s16
 80158e0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80158e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80158e8:	ee18 2a90 	vmov	r2, s17
 80158ec:	9333      	str	r3, [sp, #204]	; 0xcc
 80158ee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80158f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80158f4:	9334      	str	r3, [sp, #208]	; 0xd0
 80158f6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80158f8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80158fa:	3b01      	subs	r3, #1
 80158fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015900:	9319      	str	r3, [sp, #100]	; 0x64
 8015902:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015904:	bf08      	it	eq
 8015906:	4613      	moveq	r3, r2
 8015908:	ee16 5a90 	vmov	r5, s13
 801590c:	9309      	str	r3, [sp, #36]	; 0x24
 801590e:	eef0 8a67 	vmov.f32	s17, s15
 8015912:	eeb0 8a47 	vmov.f32	s16, s14
 8015916:	e5f3      	b.n	8015500 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015918:	2900      	cmp	r1, #0
 801591a:	f43f ae66 	beq.w	80155ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801591e:	f818 0000 	ldrb.w	r0, [r8, r0]
 8015922:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8015926:	900a      	str	r0, [sp, #40]	; 0x28
 8015928:	0e00      	lsrs	r0, r0, #24
 801592a:	9013      	str	r0, [sp, #76]	; 0x4c
 801592c:	e65d      	b.n	80155ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801592e:	f113 0801 	adds.w	r8, r3, #1
 8015932:	f53f af74 	bmi.w	801581e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015936:	4540      	cmp	r0, r8
 8015938:	f6ff af71 	blt.w	801581e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801593c:	f11c 0801 	adds.w	r8, ip, #1
 8015940:	f53f af6d 	bmi.w	801581e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015944:	45c6      	cmp	lr, r8
 8015946:	f6ff af6a 	blt.w	801581e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801594a:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801594c:	9302      	str	r3, [sp, #8]
 801594e:	b200      	sxth	r0, r0
 8015950:	fa0f f38e 	sxth.w	r3, lr
 8015954:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8015958:	e9cd c203 	strd	ip, r2, [sp, #12]
 801595c:	9301      	str	r3, [sp, #4]
 801595e:	9000      	str	r0, [sp, #0]
 8015960:	4633      	mov	r3, r6
 8015962:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015964:	981d      	ldr	r0, [sp, #116]	; 0x74
 8015966:	4639      	mov	r1, r7
 8015968:	f7ff fc32 	bl	80151d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801596c:	e757      	b.n	801581e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801596e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8015970:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8015972:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015976:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8015978:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801597c:	1427      	asrs	r7, r4, #16
 801597e:	142b      	asrs	r3, r5, #16
 8015980:	fb01 7303 	mla	r3, r1, r3, r7
 8015984:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015986:	18e7      	adds	r7, r4, r3
 8015988:	5ce3      	ldrb	r3, [r4, r3]
 801598a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801598e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8015992:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8015996:	2a00      	cmp	r2, #0
 8015998:	f000 8137 	beq.w	8015c0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801599c:	f897 e001 	ldrb.w	lr, [r7, #1]
 80159a0:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80159a4:	9410      	str	r4, [sp, #64]	; 0x40
 80159a6:	0e24      	lsrs	r4, r4, #24
 80159a8:	9417      	str	r4, [sp, #92]	; 0x5c
 80159aa:	b170      	cbz	r0, 80159ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80159ac:	eb07 0e01 	add.w	lr, r7, r1
 80159b0:	5c79      	ldrb	r1, [r7, r1]
 80159b2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80159b6:	910b      	str	r1, [sp, #44]	; 0x2c
 80159b8:	0e09      	lsrs	r1, r1, #24
 80159ba:	9114      	str	r1, [sp, #80]	; 0x50
 80159bc:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80159c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80159c4:	9111      	str	r1, [sp, #68]	; 0x44
 80159c6:	0e09      	lsrs	r1, r1, #24
 80159c8:	9118      	str	r1, [sp, #96]	; 0x60
 80159ca:	b292      	uxth	r2, r2
 80159cc:	b280      	uxth	r0, r0
 80159ce:	fb02 f800 	mul.w	r8, r2, r0
 80159d2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80159d6:	0112      	lsls	r2, r2, #4
 80159d8:	eba2 0e08 	sub.w	lr, r2, r8
 80159dc:	b280      	uxth	r0, r0
 80159de:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80159e2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80159e4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80159e6:	fa1f fe8e 	uxth.w	lr, lr
 80159ea:	1a12      	subs	r2, r2, r0
 80159ec:	b292      	uxth	r2, r2
 80159ee:	fb0e f101 	mul.w	r1, lr, r1
 80159f2:	fb02 110c 	mla	r1, r2, ip, r1
 80159f6:	fb00 1104 	mla	r1, r0, r4, r1
 80159fa:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80159fc:	fb08 1104 	mla	r1, r8, r4, r1
 8015a00:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015a04:	2900      	cmp	r1, #0
 8015a06:	f000 80f5 	beq.w	8015bf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8015a0a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015a0e:	d019      	beq.n	8015a44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8015a10:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8015a14:	fb0c fa0a 	mul.w	sl, ip, sl
 8015a18:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015a1c:	fb0c fc03 	mul.w	ip, ip, r3
 8015a20:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8015a24:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015a28:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015a2c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8015a30:	4453      	add	r3, sl
 8015a32:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8015a36:	0a1b      	lsrs	r3, r3, #8
 8015a38:	0a3f      	lsrs	r7, r7, #8
 8015a3a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015a3e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8015a42:	433b      	orrs	r3, r7
 8015a44:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8015a46:	2cff      	cmp	r4, #255	; 0xff
 8015a48:	d020      	beq.n	8015a8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8015a4a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015a4c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015a50:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8015a52:	4367      	muls	r7, r4
 8015a54:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015a56:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015a5a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8015a5c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015a60:	fb04 fa0a 	mul.w	sl, r4, sl
 8015a64:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015a68:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015a6c:	44bc      	add	ip, r7
 8015a6e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8015a72:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015a76:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015a7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015a7e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015a82:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015a86:	ea4c 040a 	orr.w	r4, ip, sl
 8015a8a:	9410      	str	r4, [sp, #64]	; 0x40
 8015a8c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015a8e:	2cff      	cmp	r4, #255	; 0xff
 8015a90:	d020      	beq.n	8015ad4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8015a92:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015a94:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015a98:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015a9a:	4367      	muls	r7, r4
 8015a9c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015a9e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015aa2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015aa4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015aa8:	fb04 fa0a 	mul.w	sl, r4, sl
 8015aac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015ab0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015ab4:	44bc      	add	ip, r7
 8015ab6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8015aba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015abe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015ac2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015ac6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015aca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015ace:	ea4c 040a 	orr.w	r4, ip, sl
 8015ad2:	940b      	str	r4, [sp, #44]	; 0x2c
 8015ad4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8015ad6:	2cff      	cmp	r4, #255	; 0xff
 8015ad8:	d020      	beq.n	8015b1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 8015ada:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015adc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015ae0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8015ae2:	4367      	muls	r7, r4
 8015ae4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015ae6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015aea:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8015aec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015af0:	fb04 fa0a 	mul.w	sl, r4, sl
 8015af4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015af8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015afc:	44bc      	add	ip, r7
 8015afe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8015b02:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015b06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015b0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015b0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015b12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015b16:	ea4c 040a 	orr.w	r4, ip, sl
 8015b1a:	9411      	str	r4, [sp, #68]	; 0x44
 8015b1c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015b1e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015b22:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015b24:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8015b28:	fb0e f707 	mul.w	r7, lr, r7
 8015b2c:	fb02 770c 	mla	r7, r2, ip, r7
 8015b30:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8015b34:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015b36:	fb00 770c 	mla	r7, r0, ip, r7
 8015b3a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8015b3e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015b40:	fb08 770c 	mla	r7, r8, ip, r7
 8015b44:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8015b48:	fb0e fe0c 	mul.w	lr, lr, ip
 8015b4c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015b50:	fb02 e303 	mla	r3, r2, r3, lr
 8015b54:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015b56:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015b58:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8015b5c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015b5e:	fb00 330a 	mla	r3, r0, sl, r3
 8015b62:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8015b66:	fb08 3c0c 	mla	ip, r8, ip, r3
 8015b6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015b6c:	f8b9 0000 	ldrh.w	r0, [r9]
 8015b70:	434b      	muls	r3, r1
 8015b72:	0a3f      	lsrs	r7, r7, #8
 8015b74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015b78:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015b7c:	1c59      	adds	r1, r3, #1
 8015b7e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015b82:	ea47 070c 	orr.w	r7, r7, ip
 8015b86:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8015b8a:	1202      	asrs	r2, r0, #8
 8015b8c:	0c3b      	lsrs	r3, r7, #16
 8015b8e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8015b92:	b2c9      	uxtb	r1, r1
 8015b94:	fb13 f304 	smulbb	r3, r3, r4
 8015b98:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015b9c:	fb02 3201 	mla	r2, r2, r1, r3
 8015ba0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8015ba4:	10c3      	asrs	r3, r0, #3
 8015ba6:	b2ff      	uxtb	r7, r7
 8015ba8:	00c0      	lsls	r0, r0, #3
 8015baa:	b292      	uxth	r2, r2
 8015bac:	fb1c fc04 	smulbb	ip, ip, r4
 8015bb0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8015bb4:	b2c0      	uxtb	r0, r0
 8015bb6:	fb17 f704 	smulbb	r7, r7, r4
 8015bba:	fb03 c301 	mla	r3, r3, r1, ip
 8015bbe:	fb00 7001 	mla	r0, r0, r1, r7
 8015bc2:	f102 0c01 	add.w	ip, r2, #1
 8015bc6:	b280      	uxth	r0, r0
 8015bc8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8015bcc:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8015bd0:	1c42      	adds	r2, r0, #1
 8015bd2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8015bd6:	b29b      	uxth	r3, r3
 8015bd8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015bdc:	ea42 020c 	orr.w	r2, r2, ip
 8015be0:	f103 0c01 	add.w	ip, r3, #1
 8015be4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8015be8:	095b      	lsrs	r3, r3, #5
 8015bea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015bee:	431a      	orrs	r2, r3
 8015bf0:	f8a9 2000 	strh.w	r2, [r9]
 8015bf4:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8015bf6:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8015bf8:	441a      	add	r2, r3
 8015bfa:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015bfc:	9231      	str	r2, [sp, #196]	; 0xc4
 8015bfe:	f109 0902 	add.w	r9, r9, #2
 8015c02:	441d      	add	r5, r3
 8015c04:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015c08:	e63d      	b.n	8015886 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8015c0a:	2800      	cmp	r0, #0
 8015c0c:	f43f aedd 	beq.w	80159ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8015c10:	5c79      	ldrb	r1, [r7, r1]
 8015c12:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8015c16:	910b      	str	r1, [sp, #44]	; 0x2c
 8015c18:	0e09      	lsrs	r1, r1, #24
 8015c1a:	9114      	str	r1, [sp, #80]	; 0x50
 8015c1c:	e6d5      	b.n	80159ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8015c1e:	b01f      	add	sp, #124	; 0x7c
 8015c20:	ecbd 8b08 	vpop	{d8-d11}
 8015c24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015c28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8015c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c2c:	880e      	ldrh	r6, [r1, #0]
 8015c2e:	b085      	sub	sp, #20
 8015c30:	ea4f 2826 	mov.w	r8, r6, asr #8
 8015c34:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8015c38:	4691      	mov	r9, r2
 8015c3a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015c3e:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8015c42:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8015c46:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8015c4a:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 8015c4e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8015c52:	9200      	str	r2, [sp, #0]
 8015c54:	00f6      	lsls	r6, r6, #3
 8015c56:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 8015c5a:	9201      	str	r2, [sp, #4]
 8015c5c:	2c00      	cmp	r4, #0
 8015c5e:	b2f2      	uxtb	r2, r6
 8015c60:	fb04 560c 	mla	r6, r4, ip, r5
 8015c64:	9202      	str	r2, [sp, #8]
 8015c66:	eb09 0806 	add.w	r8, r9, r6
 8015c6a:	db3f      	blt.n	8015cec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8015c6c:	45a6      	cmp	lr, r4
 8015c6e:	dd3d      	ble.n	8015cec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 8015c70:	2d00      	cmp	r5, #0
 8015c72:	db39      	blt.n	8015ce8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8015c74:	45ac      	cmp	ip, r5
 8015c76:	dd37      	ble.n	8015ce8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 8015c78:	f819 2006 	ldrb.w	r2, [r9, r6]
 8015c7c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8015c80:	1c6e      	adds	r6, r5, #1
 8015c82:	d436      	bmi.n	8015cf2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8015c84:	45b4      	cmp	ip, r6
 8015c86:	dd34      	ble.n	8015cf2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 8015c88:	b3a8      	cbz	r0, 8015cf6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 8015c8a:	f898 6001 	ldrb.w	r6, [r8, #1]
 8015c8e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8015c92:	3401      	adds	r4, #1
 8015c94:	d433      	bmi.n	8015cfe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015c96:	45a6      	cmp	lr, r4
 8015c98:	dd31      	ble.n	8015cfe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015c9a:	b39f      	cbz	r7, 8015d04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 8015c9c:	2d00      	cmp	r5, #0
 8015c9e:	eb08 0e0c 	add.w	lr, r8, ip
 8015ca2:	db2a      	blt.n	8015cfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8015ca4:	45ac      	cmp	ip, r5
 8015ca6:	dd28      	ble.n	8015cfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 8015ca8:	f818 400c 	ldrb.w	r4, [r8, ip]
 8015cac:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8015cb0:	3501      	adds	r5, #1
 8015cb2:	d42a      	bmi.n	8015d0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8015cb4:	45ac      	cmp	ip, r5
 8015cb6:	dd28      	ble.n	8015d0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8015cb8:	b348      	cbz	r0, 8015d0e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 8015cba:	f89e 5001 	ldrb.w	r5, [lr, #1]
 8015cbe:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8015cc2:	280f      	cmp	r0, #15
 8015cc4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8015cc8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015ccc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015cd0:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8015cd4:	d801      	bhi.n	8015cda <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8015cd6:	2f0f      	cmp	r7, #15
 8015cd8:	d91b      	bls.n	8015d12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 8015cda:	4b7d      	ldr	r3, [pc, #500]	; (8015ed0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8015cdc:	4a7d      	ldr	r2, [pc, #500]	; (8015ed4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8015cde:	487e      	ldr	r0, [pc, #504]	; (8015ed8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8015ce0:	f240 11f9 	movw	r1, #505	; 0x1f9
 8015ce4:	f004 ffd8 	bl	801ac98 <__assert_func>
 8015ce8:	2200      	movs	r2, #0
 8015cea:	e7c9      	b.n	8015c80 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8015cec:	2600      	movs	r6, #0
 8015cee:	4632      	mov	r2, r6
 8015cf0:	e7cf      	b.n	8015c92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8015cf2:	2600      	movs	r6, #0
 8015cf4:	e7cd      	b.n	8015c92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8015cf6:	4606      	mov	r6, r0
 8015cf8:	e7cb      	b.n	8015c92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8015cfa:	2400      	movs	r4, #0
 8015cfc:	e7d8      	b.n	8015cb0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 8015cfe:	2300      	movs	r3, #0
 8015d00:	461c      	mov	r4, r3
 8015d02:	e7de      	b.n	8015cc2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8015d04:	463b      	mov	r3, r7
 8015d06:	463c      	mov	r4, r7
 8015d08:	e7db      	b.n	8015cc2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8015d0a:	2300      	movs	r3, #0
 8015d0c:	e7d9      	b.n	8015cc2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8015d0e:	4603      	mov	r3, r0
 8015d10:	e7d7      	b.n	8015cc2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8015d12:	b280      	uxth	r0, r0
 8015d14:	b2bf      	uxth	r7, r7
 8015d16:	fb00 fe07 	mul.w	lr, r0, r7
 8015d1a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8015d1e:	0100      	lsls	r0, r0, #4
 8015d20:	eba0 0c0e 	sub.w	ip, r0, lr
 8015d24:	b2bf      	uxth	r7, r7
 8015d26:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8015d2a:	fa1f fc8c 	uxth.w	ip, ip
 8015d2e:	1bed      	subs	r5, r5, r7
 8015d30:	b2ad      	uxth	r5, r5
 8015d32:	fb0c f00a 	mul.w	r0, ip, sl
 8015d36:	fb05 000b 	mla	r0, r5, fp, r0
 8015d3a:	fb07 0009 	mla	r0, r7, r9, r0
 8015d3e:	fb0e 0008 	mla	r0, lr, r8, r0
 8015d42:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015d46:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015d4a:	9003      	str	r0, [sp, #12]
 8015d4c:	d018      	beq.n	8015d80 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 8015d4e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8015d52:	fb0b f000 	mul.w	r0, fp, r0
 8015d56:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015d5a:	fb0b fb02 	mul.w	fp, fp, r2
 8015d5e:	0a02      	lsrs	r2, r0, #8
 8015d60:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015d64:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8015d68:	4402      	add	r2, r0
 8015d6a:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8015d6e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8015d72:	0a12      	lsrs	r2, r2, #8
 8015d74:	0a00      	lsrs	r0, r0, #8
 8015d76:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015d7a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015d7e:	4302      	orrs	r2, r0
 8015d80:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015d84:	d019      	beq.n	8015dba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 8015d86:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015d8a:	fb0a fb0b 	mul.w	fp, sl, fp
 8015d8e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015d92:	fb0a fa06 	mul.w	sl, sl, r6
 8015d96:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015d9a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015d9e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015da2:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8015da6:	445e      	add	r6, fp
 8015da8:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8015dac:	0a36      	lsrs	r6, r6, #8
 8015dae:	0a00      	lsrs	r0, r0, #8
 8015db0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015db4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015db8:	4306      	orrs	r6, r0
 8015dba:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015dbe:	d019      	beq.n	8015df4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8015dc0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015dc4:	fb09 fa0a 	mul.w	sl, r9, sl
 8015dc8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015dcc:	fb09 f904 	mul.w	r9, r9, r4
 8015dd0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015dd4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015dd8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015ddc:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8015de0:	4454      	add	r4, sl
 8015de2:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8015de6:	0a24      	lsrs	r4, r4, #8
 8015de8:	0a00      	lsrs	r0, r0, #8
 8015dea:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015dee:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015df2:	4304      	orrs	r4, r0
 8015df4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015df8:	d019      	beq.n	8015e2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 8015dfa:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8015dfe:	fb08 f909 	mul.w	r9, r8, r9
 8015e02:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015e06:	fb08 f803 	mul.w	r8, r8, r3
 8015e0a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8015e0e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015e12:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015e16:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8015e1a:	444b      	add	r3, r9
 8015e1c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8015e20:	0a1b      	lsrs	r3, r3, #8
 8015e22:	0a00      	lsrs	r0, r0, #8
 8015e24:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015e28:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015e2c:	4303      	orrs	r3, r0
 8015e2e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015e32:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8015e36:	fb0c f808 	mul.w	r8, ip, r8
 8015e3a:	fb05 8800 	mla	r8, r5, r0, r8
 8015e3e:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8015e42:	fb07 8800 	mla	r8, r7, r0, r8
 8015e46:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8015e4a:	fb0e 8000 	mla	r0, lr, r0, r8
 8015e4e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015e52:	fb0c f606 	mul.w	r6, ip, r6
 8015e56:	0a00      	lsrs	r0, r0, #8
 8015e58:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015e5c:	fb05 6202 	mla	r2, r5, r2, r6
 8015e60:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8015e64:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8015e68:	fb07 2700 	mla	r7, r7, r0, r2
 8015e6c:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8015e70:	9b03      	ldr	r3, [sp, #12]
 8015e72:	9d00      	ldr	r5, [sp, #0]
 8015e74:	9a02      	ldr	r2, [sp, #8]
 8015e76:	fb0e 7000 	mla	r0, lr, r0, r7
 8015e7a:	43dc      	mvns	r4, r3
 8015e7c:	9b01      	ldr	r3, [sp, #4]
 8015e7e:	b2e4      	uxtb	r4, r4
 8015e80:	0a00      	lsrs	r0, r0, #8
 8015e82:	4363      	muls	r3, r4
 8015e84:	4365      	muls	r5, r4
 8015e86:	4362      	muls	r2, r4
 8015e88:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015e8c:	ea48 0000 	orr.w	r0, r8, r0
 8015e90:	4614      	mov	r4, r2
 8015e92:	1c5e      	adds	r6, r3, #1
 8015e94:	1c6a      	adds	r2, r5, #1
 8015e96:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8015e9a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015e9e:	0a03      	lsrs	r3, r0, #8
 8015ea0:	0c02      	lsrs	r2, r0, #16
 8015ea2:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8015ea6:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8015eaa:	00db      	lsls	r3, r3, #3
 8015eac:	0212      	lsls	r2, r2, #8
 8015eae:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8015eb2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015eb6:	4313      	orrs	r3, r2
 8015eb8:	1c62      	adds	r2, r4, #1
 8015eba:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8015ebe:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8015ec2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015ec6:	4318      	orrs	r0, r3
 8015ec8:	8008      	strh	r0, [r1, #0]
 8015eca:	b005      	add	sp, #20
 8015ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ed0:	0801eaff 	.word	0x0801eaff
 8015ed4:	0801f02e 	.word	0x0801f02e
 8015ed8:	0801eacc 	.word	0x0801eacc

08015edc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ee0:	ed2d 8b08 	vpush	{d8-d11}
 8015ee4:	b09b      	sub	sp, #108	; 0x6c
 8015ee6:	eeb0 aa40 	vmov.f32	s20, s0
 8015eea:	9218      	str	r2, [sp, #96]	; 0x60
 8015eec:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8015eee:	9116      	str	r1, [sp, #88]	; 0x58
 8015ef0:	9307      	str	r3, [sp, #28]
 8015ef2:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8015ef6:	9019      	str	r0, [sp, #100]	; 0x64
 8015ef8:	6850      	ldr	r0, [r2, #4]
 8015efa:	6812      	ldr	r2, [r2, #0]
 8015efc:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8015efe:	fb00 1303 	mla	r3, r0, r3, r1
 8015f02:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015f06:	930a      	str	r3, [sp, #40]	; 0x28
 8015f08:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015f0a:	681b      	ldr	r3, [r3, #0]
 8015f0c:	930f      	str	r3, [sp, #60]	; 0x3c
 8015f0e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015f10:	685e      	ldr	r6, [r3, #4]
 8015f12:	eef0 9a60 	vmov.f32	s19, s1
 8015f16:	eeb0 9a41 	vmov.f32	s18, s2
 8015f1a:	eeb0 8a62 	vmov.f32	s16, s5
 8015f1e:	eef0 8a43 	vmov.f32	s17, s6
 8015f22:	eef0 ba44 	vmov.f32	s23, s8
 8015f26:	eeb0 ba64 	vmov.f32	s22, s9
 8015f2a:	eef0 aa45 	vmov.f32	s21, s10
 8015f2e:	3604      	adds	r6, #4
 8015f30:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015f32:	2b00      	cmp	r3, #0
 8015f34:	dc03      	bgt.n	8015f3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8015f36:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015f38:	2b00      	cmp	r3, #0
 8015f3a:	f340 8373 	ble.w	8016624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8015f3e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015f40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015f44:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015f48:	1e48      	subs	r0, r1, #1
 8015f4a:	1e57      	subs	r7, r2, #1
 8015f4c:	9b07      	ldr	r3, [sp, #28]
 8015f4e:	2b00      	cmp	r3, #0
 8015f50:	f340 8190 	ble.w	8016274 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8015f54:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8015f56:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8015f5a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015f5e:	d406      	bmi.n	8015f6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015f60:	4584      	cmp	ip, r0
 8015f62:	da04      	bge.n	8015f6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015f64:	2b00      	cmp	r3, #0
 8015f66:	db02      	blt.n	8015f6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015f68:	42bb      	cmp	r3, r7
 8015f6a:	f2c0 8184 	blt.w	8016276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8015f6e:	f11c 0c01 	adds.w	ip, ip, #1
 8015f72:	f100 8172 	bmi.w	801625a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015f76:	4561      	cmp	r1, ip
 8015f78:	f2c0 816f 	blt.w	801625a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015f7c:	3301      	adds	r3, #1
 8015f7e:	f100 816c 	bmi.w	801625a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015f82:	429a      	cmp	r2, r3
 8015f84:	f2c0 8169 	blt.w	801625a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8015f88:	9b07      	ldr	r3, [sp, #28]
 8015f8a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8015f8c:	9317      	str	r3, [sp, #92]	; 0x5c
 8015f8e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8015f90:	2b00      	cmp	r3, #0
 8015f92:	f340 818e 	ble.w	80162b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8015f96:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015f98:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015f9c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015f9e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8015fa2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015fa4:	141b      	asrs	r3, r3, #16
 8015fa6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015faa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8015fae:	f100 81d1 	bmi.w	8016354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8015fb2:	f101 38ff 	add.w	r8, r1, #4294967295
 8015fb6:	4543      	cmp	r3, r8
 8015fb8:	f280 81cc 	bge.w	8016354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8015fbc:	f1bc 0f00 	cmp.w	ip, #0
 8015fc0:	f2c0 81c8 	blt.w	8016354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8015fc4:	f10e 38ff 	add.w	r8, lr, #4294967295
 8015fc8:	45c4      	cmp	ip, r8
 8015fca:	f280 81c3 	bge.w	8016354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8015fce:	b209      	sxth	r1, r1
 8015fd0:	fb0c 3301 	mla	r3, ip, r1, r3
 8015fd4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015fd6:	eb04 0803 	add.w	r8, r4, r3
 8015fda:	5ce3      	ldrb	r3, [r4, r3]
 8015fdc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8015fe0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8015fe4:	2a00      	cmp	r2, #0
 8015fe6:	f000 81aa 	beq.w	801633e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8015fea:	f898 c001 	ldrb.w	ip, [r8, #1]
 8015fee:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8015ff2:	940b      	str	r4, [sp, #44]	; 0x2c
 8015ff4:	0e24      	lsrs	r4, r4, #24
 8015ff6:	9412      	str	r4, [sp, #72]	; 0x48
 8015ff8:	b178      	cbz	r0, 801601a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015ffa:	eb08 0c01 	add.w	ip, r8, r1
 8015ffe:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016002:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016006:	9108      	str	r1, [sp, #32]
 8016008:	0e09      	lsrs	r1, r1, #24
 801600a:	9110      	str	r1, [sp, #64]	; 0x40
 801600c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8016010:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016014:	910c      	str	r1, [sp, #48]	; 0x30
 8016016:	0e09      	lsrs	r1, r1, #24
 8016018:	9113      	str	r1, [sp, #76]	; 0x4c
 801601a:	b292      	uxth	r2, r2
 801601c:	b280      	uxth	r0, r0
 801601e:	fb02 f900 	mul.w	r9, r2, r0
 8016022:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8016026:	0112      	lsls	r2, r2, #4
 8016028:	eba2 0809 	sub.w	r8, r2, r9
 801602c:	b280      	uxth	r0, r0
 801602e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016032:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016034:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016036:	fa1f f888 	uxth.w	r8, r8
 801603a:	1a12      	subs	r2, r2, r0
 801603c:	b292      	uxth	r2, r2
 801603e:	fb08 f101 	mul.w	r1, r8, r1
 8016042:	fb02 110e 	mla	r1, r2, lr, r1
 8016046:	fb00 1104 	mla	r1, r0, r4, r1
 801604a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801604c:	fb09 1104 	mla	r1, r9, r4, r1
 8016050:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016054:	2900      	cmp	r1, #0
 8016056:	f000 80f5 	beq.w	8016244 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801605a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801605e:	d01b      	beq.n	8016098 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016060:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016064:	fb0e fa0a 	mul.w	sl, lr, sl
 8016068:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801606c:	fb0e fe03 	mul.w	lr, lr, r3
 8016070:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016074:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016078:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801607c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016080:	4453      	add	r3, sl
 8016082:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016086:	0a1b      	lsrs	r3, r3, #8
 8016088:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801608c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016090:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016094:	ea43 030c 	orr.w	r3, r3, ip
 8016098:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801609a:	2cff      	cmp	r4, #255	; 0xff
 801609c:	d021      	beq.n	80160e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801609e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80160a0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80160a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80160a6:	fb04 fb0b 	mul.w	fp, r4, fp
 80160aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80160ac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80160b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80160b2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80160b6:	fb04 fa0a 	mul.w	sl, r4, sl
 80160ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80160be:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80160c2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80160c6:	44de      	add	lr, fp
 80160c8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80160cc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80160d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80160d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80160d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80160dc:	ea4e 040a 	orr.w	r4, lr, sl
 80160e0:	940b      	str	r4, [sp, #44]	; 0x2c
 80160e2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80160e4:	2cff      	cmp	r4, #255	; 0xff
 80160e6:	d021      	beq.n	801612c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80160e8:	9c08      	ldr	r4, [sp, #32]
 80160ea:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80160ee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80160f0:	fb04 fb0b 	mul.w	fp, r4, fp
 80160f4:	9c08      	ldr	r4, [sp, #32]
 80160f6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80160fa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80160fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016100:	fb04 fa0a 	mul.w	sl, r4, sl
 8016104:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016108:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801610c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016110:	44de      	add	lr, fp
 8016112:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016116:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801611a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801611e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016122:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016126:	ea4e 040a 	orr.w	r4, lr, sl
 801612a:	9408      	str	r4, [sp, #32]
 801612c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801612e:	2cff      	cmp	r4, #255	; 0xff
 8016130:	d021      	beq.n	8016176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016132:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016134:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016138:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801613a:	fb04 fb0b 	mul.w	fp, r4, fp
 801613e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016140:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016144:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016146:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801614a:	fb04 fa0a 	mul.w	sl, r4, sl
 801614e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016152:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016156:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801615a:	44de      	add	lr, fp
 801615c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016160:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016164:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016168:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801616c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016170:	ea4e 040a 	orr.w	r4, lr, sl
 8016174:	940c      	str	r4, [sp, #48]	; 0x30
 8016176:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016178:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801617c:	9c08      	ldr	r4, [sp, #32]
 801617e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8016182:	fb08 fc0c 	mul.w	ip, r8, ip
 8016186:	fb02 cc0e 	mla	ip, r2, lr, ip
 801618a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801618e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016190:	fb00 cc0e 	mla	ip, r0, lr, ip
 8016194:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8016198:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801619a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801619e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80161a2:	fb08 f80e 	mul.w	r8, r8, lr
 80161a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161aa:	fb02 8303 	mla	r3, r2, r3, r8
 80161ae:	9a08      	ldr	r2, [sp, #32]
 80161b0:	f8b7 8000 	ldrh.w	r8, [r7]
 80161b4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80161b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80161ba:	fb00 330a 	mla	r3, r0, sl, r3
 80161be:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80161c2:	fb09 3900 	mla	r9, r9, r0, r3
 80161c6:	43c9      	mvns	r1, r1
 80161c8:	ea4f 2228 	mov.w	r2, r8, asr #8
 80161cc:	fa5f fe81 	uxtb.w	lr, r1
 80161d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80161d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80161d8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80161dc:	fb02 f20e 	mul.w	r2, r2, lr
 80161e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80161e4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80161e8:	ea4c 0c09 	orr.w	ip, ip, r9
 80161ec:	1c53      	adds	r3, r2, #1
 80161ee:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80161f2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80161f6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80161fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80161fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016202:	4a63      	ldr	r2, [pc, #396]	; (8016390 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8016204:	fb00 f00e 	mul.w	r0, r0, lr
 8016208:	b2db      	uxtb	r3, r3
 801620a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801620e:	1c43      	adds	r3, r0, #1
 8016210:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8016214:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016218:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801621c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016220:	b2c9      	uxtb	r1, r1
 8016222:	00db      	lsls	r3, r3, #3
 8016224:	fb01 f10e 	mul.w	r1, r1, lr
 8016228:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801622c:	4313      	orrs	r3, r2
 801622e:	1c4a      	adds	r2, r1, #1
 8016230:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016234:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8016238:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801623c:	ea4c 0c03 	orr.w	ip, ip, r3
 8016240:	f8a7 c000 	strh.w	ip, [r7]
 8016244:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8016246:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016248:	441a      	add	r2, r3
 801624a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801624c:	922d      	str	r2, [sp, #180]	; 0xb4
 801624e:	441d      	add	r5, r3
 8016250:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016252:	3b01      	subs	r3, #1
 8016254:	3702      	adds	r7, #2
 8016256:	9317      	str	r3, [sp, #92]	; 0x5c
 8016258:	e699      	b.n	8015f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801625a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801625c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801625e:	441c      	add	r4, r3
 8016260:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016262:	942d      	str	r4, [sp, #180]	; 0xb4
 8016264:	441d      	add	r5, r3
 8016266:	9b07      	ldr	r3, [sp, #28]
 8016268:	3b01      	subs	r3, #1
 801626a:	9307      	str	r3, [sp, #28]
 801626c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801626e:	3302      	adds	r3, #2
 8016270:	930a      	str	r3, [sp, #40]	; 0x28
 8016272:	e66b      	b.n	8015f4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016274:	d024      	beq.n	80162c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8016276:	9b07      	ldr	r3, [sp, #28]
 8016278:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801627a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801627c:	3b01      	subs	r3, #1
 801627e:	fb00 4003 	mla	r0, r0, r3, r4
 8016282:	1400      	asrs	r0, r0, #16
 8016284:	f53f ae80 	bmi.w	8015f88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016288:	3901      	subs	r1, #1
 801628a:	4288      	cmp	r0, r1
 801628c:	f6bf ae7c 	bge.w	8015f88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8016290:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8016292:	fb01 5303 	mla	r3, r1, r3, r5
 8016296:	141b      	asrs	r3, r3, #16
 8016298:	f53f ae76 	bmi.w	8015f88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801629c:	3a01      	subs	r2, #1
 801629e:	4293      	cmp	r3, r2
 80162a0:	f6bf ae72 	bge.w	8015f88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80162a4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80162a8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80162ac:	f1bb 0f00 	cmp.w	fp, #0
 80162b0:	dc70      	bgt.n	8016394 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 80162b2:	9b07      	ldr	r3, [sp, #28]
 80162b4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80162b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80162ba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80162be:	930a      	str	r3, [sp, #40]	; 0x28
 80162c0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80162c2:	2b00      	cmp	r3, #0
 80162c4:	f340 81ae 	ble.w	8016624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80162c8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80162cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80162d0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80162d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80162d6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80162da:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80162de:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80162e2:	eef0 6a48 	vmov.f32	s13, s16
 80162e6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80162ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80162ee:	ee37 8a48 	vsub.f32	s16, s14, s16
 80162f2:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 80162f6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80162fa:	eef0 6a68 	vmov.f32	s13, s17
 80162fe:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016302:	ee18 2a10 	vmov	r2, s16
 8016306:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801630a:	fb92 f3f3 	sdiv	r3, r2, r3
 801630e:	ee18 2a90 	vmov	r2, s17
 8016312:	932f      	str	r3, [sp, #188]	; 0xbc
 8016314:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016316:	fb92 f3f3 	sdiv	r3, r2, r3
 801631a:	9330      	str	r3, [sp, #192]	; 0xc0
 801631c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801631e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016320:	3b01      	subs	r3, #1
 8016322:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016326:	9316      	str	r3, [sp, #88]	; 0x58
 8016328:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801632a:	bf08      	it	eq
 801632c:	4613      	moveq	r3, r2
 801632e:	ee16 5a90 	vmov	r5, s13
 8016332:	9307      	str	r3, [sp, #28]
 8016334:	eef0 8a67 	vmov.f32	s17, s15
 8016338:	eeb0 8a47 	vmov.f32	s16, s14
 801633c:	e5f8      	b.n	8015f30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801633e:	2800      	cmp	r0, #0
 8016340:	f43f ae6b 	beq.w	801601a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016344:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016348:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801634c:	9108      	str	r1, [sp, #32]
 801634e:	0e09      	lsrs	r1, r1, #24
 8016350:	9110      	str	r1, [sp, #64]	; 0x40
 8016352:	e662      	b.n	801601a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016354:	f113 0801 	adds.w	r8, r3, #1
 8016358:	f53f af74 	bmi.w	8016244 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801635c:	4541      	cmp	r1, r8
 801635e:	f6ff af71 	blt.w	8016244 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016362:	f11c 0801 	adds.w	r8, ip, #1
 8016366:	f53f af6d 	bmi.w	8016244 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801636a:	45c6      	cmp	lr, r8
 801636c:	f6ff af6a 	blt.w	8016244 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016370:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8016374:	b209      	sxth	r1, r1
 8016376:	fa0f f38e 	sxth.w	r3, lr
 801637a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801637e:	9301      	str	r3, [sp, #4]
 8016380:	9100      	str	r1, [sp, #0]
 8016382:	4633      	mov	r3, r6
 8016384:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016386:	9819      	ldr	r0, [sp, #100]	; 0x64
 8016388:	4639      	mov	r1, r7
 801638a:	f7ff fc4d 	bl	8015c28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801638e:	e759      	b.n	8016244 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016390:	fffff800 	.word	0xfffff800
 8016394:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016396:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8016398:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801639c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801639e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80163a2:	1427      	asrs	r7, r4, #16
 80163a4:	142b      	asrs	r3, r5, #16
 80163a6:	fb01 7303 	mla	r3, r1, r3, r7
 80163aa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80163ac:	18e7      	adds	r7, r4, r3
 80163ae:	5ce3      	ldrb	r3, [r4, r3]
 80163b0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80163b4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80163b8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80163bc:	2a00      	cmp	r2, #0
 80163be:	f000 8127 	beq.w	8016610 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80163c2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80163c6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80163ca:	940d      	str	r4, [sp, #52]	; 0x34
 80163cc:	0e24      	lsrs	r4, r4, #24
 80163ce:	9414      	str	r4, [sp, #80]	; 0x50
 80163d0:	b170      	cbz	r0, 80163f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 80163d2:	eb07 0e01 	add.w	lr, r7, r1
 80163d6:	5c79      	ldrb	r1, [r7, r1]
 80163d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80163dc:	9109      	str	r1, [sp, #36]	; 0x24
 80163de:	0e09      	lsrs	r1, r1, #24
 80163e0:	9111      	str	r1, [sp, #68]	; 0x44
 80163e2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80163e6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80163ea:	910e      	str	r1, [sp, #56]	; 0x38
 80163ec:	0e09      	lsrs	r1, r1, #24
 80163ee:	9115      	str	r1, [sp, #84]	; 0x54
 80163f0:	b292      	uxth	r2, r2
 80163f2:	b280      	uxth	r0, r0
 80163f4:	fb02 f800 	mul.w	r8, r2, r0
 80163f8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80163fc:	0112      	lsls	r2, r2, #4
 80163fe:	eba2 0e08 	sub.w	lr, r2, r8
 8016402:	b280      	uxth	r0, r0
 8016404:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8016408:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801640a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801640c:	fa1f fe8e 	uxth.w	lr, lr
 8016410:	1a09      	subs	r1, r1, r0
 8016412:	b289      	uxth	r1, r1
 8016414:	fb0e f202 	mul.w	r2, lr, r2
 8016418:	fb01 220c 	mla	r2, r1, ip, r2
 801641c:	fb00 2204 	mla	r2, r0, r4, r2
 8016420:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016422:	fb08 2204 	mla	r2, r8, r4, r2
 8016426:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801642a:	2a00      	cmp	r2, #0
 801642c:	f000 80e5 	beq.w	80165fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8016430:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016434:	d019      	beq.n	801646a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8016436:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801643a:	fb0c fa0a 	mul.w	sl, ip, sl
 801643e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016442:	fb0c fc03 	mul.w	ip, ip, r3
 8016446:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801644a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801644e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016452:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016456:	4453      	add	r3, sl
 8016458:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801645c:	0a1b      	lsrs	r3, r3, #8
 801645e:	0a3f      	lsrs	r7, r7, #8
 8016460:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016464:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016468:	433b      	orrs	r3, r7
 801646a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801646c:	2cff      	cmp	r4, #255	; 0xff
 801646e:	d020      	beq.n	80164b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8016470:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016472:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016476:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016478:	4367      	muls	r7, r4
 801647a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801647c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016480:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016482:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016486:	fb04 fa0a 	mul.w	sl, r4, sl
 801648a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801648e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016492:	44bc      	add	ip, r7
 8016494:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016498:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801649c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80164a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80164a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80164a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80164ac:	ea4c 040a 	orr.w	r4, ip, sl
 80164b0:	940d      	str	r4, [sp, #52]	; 0x34
 80164b2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80164b4:	2cff      	cmp	r4, #255	; 0xff
 80164b6:	d020      	beq.n	80164fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 80164b8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80164ba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80164be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80164c0:	4367      	muls	r7, r4
 80164c2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80164c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80164c8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80164ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80164ce:	fb04 fa0a 	mul.w	sl, r4, sl
 80164d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80164d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80164da:	44bc      	add	ip, r7
 80164dc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80164e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80164e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80164e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80164ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80164f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80164f4:	ea4c 040a 	orr.w	r4, ip, sl
 80164f8:	9409      	str	r4, [sp, #36]	; 0x24
 80164fa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80164fc:	2cff      	cmp	r4, #255	; 0xff
 80164fe:	d020      	beq.n	8016542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8016500:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016502:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016506:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016508:	4367      	muls	r7, r4
 801650a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801650c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016510:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8016512:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016516:	fb04 fa0a 	mul.w	sl, r4, sl
 801651a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801651e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016522:	44bc      	add	ip, r7
 8016524:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016528:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801652c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016530:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016534:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016538:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801653c:	ea4c 040a 	orr.w	r4, ip, sl
 8016540:	940e      	str	r4, [sp, #56]	; 0x38
 8016542:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016544:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016548:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801654a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801654e:	fb0e f707 	mul.w	r7, lr, r7
 8016552:	fb01 770c 	mla	r7, r1, ip, r7
 8016556:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801655a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801655c:	fb00 770c 	mla	r7, r0, ip, r7
 8016560:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016564:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016566:	fb08 770c 	mla	r7, r8, ip, r7
 801656a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801656e:	fb0e fe0c 	mul.w	lr, lr, ip
 8016572:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016576:	fb01 e303 	mla	r3, r1, r3, lr
 801657a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801657c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8016580:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016582:	fb00 330a 	mla	r3, r0, sl, r3
 8016586:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801658a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801658e:	f8b9 3000 	ldrh.w	r3, [r9]
 8016592:	43d2      	mvns	r2, r2
 8016594:	1218      	asrs	r0, r3, #8
 8016596:	b2d2      	uxtb	r2, r2
 8016598:	10d9      	asrs	r1, r3, #3
 801659a:	0a3f      	lsrs	r7, r7, #8
 801659c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80165a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80165a4:	00db      	lsls	r3, r3, #3
 80165a6:	4350      	muls	r0, r2
 80165a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80165ac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80165b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80165b4:	b2db      	uxtb	r3, r3
 80165b6:	ea47 070c 	orr.w	r7, r7, ip
 80165ba:	4351      	muls	r1, r2
 80165bc:	4353      	muls	r3, r2
 80165be:	1c42      	adds	r2, r0, #1
 80165c0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80165c4:	0c3a      	lsrs	r2, r7, #16
 80165c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80165ca:	4a19      	ldr	r2, [pc, #100]	; (8016630 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 80165cc:	b2c0      	uxtb	r0, r0
 80165ce:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80165d2:	1c4a      	adds	r2, r1, #1
 80165d4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80165d8:	0a3a      	lsrs	r2, r7, #8
 80165da:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80165de:	00c9      	lsls	r1, r1, #3
 80165e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80165e4:	4301      	orrs	r1, r0
 80165e6:	1c58      	adds	r0, r3, #1
 80165e8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80165ec:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80165f0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80165f4:	4308      	orrs	r0, r1
 80165f6:	f8a9 0000 	strh.w	r0, [r9]
 80165fa:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80165fc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80165fe:	441a      	add	r2, r3
 8016600:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016602:	922d      	str	r2, [sp, #180]	; 0xb4
 8016604:	f109 0902 	add.w	r9, r9, #2
 8016608:	441d      	add	r5, r3
 801660a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801660e:	e64d      	b.n	80162ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8016610:	2800      	cmp	r0, #0
 8016612:	f43f aeed 	beq.w	80163f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8016616:	5c79      	ldrb	r1, [r7, r1]
 8016618:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801661c:	9109      	str	r1, [sp, #36]	; 0x24
 801661e:	0e09      	lsrs	r1, r1, #24
 8016620:	9111      	str	r1, [sp, #68]	; 0x44
 8016622:	e6e5      	b.n	80163f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8016624:	b01b      	add	sp, #108	; 0x6c
 8016626:	ecbd 8b08 	vpop	{d8-d11}
 801662a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801662e:	bf00      	nop
 8016630:	fffff800 	.word	0xfffff800

08016634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8016634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016638:	b085      	sub	sp, #20
 801663a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801663e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8016642:	9103      	str	r1, [sp, #12]
 8016644:	fb05 7106 	mla	r1, r5, r6, r7
 8016648:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 801664c:	2d00      	cmp	r5, #0
 801664e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016652:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016656:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801665a:	9401      	str	r4, [sp, #4]
 801665c:	eb03 0901 	add.w	r9, r3, r1
 8016660:	f2c0 80c0 	blt.w	80167e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016664:	45a8      	cmp	r8, r5
 8016666:	f340 80bd 	ble.w	80167e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801666a:	2f00      	cmp	r7, #0
 801666c:	f2c0 80b6 	blt.w	80167dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8016670:	42be      	cmp	r6, r7
 8016672:	f340 80b3 	ble.w	80167dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8016676:	f813 c001 	ldrb.w	ip, [r3, r1]
 801667a:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 801667e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016682:	d019      	beq.n	80166b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8016684:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8016688:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801668c:	435a      	muls	r2, r3
 801668e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8016692:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8016696:	fb0c f403 	mul.w	r4, ip, r3
 801669a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801669e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80166a2:	441a      	add	r2, r3
 80166a4:	f104 0320 	add.w	r3, r4, #32
 80166a8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80166ac:	0a1b      	lsrs	r3, r3, #8
 80166ae:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80166b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80166b6:	4319      	orrs	r1, r3
 80166b8:	b289      	uxth	r1, r1
 80166ba:	1c7b      	adds	r3, r7, #1
 80166bc:	f100 8097 	bmi.w	80167ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80166c0:	429e      	cmp	r6, r3
 80166c2:	f340 8094 	ble.w	80167ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80166c6:	2800      	cmp	r0, #0
 80166c8:	f000 8094 	beq.w	80167f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 80166cc:	f899 4001 	ldrb.w	r4, [r9, #1]
 80166d0:	9b01      	ldr	r3, [sp, #4]
 80166d2:	2cff      	cmp	r4, #255	; 0xff
 80166d4:	885b      	ldrh	r3, [r3, #2]
 80166d6:	d01b      	beq.n	8016710 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 80166d8:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80166dc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80166e0:	fb0a f202 	mul.w	r2, sl, r2
 80166e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80166e8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80166ec:	fb04 fa03 	mul.w	sl, r4, r3
 80166f0:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80166f4:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80166f8:	441a      	add	r2, r3
 80166fa:	f10a 0320 	add.w	r3, sl, #32
 80166fe:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016702:	0a1b      	lsrs	r3, r3, #8
 8016704:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016708:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801670c:	ea4b 0303 	orr.w	r3, fp, r3
 8016710:	b29b      	uxth	r3, r3
 8016712:	3501      	adds	r5, #1
 8016714:	d474      	bmi.n	8016800 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8016716:	45a8      	cmp	r8, r5
 8016718:	dd72      	ble.n	8016800 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801671a:	f1be 0f00 	cmp.w	lr, #0
 801671e:	f000 8120 	beq.w	8016962 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8016722:	2f00      	cmp	r7, #0
 8016724:	db69      	blt.n	80167fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8016726:	42be      	cmp	r6, r7
 8016728:	dd67      	ble.n	80167fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801672a:	f819 5006 	ldrb.w	r5, [r9, r6]
 801672e:	9a01      	ldr	r2, [sp, #4]
 8016730:	2dff      	cmp	r5, #255	; 0xff
 8016732:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8016736:	d01c      	beq.n	8016772 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8016738:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801673c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016740:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016744:	fb05 fa0b 	mul.w	sl, r5, fp
 8016748:	fb08 f802 	mul.w	r8, r8, r2
 801674c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016750:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8016754:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016758:	4490      	add	r8, r2
 801675a:	f10a 0220 	add.w	r2, sl, #32
 801675e:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8016762:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016766:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801676a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801676e:	ea4b 0b0a 	orr.w	fp, fp, sl
 8016772:	fa1f fb8b 	uxth.w	fp, fp
 8016776:	3701      	adds	r7, #1
 8016778:	d447      	bmi.n	801680a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801677a:	42be      	cmp	r6, r7
 801677c:	dd45      	ble.n	801680a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801677e:	2800      	cmp	r0, #0
 8016780:	d046      	beq.n	8016810 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8016782:	3601      	adds	r6, #1
 8016784:	9a01      	ldr	r2, [sp, #4]
 8016786:	f819 7006 	ldrb.w	r7, [r9, r6]
 801678a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801678e:	2fff      	cmp	r7, #255	; 0xff
 8016790:	d01a      	beq.n	80167c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 8016792:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8016796:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801679a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801679e:	fb07 f902 	mul.w	r9, r7, r2
 80167a2:	fb08 f806 	mul.w	r8, r8, r6
 80167a6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80167aa:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80167ae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80167b2:	44b0      	add	r8, r6
 80167b4:	f109 0620 	add.w	r6, r9, #32
 80167b8:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80167bc:	0a36      	lsrs	r6, r6, #8
 80167be:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80167c2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80167c6:	4332      	orrs	r2, r6
 80167c8:	b292      	uxth	r2, r2
 80167ca:	280f      	cmp	r0, #15
 80167cc:	d922      	bls.n	8016814 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80167ce:	4b69      	ldr	r3, [pc, #420]	; (8016974 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80167d0:	4a69      	ldr	r2, [pc, #420]	; (8016978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80167d2:	486a      	ldr	r0, [pc, #424]	; (801697c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80167d4:	f240 11f9 	movw	r1, #505	; 0x1f9
 80167d8:	f004 fa5e 	bl	801ac98 <__assert_func>
 80167dc:	f04f 0c00 	mov.w	ip, #0
 80167e0:	4661      	mov	r1, ip
 80167e2:	e76a      	b.n	80166ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 80167e4:	2400      	movs	r4, #0
 80167e6:	46a4      	mov	ip, r4
 80167e8:	4623      	mov	r3, r4
 80167ea:	4621      	mov	r1, r4
 80167ec:	e791      	b.n	8016712 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80167ee:	2400      	movs	r4, #0
 80167f0:	4623      	mov	r3, r4
 80167f2:	e78e      	b.n	8016712 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80167f4:	4604      	mov	r4, r0
 80167f6:	4603      	mov	r3, r0
 80167f8:	e78b      	b.n	8016712 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 80167fa:	2500      	movs	r5, #0
 80167fc:	46ab      	mov	fp, r5
 80167fe:	e7ba      	b.n	8016776 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8016800:	2700      	movs	r7, #0
 8016802:	463d      	mov	r5, r7
 8016804:	463a      	mov	r2, r7
 8016806:	46bb      	mov	fp, r7
 8016808:	e7df      	b.n	80167ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801680a:	2700      	movs	r7, #0
 801680c:	463a      	mov	r2, r7
 801680e:	e7dc      	b.n	80167ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8016810:	4607      	mov	r7, r0
 8016812:	4602      	mov	r2, r0
 8016814:	f1be 0f0f 	cmp.w	lr, #15
 8016818:	d8d9      	bhi.n	80167ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801681a:	b286      	uxth	r6, r0
 801681c:	fa1f f98e 	uxth.w	r9, lr
 8016820:	fb06 f809 	mul.w	r8, r6, r9
 8016824:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8016828:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801682c:	0136      	lsls	r6, r6, #4
 801682e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016832:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016836:	9601      	str	r6, [sp, #4]
 8016838:	ea4a 0101 	orr.w	r1, sl, r1
 801683c:	fa1f f689 	uxth.w	r6, r9
 8016840:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8016844:	fb10 f90e 	smulbb	r9, r0, lr
 8016848:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801684c:	9602      	str	r6, [sp, #8]
 801684e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016852:	460e      	mov	r6, r1
 8016854:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016858:	f1ce 0110 	rsb	r1, lr, #16
 801685c:	1a09      	subs	r1, r1, r0
 801685e:	ea4a 0303 	orr.w	r3, sl, r3
 8016862:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8016866:	4343      	muls	r3, r0
 8016868:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801686c:	9801      	ldr	r0, [sp, #4]
 801686e:	fb01 3106 	mla	r1, r1, r6, r3
 8016872:	9e02      	ldr	r6, [sp, #8]
 8016874:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8016878:	1b80      	subs	r0, r0, r6
 801687a:	9e01      	ldr	r6, [sp, #4]
 801687c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8016880:	eba6 0608 	sub.w	r6, r6, r8
 8016884:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016888:	b2b6      	uxth	r6, r6
 801688a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801688e:	ea4a 0202 	orr.w	r2, sl, r2
 8016892:	b280      	uxth	r0, r0
 8016894:	4374      	muls	r4, r6
 8016896:	fb09 1302 	mla	r3, r9, r2, r1
 801689a:	fb0c 4400 	mla	r4, ip, r0, r4
 801689e:	9a03      	ldr	r2, [sp, #12]
 80168a0:	9802      	ldr	r0, [sp, #8]
 80168a2:	8811      	ldrh	r1, [r2, #0]
 80168a4:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80168a8:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80168ac:	fb00 4505 	mla	r5, r0, r5, r4
 80168b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80168b4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80168b8:	fb08 5707 	mla	r7, r8, r7, r5
 80168bc:	ea4a 0b0b 	orr.w	fp, sl, fp
 80168c0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80168c4:	b292      	uxth	r2, r2
 80168c6:	fb0e 3e0b 	mla	lr, lr, fp, r3
 80168ca:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80168ce:	4357      	muls	r7, r2
 80168d0:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80168d4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80168d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80168dc:	f107 0801 	add.w	r8, r7, #1
 80168e0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80168e4:	ea43 0e0e 	orr.w	lr, r3, lr
 80168e8:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 80168ec:	fa1f f38e 	uxth.w	r3, lr
 80168f0:	1208      	asrs	r0, r1, #8
 80168f2:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80168f6:	b2ff      	uxtb	r7, r7
 80168f8:	121c      	asrs	r4, r3, #8
 80168fa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80168fe:	fb10 f007 	smulbb	r0, r0, r7
 8016902:	10cd      	asrs	r5, r1, #3
 8016904:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8016908:	fb04 0402 	mla	r4, r4, r2, r0
 801690c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016910:	10d8      	asrs	r0, r3, #3
 8016912:	fb15 f507 	smulbb	r5, r5, r7
 8016916:	00db      	lsls	r3, r3, #3
 8016918:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801691c:	fb00 5002 	mla	r0, r0, r2, r5
 8016920:	b2dd      	uxtb	r5, r3
 8016922:	00cb      	lsls	r3, r1, #3
 8016924:	b2db      	uxtb	r3, r3
 8016926:	fb13 f307 	smulbb	r3, r3, r7
 801692a:	fb05 3202 	mla	r2, r5, r2, r3
 801692e:	b2a4      	uxth	r4, r4
 8016930:	b292      	uxth	r2, r2
 8016932:	1c63      	adds	r3, r4, #1
 8016934:	b280      	uxth	r0, r0
 8016936:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801693a:	1c53      	adds	r3, r2, #1
 801693c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016940:	1c42      	adds	r2, r0, #1
 8016942:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016946:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801694a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801694e:	0940      	lsrs	r0, r0, #5
 8016950:	4323      	orrs	r3, r4
 8016952:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016956:	9a03      	ldr	r2, [sp, #12]
 8016958:	4303      	orrs	r3, r0
 801695a:	8013      	strh	r3, [r2, #0]
 801695c:	b005      	add	sp, #20
 801695e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016962:	280f      	cmp	r0, #15
 8016964:	f63f af33 	bhi.w	80167ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8016968:	4677      	mov	r7, lr
 801696a:	4675      	mov	r5, lr
 801696c:	4672      	mov	r2, lr
 801696e:	46f3      	mov	fp, lr
 8016970:	e753      	b.n	801681a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8016972:	bf00      	nop
 8016974:	0801eaff 	.word	0x0801eaff
 8016978:	0801f02e 	.word	0x0801f02e
 801697c:	0801eacc 	.word	0x0801eacc

08016980 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016984:	ed2d 8b08 	vpush	{d8-d11}
 8016988:	b097      	sub	sp, #92	; 0x5c
 801698a:	eeb0 aa40 	vmov.f32	s20, s0
 801698e:	9214      	str	r2, [sp, #80]	; 0x50
 8016990:	9308      	str	r3, [sp, #32]
 8016992:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016994:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8016998:	9312      	str	r3, [sp, #72]	; 0x48
 801699a:	9111      	str	r1, [sp, #68]	; 0x44
 801699c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80169a0:	9015      	str	r0, [sp, #84]	; 0x54
 80169a2:	6850      	ldr	r0, [r2, #4]
 80169a4:	6812      	ldr	r2, [r2, #0]
 80169a6:	fb00 1303 	mla	r3, r0, r3, r1
 80169aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80169ae:	9309      	str	r3, [sp, #36]	; 0x24
 80169b0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80169b2:	681b      	ldr	r3, [r3, #0]
 80169b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80169b6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80169b8:	685b      	ldr	r3, [r3, #4]
 80169ba:	930c      	str	r3, [sp, #48]	; 0x30
 80169bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80169c0:	930a      	str	r3, [sp, #40]	; 0x28
 80169c2:	eef0 9a60 	vmov.f32	s19, s1
 80169c6:	eeb0 9a41 	vmov.f32	s18, s2
 80169ca:	eeb0 8a62 	vmov.f32	s16, s5
 80169ce:	eef0 8a43 	vmov.f32	s17, s6
 80169d2:	eef0 ba44 	vmov.f32	s23, s8
 80169d6:	eeb0 ba64 	vmov.f32	s22, s9
 80169da:	eef0 aa45 	vmov.f32	s21, s10
 80169de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80169e0:	2b00      	cmp	r3, #0
 80169e2:	dc03      	bgt.n	80169ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80169e4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80169e6:	2b00      	cmp	r3, #0
 80169e8:	f340 83cb 	ble.w	8017182 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80169ec:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80169ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80169f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80169f6:	1e48      	subs	r0, r1, #1
 80169f8:	1e55      	subs	r5, r2, #1
 80169fa:	9b08      	ldr	r3, [sp, #32]
 80169fc:	2b00      	cmp	r3, #0
 80169fe:	f340 81a3 	ble.w	8016d48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8016a02:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8016a04:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016a06:	1436      	asrs	r6, r6, #16
 8016a08:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016a0c:	d406      	bmi.n	8016a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016a0e:	4286      	cmp	r6, r0
 8016a10:	da04      	bge.n	8016a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016a12:	2b00      	cmp	r3, #0
 8016a14:	db02      	blt.n	8016a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016a16:	42ab      	cmp	r3, r5
 8016a18:	f2c0 8197 	blt.w	8016d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8016a1c:	3601      	adds	r6, #1
 8016a1e:	f100 8184 	bmi.w	8016d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8016a22:	42b1      	cmp	r1, r6
 8016a24:	f2c0 8181 	blt.w	8016d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8016a28:	3301      	adds	r3, #1
 8016a2a:	f100 817e 	bmi.w	8016d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8016a2e:	429a      	cmp	r2, r3
 8016a30:	f2c0 817b 	blt.w	8016d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8016a34:	9b08      	ldr	r3, [sp, #32]
 8016a36:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8016a38:	9313      	str	r3, [sp, #76]	; 0x4c
 8016a3a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016a3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016a40:	2b00      	cmp	r3, #0
 8016a42:	f340 81a4 	ble.w	8016d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8016a46:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016a48:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8016a4a:	1418      	asrs	r0, r3, #16
 8016a4c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016a4e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8016a52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016a54:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8016a58:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016a5a:	142d      	asrs	r5, r5, #16
 8016a5c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8016a60:	f100 81f8 	bmi.w	8016e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8016a64:	f102 3eff 	add.w	lr, r2, #4294967295
 8016a68:	4575      	cmp	r5, lr
 8016a6a:	f280 81f3 	bge.w	8016e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8016a6e:	2800      	cmp	r0, #0
 8016a70:	f2c0 81f0 	blt.w	8016e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8016a74:	f103 3eff 	add.w	lr, r3, #4294967295
 8016a78:	4570      	cmp	r0, lr
 8016a7a:	f280 81eb 	bge.w	8016e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8016a7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016a80:	b212      	sxth	r2, r2
 8016a82:	fb00 5002 	mla	r0, r0, r2, r5
 8016a86:	fa1f fe81 	uxth.w	lr, r1
 8016a8a:	eb03 0a00 	add.w	sl, r3, r0
 8016a8e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8016a92:	f813 9000 	ldrb.w	r9, [r3, r0]
 8016a96:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016a9a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8016a9e:	b29b      	uxth	r3, r3
 8016aa0:	f1bc 0f00 	cmp.w	ip, #0
 8016aa4:	f000 81b9 	beq.w	8016e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8016aa8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8016aac:	940d      	str	r4, [sp, #52]	; 0x34
 8016aae:	eb0a 0b02 	add.w	fp, sl, r2
 8016ab2:	fa1f fa8c 	uxth.w	sl, ip
 8016ab6:	fb0a fe0e 	mul.w	lr, sl, lr
 8016aba:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8016abe:	fa1f fa8a 	uxth.w	sl, sl
 8016ac2:	eba5 050e 	sub.w	r5, r5, lr
 8016ac6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016aca:	940e      	str	r4, [sp, #56]	; 0x38
 8016acc:	eba3 030a 	sub.w	r3, r3, sl
 8016ad0:	b2ad      	uxth	r5, r5
 8016ad2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016ad4:	b29b      	uxth	r3, r3
 8016ad6:	fb08 f505 	mul.w	r5, r8, r5
 8016ada:	fb09 5303 	mla	r3, r9, r3, r5
 8016ade:	fb0a 3304 	mla	r3, sl, r4, r3
 8016ae2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016ae4:	fb0e 3304 	mla	r3, lr, r4, r3
 8016ae8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016aec:	2b00      	cmp	r3, #0
 8016aee:	f000 810f 	beq.w	8016d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016af2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016af4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016af8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8016afc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8016b00:	f000 8190 	beq.w	8016e24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8016b04:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8016b08:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016b0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016b10:	fb09 f000 	mul.w	r0, r9, r0
 8016b14:	fb0a fe0e 	mul.w	lr, sl, lr
 8016b18:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016b1c:	f100 0b20 	add.w	fp, r0, #32
 8016b20:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016b24:	44ce      	add	lr, r9
 8016b26:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8016b2a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016b2e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016b32:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016b36:	ea4e 0909 	orr.w	r9, lr, r9
 8016b3a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016b3e:	8868      	ldrh	r0, [r5, #2]
 8016b40:	d019      	beq.n	8016b76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8016b42:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8016b46:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016b4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016b4e:	fb08 f800 	mul.w	r8, r8, r0
 8016b52:	fb0a fe0e 	mul.w	lr, sl, lr
 8016b56:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8016b5a:	f108 0b20 	add.w	fp, r8, #32
 8016b5e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016b62:	4486      	add	lr, r0
 8016b64:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8016b68:	0a00      	lsrs	r0, r0, #8
 8016b6a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016b6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016b72:	ea4e 0000 	orr.w	r0, lr, r0
 8016b76:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8016b7a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8016b7e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016b82:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016b86:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016b8a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016b8e:	ea4e 0909 	orr.w	r9, lr, r9
 8016b92:	ea4a 0000 	orr.w	r0, sl, r0
 8016b96:	f1bc 0f00 	cmp.w	ip, #0
 8016b9a:	f000 8145 	beq.w	8016e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8016b9e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8016ba2:	3a01      	subs	r2, #1
 8016ba4:	0052      	lsls	r2, r2, #1
 8016ba6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016ba8:	3202      	adds	r2, #2
 8016baa:	2cff      	cmp	r4, #255	; 0xff
 8016bac:	eb05 0e02 	add.w	lr, r5, r2
 8016bb0:	5aaa      	ldrh	r2, [r5, r2]
 8016bb2:	d018      	beq.n	8016be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016bb4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8016bb8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016bbc:	fb04 fa02 	mul.w	sl, r4, r2
 8016bc0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016bc4:	fb08 f805 	mul.w	r8, r8, r5
 8016bc8:	f10a 0520 	add.w	r5, sl, #32
 8016bcc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8016bd0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8016bd4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016bd8:	4442      	add	r2, r8
 8016bda:	0a2d      	lsrs	r5, r5, #8
 8016bdc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8016be0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016be4:	432a      	orrs	r2, r5
 8016be6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016be8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8016bec:	2cff      	cmp	r4, #255	; 0xff
 8016bee:	d01a      	beq.n	8016c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8016bf0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8016bf4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016bf8:	fb04 fa05 	mul.w	sl, r4, r5
 8016bfc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016c00:	fb08 f80e 	mul.w	r8, r8, lr
 8016c04:	f10a 0e20 	add.w	lr, sl, #32
 8016c08:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8016c0c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8016c10:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016c14:	4445      	add	r5, r8
 8016c16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016c1a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8016c1e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8016c22:	ea45 050e 	orr.w	r5, r5, lr
 8016c26:	fb1c fe01 	smulbb	lr, ip, r1
 8016c2a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8016c2e:	f1cc 0810 	rsb	r8, ip, #16
 8016c32:	eba8 0801 	sub.w	r8, r8, r1
 8016c36:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8016c3a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8016c3e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8016c42:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8016c46:	4341      	muls	r1, r0
 8016c48:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016c4c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016c50:	ea4a 0202 	orr.w	r2, sl, r2
 8016c54:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8016c58:	fb09 1108 	mla	r1, r9, r8, r1
 8016c5c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016c60:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8016c64:	fb0c 1102 	mla	r1, ip, r2, r1
 8016c68:	ea4b 0505 	orr.w	r5, fp, r5
 8016c6c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8016c70:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8016c74:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016c78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016c7c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016c80:	ea42 0e0e 	orr.w	lr, r2, lr
 8016c84:	fa1f f28e 	uxth.w	r2, lr
 8016c88:	2bff      	cmp	r3, #255	; 0xff
 8016c8a:	d103      	bne.n	8016c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016c8c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016c8e:	29ff      	cmp	r1, #255	; 0xff
 8016c90:	f000 80de 	beq.w	8016e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8016c94:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016c96:	8838      	ldrh	r0, [r7, #0]
 8016c98:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016c9a:	434b      	muls	r3, r1
 8016c9c:	f103 0c01 	add.w	ip, r3, #1
 8016ca0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8016ca4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8016ca8:	fa5f fc83 	uxtb.w	ip, r3
 8016cac:	1203      	asrs	r3, r0, #8
 8016cae:	1215      	asrs	r5, r2, #8
 8016cb0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8016cb4:	fb13 f30c 	smulbb	r3, r3, ip
 8016cb8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016cbc:	fb05 3501 	mla	r5, r5, r1, r3
 8016cc0:	10c3      	asrs	r3, r0, #3
 8016cc2:	10d1      	asrs	r1, r2, #3
 8016cc4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016cc8:	fb13 f30c 	smulbb	r3, r3, ip
 8016ccc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016cd0:	fb01 3104 	mla	r1, r1, r4, r3
 8016cd4:	00c3      	lsls	r3, r0, #3
 8016cd6:	00d2      	lsls	r2, r2, #3
 8016cd8:	b2db      	uxtb	r3, r3
 8016cda:	b2d2      	uxtb	r2, r2
 8016cdc:	fb13 f30c 	smulbb	r3, r3, ip
 8016ce0:	b2ad      	uxth	r5, r5
 8016ce2:	fb02 3304 	mla	r3, r2, r4, r3
 8016ce6:	b29a      	uxth	r2, r3
 8016ce8:	1c6b      	adds	r3, r5, #1
 8016cea:	b289      	uxth	r1, r1
 8016cec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8016cf0:	1c53      	adds	r3, r2, #1
 8016cf2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016cf6:	1c4a      	adds	r2, r1, #1
 8016cf8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016cfc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016d00:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016d04:	0949      	lsrs	r1, r1, #5
 8016d06:	432b      	orrs	r3, r5
 8016d08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016d0c:	430b      	orrs	r3, r1
 8016d0e:	803b      	strh	r3, [r7, #0]
 8016d10:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016d12:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016d14:	4413      	add	r3, r2
 8016d16:	9329      	str	r3, [sp, #164]	; 0xa4
 8016d18:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016d1a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016d1c:	441a      	add	r2, r3
 8016d1e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016d20:	922a      	str	r2, [sp, #168]	; 0xa8
 8016d22:	3b01      	subs	r3, #1
 8016d24:	3702      	adds	r7, #2
 8016d26:	9313      	str	r3, [sp, #76]	; 0x4c
 8016d28:	e689      	b.n	8016a3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8016d2a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016d2c:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8016d2e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8016d30:	4433      	add	r3, r6
 8016d32:	9329      	str	r3, [sp, #164]	; 0xa4
 8016d34:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016d36:	441c      	add	r4, r3
 8016d38:	9b08      	ldr	r3, [sp, #32]
 8016d3a:	942a      	str	r4, [sp, #168]	; 0xa8
 8016d3c:	3b01      	subs	r3, #1
 8016d3e:	9308      	str	r3, [sp, #32]
 8016d40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d42:	3302      	adds	r3, #2
 8016d44:	9309      	str	r3, [sp, #36]	; 0x24
 8016d46:	e658      	b.n	80169fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016d48:	d028      	beq.n	8016d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8016d4a:	9b08      	ldr	r3, [sp, #32]
 8016d4c:	982b      	ldr	r0, [sp, #172]	; 0xac
 8016d4e:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8016d50:	3b01      	subs	r3, #1
 8016d52:	fb00 5003 	mla	r0, r0, r3, r5
 8016d56:	1400      	asrs	r0, r0, #16
 8016d58:	f53f ae6c 	bmi.w	8016a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8016d5c:	3901      	subs	r1, #1
 8016d5e:	4288      	cmp	r0, r1
 8016d60:	f6bf ae68 	bge.w	8016a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8016d64:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8016d66:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8016d68:	fb01 0303 	mla	r3, r1, r3, r0
 8016d6c:	141b      	asrs	r3, r3, #16
 8016d6e:	f53f ae61 	bmi.w	8016a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8016d72:	3a01      	subs	r2, #1
 8016d74:	4293      	cmp	r3, r2
 8016d76:	f6bf ae5d 	bge.w	8016a34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8016d7a:	9b08      	ldr	r3, [sp, #32]
 8016d7c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8016d80:	9313      	str	r3, [sp, #76]	; 0x4c
 8016d82:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016d86:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016d88:	2b00      	cmp	r3, #0
 8016d8a:	f300 8082 	bgt.w	8016e92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8016d8e:	9b08      	ldr	r3, [sp, #32]
 8016d90:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016d94:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d96:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016d9a:	9309      	str	r3, [sp, #36]	; 0x24
 8016d9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016d9e:	2b00      	cmp	r3, #0
 8016da0:	f340 81ef 	ble.w	8017182 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8016da4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016da8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016dac:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016db0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016db2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016db6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016dba:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016dbe:	eef0 6a48 	vmov.f32	s13, s16
 8016dc2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016dc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016dca:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016dce:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8016dd2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016dd6:	eef0 6a68 	vmov.f32	s13, s17
 8016dda:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016dde:	ee18 2a10 	vmov	r2, s16
 8016de2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016de6:	fb92 f3f3 	sdiv	r3, r2, r3
 8016dea:	ee18 2a90 	vmov	r2, s17
 8016dee:	932b      	str	r3, [sp, #172]	; 0xac
 8016df0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016df2:	fb92 f3f3 	sdiv	r3, r2, r3
 8016df6:	932c      	str	r3, [sp, #176]	; 0xb0
 8016df8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016dfa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016dfc:	3b01      	subs	r3, #1
 8016dfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016e02:	9311      	str	r3, [sp, #68]	; 0x44
 8016e04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016e06:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8016e0a:	bf08      	it	eq
 8016e0c:	4613      	moveq	r3, r2
 8016e0e:	9308      	str	r3, [sp, #32]
 8016e10:	eef0 8a67 	vmov.f32	s17, s15
 8016e14:	eeb0 8a47 	vmov.f32	s16, s14
 8016e18:	e5e1      	b.n	80169de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016e1a:	fb08 f505 	mul.w	r5, r8, r5
 8016e1e:	fb09 5303 	mla	r3, r9, r3, r5
 8016e22:	e661      	b.n	8016ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8016e24:	4681      	mov	r9, r0
 8016e26:	e688      	b.n	8016b3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8016e28:	f1c1 0210 	rsb	r2, r1, #16
 8016e2c:	4341      	muls	r1, r0
 8016e2e:	fb09 1902 	mla	r9, r9, r2, r1
 8016e32:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016e36:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016e3a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016e3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016e42:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016e46:	ea42 0909 	orr.w	r9, r2, r9
 8016e4a:	fa1f f289 	uxth.w	r2, r9
 8016e4e:	e71b      	b.n	8016c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8016e50:	803a      	strh	r2, [r7, #0]
 8016e52:	e75d      	b.n	8016d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016e54:	f115 0e01 	adds.w	lr, r5, #1
 8016e58:	f53f af5a 	bmi.w	8016d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016e5c:	4572      	cmp	r2, lr
 8016e5e:	f6ff af57 	blt.w	8016d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016e62:	f110 0e01 	adds.w	lr, r0, #1
 8016e66:	f53f af53 	bmi.w	8016d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016e6a:	4573      	cmp	r3, lr
 8016e6c:	f6ff af50 	blt.w	8016d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016e70:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016e72:	9502      	str	r5, [sp, #8]
 8016e74:	b21b      	sxth	r3, r3
 8016e76:	b212      	sxth	r2, r2
 8016e78:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8016e7c:	9301      	str	r3, [sp, #4]
 8016e7e:	9200      	str	r2, [sp, #0]
 8016e80:	e9cd c405 	strd	ip, r4, [sp, #20]
 8016e84:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8016e88:	4639      	mov	r1, r7
 8016e8a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016e8c:	f7ff fbd2 	bl	8016634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8016e90:	e73e      	b.n	8016d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016e92:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016e94:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016e98:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016e9a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8016e9e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016ea0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016ea4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016ea6:	141f      	asrs	r7, r3, #16
 8016ea8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016eaa:	141b      	asrs	r3, r3, #16
 8016eac:	fb01 3707 	mla	r7, r1, r7, r3
 8016eb0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016eb2:	fa1f fc82 	uxth.w	ip, r2
 8016eb6:	eb03 0a07 	add.w	sl, r3, r7
 8016eba:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8016ebe:	f813 9007 	ldrb.w	r9, [r3, r7]
 8016ec2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016ec6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016eca:	b29b      	uxth	r3, r3
 8016ecc:	2d00      	cmp	r5, #0
 8016ece:	f000 813d 	beq.w	801714c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8016ed2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8016ed6:	940f      	str	r4, [sp, #60]	; 0x3c
 8016ed8:	eb0a 0b01 	add.w	fp, sl, r1
 8016edc:	fa1f fa85 	uxth.w	sl, r5
 8016ee0:	fb0a fc0c 	mul.w	ip, sl, ip
 8016ee4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8016ee8:	fa1f fa8a 	uxth.w	sl, sl
 8016eec:	eba0 000c 	sub.w	r0, r0, ip
 8016ef0:	eba3 030a 	sub.w	r3, r3, sl
 8016ef4:	b280      	uxth	r0, r0
 8016ef6:	fb08 f000 	mul.w	r0, r8, r0
 8016efa:	b29b      	uxth	r3, r3
 8016efc:	fb09 0303 	mla	r3, r9, r3, r0
 8016f00:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016f02:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016f06:	9410      	str	r4, [sp, #64]	; 0x40
 8016f08:	fb0a 3300 	mla	r3, sl, r0, r3
 8016f0c:	fb0c 3304 	mla	r3, ip, r4, r3
 8016f10:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016f14:	2b00      	cmp	r3, #0
 8016f16:	f000 810b 	beq.w	8017130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8016f1a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016f1c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016f1e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016f22:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8016f26:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8016f2a:	f000 8114 	beq.w	8017156 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8016f2e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016f32:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016f36:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016f3a:	fb09 f707 	mul.w	r7, r9, r7
 8016f3e:	fb0a fc0c 	mul.w	ip, sl, ip
 8016f42:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8016f46:	f107 0b20 	add.w	fp, r7, #32
 8016f4a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016f4e:	44cc      	add	ip, r9
 8016f50:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8016f54:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016f58:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016f5c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016f60:	ea4c 0909 	orr.w	r9, ip, r9
 8016f64:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016f68:	8847      	ldrh	r7, [r0, #2]
 8016f6a:	d019      	beq.n	8016fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8016f6c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016f70:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016f74:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016f78:	fb08 f807 	mul.w	r8, r8, r7
 8016f7c:	fb0a fc0c 	mul.w	ip, sl, ip
 8016f80:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8016f84:	f108 0b20 	add.w	fp, r8, #32
 8016f88:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016f8c:	44bc      	add	ip, r7
 8016f8e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8016f92:	0a3f      	lsrs	r7, r7, #8
 8016f94:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016f98:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016f9c:	ea4c 0707 	orr.w	r7, ip, r7
 8016fa0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8016fa4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016fa8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016fac:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016fb0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016fb4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016fb8:	ea4c 0909 	orr.w	r9, ip, r9
 8016fbc:	ea4a 0707 	orr.w	r7, sl, r7
 8016fc0:	2d00      	cmp	r5, #0
 8016fc2:	f000 80ca 	beq.w	801715a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8016fc6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8016fca:	3901      	subs	r1, #1
 8016fcc:	0049      	lsls	r1, r1, #1
 8016fce:	3102      	adds	r1, #2
 8016fd0:	eb00 0c01 	add.w	ip, r0, r1
 8016fd4:	5a41      	ldrh	r1, [r0, r1]
 8016fd6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016fd8:	28ff      	cmp	r0, #255	; 0xff
 8016fda:	d019      	beq.n	8017010 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8016fdc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016fde:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8016fe2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016fe6:	fb04 fa01 	mul.w	sl, r4, r1
 8016fea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016fee:	fb08 f800 	mul.w	r8, r8, r0
 8016ff2:	f10a 0020 	add.w	r0, sl, #32
 8016ff6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8016ffa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016ffe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017002:	4441      	add	r1, r8
 8017004:	0a00      	lsrs	r0, r0, #8
 8017006:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801700a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801700e:	4301      	orrs	r1, r0
 8017010:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017012:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8017016:	2cff      	cmp	r4, #255	; 0xff
 8017018:	d01a      	beq.n	8017050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 801701a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801701e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017022:	fb04 fa00 	mul.w	sl, r4, r0
 8017026:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801702a:	fb08 f80c 	mul.w	r8, r8, ip
 801702e:	f10a 0c20 	add.w	ip, sl, #32
 8017032:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8017036:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801703a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801703e:	4440      	add	r0, r8
 8017040:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017044:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017048:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801704c:	ea40 000c 	orr.w	r0, r0, ip
 8017050:	fb15 fc02 	smulbb	ip, r5, r2
 8017054:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017058:	f1c5 0810 	rsb	r8, r5, #16
 801705c:	eba8 0802 	sub.w	r8, r8, r2
 8017060:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017064:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017068:	437a      	muls	r2, r7
 801706a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801706e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8017072:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017076:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801707a:	fb09 2208 	mla	r2, r9, r8, r2
 801707e:	ea4a 0101 	orr.w	r1, sl, r1
 8017082:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8017086:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801708a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801708e:	fb05 2201 	mla	r2, r5, r1, r2
 8017092:	ea4b 0000 	orr.w	r0, fp, r0
 8017096:	fb0c 2200 	mla	r2, ip, r0, r2
 801709a:	0d57      	lsrs	r7, r2, #21
 801709c:	0952      	lsrs	r2, r2, #5
 801709e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80170a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80170a6:	433a      	orrs	r2, r7
 80170a8:	2bff      	cmp	r3, #255	; 0xff
 80170aa:	b292      	uxth	r2, r2
 80170ac:	d102      	bne.n	80170b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80170ae:	9912      	ldr	r1, [sp, #72]	; 0x48
 80170b0:	29ff      	cmp	r1, #255	; 0xff
 80170b2:	d063      	beq.n	801717c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 80170b4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80170b6:	f8be 1000 	ldrh.w	r1, [lr]
 80170ba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80170bc:	4343      	muls	r3, r0
 80170be:	1c58      	adds	r0, r3, #1
 80170c0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80170c4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80170c8:	1208      	asrs	r0, r1, #8
 80170ca:	b2db      	uxtb	r3, r3
 80170cc:	1215      	asrs	r5, r2, #8
 80170ce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80170d2:	fb10 f003 	smulbb	r0, r0, r3
 80170d6:	10cf      	asrs	r7, r1, #3
 80170d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80170dc:	00c9      	lsls	r1, r1, #3
 80170de:	fb05 0504 	mla	r5, r5, r4, r0
 80170e2:	b2c9      	uxtb	r1, r1
 80170e4:	10d0      	asrs	r0, r2, #3
 80170e6:	00d2      	lsls	r2, r2, #3
 80170e8:	fb11 f103 	smulbb	r1, r1, r3
 80170ec:	b2d2      	uxtb	r2, r2
 80170ee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80170f2:	fb02 1204 	mla	r2, r2, r4, r1
 80170f6:	fb17 f703 	smulbb	r7, r7, r3
 80170fa:	b2ad      	uxth	r5, r5
 80170fc:	b292      	uxth	r2, r2
 80170fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017102:	fb00 7004 	mla	r0, r0, r4, r7
 8017106:	1c6b      	adds	r3, r5, #1
 8017108:	1c57      	adds	r7, r2, #1
 801710a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801710e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017112:	b280      	uxth	r0, r0
 8017114:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017118:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801711c:	433d      	orrs	r5, r7
 801711e:	1c47      	adds	r7, r0, #1
 8017120:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8017124:	097f      	lsrs	r7, r7, #5
 8017126:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801712a:	433d      	orrs	r5, r7
 801712c:	f8ae 5000 	strh.w	r5, [lr]
 8017130:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017132:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017134:	4413      	add	r3, r2
 8017136:	9329      	str	r3, [sp, #164]	; 0xa4
 8017138:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801713a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801713c:	441a      	add	r2, r3
 801713e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017140:	922a      	str	r2, [sp, #168]	; 0xa8
 8017142:	3b01      	subs	r3, #1
 8017144:	f10e 0e02 	add.w	lr, lr, #2
 8017148:	9313      	str	r3, [sp, #76]	; 0x4c
 801714a:	e61c      	b.n	8016d86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 801714c:	fb08 f000 	mul.w	r0, r8, r0
 8017150:	fb09 0303 	mla	r3, r9, r3, r0
 8017154:	e6dc      	b.n	8016f10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8017156:	46b9      	mov	r9, r7
 8017158:	e704      	b.n	8016f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 801715a:	f1c2 0110 	rsb	r1, r2, #16
 801715e:	437a      	muls	r2, r7
 8017160:	fb09 2901 	mla	r9, r9, r1, r2
 8017164:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017168:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801716c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017170:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017174:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017178:	4302      	orrs	r2, r0
 801717a:	e795      	b.n	80170a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 801717c:	f8ae 2000 	strh.w	r2, [lr]
 8017180:	e7d6      	b.n	8017130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8017182:	b017      	add	sp, #92	; 0x5c
 8017184:	ecbd 8b08 	vpop	{d8-d11}
 8017188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801718c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801718c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017190:	b085      	sub	sp, #20
 8017192:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8017196:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801719a:	9103      	str	r1, [sp, #12]
 801719c:	fb05 7106 	mla	r1, r5, r6, r7
 80171a0:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 80171a4:	2d00      	cmp	r5, #0
 80171a6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80171aa:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80171ae:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80171b2:	9401      	str	r4, [sp, #4]
 80171b4:	eb02 0901 	add.w	r9, r2, r1
 80171b8:	f2c0 80c0 	blt.w	801733c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80171bc:	45a8      	cmp	r8, r5
 80171be:	f340 80bd 	ble.w	801733c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80171c2:	2f00      	cmp	r7, #0
 80171c4:	f2c0 80b6 	blt.w	8017334 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80171c8:	42be      	cmp	r6, r7
 80171ca:	f340 80b3 	ble.w	8017334 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80171ce:	f812 c001 	ldrb.w	ip, [r2, r1]
 80171d2:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 80171d6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80171da:	d019      	beq.n	8017210 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 80171dc:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80171e0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80171e4:	435a      	muls	r2, r3
 80171e6:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80171ea:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80171ee:	fb0c f403 	mul.w	r4, ip, r3
 80171f2:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80171f6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80171fa:	441a      	add	r2, r3
 80171fc:	f104 0320 	add.w	r3, r4, #32
 8017200:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017204:	0a1b      	lsrs	r3, r3, #8
 8017206:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801720a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801720e:	4319      	orrs	r1, r3
 8017210:	b289      	uxth	r1, r1
 8017212:	1c7b      	adds	r3, r7, #1
 8017214:	f100 8097 	bmi.w	8017346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8017218:	429e      	cmp	r6, r3
 801721a:	f340 8094 	ble.w	8017346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801721e:	2800      	cmp	r0, #0
 8017220:	f000 8094 	beq.w	801734c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8017224:	f899 4001 	ldrb.w	r4, [r9, #1]
 8017228:	9b01      	ldr	r3, [sp, #4]
 801722a:	2cff      	cmp	r4, #255	; 0xff
 801722c:	885b      	ldrh	r3, [r3, #2]
 801722e:	d01b      	beq.n	8017268 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8017230:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017234:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017238:	fb0a f202 	mul.w	r2, sl, r2
 801723c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017240:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017244:	fb04 fa03 	mul.w	sl, r4, r3
 8017248:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801724c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017250:	441a      	add	r2, r3
 8017252:	f10a 0320 	add.w	r3, sl, #32
 8017256:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801725a:	0a1b      	lsrs	r3, r3, #8
 801725c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017260:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017264:	ea4b 0303 	orr.w	r3, fp, r3
 8017268:	b29b      	uxth	r3, r3
 801726a:	3501      	adds	r5, #1
 801726c:	d474      	bmi.n	8017358 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801726e:	45a8      	cmp	r8, r5
 8017270:	dd72      	ble.n	8017358 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8017272:	f1be 0f00 	cmp.w	lr, #0
 8017276:	f000 8110 	beq.w	801749a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 801727a:	2f00      	cmp	r7, #0
 801727c:	db69      	blt.n	8017352 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801727e:	42be      	cmp	r6, r7
 8017280:	dd67      	ble.n	8017352 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8017282:	f819 5006 	ldrb.w	r5, [r9, r6]
 8017286:	9a01      	ldr	r2, [sp, #4]
 8017288:	2dff      	cmp	r5, #255	; 0xff
 801728a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801728e:	d01c      	beq.n	80172ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8017290:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8017294:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017298:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801729c:	fb05 fa0b 	mul.w	sl, r5, fp
 80172a0:	fb08 f802 	mul.w	r8, r8, r2
 80172a4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80172a8:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80172ac:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80172b0:	4490      	add	r8, r2
 80172b2:	f10a 0220 	add.w	r2, sl, #32
 80172b6:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80172ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80172be:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80172c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80172c6:	ea4b 0b0a 	orr.w	fp, fp, sl
 80172ca:	fa1f fb8b 	uxth.w	fp, fp
 80172ce:	3701      	adds	r7, #1
 80172d0:	d447      	bmi.n	8017362 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80172d2:	42be      	cmp	r6, r7
 80172d4:	dd45      	ble.n	8017362 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80172d6:	2800      	cmp	r0, #0
 80172d8:	d046      	beq.n	8017368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 80172da:	3601      	adds	r6, #1
 80172dc:	9a01      	ldr	r2, [sp, #4]
 80172de:	f819 7006 	ldrb.w	r7, [r9, r6]
 80172e2:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80172e6:	2fff      	cmp	r7, #255	; 0xff
 80172e8:	d01a      	beq.n	8017320 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 80172ea:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80172ee:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80172f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80172f6:	fb07 f902 	mul.w	r9, r7, r2
 80172fa:	fb08 f806 	mul.w	r8, r8, r6
 80172fe:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8017302:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8017306:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801730a:	44b0      	add	r8, r6
 801730c:	f109 0620 	add.w	r6, r9, #32
 8017310:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8017314:	0a36      	lsrs	r6, r6, #8
 8017316:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801731a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801731e:	4332      	orrs	r2, r6
 8017320:	b292      	uxth	r2, r2
 8017322:	280f      	cmp	r0, #15
 8017324:	d922      	bls.n	801736c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8017326:	4b61      	ldr	r3, [pc, #388]	; (80174ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8017328:	4a61      	ldr	r2, [pc, #388]	; (80174b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 801732a:	4862      	ldr	r0, [pc, #392]	; (80174b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 801732c:	f240 11f9 	movw	r1, #505	; 0x1f9
 8017330:	f003 fcb2 	bl	801ac98 <__assert_func>
 8017334:	f04f 0c00 	mov.w	ip, #0
 8017338:	4661      	mov	r1, ip
 801733a:	e76a      	b.n	8017212 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801733c:	2400      	movs	r4, #0
 801733e:	46a4      	mov	ip, r4
 8017340:	4623      	mov	r3, r4
 8017342:	4621      	mov	r1, r4
 8017344:	e791      	b.n	801726a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017346:	2400      	movs	r4, #0
 8017348:	4623      	mov	r3, r4
 801734a:	e78e      	b.n	801726a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801734c:	4604      	mov	r4, r0
 801734e:	4603      	mov	r3, r0
 8017350:	e78b      	b.n	801726a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8017352:	2500      	movs	r5, #0
 8017354:	46ab      	mov	fp, r5
 8017356:	e7ba      	b.n	80172ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8017358:	2700      	movs	r7, #0
 801735a:	463d      	mov	r5, r7
 801735c:	463a      	mov	r2, r7
 801735e:	46bb      	mov	fp, r7
 8017360:	e7df      	b.n	8017322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8017362:	2700      	movs	r7, #0
 8017364:	463a      	mov	r2, r7
 8017366:	e7dc      	b.n	8017322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8017368:	4607      	mov	r7, r0
 801736a:	4602      	mov	r2, r0
 801736c:	f1be 0f0f 	cmp.w	lr, #15
 8017370:	d8d9      	bhi.n	8017326 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8017372:	b286      	uxth	r6, r0
 8017374:	fa1f f98e 	uxth.w	r9, lr
 8017378:	fb06 f809 	mul.w	r8, r6, r9
 801737c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017380:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8017384:	0136      	lsls	r6, r6, #4
 8017386:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801738a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801738e:	9601      	str	r6, [sp, #4]
 8017390:	ea4a 0101 	orr.w	r1, sl, r1
 8017394:	fa1f f689 	uxth.w	r6, r9
 8017398:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801739c:	fb10 f90e 	smulbb	r9, r0, lr
 80173a0:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80173a4:	9602      	str	r6, [sp, #8]
 80173a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80173aa:	460e      	mov	r6, r1
 80173ac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80173b0:	f1ce 0110 	rsb	r1, lr, #16
 80173b4:	1a09      	subs	r1, r1, r0
 80173b6:	ea4a 0303 	orr.w	r3, sl, r3
 80173ba:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80173be:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80173c2:	4343      	muls	r3, r0
 80173c4:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80173c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80173cc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80173d0:	fb01 3106 	mla	r1, r1, r6, r3
 80173d4:	ea4a 0202 	orr.w	r2, sl, r2
 80173d8:	fb09 1302 	mla	r3, r9, r2, r1
 80173dc:	9a03      	ldr	r2, [sp, #12]
 80173de:	9802      	ldr	r0, [sp, #8]
 80173e0:	8811      	ldrh	r1, [r2, #0]
 80173e2:	9a01      	ldr	r2, [sp, #4]
 80173e4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80173e8:	1a12      	subs	r2, r2, r0
 80173ea:	9801      	ldr	r0, [sp, #4]
 80173ec:	eba0 0608 	sub.w	r6, r0, r8
 80173f0:	b2b6      	uxth	r6, r6
 80173f2:	b292      	uxth	r2, r2
 80173f4:	4374      	muls	r4, r6
 80173f6:	fb0c 4402 	mla	r4, ip, r2, r4
 80173fa:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80173fe:	9a02      	ldr	r2, [sp, #8]
 8017400:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017404:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017408:	fb02 4505 	mla	r5, r2, r5, r4
 801740c:	ea4a 0b0b 	orr.w	fp, sl, fp
 8017410:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8017414:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8017418:	fb08 5707 	mla	r7, r8, r7, r5
 801741c:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017420:	120a      	asrs	r2, r1, #8
 8017422:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017426:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801742a:	b2ff      	uxtb	r7, r7
 801742c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017430:	10c8      	asrs	r0, r1, #3
 8017432:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017436:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801743a:	00c9      	lsls	r1, r1, #3
 801743c:	437a      	muls	r2, r7
 801743e:	ea43 0e0e 	orr.w	lr, r3, lr
 8017442:	b2c9      	uxtb	r1, r1
 8017444:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017448:	fa1f f38e 	uxth.w	r3, lr
 801744c:	4378      	muls	r0, r7
 801744e:	434f      	muls	r7, r1
 8017450:	1c51      	adds	r1, r2, #1
 8017452:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8017456:	121a      	asrs	r2, r3, #8
 8017458:	f022 0207 	bic.w	r2, r2, #7
 801745c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8017460:	1c41      	adds	r1, r0, #1
 8017462:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8017466:	10d9      	asrs	r1, r3, #3
 8017468:	f021 0103 	bic.w	r1, r1, #3
 801746c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017470:	0212      	lsls	r2, r2, #8
 8017472:	00c9      	lsls	r1, r1, #3
 8017474:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017478:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801747c:	430a      	orrs	r2, r1
 801747e:	1c79      	adds	r1, r7, #1
 8017480:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8017484:	00db      	lsls	r3, r3, #3
 8017486:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801748a:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801748e:	4313      	orrs	r3, r2
 8017490:	9a03      	ldr	r2, [sp, #12]
 8017492:	8013      	strh	r3, [r2, #0]
 8017494:	b005      	add	sp, #20
 8017496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801749a:	280f      	cmp	r0, #15
 801749c:	f63f af43 	bhi.w	8017326 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80174a0:	4677      	mov	r7, lr
 80174a2:	4675      	mov	r5, lr
 80174a4:	4672      	mov	r2, lr
 80174a6:	46f3      	mov	fp, lr
 80174a8:	e763      	b.n	8017372 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 80174aa:	bf00      	nop
 80174ac:	0801eaff 	.word	0x0801eaff
 80174b0:	0801f02e 	.word	0x0801f02e
 80174b4:	0801eacc 	.word	0x0801eacc

080174b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80174b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174bc:	ed2d 8b08 	vpush	{d8-d11}
 80174c0:	b093      	sub	sp, #76	; 0x4c
 80174c2:	eeb0 aa40 	vmov.f32	s20, s0
 80174c6:	9210      	str	r2, [sp, #64]	; 0x40
 80174c8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80174ca:	910e      	str	r1, [sp, #56]	; 0x38
 80174cc:	9306      	str	r3, [sp, #24]
 80174ce:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80174d2:	9011      	str	r0, [sp, #68]	; 0x44
 80174d4:	6850      	ldr	r0, [r2, #4]
 80174d6:	6812      	ldr	r2, [r2, #0]
 80174d8:	fb00 1303 	mla	r3, r0, r3, r1
 80174dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80174e0:	9307      	str	r3, [sp, #28]
 80174e2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80174e4:	681b      	ldr	r3, [r3, #0]
 80174e6:	9308      	str	r3, [sp, #32]
 80174e8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80174ea:	685b      	ldr	r3, [r3, #4]
 80174ec:	9309      	str	r3, [sp, #36]	; 0x24
 80174ee:	eef0 9a60 	vmov.f32	s19, s1
 80174f2:	eeb0 9a41 	vmov.f32	s18, s2
 80174f6:	eeb0 8a62 	vmov.f32	s16, s5
 80174fa:	eef0 8a43 	vmov.f32	s17, s6
 80174fe:	eef0 ba44 	vmov.f32	s23, s8
 8017502:	eeb0 ba64 	vmov.f32	s22, s9
 8017506:	eef0 aa45 	vmov.f32	s21, s10
 801750a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801750c:	2b00      	cmp	r3, #0
 801750e:	dc03      	bgt.n	8017518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017510:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017512:	2b00      	cmp	r3, #0
 8017514:	f340 83b4 	ble.w	8017c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8017518:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801751a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801751e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017522:	1e48      	subs	r0, r1, #1
 8017524:	1e55      	subs	r5, r2, #1
 8017526:	9b06      	ldr	r3, [sp, #24]
 8017528:	2b00      	cmp	r3, #0
 801752a:	f340 8163 	ble.w	80177f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801752e:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8017530:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017532:	1436      	asrs	r6, r6, #16
 8017534:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017538:	d406      	bmi.n	8017548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801753a:	4286      	cmp	r6, r0
 801753c:	da04      	bge.n	8017548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801753e:	2b00      	cmp	r3, #0
 8017540:	db02      	blt.n	8017548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017542:	42ab      	cmp	r3, r5
 8017544:	f2c0 8157 	blt.w	80177f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8017548:	3601      	adds	r6, #1
 801754a:	f100 8144 	bmi.w	80177d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801754e:	42b1      	cmp	r1, r6
 8017550:	f2c0 8141 	blt.w	80177d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8017554:	3301      	adds	r3, #1
 8017556:	f100 813e 	bmi.w	80177d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801755a:	429a      	cmp	r2, r3
 801755c:	f2c0 813b 	blt.w	80177d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8017560:	9b06      	ldr	r3, [sp, #24]
 8017562:	9f07      	ldr	r7, [sp, #28]
 8017564:	930f      	str	r3, [sp, #60]	; 0x3c
 8017566:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801756a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801756c:	2b00      	cmp	r3, #0
 801756e:	f340 8164 	ble.w	801783a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x382>
 8017572:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017574:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8017576:	1418      	asrs	r0, r3, #16
 8017578:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801757a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801757e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017580:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017584:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017586:	142d      	asrs	r5, r5, #16
 8017588:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801758c:	f100 81ee 	bmi.w	801796c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8017590:	f102 3eff 	add.w	lr, r2, #4294967295
 8017594:	4575      	cmp	r5, lr
 8017596:	f280 81e9 	bge.w	801796c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801759a:	2800      	cmp	r0, #0
 801759c:	f2c0 81e6 	blt.w	801796c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80175a0:	f103 3eff 	add.w	lr, r3, #4294967295
 80175a4:	4570      	cmp	r0, lr
 80175a6:	f280 81e1 	bge.w	801796c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80175aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80175ac:	b212      	sxth	r2, r2
 80175ae:	fb00 5002 	mla	r0, r0, r2, r5
 80175b2:	fa1f fe81 	uxth.w	lr, r1
 80175b6:	eb03 0a00 	add.w	sl, r3, r0
 80175ba:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80175be:	f813 9000 	ldrb.w	r9, [r3, r0]
 80175c2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80175c6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80175ca:	b29b      	uxth	r3, r3
 80175cc:	f1bc 0f00 	cmp.w	ip, #0
 80175d0:	f000 8179 	beq.w	80178c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80175d4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80175d8:	940a      	str	r4, [sp, #40]	; 0x28
 80175da:	eb0a 0b02 	add.w	fp, sl, r2
 80175de:	fa1f fa8c 	uxth.w	sl, ip
 80175e2:	fb0a fe0e 	mul.w	lr, sl, lr
 80175e6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80175ea:	fa1f fa8a 	uxth.w	sl, sl
 80175ee:	eba5 050e 	sub.w	r5, r5, lr
 80175f2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80175f6:	940b      	str	r4, [sp, #44]	; 0x2c
 80175f8:	eba3 030a 	sub.w	r3, r3, sl
 80175fc:	b2ad      	uxth	r5, r5
 80175fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017600:	b29b      	uxth	r3, r3
 8017602:	fb08 f505 	mul.w	r5, r8, r5
 8017606:	fb09 5303 	mla	r3, r9, r3, r5
 801760a:	fb0a 3304 	mla	r3, sl, r4, r3
 801760e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017610:	fb0e 3304 	mla	r3, lr, r4, r3
 8017614:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017618:	2b00      	cmp	r3, #0
 801761a:	f000 80cf 	beq.w	80177bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801761e:	9c08      	ldr	r4, [sp, #32]
 8017620:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017624:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017628:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801762c:	f000 8150 	beq.w	80178d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8017630:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017634:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017638:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801763c:	fb09 f000 	mul.w	r0, r9, r0
 8017640:	fb0a fe0e 	mul.w	lr, sl, lr
 8017644:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017648:	f100 0b20 	add.w	fp, r0, #32
 801764c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017650:	44ce      	add	lr, r9
 8017652:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8017656:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801765a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801765e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017662:	ea4e 0909 	orr.w	r9, lr, r9
 8017666:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801766a:	8868      	ldrh	r0, [r5, #2]
 801766c:	d019      	beq.n	80176a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801766e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017672:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017676:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801767a:	fb08 f800 	mul.w	r8, r8, r0
 801767e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017682:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8017686:	f108 0b20 	add.w	fp, r8, #32
 801768a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801768e:	4486      	add	lr, r0
 8017690:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8017694:	0a00      	lsrs	r0, r0, #8
 8017696:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801769a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801769e:	ea4e 0000 	orr.w	r0, lr, r0
 80176a2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80176a6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80176aa:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80176ae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80176b2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80176b6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80176ba:	ea4e 0909 	orr.w	r9, lr, r9
 80176be:	ea4a 0000 	orr.w	r0, sl, r0
 80176c2:	f1bc 0f00 	cmp.w	ip, #0
 80176c6:	f000 8105 	beq.w	80178d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80176ca:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80176ce:	3a01      	subs	r2, #1
 80176d0:	0052      	lsls	r2, r2, #1
 80176d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80176d4:	3202      	adds	r2, #2
 80176d6:	2cff      	cmp	r4, #255	; 0xff
 80176d8:	eb05 0e02 	add.w	lr, r5, r2
 80176dc:	5aaa      	ldrh	r2, [r5, r2]
 80176de:	d018      	beq.n	8017712 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80176e0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80176e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80176e8:	fb04 fa02 	mul.w	sl, r4, r2
 80176ec:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80176f0:	fb08 f805 	mul.w	r8, r8, r5
 80176f4:	f10a 0520 	add.w	r5, sl, #32
 80176f8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80176fc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017700:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017704:	4442      	add	r2, r8
 8017706:	0a2d      	lsrs	r5, r5, #8
 8017708:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801770c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017710:	432a      	orrs	r2, r5
 8017712:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017714:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017718:	2cff      	cmp	r4, #255	; 0xff
 801771a:	d01a      	beq.n	8017752 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801771c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8017720:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017724:	fb04 fa05 	mul.w	sl, r4, r5
 8017728:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801772c:	fb08 f80e 	mul.w	r8, r8, lr
 8017730:	f10a 0e20 	add.w	lr, sl, #32
 8017734:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017738:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801773c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017740:	4445      	add	r5, r8
 8017742:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017746:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801774a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801774e:	ea45 050e 	orr.w	r5, r5, lr
 8017752:	fb1c fe01 	smulbb	lr, ip, r1
 8017756:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801775a:	f1cc 0810 	rsb	r8, ip, #16
 801775e:	eba8 0801 	sub.w	r8, r8, r1
 8017762:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017766:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801776a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801776e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8017772:	4341      	muls	r1, r0
 8017774:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017778:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801777c:	ea4a 0202 	orr.w	r2, sl, r2
 8017780:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017784:	fb09 1108 	mla	r1, r9, r8, r1
 8017788:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801778c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017790:	fb0c 1102 	mla	r1, ip, r2, r1
 8017794:	ea4b 0505 	orr.w	r5, fp, r5
 8017798:	fb0e 1e05 	mla	lr, lr, r5, r1
 801779c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80177a0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80177a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80177a8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80177ac:	ea42 0e0e 	orr.w	lr, r2, lr
 80177b0:	fa1f f28e 	uxth.w	r2, lr
 80177b4:	2bff      	cmp	r3, #255	; 0xff
 80177b6:	f040 80a1 	bne.w	80178fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x444>
 80177ba:	803a      	strh	r2, [r7, #0]
 80177bc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80177be:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80177c0:	4413      	add	r3, r2
 80177c2:	9325      	str	r3, [sp, #148]	; 0x94
 80177c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80177c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80177c8:	441a      	add	r2, r3
 80177ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80177cc:	9226      	str	r2, [sp, #152]	; 0x98
 80177ce:	3b01      	subs	r3, #1
 80177d0:	3702      	adds	r7, #2
 80177d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80177d4:	e6c9      	b.n	801756a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80177d6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80177d8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80177da:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80177dc:	4433      	add	r3, r6
 80177de:	9325      	str	r3, [sp, #148]	; 0x94
 80177e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80177e2:	441c      	add	r4, r3
 80177e4:	9b06      	ldr	r3, [sp, #24]
 80177e6:	9426      	str	r4, [sp, #152]	; 0x98
 80177e8:	3b01      	subs	r3, #1
 80177ea:	9306      	str	r3, [sp, #24]
 80177ec:	9b07      	ldr	r3, [sp, #28]
 80177ee:	3302      	adds	r3, #2
 80177f0:	9307      	str	r3, [sp, #28]
 80177f2:	e698      	b.n	8017526 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80177f4:	d028      	beq.n	8017848 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80177f6:	9b06      	ldr	r3, [sp, #24]
 80177f8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80177fa:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80177fc:	3b01      	subs	r3, #1
 80177fe:	fb00 5003 	mla	r0, r0, r3, r5
 8017802:	1400      	asrs	r0, r0, #16
 8017804:	f53f aeac 	bmi.w	8017560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017808:	3901      	subs	r1, #1
 801780a:	4288      	cmp	r0, r1
 801780c:	f6bf aea8 	bge.w	8017560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017810:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017812:	9826      	ldr	r0, [sp, #152]	; 0x98
 8017814:	fb01 0303 	mla	r3, r1, r3, r0
 8017818:	141b      	asrs	r3, r3, #16
 801781a:	f53f aea1 	bmi.w	8017560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801781e:	3a01      	subs	r2, #1
 8017820:	4293      	cmp	r3, r2
 8017822:	f6bf ae9d 	bge.w	8017560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017826:	9b06      	ldr	r3, [sp, #24]
 8017828:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801782c:	930f      	str	r3, [sp, #60]	; 0x3c
 801782e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017832:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017834:	2b00      	cmp	r3, #0
 8017836:	f300 80b6 	bgt.w	80179a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801783a:	9b06      	ldr	r3, [sp, #24]
 801783c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017840:	9b07      	ldr	r3, [sp, #28]
 8017842:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017846:	9307      	str	r3, [sp, #28]
 8017848:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801784a:	2b00      	cmp	r3, #0
 801784c:	f340 8218 	ble.w	8017c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8017850:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017854:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017858:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801785c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801785e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017862:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017866:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801786a:	eef0 6a48 	vmov.f32	s13, s16
 801786e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017872:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017876:	ee37 8a48 	vsub.f32	s16, s14, s16
 801787a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801787e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017882:	eef0 6a68 	vmov.f32	s13, s17
 8017886:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801788a:	ee18 2a10 	vmov	r2, s16
 801788e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017892:	fb92 f3f3 	sdiv	r3, r2, r3
 8017896:	ee18 2a90 	vmov	r2, s17
 801789a:	9327      	str	r3, [sp, #156]	; 0x9c
 801789c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801789e:	fb92 f3f3 	sdiv	r3, r2, r3
 80178a2:	9328      	str	r3, [sp, #160]	; 0xa0
 80178a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80178a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80178a8:	3b01      	subs	r3, #1
 80178aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178ae:	930e      	str	r3, [sp, #56]	; 0x38
 80178b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80178b2:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80178b6:	bf08      	it	eq
 80178b8:	4613      	moveq	r3, r2
 80178ba:	9306      	str	r3, [sp, #24]
 80178bc:	eef0 8a67 	vmov.f32	s17, s15
 80178c0:	eeb0 8a47 	vmov.f32	s16, s14
 80178c4:	e621      	b.n	801750a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80178c6:	fb08 f505 	mul.w	r5, r8, r5
 80178ca:	fb09 5303 	mla	r3, r9, r3, r5
 80178ce:	e6a1      	b.n	8017614 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80178d0:	4681      	mov	r9, r0
 80178d2:	e6c8      	b.n	8017666 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80178d4:	f1c1 0210 	rsb	r2, r1, #16
 80178d8:	4341      	muls	r1, r0
 80178da:	fb09 1902 	mla	r9, r9, r2, r1
 80178de:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80178e2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80178e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80178ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80178ee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80178f2:	ea42 0909 	orr.w	r9, r2, r9
 80178f6:	fa1f f289 	uxth.w	r2, r9
 80178fa:	e75b      	b.n	80177b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80178fc:	f8b7 c000 	ldrh.w	ip, [r7]
 8017900:	43db      	mvns	r3, r3
 8017902:	ea4f 202c 	mov.w	r0, ip, asr #8
 8017906:	fa5f fe83 	uxtb.w	lr, r3
 801790a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801790e:	fb00 f00e 	mul.w	r0, r0, lr
 8017912:	1c41      	adds	r1, r0, #1
 8017914:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8017918:	1211      	asrs	r1, r2, #8
 801791a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801791e:	f021 0107 	bic.w	r1, r1, #7
 8017922:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017926:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801792a:	48d8      	ldr	r0, [pc, #864]	; (8017c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 801792c:	fb05 f50e 	mul.w	r5, r5, lr
 8017930:	b2c9      	uxtb	r1, r1
 8017932:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8017936:	1c69      	adds	r1, r5, #1
 8017938:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801793c:	10d1      	asrs	r1, r2, #3
 801793e:	f021 0103 	bic.w	r1, r1, #3
 8017942:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8017946:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801794a:	b2db      	uxtb	r3, r3
 801794c:	00c9      	lsls	r1, r1, #3
 801794e:	fb03 f30e 	mul.w	r3, r3, lr
 8017952:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017956:	4301      	orrs	r1, r0
 8017958:	1c58      	adds	r0, r3, #1
 801795a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801795e:	00d2      	lsls	r2, r2, #3
 8017960:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8017964:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017968:	430a      	orrs	r2, r1
 801796a:	e726      	b.n	80177ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801796c:	f115 0e01 	adds.w	lr, r5, #1
 8017970:	f53f af24 	bmi.w	80177bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8017974:	4572      	cmp	r2, lr
 8017976:	f6ff af21 	blt.w	80177bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 801797a:	f110 0e01 	adds.w	lr, r0, #1
 801797e:	f53f af1d 	bmi.w	80177bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8017982:	4573      	cmp	r3, lr
 8017984:	f6ff af1a 	blt.w	80177bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8017988:	b21b      	sxth	r3, r3
 801798a:	b212      	sxth	r2, r2
 801798c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8017990:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8017994:	9301      	str	r3, [sp, #4]
 8017996:	9200      	str	r2, [sp, #0]
 8017998:	4639      	mov	r1, r7
 801799a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801799e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80179a0:	f7ff fbf4 	bl	801718c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80179a4:	e70a      	b.n	80177bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 80179a6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80179a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80179ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80179ae:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80179b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80179b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80179b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80179ba:	141f      	asrs	r7, r3, #16
 80179bc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80179be:	141b      	asrs	r3, r3, #16
 80179c0:	fb01 3707 	mla	r7, r1, r7, r3
 80179c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80179c6:	fa1f fc82 	uxth.w	ip, r2
 80179ca:	eb03 0a07 	add.w	sl, r3, r7
 80179ce:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80179d2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80179d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80179da:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80179de:	b29b      	uxth	r3, r3
 80179e0:	2d00      	cmp	r5, #0
 80179e2:	f000 80fe 	beq.w	8017be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72a>
 80179e6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80179ea:	940c      	str	r4, [sp, #48]	; 0x30
 80179ec:	eb0a 0b01 	add.w	fp, sl, r1
 80179f0:	fa1f fa85 	uxth.w	sl, r5
 80179f4:	fb0a fc0c 	mul.w	ip, sl, ip
 80179f8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80179fc:	fa1f fa8a 	uxth.w	sl, sl
 8017a00:	eba0 000c 	sub.w	r0, r0, ip
 8017a04:	eba3 030a 	sub.w	r3, r3, sl
 8017a08:	b280      	uxth	r0, r0
 8017a0a:	fb08 f000 	mul.w	r0, r8, r0
 8017a0e:	b29b      	uxth	r3, r3
 8017a10:	fb09 0303 	mla	r3, r9, r3, r0
 8017a14:	980c      	ldr	r0, [sp, #48]	; 0x30
 8017a16:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017a1a:	940d      	str	r4, [sp, #52]	; 0x34
 8017a1c:	fb0a 3300 	mla	r3, sl, r0, r3
 8017a20:	fb0c 3304 	mla	r3, ip, r4, r3
 8017a24:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017a28:	2b00      	cmp	r3, #0
 8017a2a:	f000 80cc 	beq.w	8017bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8017a2e:	9808      	ldr	r0, [sp, #32]
 8017a30:	9c08      	ldr	r4, [sp, #32]
 8017a32:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017a36:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8017a3a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017a3e:	f000 80d5 	beq.w	8017bec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8017a42:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017a46:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017a4a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017a4e:	fb09 f707 	mul.w	r7, r9, r7
 8017a52:	fb0a fc0c 	mul.w	ip, sl, ip
 8017a56:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017a5a:	f107 0b20 	add.w	fp, r7, #32
 8017a5e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017a62:	44cc      	add	ip, r9
 8017a64:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017a68:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017a6c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017a70:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017a74:	ea4c 0909 	orr.w	r9, ip, r9
 8017a78:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017a7c:	8847      	ldrh	r7, [r0, #2]
 8017a7e:	d019      	beq.n	8017ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8017a80:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017a84:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017a88:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017a8c:	fb08 f807 	mul.w	r8, r8, r7
 8017a90:	fb0a fc0c 	mul.w	ip, sl, ip
 8017a94:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017a98:	f108 0b20 	add.w	fp, r8, #32
 8017a9c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017aa0:	44bc      	add	ip, r7
 8017aa2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017aa6:	0a3f      	lsrs	r7, r7, #8
 8017aa8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017aac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ab0:	ea4c 0707 	orr.w	r7, ip, r7
 8017ab4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017ab8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017abc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017ac0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017ac4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017ac8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017acc:	ea4c 0909 	orr.w	r9, ip, r9
 8017ad0:	ea4a 0707 	orr.w	r7, sl, r7
 8017ad4:	2d00      	cmp	r5, #0
 8017ad6:	f000 808b 	beq.w	8017bf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 8017ada:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8017ade:	3901      	subs	r1, #1
 8017ae0:	0049      	lsls	r1, r1, #1
 8017ae2:	3102      	adds	r1, #2
 8017ae4:	eb00 0c01 	add.w	ip, r0, r1
 8017ae8:	5a41      	ldrh	r1, [r0, r1]
 8017aea:	980c      	ldr	r0, [sp, #48]	; 0x30
 8017aec:	28ff      	cmp	r0, #255	; 0xff
 8017aee:	d019      	beq.n	8017b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8017af0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017af2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017af6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017afa:	fb04 fa01 	mul.w	sl, r4, r1
 8017afe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017b02:	fb08 f800 	mul.w	r8, r8, r0
 8017b06:	f10a 0020 	add.w	r0, sl, #32
 8017b0a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8017b0e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017b12:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017b16:	4441      	add	r1, r8
 8017b18:	0a00      	lsrs	r0, r0, #8
 8017b1a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017b1e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017b22:	4301      	orrs	r1, r0
 8017b24:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017b26:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8017b2a:	2cff      	cmp	r4, #255	; 0xff
 8017b2c:	d01a      	beq.n	8017b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8017b2e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8017b32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017b36:	fb04 fa00 	mul.w	sl, r4, r0
 8017b3a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017b3e:	fb08 f80c 	mul.w	r8, r8, ip
 8017b42:	f10a 0c20 	add.w	ip, sl, #32
 8017b46:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8017b4a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8017b4e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017b52:	4440      	add	r0, r8
 8017b54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017b58:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017b5c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017b60:	ea40 000c 	orr.w	r0, r0, ip
 8017b64:	fb15 fc02 	smulbb	ip, r5, r2
 8017b68:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017b6c:	f1c5 0810 	rsb	r8, r5, #16
 8017b70:	eba8 0802 	sub.w	r8, r8, r2
 8017b74:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017b78:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017b7c:	437a      	muls	r2, r7
 8017b7e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017b82:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8017b86:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017b8a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017b8e:	fb09 2208 	mla	r2, r9, r8, r2
 8017b92:	ea4a 0101 	orr.w	r1, sl, r1
 8017b96:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8017b9a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017b9e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017ba2:	fb05 2201 	mla	r2, r5, r1, r2
 8017ba6:	ea4b 0000 	orr.w	r0, fp, r0
 8017baa:	fb0c 2200 	mla	r2, ip, r0, r2
 8017bae:	0d57      	lsrs	r7, r2, #21
 8017bb0:	0952      	lsrs	r2, r2, #5
 8017bb2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017bb6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017bba:	433a      	orrs	r2, r7
 8017bbc:	2bff      	cmp	r3, #255	; 0xff
 8017bbe:	b292      	uxth	r2, r2
 8017bc0:	d127      	bne.n	8017c12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8017bc2:	f8ae 2000 	strh.w	r2, [lr]
 8017bc6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8017bc8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8017bca:	4413      	add	r3, r2
 8017bcc:	9325      	str	r3, [sp, #148]	; 0x94
 8017bce:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8017bd0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017bd2:	441a      	add	r2, r3
 8017bd4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017bd6:	9226      	str	r2, [sp, #152]	; 0x98
 8017bd8:	3b01      	subs	r3, #1
 8017bda:	f10e 0e02 	add.w	lr, lr, #2
 8017bde:	930f      	str	r3, [sp, #60]	; 0x3c
 8017be0:	e627      	b.n	8017832 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8017be2:	fb08 f000 	mul.w	r0, r8, r0
 8017be6:	fb09 0303 	mla	r3, r9, r3, r0
 8017bea:	e71b      	b.n	8017a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8017bec:	46b9      	mov	r9, r7
 8017bee:	e743      	b.n	8017a78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8017bf0:	f1c2 0110 	rsb	r1, r2, #16
 8017bf4:	437a      	muls	r2, r7
 8017bf6:	fb09 2901 	mla	r9, r9, r1, r2
 8017bfa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017bfe:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017c02:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017c06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017c0a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017c0e:	4302      	orrs	r2, r0
 8017c10:	e7d4      	b.n	8017bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8017c12:	f8be 7000 	ldrh.w	r7, [lr]
 8017c16:	4c1d      	ldr	r4, [pc, #116]	; (8017c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d4>)
 8017c18:	43db      	mvns	r3, r3
 8017c1a:	1238      	asrs	r0, r7, #8
 8017c1c:	fa5f fc83 	uxtb.w	ip, r3
 8017c20:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017c24:	10fd      	asrs	r5, r7, #3
 8017c26:	fb00 f00c 	mul.w	r0, r0, ip
 8017c2a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017c2e:	fb05 f10c 	mul.w	r1, r5, ip
 8017c32:	1c45      	adds	r5, r0, #1
 8017c34:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8017c38:	1215      	asrs	r5, r2, #8
 8017c3a:	f025 0507 	bic.w	r5, r5, #7
 8017c3e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8017c42:	1c4d      	adds	r5, r1, #1
 8017c44:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8017c48:	10d1      	asrs	r1, r2, #3
 8017c4a:	f021 0103 	bic.w	r1, r1, #3
 8017c4e:	00fb      	lsls	r3, r7, #3
 8017c50:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8017c54:	b2db      	uxtb	r3, r3
 8017c56:	b2c0      	uxtb	r0, r0
 8017c58:	00c9      	lsls	r1, r1, #3
 8017c5a:	fb03 f30c 	mul.w	r3, r3, ip
 8017c5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017c62:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8017c66:	4308      	orrs	r0, r1
 8017c68:	1c59      	adds	r1, r3, #1
 8017c6a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017c6e:	00d2      	lsls	r2, r2, #3
 8017c70:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8017c74:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8017c78:	4318      	orrs	r0, r3
 8017c7a:	f8ae 0000 	strh.w	r0, [lr]
 8017c7e:	e7a2      	b.n	8017bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8017c80:	b013      	add	sp, #76	; 0x4c
 8017c82:	ecbd 8b08 	vpop	{d8-d11}
 8017c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c8a:	bf00      	nop
 8017c8c:	fffff800 	.word	0xfffff800

08017c90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8017c90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017c94:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8017c98:	fb0c 4e03 	mla	lr, ip, r3, r4
 8017c9c:	f1bc 0f00 	cmp.w	ip, #0
 8017ca0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8017ca4:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8017ca8:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8017cac:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8017cb0:	8808      	ldrh	r0, [r1, #0]
 8017cb2:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8017cb6:	db2f      	blt.n	8017d18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017cb8:	45e2      	cmp	sl, ip
 8017cba:	dd2d      	ble.n	8017d18 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017cbc:	2c00      	cmp	r4, #0
 8017cbe:	db29      	blt.n	8017d14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017cc0:	42a3      	cmp	r3, r4
 8017cc2:	dd27      	ble.n	8017d14 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017cc4:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8017cc8:	1c62      	adds	r2, r4, #1
 8017cca:	d428      	bmi.n	8017d1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017ccc:	4293      	cmp	r3, r2
 8017cce:	dd26      	ble.n	8017d1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017cd0:	b32f      	cbz	r7, 8017d1e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017cd2:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8017cd6:	f11c 0c01 	adds.w	ip, ip, #1
 8017cda:	d424      	bmi.n	8017d26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017cdc:	45e2      	cmp	sl, ip
 8017cde:	dd22      	ble.n	8017d26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017ce0:	2e00      	cmp	r6, #0
 8017ce2:	f000 809d 	beq.w	8017e20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 8017ce6:	2c00      	cmp	r4, #0
 8017ce8:	db1b      	blt.n	8017d22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8017cea:	42a3      	cmp	r3, r4
 8017cec:	dd19      	ble.n	8017d22 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8017cee:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8017cf2:	3401      	adds	r4, #1
 8017cf4:	d41a      	bmi.n	8017d2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8017cf6:	42a3      	cmp	r3, r4
 8017cf8:	dd18      	ble.n	8017d2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8017cfa:	b1cf      	cbz	r7, 8017d30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8017cfc:	3301      	adds	r3, #1
 8017cfe:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8017d02:	2f0f      	cmp	r7, #15
 8017d04:	d915      	bls.n	8017d32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8017d06:	4b49      	ldr	r3, [pc, #292]	; (8017e2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8017d08:	4a49      	ldr	r2, [pc, #292]	; (8017e30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8017d0a:	484a      	ldr	r0, [pc, #296]	; (8017e34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8017d0c:	f240 11db 	movw	r1, #475	; 0x1db
 8017d10:	f002 ffc2 	bl	801ac98 <__assert_func>
 8017d14:	4681      	mov	r9, r0
 8017d16:	e7d7      	b.n	8017cc8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8017d18:	4686      	mov	lr, r0
 8017d1a:	4681      	mov	r9, r0
 8017d1c:	e7db      	b.n	8017cd6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8017d1e:	4686      	mov	lr, r0
 8017d20:	e7d9      	b.n	8017cd6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8017d22:	4684      	mov	ip, r0
 8017d24:	e7e5      	b.n	8017cf2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8017d26:	4603      	mov	r3, r0
 8017d28:	4684      	mov	ip, r0
 8017d2a:	e7ea      	b.n	8017d02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8017d2c:	4603      	mov	r3, r0
 8017d2e:	e7e8      	b.n	8017d02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8017d30:	4603      	mov	r3, r0
 8017d32:	2e0f      	cmp	r6, #15
 8017d34:	d8e7      	bhi.n	8017d06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017d36:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8017d3a:	fb17 f806 	smulbb	r8, r7, r6
 8017d3e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017d42:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8017d46:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017d4a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017d4e:	ea44 0909 	orr.w	r9, r4, r9
 8017d52:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d56:	f1c6 0410 	rsb	r4, r6, #16
 8017d5a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017d5e:	1be4      	subs	r4, r4, r7
 8017d60:	041a      	lsls	r2, r3, #16
 8017d62:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8017d66:	ea4a 0e0e 	orr.w	lr, sl, lr
 8017d6a:	fb07 fe0e 	mul.w	lr, r7, lr
 8017d6e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017d72:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8017d76:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017d7a:	fb04 e409 	mla	r4, r4, r9, lr
 8017d7e:	4313      	orrs	r3, r2
 8017d80:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8017d84:	fb08 4303 	mla	r3, r8, r3, r4
 8017d88:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017d8c:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8017d90:	4322      	orrs	r2, r4
 8017d92:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8017d96:	fb06 3202 	mla	r2, r6, r2, r3
 8017d9a:	0d53      	lsrs	r3, r2, #21
 8017d9c:	0952      	lsrs	r2, r2, #5
 8017d9e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017da2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017da6:	431a      	orrs	r2, r3
 8017da8:	b293      	uxth	r3, r2
 8017daa:	b2af      	uxth	r7, r5
 8017dac:	1202      	asrs	r2, r0, #8
 8017dae:	43ed      	mvns	r5, r5
 8017db0:	b2ed      	uxtb	r5, r5
 8017db2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017db6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017dba:	fb12 f205 	smulbb	r2, r2, r5
 8017dbe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017dc2:	fb0c 2c07 	mla	ip, ip, r7, r2
 8017dc6:	00dc      	lsls	r4, r3, #3
 8017dc8:	10da      	asrs	r2, r3, #3
 8017dca:	10c6      	asrs	r6, r0, #3
 8017dcc:	00c3      	lsls	r3, r0, #3
 8017dce:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017dd2:	b2db      	uxtb	r3, r3
 8017dd4:	fb16 f605 	smulbb	r6, r6, r5
 8017dd8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017ddc:	b2e4      	uxtb	r4, r4
 8017dde:	fb13 f305 	smulbb	r3, r3, r5
 8017de2:	fa1f fc8c 	uxth.w	ip, ip
 8017de6:	fb02 6207 	mla	r2, r2, r7, r6
 8017dea:	fb04 3307 	mla	r3, r4, r7, r3
 8017dee:	b296      	uxth	r6, r2
 8017df0:	b29a      	uxth	r2, r3
 8017df2:	f10c 0301 	add.w	r3, ip, #1
 8017df6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8017dfa:	1c53      	adds	r3, r2, #1
 8017dfc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017e00:	1c72      	adds	r2, r6, #1
 8017e02:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8017e06:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017e0a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017e0e:	0952      	lsrs	r2, r2, #5
 8017e10:	ea43 030c 	orr.w	r3, r3, ip
 8017e14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017e18:	4313      	orrs	r3, r2
 8017e1a:	800b      	strh	r3, [r1, #0]
 8017e1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017e20:	2f0f      	cmp	r7, #15
 8017e22:	f63f af70 	bhi.w	8017d06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017e26:	4603      	mov	r3, r0
 8017e28:	4684      	mov	ip, r0
 8017e2a:	e784      	b.n	8017d36 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8017e2c:	0801eaff 	.word	0x0801eaff
 8017e30:	0801f0d7 	.word	0x0801f0d7
 8017e34:	0801eacc 	.word	0x0801eacc

08017e38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017e38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e3c:	ed2d 8b08 	vpush	{d8-d11}
 8017e40:	b093      	sub	sp, #76	; 0x4c
 8017e42:	461d      	mov	r5, r3
 8017e44:	9210      	str	r2, [sp, #64]	; 0x40
 8017e46:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017e48:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8017e4c:	920b      	str	r2, [sp, #44]	; 0x2c
 8017e4e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8017e52:	910a      	str	r1, [sp, #40]	; 0x28
 8017e54:	6859      	ldr	r1, [r3, #4]
 8017e56:	681b      	ldr	r3, [r3, #0]
 8017e58:	9011      	str	r0, [sp, #68]	; 0x44
 8017e5a:	fb01 2707 	mla	r7, r1, r7, r2
 8017e5e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8017e62:	9307      	str	r3, [sp, #28]
 8017e64:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017e66:	681b      	ldr	r3, [r3, #0]
 8017e68:	9309      	str	r3, [sp, #36]	; 0x24
 8017e6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017e6c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8017e70:	43db      	mvns	r3, r3
 8017e72:	b2db      	uxtb	r3, r3
 8017e74:	eeb0 aa40 	vmov.f32	s20, s0
 8017e78:	eef0 9a60 	vmov.f32	s19, s1
 8017e7c:	eeb0 9a41 	vmov.f32	s18, s2
 8017e80:	eeb0 8a62 	vmov.f32	s16, s5
 8017e84:	eef0 8a43 	vmov.f32	s17, s6
 8017e88:	eef0 ba44 	vmov.f32	s23, s8
 8017e8c:	eeb0 ba64 	vmov.f32	s22, s9
 8017e90:	eef0 aa45 	vmov.f32	s21, s10
 8017e94:	9308      	str	r3, [sp, #32]
 8017e96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017e98:	2b00      	cmp	r3, #0
 8017e9a:	dc03      	bgt.n	8017ea4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017e9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e9e:	2b00      	cmp	r3, #0
 8017ea0:	f340 8203 	ble.w	80182aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8017ea4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017ea6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017eaa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017eae:	1e48      	subs	r0, r1, #1
 8017eb0:	f102 3cff 	add.w	ip, r2, #4294967295
 8017eb4:	2d00      	cmp	r5, #0
 8017eb6:	f340 80da 	ble.w	801806e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8017eba:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8017ebe:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017ec2:	d406      	bmi.n	8017ed2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017ec4:	4586      	cmp	lr, r0
 8017ec6:	da04      	bge.n	8017ed2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017ec8:	2b00      	cmp	r3, #0
 8017eca:	db02      	blt.n	8017ed2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017ecc:	4563      	cmp	r3, ip
 8017ece:	f2c0 80cf 	blt.w	8018070 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8017ed2:	f11e 0e01 	adds.w	lr, lr, #1
 8017ed6:	f100 80c1 	bmi.w	801805c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8017eda:	4571      	cmp	r1, lr
 8017edc:	f2c0 80be 	blt.w	801805c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8017ee0:	3301      	adds	r3, #1
 8017ee2:	f100 80bb 	bmi.w	801805c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8017ee6:	429a      	cmp	r2, r3
 8017ee8:	f2c0 80b8 	blt.w	801805c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8017eec:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8017ef0:	46a9      	mov	r9, r5
 8017ef2:	f1b9 0f00 	cmp.w	r9, #0
 8017ef6:	f340 80d8 	ble.w	80180aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8017efa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017efc:	1421      	asrs	r1, r4, #16
 8017efe:	ea4f 4026 	mov.w	r0, r6, asr #16
 8017f02:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017f06:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8017f0a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8017f0e:	f100 8111 	bmi.w	8018134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8017f12:	f10e 3aff 	add.w	sl, lr, #4294967295
 8017f16:	4551      	cmp	r1, sl
 8017f18:	f280 810c 	bge.w	8018134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8017f1c:	2800      	cmp	r0, #0
 8017f1e:	f2c0 8109 	blt.w	8018134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8017f22:	f103 3aff 	add.w	sl, r3, #4294967295
 8017f26:	4550      	cmp	r0, sl
 8017f28:	f280 8104 	bge.w	8018134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8017f2c:	fa0f f38e 	sxth.w	r3, lr
 8017f30:	fb00 1103 	mla	r1, r0, r3, r1
 8017f34:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017f36:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8017f3a:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8017f3e:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8017f42:	f1bc 0f00 	cmp.w	ip, #0
 8017f46:	d007      	beq.n	8017f58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8017f48:	005b      	lsls	r3, r3, #1
 8017f4a:	eb0a 0003 	add.w	r0, sl, r3
 8017f4e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8017f52:	930c      	str	r3, [sp, #48]	; 0x30
 8017f54:	8843      	ldrh	r3, [r0, #2]
 8017f56:	930d      	str	r3, [sp, #52]	; 0x34
 8017f58:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8017f5c:	fb12 f30c 	smulbb	r3, r2, ip
 8017f60:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017f64:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017f68:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017f6c:	10db      	asrs	r3, r3, #3
 8017f6e:	ea40 000e 	orr.w	r0, r0, lr
 8017f72:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017f76:	f1cc 0e10 	rsb	lr, ip, #16
 8017f7a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017f7e:	ebae 0e02 	sub.w	lr, lr, r2
 8017f82:	ea4a 0101 	orr.w	r1, sl, r1
 8017f86:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8017f8a:	4351      	muls	r1, r2
 8017f8c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017f8e:	9f08      	ldr	r7, [sp, #32]
 8017f90:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8017f94:	fb0e 1e00 	mla	lr, lr, r0, r1
 8017f98:	0410      	lsls	r0, r2, #16
 8017f9a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017f9e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017fa2:	4310      	orrs	r0, r2
 8017fa4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017fa6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017fa8:	0412      	lsls	r2, r2, #16
 8017faa:	fb03 e000 	mla	r0, r3, r0, lr
 8017fae:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017fb2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017fb6:	ea42 020e 	orr.w	r2, r2, lr
 8017fba:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8017fbe:	fb03 0302 	mla	r3, r3, r2, r0
 8017fc2:	0d5a      	lsrs	r2, r3, #21
 8017fc4:	095b      	lsrs	r3, r3, #5
 8017fc6:	f8b8 0000 	ldrh.w	r0, [r8]
 8017fca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017fce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017fd2:	4313      	orrs	r3, r2
 8017fd4:	b29b      	uxth	r3, r3
 8017fd6:	1201      	asrs	r1, r0, #8
 8017fd8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8017fdc:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017fe0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017fe4:	fb11 f107 	smulbb	r1, r1, r7
 8017fe8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8017fec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017ff0:	00c0      	lsls	r0, r0, #3
 8017ff2:	fb0c 1c02 	mla	ip, ip, r2, r1
 8017ff6:	b2c0      	uxtb	r0, r0
 8017ff8:	10d9      	asrs	r1, r3, #3
 8017ffa:	00db      	lsls	r3, r3, #3
 8017ffc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018000:	b2db      	uxtb	r3, r3
 8018002:	fb10 f007 	smulbb	r0, r0, r7
 8018006:	fa1f fc8c 	uxth.w	ip, ip
 801800a:	fb03 0302 	mla	r3, r3, r2, r0
 801800e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018012:	fb1e fe07 	smulbb	lr, lr, r7
 8018016:	fb01 e102 	mla	r1, r1, r2, lr
 801801a:	b29a      	uxth	r2, r3
 801801c:	f10c 0301 	add.w	r3, ip, #1
 8018020:	b289      	uxth	r1, r1
 8018022:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018026:	1c53      	adds	r3, r2, #1
 8018028:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801802c:	1c4a      	adds	r2, r1, #1
 801802e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018032:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018036:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801803a:	0949      	lsrs	r1, r1, #5
 801803c:	ea43 030c 	orr.w	r3, r3, ip
 8018040:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018044:	430b      	orrs	r3, r1
 8018046:	f8a8 3000 	strh.w	r3, [r8]
 801804a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801804c:	441c      	add	r4, r3
 801804e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018050:	f108 0802 	add.w	r8, r8, #2
 8018054:	441e      	add	r6, r3
 8018056:	f109 39ff 	add.w	r9, r9, #4294967295
 801805a:	e74a      	b.n	8017ef2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801805c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801805e:	441c      	add	r4, r3
 8018060:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018062:	441e      	add	r6, r3
 8018064:	9b07      	ldr	r3, [sp, #28]
 8018066:	3302      	adds	r3, #2
 8018068:	3d01      	subs	r5, #1
 801806a:	9307      	str	r3, [sp, #28]
 801806c:	e722      	b.n	8017eb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801806e:	d022      	beq.n	80180b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8018070:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018072:	1e6b      	subs	r3, r5, #1
 8018074:	fb00 4003 	mla	r0, r0, r3, r4
 8018078:	1400      	asrs	r0, r0, #16
 801807a:	f53f af37 	bmi.w	8017eec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801807e:	3901      	subs	r1, #1
 8018080:	4288      	cmp	r0, r1
 8018082:	f6bf af33 	bge.w	8017eec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018086:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018088:	fb01 6303 	mla	r3, r1, r3, r6
 801808c:	141b      	asrs	r3, r3, #16
 801808e:	f53f af2d 	bmi.w	8017eec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8018092:	3a01      	subs	r2, #1
 8018094:	4293      	cmp	r3, r2
 8018096:	f6bf af29 	bge.w	8017eec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801809a:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801809e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80180a2:	46a8      	mov	r8, r5
 80180a4:	f1b8 0f00 	cmp.w	r8, #0
 80180a8:	dc5e      	bgt.n	8018168 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80180aa:	9b07      	ldr	r3, [sp, #28]
 80180ac:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80180b0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80180b4:	9307      	str	r3, [sp, #28]
 80180b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80180b8:	2b00      	cmp	r3, #0
 80180ba:	f340 80f6 	ble.w	80182aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80180be:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80180c2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80180c6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80180ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80180cc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80180d0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80180d4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80180d8:	eef0 6a48 	vmov.f32	s13, s16
 80180dc:	ee69 7a27 	vmul.f32	s15, s18, s15
 80180e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80180e4:	ee37 8a48 	vsub.f32	s16, s14, s16
 80180e8:	ee16 4a90 	vmov	r4, s13
 80180ec:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80180f0:	eef0 6a68 	vmov.f32	s13, s17
 80180f4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80180f8:	ee18 2a10 	vmov	r2, s16
 80180fc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018100:	fb92 f3f3 	sdiv	r3, r2, r3
 8018104:	ee18 2a90 	vmov	r2, s17
 8018108:	9327      	str	r3, [sp, #156]	; 0x9c
 801810a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801810c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018110:	9328      	str	r3, [sp, #160]	; 0xa0
 8018112:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018114:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018116:	3b01      	subs	r3, #1
 8018118:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801811c:	930a      	str	r3, [sp, #40]	; 0x28
 801811e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018120:	ee16 6a90 	vmov	r6, s13
 8018124:	bf14      	ite	ne
 8018126:	461d      	movne	r5, r3
 8018128:	4615      	moveq	r5, r2
 801812a:	eef0 8a67 	vmov.f32	s17, s15
 801812e:	eeb0 8a47 	vmov.f32	s16, s14
 8018132:	e6b0      	b.n	8017e96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018134:	f111 0a01 	adds.w	sl, r1, #1
 8018138:	d487      	bmi.n	801804a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801813a:	45d6      	cmp	lr, sl
 801813c:	db85      	blt.n	801804a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801813e:	f110 0a01 	adds.w	sl, r0, #1
 8018142:	d482      	bmi.n	801804a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018144:	4553      	cmp	r3, sl
 8018146:	db80      	blt.n	801804a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018148:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801814a:	9101      	str	r1, [sp, #4]
 801814c:	b21b      	sxth	r3, r3
 801814e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8018152:	9300      	str	r3, [sp, #0]
 8018154:	e9cd c704 	strd	ip, r7, [sp, #16]
 8018158:	fa0f f38e 	sxth.w	r3, lr
 801815c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801815e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018160:	4641      	mov	r1, r8
 8018162:	f7ff fd95 	bl	8017c90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018166:	e770      	b.n	801804a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018168:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801816a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801816c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018170:	1430      	asrs	r0, r6, #16
 8018172:	1423      	asrs	r3, r4, #16
 8018174:	fb01 3000 	mla	r0, r1, r0, r3
 8018178:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801817a:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801817e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8018182:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018186:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801818a:	8858      	ldrh	r0, [r3, #2]
 801818c:	f1be 0f00 	cmp.w	lr, #0
 8018190:	d00b      	beq.n	80181aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018192:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018196:	3901      	subs	r1, #1
 8018198:	0049      	lsls	r1, r1, #1
 801819a:	3102      	adds	r1, #2
 801819c:	eb03 0b01 	add.w	fp, r3, r1
 80181a0:	5a5b      	ldrh	r3, [r3, r1]
 80181a2:	930e      	str	r3, [sp, #56]	; 0x38
 80181a4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80181a8:	930f      	str	r3, [sp, #60]	; 0x3c
 80181aa:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80181ae:	fb12 f30e 	smulbb	r3, r2, lr
 80181b2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80181b6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80181ba:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80181be:	10db      	asrs	r3, r3, #3
 80181c0:	ea41 010c 	orr.w	r1, r1, ip
 80181c4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80181c8:	f1ce 0c10 	rsb	ip, lr, #16
 80181cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80181d0:	ebac 0c02 	sub.w	ip, ip, r2
 80181d4:	ea4b 0000 	orr.w	r0, fp, r0
 80181d8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80181dc:	4350      	muls	r0, r2
 80181de:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80181e0:	9f08      	ldr	r7, [sp, #32]
 80181e2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80181e6:	fb0c 0c01 	mla	ip, ip, r1, r0
 80181ea:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80181ee:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80181f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80181f4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80181f6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80181fa:	0412      	lsls	r2, r2, #16
 80181fc:	ea4b 0101 	orr.w	r1, fp, r1
 8018200:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018204:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018208:	fb03 c101 	mla	r1, r3, r1, ip
 801820c:	4302      	orrs	r2, r0
 801820e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018212:	fb03 1202 	mla	r2, r3, r2, r1
 8018216:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801821a:	0952      	lsrs	r2, r2, #5
 801821c:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8018220:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018224:	f8b9 2000 	ldrh.w	r2, [r9]
 8018228:	ea4b 0303 	orr.w	r3, fp, r3
 801822c:	b29b      	uxth	r3, r3
 801822e:	1211      	asrs	r1, r2, #8
 8018230:	1218      	asrs	r0, r3, #8
 8018232:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018236:	fb11 f107 	smulbb	r1, r1, r7
 801823a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801823e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018242:	00d2      	lsls	r2, r2, #3
 8018244:	fb00 100a 	mla	r0, r0, sl, r1
 8018248:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801824c:	10d9      	asrs	r1, r3, #3
 801824e:	b2d2      	uxtb	r2, r2
 8018250:	00db      	lsls	r3, r3, #3
 8018252:	fb1c fc07 	smulbb	ip, ip, r7
 8018256:	fb12 f207 	smulbb	r2, r2, r7
 801825a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801825e:	b2db      	uxtb	r3, r3
 8018260:	b280      	uxth	r0, r0
 8018262:	fb01 c10a 	mla	r1, r1, sl, ip
 8018266:	fb03 230a 	mla	r3, r3, sl, r2
 801826a:	b29b      	uxth	r3, r3
 801826c:	b289      	uxth	r1, r1
 801826e:	1c42      	adds	r2, r0, #1
 8018270:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018274:	f101 0c01 	add.w	ip, r1, #1
 8018278:	1c5a      	adds	r2, r3, #1
 801827a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801827e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8018282:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018284:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018288:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801828c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8018290:	4310      	orrs	r0, r2
 8018292:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018296:	441c      	add	r4, r3
 8018298:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801829a:	ea40 000c 	orr.w	r0, r0, ip
 801829e:	f829 0b02 	strh.w	r0, [r9], #2
 80182a2:	441e      	add	r6, r3
 80182a4:	f108 38ff 	add.w	r8, r8, #4294967295
 80182a8:	e6fc      	b.n	80180a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80182aa:	b013      	add	sp, #76	; 0x4c
 80182ac:	ecbd 8b08 	vpop	{d8-d11}
 80182b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080182b4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80182b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80182b8:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80182bc:	fb06 5c03 	mla	ip, r6, r3, r5
 80182c0:	2e00      	cmp	r6, #0
 80182c2:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 80182c6:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 80182ca:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 80182ce:	8808      	ldrh	r0, [r1, #0]
 80182d0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80182d4:	db2e      	blt.n	8018334 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80182d6:	45b0      	cmp	r8, r6
 80182d8:	dd2c      	ble.n	8018334 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80182da:	2d00      	cmp	r5, #0
 80182dc:	db28      	blt.n	8018330 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80182de:	42ab      	cmp	r3, r5
 80182e0:	dd26      	ble.n	8018330 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80182e2:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80182e6:	1c6a      	adds	r2, r5, #1
 80182e8:	d427      	bmi.n	801833a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80182ea:	4293      	cmp	r3, r2
 80182ec:	dd25      	ble.n	801833a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80182ee:	b324      	cbz	r4, 801833a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80182f0:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80182f4:	3601      	adds	r6, #1
 80182f6:	d424      	bmi.n	8018342 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80182f8:	45b0      	cmp	r8, r6
 80182fa:	dd22      	ble.n	8018342 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80182fc:	b31f      	cbz	r7, 8018346 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80182fe:	2d00      	cmp	r5, #0
 8018300:	db1d      	blt.n	801833e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018302:	42ab      	cmp	r3, r5
 8018304:	dd1b      	ble.n	801833e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018306:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801830a:	3501      	adds	r5, #1
 801830c:	d405      	bmi.n	801831a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801830e:	42ab      	cmp	r3, r5
 8018310:	dd03      	ble.n	801831a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018312:	b124      	cbz	r4, 801831e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8018314:	3301      	adds	r3, #1
 8018316:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801831a:	2c0f      	cmp	r4, #15
 801831c:	d801      	bhi.n	8018322 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801831e:	2f0f      	cmp	r7, #15
 8018320:	d914      	bls.n	801834c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8018322:	4b27      	ldr	r3, [pc, #156]	; (80183c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8018324:	4a27      	ldr	r2, [pc, #156]	; (80183c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8018326:	4828      	ldr	r0, [pc, #160]	; (80183c8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8018328:	f240 11db 	movw	r1, #475	; 0x1db
 801832c:	f002 fcb4 	bl	801ac98 <__assert_func>
 8018330:	4684      	mov	ip, r0
 8018332:	e7d8      	b.n	80182e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8018334:	4602      	mov	r2, r0
 8018336:	4684      	mov	ip, r0
 8018338:	e7dc      	b.n	80182f4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801833a:	4602      	mov	r2, r0
 801833c:	e7da      	b.n	80182f4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801833e:	4606      	mov	r6, r0
 8018340:	e7e3      	b.n	801830a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8018342:	4606      	mov	r6, r0
 8018344:	e7e9      	b.n	801831a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018346:	2c0f      	cmp	r4, #15
 8018348:	d8eb      	bhi.n	8018322 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801834a:	4606      	mov	r6, r0
 801834c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8018350:	fb14 f307 	smulbb	r3, r4, r7
 8018354:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8018358:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801835c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018360:	10db      	asrs	r3, r3, #3
 8018362:	ea45 0c0c 	orr.w	ip, r5, ip
 8018366:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801836a:	f1c7 0510 	rsb	r5, r7, #16
 801836e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018372:	1b2d      	subs	r5, r5, r4
 8018374:	ea4e 0202 	orr.w	r2, lr, r2
 8018378:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801837c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8018380:	4354      	muls	r4, r2
 8018382:	fb05 450c 	mla	r5, r5, ip, r4
 8018386:	0404      	lsls	r4, r0, #16
 8018388:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801838c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018390:	4320      	orrs	r0, r4
 8018392:	fb03 5400 	mla	r4, r3, r0, r5
 8018396:	0430      	lsls	r0, r6, #16
 8018398:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801839c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80183a0:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 80183a4:	4330      	orrs	r0, r6
 80183a6:	fb07 4000 	mla	r0, r7, r0, r4
 80183aa:	0d43      	lsrs	r3, r0, #21
 80183ac:	0940      	lsrs	r0, r0, #5
 80183ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80183b2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80183b6:	4318      	orrs	r0, r3
 80183b8:	8008      	strh	r0, [r1, #0]
 80183ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80183be:	bf00      	nop
 80183c0:	0801eaff 	.word	0x0801eaff
 80183c4:	0801f0d7 	.word	0x0801f0d7
 80183c8:	0801eacc 	.word	0x0801eacc

080183cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80183cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183d0:	ed2d 8b08 	vpush	{d8-d11}
 80183d4:	b08f      	sub	sp, #60	; 0x3c
 80183d6:	461d      	mov	r5, r3
 80183d8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80183da:	920c      	str	r2, [sp, #48]	; 0x30
 80183dc:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 80183e0:	9107      	str	r1, [sp, #28]
 80183e2:	6859      	ldr	r1, [r3, #4]
 80183e4:	681b      	ldr	r3, [r3, #0]
 80183e6:	900d      	str	r0, [sp, #52]	; 0x34
 80183e8:	fb01 2707 	mla	r7, r1, r7, r2
 80183ec:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80183f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80183f2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80183f6:	f8d3 8000 	ldr.w	r8, [r3]
 80183fa:	eeb0 aa40 	vmov.f32	s20, s0
 80183fe:	eef0 9a60 	vmov.f32	s19, s1
 8018402:	eeb0 9a41 	vmov.f32	s18, s2
 8018406:	eeb0 8a62 	vmov.f32	s16, s5
 801840a:	eef0 8a43 	vmov.f32	s17, s6
 801840e:	eef0 ba44 	vmov.f32	s23, s8
 8018412:	eeb0 ba64 	vmov.f32	s22, s9
 8018416:	eef0 aa45 	vmov.f32	s21, s10
 801841a:	9b07      	ldr	r3, [sp, #28]
 801841c:	2b00      	cmp	r3, #0
 801841e:	dc03      	bgt.n	8018428 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018420:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018422:	2b00      	cmp	r3, #0
 8018424:	f340 8181 	ble.w	801872a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8018428:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801842a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801842e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018432:	1e48      	subs	r0, r1, #1
 8018434:	f102 3cff 	add.w	ip, r2, #4294967295
 8018438:	2d00      	cmp	r5, #0
 801843a:	f340 809b 	ble.w	8018574 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801843e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018442:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018446:	d406      	bmi.n	8018456 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018448:	4586      	cmp	lr, r0
 801844a:	da04      	bge.n	8018456 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801844c:	2b00      	cmp	r3, #0
 801844e:	db02      	blt.n	8018456 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018450:	4563      	cmp	r3, ip
 8018452:	f2c0 8090 	blt.w	8018576 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8018456:	f11e 0e01 	adds.w	lr, lr, #1
 801845a:	f100 8084 	bmi.w	8018566 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801845e:	4571      	cmp	r1, lr
 8018460:	f2c0 8081 	blt.w	8018566 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018464:	3301      	adds	r3, #1
 8018466:	d47e      	bmi.n	8018566 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8018468:	429a      	cmp	r2, r3
 801846a:	db7c      	blt.n	8018566 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801846c:	46aa      	mov	sl, r5
 801846e:	46b9      	mov	r9, r7
 8018470:	f1ba 0f00 	cmp.w	sl, #0
 8018474:	f340 8099 	ble.w	80185aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8018478:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801847a:	1421      	asrs	r1, r4, #16
 801847c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018480:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018484:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018488:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801848c:	f100 80d0 	bmi.w	8018630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8018490:	f10e 3bff 	add.w	fp, lr, #4294967295
 8018494:	4559      	cmp	r1, fp
 8018496:	f280 80cb 	bge.w	8018630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801849a:	2800      	cmp	r0, #0
 801849c:	f2c0 80c8 	blt.w	8018630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80184a0:	f103 3bff 	add.w	fp, r3, #4294967295
 80184a4:	4558      	cmp	r0, fp
 80184a6:	f280 80c3 	bge.w	8018630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80184aa:	fa0f fe8e 	sxth.w	lr, lr
 80184ae:	fb00 110e 	mla	r1, r0, lr, r1
 80184b2:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80184b6:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80184ba:	8841      	ldrh	r1, [r0, #2]
 80184bc:	f1bc 0f00 	cmp.w	ip, #0
 80184c0:	d00b      	beq.n	80184da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80184c2:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80184c6:	3b01      	subs	r3, #1
 80184c8:	005b      	lsls	r3, r3, #1
 80184ca:	3302      	adds	r3, #2
 80184cc:	eb00 0e03 	add.w	lr, r0, r3
 80184d0:	5ac3      	ldrh	r3, [r0, r3]
 80184d2:	9308      	str	r3, [sp, #32]
 80184d4:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80184d8:	9309      	str	r3, [sp, #36]	; 0x24
 80184da:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80184de:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80184e2:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80184e6:	ea40 000b 	orr.w	r0, r0, fp
 80184ea:	fb12 f30c 	smulbb	r3, r2, ip
 80184ee:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80184f2:	10db      	asrs	r3, r3, #3
 80184f4:	f1cc 0e10 	rsb	lr, ip, #16
 80184f8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80184fc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018500:	ebae 0e02 	sub.w	lr, lr, r2
 8018504:	ea4b 0101 	orr.w	r1, fp, r1
 8018508:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801850c:	4351      	muls	r1, r2
 801850e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018510:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018514:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018518:	0410      	lsls	r0, r2, #16
 801851a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801851e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018522:	4310      	orrs	r0, r2
 8018524:	9a08      	ldr	r2, [sp, #32]
 8018526:	9908      	ldr	r1, [sp, #32]
 8018528:	0412      	lsls	r2, r2, #16
 801852a:	fb03 e000 	mla	r0, r3, r0, lr
 801852e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018532:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018536:	ea42 020e 	orr.w	r2, r2, lr
 801853a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801853e:	fb03 0302 	mla	r3, r3, r2, r0
 8018542:	0d5a      	lsrs	r2, r3, #21
 8018544:	095b      	lsrs	r3, r3, #5
 8018546:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801854a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801854e:	4313      	orrs	r3, r2
 8018550:	f8a9 3000 	strh.w	r3, [r9]
 8018554:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018556:	441c      	add	r4, r3
 8018558:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801855a:	f109 0902 	add.w	r9, r9, #2
 801855e:	441e      	add	r6, r3
 8018560:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018564:	e784      	b.n	8018470 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8018566:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018568:	441c      	add	r4, r3
 801856a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801856c:	3d01      	subs	r5, #1
 801856e:	441e      	add	r6, r3
 8018570:	3702      	adds	r7, #2
 8018572:	e761      	b.n	8018438 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018574:	d01d      	beq.n	80185b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018576:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8018578:	1e6b      	subs	r3, r5, #1
 801857a:	fb00 4003 	mla	r0, r0, r3, r4
 801857e:	1400      	asrs	r0, r0, #16
 8018580:	f53f af74 	bmi.w	801846c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018584:	3901      	subs	r1, #1
 8018586:	4288      	cmp	r0, r1
 8018588:	f6bf af70 	bge.w	801846c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801858c:	9924      	ldr	r1, [sp, #144]	; 0x90
 801858e:	fb01 6303 	mla	r3, r1, r3, r6
 8018592:	141b      	asrs	r3, r3, #16
 8018594:	f53f af6a 	bmi.w	801846c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018598:	3a01      	subs	r2, #1
 801859a:	4293      	cmp	r3, r2
 801859c:	f6bf af66 	bge.w	801846c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80185a0:	46a9      	mov	r9, r5
 80185a2:	46ba      	mov	sl, r7
 80185a4:	f1b9 0f00 	cmp.w	r9, #0
 80185a8:	dc5a      	bgt.n	8018660 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80185aa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80185ae:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80185b2:	9b07      	ldr	r3, [sp, #28]
 80185b4:	2b00      	cmp	r3, #0
 80185b6:	f340 80b8 	ble.w	801872a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80185ba:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80185be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80185c2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80185c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80185c8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80185cc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80185d0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80185d4:	eef0 6a48 	vmov.f32	s13, s16
 80185d8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80185dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80185e0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80185e4:	ee16 4a90 	vmov	r4, s13
 80185e8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80185ec:	eef0 6a68 	vmov.f32	s13, s17
 80185f0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80185f4:	ee18 2a10 	vmov	r2, s16
 80185f8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80185fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8018600:	ee18 2a90 	vmov	r2, s17
 8018604:	9323      	str	r3, [sp, #140]	; 0x8c
 8018606:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018608:	fb92 f3f3 	sdiv	r3, r2, r3
 801860c:	9324      	str	r3, [sp, #144]	; 0x90
 801860e:	9b07      	ldr	r3, [sp, #28]
 8018610:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018612:	3b01      	subs	r3, #1
 8018614:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018618:	9307      	str	r3, [sp, #28]
 801861a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801861c:	ee16 6a90 	vmov	r6, s13
 8018620:	bf14      	ite	ne
 8018622:	461d      	movne	r5, r3
 8018624:	4615      	moveq	r5, r2
 8018626:	eef0 8a67 	vmov.f32	s17, s15
 801862a:	eeb0 8a47 	vmov.f32	s16, s14
 801862e:	e6f4      	b.n	801841a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8018630:	f111 0b01 	adds.w	fp, r1, #1
 8018634:	d48e      	bmi.n	8018554 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018636:	45de      	cmp	lr, fp
 8018638:	db8c      	blt.n	8018554 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801863a:	f110 0b01 	adds.w	fp, r0, #1
 801863e:	d489      	bmi.n	8018554 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018640:	455b      	cmp	r3, fp
 8018642:	db87      	blt.n	8018554 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018644:	b21b      	sxth	r3, r3
 8018646:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801864a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801864e:	9300      	str	r3, [sp, #0]
 8018650:	4642      	mov	r2, r8
 8018652:	fa0f f38e 	sxth.w	r3, lr
 8018656:	4649      	mov	r1, r9
 8018658:	980d      	ldr	r0, [sp, #52]	; 0x34
 801865a:	f7ff fe2b 	bl	80182b4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801865e:	e779      	b.n	8018554 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8018660:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018662:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018666:	1420      	asrs	r0, r4, #16
 8018668:	1431      	asrs	r1, r6, #16
 801866a:	fb03 0101 	mla	r1, r3, r1, r0
 801866e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8018672:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018676:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801867a:	8841      	ldrh	r1, [r0, #2]
 801867c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018680:	f1be 0f00 	cmp.w	lr, #0
 8018684:	d00b      	beq.n	801869e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8018686:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801868a:	3b01      	subs	r3, #1
 801868c:	005b      	lsls	r3, r3, #1
 801868e:	3302      	adds	r3, #2
 8018690:	eb00 0b03 	add.w	fp, r0, r3
 8018694:	5ac3      	ldrh	r3, [r0, r3]
 8018696:	930a      	str	r3, [sp, #40]	; 0x28
 8018698:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801869c:	930b      	str	r3, [sp, #44]	; 0x2c
 801869e:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80186a2:	fb12 f30e 	smulbb	r3, r2, lr
 80186a6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80186aa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80186ae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80186b2:	10db      	asrs	r3, r3, #3
 80186b4:	ea40 000c 	orr.w	r0, r0, ip
 80186b8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80186bc:	f1ce 0c10 	rsb	ip, lr, #16
 80186c0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80186c4:	ebac 0c02 	sub.w	ip, ip, r2
 80186c8:	ea4b 0101 	orr.w	r1, fp, r1
 80186cc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80186d0:	4351      	muls	r1, r2
 80186d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80186d4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80186d8:	fb0c 1c00 	mla	ip, ip, r0, r1
 80186dc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80186e0:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80186e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80186e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80186e8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80186ec:	0412      	lsls	r2, r2, #16
 80186ee:	ea4b 0000 	orr.w	r0, fp, r0
 80186f2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80186f6:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80186fa:	fb03 c000 	mla	r0, r3, r0, ip
 80186fe:	ea42 0b0b 	orr.w	fp, r2, fp
 8018702:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018706:	fb03 000b 	mla	r0, r3, fp, r0
 801870a:	0d43      	lsrs	r3, r0, #21
 801870c:	0940      	lsrs	r0, r0, #5
 801870e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018712:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018716:	4318      	orrs	r0, r3
 8018718:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801871a:	f82a 0b02 	strh.w	r0, [sl], #2
 801871e:	441c      	add	r4, r3
 8018720:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018722:	f109 39ff 	add.w	r9, r9, #4294967295
 8018726:	441e      	add	r6, r3
 8018728:	e73c      	b.n	80185a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801872a:	b00f      	add	sp, #60	; 0x3c
 801872c:	ecbd 8b08 	vpop	{d8-d11}
 8018730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8018734:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018738:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801873c:	fb04 5603 	mla	r6, r4, r3, r5
 8018740:	2c00      	cmp	r4, #0
 8018742:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8018746:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801874a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801874e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8018752:	db36      	blt.n	80187c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8018754:	45a6      	cmp	lr, r4
 8018756:	dd34      	ble.n	80187c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8e>
 8018758:	2d00      	cmp	r5, #0
 801875a:	db30      	blt.n	80187be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 801875c:	42ab      	cmp	r3, r5
 801875e:	dd2e      	ble.n	80187be <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8a>
 8018760:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8018764:	1c6e      	adds	r6, r5, #1
 8018766:	d42f      	bmi.n	80187c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 8018768:	42b3      	cmp	r3, r6
 801876a:	dd2d      	ble.n	80187c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x94>
 801876c:	b370      	cbz	r0, 80187cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801876e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8018772:	3401      	adds	r4, #1
 8018774:	d42e      	bmi.n	80187d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 8018776:	45a6      	cmp	lr, r4
 8018778:	dd2c      	ble.n	80187d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa0>
 801877a:	b377      	cbz	r7, 80187da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xa6>
 801877c:	2d00      	cmp	r5, #0
 801877e:	db27      	blt.n	80187d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8018780:	42ab      	cmp	r3, r5
 8018782:	dd25      	ble.n	80187d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8018784:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8018788:	3501      	adds	r5, #1
 801878a:	d429      	bmi.n	80187e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 801878c:	42ab      	cmp	r3, r5
 801878e:	dd27      	ble.n	80187e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xac>
 8018790:	b340      	cbz	r0, 80187e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8018792:	3301      	adds	r3, #1
 8018794:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8018798:	280f      	cmp	r0, #15
 801879a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801879e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80187a2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80187a6:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80187aa:	d801      	bhi.n	80187b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x7c>
 80187ac:	2f0f      	cmp	r7, #15
 80187ae:	d91b      	bls.n	80187e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 80187b0:	4b8d      	ldr	r3, [pc, #564]	; (80189e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 80187b2:	4a8e      	ldr	r2, [pc, #568]	; (80189ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 80187b4:	488e      	ldr	r0, [pc, #568]	; (80189f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 80187b6:	f240 11f9 	movw	r1, #505	; 0x1f9
 80187ba:	f002 fa6d 	bl	801ac98 <__assert_func>
 80187be:	2200      	movs	r2, #0
 80187c0:	e7d0      	b.n	8018764 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x30>
 80187c2:	2600      	movs	r6, #0
 80187c4:	4632      	mov	r2, r6
 80187c6:	e7d4      	b.n	8018772 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80187c8:	2600      	movs	r6, #0
 80187ca:	e7d2      	b.n	8018772 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80187cc:	4606      	mov	r6, r0
 80187ce:	e7d0      	b.n	8018772 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3e>
 80187d0:	2400      	movs	r4, #0
 80187d2:	e7d9      	b.n	8018788 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x54>
 80187d4:	2300      	movs	r3, #0
 80187d6:	461c      	mov	r4, r3
 80187d8:	e7de      	b.n	8018798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80187da:	463b      	mov	r3, r7
 80187dc:	463c      	mov	r4, r7
 80187de:	e7db      	b.n	8018798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80187e0:	2300      	movs	r3, #0
 80187e2:	e7d9      	b.n	8018798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80187e4:	4603      	mov	r3, r0
 80187e6:	e7d7      	b.n	8018798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x64>
 80187e8:	b280      	uxth	r0, r0
 80187ea:	b2bf      	uxth	r7, r7
 80187ec:	fb07 fe00 	mul.w	lr, r7, r0
 80187f0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80187f4:	0100      	lsls	r0, r0, #4
 80187f6:	eba0 0c0e 	sub.w	ip, r0, lr
 80187fa:	b2bf      	uxth	r7, r7
 80187fc:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8018800:	fa1f fc8c 	uxth.w	ip, ip
 8018804:	1bed      	subs	r5, r5, r7
 8018806:	b2ad      	uxth	r5, r5
 8018808:	fb0a f00c 	mul.w	r0, sl, ip
 801880c:	fb0b 0005 	mla	r0, fp, r5, r0
 8018810:	fb07 0009 	mla	r0, r7, r9, r0
 8018814:	fb0e 0008 	mla	r0, lr, r8, r0
 8018818:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801881c:	9001      	str	r0, [sp, #4]
 801881e:	2800      	cmp	r0, #0
 8018820:	f000 80de 	beq.w	80189e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2ac>
 8018824:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018828:	d018      	beq.n	801885c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x128>
 801882a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801882e:	fb0b f000 	mul.w	r0, fp, r0
 8018832:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018836:	fb0b fb02 	mul.w	fp, fp, r2
 801883a:	0a02      	lsrs	r2, r0, #8
 801883c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018840:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8018844:	4402      	add	r2, r0
 8018846:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801884a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801884e:	0a12      	lsrs	r2, r2, #8
 8018850:	0a00      	lsrs	r0, r0, #8
 8018852:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018856:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801885a:	4302      	orrs	r2, r0
 801885c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018860:	d01a      	beq.n	8018898 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x164>
 8018862:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8018866:	fb0a f000 	mul.w	r0, sl, r0
 801886a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801886e:	fb0a fa06 	mul.w	sl, sl, r6
 8018872:	0a06      	lsrs	r6, r0, #8
 8018874:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018878:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801887c:	4406      	add	r6, r0
 801887e:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8018882:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 8018886:	0a36      	lsrs	r6, r6, #8
 8018888:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801888c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018890:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018894:	ea46 060a 	orr.w	r6, r6, sl
 8018898:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801889c:	d01b      	beq.n	80188d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1a2>
 801889e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80188a2:	fb09 fa0a 	mul.w	sl, r9, sl
 80188a6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80188aa:	fb09 f004 	mul.w	r0, r9, r4
 80188ae:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80188b2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80188b6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80188ba:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80188be:	4454      	add	r4, sl
 80188c0:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80188c4:	0a24      	lsrs	r4, r4, #8
 80188c6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80188ca:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80188ce:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80188d2:	ea44 0409 	orr.w	r4, r4, r9
 80188d6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80188da:	d01b      	beq.n	8018914 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1e0>
 80188dc:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80188e0:	fb08 f909 	mul.w	r9, r8, r9
 80188e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80188e8:	fb08 f003 	mul.w	r0, r8, r3
 80188ec:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80188f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80188f4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80188f8:	f500 7880 	add.w	r8, r0, #256	; 0x100
 80188fc:	444b      	add	r3, r9
 80188fe:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8018902:	0a1b      	lsrs	r3, r3, #8
 8018904:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018908:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801890c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8018910:	ea43 0308 	orr.w	r3, r3, r8
 8018914:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018918:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801891c:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8018920:	fb0c f808 	mul.w	r8, ip, r8
 8018924:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018928:	fb0c f606 	mul.w	r6, ip, r6
 801892c:	fb05 8909 	mla	r9, r5, r9, r8
 8018930:	fb05 6502 	mla	r5, r5, r2, r6
 8018934:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8018938:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801893c:	9a01      	ldr	r2, [sp, #4]
 801893e:	8808      	ldrh	r0, [r1, #0]
 8018940:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018944:	fb07 9908 	mla	r9, r7, r8, r9
 8018948:	fb07 5704 	mla	r7, r7, r4, r5
 801894c:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8018950:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018954:	b2b6      	uxth	r6, r6
 8018956:	fb0e 9808 	mla	r8, lr, r8, r9
 801895a:	fb0e 7e03 	mla	lr, lr, r3, r7
 801895e:	4372      	muls	r2, r6
 8018960:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018964:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018968:	1c53      	adds	r3, r2, #1
 801896a:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 801896e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018972:	ea48 0e0e 	orr.w	lr, r8, lr
 8018976:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801897a:	1205      	asrs	r5, r0, #8
 801897c:	ea4f 421e 	mov.w	r2, lr, lsr #16
 8018980:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8018984:	b2db      	uxtb	r3, r3
 8018986:	fb12 f206 	smulbb	r2, r2, r6
 801898a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801898e:	fb05 2503 	mla	r5, r5, r3, r2
 8018992:	f3ce 2407 	ubfx	r4, lr, #8, #8
 8018996:	10c2      	asrs	r2, r0, #3
 8018998:	fa5f fe8e 	uxtb.w	lr, lr
 801899c:	00c0      	lsls	r0, r0, #3
 801899e:	fb14 f406 	smulbb	r4, r4, r6
 80189a2:	b2c0      	uxtb	r0, r0
 80189a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80189a8:	fb1e fe06 	smulbb	lr, lr, r6
 80189ac:	fb02 4203 	mla	r2, r2, r3, r4
 80189b0:	b2ad      	uxth	r5, r5
 80189b2:	fb00 e303 	mla	r3, r0, r3, lr
 80189b6:	b298      	uxth	r0, r3
 80189b8:	b294      	uxth	r4, r2
 80189ba:	1c6b      	adds	r3, r5, #1
 80189bc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80189c0:	1c62      	adds	r2, r4, #1
 80189c2:	1c43      	adds	r3, r0, #1
 80189c4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80189c8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80189cc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80189d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80189d4:	0952      	lsrs	r2, r2, #5
 80189d6:	432b      	orrs	r3, r5
 80189d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80189dc:	4313      	orrs	r3, r2
 80189de:	800b      	strh	r3, [r1, #0]
 80189e0:	b003      	add	sp, #12
 80189e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189e6:	bf00      	nop
 80189e8:	0801eaff 	.word	0x0801eaff
 80189ec:	0801f02e 	.word	0x0801f02e
 80189f0:	0801eacc 	.word	0x0801eacc

080189f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80189f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189f8:	ed2d 8b08 	vpush	{d8-d11}
 80189fc:	b09d      	sub	sp, #116	; 0x74
 80189fe:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 8018a02:	9219      	str	r2, [sp, #100]	; 0x64
 8018a04:	9307      	str	r3, [sp, #28]
 8018a06:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8018a08:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8018a0c:	931a      	str	r3, [sp, #104]	; 0x68
 8018a0e:	9117      	str	r1, [sp, #92]	; 0x5c
 8018a10:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8018a14:	901b      	str	r0, [sp, #108]	; 0x6c
 8018a16:	6850      	ldr	r0, [r2, #4]
 8018a18:	6812      	ldr	r2, [r2, #0]
 8018a1a:	fb00 1303 	mla	r3, r0, r3, r1
 8018a1e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018a22:	930a      	str	r3, [sp, #40]	; 0x28
 8018a24:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8018a26:	681b      	ldr	r3, [r3, #0]
 8018a28:	9310      	str	r3, [sp, #64]	; 0x40
 8018a2a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8018a2e:	930b      	str	r3, [sp, #44]	; 0x2c
 8018a30:	eeb0 aa40 	vmov.f32	s20, s0
 8018a34:	eef0 9a60 	vmov.f32	s19, s1
 8018a38:	eeb0 9a41 	vmov.f32	s18, s2
 8018a3c:	eeb0 8a62 	vmov.f32	s16, s5
 8018a40:	eef0 8a43 	vmov.f32	s17, s6
 8018a44:	eef0 ba44 	vmov.f32	s23, s8
 8018a48:	eeb0 ba64 	vmov.f32	s22, s9
 8018a4c:	eef0 aa45 	vmov.f32	s21, s10
 8018a50:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018a52:	2b00      	cmp	r3, #0
 8018a54:	dc03      	bgt.n	8018a5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018a56:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8018a58:	2b00      	cmp	r3, #0
 8018a5a:	f340 8375 	ble.w	8019148 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8018a5e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8018a60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018a64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018a68:	1e48      	subs	r0, r1, #1
 8018a6a:	1e57      	subs	r7, r2, #1
 8018a6c:	9b07      	ldr	r3, [sp, #28]
 8018a6e:	2b00      	cmp	r3, #0
 8018a70:	f340 818e 	ble.w	8018d90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8018a74:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8018a78:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018a7c:	d406      	bmi.n	8018a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018a7e:	4584      	cmp	ip, r0
 8018a80:	da04      	bge.n	8018a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018a82:	2b00      	cmp	r3, #0
 8018a84:	db02      	blt.n	8018a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018a86:	42bb      	cmp	r3, r7
 8018a88:	f2c0 8183 	blt.w	8018d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8018a8c:	f11c 0c01 	adds.w	ip, ip, #1
 8018a90:	f100 8173 	bmi.w	8018d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018a94:	4561      	cmp	r1, ip
 8018a96:	f2c0 8170 	blt.w	8018d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018a9a:	3301      	adds	r3, #1
 8018a9c:	f100 816d 	bmi.w	8018d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018aa0:	429a      	cmp	r2, r3
 8018aa2:	f2c0 816a 	blt.w	8018d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8018aa6:	9b07      	ldr	r3, [sp, #28]
 8018aa8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018aaa:	9318      	str	r3, [sp, #96]	; 0x60
 8018aac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018aae:	2b00      	cmp	r3, #0
 8018ab0:	f340 818c 	ble.w	8018dcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8018ab4:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8018ab6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8018ab8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018abc:	689b      	ldr	r3, [r3, #8]
 8018abe:	1422      	asrs	r2, r4, #16
 8018ac0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8018ac4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018ac8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018acc:	f100 81cd 	bmi.w	8018e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8018ad0:	f103 38ff 	add.w	r8, r3, #4294967295
 8018ad4:	4542      	cmp	r2, r8
 8018ad6:	f280 81c8 	bge.w	8018e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8018ada:	f1bc 0f00 	cmp.w	ip, #0
 8018ade:	f2c0 81c4 	blt.w	8018e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8018ae2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018ae6:	45c4      	cmp	ip, r8
 8018ae8:	f280 81bf 	bge.w	8018e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8018aec:	b21b      	sxth	r3, r3
 8018aee:	fb0c 2203 	mla	r2, ip, r3, r2
 8018af2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018af4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8018af8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8018afc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8018b00:	2800      	cmp	r0, #0
 8018b02:	f000 81a9 	beq.w	8018e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8018b06:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018b0a:	950c      	str	r5, [sp, #48]	; 0x30
 8018b0c:	0e2d      	lsrs	r5, r5, #24
 8018b0e:	9513      	str	r5, [sp, #76]	; 0x4c
 8018b10:	b181      	cbz	r1, 8018b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8018b12:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8018b16:	3b01      	subs	r3, #1
 8018b18:	009b      	lsls	r3, r3, #2
 8018b1a:	3304      	adds	r3, #4
 8018b1c:	eb08 0c03 	add.w	ip, r8, r3
 8018b20:	f858 3003 	ldr.w	r3, [r8, r3]
 8018b24:	9308      	str	r3, [sp, #32]
 8018b26:	0e1b      	lsrs	r3, r3, #24
 8018b28:	9311      	str	r3, [sp, #68]	; 0x44
 8018b2a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8018b2e:	930d      	str	r3, [sp, #52]	; 0x34
 8018b30:	0e1b      	lsrs	r3, r3, #24
 8018b32:	9314      	str	r3, [sp, #80]	; 0x50
 8018b34:	b280      	uxth	r0, r0
 8018b36:	b289      	uxth	r1, r1
 8018b38:	fb00 f901 	mul.w	r9, r0, r1
 8018b3c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018b40:	0100      	lsls	r0, r0, #4
 8018b42:	eba0 0809 	sub.w	r8, r0, r9
 8018b46:	b289      	uxth	r1, r1
 8018b48:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018b4c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018b4e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018b50:	fa1f f888 	uxth.w	r8, r8
 8018b54:	1a5b      	subs	r3, r3, r1
 8018b56:	b29b      	uxth	r3, r3
 8018b58:	fb08 f000 	mul.w	r0, r8, r0
 8018b5c:	fb03 000e 	mla	r0, r3, lr, r0
 8018b60:	fb01 0005 	mla	r0, r1, r5, r0
 8018b64:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018b66:	fb09 0005 	mla	r0, r9, r5, r0
 8018b6a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018b6e:	2800      	cmp	r0, #0
 8018b70:	f000 80fa 	beq.w	8018d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018b74:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018b78:	d01b      	beq.n	8018bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8018b7a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8018b7e:	fb0e fa0a 	mul.w	sl, lr, sl
 8018b82:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018b86:	fb0e fe02 	mul.w	lr, lr, r2
 8018b8a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8018b8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018b92:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018b96:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8018b9a:	4452      	add	r2, sl
 8018b9c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018ba0:	0a12      	lsrs	r2, r2, #8
 8018ba2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018ba6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018baa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018bae:	ea42 020c 	orr.w	r2, r2, ip
 8018bb2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018bb4:	2dff      	cmp	r5, #255	; 0xff
 8018bb6:	d021      	beq.n	8018bfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8018bb8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018bba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018bbe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018bc0:	fb05 fb0b 	mul.w	fp, r5, fp
 8018bc4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018bc6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018bca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018bcc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018bd0:	fb05 fa0a 	mul.w	sl, r5, sl
 8018bd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018bd8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018bdc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018be0:	44de      	add	lr, fp
 8018be2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018be6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018bea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018bee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018bf2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018bf6:	ea4e 050a 	orr.w	r5, lr, sl
 8018bfa:	950c      	str	r5, [sp, #48]	; 0x30
 8018bfc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018bfe:	2dff      	cmp	r5, #255	; 0xff
 8018c00:	d021      	beq.n	8018c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018c02:	9d08      	ldr	r5, [sp, #32]
 8018c04:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018c08:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018c0a:	fb05 fb0b 	mul.w	fp, r5, fp
 8018c0e:	9d08      	ldr	r5, [sp, #32]
 8018c10:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018c14:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018c16:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018c1a:	fb05 fa0a 	mul.w	sl, r5, sl
 8018c1e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018c22:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018c26:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018c2a:	44de      	add	lr, fp
 8018c2c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018c30:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018c34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c38:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018c3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018c40:	ea4e 050a 	orr.w	r5, lr, sl
 8018c44:	9508      	str	r5, [sp, #32]
 8018c46:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018c48:	2dff      	cmp	r5, #255	; 0xff
 8018c4a:	d021      	beq.n	8018c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8018c4c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018c4e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018c52:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018c54:	fb05 fb0b 	mul.w	fp, r5, fp
 8018c58:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018c5a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018c5e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018c60:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018c64:	fb05 fa0a 	mul.w	sl, r5, sl
 8018c68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018c6c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018c70:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018c74:	44de      	add	lr, fp
 8018c76:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018c7a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018c7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c82:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018c86:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018c8a:	ea4e 050a 	orr.w	r5, lr, sl
 8018c8e:	950d      	str	r5, [sp, #52]	; 0x34
 8018c90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018c92:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8018c96:	9d08      	ldr	r5, [sp, #32]
 8018c98:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8018c9c:	fb08 fc0c 	mul.w	ip, r8, ip
 8018ca0:	fb03 cc0e 	mla	ip, r3, lr, ip
 8018ca4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8018ca8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018caa:	fb01 cc0e 	mla	ip, r1, lr, ip
 8018cae:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8018cb2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018cb4:	fb09 cc0e 	mla	ip, r9, lr, ip
 8018cb8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8018cbc:	fb08 f80e 	mul.w	r8, r8, lr
 8018cc0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018cc4:	fb03 8202 	mla	r2, r3, r2, r8
 8018cc8:	9b08      	ldr	r3, [sp, #32]
 8018cca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018ccc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8018cd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018cd2:	fb01 220a 	mla	r2, r1, sl, r2
 8018cd6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8018cda:	fb09 2901 	mla	r9, r9, r1, r2
 8018cde:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018ce0:	883b      	ldrh	r3, [r7, #0]
 8018ce2:	4342      	muls	r2, r0
 8018ce4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018ce8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018cec:	1c50      	adds	r0, r2, #1
 8018cee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018cf2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8018cf6:	ea4c 0c09 	orr.w	ip, ip, r9
 8018cfa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018cfe:	1219      	asrs	r1, r3, #8
 8018d00:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8018d04:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8018d08:	b2c0      	uxtb	r0, r0
 8018d0a:	fb12 f205 	smulbb	r2, r2, r5
 8018d0e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018d12:	fb01 2100 	mla	r1, r1, r0, r2
 8018d16:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8018d1a:	10da      	asrs	r2, r3, #3
 8018d1c:	fa5f fc8c 	uxtb.w	ip, ip
 8018d20:	00db      	lsls	r3, r3, #3
 8018d22:	fb1c fc05 	smulbb	ip, ip, r5
 8018d26:	b2db      	uxtb	r3, r3
 8018d28:	b289      	uxth	r1, r1
 8018d2a:	fb03 c300 	mla	r3, r3, r0, ip
 8018d2e:	fa1f fc83 	uxth.w	ip, r3
 8018d32:	1c4b      	adds	r3, r1, #1
 8018d34:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018d38:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018d3c:	fb1e fe05 	smulbb	lr, lr, r5
 8018d40:	f10c 0301 	add.w	r3, ip, #1
 8018d44:	fb02 e200 	mla	r2, r2, r0, lr
 8018d48:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8018d4c:	b292      	uxth	r2, r2
 8018d4e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8018d52:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018d56:	430b      	orrs	r3, r1
 8018d58:	1c51      	adds	r1, r2, #1
 8018d5a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018d5e:	0952      	lsrs	r2, r2, #5
 8018d60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018d64:	4313      	orrs	r3, r2
 8018d66:	803b      	strh	r3, [r7, #0]
 8018d68:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8018d6a:	441c      	add	r4, r3
 8018d6c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8018d6e:	441e      	add	r6, r3
 8018d70:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018d72:	3b01      	subs	r3, #1
 8018d74:	3702      	adds	r7, #2
 8018d76:	9318      	str	r3, [sp, #96]	; 0x60
 8018d78:	e698      	b.n	8018aac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018d7a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8018d7c:	441c      	add	r4, r3
 8018d7e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8018d80:	441e      	add	r6, r3
 8018d82:	9b07      	ldr	r3, [sp, #28]
 8018d84:	3b01      	subs	r3, #1
 8018d86:	9307      	str	r3, [sp, #28]
 8018d88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018d8a:	3302      	adds	r3, #2
 8018d8c:	930a      	str	r3, [sp, #40]	; 0x28
 8018d8e:	e66d      	b.n	8018a6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018d90:	d023      	beq.n	8018dda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8018d92:	9b07      	ldr	r3, [sp, #28]
 8018d94:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8018d96:	3b01      	subs	r3, #1
 8018d98:	fb00 4003 	mla	r0, r0, r3, r4
 8018d9c:	1400      	asrs	r0, r0, #16
 8018d9e:	f53f ae82 	bmi.w	8018aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018da2:	3901      	subs	r1, #1
 8018da4:	4288      	cmp	r0, r1
 8018da6:	f6bf ae7e 	bge.w	8018aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018daa:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8018dac:	fb01 6303 	mla	r3, r1, r3, r6
 8018db0:	141b      	asrs	r3, r3, #16
 8018db2:	f53f ae78 	bmi.w	8018aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018db6:	3a01      	subs	r2, #1
 8018db8:	4293      	cmp	r3, r2
 8018dba:	f6bf ae74 	bge.w	8018aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018dbe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018dc2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8018dc6:	f1bb 0f00 	cmp.w	fp, #0
 8018dca:	dc6c      	bgt.n	8018ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 8018dcc:	9b07      	ldr	r3, [sp, #28]
 8018dce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018dd2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018dd4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018dd8:	930a      	str	r3, [sp, #40]	; 0x28
 8018dda:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018ddc:	2b00      	cmp	r3, #0
 8018dde:	f340 81b3 	ble.w	8019148 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8018de2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018de6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018dea:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018dee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018df0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018df4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018df8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018dfc:	eef0 6a48 	vmov.f32	s13, s16
 8018e00:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018e04:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e08:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018e0c:	ee16 4a90 	vmov	r4, s13
 8018e10:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018e14:	eef0 6a68 	vmov.f32	s13, s17
 8018e18:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018e1c:	ee18 2a10 	vmov	r2, s16
 8018e20:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018e24:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e28:	ee18 2a90 	vmov	r2, s17
 8018e2c:	9331      	str	r3, [sp, #196]	; 0xc4
 8018e2e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018e30:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e34:	9332      	str	r3, [sp, #200]	; 0xc8
 8018e36:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018e38:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8018e3a:	3b01      	subs	r3, #1
 8018e3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e40:	9317      	str	r3, [sp, #92]	; 0x5c
 8018e42:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018e44:	bf08      	it	eq
 8018e46:	4613      	moveq	r3, r2
 8018e48:	ee16 6a90 	vmov	r6, s13
 8018e4c:	9307      	str	r3, [sp, #28]
 8018e4e:	eef0 8a67 	vmov.f32	s17, s15
 8018e52:	eeb0 8a47 	vmov.f32	s16, s14
 8018e56:	e5fb      	b.n	8018a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018e58:	2900      	cmp	r1, #0
 8018e5a:	f43f ae6b 	beq.w	8018b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8018e5e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8018e62:	9308      	str	r3, [sp, #32]
 8018e64:	0e1b      	lsrs	r3, r3, #24
 8018e66:	9311      	str	r3, [sp, #68]	; 0x44
 8018e68:	e664      	b.n	8018b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8018e6a:	f112 0801 	adds.w	r8, r2, #1
 8018e6e:	f53f af7b 	bmi.w	8018d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018e72:	4543      	cmp	r3, r8
 8018e74:	f6ff af78 	blt.w	8018d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018e78:	f11c 0801 	adds.w	r8, ip, #1
 8018e7c:	f53f af74 	bmi.w	8018d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018e80:	45c6      	cmp	lr, r8
 8018e82:	f6ff af71 	blt.w	8018d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018e86:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8018e88:	9201      	str	r2, [sp, #4]
 8018e8a:	fa0f f28e 	sxth.w	r2, lr
 8018e8e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8018e92:	e9cd c002 	strd	ip, r0, [sp, #8]
 8018e96:	9200      	str	r2, [sp, #0]
 8018e98:	b21b      	sxth	r3, r3
 8018e9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018e9c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8018e9e:	4639      	mov	r1, r7
 8018ea0:	f7ff fc48 	bl	8018734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8018ea4:	e760      	b.n	8018d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8018ea6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8018ea8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018eaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018eae:	1427      	asrs	r7, r4, #16
 8018eb0:	1433      	asrs	r3, r6, #16
 8018eb2:	fb01 7303 	mla	r3, r1, r3, r7
 8018eb6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8018eba:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8018ebe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018ec2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018ec6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018eca:	2a00      	cmp	r2, #0
 8018ecc:	f000 8133 	beq.w	8019136 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8018ed0:	687d      	ldr	r5, [r7, #4]
 8018ed2:	950e      	str	r5, [sp, #56]	; 0x38
 8018ed4:	0e2d      	lsrs	r5, r5, #24
 8018ed6:	9515      	str	r5, [sp, #84]	; 0x54
 8018ed8:	b178      	cbz	r0, 8018efa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8018eda:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8018ede:	3901      	subs	r1, #1
 8018ee0:	0089      	lsls	r1, r1, #2
 8018ee2:	3104      	adds	r1, #4
 8018ee4:	eb07 0e01 	add.w	lr, r7, r1
 8018ee8:	5879      	ldr	r1, [r7, r1]
 8018eea:	9109      	str	r1, [sp, #36]	; 0x24
 8018eec:	0e09      	lsrs	r1, r1, #24
 8018eee:	9112      	str	r1, [sp, #72]	; 0x48
 8018ef0:	f8de 1004 	ldr.w	r1, [lr, #4]
 8018ef4:	910f      	str	r1, [sp, #60]	; 0x3c
 8018ef6:	0e09      	lsrs	r1, r1, #24
 8018ef8:	9116      	str	r1, [sp, #88]	; 0x58
 8018efa:	b292      	uxth	r2, r2
 8018efc:	b280      	uxth	r0, r0
 8018efe:	fb02 f800 	mul.w	r8, r2, r0
 8018f02:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018f06:	0112      	lsls	r2, r2, #4
 8018f08:	eba2 0e08 	sub.w	lr, r2, r8
 8018f0c:	b280      	uxth	r0, r0
 8018f0e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018f12:	9915      	ldr	r1, [sp, #84]	; 0x54
 8018f14:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018f16:	fa1f fe8e 	uxth.w	lr, lr
 8018f1a:	1a12      	subs	r2, r2, r0
 8018f1c:	b292      	uxth	r2, r2
 8018f1e:	fb0e f101 	mul.w	r1, lr, r1
 8018f22:	fb02 110c 	mla	r1, r2, ip, r1
 8018f26:	fb00 1105 	mla	r1, r0, r5, r1
 8018f2a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018f2c:	fb08 1105 	mla	r1, r8, r5, r1
 8018f30:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018f34:	2900      	cmp	r1, #0
 8018f36:	f000 80f5 	beq.w	8019124 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8018f3a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018f3e:	d019      	beq.n	8018f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8018f40:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018f44:	fb0c fa0a 	mul.w	sl, ip, sl
 8018f48:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018f4c:	fb0c fc03 	mul.w	ip, ip, r3
 8018f50:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018f54:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018f58:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018f5c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018f60:	4453      	add	r3, sl
 8018f62:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018f66:	0a1b      	lsrs	r3, r3, #8
 8018f68:	0a3f      	lsrs	r7, r7, #8
 8018f6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018f6e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018f72:	433b      	orrs	r3, r7
 8018f74:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018f76:	2dff      	cmp	r5, #255	; 0xff
 8018f78:	d020      	beq.n	8018fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8018f7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018f7c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018f80:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018f82:	436f      	muls	r7, r5
 8018f84:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018f86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018f8a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018f8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018f90:	fb05 fa0a 	mul.w	sl, r5, sl
 8018f94:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018f98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018f9c:	44bc      	add	ip, r7
 8018f9e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018fa2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018fa6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018faa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018fae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018fb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018fb6:	ea4c 050a 	orr.w	r5, ip, sl
 8018fba:	950e      	str	r5, [sp, #56]	; 0x38
 8018fbc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018fbe:	2dff      	cmp	r5, #255	; 0xff
 8018fc0:	d020      	beq.n	8019004 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8018fc2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018fc4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018fc8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018fca:	436f      	muls	r7, r5
 8018fcc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018fce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018fd2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018fd4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018fd8:	fb05 fa0a 	mul.w	sl, r5, sl
 8018fdc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018fe0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018fe4:	44bc      	add	ip, r7
 8018fe6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018fea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018fee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018ff2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018ff6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018ffa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018ffe:	ea4c 050a 	orr.w	r5, ip, sl
 8019002:	9509      	str	r5, [sp, #36]	; 0x24
 8019004:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019006:	2dff      	cmp	r5, #255	; 0xff
 8019008:	d020      	beq.n	801904c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801900a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801900c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019010:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019012:	436f      	muls	r7, r5
 8019014:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019016:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801901a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801901c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019020:	fb05 fa0a 	mul.w	sl, r5, sl
 8019024:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019028:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801902c:	44bc      	add	ip, r7
 801902e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019032:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019036:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801903a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801903e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019042:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019046:	ea4c 050a 	orr.w	r5, ip, sl
 801904a:	950f      	str	r5, [sp, #60]	; 0x3c
 801904c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801904e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019052:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019054:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019058:	fb0e f707 	mul.w	r7, lr, r7
 801905c:	fb02 770c 	mla	r7, r2, ip, r7
 8019060:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019064:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019066:	fb00 770c 	mla	r7, r0, ip, r7
 801906a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801906e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019070:	fb08 770c 	mla	r7, r8, ip, r7
 8019074:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019078:	fb0e fe0c 	mul.w	lr, lr, ip
 801907c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019080:	fb02 e303 	mla	r3, r2, r3, lr
 8019084:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019086:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019088:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801908c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801908e:	fb00 330a 	mla	r3, r0, sl, r3
 8019092:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019096:	fb08 3c0c 	mla	ip, r8, ip, r3
 801909a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801909c:	f8b9 0000 	ldrh.w	r0, [r9]
 80190a0:	4359      	muls	r1, r3
 80190a2:	0a3f      	lsrs	r7, r7, #8
 80190a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80190a8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80190ac:	1c4b      	adds	r3, r1, #1
 80190ae:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80190b2:	ea47 070c 	orr.w	r7, r7, ip
 80190b6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80190ba:	1202      	asrs	r2, r0, #8
 80190bc:	0c3b      	lsrs	r3, r7, #16
 80190be:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80190c2:	b2c9      	uxtb	r1, r1
 80190c4:	fb13 f305 	smulbb	r3, r3, r5
 80190c8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80190cc:	fb02 3201 	mla	r2, r2, r1, r3
 80190d0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80190d4:	10c3      	asrs	r3, r0, #3
 80190d6:	b2ff      	uxtb	r7, r7
 80190d8:	00c0      	lsls	r0, r0, #3
 80190da:	b2c0      	uxtb	r0, r0
 80190dc:	fb17 f705 	smulbb	r7, r7, r5
 80190e0:	fb00 7001 	mla	r0, r0, r1, r7
 80190e4:	b292      	uxth	r2, r2
 80190e6:	fb1c fc05 	smulbb	ip, ip, r5
 80190ea:	b280      	uxth	r0, r0
 80190ec:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80190f0:	fb03 c301 	mla	r3, r3, r1, ip
 80190f4:	1c51      	adds	r1, r2, #1
 80190f6:	f100 0c01 	add.w	ip, r0, #1
 80190fa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80190fe:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8019102:	b29b      	uxth	r3, r3
 8019104:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019108:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801910c:	ea4c 0202 	orr.w	r2, ip, r2
 8019110:	f103 0c01 	add.w	ip, r3, #1
 8019114:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019118:	095b      	lsrs	r3, r3, #5
 801911a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801911e:	431a      	orrs	r2, r3
 8019120:	f8a9 2000 	strh.w	r2, [r9]
 8019124:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8019126:	441c      	add	r4, r3
 8019128:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801912a:	f109 0902 	add.w	r9, r9, #2
 801912e:	441e      	add	r6, r3
 8019130:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019134:	e647      	b.n	8018dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8019136:	2800      	cmp	r0, #0
 8019138:	f43f aedf 	beq.w	8018efa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801913c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8019140:	9109      	str	r1, [sp, #36]	; 0x24
 8019142:	0e09      	lsrs	r1, r1, #24
 8019144:	9112      	str	r1, [sp, #72]	; 0x48
 8019146:	e6d8      	b.n	8018efa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8019148:	b01d      	add	sp, #116	; 0x74
 801914a:	ecbd 8b08 	vpop	{d8-d11}
 801914e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019154 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8019154:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019158:	e9dd 540d 	ldrd	r5, r4, [sp, #52]	; 0x34
 801915c:	fb04 5603 	mla	r6, r4, r3, r5
 8019160:	2c00      	cmp	r4, #0
 8019162:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8019166:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801916a:	f89d 7040 	ldrb.w	r7, [sp, #64]	; 0x40
 801916e:	eb02 0c86 	add.w	ip, r2, r6, lsl #2
 8019172:	db37      	blt.n	80191e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8019174:	45a6      	cmp	lr, r4
 8019176:	dd35      	ble.n	80191e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x90>
 8019178:	2d00      	cmp	r5, #0
 801917a:	db31      	blt.n	80191e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801917c:	42ab      	cmp	r3, r5
 801917e:	dd2f      	ble.n	80191e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8019180:	f852 2026 	ldr.w	r2, [r2, r6, lsl #2]
 8019184:	1c6e      	adds	r6, r5, #1
 8019186:	d430      	bmi.n	80191ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 8019188:	42b3      	cmp	r3, r6
 801918a:	dd2e      	ble.n	80191ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x96>
 801918c:	b378      	cbz	r0, 80191ee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9a>
 801918e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8019192:	3401      	adds	r4, #1
 8019194:	d42f      	bmi.n	80191f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 8019196:	45a6      	cmp	lr, r4
 8019198:	dd2d      	ble.n	80191f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa2>
 801919a:	b37f      	cbz	r7, 80191fc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xa8>
 801919c:	2d00      	cmp	r5, #0
 801919e:	eb0c 0e83 	add.w	lr, ip, r3, lsl #2
 80191a2:	db26      	blt.n	80191f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 80191a4:	42ab      	cmp	r3, r5
 80191a6:	dd24      	ble.n	80191f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 80191a8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80191ac:	3501      	adds	r5, #1
 80191ae:	d428      	bmi.n	8019202 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 80191b0:	42ab      	cmp	r3, r5
 80191b2:	dd26      	ble.n	8019202 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 80191b4:	b338      	cbz	r0, 8019206 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb2>
 80191b6:	f8de 3004 	ldr.w	r3, [lr, #4]
 80191ba:	280f      	cmp	r0, #15
 80191bc:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80191c0:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80191c4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80191c8:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80191cc:	d801      	bhi.n	80191d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x7e>
 80191ce:	2f0f      	cmp	r7, #15
 80191d0:	d91b      	bls.n	801920a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 80191d2:	4b87      	ldr	r3, [pc, #540]	; (80193f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 80191d4:	4a87      	ldr	r2, [pc, #540]	; (80193f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 80191d6:	4888      	ldr	r0, [pc, #544]	; (80193f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 80191d8:	f240 11f9 	movw	r1, #505	; 0x1f9
 80191dc:	f001 fd5c 	bl	801ac98 <__assert_func>
 80191e0:	2200      	movs	r2, #0
 80191e2:	e7cf      	b.n	8019184 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x30>
 80191e4:	2600      	movs	r6, #0
 80191e6:	4632      	mov	r2, r6
 80191e8:	e7d3      	b.n	8019192 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80191ea:	2600      	movs	r6, #0
 80191ec:	e7d1      	b.n	8019192 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80191ee:	4606      	mov	r6, r0
 80191f0:	e7cf      	b.n	8019192 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3e>
 80191f2:	2400      	movs	r4, #0
 80191f4:	e7da      	b.n	80191ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x58>
 80191f6:	2300      	movs	r3, #0
 80191f8:	461c      	mov	r4, r3
 80191fa:	e7de      	b.n	80191ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 80191fc:	463b      	mov	r3, r7
 80191fe:	463c      	mov	r4, r7
 8019200:	e7db      	b.n	80191ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8019202:	2300      	movs	r3, #0
 8019204:	e7d9      	b.n	80191ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 8019206:	4603      	mov	r3, r0
 8019208:	e7d7      	b.n	80191ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x66>
 801920a:	b280      	uxth	r0, r0
 801920c:	b2bf      	uxth	r7, r7
 801920e:	fb07 fe00 	mul.w	lr, r7, r0
 8019212:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8019216:	0100      	lsls	r0, r0, #4
 8019218:	eba0 0c0e 	sub.w	ip, r0, lr
 801921c:	b2bf      	uxth	r7, r7
 801921e:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8019222:	fa1f fc8c 	uxth.w	ip, ip
 8019226:	1bed      	subs	r5, r5, r7
 8019228:	b2ad      	uxth	r5, r5
 801922a:	fb0c f00a 	mul.w	r0, ip, sl
 801922e:	fb0b 0005 	mla	r0, fp, r5, r0
 8019232:	fb07 0009 	mla	r0, r7, r9, r0
 8019236:	fb0e 0008 	mla	r0, lr, r8, r0
 801923a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801923e:	9001      	str	r0, [sp, #4]
 8019240:	2800      	cmp	r0, #0
 8019242:	f000 80d1 	beq.w	80193e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>
 8019246:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801924a:	d018      	beq.n	801927e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x12a>
 801924c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8019250:	fb0b f000 	mul.w	r0, fp, r0
 8019254:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019258:	fb0b fb02 	mul.w	fp, fp, r2
 801925c:	0a02      	lsrs	r2, r0, #8
 801925e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019262:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8019266:	4402      	add	r2, r0
 8019268:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801926c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8019270:	0a12      	lsrs	r2, r2, #8
 8019272:	0a00      	lsrs	r0, r0, #8
 8019274:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019278:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801927c:	4302      	orrs	r2, r0
 801927e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019282:	d01a      	beq.n	80192ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x166>
 8019284:	f006 10ff 	and.w	r0, r6, #16711935	; 0xff00ff
 8019288:	fb0a f000 	mul.w	r0, sl, r0
 801928c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019290:	fb0a fa06 	mul.w	sl, sl, r6
 8019294:	0a06      	lsrs	r6, r0, #8
 8019296:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801929a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801929e:	4406      	add	r6, r0
 80192a0:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80192a4:	eb00 2a1a 	add.w	sl, r0, sl, lsr #8
 80192a8:	0a36      	lsrs	r6, r6, #8
 80192aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80192ae:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80192b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80192b6:	ea46 060a 	orr.w	r6, r6, sl
 80192ba:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80192be:	d01b      	beq.n	80192f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1a4>
 80192c0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80192c4:	fb09 fa0a 	mul.w	sl, r9, sl
 80192c8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80192cc:	fb09 f004 	mul.w	r0, r9, r4
 80192d0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80192d4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80192d8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80192dc:	f500 7980 	add.w	r9, r0, #256	; 0x100
 80192e0:	4454      	add	r4, sl
 80192e2:	eb09 2910 	add.w	r9, r9, r0, lsr #8
 80192e6:	0a24      	lsrs	r4, r4, #8
 80192e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80192ec:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80192f0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80192f4:	ea44 0409 	orr.w	r4, r4, r9
 80192f8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80192fc:	d01b      	beq.n	8019336 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1e2>
 80192fe:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8019302:	fb08 f909 	mul.w	r9, r8, r9
 8019306:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801930a:	fb08 f003 	mul.w	r0, r8, r3
 801930e:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8019312:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019316:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801931a:	f500 7880 	add.w	r8, r0, #256	; 0x100
 801931e:	444b      	add	r3, r9
 8019320:	eb08 2810 	add.w	r8, r8, r0, lsr #8
 8019324:	0a1b      	lsrs	r3, r3, #8
 8019326:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801932a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801932e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019332:	ea43 0308 	orr.w	r3, r3, r8
 8019336:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801933a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801933e:	f002 19ff 	and.w	r9, r2, #16711935	; 0xff00ff
 8019342:	fb0c f808 	mul.w	r8, ip, r8
 8019346:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801934a:	fb0c f606 	mul.w	r6, ip, r6
 801934e:	fb05 8909 	mla	r9, r5, r9, r8
 8019352:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8019356:	fb05 6502 	mla	r5, r5, r2, r6
 801935a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801935e:	fb07 9908 	mla	r9, r7, r8, r9
 8019362:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8019366:	fb07 5704 	mla	r7, r7, r4, r5
 801936a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801936e:	8808      	ldrh	r0, [r1, #0]
 8019370:	fb0e 9808 	mla	r8, lr, r8, r9
 8019374:	fb0e 7e03 	mla	lr, lr, r3, r7
 8019378:	9b01      	ldr	r3, [sp, #4]
 801937a:	43da      	mvns	r2, r3
 801937c:	1203      	asrs	r3, r0, #8
 801937e:	b2d2      	uxtb	r2, r2
 8019380:	10c4      	asrs	r4, r0, #3
 8019382:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019386:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801938a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801938e:	00c0      	lsls	r0, r0, #3
 8019390:	4353      	muls	r3, r2
 8019392:	f008 18ff 	and.w	r8, r8, #16711935	; 0xff00ff
 8019396:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801939a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801939e:	b2c0      	uxtb	r0, r0
 80193a0:	ea48 0e0e 	orr.w	lr, r8, lr
 80193a4:	4354      	muls	r4, r2
 80193a6:	4350      	muls	r0, r2
 80193a8:	1c5a      	adds	r2, r3, #1
 80193aa:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80193ae:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80193b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80193b6:	1c62      	adds	r2, r4, #1
 80193b8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80193bc:	ea4f 221e 	mov.w	r2, lr, lsr #8
 80193c0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80193c4:	021b      	lsls	r3, r3, #8
 80193c6:	00d2      	lsls	r2, r2, #3
 80193c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80193cc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80193d0:	4313      	orrs	r3, r2
 80193d2:	1c42      	adds	r2, r0, #1
 80193d4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80193d8:	eb0e 2e10 	add.w	lr, lr, r0, lsr #8
 80193dc:	f3ce 0ec4 	ubfx	lr, lr, #3, #5
 80193e0:	ea4e 0e03 	orr.w	lr, lr, r3
 80193e4:	f8a1 e000 	strh.w	lr, [r1]
 80193e8:	b003      	add	sp, #12
 80193ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193ee:	bf00      	nop
 80193f0:	0801eaff 	.word	0x0801eaff
 80193f4:	0801f02e 	.word	0x0801f02e
 80193f8:	0801eacc 	.word	0x0801eacc

080193fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019400:	ed2d 8b08 	vpush	{d8-d11}
 8019404:	b09b      	sub	sp, #108	; 0x6c
 8019406:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801940a:	9218      	str	r2, [sp, #96]	; 0x60
 801940c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801940e:	9116      	str	r1, [sp, #88]	; 0x58
 8019410:	9307      	str	r3, [sp, #28]
 8019412:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8019416:	9019      	str	r0, [sp, #100]	; 0x64
 8019418:	6850      	ldr	r0, [r2, #4]
 801941a:	6812      	ldr	r2, [r2, #0]
 801941c:	fb00 1303 	mla	r3, r0, r3, r1
 8019420:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019424:	930a      	str	r3, [sp, #40]	; 0x28
 8019426:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019428:	681b      	ldr	r3, [r3, #0]
 801942a:	930f      	str	r3, [sp, #60]	; 0x3c
 801942c:	eeb0 aa40 	vmov.f32	s20, s0
 8019430:	eef0 9a60 	vmov.f32	s19, s1
 8019434:	eeb0 9a41 	vmov.f32	s18, s2
 8019438:	eeb0 8a62 	vmov.f32	s16, s5
 801943c:	eef0 8a43 	vmov.f32	s17, s6
 8019440:	eef0 ba44 	vmov.f32	s23, s8
 8019444:	eeb0 ba64 	vmov.f32	s22, s9
 8019448:	eef0 aa45 	vmov.f32	s21, s10
 801944c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801944e:	2b00      	cmp	r3, #0
 8019450:	dc03      	bgt.n	801945a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019452:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019454:	2b00      	cmp	r3, #0
 8019456:	f340 8386 	ble.w	8019b66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 801945a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801945c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019460:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019464:	1e48      	subs	r0, r1, #1
 8019466:	1e57      	subs	r7, r2, #1
 8019468:	9b07      	ldr	r3, [sp, #28]
 801946a:	2b00      	cmp	r3, #0
 801946c:	f340 8166 	ble.w	801973c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x340>
 8019470:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8019474:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019478:	d406      	bmi.n	8019488 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801947a:	4584      	cmp	ip, r0
 801947c:	da04      	bge.n	8019488 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801947e:	2b00      	cmp	r3, #0
 8019480:	db02      	blt.n	8019488 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019482:	42bb      	cmp	r3, r7
 8019484:	f2c0 815b 	blt.w	801973e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019488:	f11c 0c01 	adds.w	ip, ip, #1
 801948c:	f100 814b 	bmi.w	8019726 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8019490:	4561      	cmp	r1, ip
 8019492:	f2c0 8148 	blt.w	8019726 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8019496:	3301      	adds	r3, #1
 8019498:	f100 8145 	bmi.w	8019726 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801949c:	429a      	cmp	r2, r3
 801949e:	f2c0 8142 	blt.w	8019726 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80194a2:	9b07      	ldr	r3, [sp, #28]
 80194a4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80194a6:	9317      	str	r3, [sp, #92]	; 0x5c
 80194a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80194aa:	2b00      	cmp	r3, #0
 80194ac:	f340 8165 	ble.w	801977a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80194b0:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80194b2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80194b4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80194b8:	689b      	ldr	r3, [r3, #8]
 80194ba:	1422      	asrs	r2, r4, #16
 80194bc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80194c0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80194c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80194c8:	f100 81d5 	bmi.w	8019876 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80194cc:	f103 38ff 	add.w	r8, r3, #4294967295
 80194d0:	4542      	cmp	r2, r8
 80194d2:	f280 81d0 	bge.w	8019876 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80194d6:	f1bc 0f00 	cmp.w	ip, #0
 80194da:	f2c0 81cc 	blt.w	8019876 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80194de:	f10e 38ff 	add.w	r8, lr, #4294967295
 80194e2:	45c4      	cmp	ip, r8
 80194e4:	f280 81c7 	bge.w	8019876 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80194e8:	b21b      	sxth	r3, r3
 80194ea:	fb0c 2203 	mla	r2, ip, r3, r2
 80194ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80194f0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80194f4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80194f8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80194fc:	2900      	cmp	r1, #0
 80194fe:	f000 8182 	beq.w	8019806 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8019502:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019506:	950b      	str	r5, [sp, #44]	; 0x2c
 8019508:	0e2d      	lsrs	r5, r5, #24
 801950a:	9512      	str	r5, [sp, #72]	; 0x48
 801950c:	b180      	cbz	r0, 8019530 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801950e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8019512:	3b01      	subs	r3, #1
 8019514:	009b      	lsls	r3, r3, #2
 8019516:	3304      	adds	r3, #4
 8019518:	eb08 0c03 	add.w	ip, r8, r3
 801951c:	f858 3003 	ldr.w	r3, [r8, r3]
 8019520:	9308      	str	r3, [sp, #32]
 8019522:	0e1b      	lsrs	r3, r3, #24
 8019524:	9310      	str	r3, [sp, #64]	; 0x40
 8019526:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801952a:	930c      	str	r3, [sp, #48]	; 0x30
 801952c:	0e1b      	lsrs	r3, r3, #24
 801952e:	9313      	str	r3, [sp, #76]	; 0x4c
 8019530:	b289      	uxth	r1, r1
 8019532:	b280      	uxth	r0, r0
 8019534:	fb01 f900 	mul.w	r9, r1, r0
 8019538:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801953c:	0109      	lsls	r1, r1, #4
 801953e:	eba1 0809 	sub.w	r8, r1, r9
 8019542:	b280      	uxth	r0, r0
 8019544:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8019548:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801954a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801954c:	fa1f f888 	uxth.w	r8, r8
 8019550:	1a09      	subs	r1, r1, r0
 8019552:	b289      	uxth	r1, r1
 8019554:	fb08 f303 	mul.w	r3, r8, r3
 8019558:	fb01 330e 	mla	r3, r1, lr, r3
 801955c:	fb00 3305 	mla	r3, r0, r5, r3
 8019560:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019562:	fb09 3305 	mla	r3, r9, r5, r3
 8019566:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801956a:	2b00      	cmp	r3, #0
 801956c:	f000 80d2 	beq.w	8019714 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8019570:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019574:	d01b      	beq.n	80195ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8019576:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801957a:	fb0e fa0a 	mul.w	sl, lr, sl
 801957e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019582:	fb0e fe02 	mul.w	lr, lr, r2
 8019586:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801958a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801958e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019592:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019596:	4452      	add	r2, sl
 8019598:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801959c:	0a12      	lsrs	r2, r2, #8
 801959e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80195a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80195a6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80195aa:	ea42 020c 	orr.w	r2, r2, ip
 80195ae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80195b0:	2dff      	cmp	r5, #255	; 0xff
 80195b2:	d021      	beq.n	80195f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80195b4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80195b6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80195ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80195bc:	fb05 fb0b 	mul.w	fp, r5, fp
 80195c0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80195c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80195c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80195c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80195cc:	fb05 fa0a 	mul.w	sl, r5, sl
 80195d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80195d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80195d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80195dc:	44de      	add	lr, fp
 80195de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80195e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80195e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80195ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80195ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80195f2:	ea4e 050a 	orr.w	r5, lr, sl
 80195f6:	950b      	str	r5, [sp, #44]	; 0x2c
 80195f8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80195fa:	2dff      	cmp	r5, #255	; 0xff
 80195fc:	d021      	beq.n	8019642 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80195fe:	9d08      	ldr	r5, [sp, #32]
 8019600:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019604:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019606:	fb05 fb0b 	mul.w	fp, r5, fp
 801960a:	9d08      	ldr	r5, [sp, #32]
 801960c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8019610:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019612:	fb05 fa0e 	mul.w	sl, r5, lr
 8019616:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801961a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801961e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019622:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019626:	44de      	add	lr, fp
 8019628:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801962c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019630:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019634:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019638:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801963c:	ea4e 050a 	orr.w	r5, lr, sl
 8019640:	9508      	str	r5, [sp, #32]
 8019642:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019644:	2dff      	cmp	r5, #255	; 0xff
 8019646:	d021      	beq.n	801968c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019648:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801964a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801964e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019650:	fb05 fb0b 	mul.w	fp, r5, fp
 8019654:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019656:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801965a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801965c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019660:	fb05 fa0a 	mul.w	sl, r5, sl
 8019664:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019668:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801966c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019670:	44de      	add	lr, fp
 8019672:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019676:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801967a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801967e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019682:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019686:	ea4e 050a 	orr.w	r5, lr, sl
 801968a:	950c      	str	r5, [sp, #48]	; 0x30
 801968c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801968e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019692:	9d08      	ldr	r5, [sp, #32]
 8019694:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8019698:	fb08 fc0c 	mul.w	ip, r8, ip
 801969c:	fb01 cc0e 	mla	ip, r1, lr, ip
 80196a0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80196a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80196a6:	fb00 cc0e 	mla	ip, r0, lr, ip
 80196aa:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80196ae:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80196b0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80196b4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80196b8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80196bc:	fb08 f80e 	mul.w	r8, r8, lr
 80196c0:	fb01 8202 	mla	r2, r1, r2, r8
 80196c4:	9908      	ldr	r1, [sp, #32]
 80196c6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80196ca:	990c      	ldr	r1, [sp, #48]	; 0x30
 80196cc:	fb00 220a 	mla	r2, r0, sl, r2
 80196d0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80196d4:	fb09 2900 	mla	r9, r9, r0, r2
 80196d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80196dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80196e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80196e4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80196e8:	ea4c 0c09 	orr.w	ip, ip, r9
 80196ec:	2bff      	cmp	r3, #255	; 0xff
 80196ee:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80196f2:	f040 8091 	bne.w	8019818 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80196f6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80196fa:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80196fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019702:	f022 0207 	bic.w	r2, r2, #7
 8019706:	431a      	orrs	r2, r3
 8019708:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801970c:	ea4c 0c02 	orr.w	ip, ip, r2
 8019710:	f8a7 c000 	strh.w	ip, [r7]
 8019714:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8019716:	441c      	add	r4, r3
 8019718:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801971a:	441e      	add	r6, r3
 801971c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801971e:	3b01      	subs	r3, #1
 8019720:	3702      	adds	r7, #2
 8019722:	9317      	str	r3, [sp, #92]	; 0x5c
 8019724:	e6c0      	b.n	80194a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8019726:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8019728:	441c      	add	r4, r3
 801972a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801972c:	441e      	add	r6, r3
 801972e:	9b07      	ldr	r3, [sp, #28]
 8019730:	3b01      	subs	r3, #1
 8019732:	9307      	str	r3, [sp, #28]
 8019734:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019736:	3302      	adds	r3, #2
 8019738:	930a      	str	r3, [sp, #40]	; 0x28
 801973a:	e695      	b.n	8019468 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801973c:	d024      	beq.n	8019788 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801973e:	9b07      	ldr	r3, [sp, #28]
 8019740:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8019742:	3b01      	subs	r3, #1
 8019744:	fb00 4003 	mla	r0, r0, r3, r4
 8019748:	1400      	asrs	r0, r0, #16
 801974a:	f53f aeaa 	bmi.w	80194a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801974e:	3901      	subs	r1, #1
 8019750:	4288      	cmp	r0, r1
 8019752:	f6bf aea6 	bge.w	80194a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019756:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8019758:	fb01 6303 	mla	r3, r1, r3, r6
 801975c:	141b      	asrs	r3, r3, #16
 801975e:	f53f aea0 	bmi.w	80194a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019762:	3a01      	subs	r2, #1
 8019764:	4293      	cmp	r3, r2
 8019766:	f6bf ae9c 	bge.w	80194a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801976a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801976e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8019772:	f1bb 0f00 	cmp.w	fp, #0
 8019776:	f300 809a 	bgt.w	80198ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801977a:	9b07      	ldr	r3, [sp, #28]
 801977c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019780:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019782:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019786:	930a      	str	r3, [sp, #40]	; 0x28
 8019788:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801978a:	2b00      	cmp	r3, #0
 801978c:	f340 81eb 	ble.w	8019b66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 8019790:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019794:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019798:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801979c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801979e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80197a2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80197a6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80197aa:	eef0 6a48 	vmov.f32	s13, s16
 80197ae:	ee69 7a27 	vmul.f32	s15, s18, s15
 80197b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80197b6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80197ba:	ee16 4a90 	vmov	r4, s13
 80197be:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80197c2:	eef0 6a68 	vmov.f32	s13, s17
 80197c6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80197ca:	ee18 2a10 	vmov	r2, s16
 80197ce:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80197d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80197d6:	ee18 2a90 	vmov	r2, s17
 80197da:	932f      	str	r3, [sp, #188]	; 0xbc
 80197dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80197de:	fb92 f3f3 	sdiv	r3, r2, r3
 80197e2:	9330      	str	r3, [sp, #192]	; 0xc0
 80197e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80197e6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80197e8:	3b01      	subs	r3, #1
 80197ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80197ee:	9316      	str	r3, [sp, #88]	; 0x58
 80197f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80197f2:	bf08      	it	eq
 80197f4:	4613      	moveq	r3, r2
 80197f6:	ee16 6a90 	vmov	r6, s13
 80197fa:	9307      	str	r3, [sp, #28]
 80197fc:	eef0 8a67 	vmov.f32	s17, s15
 8019800:	eeb0 8a47 	vmov.f32	s16, s14
 8019804:	e622      	b.n	801944c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019806:	2800      	cmp	r0, #0
 8019808:	f43f ae92 	beq.w	8019530 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801980c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019810:	9308      	str	r3, [sp, #32]
 8019812:	0e1b      	lsrs	r3, r3, #24
 8019814:	9310      	str	r3, [sp, #64]	; 0x40
 8019816:	e68b      	b.n	8019530 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8019818:	8839      	ldrh	r1, [r7, #0]
 801981a:	4dd5      	ldr	r5, [pc, #852]	; (8019b70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 801981c:	43db      	mvns	r3, r3
 801981e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8019822:	fa5f f883 	uxtb.w	r8, r3
 8019826:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801982a:	fb0e fe08 	mul.w	lr, lr, r8
 801982e:	10c8      	asrs	r0, r1, #3
 8019830:	00cb      	lsls	r3, r1, #3
 8019832:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019836:	f10e 0101 	add.w	r1, lr, #1
 801983a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801983e:	fb00 f008 	mul.w	r0, r0, r8
 8019842:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8019846:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801984a:	f100 0e01 	add.w	lr, r0, #1
 801984e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8019852:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8019856:	b2db      	uxtb	r3, r3
 8019858:	b2c9      	uxtb	r1, r1
 801985a:	00d2      	lsls	r2, r2, #3
 801985c:	fb03 f308 	mul.w	r3, r3, r8
 8019860:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8019864:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019868:	430a      	orrs	r2, r1
 801986a:	1c59      	adds	r1, r3, #1
 801986c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019870:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019874:	e748      	b.n	8019708 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019876:	f112 0801 	adds.w	r8, r2, #1
 801987a:	f53f af4b 	bmi.w	8019714 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801987e:	4543      	cmp	r3, r8
 8019880:	f6ff af48 	blt.w	8019714 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8019884:	f11c 0801 	adds.w	r8, ip, #1
 8019888:	f53f af44 	bmi.w	8019714 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801988c:	45c6      	cmp	lr, r8
 801988e:	f6ff af41 	blt.w	8019714 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8019892:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8019896:	fa0f f28e 	sxth.w	r2, lr
 801989a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801989e:	9200      	str	r2, [sp, #0]
 80198a0:	b21b      	sxth	r3, r3
 80198a2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80198a4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80198a6:	4639      	mov	r1, r7
 80198a8:	f7ff fc54 	bl	8019154 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80198ac:	e732      	b.n	8019714 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 80198ae:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80198b0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80198b2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80198b6:	1421      	asrs	r1, r4, #16
 80198b8:	1433      	asrs	r3, r6, #16
 80198ba:	fb07 1303 	mla	r3, r7, r3, r1
 80198be:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80198c0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80198c4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80198c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80198cc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80198d0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80198d4:	2a00      	cmp	r2, #0
 80198d6:	f000 8107 	beq.w	8019ae8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ec>
 80198da:	684d      	ldr	r5, [r1, #4]
 80198dc:	950d      	str	r5, [sp, #52]	; 0x34
 80198de:	0e2d      	lsrs	r5, r5, #24
 80198e0:	9514      	str	r5, [sp, #80]	; 0x50
 80198e2:	b178      	cbz	r0, 8019904 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80198e4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80198e8:	3f01      	subs	r7, #1
 80198ea:	00bf      	lsls	r7, r7, #2
 80198ec:	3704      	adds	r7, #4
 80198ee:	eb01 0e07 	add.w	lr, r1, r7
 80198f2:	59c9      	ldr	r1, [r1, r7]
 80198f4:	9109      	str	r1, [sp, #36]	; 0x24
 80198f6:	0e09      	lsrs	r1, r1, #24
 80198f8:	9111      	str	r1, [sp, #68]	; 0x44
 80198fa:	f8de 1004 	ldr.w	r1, [lr, #4]
 80198fe:	910e      	str	r1, [sp, #56]	; 0x38
 8019900:	0e09      	lsrs	r1, r1, #24
 8019902:	9115      	str	r1, [sp, #84]	; 0x54
 8019904:	b292      	uxth	r2, r2
 8019906:	b280      	uxth	r0, r0
 8019908:	fb02 f900 	mul.w	r9, r2, r0
 801990c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8019910:	0112      	lsls	r2, r2, #4
 8019912:	eba2 0e09 	sub.w	lr, r2, r9
 8019916:	b280      	uxth	r0, r0
 8019918:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801991c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801991e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019920:	fa1f fe8e 	uxth.w	lr, lr
 8019924:	1a09      	subs	r1, r1, r0
 8019926:	b289      	uxth	r1, r1
 8019928:	fb0e f202 	mul.w	r2, lr, r2
 801992c:	fb01 220c 	mla	r2, r1, ip, r2
 8019930:	fb00 2205 	mla	r2, r0, r5, r2
 8019934:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019936:	fb09 2205 	mla	r2, r9, r5, r2
 801993a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801993e:	2a00      	cmp	r2, #0
 8019940:	f000 80c9 	beq.w	8019ad6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8019944:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019948:	d019      	beq.n	801997e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 801994a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801994e:	fb0c fa0a 	mul.w	sl, ip, sl
 8019952:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019956:	fb0c fc03 	mul.w	ip, ip, r3
 801995a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801995e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019962:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019966:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801996a:	4453      	add	r3, sl
 801996c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019970:	0a1b      	lsrs	r3, r3, #8
 8019972:	0a3f      	lsrs	r7, r7, #8
 8019974:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019978:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801997c:	433b      	orrs	r3, r7
 801997e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019980:	2dff      	cmp	r5, #255	; 0xff
 8019982:	d020      	beq.n	80199c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8019984:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019986:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801998a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801998c:	436f      	muls	r7, r5
 801998e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019990:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019994:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019996:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801999a:	fb05 fa0a 	mul.w	sl, r5, sl
 801999e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80199a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80199a6:	44bc      	add	ip, r7
 80199a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80199ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80199b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80199b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80199b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80199bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80199c0:	ea4c 050a 	orr.w	r5, ip, sl
 80199c4:	950d      	str	r5, [sp, #52]	; 0x34
 80199c6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80199c8:	2dff      	cmp	r5, #255	; 0xff
 80199ca:	d020      	beq.n	8019a0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 80199cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80199ce:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80199d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80199d4:	436f      	muls	r7, r5
 80199d6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80199d8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80199dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80199de:	fb05 fa0c 	mul.w	sl, r5, ip
 80199e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80199e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80199ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80199ee:	44bc      	add	ip, r7
 80199f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80199f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80199f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80199fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019a04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019a08:	ea4c 050a 	orr.w	r5, ip, sl
 8019a0c:	9509      	str	r5, [sp, #36]	; 0x24
 8019a0e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019a10:	2dff      	cmp	r5, #255	; 0xff
 8019a12:	d020      	beq.n	8019a56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 8019a14:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019a16:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019a1a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019a1c:	436f      	muls	r7, r5
 8019a1e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019a20:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019a24:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019a26:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019a2a:	fb05 fa0a 	mul.w	sl, r5, sl
 8019a2e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019a32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019a36:	44bc      	add	ip, r7
 8019a38:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019a3c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019a40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019a44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019a48:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019a4c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019a50:	ea4c 050a 	orr.w	r5, ip, sl
 8019a54:	950e      	str	r5, [sp, #56]	; 0x38
 8019a56:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019a58:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019a5c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019a5e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019a62:	fb0e f707 	mul.w	r7, lr, r7
 8019a66:	fb01 770c 	mla	r7, r1, ip, r7
 8019a6a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019a6e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019a70:	fb00 770c 	mla	r7, r0, ip, r7
 8019a74:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019a78:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019a7a:	fb09 770c 	mla	r7, r9, ip, r7
 8019a7e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019a82:	fb0e fe0c 	mul.w	lr, lr, ip
 8019a86:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019a8a:	fb01 e303 	mla	r3, r1, r3, lr
 8019a8e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019a90:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8019a94:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019a96:	fb00 330a 	mla	r3, r0, sl, r3
 8019a9a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8019a9e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019aa2:	0a3f      	lsrs	r7, r7, #8
 8019aa4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019aa8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019aac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019ab0:	ea47 070c 	orr.w	r7, r7, ip
 8019ab4:	2aff      	cmp	r2, #255	; 0xff
 8019ab6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8019aba:	d11e      	bne.n	8019afa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fe>
 8019abc:	097a      	lsrs	r2, r7, #5
 8019abe:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8019ac2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019ac6:	f023 0307 	bic.w	r3, r3, #7
 8019aca:	4313      	orrs	r3, r2
 8019acc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8019ad0:	431f      	orrs	r7, r3
 8019ad2:	f8a8 7000 	strh.w	r7, [r8]
 8019ad6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8019ad8:	441c      	add	r4, r3
 8019ada:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019adc:	f108 0802 	add.w	r8, r8, #2
 8019ae0:	441e      	add	r6, r3
 8019ae2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019ae6:	e644      	b.n	8019772 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8019ae8:	2800      	cmp	r0, #0
 8019aea:	f43f af0b 	beq.w	8019904 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8019aee:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8019af2:	9109      	str	r1, [sp, #36]	; 0x24
 8019af4:	0e09      	lsrs	r1, r1, #24
 8019af6:	9111      	str	r1, [sp, #68]	; 0x44
 8019af8:	e704      	b.n	8019904 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8019afa:	f8b8 1000 	ldrh.w	r1, [r8]
 8019afe:	43d2      	mvns	r2, r2
 8019b00:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8019b04:	fa5f fe82 	uxtb.w	lr, r2
 8019b08:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b0c:	fb0c fc0e 	mul.w	ip, ip, lr
 8019b10:	10c8      	asrs	r0, r1, #3
 8019b12:	00ca      	lsls	r2, r1, #3
 8019b14:	f10c 0101 	add.w	r1, ip, #1
 8019b18:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8019b1c:	0c39      	lsrs	r1, r7, #16
 8019b1e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8019b22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019b26:	4912      	ldr	r1, [pc, #72]	; (8019b70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>)
 8019b28:	fb00 f00e 	mul.w	r0, r0, lr
 8019b2c:	fa5f fc8c 	uxtb.w	ip, ip
 8019b30:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8019b34:	b2d2      	uxtb	r2, r2
 8019b36:	1c41      	adds	r1, r0, #1
 8019b38:	fb02 f20e 	mul.w	r2, r2, lr
 8019b3c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019b40:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019b44:	1c51      	adds	r1, r2, #1
 8019b46:	00c0      	lsls	r0, r0, #3
 8019b48:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019b4c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019b50:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8019b54:	ea4c 0c00 	orr.w	ip, ip, r0
 8019b58:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8019b5c:	ea47 0c0c 	orr.w	ip, r7, ip
 8019b60:	f8a8 c000 	strh.w	ip, [r8]
 8019b64:	e7b7      	b.n	8019ad6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8019b66:	b01b      	add	sp, #108	; 0x6c
 8019b68:	ecbd 8b08 	vpop	{d8-d11}
 8019b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b70:	fffff800 	.word	0xfffff800

08019b74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8019b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019b78:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8019b7c:	2c00      	cmp	r4, #0
 8019b7e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8019b82:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8019b86:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019b8a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8019b8e:	fb04 ce03 	mla	lr, r4, r3, ip
 8019b92:	db60      	blt.n	8019c56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8019b94:	45a1      	cmp	r9, r4
 8019b96:	dd5e      	ble.n	8019c56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8019b98:	f1bc 0f00 	cmp.w	ip, #0
 8019b9c:	db59      	blt.n	8019c52 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8019b9e:	45e0      	cmp	r8, ip
 8019ba0:	dd57      	ble.n	8019c52 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8019ba2:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8019ba6:	f01e 0f01 	tst.w	lr, #1
 8019baa:	5c16      	ldrb	r6, [r2, r0]
 8019bac:	bf0c      	ite	eq
 8019bae:	f006 060f 	andeq.w	r6, r6, #15
 8019bb2:	1136      	asrne	r6, r6, #4
 8019bb4:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8019bb8:	b2f6      	uxtb	r6, r6
 8019bba:	f11c 0001 	adds.w	r0, ip, #1
 8019bbe:	d44d      	bmi.n	8019c5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8019bc0:	4580      	cmp	r8, r0
 8019bc2:	dd4b      	ble.n	8019c5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8019bc4:	2d00      	cmp	r5, #0
 8019bc6:	d04b      	beq.n	8019c60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8019bc8:	f10e 0a01 	add.w	sl, lr, #1
 8019bcc:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8019bd0:	f01a 0f01 	tst.w	sl, #1
 8019bd4:	5c10      	ldrb	r0, [r2, r0]
 8019bd6:	bf0c      	ite	eq
 8019bd8:	f000 000f 	andeq.w	r0, r0, #15
 8019bdc:	1100      	asrne	r0, r0, #4
 8019bde:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019be2:	b2c0      	uxtb	r0, r0
 8019be4:	3401      	adds	r4, #1
 8019be6:	d43f      	bmi.n	8019c68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8019be8:	45a1      	cmp	r9, r4
 8019bea:	dd3d      	ble.n	8019c68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8019bec:	2f00      	cmp	r7, #0
 8019bee:	f000 80a8 	beq.w	8019d42 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ce>
 8019bf2:	f1bc 0f00 	cmp.w	ip, #0
 8019bf6:	db35      	blt.n	8019c64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8019bf8:	45e0      	cmp	r8, ip
 8019bfa:	dd33      	ble.n	8019c64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8019bfc:	eb03 090e 	add.w	r9, r3, lr
 8019c00:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8019c04:	f019 0f01 	tst.w	r9, #1
 8019c08:	5d14      	ldrb	r4, [r2, r4]
 8019c0a:	bf0c      	ite	eq
 8019c0c:	f004 040f 	andeq.w	r4, r4, #15
 8019c10:	1124      	asrne	r4, r4, #4
 8019c12:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8019c16:	b2e4      	uxtb	r4, r4
 8019c18:	f11c 0c01 	adds.w	ip, ip, #1
 8019c1c:	d427      	bmi.n	8019c6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8019c1e:	45e0      	cmp	r8, ip
 8019c20:	dd25      	ble.n	8019c6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8019c22:	b335      	cbz	r5, 8019c72 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8019c24:	3301      	adds	r3, #1
 8019c26:	449e      	add	lr, r3
 8019c28:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8019c2c:	f01e 0f01 	tst.w	lr, #1
 8019c30:	5cd2      	ldrb	r2, [r2, r3]
 8019c32:	bf0c      	ite	eq
 8019c34:	f002 020f 	andeq.w	r2, r2, #15
 8019c38:	1112      	asrne	r2, r2, #4
 8019c3a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019c3e:	b2d3      	uxtb	r3, r2
 8019c40:	2d0f      	cmp	r5, #15
 8019c42:	d917      	bls.n	8019c74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8019c44:	4b42      	ldr	r3, [pc, #264]	; (8019d50 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1dc>)
 8019c46:	4a43      	ldr	r2, [pc, #268]	; (8019d54 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e0>)
 8019c48:	4843      	ldr	r0, [pc, #268]	; (8019d58 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e4>)
 8019c4a:	f240 11f9 	movw	r1, #505	; 0x1f9
 8019c4e:	f001 f823 	bl	801ac98 <__assert_func>
 8019c52:	2600      	movs	r6, #0
 8019c54:	e7b1      	b.n	8019bba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8019c56:	2000      	movs	r0, #0
 8019c58:	4606      	mov	r6, r0
 8019c5a:	e7c3      	b.n	8019be4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019c5c:	2000      	movs	r0, #0
 8019c5e:	e7c1      	b.n	8019be4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019c60:	4628      	mov	r0, r5
 8019c62:	e7bf      	b.n	8019be4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019c64:	2400      	movs	r4, #0
 8019c66:	e7d7      	b.n	8019c18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8019c68:	2300      	movs	r3, #0
 8019c6a:	461c      	mov	r4, r3
 8019c6c:	e7e8      	b.n	8019c40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8019c6e:	2300      	movs	r3, #0
 8019c70:	e7e6      	b.n	8019c40 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8019c72:	462b      	mov	r3, r5
 8019c74:	2f0f      	cmp	r7, #15
 8019c76:	d8e5      	bhi.n	8019c44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8019c78:	b2ad      	uxth	r5, r5
 8019c7a:	b2bf      	uxth	r7, r7
 8019c7c:	fb05 fc07 	mul.w	ip, r5, r7
 8019c80:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8019c84:	012d      	lsls	r5, r5, #4
 8019c86:	b2bf      	uxth	r7, r7
 8019c88:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8019c8c:	eba5 050c 	sub.w	r5, r5, ip
 8019c90:	1bd2      	subs	r2, r2, r7
 8019c92:	b2ad      	uxth	r5, r5
 8019c94:	b292      	uxth	r2, r2
 8019c96:	4368      	muls	r0, r5
 8019c98:	fb06 0002 	mla	r0, r6, r2, r0
 8019c9c:	fb07 0404 	mla	r4, r7, r4, r0
 8019ca0:	fb0c 4303 	mla	r3, ip, r3, r4
 8019ca4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019ca8:	b1b3      	cbz	r3, 8019cd8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8019caa:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8019cae:	435a      	muls	r2, r3
 8019cb0:	1c53      	adds	r3, r2, #1
 8019cb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019cb6:	4a29      	ldr	r2, [pc, #164]	; (8019d5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1e8>)
 8019cb8:	121b      	asrs	r3, r3, #8
 8019cba:	6812      	ldr	r2, [r2, #0]
 8019cbc:	2bff      	cmp	r3, #255	; 0xff
 8019cbe:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8019cc2:	d10b      	bne.n	8019cdc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x168>
 8019cc4:	4b26      	ldr	r3, [pc, #152]	; (8019d60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ec>)
 8019cc6:	0950      	lsrs	r0, r2, #5
 8019cc8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019ccc:	4033      	ands	r3, r6
 8019cce:	4318      	orrs	r0, r3
 8019cd0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019cd4:	4302      	orrs	r2, r0
 8019cd6:	800a      	strh	r2, [r1, #0]
 8019cd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019cdc:	880d      	ldrh	r5, [r1, #0]
 8019cde:	b29f      	uxth	r7, r3
 8019ce0:	122c      	asrs	r4, r5, #8
 8019ce2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8019ce6:	43db      	mvns	r3, r3
 8019ce8:	b2db      	uxtb	r3, r3
 8019cea:	fb10 f007 	smulbb	r0, r0, r7
 8019cee:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8019cf2:	fb04 0403 	mla	r4, r4, r3, r0
 8019cf6:	b2f6      	uxtb	r6, r6
 8019cf8:	10e8      	asrs	r0, r5, #3
 8019cfa:	b2d2      	uxtb	r2, r2
 8019cfc:	00ed      	lsls	r5, r5, #3
 8019cfe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019d02:	fb12 f207 	smulbb	r2, r2, r7
 8019d06:	fb16 f607 	smulbb	r6, r6, r7
 8019d0a:	b2ed      	uxtb	r5, r5
 8019d0c:	b2a4      	uxth	r4, r4
 8019d0e:	fb00 6603 	mla	r6, r0, r3, r6
 8019d12:	fb05 2303 	mla	r3, r5, r3, r2
 8019d16:	b29a      	uxth	r2, r3
 8019d18:	1c63      	adds	r3, r4, #1
 8019d1a:	b2b0      	uxth	r0, r6
 8019d1c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8019d20:	1c53      	adds	r3, r2, #1
 8019d22:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019d26:	1c42      	adds	r2, r0, #1
 8019d28:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019d2c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8019d30:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019d34:	0940      	lsrs	r0, r0, #5
 8019d36:	4323      	orrs	r3, r4
 8019d38:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019d3c:	4303      	orrs	r3, r0
 8019d3e:	800b      	strh	r3, [r1, #0]
 8019d40:	e7ca      	b.n	8019cd8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x164>
 8019d42:	2d0f      	cmp	r5, #15
 8019d44:	f63f af7e 	bhi.w	8019c44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8019d48:	463b      	mov	r3, r7
 8019d4a:	463c      	mov	r4, r7
 8019d4c:	e794      	b.n	8019c78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8019d4e:	bf00      	nop
 8019d50:	0801eaff 	.word	0x0801eaff
 8019d54:	0801f02e 	.word	0x0801f02e
 8019d58:	0801eacc 	.word	0x0801eacc
 8019d5c:	2000a4f8 	.word	0x2000a4f8
 8019d60:	00fff800 	.word	0x00fff800

08019d64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d68:	ed2d 8b08 	vpush	{d8-d11}
 8019d6c:	b097      	sub	sp, #92	; 0x5c
 8019d6e:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8019d72:	9214      	str	r2, [sp, #80]	; 0x50
 8019d74:	9309      	str	r3, [sp, #36]	; 0x24
 8019d76:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019d78:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8019d7c:	910d      	str	r1, [sp, #52]	; 0x34
 8019d7e:	930f      	str	r3, [sp, #60]	; 0x3c
 8019d80:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8019d84:	9015      	str	r0, [sp, #84]	; 0x54
 8019d86:	6850      	ldr	r0, [r2, #4]
 8019d88:	6812      	ldr	r2, [r2, #0]
 8019d8a:	fb00 1303 	mla	r3, r0, r3, r1
 8019d8e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019d92:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019d94:	689b      	ldr	r3, [r3, #8]
 8019d96:	3301      	adds	r3, #1
 8019d98:	f023 0301 	bic.w	r3, r3, #1
 8019d9c:	930a      	str	r3, [sp, #40]	; 0x28
 8019d9e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019da0:	681f      	ldr	r7, [r3, #0]
 8019da2:	eeb0 aa40 	vmov.f32	s20, s0
 8019da6:	eef0 9a60 	vmov.f32	s19, s1
 8019daa:	eeb0 9a41 	vmov.f32	s18, s2
 8019dae:	eeb0 8a62 	vmov.f32	s16, s5
 8019db2:	eef0 8a43 	vmov.f32	s17, s6
 8019db6:	eef0 ba44 	vmov.f32	s23, s8
 8019dba:	eeb0 ba64 	vmov.f32	s22, s9
 8019dbe:	eef0 aa45 	vmov.f32	s21, s10
 8019dc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019dc4:	2b00      	cmp	r3, #0
 8019dc6:	dc03      	bgt.n	8019dd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019dc8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019dca:	2b00      	cmp	r3, #0
 8019dcc:	f340 8287 	ble.w	801a2de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8019dd0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019dd2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019dd6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019dda:	1e48      	subs	r0, r1, #1
 8019ddc:	f102 3cff 	add.w	ip, r2, #4294967295
 8019de0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019de2:	2b00      	cmp	r3, #0
 8019de4:	f340 80c4 	ble.w	8019f70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8019de8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019dec:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019df0:	d406      	bmi.n	8019e00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019df2:	4586      	cmp	lr, r0
 8019df4:	da04      	bge.n	8019e00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019df6:	2b00      	cmp	r3, #0
 8019df8:	db02      	blt.n	8019e00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019dfa:	4563      	cmp	r3, ip
 8019dfc:	f2c0 80b9 	blt.w	8019f72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8019e00:	f11e 0e01 	adds.w	lr, lr, #1
 8019e04:	f100 80aa 	bmi.w	8019f5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8019e08:	4571      	cmp	r1, lr
 8019e0a:	f2c0 80a7 	blt.w	8019f5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8019e0e:	3301      	adds	r3, #1
 8019e10:	f100 80a4 	bmi.w	8019f5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8019e14:	429a      	cmp	r2, r3
 8019e16:	f2c0 80a1 	blt.w	8019f5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8019e1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019e1c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8019e20:	930e      	str	r3, [sp, #56]	; 0x38
 8019e22:	46c8      	mov	r8, r9
 8019e24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e26:	2b00      	cmp	r3, #0
 8019e28:	f340 80c3 	ble.w	8019fb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8019e2c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019e2e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8019e32:	1423      	asrs	r3, r4, #16
 8019e34:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019e38:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019e3c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019e40:	f100 814d 	bmi.w	801a0de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8019e44:	f10c 3bff 	add.w	fp, ip, #4294967295
 8019e48:	455b      	cmp	r3, fp
 8019e4a:	f280 8148 	bge.w	801a0de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8019e4e:	2800      	cmp	r0, #0
 8019e50:	f2c0 8145 	blt.w	801a0de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8019e54:	f10e 3bff 	add.w	fp, lr, #4294967295
 8019e58:	4558      	cmp	r0, fp
 8019e5a:	f280 8140 	bge.w	801a0de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8019e5e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019e60:	fb00 3305 	mla	r3, r0, r5, r3
 8019e64:	0858      	lsrs	r0, r3, #1
 8019e66:	07dd      	lsls	r5, r3, #31
 8019e68:	f817 c000 	ldrb.w	ip, [r7, r0]
 8019e6c:	bf54      	ite	pl
 8019e6e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019e72:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019e76:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019e7a:	fa5f fc8c 	uxtb.w	ip, ip
 8019e7e:	2a00      	cmp	r2, #0
 8019e80:	f000 80db 	beq.w	801a03a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019e84:	1c58      	adds	r0, r3, #1
 8019e86:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8019e8a:	07c0      	lsls	r0, r0, #31
 8019e8c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019e90:	bf54      	ite	pl
 8019e92:	f00e 0e0f 	andpl.w	lr, lr, #15
 8019e96:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8019e9a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8019e9e:	fa5f f08e 	uxtb.w	r0, lr
 8019ea2:	9010      	str	r0, [sp, #64]	; 0x40
 8019ea4:	b1c9      	cbz	r1, 8019eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8019ea6:	4453      	add	r3, sl
 8019ea8:	0858      	lsrs	r0, r3, #1
 8019eaa:	07dd      	lsls	r5, r3, #31
 8019eac:	5c38      	ldrb	r0, [r7, r0]
 8019eae:	bf54      	ite	pl
 8019eb0:	f000 000f 	andpl.w	r0, r0, #15
 8019eb4:	1100      	asrmi	r0, r0, #4
 8019eb6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019eba:	3301      	adds	r3, #1
 8019ebc:	b2c0      	uxtb	r0, r0
 8019ebe:	900b      	str	r0, [sp, #44]	; 0x2c
 8019ec0:	0858      	lsrs	r0, r3, #1
 8019ec2:	07dd      	lsls	r5, r3, #31
 8019ec4:	f817 e000 	ldrb.w	lr, [r7, r0]
 8019ec8:	bf54      	ite	pl
 8019eca:	f00e 030f 	andpl.w	r3, lr, #15
 8019ece:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8019ed2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019ed6:	b2db      	uxtb	r3, r3
 8019ed8:	9311      	str	r3, [sp, #68]	; 0x44
 8019eda:	b292      	uxth	r2, r2
 8019edc:	b289      	uxth	r1, r1
 8019ede:	fb02 f301 	mul.w	r3, r2, r1
 8019ee2:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019ee6:	0112      	lsls	r2, r2, #4
 8019ee8:	b289      	uxth	r1, r1
 8019eea:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8019eee:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019ef0:	1ad2      	subs	r2, r2, r3
 8019ef2:	1a40      	subs	r0, r0, r1
 8019ef4:	b292      	uxth	r2, r2
 8019ef6:	436a      	muls	r2, r5
 8019ef8:	b280      	uxth	r0, r0
 8019efa:	fb0c 2c00 	mla	ip, ip, r0, r2
 8019efe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019f00:	fb01 c102 	mla	r1, r1, r2, ip
 8019f04:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019f06:	fb03 1302 	mla	r3, r3, r2, r1
 8019f0a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019f0e:	b1db      	cbz	r3, 8019f48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8019f10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019f12:	4353      	muls	r3, r2
 8019f14:	1c5a      	adds	r2, r3, #1
 8019f16:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019f1a:	4ac6      	ldr	r2, [pc, #792]	; (801a234 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 8019f1c:	121b      	asrs	r3, r3, #8
 8019f1e:	6812      	ldr	r2, [r2, #0]
 8019f20:	2bff      	cmp	r3, #255	; 0xff
 8019f22:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8019f26:	f040 8099 	bne.w	801a05c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>
 8019f2a:	0953      	lsrs	r3, r2, #5
 8019f2c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8019f30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019f34:	f02c 0c07 	bic.w	ip, ip, #7
 8019f38:	ea43 0c0c 	orr.w	ip, r3, ip
 8019f3c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019f40:	ea4c 0202 	orr.w	r2, ip, r2
 8019f44:	f8a8 2000 	strh.w	r2, [r8]
 8019f48:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019f4a:	441c      	add	r4, r3
 8019f4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019f4e:	441e      	add	r6, r3
 8019f50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019f52:	3b01      	subs	r3, #1
 8019f54:	f108 0802 	add.w	r8, r8, #2
 8019f58:	930e      	str	r3, [sp, #56]	; 0x38
 8019f5a:	e763      	b.n	8019e24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 8019f5c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019f5e:	441c      	add	r4, r3
 8019f60:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019f62:	441e      	add	r6, r3
 8019f64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f66:	3b01      	subs	r3, #1
 8019f68:	9309      	str	r3, [sp, #36]	; 0x24
 8019f6a:	f109 0902 	add.w	r9, r9, #2
 8019f6e:	e737      	b.n	8019de0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019f70:	d024      	beq.n	8019fbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8019f72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f74:	982b      	ldr	r0, [sp, #172]	; 0xac
 8019f76:	3b01      	subs	r3, #1
 8019f78:	fb00 4003 	mla	r0, r0, r3, r4
 8019f7c:	1400      	asrs	r0, r0, #16
 8019f7e:	f53f af4c 	bmi.w	8019e1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019f82:	3901      	subs	r1, #1
 8019f84:	4288      	cmp	r0, r1
 8019f86:	f6bf af48 	bge.w	8019e1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019f8a:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8019f8c:	fb01 6303 	mla	r3, r1, r3, r6
 8019f90:	141b      	asrs	r3, r3, #16
 8019f92:	f53f af42 	bmi.w	8019e1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019f96:	3a01      	subs	r2, #1
 8019f98:	4293      	cmp	r3, r2
 8019f9a:	f6bf af3e 	bge.w	8019e1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019f9e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8019fa2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019fa6:	930e      	str	r3, [sp, #56]	; 0x38
 8019fa8:	46c8      	mov	r8, r9
 8019faa:	f1bb 0f00 	cmp.w	fp, #0
 8019fae:	f300 80b7 	bgt.w	801a120 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8019fb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fb4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019fb8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019fbc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019fbe:	2b00      	cmp	r3, #0
 8019fc0:	f340 818d 	ble.w	801a2de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57a>
 8019fc4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019fc8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019fcc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019fd0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019fd2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019fd6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019fda:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019fde:	eef0 6a48 	vmov.f32	s13, s16
 8019fe2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019fe6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019fea:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019fee:	ee16 4a90 	vmov	r4, s13
 8019ff2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019ff6:	eef0 6a68 	vmov.f32	s13, s17
 8019ffa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019ffe:	ee18 2a10 	vmov	r2, s16
 801a002:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a006:	fb92 f3f3 	sdiv	r3, r2, r3
 801a00a:	ee18 2a90 	vmov	r2, s17
 801a00e:	932b      	str	r3, [sp, #172]	; 0xac
 801a010:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a012:	fb92 f3f3 	sdiv	r3, r2, r3
 801a016:	932c      	str	r3, [sp, #176]	; 0xb0
 801a018:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a01a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a01c:	3b01      	subs	r3, #1
 801a01e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a022:	930d      	str	r3, [sp, #52]	; 0x34
 801a024:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a026:	bf08      	it	eq
 801a028:	4613      	moveq	r3, r2
 801a02a:	ee16 6a90 	vmov	r6, s13
 801a02e:	9309      	str	r3, [sp, #36]	; 0x24
 801a030:	eef0 8a67 	vmov.f32	s17, s15
 801a034:	eeb0 8a47 	vmov.f32	s16, s14
 801a038:	e6c3      	b.n	8019dc2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a03a:	2900      	cmp	r1, #0
 801a03c:	f43f af4d 	beq.w	8019eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a040:	eb0a 0003 	add.w	r0, sl, r3
 801a044:	0843      	lsrs	r3, r0, #1
 801a046:	07c0      	lsls	r0, r0, #31
 801a048:	5cfb      	ldrb	r3, [r7, r3]
 801a04a:	bf54      	ite	pl
 801a04c:	f003 030f 	andpl.w	r3, r3, #15
 801a050:	111b      	asrmi	r3, r3, #4
 801a052:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a056:	b2db      	uxtb	r3, r3
 801a058:	930b      	str	r3, [sp, #44]	; 0x2c
 801a05a:	e73e      	b.n	8019eda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a05c:	f8b8 e000 	ldrh.w	lr, [r8]
 801a060:	fa1f fb83 	uxth.w	fp, r3
 801a064:	ea4f 202e 	mov.w	r0, lr, asr #8
 801a068:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801a06c:	43db      	mvns	r3, r3
 801a06e:	b2db      	uxtb	r3, r3
 801a070:	fb11 f10b 	smulbb	r1, r1, fp
 801a074:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a078:	fb00 1003 	mla	r0, r0, r3, r1
 801a07c:	fa5f fc8c 	uxtb.w	ip, ip
 801a080:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801a084:	b2d2      	uxtb	r2, r2
 801a086:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a08a:	b280      	uxth	r0, r0
 801a08c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a090:	fb1c fc0b 	smulbb	ip, ip, fp
 801a094:	fa5f fe8e 	uxtb.w	lr, lr
 801a098:	fb12 fb0b 	smulbb	fp, r2, fp
 801a09c:	fb01 cc03 	mla	ip, r1, r3, ip
 801a0a0:	fb0e bb03 	mla	fp, lr, r3, fp
 801a0a4:	1c43      	adds	r3, r0, #1
 801a0a6:	fa1f fc8c 	uxth.w	ip, ip
 801a0aa:	fa1f fb8b 	uxth.w	fp, fp
 801a0ae:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a0b2:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801a0b6:	f10c 0101 	add.w	r1, ip, #1
 801a0ba:	f10b 0001 	add.w	r0, fp, #1
 801a0be:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a0c2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a0c6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801a0ca:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a0ce:	4318      	orrs	r0, r3
 801a0d0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a0d4:	ea40 000c 	orr.w	r0, r0, ip
 801a0d8:	f8a8 0000 	strh.w	r0, [r8]
 801a0dc:	e734      	b.n	8019f48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801a0de:	f113 0b01 	adds.w	fp, r3, #1
 801a0e2:	f53f af31 	bmi.w	8019f48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801a0e6:	45dc      	cmp	ip, fp
 801a0e8:	f6ff af2e 	blt.w	8019f48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801a0ec:	f110 0b01 	adds.w	fp, r0, #1
 801a0f0:	f53f af2a 	bmi.w	8019f48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801a0f4:	45de      	cmp	lr, fp
 801a0f6:	f6ff af27 	blt.w	8019f48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801a0fa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a0fc:	9302      	str	r3, [sp, #8]
 801a0fe:	fa0f f38e 	sxth.w	r3, lr
 801a102:	9301      	str	r3, [sp, #4]
 801a104:	fa0f f38c 	sxth.w	r3, ip
 801a108:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801a10c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a110:	9300      	str	r3, [sp, #0]
 801a112:	463a      	mov	r2, r7
 801a114:	4653      	mov	r3, sl
 801a116:	4641      	mov	r1, r8
 801a118:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a11a:	f7ff fd2b 	bl	8019b74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801a11e:	e713      	b.n	8019f48 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801a120:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801a122:	1422      	asrs	r2, r4, #16
 801a124:	1433      	asrs	r3, r6, #16
 801a126:	fb05 2303 	mla	r3, r5, r3, r2
 801a12a:	085a      	lsrs	r2, r3, #1
 801a12c:	07dd      	lsls	r5, r3, #31
 801a12e:	5cba      	ldrb	r2, [r7, r2]
 801a130:	bf54      	ite	pl
 801a132:	f002 020f 	andpl.w	r2, r2, #15
 801a136:	1112      	asrmi	r2, r2, #4
 801a138:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a13c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a140:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a144:	b2d2      	uxtb	r2, r2
 801a146:	2900      	cmp	r1, #0
 801a148:	d076      	beq.n	801a238 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 801a14a:	f103 0e01 	add.w	lr, r3, #1
 801a14e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a152:	f01e 0f01 	tst.w	lr, #1
 801a156:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a15a:	bf0c      	ite	eq
 801a15c:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a160:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a164:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a168:	fa5f f58c 	uxtb.w	r5, ip
 801a16c:	9512      	str	r5, [sp, #72]	; 0x48
 801a16e:	b300      	cbz	r0, 801a1b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a170:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a172:	442b      	add	r3, r5
 801a174:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a178:	07dd      	lsls	r5, r3, #31
 801a17a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a17e:	bf54      	ite	pl
 801a180:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a184:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a188:	3301      	adds	r3, #1
 801a18a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a18e:	fa5f f58c 	uxtb.w	r5, ip
 801a192:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a196:	950c      	str	r5, [sp, #48]	; 0x30
 801a198:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a19c:	07dd      	lsls	r5, r3, #31
 801a19e:	bf54      	ite	pl
 801a1a0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a1a4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a1a8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a1ac:	fa5f f38c 	uxtb.w	r3, ip
 801a1b0:	9313      	str	r3, [sp, #76]	; 0x4c
 801a1b2:	b289      	uxth	r1, r1
 801a1b4:	b280      	uxth	r0, r0
 801a1b6:	fb01 f300 	mul.w	r3, r1, r0
 801a1ba:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801a1be:	0109      	lsls	r1, r1, #4
 801a1c0:	b280      	uxth	r0, r0
 801a1c2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801a1c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a1c8:	1ac9      	subs	r1, r1, r3
 801a1ca:	ebac 0c00 	sub.w	ip, ip, r0
 801a1ce:	b289      	uxth	r1, r1
 801a1d0:	4369      	muls	r1, r5
 801a1d2:	fa1f fc8c 	uxth.w	ip, ip
 801a1d6:	fb02 120c 	mla	r2, r2, ip, r1
 801a1da:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a1dc:	fb00 2001 	mla	r0, r0, r1, r2
 801a1e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a1e2:	fb03 0302 	mla	r3, r3, r2, r0
 801a1e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a1ea:	b1d3      	cbz	r3, 801a222 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801a1ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a1ee:	4353      	muls	r3, r2
 801a1f0:	1c5a      	adds	r2, r3, #1
 801a1f2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a1f6:	4a0f      	ldr	r2, [pc, #60]	; (801a234 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>)
 801a1f8:	121b      	asrs	r3, r3, #8
 801a1fa:	6812      	ldr	r2, [r2, #0]
 801a1fc:	2bff      	cmp	r3, #255	; 0xff
 801a1fe:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801a202:	d12d      	bne.n	801a260 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 801a204:	0953      	lsrs	r3, r2, #5
 801a206:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801a20a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a20e:	f02c 0c07 	bic.w	ip, ip, #7
 801a212:	ea43 0c0c 	orr.w	ip, r3, ip
 801a216:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a21a:	ea4c 0202 	orr.w	r2, ip, r2
 801a21e:	f8a8 2000 	strh.w	r2, [r8]
 801a222:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a224:	441c      	add	r4, r3
 801a226:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a228:	f108 0802 	add.w	r8, r8, #2
 801a22c:	441e      	add	r6, r3
 801a22e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a232:	e6ba      	b.n	8019faa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801a234:	2000a4f8 	.word	0x2000a4f8
 801a238:	2800      	cmp	r0, #0
 801a23a:	d0ba      	beq.n	801a1b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a23c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a23e:	442b      	add	r3, r5
 801a240:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a244:	07db      	lsls	r3, r3, #31
 801a246:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a24a:	bf54      	ite	pl
 801a24c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a250:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a254:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a258:	fa5f f38c 	uxtb.w	r3, ip
 801a25c:	930c      	str	r3, [sp, #48]	; 0x30
 801a25e:	e7a8      	b.n	801a1b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801a260:	f8b8 e000 	ldrh.w	lr, [r8]
 801a264:	fa1f fa83 	uxth.w	sl, r3
 801a268:	ea4f 202e 	mov.w	r0, lr, asr #8
 801a26c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801a270:	43db      	mvns	r3, r3
 801a272:	b2db      	uxtb	r3, r3
 801a274:	fb11 f10a 	smulbb	r1, r1, sl
 801a278:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a27c:	fb00 1003 	mla	r0, r0, r3, r1
 801a280:	b2d2      	uxtb	r2, r2
 801a282:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801a286:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a28a:	fa5f fe8e 	uxtb.w	lr, lr
 801a28e:	fb12 f20a 	smulbb	r2, r2, sl
 801a292:	fb0e 2203 	mla	r2, lr, r3, r2
 801a296:	fa5f fc8c 	uxtb.w	ip, ip
 801a29a:	b280      	uxth	r0, r0
 801a29c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a2a0:	b292      	uxth	r2, r2
 801a2a2:	fb1c fc0a 	smulbb	ip, ip, sl
 801a2a6:	fb01 cc03 	mla	ip, r1, r3, ip
 801a2aa:	1c43      	adds	r3, r0, #1
 801a2ac:	1c51      	adds	r1, r2, #1
 801a2ae:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a2b2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801a2b6:	fa1f fc8c 	uxth.w	ip, ip
 801a2ba:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a2be:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a2c2:	4308      	orrs	r0, r1
 801a2c4:	f10c 0101 	add.w	r1, ip, #1
 801a2c8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a2cc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a2d0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a2d4:	ea40 000c 	orr.w	r0, r0, ip
 801a2d8:	f8a8 0000 	strh.w	r0, [r8]
 801a2dc:	e7a1      	b.n	801a222 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801a2de:	b017      	add	sp, #92	; 0x5c
 801a2e0:	ecbd 8b08 	vpop	{d8-d11}
 801a2e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a2e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801a2e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a2ec:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a2f0:	2c00      	cmp	r4, #0
 801a2f2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a2f6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a2fa:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a2fe:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a302:	fb04 ce03 	mla	lr, r4, r3, ip
 801a306:	db60      	blt.n	801a3ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801a308:	45a1      	cmp	r9, r4
 801a30a:	dd5e      	ble.n	801a3ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801a30c:	f1bc 0f00 	cmp.w	ip, #0
 801a310:	db59      	blt.n	801a3c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801a312:	45e0      	cmp	r8, ip
 801a314:	dd57      	ble.n	801a3c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801a316:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a31a:	f01e 0f01 	tst.w	lr, #1
 801a31e:	5c16      	ldrb	r6, [r2, r0]
 801a320:	bf0c      	ite	eq
 801a322:	f006 060f 	andeq.w	r6, r6, #15
 801a326:	1136      	asrne	r6, r6, #4
 801a328:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a32c:	b2f6      	uxtb	r6, r6
 801a32e:	f11c 0001 	adds.w	r0, ip, #1
 801a332:	d44d      	bmi.n	801a3d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a334:	4580      	cmp	r8, r0
 801a336:	dd4b      	ble.n	801a3d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a338:	2d00      	cmp	r5, #0
 801a33a:	d04b      	beq.n	801a3d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801a33c:	f10e 0a01 	add.w	sl, lr, #1
 801a340:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a344:	f01a 0f01 	tst.w	sl, #1
 801a348:	5c10      	ldrb	r0, [r2, r0]
 801a34a:	bf0c      	ite	eq
 801a34c:	f000 000f 	andeq.w	r0, r0, #15
 801a350:	1100      	asrne	r0, r0, #4
 801a352:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a356:	b2c0      	uxtb	r0, r0
 801a358:	3401      	adds	r4, #1
 801a35a:	d43f      	bmi.n	801a3dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a35c:	45a1      	cmp	r9, r4
 801a35e:	dd3d      	ble.n	801a3dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a360:	2f00      	cmp	r7, #0
 801a362:	f000 8093 	beq.w	801a48c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801a366:	f1bc 0f00 	cmp.w	ip, #0
 801a36a:	db35      	blt.n	801a3d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a36c:	45e0      	cmp	r8, ip
 801a36e:	dd33      	ble.n	801a3d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a370:	eb03 090e 	add.w	r9, r3, lr
 801a374:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a378:	f019 0f01 	tst.w	r9, #1
 801a37c:	5d14      	ldrb	r4, [r2, r4]
 801a37e:	bf0c      	ite	eq
 801a380:	f004 040f 	andeq.w	r4, r4, #15
 801a384:	1124      	asrne	r4, r4, #4
 801a386:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a38a:	b2e4      	uxtb	r4, r4
 801a38c:	f11c 0c01 	adds.w	ip, ip, #1
 801a390:	d427      	bmi.n	801a3e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a392:	45e0      	cmp	r8, ip
 801a394:	dd25      	ble.n	801a3e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a396:	b335      	cbz	r5, 801a3e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801a398:	3301      	adds	r3, #1
 801a39a:	449e      	add	lr, r3
 801a39c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a3a0:	f01e 0f01 	tst.w	lr, #1
 801a3a4:	5cd2      	ldrb	r2, [r2, r3]
 801a3a6:	bf0c      	ite	eq
 801a3a8:	f002 020f 	andeq.w	r2, r2, #15
 801a3ac:	1112      	asrne	r2, r2, #4
 801a3ae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a3b2:	b2d3      	uxtb	r3, r2
 801a3b4:	2d0f      	cmp	r5, #15
 801a3b6:	d917      	bls.n	801a3e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801a3b8:	4b37      	ldr	r3, [pc, #220]	; (801a498 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 801a3ba:	4a38      	ldr	r2, [pc, #224]	; (801a49c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 801a3bc:	4838      	ldr	r0, [pc, #224]	; (801a4a0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801a3be:	f240 11f9 	movw	r1, #505	; 0x1f9
 801a3c2:	f000 fc69 	bl	801ac98 <__assert_func>
 801a3c6:	2600      	movs	r6, #0
 801a3c8:	e7b1      	b.n	801a32e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801a3ca:	2000      	movs	r0, #0
 801a3cc:	4606      	mov	r6, r0
 801a3ce:	e7c3      	b.n	801a358 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a3d0:	2000      	movs	r0, #0
 801a3d2:	e7c1      	b.n	801a358 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a3d4:	4628      	mov	r0, r5
 801a3d6:	e7bf      	b.n	801a358 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a3d8:	2400      	movs	r4, #0
 801a3da:	e7d7      	b.n	801a38c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801a3dc:	2300      	movs	r3, #0
 801a3de:	461c      	mov	r4, r3
 801a3e0:	e7e8      	b.n	801a3b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a3e2:	2300      	movs	r3, #0
 801a3e4:	e7e6      	b.n	801a3b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a3e6:	462b      	mov	r3, r5
 801a3e8:	2f0f      	cmp	r7, #15
 801a3ea:	d8e5      	bhi.n	801a3b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801a3ec:	b2ad      	uxth	r5, r5
 801a3ee:	b2bf      	uxth	r7, r7
 801a3f0:	fb05 fc07 	mul.w	ip, r5, r7
 801a3f4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a3f8:	012d      	lsls	r5, r5, #4
 801a3fa:	b2bf      	uxth	r7, r7
 801a3fc:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a400:	eba5 050c 	sub.w	r5, r5, ip
 801a404:	1bd2      	subs	r2, r2, r7
 801a406:	b2ad      	uxth	r5, r5
 801a408:	b292      	uxth	r2, r2
 801a40a:	4368      	muls	r0, r5
 801a40c:	fb06 0002 	mla	r0, r6, r2, r0
 801a410:	fb07 0404 	mla	r4, r7, r4, r0
 801a414:	fb0c 4303 	mla	r3, ip, r3, r4
 801a418:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a41c:	b3a3      	cbz	r3, 801a488 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801a41e:	4a21      	ldr	r2, [pc, #132]	; (801a4a4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801a420:	880e      	ldrh	r6, [r1, #0]
 801a422:	6815      	ldr	r5, [r2, #0]
 801a424:	1234      	asrs	r4, r6, #8
 801a426:	b29a      	uxth	r2, r3
 801a428:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801a42c:	43db      	mvns	r3, r3
 801a42e:	b2db      	uxtb	r3, r3
 801a430:	fb10 f002 	smulbb	r0, r0, r2
 801a434:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801a438:	fb04 0403 	mla	r4, r4, r3, r0
 801a43c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801a440:	10f0      	asrs	r0, r6, #3
 801a442:	b2ed      	uxtb	r5, r5
 801a444:	00f6      	lsls	r6, r6, #3
 801a446:	fb17 f702 	smulbb	r7, r7, r2
 801a44a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a44e:	fb15 f202 	smulbb	r2, r5, r2
 801a452:	b2f6      	uxtb	r6, r6
 801a454:	b2a4      	uxth	r4, r4
 801a456:	fb00 7003 	mla	r0, r0, r3, r7
 801a45a:	fb06 2303 	mla	r3, r6, r3, r2
 801a45e:	b29a      	uxth	r2, r3
 801a460:	1c63      	adds	r3, r4, #1
 801a462:	b280      	uxth	r0, r0
 801a464:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801a468:	1c53      	adds	r3, r2, #1
 801a46a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a46e:	1c42      	adds	r2, r0, #1
 801a470:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a474:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801a478:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a47c:	0940      	lsrs	r0, r0, #5
 801a47e:	4323      	orrs	r3, r4
 801a480:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a484:	4303      	orrs	r3, r0
 801a486:	800b      	strh	r3, [r1, #0]
 801a488:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a48c:	2d0f      	cmp	r5, #15
 801a48e:	d893      	bhi.n	801a3b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801a490:	463b      	mov	r3, r7
 801a492:	463c      	mov	r4, r7
 801a494:	e7aa      	b.n	801a3ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801a496:	bf00      	nop
 801a498:	0801eaff 	.word	0x0801eaff
 801a49c:	0801f02e 	.word	0x0801f02e
 801a4a0:	0801eacc 	.word	0x0801eacc
 801a4a4:	2000a4f8 	.word	0x2000a4f8

0801a4a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a4a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4ac:	ed2d 8b08 	vpush	{d8-d11}
 801a4b0:	b093      	sub	sp, #76	; 0x4c
 801a4b2:	461d      	mov	r5, r3
 801a4b4:	920c      	str	r2, [sp, #48]	; 0x30
 801a4b6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a4b8:	9107      	str	r1, [sp, #28]
 801a4ba:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801a4be:	9011      	str	r0, [sp, #68]	; 0x44
 801a4c0:	6850      	ldr	r0, [r2, #4]
 801a4c2:	6812      	ldr	r2, [r2, #0]
 801a4c4:	fb00 1303 	mla	r3, r0, r3, r1
 801a4c8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a4cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a4ce:	689b      	ldr	r3, [r3, #8]
 801a4d0:	3301      	adds	r3, #1
 801a4d2:	f023 0301 	bic.w	r3, r3, #1
 801a4d6:	9306      	str	r3, [sp, #24]
 801a4d8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a4da:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801a4de:	681f      	ldr	r7, [r3, #0]
 801a4e0:	eeb0 aa40 	vmov.f32	s20, s0
 801a4e4:	eef0 9a60 	vmov.f32	s19, s1
 801a4e8:	eeb0 9a41 	vmov.f32	s18, s2
 801a4ec:	eeb0 8a62 	vmov.f32	s16, s5
 801a4f0:	eef0 8a43 	vmov.f32	s17, s6
 801a4f4:	eef0 ba44 	vmov.f32	s23, s8
 801a4f8:	eeb0 ba64 	vmov.f32	s22, s9
 801a4fc:	eef0 aa45 	vmov.f32	s21, s10
 801a500:	9b07      	ldr	r3, [sp, #28]
 801a502:	2b00      	cmp	r3, #0
 801a504:	dc03      	bgt.n	801a50e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a506:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a508:	2b00      	cmp	r3, #0
 801a50a:	f340 8267 	ble.w	801a9dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801a50e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a510:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a514:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a518:	1e48      	subs	r0, r1, #1
 801a51a:	f102 3cff 	add.w	ip, r2, #4294967295
 801a51e:	2d00      	cmp	r5, #0
 801a520:	f340 80b8 	ble.w	801a694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801a524:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a528:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a52c:	d406      	bmi.n	801a53c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a52e:	4586      	cmp	lr, r0
 801a530:	da04      	bge.n	801a53c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a532:	2b00      	cmp	r3, #0
 801a534:	db02      	blt.n	801a53c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a536:	4563      	cmp	r3, ip
 801a538:	f2c0 80ad 	blt.w	801a696 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a53c:	f11e 0e01 	adds.w	lr, lr, #1
 801a540:	f100 80a0 	bmi.w	801a684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801a544:	4571      	cmp	r1, lr
 801a546:	f2c0 809d 	blt.w	801a684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801a54a:	3301      	adds	r3, #1
 801a54c:	f100 809a 	bmi.w	801a684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801a550:	429a      	cmp	r2, r3
 801a552:	f2c0 8097 	blt.w	801a684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801a556:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801a55a:	9509      	str	r5, [sp, #36]	; 0x24
 801a55c:	46c8      	mov	r8, r9
 801a55e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a560:	2b00      	cmp	r3, #0
 801a562:	f340 80b6 	ble.w	801a6d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a566:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801a56a:	9308      	str	r3, [sp, #32]
 801a56c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a56e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801a572:	1423      	asrs	r3, r4, #16
 801a574:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a578:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a57c:	f100 813e 	bmi.w	801a7fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a580:	f10c 3bff 	add.w	fp, ip, #4294967295
 801a584:	455b      	cmp	r3, fp
 801a586:	f280 8139 	bge.w	801a7fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a58a:	2800      	cmp	r0, #0
 801a58c:	f2c0 8136 	blt.w	801a7fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a590:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a594:	4558      	cmp	r0, fp
 801a596:	f280 8131 	bge.w	801a7fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801a59a:	9a06      	ldr	r2, [sp, #24]
 801a59c:	fb00 3302 	mla	r3, r0, r2, r3
 801a5a0:	0858      	lsrs	r0, r3, #1
 801a5a2:	07da      	lsls	r2, r3, #31
 801a5a4:	f817 c000 	ldrb.w	ip, [r7, r0]
 801a5a8:	9a08      	ldr	r2, [sp, #32]
 801a5aa:	bf54      	ite	pl
 801a5ac:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a5b0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a5b4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a5b8:	fa5f fc8c 	uxtb.w	ip, ip
 801a5bc:	2a00      	cmp	r2, #0
 801a5be:	f000 80cb 	beq.w	801a758 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801a5c2:	1c58      	adds	r0, r3, #1
 801a5c4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801a5c8:	07c0      	lsls	r0, r0, #31
 801a5ca:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a5ce:	bf54      	ite	pl
 801a5d0:	f00e 0e0f 	andpl.w	lr, lr, #15
 801a5d4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801a5d8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801a5dc:	fa5f fe8e 	uxtb.w	lr, lr
 801a5e0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801a5e4:	b1b9      	cbz	r1, 801a616 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a5e6:	4453      	add	r3, sl
 801a5e8:	0858      	lsrs	r0, r3, #1
 801a5ea:	07da      	lsls	r2, r3, #31
 801a5ec:	5c38      	ldrb	r0, [r7, r0]
 801a5ee:	bf54      	ite	pl
 801a5f0:	f000 000f 	andpl.w	r0, r0, #15
 801a5f4:	1100      	asrmi	r0, r0, #4
 801a5f6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a5fa:	b2c0      	uxtb	r0, r0
 801a5fc:	900a      	str	r0, [sp, #40]	; 0x28
 801a5fe:	1c58      	adds	r0, r3, #1
 801a600:	0843      	lsrs	r3, r0, #1
 801a602:	07c2      	lsls	r2, r0, #31
 801a604:	5cfb      	ldrb	r3, [r7, r3]
 801a606:	bf54      	ite	pl
 801a608:	f003 030f 	andpl.w	r3, r3, #15
 801a60c:	111b      	asrmi	r3, r3, #4
 801a60e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a612:	b2db      	uxtb	r3, r3
 801a614:	930e      	str	r3, [sp, #56]	; 0x38
 801a616:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801a61a:	b289      	uxth	r1, r1
 801a61c:	fb02 f301 	mul.w	r3, r2, r1
 801a620:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a624:	0112      	lsls	r2, r2, #4
 801a626:	b289      	uxth	r1, r1
 801a628:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801a62c:	1a40      	subs	r0, r0, r1
 801a62e:	fa1f fe80 	uxth.w	lr, r0
 801a632:	1ad2      	subs	r2, r2, r3
 801a634:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a636:	b292      	uxth	r2, r2
 801a638:	4342      	muls	r2, r0
 801a63a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801a63e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a640:	fb01 c102 	mla	r1, r1, r2, ip
 801a644:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a646:	fb03 1302 	mla	r3, r3, r2, r1
 801a64a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a64e:	2bff      	cmp	r3, #255	; 0xff
 801a650:	f040 8093 	bne.w	801a77a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801a654:	4bbe      	ldr	r3, [pc, #760]	; (801a950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801a656:	681a      	ldr	r2, [r3, #0]
 801a658:	4bbe      	ldr	r3, [pc, #760]	; (801a954 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801a65a:	0951      	lsrs	r1, r2, #5
 801a65c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801a660:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a664:	430b      	orrs	r3, r1
 801a666:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a66a:	4313      	orrs	r3, r2
 801a66c:	f8a8 3000 	strh.w	r3, [r8]
 801a670:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a672:	441c      	add	r4, r3
 801a674:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a676:	441e      	add	r6, r3
 801a678:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a67a:	3b01      	subs	r3, #1
 801a67c:	f108 0802 	add.w	r8, r8, #2
 801a680:	9309      	str	r3, [sp, #36]	; 0x24
 801a682:	e76c      	b.n	801a55e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801a684:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a686:	441c      	add	r4, r3
 801a688:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a68a:	3d01      	subs	r5, #1
 801a68c:	441e      	add	r6, r3
 801a68e:	f109 0902 	add.w	r9, r9, #2
 801a692:	e744      	b.n	801a51e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a694:	d021      	beq.n	801a6da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801a696:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801a698:	1e6b      	subs	r3, r5, #1
 801a69a:	fb00 4003 	mla	r0, r0, r3, r4
 801a69e:	1400      	asrs	r0, r0, #16
 801a6a0:	f53f af59 	bmi.w	801a556 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a6a4:	3901      	subs	r1, #1
 801a6a6:	4288      	cmp	r0, r1
 801a6a8:	f6bf af55 	bge.w	801a556 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a6ac:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801a6ae:	fb01 6303 	mla	r3, r1, r3, r6
 801a6b2:	141b      	asrs	r3, r3, #16
 801a6b4:	f53f af4f 	bmi.w	801a556 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a6b8:	3a01      	subs	r2, #1
 801a6ba:	4293      	cmp	r3, r2
 801a6bc:	f6bf af4b 	bge.w	801a556 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801a6c0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801a6c4:	9308      	str	r3, [sp, #32]
 801a6c6:	46a8      	mov	r8, r5
 801a6c8:	46ce      	mov	lr, r9
 801a6ca:	f1b8 0f00 	cmp.w	r8, #0
 801a6ce:	f300 80b5 	bgt.w	801a83c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801a6d2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a6d6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a6da:	9b07      	ldr	r3, [sp, #28]
 801a6dc:	2b00      	cmp	r3, #0
 801a6de:	f340 817d 	ble.w	801a9dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 801a6e2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a6e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a6ea:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a6ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a6f0:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a6f4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a6f8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a6fc:	eef0 6a48 	vmov.f32	s13, s16
 801a700:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a704:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a708:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a70c:	ee16 4a90 	vmov	r4, s13
 801a710:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a714:	eef0 6a68 	vmov.f32	s13, s17
 801a718:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a71c:	ee18 2a10 	vmov	r2, s16
 801a720:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a724:	fb92 f3f3 	sdiv	r3, r2, r3
 801a728:	ee18 2a90 	vmov	r2, s17
 801a72c:	9327      	str	r3, [sp, #156]	; 0x9c
 801a72e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a730:	fb92 f3f3 	sdiv	r3, r2, r3
 801a734:	9328      	str	r3, [sp, #160]	; 0xa0
 801a736:	9b07      	ldr	r3, [sp, #28]
 801a738:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a73a:	3b01      	subs	r3, #1
 801a73c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a740:	9307      	str	r3, [sp, #28]
 801a742:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a744:	ee16 6a90 	vmov	r6, s13
 801a748:	bf14      	ite	ne
 801a74a:	461d      	movne	r5, r3
 801a74c:	4615      	moveq	r5, r2
 801a74e:	eef0 8a67 	vmov.f32	s17, s15
 801a752:	eeb0 8a47 	vmov.f32	s16, s14
 801a756:	e6d3      	b.n	801a500 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a758:	2900      	cmp	r1, #0
 801a75a:	f43f af5c 	beq.w	801a616 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a75e:	eb0a 0003 	add.w	r0, sl, r3
 801a762:	0843      	lsrs	r3, r0, #1
 801a764:	07c0      	lsls	r0, r0, #31
 801a766:	5cfb      	ldrb	r3, [r7, r3]
 801a768:	bf54      	ite	pl
 801a76a:	f003 030f 	andpl.w	r3, r3, #15
 801a76e:	111b      	asrmi	r3, r3, #4
 801a770:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a774:	b2db      	uxtb	r3, r3
 801a776:	930a      	str	r3, [sp, #40]	; 0x28
 801a778:	e74d      	b.n	801a616 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801a77a:	2b00      	cmp	r3, #0
 801a77c:	f43f af78 	beq.w	801a670 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a780:	4a73      	ldr	r2, [pc, #460]	; (801a950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801a782:	f8b8 c000 	ldrh.w	ip, [r8]
 801a786:	6810      	ldr	r0, [r2, #0]
 801a788:	fa1f fe83 	uxth.w	lr, r3
 801a78c:	ea4f 212c 	mov.w	r1, ip, asr #8
 801a790:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801a794:	43db      	mvns	r3, r3
 801a796:	b2db      	uxtb	r3, r3
 801a798:	fb12 f20e 	smulbb	r2, r2, lr
 801a79c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a7a0:	fb01 2103 	mla	r1, r1, r3, r2
 801a7a4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801a7a8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801a7ac:	b2c0      	uxtb	r0, r0
 801a7ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a7b2:	fb1b fb0e 	smulbb	fp, fp, lr
 801a7b6:	b289      	uxth	r1, r1
 801a7b8:	fb10 fe0e 	smulbb	lr, r0, lr
 801a7bc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a7c0:	fa5f fc8c 	uxtb.w	ip, ip
 801a7c4:	fb02 b203 	mla	r2, r2, r3, fp
 801a7c8:	1c48      	adds	r0, r1, #1
 801a7ca:	fb0c e303 	mla	r3, ip, r3, lr
 801a7ce:	b292      	uxth	r2, r2
 801a7d0:	b29b      	uxth	r3, r3
 801a7d2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801a7d6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801a7da:	f102 0b01 	add.w	fp, r2, #1
 801a7de:	1c59      	adds	r1, r3, #1
 801a7e0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a7e4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801a7e8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a7ec:	0952      	lsrs	r2, r2, #5
 801a7ee:	4301      	orrs	r1, r0
 801a7f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a7f4:	4311      	orrs	r1, r2
 801a7f6:	f8a8 1000 	strh.w	r1, [r8]
 801a7fa:	e739      	b.n	801a670 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a7fc:	f113 0b01 	adds.w	fp, r3, #1
 801a800:	f53f af36 	bmi.w	801a670 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a804:	45dc      	cmp	ip, fp
 801a806:	f6ff af33 	blt.w	801a670 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a80a:	f110 0b01 	adds.w	fp, r0, #1
 801a80e:	f53f af2f 	bmi.w	801a670 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a812:	45de      	cmp	lr, fp
 801a814:	f6ff af2c 	blt.w	801a670 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a818:	9a08      	ldr	r2, [sp, #32]
 801a81a:	9302      	str	r3, [sp, #8]
 801a81c:	fa0f f38e 	sxth.w	r3, lr
 801a820:	9301      	str	r3, [sp, #4]
 801a822:	fa0f f38c 	sxth.w	r3, ip
 801a826:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801a82a:	9105      	str	r1, [sp, #20]
 801a82c:	9300      	str	r3, [sp, #0]
 801a82e:	463a      	mov	r2, r7
 801a830:	4653      	mov	r3, sl
 801a832:	4641      	mov	r1, r8
 801a834:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a836:	f7ff fd57 	bl	801a2e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801a83a:	e719      	b.n	801a670 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a83c:	9906      	ldr	r1, [sp, #24]
 801a83e:	1422      	asrs	r2, r4, #16
 801a840:	1433      	asrs	r3, r6, #16
 801a842:	fb01 2303 	mla	r3, r1, r3, r2
 801a846:	085a      	lsrs	r2, r3, #1
 801a848:	07d9      	lsls	r1, r3, #31
 801a84a:	5cba      	ldrb	r2, [r7, r2]
 801a84c:	bf54      	ite	pl
 801a84e:	f002 020f 	andpl.w	r2, r2, #15
 801a852:	1112      	asrmi	r2, r2, #4
 801a854:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a858:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a85c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a860:	b2d2      	uxtb	r2, r2
 801a862:	2800      	cmp	r0, #0
 801a864:	d062      	beq.n	801a92c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801a866:	f103 0a01 	add.w	sl, r3, #1
 801a86a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801a86e:	f01a 0f01 	tst.w	sl, #1
 801a872:	5c79      	ldrb	r1, [r7, r1]
 801a874:	bf0c      	ite	eq
 801a876:	f001 010f 	andeq.w	r1, r1, #15
 801a87a:	1109      	asrne	r1, r1, #4
 801a87c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a880:	b2c9      	uxtb	r1, r1
 801a882:	910f      	str	r1, [sp, #60]	; 0x3c
 801a884:	f1bc 0f00 	cmp.w	ip, #0
 801a888:	d019      	beq.n	801a8be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801a88a:	9908      	ldr	r1, [sp, #32]
 801a88c:	440b      	add	r3, r1
 801a88e:	0859      	lsrs	r1, r3, #1
 801a890:	f013 0f01 	tst.w	r3, #1
 801a894:	5c79      	ldrb	r1, [r7, r1]
 801a896:	bf0c      	ite	eq
 801a898:	f001 010f 	andeq.w	r1, r1, #15
 801a89c:	1109      	asrne	r1, r1, #4
 801a89e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a8a2:	b2c9      	uxtb	r1, r1
 801a8a4:	3301      	adds	r3, #1
 801a8a6:	910b      	str	r1, [sp, #44]	; 0x2c
 801a8a8:	0859      	lsrs	r1, r3, #1
 801a8aa:	07db      	lsls	r3, r3, #31
 801a8ac:	5c79      	ldrb	r1, [r7, r1]
 801a8ae:	bf54      	ite	pl
 801a8b0:	f001 010f 	andpl.w	r1, r1, #15
 801a8b4:	1109      	asrmi	r1, r1, #4
 801a8b6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a8ba:	b2c9      	uxtb	r1, r1
 801a8bc:	9110      	str	r1, [sp, #64]	; 0x40
 801a8be:	b280      	uxth	r0, r0
 801a8c0:	fa1f fc8c 	uxth.w	ip, ip
 801a8c4:	fb00 f30c 	mul.w	r3, r0, ip
 801a8c8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801a8cc:	0100      	lsls	r0, r0, #4
 801a8ce:	fa1f fc8c 	uxth.w	ip, ip
 801a8d2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801a8d6:	eba1 010c 	sub.w	r1, r1, ip
 801a8da:	fa1f fa81 	uxth.w	sl, r1
 801a8de:	1ac0      	subs	r0, r0, r3
 801a8e0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a8e2:	b280      	uxth	r0, r0
 801a8e4:	4348      	muls	r0, r1
 801a8e6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801a8e8:	fb02 020a 	mla	r2, r2, sl, r0
 801a8ec:	fb0c 2c01 	mla	ip, ip, r1, r2
 801a8f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a8f2:	fb03 c302 	mla	r3, r3, r2, ip
 801a8f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a8fa:	2bff      	cmp	r3, #255	; 0xff
 801a8fc:	d12c      	bne.n	801a958 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801a8fe:	4b14      	ldr	r3, [pc, #80]	; (801a950 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801a900:	681a      	ldr	r2, [r3, #0]
 801a902:	4b14      	ldr	r3, [pc, #80]	; (801a954 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801a904:	0951      	lsrs	r1, r2, #5
 801a906:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801a90a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a90e:	430b      	orrs	r3, r1
 801a910:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a914:	4313      	orrs	r3, r2
 801a916:	f8ae 3000 	strh.w	r3, [lr]
 801a91a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a91c:	441c      	add	r4, r3
 801a91e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a920:	f10e 0e02 	add.w	lr, lr, #2
 801a924:	441e      	add	r6, r3
 801a926:	f108 38ff 	add.w	r8, r8, #4294967295
 801a92a:	e6ce      	b.n	801a6ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801a92c:	f1bc 0f00 	cmp.w	ip, #0
 801a930:	d0c5      	beq.n	801a8be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801a932:	9908      	ldr	r1, [sp, #32]
 801a934:	440b      	add	r3, r1
 801a936:	0859      	lsrs	r1, r3, #1
 801a938:	07db      	lsls	r3, r3, #31
 801a93a:	5c79      	ldrb	r1, [r7, r1]
 801a93c:	bf54      	ite	pl
 801a93e:	f001 010f 	andpl.w	r1, r1, #15
 801a942:	1109      	asrmi	r1, r1, #4
 801a944:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a948:	b2c9      	uxtb	r1, r1
 801a94a:	910b      	str	r1, [sp, #44]	; 0x2c
 801a94c:	e7b7      	b.n	801a8be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x416>
 801a94e:	bf00      	nop
 801a950:	2000a4f8 	.word	0x2000a4f8
 801a954:	fffff800 	.word	0xfffff800
 801a958:	2b00      	cmp	r3, #0
 801a95a:	d0de      	beq.n	801a91a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801a95c:	4a22      	ldr	r2, [pc, #136]	; (801a9e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 801a95e:	f8be c000 	ldrh.w	ip, [lr]
 801a962:	6810      	ldr	r0, [r2, #0]
 801a964:	fa1f fa83 	uxth.w	sl, r3
 801a968:	ea4f 212c 	mov.w	r1, ip, asr #8
 801a96c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801a970:	43db      	mvns	r3, r3
 801a972:	b2db      	uxtb	r3, r3
 801a974:	fb12 f20a 	smulbb	r2, r2, sl
 801a978:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a97c:	fb01 2103 	mla	r1, r1, r3, r2
 801a980:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801a984:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801a988:	b2c0      	uxtb	r0, r0
 801a98a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a98e:	fa5f fc8c 	uxtb.w	ip, ip
 801a992:	fb10 f00a 	smulbb	r0, r0, sl
 801a996:	fb0c 0003 	mla	r0, ip, r3, r0
 801a99a:	b289      	uxth	r1, r1
 801a99c:	fb1b fb0a 	smulbb	fp, fp, sl
 801a9a0:	b280      	uxth	r0, r0
 801a9a2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a9a6:	fb02 b203 	mla	r2, r2, r3, fp
 801a9aa:	1c4b      	adds	r3, r1, #1
 801a9ac:	f100 0b01 	add.w	fp, r0, #1
 801a9b0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a9b4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801a9b8:	b292      	uxth	r2, r2
 801a9ba:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801a9be:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a9c2:	ea4b 0101 	orr.w	r1, fp, r1
 801a9c6:	f102 0b01 	add.w	fp, r2, #1
 801a9ca:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801a9ce:	0952      	lsrs	r2, r2, #5
 801a9d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a9d4:	4311      	orrs	r1, r2
 801a9d6:	f8ae 1000 	strh.w	r1, [lr]
 801a9da:	e79e      	b.n	801a91a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801a9dc:	b013      	add	sp, #76	; 0x4c
 801a9de:	ecbd 8b08 	vpop	{d8-d11}
 801a9e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9e6:	bf00      	nop
 801a9e8:	2000a4f8 	.word	0x2000a4f8

0801a9ec <CRC_Lock>:
 801a9ec:	b530      	push	{r4, r5, lr}
 801a9ee:	4a20      	ldr	r2, [pc, #128]	; (801aa70 <CRC_Lock+0x84>)
 801a9f0:	6813      	ldr	r3, [r2, #0]
 801a9f2:	f023 0301 	bic.w	r3, r3, #1
 801a9f6:	6013      	str	r3, [r2, #0]
 801a9f8:	4b1e      	ldr	r3, [pc, #120]	; (801aa74 <CRC_Lock+0x88>)
 801a9fa:	681a      	ldr	r2, [r3, #0]
 801a9fc:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801aa00:	4022      	ands	r2, r4
 801aa02:	f24c 2540 	movw	r5, #49728	; 0xc240
 801aa06:	42aa      	cmp	r2, r5
 801aa08:	d005      	beq.n	801aa16 <CRC_Lock+0x2a>
 801aa0a:	681b      	ldr	r3, [r3, #0]
 801aa0c:	f24c 2270 	movw	r2, #49776	; 0xc270
 801aa10:	4023      	ands	r3, r4
 801aa12:	4293      	cmp	r3, r2
 801aa14:	d124      	bne.n	801aa60 <CRC_Lock+0x74>
 801aa16:	4b18      	ldr	r3, [pc, #96]	; (801aa78 <CRC_Lock+0x8c>)
 801aa18:	681b      	ldr	r3, [r3, #0]
 801aa1a:	bb0b      	cbnz	r3, 801aa60 <CRC_Lock+0x74>
 801aa1c:	4b17      	ldr	r3, [pc, #92]	; (801aa7c <CRC_Lock+0x90>)
 801aa1e:	681a      	ldr	r2, [r3, #0]
 801aa20:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801aa24:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801aa28:	d00d      	beq.n	801aa46 <CRC_Lock+0x5a>
 801aa2a:	681a      	ldr	r2, [r3, #0]
 801aa2c:	f240 4483 	movw	r4, #1155	; 0x483
 801aa30:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801aa34:	42a2      	cmp	r2, r4
 801aa36:	d006      	beq.n	801aa46 <CRC_Lock+0x5a>
 801aa38:	681b      	ldr	r3, [r3, #0]
 801aa3a:	f240 4285 	movw	r2, #1157	; 0x485
 801aa3e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801aa42:	4293      	cmp	r3, r2
 801aa44:	d10c      	bne.n	801aa60 <CRC_Lock+0x74>
 801aa46:	4b0e      	ldr	r3, [pc, #56]	; (801aa80 <CRC_Lock+0x94>)
 801aa48:	2201      	movs	r2, #1
 801aa4a:	601a      	str	r2, [r3, #0]
 801aa4c:	681a      	ldr	r2, [r3, #0]
 801aa4e:	2a00      	cmp	r2, #0
 801aa50:	d1fc      	bne.n	801aa4c <CRC_Lock+0x60>
 801aa52:	4b0c      	ldr	r3, [pc, #48]	; (801aa84 <CRC_Lock+0x98>)
 801aa54:	6018      	str	r0, [r3, #0]
 801aa56:	6818      	ldr	r0, [r3, #0]
 801aa58:	1a43      	subs	r3, r0, r1
 801aa5a:	4258      	negs	r0, r3
 801aa5c:	4158      	adcs	r0, r3
 801aa5e:	bd30      	pop	{r4, r5, pc}
 801aa60:	4b09      	ldr	r3, [pc, #36]	; (801aa88 <CRC_Lock+0x9c>)
 801aa62:	2201      	movs	r2, #1
 801aa64:	601a      	str	r2, [r3, #0]
 801aa66:	681a      	ldr	r2, [r3, #0]
 801aa68:	2a00      	cmp	r2, #0
 801aa6a:	d1fc      	bne.n	801aa66 <CRC_Lock+0x7a>
 801aa6c:	4b07      	ldr	r3, [pc, #28]	; (801aa8c <CRC_Lock+0xa0>)
 801aa6e:	e7f1      	b.n	801aa54 <CRC_Lock+0x68>
 801aa70:	e0002000 	.word	0xe0002000
 801aa74:	e000ed00 	.word	0xe000ed00
 801aa78:	e0042000 	.word	0xe0042000
 801aa7c:	5c001000 	.word	0x5c001000
 801aa80:	58024c08 	.word	0x58024c08
 801aa84:	58024c00 	.word	0x58024c00
 801aa88:	40023008 	.word	0x40023008
 801aa8c:	40023000 	.word	0x40023000

0801aa90 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801aa90:	6101      	str	r1, [r0, #16]
 801aa92:	4770      	bx	lr

0801aa94 <_ZN8touchgfx8Gestures4tickEv>:
 801aa94:	7b83      	ldrb	r3, [r0, #14]
 801aa96:	b14b      	cbz	r3, 801aaac <_ZN8touchgfx8Gestures4tickEv+0x18>
 801aa98:	8903      	ldrh	r3, [r0, #8]
 801aa9a:	3301      	adds	r3, #1
 801aa9c:	b29b      	uxth	r3, r3
 801aa9e:	2b07      	cmp	r3, #7
 801aaa0:	8103      	strh	r3, [r0, #8]
 801aaa2:	bf81      	itttt	hi
 801aaa4:	2300      	movhi	r3, #0
 801aaa6:	8143      	strhhi	r3, [r0, #10]
 801aaa8:	8183      	strhhi	r3, [r0, #12]
 801aaaa:	7383      	strbhi	r3, [r0, #14]
 801aaac:	4770      	bx	lr
	...

0801aab0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801aab0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801aab4:	4698      	mov	r8, r3
 801aab6:	8883      	ldrh	r3, [r0, #4]
 801aab8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801aabc:	eba8 0303 	sub.w	r3, r8, r3
 801aac0:	b21b      	sxth	r3, r3
 801aac2:	4604      	mov	r4, r0
 801aac4:	2b00      	cmp	r3, #0
 801aac6:	4617      	mov	r7, r2
 801aac8:	4a18      	ldr	r2, [pc, #96]	; (801ab2c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801aaca:	9200      	str	r2, [sp, #0]
 801aacc:	bfb8      	it	lt
 801aace:	425b      	neglt	r3, r3
 801aad0:	8aa2      	ldrh	r2, [r4, #20]
 801aad2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801aad6:	f8ad 800a 	strh.w	r8, [sp, #10]
 801aada:	b21b      	sxth	r3, r3
 801aadc:	460e      	mov	r6, r1
 801aade:	4293      	cmp	r3, r2
 801aae0:	88c1      	ldrh	r1, [r0, #6]
 801aae2:	f8ad 1008 	strh.w	r1, [sp, #8]
 801aae6:	f04f 0000 	mov.w	r0, #0
 801aaea:	f88d 0004 	strb.w	r0, [sp, #4]
 801aaee:	f8ad 500c 	strh.w	r5, [sp, #12]
 801aaf2:	dc07      	bgt.n	801ab04 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801aaf4:	1a69      	subs	r1, r5, r1
 801aaf6:	b209      	sxth	r1, r1
 801aaf8:	2900      	cmp	r1, #0
 801aafa:	bfb8      	it	lt
 801aafc:	4249      	neglt	r1, r1
 801aafe:	b209      	sxth	r1, r1
 801ab00:	428a      	cmp	r2, r1
 801ab02:	da10      	bge.n	801ab26 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801ab04:	6920      	ldr	r0, [r4, #16]
 801ab06:	6803      	ldr	r3, [r0, #0]
 801ab08:	4669      	mov	r1, sp
 801ab0a:	685b      	ldr	r3, [r3, #4]
 801ab0c:	4798      	blx	r3
 801ab0e:	eba8 0606 	sub.w	r6, r8, r6
 801ab12:	2300      	movs	r3, #0
 801ab14:	1bef      	subs	r7, r5, r7
 801ab16:	2001      	movs	r0, #1
 801ab18:	8123      	strh	r3, [r4, #8]
 801ab1a:	8166      	strh	r6, [r4, #10]
 801ab1c:	81a7      	strh	r7, [r4, #12]
 801ab1e:	f8a4 8004 	strh.w	r8, [r4, #4]
 801ab22:	80e5      	strh	r5, [r4, #6]
 801ab24:	73a0      	strb	r0, [r4, #14]
 801ab26:	b004      	add	sp, #16
 801ab28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ab2c:	0801df2c 	.word	0x0801df2c

0801ab30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801ab30:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ab32:	461e      	mov	r6, r3
 801ab34:	1e4b      	subs	r3, r1, #1
 801ab36:	2b01      	cmp	r3, #1
 801ab38:	b085      	sub	sp, #20
 801ab3a:	4604      	mov	r4, r0
 801ab3c:	460d      	mov	r5, r1
 801ab3e:	4617      	mov	r7, r2
 801ab40:	d84b      	bhi.n	801abda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801ab42:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801ab46:	1cd3      	adds	r3, r2, #3
 801ab48:	b29b      	uxth	r3, r3
 801ab4a:	2b06      	cmp	r3, #6
 801ab4c:	d916      	bls.n	801ab7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801ab4e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801abf0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ab52:	f8cd c004 	str.w	ip, [sp, #4]
 801ab56:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ab5a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ab5e:	6900      	ldr	r0, [r0, #16]
 801ab60:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ab64:	f04f 0c00 	mov.w	ip, #0
 801ab68:	f88d c008 	strb.w	ip, [sp, #8]
 801ab6c:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ab70:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ab74:	6803      	ldr	r3, [r0, #0]
 801ab76:	a901      	add	r1, sp, #4
 801ab78:	689b      	ldr	r3, [r3, #8]
 801ab7a:	4798      	blx	r3
 801ab7c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ab80:	1cd3      	adds	r3, r2, #3
 801ab82:	b29b      	uxth	r3, r3
 801ab84:	2b06      	cmp	r3, #6
 801ab86:	d916      	bls.n	801abb6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801ab88:	f8df c064 	ldr.w	ip, [pc, #100]	; 801abf0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ab8c:	f8cd c004 	str.w	ip, [sp, #4]
 801ab90:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ab94:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ab98:	6920      	ldr	r0, [r4, #16]
 801ab9a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ab9e:	f04f 0c01 	mov.w	ip, #1
 801aba2:	f88d c008 	strb.w	ip, [sp, #8]
 801aba6:	f8ad 200a 	strh.w	r2, [sp, #10]
 801abaa:	f8ad 300e 	strh.w	r3, [sp, #14]
 801abae:	6803      	ldr	r3, [r0, #0]
 801abb0:	a901      	add	r1, sp, #4
 801abb2:	689b      	ldr	r3, [r3, #8]
 801abb4:	4798      	blx	r3
 801abb6:	4b0d      	ldr	r3, [pc, #52]	; (801abec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801abb8:	9301      	str	r3, [sp, #4]
 801abba:	6920      	ldr	r0, [r4, #16]
 801abbc:	f88d 5008 	strb.w	r5, [sp, #8]
 801abc0:	2300      	movs	r3, #0
 801abc2:	f8ad 700a 	strh.w	r7, [sp, #10]
 801abc6:	f8ad 600c 	strh.w	r6, [sp, #12]
 801abca:	f8ad 300e 	strh.w	r3, [sp, #14]
 801abce:	6803      	ldr	r3, [r0, #0]
 801abd0:	a901      	add	r1, sp, #4
 801abd2:	681b      	ldr	r3, [r3, #0]
 801abd4:	4798      	blx	r3
 801abd6:	b005      	add	sp, #20
 801abd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801abda:	2900      	cmp	r1, #0
 801abdc:	d1eb      	bne.n	801abb6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801abde:	80a2      	strh	r2, [r4, #4]
 801abe0:	80c6      	strh	r6, [r0, #6]
 801abe2:	60a1      	str	r1, [r4, #8]
 801abe4:	81a1      	strh	r1, [r4, #12]
 801abe6:	73a1      	strb	r1, [r4, #14]
 801abe8:	e7e5      	b.n	801abb6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801abea:	bf00      	nop
 801abec:	0801df18 	.word	0x0801df18
 801abf0:	0801df40 	.word	0x0801df40

0801abf4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801abf4:	b570      	push	{r4, r5, r6, lr}
 801abf6:	790b      	ldrb	r3, [r1, #4]
 801abf8:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801abfc:	2b00      	cmp	r3, #0
 801abfe:	bf0c      	ite	eq
 801ac00:	2301      	moveq	r3, #1
 801ac02:	2300      	movne	r3, #0
 801ac04:	4604      	mov	r4, r0
 801ac06:	460e      	mov	r6, r1
 801ac08:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801ac0c:	d109      	bne.n	801ac22 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801ac0e:	b14d      	cbz	r5, 801ac24 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801ac10:	7933      	ldrb	r3, [r6, #4]
 801ac12:	2b01      	cmp	r3, #1
 801ac14:	d10c      	bne.n	801ac30 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801ac16:	6823      	ldr	r3, [r4, #0]
 801ac18:	4620      	mov	r0, r4
 801ac1a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801ac1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ac20:	4718      	bx	r3
 801ac22:	b12d      	cbz	r5, 801ac30 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801ac24:	6823      	ldr	r3, [r4, #0]
 801ac26:	4620      	mov	r0, r4
 801ac28:	695b      	ldr	r3, [r3, #20]
 801ac2a:	4798      	blx	r3
 801ac2c:	2d00      	cmp	r5, #0
 801ac2e:	d1ef      	bne.n	801ac10 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801ac30:	bd70      	pop	{r4, r5, r6, pc}

0801ac32 <__aeabi_atexit>:
 801ac32:	460b      	mov	r3, r1
 801ac34:	4601      	mov	r1, r0
 801ac36:	4618      	mov	r0, r3
 801ac38:	f000 b852 	b.w	801ace0 <__cxa_atexit>

0801ac3c <_ZdlPvj>:
 801ac3c:	f000 b812 	b.w	801ac64 <_ZdlPv>

0801ac40 <__cxa_guard_acquire>:
 801ac40:	6803      	ldr	r3, [r0, #0]
 801ac42:	07db      	lsls	r3, r3, #31
 801ac44:	d406      	bmi.n	801ac54 <__cxa_guard_acquire+0x14>
 801ac46:	7843      	ldrb	r3, [r0, #1]
 801ac48:	b103      	cbz	r3, 801ac4c <__cxa_guard_acquire+0xc>
 801ac4a:	deff      	udf	#255	; 0xff
 801ac4c:	2301      	movs	r3, #1
 801ac4e:	7043      	strb	r3, [r0, #1]
 801ac50:	4618      	mov	r0, r3
 801ac52:	4770      	bx	lr
 801ac54:	2000      	movs	r0, #0
 801ac56:	4770      	bx	lr

0801ac58 <__cxa_guard_release>:
 801ac58:	2301      	movs	r3, #1
 801ac5a:	6003      	str	r3, [r0, #0]
 801ac5c:	4770      	bx	lr

0801ac5e <__cxa_pure_virtual>:
 801ac5e:	b508      	push	{r3, lr}
 801ac60:	f000 f80e 	bl	801ac80 <_ZSt9terminatev>

0801ac64 <_ZdlPv>:
 801ac64:	f000 b88e 	b.w	801ad84 <free>

0801ac68 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801ac68:	b508      	push	{r3, lr}
 801ac6a:	4780      	blx	r0
 801ac6c:	f000 f80d 	bl	801ac8a <abort>

0801ac70 <_ZSt13get_terminatev>:
 801ac70:	4b02      	ldr	r3, [pc, #8]	; (801ac7c <_ZSt13get_terminatev+0xc>)
 801ac72:	6818      	ldr	r0, [r3, #0]
 801ac74:	f3bf 8f5b 	dmb	ish
 801ac78:	4770      	bx	lr
 801ac7a:	bf00      	nop
 801ac7c:	200000d4 	.word	0x200000d4

0801ac80 <_ZSt9terminatev>:
 801ac80:	b508      	push	{r3, lr}
 801ac82:	f7ff fff5 	bl	801ac70 <_ZSt13get_terminatev>
 801ac86:	f7ff ffef 	bl	801ac68 <_ZN10__cxxabiv111__terminateEPFvvE>

0801ac8a <abort>:
 801ac8a:	b508      	push	{r3, lr}
 801ac8c:	2006      	movs	r0, #6
 801ac8e:	f000 fc9d 	bl	801b5cc <raise>
 801ac92:	2001      	movs	r0, #1
 801ac94:	f7e7 f966 	bl	8001f64 <_exit>

0801ac98 <__assert_func>:
 801ac98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801ac9a:	4614      	mov	r4, r2
 801ac9c:	461a      	mov	r2, r3
 801ac9e:	4b09      	ldr	r3, [pc, #36]	; (801acc4 <__assert_func+0x2c>)
 801aca0:	681b      	ldr	r3, [r3, #0]
 801aca2:	4605      	mov	r5, r0
 801aca4:	68d8      	ldr	r0, [r3, #12]
 801aca6:	b14c      	cbz	r4, 801acbc <__assert_func+0x24>
 801aca8:	4b07      	ldr	r3, [pc, #28]	; (801acc8 <__assert_func+0x30>)
 801acaa:	9100      	str	r1, [sp, #0]
 801acac:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801acb0:	4906      	ldr	r1, [pc, #24]	; (801accc <__assert_func+0x34>)
 801acb2:	462b      	mov	r3, r5
 801acb4:	f000 f828 	bl	801ad08 <fiprintf>
 801acb8:	f7ff ffe7 	bl	801ac8a <abort>
 801acbc:	4b04      	ldr	r3, [pc, #16]	; (801acd0 <__assert_func+0x38>)
 801acbe:	461c      	mov	r4, r3
 801acc0:	e7f3      	b.n	801acaa <__assert_func+0x12>
 801acc2:	bf00      	nop
 801acc4:	200000d8 	.word	0x200000d8
 801acc8:	0801f2fc 	.word	0x0801f2fc
 801accc:	0801f309 	.word	0x0801f309
 801acd0:	0801f337 	.word	0x0801f337

0801acd4 <atexit>:
 801acd4:	2300      	movs	r3, #0
 801acd6:	4601      	mov	r1, r0
 801acd8:	461a      	mov	r2, r3
 801acda:	4618      	mov	r0, r3
 801acdc:	f000 bd52 	b.w	801b784 <__register_exitproc>

0801ace0 <__cxa_atexit>:
 801ace0:	b510      	push	{r4, lr}
 801ace2:	4c05      	ldr	r4, [pc, #20]	; (801acf8 <__cxa_atexit+0x18>)
 801ace4:	4613      	mov	r3, r2
 801ace6:	b12c      	cbz	r4, 801acf4 <__cxa_atexit+0x14>
 801ace8:	460a      	mov	r2, r1
 801acea:	4601      	mov	r1, r0
 801acec:	2002      	movs	r0, #2
 801acee:	f000 fd49 	bl	801b784 <__register_exitproc>
 801acf2:	bd10      	pop	{r4, pc}
 801acf4:	4620      	mov	r0, r4
 801acf6:	e7fc      	b.n	801acf2 <__cxa_atexit+0x12>
 801acf8:	0801b785 	.word	0x0801b785

0801acfc <__errno>:
 801acfc:	4b01      	ldr	r3, [pc, #4]	; (801ad04 <__errno+0x8>)
 801acfe:	6818      	ldr	r0, [r3, #0]
 801ad00:	4770      	bx	lr
 801ad02:	bf00      	nop
 801ad04:	200000d8 	.word	0x200000d8

0801ad08 <fiprintf>:
 801ad08:	b40e      	push	{r1, r2, r3}
 801ad0a:	b503      	push	{r0, r1, lr}
 801ad0c:	4601      	mov	r1, r0
 801ad0e:	ab03      	add	r3, sp, #12
 801ad10:	4805      	ldr	r0, [pc, #20]	; (801ad28 <fiprintf+0x20>)
 801ad12:	f853 2b04 	ldr.w	r2, [r3], #4
 801ad16:	6800      	ldr	r0, [r0, #0]
 801ad18:	9301      	str	r3, [sp, #4]
 801ad1a:	f000 f95b 	bl	801afd4 <_vfiprintf_r>
 801ad1e:	b002      	add	sp, #8
 801ad20:	f85d eb04 	ldr.w	lr, [sp], #4
 801ad24:	b003      	add	sp, #12
 801ad26:	4770      	bx	lr
 801ad28:	200000d8 	.word	0x200000d8

0801ad2c <__libc_init_array>:
 801ad2c:	b570      	push	{r4, r5, r6, lr}
 801ad2e:	4d0d      	ldr	r5, [pc, #52]	; (801ad64 <__libc_init_array+0x38>)
 801ad30:	4c0d      	ldr	r4, [pc, #52]	; (801ad68 <__libc_init_array+0x3c>)
 801ad32:	1b64      	subs	r4, r4, r5
 801ad34:	10a4      	asrs	r4, r4, #2
 801ad36:	2600      	movs	r6, #0
 801ad38:	42a6      	cmp	r6, r4
 801ad3a:	d109      	bne.n	801ad50 <__libc_init_array+0x24>
 801ad3c:	4d0b      	ldr	r5, [pc, #44]	; (801ad6c <__libc_init_array+0x40>)
 801ad3e:	4c0c      	ldr	r4, [pc, #48]	; (801ad70 <__libc_init_array+0x44>)
 801ad40:	f001 f85a 	bl	801bdf8 <_init>
 801ad44:	1b64      	subs	r4, r4, r5
 801ad46:	10a4      	asrs	r4, r4, #2
 801ad48:	2600      	movs	r6, #0
 801ad4a:	42a6      	cmp	r6, r4
 801ad4c:	d105      	bne.n	801ad5a <__libc_init_array+0x2e>
 801ad4e:	bd70      	pop	{r4, r5, r6, pc}
 801ad50:	f855 3b04 	ldr.w	r3, [r5], #4
 801ad54:	4798      	blx	r3
 801ad56:	3601      	adds	r6, #1
 801ad58:	e7ee      	b.n	801ad38 <__libc_init_array+0xc>
 801ad5a:	f855 3b04 	ldr.w	r3, [r5], #4
 801ad5e:	4798      	blx	r3
 801ad60:	3601      	adds	r6, #1
 801ad62:	e7f2      	b.n	801ad4a <__libc_init_array+0x1e>
 801ad64:	0801f3f4 	.word	0x0801f3f4
 801ad68:	0801f3f4 	.word	0x0801f3f4
 801ad6c:	0801f3f4 	.word	0x0801f3f4
 801ad70:	0801f40c 	.word	0x0801f40c

0801ad74 <malloc>:
 801ad74:	4b02      	ldr	r3, [pc, #8]	; (801ad80 <malloc+0xc>)
 801ad76:	4601      	mov	r1, r0
 801ad78:	6818      	ldr	r0, [r3, #0]
 801ad7a:	f000 b88d 	b.w	801ae98 <_malloc_r>
 801ad7e:	bf00      	nop
 801ad80:	200000d8 	.word	0x200000d8

0801ad84 <free>:
 801ad84:	4b02      	ldr	r3, [pc, #8]	; (801ad90 <free+0xc>)
 801ad86:	4601      	mov	r1, r0
 801ad88:	6818      	ldr	r0, [r3, #0]
 801ad8a:	f000 b819 	b.w	801adc0 <_free_r>
 801ad8e:	bf00      	nop
 801ad90:	200000d8 	.word	0x200000d8

0801ad94 <memcpy>:
 801ad94:	440a      	add	r2, r1
 801ad96:	4291      	cmp	r1, r2
 801ad98:	f100 33ff 	add.w	r3, r0, #4294967295
 801ad9c:	d100      	bne.n	801ada0 <memcpy+0xc>
 801ad9e:	4770      	bx	lr
 801ada0:	b510      	push	{r4, lr}
 801ada2:	f811 4b01 	ldrb.w	r4, [r1], #1
 801ada6:	f803 4f01 	strb.w	r4, [r3, #1]!
 801adaa:	4291      	cmp	r1, r2
 801adac:	d1f9      	bne.n	801ada2 <memcpy+0xe>
 801adae:	bd10      	pop	{r4, pc}

0801adb0 <memset>:
 801adb0:	4402      	add	r2, r0
 801adb2:	4603      	mov	r3, r0
 801adb4:	4293      	cmp	r3, r2
 801adb6:	d100      	bne.n	801adba <memset+0xa>
 801adb8:	4770      	bx	lr
 801adba:	f803 1b01 	strb.w	r1, [r3], #1
 801adbe:	e7f9      	b.n	801adb4 <memset+0x4>

0801adc0 <_free_r>:
 801adc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801adc2:	2900      	cmp	r1, #0
 801adc4:	d044      	beq.n	801ae50 <_free_r+0x90>
 801adc6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801adca:	9001      	str	r0, [sp, #4]
 801adcc:	2b00      	cmp	r3, #0
 801adce:	f1a1 0404 	sub.w	r4, r1, #4
 801add2:	bfb8      	it	lt
 801add4:	18e4      	addlt	r4, r4, r3
 801add6:	f000 ff57 	bl	801bc88 <__malloc_lock>
 801adda:	4a1e      	ldr	r2, [pc, #120]	; (801ae54 <_free_r+0x94>)
 801addc:	9801      	ldr	r0, [sp, #4]
 801adde:	6813      	ldr	r3, [r2, #0]
 801ade0:	b933      	cbnz	r3, 801adf0 <_free_r+0x30>
 801ade2:	6063      	str	r3, [r4, #4]
 801ade4:	6014      	str	r4, [r2, #0]
 801ade6:	b003      	add	sp, #12
 801ade8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801adec:	f000 bf52 	b.w	801bc94 <__malloc_unlock>
 801adf0:	42a3      	cmp	r3, r4
 801adf2:	d908      	bls.n	801ae06 <_free_r+0x46>
 801adf4:	6825      	ldr	r5, [r4, #0]
 801adf6:	1961      	adds	r1, r4, r5
 801adf8:	428b      	cmp	r3, r1
 801adfa:	bf01      	itttt	eq
 801adfc:	6819      	ldreq	r1, [r3, #0]
 801adfe:	685b      	ldreq	r3, [r3, #4]
 801ae00:	1949      	addeq	r1, r1, r5
 801ae02:	6021      	streq	r1, [r4, #0]
 801ae04:	e7ed      	b.n	801ade2 <_free_r+0x22>
 801ae06:	461a      	mov	r2, r3
 801ae08:	685b      	ldr	r3, [r3, #4]
 801ae0a:	b10b      	cbz	r3, 801ae10 <_free_r+0x50>
 801ae0c:	42a3      	cmp	r3, r4
 801ae0e:	d9fa      	bls.n	801ae06 <_free_r+0x46>
 801ae10:	6811      	ldr	r1, [r2, #0]
 801ae12:	1855      	adds	r5, r2, r1
 801ae14:	42a5      	cmp	r5, r4
 801ae16:	d10b      	bne.n	801ae30 <_free_r+0x70>
 801ae18:	6824      	ldr	r4, [r4, #0]
 801ae1a:	4421      	add	r1, r4
 801ae1c:	1854      	adds	r4, r2, r1
 801ae1e:	42a3      	cmp	r3, r4
 801ae20:	6011      	str	r1, [r2, #0]
 801ae22:	d1e0      	bne.n	801ade6 <_free_r+0x26>
 801ae24:	681c      	ldr	r4, [r3, #0]
 801ae26:	685b      	ldr	r3, [r3, #4]
 801ae28:	6053      	str	r3, [r2, #4]
 801ae2a:	4421      	add	r1, r4
 801ae2c:	6011      	str	r1, [r2, #0]
 801ae2e:	e7da      	b.n	801ade6 <_free_r+0x26>
 801ae30:	d902      	bls.n	801ae38 <_free_r+0x78>
 801ae32:	230c      	movs	r3, #12
 801ae34:	6003      	str	r3, [r0, #0]
 801ae36:	e7d6      	b.n	801ade6 <_free_r+0x26>
 801ae38:	6825      	ldr	r5, [r4, #0]
 801ae3a:	1961      	adds	r1, r4, r5
 801ae3c:	428b      	cmp	r3, r1
 801ae3e:	bf04      	itt	eq
 801ae40:	6819      	ldreq	r1, [r3, #0]
 801ae42:	685b      	ldreq	r3, [r3, #4]
 801ae44:	6063      	str	r3, [r4, #4]
 801ae46:	bf04      	itt	eq
 801ae48:	1949      	addeq	r1, r1, r5
 801ae4a:	6021      	streq	r1, [r4, #0]
 801ae4c:	6054      	str	r4, [r2, #4]
 801ae4e:	e7ca      	b.n	801ade6 <_free_r+0x26>
 801ae50:	b003      	add	sp, #12
 801ae52:	bd30      	pop	{r4, r5, pc}
 801ae54:	2000a5ec 	.word	0x2000a5ec

0801ae58 <sbrk_aligned>:
 801ae58:	b570      	push	{r4, r5, r6, lr}
 801ae5a:	4e0e      	ldr	r6, [pc, #56]	; (801ae94 <sbrk_aligned+0x3c>)
 801ae5c:	460c      	mov	r4, r1
 801ae5e:	6831      	ldr	r1, [r6, #0]
 801ae60:	4605      	mov	r5, r0
 801ae62:	b911      	cbnz	r1, 801ae6a <sbrk_aligned+0x12>
 801ae64:	f000 fb7a 	bl	801b55c <_sbrk_r>
 801ae68:	6030      	str	r0, [r6, #0]
 801ae6a:	4621      	mov	r1, r4
 801ae6c:	4628      	mov	r0, r5
 801ae6e:	f000 fb75 	bl	801b55c <_sbrk_r>
 801ae72:	1c43      	adds	r3, r0, #1
 801ae74:	d00a      	beq.n	801ae8c <sbrk_aligned+0x34>
 801ae76:	1cc4      	adds	r4, r0, #3
 801ae78:	f024 0403 	bic.w	r4, r4, #3
 801ae7c:	42a0      	cmp	r0, r4
 801ae7e:	d007      	beq.n	801ae90 <sbrk_aligned+0x38>
 801ae80:	1a21      	subs	r1, r4, r0
 801ae82:	4628      	mov	r0, r5
 801ae84:	f000 fb6a 	bl	801b55c <_sbrk_r>
 801ae88:	3001      	adds	r0, #1
 801ae8a:	d101      	bne.n	801ae90 <sbrk_aligned+0x38>
 801ae8c:	f04f 34ff 	mov.w	r4, #4294967295
 801ae90:	4620      	mov	r0, r4
 801ae92:	bd70      	pop	{r4, r5, r6, pc}
 801ae94:	2000a5f0 	.word	0x2000a5f0

0801ae98 <_malloc_r>:
 801ae98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ae9c:	1ccd      	adds	r5, r1, #3
 801ae9e:	f025 0503 	bic.w	r5, r5, #3
 801aea2:	3508      	adds	r5, #8
 801aea4:	2d0c      	cmp	r5, #12
 801aea6:	bf38      	it	cc
 801aea8:	250c      	movcc	r5, #12
 801aeaa:	2d00      	cmp	r5, #0
 801aeac:	4607      	mov	r7, r0
 801aeae:	db01      	blt.n	801aeb4 <_malloc_r+0x1c>
 801aeb0:	42a9      	cmp	r1, r5
 801aeb2:	d905      	bls.n	801aec0 <_malloc_r+0x28>
 801aeb4:	230c      	movs	r3, #12
 801aeb6:	603b      	str	r3, [r7, #0]
 801aeb8:	2600      	movs	r6, #0
 801aeba:	4630      	mov	r0, r6
 801aebc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801aec0:	4e2e      	ldr	r6, [pc, #184]	; (801af7c <_malloc_r+0xe4>)
 801aec2:	f000 fee1 	bl	801bc88 <__malloc_lock>
 801aec6:	6833      	ldr	r3, [r6, #0]
 801aec8:	461c      	mov	r4, r3
 801aeca:	bb34      	cbnz	r4, 801af1a <_malloc_r+0x82>
 801aecc:	4629      	mov	r1, r5
 801aece:	4638      	mov	r0, r7
 801aed0:	f7ff ffc2 	bl	801ae58 <sbrk_aligned>
 801aed4:	1c43      	adds	r3, r0, #1
 801aed6:	4604      	mov	r4, r0
 801aed8:	d14d      	bne.n	801af76 <_malloc_r+0xde>
 801aeda:	6834      	ldr	r4, [r6, #0]
 801aedc:	4626      	mov	r6, r4
 801aede:	2e00      	cmp	r6, #0
 801aee0:	d140      	bne.n	801af64 <_malloc_r+0xcc>
 801aee2:	6823      	ldr	r3, [r4, #0]
 801aee4:	4631      	mov	r1, r6
 801aee6:	4638      	mov	r0, r7
 801aee8:	eb04 0803 	add.w	r8, r4, r3
 801aeec:	f000 fb36 	bl	801b55c <_sbrk_r>
 801aef0:	4580      	cmp	r8, r0
 801aef2:	d13a      	bne.n	801af6a <_malloc_r+0xd2>
 801aef4:	6821      	ldr	r1, [r4, #0]
 801aef6:	3503      	adds	r5, #3
 801aef8:	1a6d      	subs	r5, r5, r1
 801aefa:	f025 0503 	bic.w	r5, r5, #3
 801aefe:	3508      	adds	r5, #8
 801af00:	2d0c      	cmp	r5, #12
 801af02:	bf38      	it	cc
 801af04:	250c      	movcc	r5, #12
 801af06:	4629      	mov	r1, r5
 801af08:	4638      	mov	r0, r7
 801af0a:	f7ff ffa5 	bl	801ae58 <sbrk_aligned>
 801af0e:	3001      	adds	r0, #1
 801af10:	d02b      	beq.n	801af6a <_malloc_r+0xd2>
 801af12:	6823      	ldr	r3, [r4, #0]
 801af14:	442b      	add	r3, r5
 801af16:	6023      	str	r3, [r4, #0]
 801af18:	e00e      	b.n	801af38 <_malloc_r+0xa0>
 801af1a:	6822      	ldr	r2, [r4, #0]
 801af1c:	1b52      	subs	r2, r2, r5
 801af1e:	d41e      	bmi.n	801af5e <_malloc_r+0xc6>
 801af20:	2a0b      	cmp	r2, #11
 801af22:	d916      	bls.n	801af52 <_malloc_r+0xba>
 801af24:	1961      	adds	r1, r4, r5
 801af26:	42a3      	cmp	r3, r4
 801af28:	6025      	str	r5, [r4, #0]
 801af2a:	bf18      	it	ne
 801af2c:	6059      	strne	r1, [r3, #4]
 801af2e:	6863      	ldr	r3, [r4, #4]
 801af30:	bf08      	it	eq
 801af32:	6031      	streq	r1, [r6, #0]
 801af34:	5162      	str	r2, [r4, r5]
 801af36:	604b      	str	r3, [r1, #4]
 801af38:	4638      	mov	r0, r7
 801af3a:	f104 060b 	add.w	r6, r4, #11
 801af3e:	f000 fea9 	bl	801bc94 <__malloc_unlock>
 801af42:	f026 0607 	bic.w	r6, r6, #7
 801af46:	1d23      	adds	r3, r4, #4
 801af48:	1af2      	subs	r2, r6, r3
 801af4a:	d0b6      	beq.n	801aeba <_malloc_r+0x22>
 801af4c:	1b9b      	subs	r3, r3, r6
 801af4e:	50a3      	str	r3, [r4, r2]
 801af50:	e7b3      	b.n	801aeba <_malloc_r+0x22>
 801af52:	6862      	ldr	r2, [r4, #4]
 801af54:	42a3      	cmp	r3, r4
 801af56:	bf0c      	ite	eq
 801af58:	6032      	streq	r2, [r6, #0]
 801af5a:	605a      	strne	r2, [r3, #4]
 801af5c:	e7ec      	b.n	801af38 <_malloc_r+0xa0>
 801af5e:	4623      	mov	r3, r4
 801af60:	6864      	ldr	r4, [r4, #4]
 801af62:	e7b2      	b.n	801aeca <_malloc_r+0x32>
 801af64:	4634      	mov	r4, r6
 801af66:	6876      	ldr	r6, [r6, #4]
 801af68:	e7b9      	b.n	801aede <_malloc_r+0x46>
 801af6a:	230c      	movs	r3, #12
 801af6c:	603b      	str	r3, [r7, #0]
 801af6e:	4638      	mov	r0, r7
 801af70:	f000 fe90 	bl	801bc94 <__malloc_unlock>
 801af74:	e7a1      	b.n	801aeba <_malloc_r+0x22>
 801af76:	6025      	str	r5, [r4, #0]
 801af78:	e7de      	b.n	801af38 <_malloc_r+0xa0>
 801af7a:	bf00      	nop
 801af7c:	2000a5ec 	.word	0x2000a5ec

0801af80 <__sfputc_r>:
 801af80:	6893      	ldr	r3, [r2, #8]
 801af82:	3b01      	subs	r3, #1
 801af84:	2b00      	cmp	r3, #0
 801af86:	b410      	push	{r4}
 801af88:	6093      	str	r3, [r2, #8]
 801af8a:	da08      	bge.n	801af9e <__sfputc_r+0x1e>
 801af8c:	6994      	ldr	r4, [r2, #24]
 801af8e:	42a3      	cmp	r3, r4
 801af90:	db01      	blt.n	801af96 <__sfputc_r+0x16>
 801af92:	290a      	cmp	r1, #10
 801af94:	d103      	bne.n	801af9e <__sfputc_r+0x1e>
 801af96:	f85d 4b04 	ldr.w	r4, [sp], #4
 801af9a:	f000 bb33 	b.w	801b604 <__swbuf_r>
 801af9e:	6813      	ldr	r3, [r2, #0]
 801afa0:	1c58      	adds	r0, r3, #1
 801afa2:	6010      	str	r0, [r2, #0]
 801afa4:	7019      	strb	r1, [r3, #0]
 801afa6:	4608      	mov	r0, r1
 801afa8:	f85d 4b04 	ldr.w	r4, [sp], #4
 801afac:	4770      	bx	lr

0801afae <__sfputs_r>:
 801afae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801afb0:	4606      	mov	r6, r0
 801afb2:	460f      	mov	r7, r1
 801afb4:	4614      	mov	r4, r2
 801afb6:	18d5      	adds	r5, r2, r3
 801afb8:	42ac      	cmp	r4, r5
 801afba:	d101      	bne.n	801afc0 <__sfputs_r+0x12>
 801afbc:	2000      	movs	r0, #0
 801afbe:	e007      	b.n	801afd0 <__sfputs_r+0x22>
 801afc0:	f814 1b01 	ldrb.w	r1, [r4], #1
 801afc4:	463a      	mov	r2, r7
 801afc6:	4630      	mov	r0, r6
 801afc8:	f7ff ffda 	bl	801af80 <__sfputc_r>
 801afcc:	1c43      	adds	r3, r0, #1
 801afce:	d1f3      	bne.n	801afb8 <__sfputs_r+0xa>
 801afd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801afd4 <_vfiprintf_r>:
 801afd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afd8:	460d      	mov	r5, r1
 801afda:	b09d      	sub	sp, #116	; 0x74
 801afdc:	4614      	mov	r4, r2
 801afde:	4698      	mov	r8, r3
 801afe0:	4606      	mov	r6, r0
 801afe2:	b118      	cbz	r0, 801afec <_vfiprintf_r+0x18>
 801afe4:	6983      	ldr	r3, [r0, #24]
 801afe6:	b90b      	cbnz	r3, 801afec <_vfiprintf_r+0x18>
 801afe8:	f000 fd48 	bl	801ba7c <__sinit>
 801afec:	4b89      	ldr	r3, [pc, #548]	; (801b214 <_vfiprintf_r+0x240>)
 801afee:	429d      	cmp	r5, r3
 801aff0:	d11b      	bne.n	801b02a <_vfiprintf_r+0x56>
 801aff2:	6875      	ldr	r5, [r6, #4]
 801aff4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801aff6:	07d9      	lsls	r1, r3, #31
 801aff8:	d405      	bmi.n	801b006 <_vfiprintf_r+0x32>
 801affa:	89ab      	ldrh	r3, [r5, #12]
 801affc:	059a      	lsls	r2, r3, #22
 801affe:	d402      	bmi.n	801b006 <_vfiprintf_r+0x32>
 801b000:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801b002:	f000 fdd9 	bl	801bbb8 <__retarget_lock_acquire_recursive>
 801b006:	89ab      	ldrh	r3, [r5, #12]
 801b008:	071b      	lsls	r3, r3, #28
 801b00a:	d501      	bpl.n	801b010 <_vfiprintf_r+0x3c>
 801b00c:	692b      	ldr	r3, [r5, #16]
 801b00e:	b9eb      	cbnz	r3, 801b04c <_vfiprintf_r+0x78>
 801b010:	4629      	mov	r1, r5
 801b012:	4630      	mov	r0, r6
 801b014:	f000 fb48 	bl	801b6a8 <__swsetup_r>
 801b018:	b1c0      	cbz	r0, 801b04c <_vfiprintf_r+0x78>
 801b01a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801b01c:	07dc      	lsls	r4, r3, #31
 801b01e:	d50e      	bpl.n	801b03e <_vfiprintf_r+0x6a>
 801b020:	f04f 30ff 	mov.w	r0, #4294967295
 801b024:	b01d      	add	sp, #116	; 0x74
 801b026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b02a:	4b7b      	ldr	r3, [pc, #492]	; (801b218 <_vfiprintf_r+0x244>)
 801b02c:	429d      	cmp	r5, r3
 801b02e:	d101      	bne.n	801b034 <_vfiprintf_r+0x60>
 801b030:	68b5      	ldr	r5, [r6, #8]
 801b032:	e7df      	b.n	801aff4 <_vfiprintf_r+0x20>
 801b034:	4b79      	ldr	r3, [pc, #484]	; (801b21c <_vfiprintf_r+0x248>)
 801b036:	429d      	cmp	r5, r3
 801b038:	bf08      	it	eq
 801b03a:	68f5      	ldreq	r5, [r6, #12]
 801b03c:	e7da      	b.n	801aff4 <_vfiprintf_r+0x20>
 801b03e:	89ab      	ldrh	r3, [r5, #12]
 801b040:	0598      	lsls	r0, r3, #22
 801b042:	d4ed      	bmi.n	801b020 <_vfiprintf_r+0x4c>
 801b044:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801b046:	f000 fdb9 	bl	801bbbc <__retarget_lock_release_recursive>
 801b04a:	e7e9      	b.n	801b020 <_vfiprintf_r+0x4c>
 801b04c:	2300      	movs	r3, #0
 801b04e:	9309      	str	r3, [sp, #36]	; 0x24
 801b050:	2320      	movs	r3, #32
 801b052:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b056:	f8cd 800c 	str.w	r8, [sp, #12]
 801b05a:	2330      	movs	r3, #48	; 0x30
 801b05c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801b220 <_vfiprintf_r+0x24c>
 801b060:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801b064:	f04f 0901 	mov.w	r9, #1
 801b068:	4623      	mov	r3, r4
 801b06a:	469a      	mov	sl, r3
 801b06c:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b070:	b10a      	cbz	r2, 801b076 <_vfiprintf_r+0xa2>
 801b072:	2a25      	cmp	r2, #37	; 0x25
 801b074:	d1f9      	bne.n	801b06a <_vfiprintf_r+0x96>
 801b076:	ebba 0b04 	subs.w	fp, sl, r4
 801b07a:	d00b      	beq.n	801b094 <_vfiprintf_r+0xc0>
 801b07c:	465b      	mov	r3, fp
 801b07e:	4622      	mov	r2, r4
 801b080:	4629      	mov	r1, r5
 801b082:	4630      	mov	r0, r6
 801b084:	f7ff ff93 	bl	801afae <__sfputs_r>
 801b088:	3001      	adds	r0, #1
 801b08a:	f000 80aa 	beq.w	801b1e2 <_vfiprintf_r+0x20e>
 801b08e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b090:	445a      	add	r2, fp
 801b092:	9209      	str	r2, [sp, #36]	; 0x24
 801b094:	f89a 3000 	ldrb.w	r3, [sl]
 801b098:	2b00      	cmp	r3, #0
 801b09a:	f000 80a2 	beq.w	801b1e2 <_vfiprintf_r+0x20e>
 801b09e:	2300      	movs	r3, #0
 801b0a0:	f04f 32ff 	mov.w	r2, #4294967295
 801b0a4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801b0a8:	f10a 0a01 	add.w	sl, sl, #1
 801b0ac:	9304      	str	r3, [sp, #16]
 801b0ae:	9307      	str	r3, [sp, #28]
 801b0b0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801b0b4:	931a      	str	r3, [sp, #104]	; 0x68
 801b0b6:	4654      	mov	r4, sl
 801b0b8:	2205      	movs	r2, #5
 801b0ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b0be:	4858      	ldr	r0, [pc, #352]	; (801b220 <_vfiprintf_r+0x24c>)
 801b0c0:	f7e5 f89e 	bl	8000200 <memchr>
 801b0c4:	9a04      	ldr	r2, [sp, #16]
 801b0c6:	b9d8      	cbnz	r0, 801b100 <_vfiprintf_r+0x12c>
 801b0c8:	06d1      	lsls	r1, r2, #27
 801b0ca:	bf44      	itt	mi
 801b0cc:	2320      	movmi	r3, #32
 801b0ce:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801b0d2:	0713      	lsls	r3, r2, #28
 801b0d4:	bf44      	itt	mi
 801b0d6:	232b      	movmi	r3, #43	; 0x2b
 801b0d8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801b0dc:	f89a 3000 	ldrb.w	r3, [sl]
 801b0e0:	2b2a      	cmp	r3, #42	; 0x2a
 801b0e2:	d015      	beq.n	801b110 <_vfiprintf_r+0x13c>
 801b0e4:	9a07      	ldr	r2, [sp, #28]
 801b0e6:	4654      	mov	r4, sl
 801b0e8:	2000      	movs	r0, #0
 801b0ea:	f04f 0c0a 	mov.w	ip, #10
 801b0ee:	4621      	mov	r1, r4
 801b0f0:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b0f4:	3b30      	subs	r3, #48	; 0x30
 801b0f6:	2b09      	cmp	r3, #9
 801b0f8:	d94e      	bls.n	801b198 <_vfiprintf_r+0x1c4>
 801b0fa:	b1b0      	cbz	r0, 801b12a <_vfiprintf_r+0x156>
 801b0fc:	9207      	str	r2, [sp, #28]
 801b0fe:	e014      	b.n	801b12a <_vfiprintf_r+0x156>
 801b100:	eba0 0308 	sub.w	r3, r0, r8
 801b104:	fa09 f303 	lsl.w	r3, r9, r3
 801b108:	4313      	orrs	r3, r2
 801b10a:	9304      	str	r3, [sp, #16]
 801b10c:	46a2      	mov	sl, r4
 801b10e:	e7d2      	b.n	801b0b6 <_vfiprintf_r+0xe2>
 801b110:	9b03      	ldr	r3, [sp, #12]
 801b112:	1d19      	adds	r1, r3, #4
 801b114:	681b      	ldr	r3, [r3, #0]
 801b116:	9103      	str	r1, [sp, #12]
 801b118:	2b00      	cmp	r3, #0
 801b11a:	bfbb      	ittet	lt
 801b11c:	425b      	neglt	r3, r3
 801b11e:	f042 0202 	orrlt.w	r2, r2, #2
 801b122:	9307      	strge	r3, [sp, #28]
 801b124:	9307      	strlt	r3, [sp, #28]
 801b126:	bfb8      	it	lt
 801b128:	9204      	strlt	r2, [sp, #16]
 801b12a:	7823      	ldrb	r3, [r4, #0]
 801b12c:	2b2e      	cmp	r3, #46	; 0x2e
 801b12e:	d10c      	bne.n	801b14a <_vfiprintf_r+0x176>
 801b130:	7863      	ldrb	r3, [r4, #1]
 801b132:	2b2a      	cmp	r3, #42	; 0x2a
 801b134:	d135      	bne.n	801b1a2 <_vfiprintf_r+0x1ce>
 801b136:	9b03      	ldr	r3, [sp, #12]
 801b138:	1d1a      	adds	r2, r3, #4
 801b13a:	681b      	ldr	r3, [r3, #0]
 801b13c:	9203      	str	r2, [sp, #12]
 801b13e:	2b00      	cmp	r3, #0
 801b140:	bfb8      	it	lt
 801b142:	f04f 33ff 	movlt.w	r3, #4294967295
 801b146:	3402      	adds	r4, #2
 801b148:	9305      	str	r3, [sp, #20]
 801b14a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801b230 <_vfiprintf_r+0x25c>
 801b14e:	7821      	ldrb	r1, [r4, #0]
 801b150:	2203      	movs	r2, #3
 801b152:	4650      	mov	r0, sl
 801b154:	f7e5 f854 	bl	8000200 <memchr>
 801b158:	b140      	cbz	r0, 801b16c <_vfiprintf_r+0x198>
 801b15a:	2340      	movs	r3, #64	; 0x40
 801b15c:	eba0 000a 	sub.w	r0, r0, sl
 801b160:	fa03 f000 	lsl.w	r0, r3, r0
 801b164:	9b04      	ldr	r3, [sp, #16]
 801b166:	4303      	orrs	r3, r0
 801b168:	3401      	adds	r4, #1
 801b16a:	9304      	str	r3, [sp, #16]
 801b16c:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b170:	482c      	ldr	r0, [pc, #176]	; (801b224 <_vfiprintf_r+0x250>)
 801b172:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801b176:	2206      	movs	r2, #6
 801b178:	f7e5 f842 	bl	8000200 <memchr>
 801b17c:	2800      	cmp	r0, #0
 801b17e:	d03f      	beq.n	801b200 <_vfiprintf_r+0x22c>
 801b180:	4b29      	ldr	r3, [pc, #164]	; (801b228 <_vfiprintf_r+0x254>)
 801b182:	bb1b      	cbnz	r3, 801b1cc <_vfiprintf_r+0x1f8>
 801b184:	9b03      	ldr	r3, [sp, #12]
 801b186:	3307      	adds	r3, #7
 801b188:	f023 0307 	bic.w	r3, r3, #7
 801b18c:	3308      	adds	r3, #8
 801b18e:	9303      	str	r3, [sp, #12]
 801b190:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b192:	443b      	add	r3, r7
 801b194:	9309      	str	r3, [sp, #36]	; 0x24
 801b196:	e767      	b.n	801b068 <_vfiprintf_r+0x94>
 801b198:	fb0c 3202 	mla	r2, ip, r2, r3
 801b19c:	460c      	mov	r4, r1
 801b19e:	2001      	movs	r0, #1
 801b1a0:	e7a5      	b.n	801b0ee <_vfiprintf_r+0x11a>
 801b1a2:	2300      	movs	r3, #0
 801b1a4:	3401      	adds	r4, #1
 801b1a6:	9305      	str	r3, [sp, #20]
 801b1a8:	4619      	mov	r1, r3
 801b1aa:	f04f 0c0a 	mov.w	ip, #10
 801b1ae:	4620      	mov	r0, r4
 801b1b0:	f810 2b01 	ldrb.w	r2, [r0], #1
 801b1b4:	3a30      	subs	r2, #48	; 0x30
 801b1b6:	2a09      	cmp	r2, #9
 801b1b8:	d903      	bls.n	801b1c2 <_vfiprintf_r+0x1ee>
 801b1ba:	2b00      	cmp	r3, #0
 801b1bc:	d0c5      	beq.n	801b14a <_vfiprintf_r+0x176>
 801b1be:	9105      	str	r1, [sp, #20]
 801b1c0:	e7c3      	b.n	801b14a <_vfiprintf_r+0x176>
 801b1c2:	fb0c 2101 	mla	r1, ip, r1, r2
 801b1c6:	4604      	mov	r4, r0
 801b1c8:	2301      	movs	r3, #1
 801b1ca:	e7f0      	b.n	801b1ae <_vfiprintf_r+0x1da>
 801b1cc:	ab03      	add	r3, sp, #12
 801b1ce:	9300      	str	r3, [sp, #0]
 801b1d0:	462a      	mov	r2, r5
 801b1d2:	4b16      	ldr	r3, [pc, #88]	; (801b22c <_vfiprintf_r+0x258>)
 801b1d4:	a904      	add	r1, sp, #16
 801b1d6:	4630      	mov	r0, r6
 801b1d8:	f3af 8000 	nop.w
 801b1dc:	4607      	mov	r7, r0
 801b1de:	1c78      	adds	r0, r7, #1
 801b1e0:	d1d6      	bne.n	801b190 <_vfiprintf_r+0x1bc>
 801b1e2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801b1e4:	07d9      	lsls	r1, r3, #31
 801b1e6:	d405      	bmi.n	801b1f4 <_vfiprintf_r+0x220>
 801b1e8:	89ab      	ldrh	r3, [r5, #12]
 801b1ea:	059a      	lsls	r2, r3, #22
 801b1ec:	d402      	bmi.n	801b1f4 <_vfiprintf_r+0x220>
 801b1ee:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801b1f0:	f000 fce4 	bl	801bbbc <__retarget_lock_release_recursive>
 801b1f4:	89ab      	ldrh	r3, [r5, #12]
 801b1f6:	065b      	lsls	r3, r3, #25
 801b1f8:	f53f af12 	bmi.w	801b020 <_vfiprintf_r+0x4c>
 801b1fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 801b1fe:	e711      	b.n	801b024 <_vfiprintf_r+0x50>
 801b200:	ab03      	add	r3, sp, #12
 801b202:	9300      	str	r3, [sp, #0]
 801b204:	462a      	mov	r2, r5
 801b206:	4b09      	ldr	r3, [pc, #36]	; (801b22c <_vfiprintf_r+0x258>)
 801b208:	a904      	add	r1, sp, #16
 801b20a:	4630      	mov	r0, r6
 801b20c:	f000 f880 	bl	801b310 <_printf_i>
 801b210:	e7e4      	b.n	801b1dc <_vfiprintf_r+0x208>
 801b212:	bf00      	nop
 801b214:	0801f394 	.word	0x0801f394
 801b218:	0801f3b4 	.word	0x0801f3b4
 801b21c:	0801f374 	.word	0x0801f374
 801b220:	0801f33c 	.word	0x0801f33c
 801b224:	0801f346 	.word	0x0801f346
 801b228:	00000000 	.word	0x00000000
 801b22c:	0801afaf 	.word	0x0801afaf
 801b230:	0801f342 	.word	0x0801f342

0801b234 <_printf_common>:
 801b234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b238:	4616      	mov	r6, r2
 801b23a:	4699      	mov	r9, r3
 801b23c:	688a      	ldr	r2, [r1, #8]
 801b23e:	690b      	ldr	r3, [r1, #16]
 801b240:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801b244:	4293      	cmp	r3, r2
 801b246:	bfb8      	it	lt
 801b248:	4613      	movlt	r3, r2
 801b24a:	6033      	str	r3, [r6, #0]
 801b24c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801b250:	4607      	mov	r7, r0
 801b252:	460c      	mov	r4, r1
 801b254:	b10a      	cbz	r2, 801b25a <_printf_common+0x26>
 801b256:	3301      	adds	r3, #1
 801b258:	6033      	str	r3, [r6, #0]
 801b25a:	6823      	ldr	r3, [r4, #0]
 801b25c:	0699      	lsls	r1, r3, #26
 801b25e:	bf42      	ittt	mi
 801b260:	6833      	ldrmi	r3, [r6, #0]
 801b262:	3302      	addmi	r3, #2
 801b264:	6033      	strmi	r3, [r6, #0]
 801b266:	6825      	ldr	r5, [r4, #0]
 801b268:	f015 0506 	ands.w	r5, r5, #6
 801b26c:	d106      	bne.n	801b27c <_printf_common+0x48>
 801b26e:	f104 0a19 	add.w	sl, r4, #25
 801b272:	68e3      	ldr	r3, [r4, #12]
 801b274:	6832      	ldr	r2, [r6, #0]
 801b276:	1a9b      	subs	r3, r3, r2
 801b278:	42ab      	cmp	r3, r5
 801b27a:	dc26      	bgt.n	801b2ca <_printf_common+0x96>
 801b27c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801b280:	1e13      	subs	r3, r2, #0
 801b282:	6822      	ldr	r2, [r4, #0]
 801b284:	bf18      	it	ne
 801b286:	2301      	movne	r3, #1
 801b288:	0692      	lsls	r2, r2, #26
 801b28a:	d42b      	bmi.n	801b2e4 <_printf_common+0xb0>
 801b28c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801b290:	4649      	mov	r1, r9
 801b292:	4638      	mov	r0, r7
 801b294:	47c0      	blx	r8
 801b296:	3001      	adds	r0, #1
 801b298:	d01e      	beq.n	801b2d8 <_printf_common+0xa4>
 801b29a:	6823      	ldr	r3, [r4, #0]
 801b29c:	68e5      	ldr	r5, [r4, #12]
 801b29e:	6832      	ldr	r2, [r6, #0]
 801b2a0:	f003 0306 	and.w	r3, r3, #6
 801b2a4:	2b04      	cmp	r3, #4
 801b2a6:	bf08      	it	eq
 801b2a8:	1aad      	subeq	r5, r5, r2
 801b2aa:	68a3      	ldr	r3, [r4, #8]
 801b2ac:	6922      	ldr	r2, [r4, #16]
 801b2ae:	bf0c      	ite	eq
 801b2b0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801b2b4:	2500      	movne	r5, #0
 801b2b6:	4293      	cmp	r3, r2
 801b2b8:	bfc4      	itt	gt
 801b2ba:	1a9b      	subgt	r3, r3, r2
 801b2bc:	18ed      	addgt	r5, r5, r3
 801b2be:	2600      	movs	r6, #0
 801b2c0:	341a      	adds	r4, #26
 801b2c2:	42b5      	cmp	r5, r6
 801b2c4:	d11a      	bne.n	801b2fc <_printf_common+0xc8>
 801b2c6:	2000      	movs	r0, #0
 801b2c8:	e008      	b.n	801b2dc <_printf_common+0xa8>
 801b2ca:	2301      	movs	r3, #1
 801b2cc:	4652      	mov	r2, sl
 801b2ce:	4649      	mov	r1, r9
 801b2d0:	4638      	mov	r0, r7
 801b2d2:	47c0      	blx	r8
 801b2d4:	3001      	adds	r0, #1
 801b2d6:	d103      	bne.n	801b2e0 <_printf_common+0xac>
 801b2d8:	f04f 30ff 	mov.w	r0, #4294967295
 801b2dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b2e0:	3501      	adds	r5, #1
 801b2e2:	e7c6      	b.n	801b272 <_printf_common+0x3e>
 801b2e4:	18e1      	adds	r1, r4, r3
 801b2e6:	1c5a      	adds	r2, r3, #1
 801b2e8:	2030      	movs	r0, #48	; 0x30
 801b2ea:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801b2ee:	4422      	add	r2, r4
 801b2f0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801b2f4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801b2f8:	3302      	adds	r3, #2
 801b2fa:	e7c7      	b.n	801b28c <_printf_common+0x58>
 801b2fc:	2301      	movs	r3, #1
 801b2fe:	4622      	mov	r2, r4
 801b300:	4649      	mov	r1, r9
 801b302:	4638      	mov	r0, r7
 801b304:	47c0      	blx	r8
 801b306:	3001      	adds	r0, #1
 801b308:	d0e6      	beq.n	801b2d8 <_printf_common+0xa4>
 801b30a:	3601      	adds	r6, #1
 801b30c:	e7d9      	b.n	801b2c2 <_printf_common+0x8e>
	...

0801b310 <_printf_i>:
 801b310:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801b314:	7e0f      	ldrb	r7, [r1, #24]
 801b316:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b318:	2f78      	cmp	r7, #120	; 0x78
 801b31a:	4691      	mov	r9, r2
 801b31c:	4680      	mov	r8, r0
 801b31e:	460c      	mov	r4, r1
 801b320:	469a      	mov	sl, r3
 801b322:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801b326:	d807      	bhi.n	801b338 <_printf_i+0x28>
 801b328:	2f62      	cmp	r7, #98	; 0x62
 801b32a:	d80a      	bhi.n	801b342 <_printf_i+0x32>
 801b32c:	2f00      	cmp	r7, #0
 801b32e:	f000 80d8 	beq.w	801b4e2 <_printf_i+0x1d2>
 801b332:	2f58      	cmp	r7, #88	; 0x58
 801b334:	f000 80a3 	beq.w	801b47e <_printf_i+0x16e>
 801b338:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b33c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801b340:	e03a      	b.n	801b3b8 <_printf_i+0xa8>
 801b342:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801b346:	2b15      	cmp	r3, #21
 801b348:	d8f6      	bhi.n	801b338 <_printf_i+0x28>
 801b34a:	a101      	add	r1, pc, #4	; (adr r1, 801b350 <_printf_i+0x40>)
 801b34c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801b350:	0801b3a9 	.word	0x0801b3a9
 801b354:	0801b3bd 	.word	0x0801b3bd
 801b358:	0801b339 	.word	0x0801b339
 801b35c:	0801b339 	.word	0x0801b339
 801b360:	0801b339 	.word	0x0801b339
 801b364:	0801b339 	.word	0x0801b339
 801b368:	0801b3bd 	.word	0x0801b3bd
 801b36c:	0801b339 	.word	0x0801b339
 801b370:	0801b339 	.word	0x0801b339
 801b374:	0801b339 	.word	0x0801b339
 801b378:	0801b339 	.word	0x0801b339
 801b37c:	0801b4c9 	.word	0x0801b4c9
 801b380:	0801b3ed 	.word	0x0801b3ed
 801b384:	0801b4ab 	.word	0x0801b4ab
 801b388:	0801b339 	.word	0x0801b339
 801b38c:	0801b339 	.word	0x0801b339
 801b390:	0801b4eb 	.word	0x0801b4eb
 801b394:	0801b339 	.word	0x0801b339
 801b398:	0801b3ed 	.word	0x0801b3ed
 801b39c:	0801b339 	.word	0x0801b339
 801b3a0:	0801b339 	.word	0x0801b339
 801b3a4:	0801b4b3 	.word	0x0801b4b3
 801b3a8:	682b      	ldr	r3, [r5, #0]
 801b3aa:	1d1a      	adds	r2, r3, #4
 801b3ac:	681b      	ldr	r3, [r3, #0]
 801b3ae:	602a      	str	r2, [r5, #0]
 801b3b0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b3b4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801b3b8:	2301      	movs	r3, #1
 801b3ba:	e0a3      	b.n	801b504 <_printf_i+0x1f4>
 801b3bc:	6820      	ldr	r0, [r4, #0]
 801b3be:	6829      	ldr	r1, [r5, #0]
 801b3c0:	0606      	lsls	r6, r0, #24
 801b3c2:	f101 0304 	add.w	r3, r1, #4
 801b3c6:	d50a      	bpl.n	801b3de <_printf_i+0xce>
 801b3c8:	680e      	ldr	r6, [r1, #0]
 801b3ca:	602b      	str	r3, [r5, #0]
 801b3cc:	2e00      	cmp	r6, #0
 801b3ce:	da03      	bge.n	801b3d8 <_printf_i+0xc8>
 801b3d0:	232d      	movs	r3, #45	; 0x2d
 801b3d2:	4276      	negs	r6, r6
 801b3d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801b3d8:	485e      	ldr	r0, [pc, #376]	; (801b554 <_printf_i+0x244>)
 801b3da:	230a      	movs	r3, #10
 801b3dc:	e019      	b.n	801b412 <_printf_i+0x102>
 801b3de:	680e      	ldr	r6, [r1, #0]
 801b3e0:	602b      	str	r3, [r5, #0]
 801b3e2:	f010 0f40 	tst.w	r0, #64	; 0x40
 801b3e6:	bf18      	it	ne
 801b3e8:	b236      	sxthne	r6, r6
 801b3ea:	e7ef      	b.n	801b3cc <_printf_i+0xbc>
 801b3ec:	682b      	ldr	r3, [r5, #0]
 801b3ee:	6820      	ldr	r0, [r4, #0]
 801b3f0:	1d19      	adds	r1, r3, #4
 801b3f2:	6029      	str	r1, [r5, #0]
 801b3f4:	0601      	lsls	r1, r0, #24
 801b3f6:	d501      	bpl.n	801b3fc <_printf_i+0xec>
 801b3f8:	681e      	ldr	r6, [r3, #0]
 801b3fa:	e002      	b.n	801b402 <_printf_i+0xf2>
 801b3fc:	0646      	lsls	r6, r0, #25
 801b3fe:	d5fb      	bpl.n	801b3f8 <_printf_i+0xe8>
 801b400:	881e      	ldrh	r6, [r3, #0]
 801b402:	4854      	ldr	r0, [pc, #336]	; (801b554 <_printf_i+0x244>)
 801b404:	2f6f      	cmp	r7, #111	; 0x6f
 801b406:	bf0c      	ite	eq
 801b408:	2308      	moveq	r3, #8
 801b40a:	230a      	movne	r3, #10
 801b40c:	2100      	movs	r1, #0
 801b40e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801b412:	6865      	ldr	r5, [r4, #4]
 801b414:	60a5      	str	r5, [r4, #8]
 801b416:	2d00      	cmp	r5, #0
 801b418:	bfa2      	ittt	ge
 801b41a:	6821      	ldrge	r1, [r4, #0]
 801b41c:	f021 0104 	bicge.w	r1, r1, #4
 801b420:	6021      	strge	r1, [r4, #0]
 801b422:	b90e      	cbnz	r6, 801b428 <_printf_i+0x118>
 801b424:	2d00      	cmp	r5, #0
 801b426:	d04d      	beq.n	801b4c4 <_printf_i+0x1b4>
 801b428:	4615      	mov	r5, r2
 801b42a:	fbb6 f1f3 	udiv	r1, r6, r3
 801b42e:	fb03 6711 	mls	r7, r3, r1, r6
 801b432:	5dc7      	ldrb	r7, [r0, r7]
 801b434:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801b438:	4637      	mov	r7, r6
 801b43a:	42bb      	cmp	r3, r7
 801b43c:	460e      	mov	r6, r1
 801b43e:	d9f4      	bls.n	801b42a <_printf_i+0x11a>
 801b440:	2b08      	cmp	r3, #8
 801b442:	d10b      	bne.n	801b45c <_printf_i+0x14c>
 801b444:	6823      	ldr	r3, [r4, #0]
 801b446:	07de      	lsls	r6, r3, #31
 801b448:	d508      	bpl.n	801b45c <_printf_i+0x14c>
 801b44a:	6923      	ldr	r3, [r4, #16]
 801b44c:	6861      	ldr	r1, [r4, #4]
 801b44e:	4299      	cmp	r1, r3
 801b450:	bfde      	ittt	le
 801b452:	2330      	movle	r3, #48	; 0x30
 801b454:	f805 3c01 	strble.w	r3, [r5, #-1]
 801b458:	f105 35ff 	addle.w	r5, r5, #4294967295
 801b45c:	1b52      	subs	r2, r2, r5
 801b45e:	6122      	str	r2, [r4, #16]
 801b460:	f8cd a000 	str.w	sl, [sp]
 801b464:	464b      	mov	r3, r9
 801b466:	aa03      	add	r2, sp, #12
 801b468:	4621      	mov	r1, r4
 801b46a:	4640      	mov	r0, r8
 801b46c:	f7ff fee2 	bl	801b234 <_printf_common>
 801b470:	3001      	adds	r0, #1
 801b472:	d14c      	bne.n	801b50e <_printf_i+0x1fe>
 801b474:	f04f 30ff 	mov.w	r0, #4294967295
 801b478:	b004      	add	sp, #16
 801b47a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b47e:	4835      	ldr	r0, [pc, #212]	; (801b554 <_printf_i+0x244>)
 801b480:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801b484:	6829      	ldr	r1, [r5, #0]
 801b486:	6823      	ldr	r3, [r4, #0]
 801b488:	f851 6b04 	ldr.w	r6, [r1], #4
 801b48c:	6029      	str	r1, [r5, #0]
 801b48e:	061d      	lsls	r5, r3, #24
 801b490:	d514      	bpl.n	801b4bc <_printf_i+0x1ac>
 801b492:	07df      	lsls	r7, r3, #31
 801b494:	bf44      	itt	mi
 801b496:	f043 0320 	orrmi.w	r3, r3, #32
 801b49a:	6023      	strmi	r3, [r4, #0]
 801b49c:	b91e      	cbnz	r6, 801b4a6 <_printf_i+0x196>
 801b49e:	6823      	ldr	r3, [r4, #0]
 801b4a0:	f023 0320 	bic.w	r3, r3, #32
 801b4a4:	6023      	str	r3, [r4, #0]
 801b4a6:	2310      	movs	r3, #16
 801b4a8:	e7b0      	b.n	801b40c <_printf_i+0xfc>
 801b4aa:	6823      	ldr	r3, [r4, #0]
 801b4ac:	f043 0320 	orr.w	r3, r3, #32
 801b4b0:	6023      	str	r3, [r4, #0]
 801b4b2:	2378      	movs	r3, #120	; 0x78
 801b4b4:	4828      	ldr	r0, [pc, #160]	; (801b558 <_printf_i+0x248>)
 801b4b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801b4ba:	e7e3      	b.n	801b484 <_printf_i+0x174>
 801b4bc:	0659      	lsls	r1, r3, #25
 801b4be:	bf48      	it	mi
 801b4c0:	b2b6      	uxthmi	r6, r6
 801b4c2:	e7e6      	b.n	801b492 <_printf_i+0x182>
 801b4c4:	4615      	mov	r5, r2
 801b4c6:	e7bb      	b.n	801b440 <_printf_i+0x130>
 801b4c8:	682b      	ldr	r3, [r5, #0]
 801b4ca:	6826      	ldr	r6, [r4, #0]
 801b4cc:	6961      	ldr	r1, [r4, #20]
 801b4ce:	1d18      	adds	r0, r3, #4
 801b4d0:	6028      	str	r0, [r5, #0]
 801b4d2:	0635      	lsls	r5, r6, #24
 801b4d4:	681b      	ldr	r3, [r3, #0]
 801b4d6:	d501      	bpl.n	801b4dc <_printf_i+0x1cc>
 801b4d8:	6019      	str	r1, [r3, #0]
 801b4da:	e002      	b.n	801b4e2 <_printf_i+0x1d2>
 801b4dc:	0670      	lsls	r0, r6, #25
 801b4de:	d5fb      	bpl.n	801b4d8 <_printf_i+0x1c8>
 801b4e0:	8019      	strh	r1, [r3, #0]
 801b4e2:	2300      	movs	r3, #0
 801b4e4:	6123      	str	r3, [r4, #16]
 801b4e6:	4615      	mov	r5, r2
 801b4e8:	e7ba      	b.n	801b460 <_printf_i+0x150>
 801b4ea:	682b      	ldr	r3, [r5, #0]
 801b4ec:	1d1a      	adds	r2, r3, #4
 801b4ee:	602a      	str	r2, [r5, #0]
 801b4f0:	681d      	ldr	r5, [r3, #0]
 801b4f2:	6862      	ldr	r2, [r4, #4]
 801b4f4:	2100      	movs	r1, #0
 801b4f6:	4628      	mov	r0, r5
 801b4f8:	f7e4 fe82 	bl	8000200 <memchr>
 801b4fc:	b108      	cbz	r0, 801b502 <_printf_i+0x1f2>
 801b4fe:	1b40      	subs	r0, r0, r5
 801b500:	6060      	str	r0, [r4, #4]
 801b502:	6863      	ldr	r3, [r4, #4]
 801b504:	6123      	str	r3, [r4, #16]
 801b506:	2300      	movs	r3, #0
 801b508:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801b50c:	e7a8      	b.n	801b460 <_printf_i+0x150>
 801b50e:	6923      	ldr	r3, [r4, #16]
 801b510:	462a      	mov	r2, r5
 801b512:	4649      	mov	r1, r9
 801b514:	4640      	mov	r0, r8
 801b516:	47d0      	blx	sl
 801b518:	3001      	adds	r0, #1
 801b51a:	d0ab      	beq.n	801b474 <_printf_i+0x164>
 801b51c:	6823      	ldr	r3, [r4, #0]
 801b51e:	079b      	lsls	r3, r3, #30
 801b520:	d413      	bmi.n	801b54a <_printf_i+0x23a>
 801b522:	68e0      	ldr	r0, [r4, #12]
 801b524:	9b03      	ldr	r3, [sp, #12]
 801b526:	4298      	cmp	r0, r3
 801b528:	bfb8      	it	lt
 801b52a:	4618      	movlt	r0, r3
 801b52c:	e7a4      	b.n	801b478 <_printf_i+0x168>
 801b52e:	2301      	movs	r3, #1
 801b530:	4632      	mov	r2, r6
 801b532:	4649      	mov	r1, r9
 801b534:	4640      	mov	r0, r8
 801b536:	47d0      	blx	sl
 801b538:	3001      	adds	r0, #1
 801b53a:	d09b      	beq.n	801b474 <_printf_i+0x164>
 801b53c:	3501      	adds	r5, #1
 801b53e:	68e3      	ldr	r3, [r4, #12]
 801b540:	9903      	ldr	r1, [sp, #12]
 801b542:	1a5b      	subs	r3, r3, r1
 801b544:	42ab      	cmp	r3, r5
 801b546:	dcf2      	bgt.n	801b52e <_printf_i+0x21e>
 801b548:	e7eb      	b.n	801b522 <_printf_i+0x212>
 801b54a:	2500      	movs	r5, #0
 801b54c:	f104 0619 	add.w	r6, r4, #25
 801b550:	e7f5      	b.n	801b53e <_printf_i+0x22e>
 801b552:	bf00      	nop
 801b554:	0801f34d 	.word	0x0801f34d
 801b558:	0801f35e 	.word	0x0801f35e

0801b55c <_sbrk_r>:
 801b55c:	b538      	push	{r3, r4, r5, lr}
 801b55e:	4d06      	ldr	r5, [pc, #24]	; (801b578 <_sbrk_r+0x1c>)
 801b560:	2300      	movs	r3, #0
 801b562:	4604      	mov	r4, r0
 801b564:	4608      	mov	r0, r1
 801b566:	602b      	str	r3, [r5, #0]
 801b568:	f7e6 fd2a 	bl	8001fc0 <_sbrk>
 801b56c:	1c43      	adds	r3, r0, #1
 801b56e:	d102      	bne.n	801b576 <_sbrk_r+0x1a>
 801b570:	682b      	ldr	r3, [r5, #0]
 801b572:	b103      	cbz	r3, 801b576 <_sbrk_r+0x1a>
 801b574:	6023      	str	r3, [r4, #0]
 801b576:	bd38      	pop	{r3, r4, r5, pc}
 801b578:	2000a790 	.word	0x2000a790

0801b57c <_raise_r>:
 801b57c:	291f      	cmp	r1, #31
 801b57e:	b538      	push	{r3, r4, r5, lr}
 801b580:	4604      	mov	r4, r0
 801b582:	460d      	mov	r5, r1
 801b584:	d904      	bls.n	801b590 <_raise_r+0x14>
 801b586:	2316      	movs	r3, #22
 801b588:	6003      	str	r3, [r0, #0]
 801b58a:	f04f 30ff 	mov.w	r0, #4294967295
 801b58e:	bd38      	pop	{r3, r4, r5, pc}
 801b590:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801b592:	b112      	cbz	r2, 801b59a <_raise_r+0x1e>
 801b594:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801b598:	b94b      	cbnz	r3, 801b5ae <_raise_r+0x32>
 801b59a:	4620      	mov	r0, r4
 801b59c:	f000 f830 	bl	801b600 <_getpid_r>
 801b5a0:	462a      	mov	r2, r5
 801b5a2:	4601      	mov	r1, r0
 801b5a4:	4620      	mov	r0, r4
 801b5a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b5aa:	f000 b817 	b.w	801b5dc <_kill_r>
 801b5ae:	2b01      	cmp	r3, #1
 801b5b0:	d00a      	beq.n	801b5c8 <_raise_r+0x4c>
 801b5b2:	1c59      	adds	r1, r3, #1
 801b5b4:	d103      	bne.n	801b5be <_raise_r+0x42>
 801b5b6:	2316      	movs	r3, #22
 801b5b8:	6003      	str	r3, [r0, #0]
 801b5ba:	2001      	movs	r0, #1
 801b5bc:	e7e7      	b.n	801b58e <_raise_r+0x12>
 801b5be:	2400      	movs	r4, #0
 801b5c0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801b5c4:	4628      	mov	r0, r5
 801b5c6:	4798      	blx	r3
 801b5c8:	2000      	movs	r0, #0
 801b5ca:	e7e0      	b.n	801b58e <_raise_r+0x12>

0801b5cc <raise>:
 801b5cc:	4b02      	ldr	r3, [pc, #8]	; (801b5d8 <raise+0xc>)
 801b5ce:	4601      	mov	r1, r0
 801b5d0:	6818      	ldr	r0, [r3, #0]
 801b5d2:	f7ff bfd3 	b.w	801b57c <_raise_r>
 801b5d6:	bf00      	nop
 801b5d8:	200000d8 	.word	0x200000d8

0801b5dc <_kill_r>:
 801b5dc:	b538      	push	{r3, r4, r5, lr}
 801b5de:	4d07      	ldr	r5, [pc, #28]	; (801b5fc <_kill_r+0x20>)
 801b5e0:	2300      	movs	r3, #0
 801b5e2:	4604      	mov	r4, r0
 801b5e4:	4608      	mov	r0, r1
 801b5e6:	4611      	mov	r1, r2
 801b5e8:	602b      	str	r3, [r5, #0]
 801b5ea:	f7e6 fcb3 	bl	8001f54 <_kill>
 801b5ee:	1c43      	adds	r3, r0, #1
 801b5f0:	d102      	bne.n	801b5f8 <_kill_r+0x1c>
 801b5f2:	682b      	ldr	r3, [r5, #0]
 801b5f4:	b103      	cbz	r3, 801b5f8 <_kill_r+0x1c>
 801b5f6:	6023      	str	r3, [r4, #0]
 801b5f8:	bd38      	pop	{r3, r4, r5, pc}
 801b5fa:	bf00      	nop
 801b5fc:	2000a790 	.word	0x2000a790

0801b600 <_getpid_r>:
 801b600:	f7e6 bca6 	b.w	8001f50 <_getpid>

0801b604 <__swbuf_r>:
 801b604:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b606:	460e      	mov	r6, r1
 801b608:	4614      	mov	r4, r2
 801b60a:	4605      	mov	r5, r0
 801b60c:	b118      	cbz	r0, 801b616 <__swbuf_r+0x12>
 801b60e:	6983      	ldr	r3, [r0, #24]
 801b610:	b90b      	cbnz	r3, 801b616 <__swbuf_r+0x12>
 801b612:	f000 fa33 	bl	801ba7c <__sinit>
 801b616:	4b21      	ldr	r3, [pc, #132]	; (801b69c <__swbuf_r+0x98>)
 801b618:	429c      	cmp	r4, r3
 801b61a:	d12b      	bne.n	801b674 <__swbuf_r+0x70>
 801b61c:	686c      	ldr	r4, [r5, #4]
 801b61e:	69a3      	ldr	r3, [r4, #24]
 801b620:	60a3      	str	r3, [r4, #8]
 801b622:	89a3      	ldrh	r3, [r4, #12]
 801b624:	071a      	lsls	r2, r3, #28
 801b626:	d52f      	bpl.n	801b688 <__swbuf_r+0x84>
 801b628:	6923      	ldr	r3, [r4, #16]
 801b62a:	b36b      	cbz	r3, 801b688 <__swbuf_r+0x84>
 801b62c:	6923      	ldr	r3, [r4, #16]
 801b62e:	6820      	ldr	r0, [r4, #0]
 801b630:	1ac0      	subs	r0, r0, r3
 801b632:	6963      	ldr	r3, [r4, #20]
 801b634:	b2f6      	uxtb	r6, r6
 801b636:	4283      	cmp	r3, r0
 801b638:	4637      	mov	r7, r6
 801b63a:	dc04      	bgt.n	801b646 <__swbuf_r+0x42>
 801b63c:	4621      	mov	r1, r4
 801b63e:	4628      	mov	r0, r5
 801b640:	f000 f988 	bl	801b954 <_fflush_r>
 801b644:	bb30      	cbnz	r0, 801b694 <__swbuf_r+0x90>
 801b646:	68a3      	ldr	r3, [r4, #8]
 801b648:	3b01      	subs	r3, #1
 801b64a:	60a3      	str	r3, [r4, #8]
 801b64c:	6823      	ldr	r3, [r4, #0]
 801b64e:	1c5a      	adds	r2, r3, #1
 801b650:	6022      	str	r2, [r4, #0]
 801b652:	701e      	strb	r6, [r3, #0]
 801b654:	6963      	ldr	r3, [r4, #20]
 801b656:	3001      	adds	r0, #1
 801b658:	4283      	cmp	r3, r0
 801b65a:	d004      	beq.n	801b666 <__swbuf_r+0x62>
 801b65c:	89a3      	ldrh	r3, [r4, #12]
 801b65e:	07db      	lsls	r3, r3, #31
 801b660:	d506      	bpl.n	801b670 <__swbuf_r+0x6c>
 801b662:	2e0a      	cmp	r6, #10
 801b664:	d104      	bne.n	801b670 <__swbuf_r+0x6c>
 801b666:	4621      	mov	r1, r4
 801b668:	4628      	mov	r0, r5
 801b66a:	f000 f973 	bl	801b954 <_fflush_r>
 801b66e:	b988      	cbnz	r0, 801b694 <__swbuf_r+0x90>
 801b670:	4638      	mov	r0, r7
 801b672:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b674:	4b0a      	ldr	r3, [pc, #40]	; (801b6a0 <__swbuf_r+0x9c>)
 801b676:	429c      	cmp	r4, r3
 801b678:	d101      	bne.n	801b67e <__swbuf_r+0x7a>
 801b67a:	68ac      	ldr	r4, [r5, #8]
 801b67c:	e7cf      	b.n	801b61e <__swbuf_r+0x1a>
 801b67e:	4b09      	ldr	r3, [pc, #36]	; (801b6a4 <__swbuf_r+0xa0>)
 801b680:	429c      	cmp	r4, r3
 801b682:	bf08      	it	eq
 801b684:	68ec      	ldreq	r4, [r5, #12]
 801b686:	e7ca      	b.n	801b61e <__swbuf_r+0x1a>
 801b688:	4621      	mov	r1, r4
 801b68a:	4628      	mov	r0, r5
 801b68c:	f000 f80c 	bl	801b6a8 <__swsetup_r>
 801b690:	2800      	cmp	r0, #0
 801b692:	d0cb      	beq.n	801b62c <__swbuf_r+0x28>
 801b694:	f04f 37ff 	mov.w	r7, #4294967295
 801b698:	e7ea      	b.n	801b670 <__swbuf_r+0x6c>
 801b69a:	bf00      	nop
 801b69c:	0801f394 	.word	0x0801f394
 801b6a0:	0801f3b4 	.word	0x0801f3b4
 801b6a4:	0801f374 	.word	0x0801f374

0801b6a8 <__swsetup_r>:
 801b6a8:	4b32      	ldr	r3, [pc, #200]	; (801b774 <__swsetup_r+0xcc>)
 801b6aa:	b570      	push	{r4, r5, r6, lr}
 801b6ac:	681d      	ldr	r5, [r3, #0]
 801b6ae:	4606      	mov	r6, r0
 801b6b0:	460c      	mov	r4, r1
 801b6b2:	b125      	cbz	r5, 801b6be <__swsetup_r+0x16>
 801b6b4:	69ab      	ldr	r3, [r5, #24]
 801b6b6:	b913      	cbnz	r3, 801b6be <__swsetup_r+0x16>
 801b6b8:	4628      	mov	r0, r5
 801b6ba:	f000 f9df 	bl	801ba7c <__sinit>
 801b6be:	4b2e      	ldr	r3, [pc, #184]	; (801b778 <__swsetup_r+0xd0>)
 801b6c0:	429c      	cmp	r4, r3
 801b6c2:	d10f      	bne.n	801b6e4 <__swsetup_r+0x3c>
 801b6c4:	686c      	ldr	r4, [r5, #4]
 801b6c6:	89a3      	ldrh	r3, [r4, #12]
 801b6c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b6cc:	0719      	lsls	r1, r3, #28
 801b6ce:	d42c      	bmi.n	801b72a <__swsetup_r+0x82>
 801b6d0:	06dd      	lsls	r5, r3, #27
 801b6d2:	d411      	bmi.n	801b6f8 <__swsetup_r+0x50>
 801b6d4:	2309      	movs	r3, #9
 801b6d6:	6033      	str	r3, [r6, #0]
 801b6d8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801b6dc:	81a3      	strh	r3, [r4, #12]
 801b6de:	f04f 30ff 	mov.w	r0, #4294967295
 801b6e2:	e03e      	b.n	801b762 <__swsetup_r+0xba>
 801b6e4:	4b25      	ldr	r3, [pc, #148]	; (801b77c <__swsetup_r+0xd4>)
 801b6e6:	429c      	cmp	r4, r3
 801b6e8:	d101      	bne.n	801b6ee <__swsetup_r+0x46>
 801b6ea:	68ac      	ldr	r4, [r5, #8]
 801b6ec:	e7eb      	b.n	801b6c6 <__swsetup_r+0x1e>
 801b6ee:	4b24      	ldr	r3, [pc, #144]	; (801b780 <__swsetup_r+0xd8>)
 801b6f0:	429c      	cmp	r4, r3
 801b6f2:	bf08      	it	eq
 801b6f4:	68ec      	ldreq	r4, [r5, #12]
 801b6f6:	e7e6      	b.n	801b6c6 <__swsetup_r+0x1e>
 801b6f8:	0758      	lsls	r0, r3, #29
 801b6fa:	d512      	bpl.n	801b722 <__swsetup_r+0x7a>
 801b6fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801b6fe:	b141      	cbz	r1, 801b712 <__swsetup_r+0x6a>
 801b700:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801b704:	4299      	cmp	r1, r3
 801b706:	d002      	beq.n	801b70e <__swsetup_r+0x66>
 801b708:	4630      	mov	r0, r6
 801b70a:	f7ff fb59 	bl	801adc0 <_free_r>
 801b70e:	2300      	movs	r3, #0
 801b710:	6363      	str	r3, [r4, #52]	; 0x34
 801b712:	89a3      	ldrh	r3, [r4, #12]
 801b714:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801b718:	81a3      	strh	r3, [r4, #12]
 801b71a:	2300      	movs	r3, #0
 801b71c:	6063      	str	r3, [r4, #4]
 801b71e:	6923      	ldr	r3, [r4, #16]
 801b720:	6023      	str	r3, [r4, #0]
 801b722:	89a3      	ldrh	r3, [r4, #12]
 801b724:	f043 0308 	orr.w	r3, r3, #8
 801b728:	81a3      	strh	r3, [r4, #12]
 801b72a:	6923      	ldr	r3, [r4, #16]
 801b72c:	b94b      	cbnz	r3, 801b742 <__swsetup_r+0x9a>
 801b72e:	89a3      	ldrh	r3, [r4, #12]
 801b730:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801b734:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801b738:	d003      	beq.n	801b742 <__swsetup_r+0x9a>
 801b73a:	4621      	mov	r1, r4
 801b73c:	4630      	mov	r0, r6
 801b73e:	f000 fa63 	bl	801bc08 <__smakebuf_r>
 801b742:	89a0      	ldrh	r0, [r4, #12]
 801b744:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b748:	f010 0301 	ands.w	r3, r0, #1
 801b74c:	d00a      	beq.n	801b764 <__swsetup_r+0xbc>
 801b74e:	2300      	movs	r3, #0
 801b750:	60a3      	str	r3, [r4, #8]
 801b752:	6963      	ldr	r3, [r4, #20]
 801b754:	425b      	negs	r3, r3
 801b756:	61a3      	str	r3, [r4, #24]
 801b758:	6923      	ldr	r3, [r4, #16]
 801b75a:	b943      	cbnz	r3, 801b76e <__swsetup_r+0xc6>
 801b75c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801b760:	d1ba      	bne.n	801b6d8 <__swsetup_r+0x30>
 801b762:	bd70      	pop	{r4, r5, r6, pc}
 801b764:	0781      	lsls	r1, r0, #30
 801b766:	bf58      	it	pl
 801b768:	6963      	ldrpl	r3, [r4, #20]
 801b76a:	60a3      	str	r3, [r4, #8]
 801b76c:	e7f4      	b.n	801b758 <__swsetup_r+0xb0>
 801b76e:	2000      	movs	r0, #0
 801b770:	e7f7      	b.n	801b762 <__swsetup_r+0xba>
 801b772:	bf00      	nop
 801b774:	200000d8 	.word	0x200000d8
 801b778:	0801f394 	.word	0x0801f394
 801b77c:	0801f3b4 	.word	0x0801f3b4
 801b780:	0801f374 	.word	0x0801f374

0801b784 <__register_exitproc>:
 801b784:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b788:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801b844 <__register_exitproc+0xc0>
 801b78c:	4606      	mov	r6, r0
 801b78e:	f8d8 0000 	ldr.w	r0, [r8]
 801b792:	461f      	mov	r7, r3
 801b794:	460d      	mov	r5, r1
 801b796:	4691      	mov	r9, r2
 801b798:	f000 fa0e 	bl	801bbb8 <__retarget_lock_acquire_recursive>
 801b79c:	4b25      	ldr	r3, [pc, #148]	; (801b834 <__register_exitproc+0xb0>)
 801b79e:	681c      	ldr	r4, [r3, #0]
 801b7a0:	b934      	cbnz	r4, 801b7b0 <__register_exitproc+0x2c>
 801b7a2:	4c25      	ldr	r4, [pc, #148]	; (801b838 <__register_exitproc+0xb4>)
 801b7a4:	601c      	str	r4, [r3, #0]
 801b7a6:	4b25      	ldr	r3, [pc, #148]	; (801b83c <__register_exitproc+0xb8>)
 801b7a8:	b113      	cbz	r3, 801b7b0 <__register_exitproc+0x2c>
 801b7aa:	681b      	ldr	r3, [r3, #0]
 801b7ac:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801b7b0:	6863      	ldr	r3, [r4, #4]
 801b7b2:	2b1f      	cmp	r3, #31
 801b7b4:	dd07      	ble.n	801b7c6 <__register_exitproc+0x42>
 801b7b6:	f8d8 0000 	ldr.w	r0, [r8]
 801b7ba:	f000 f9ff 	bl	801bbbc <__retarget_lock_release_recursive>
 801b7be:	f04f 30ff 	mov.w	r0, #4294967295
 801b7c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b7c6:	b34e      	cbz	r6, 801b81c <__register_exitproc+0x98>
 801b7c8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801b7cc:	b988      	cbnz	r0, 801b7f2 <__register_exitproc+0x6e>
 801b7ce:	4b1c      	ldr	r3, [pc, #112]	; (801b840 <__register_exitproc+0xbc>)
 801b7d0:	b923      	cbnz	r3, 801b7dc <__register_exitproc+0x58>
 801b7d2:	f8d8 0000 	ldr.w	r0, [r8]
 801b7d6:	f000 f9f0 	bl	801bbba <__retarget_lock_release>
 801b7da:	e7f0      	b.n	801b7be <__register_exitproc+0x3a>
 801b7dc:	f44f 7084 	mov.w	r0, #264	; 0x108
 801b7e0:	f7ff fac8 	bl	801ad74 <malloc>
 801b7e4:	2800      	cmp	r0, #0
 801b7e6:	d0f4      	beq.n	801b7d2 <__register_exitproc+0x4e>
 801b7e8:	2300      	movs	r3, #0
 801b7ea:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801b7ee:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801b7f2:	6863      	ldr	r3, [r4, #4]
 801b7f4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801b7f8:	2201      	movs	r2, #1
 801b7fa:	409a      	lsls	r2, r3
 801b7fc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801b800:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801b804:	4313      	orrs	r3, r2
 801b806:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801b80a:	2e02      	cmp	r6, #2
 801b80c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801b810:	bf02      	ittt	eq
 801b812:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801b816:	4313      	orreq	r3, r2
 801b818:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801b81c:	6863      	ldr	r3, [r4, #4]
 801b81e:	f8d8 0000 	ldr.w	r0, [r8]
 801b822:	1c5a      	adds	r2, r3, #1
 801b824:	3302      	adds	r3, #2
 801b826:	6062      	str	r2, [r4, #4]
 801b828:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801b82c:	f000 f9c6 	bl	801bbbc <__retarget_lock_release_recursive>
 801b830:	2000      	movs	r0, #0
 801b832:	e7c6      	b.n	801b7c2 <__register_exitproc+0x3e>
 801b834:	2000a788 	.word	0x2000a788
 801b838:	2000a6fc 	.word	0x2000a6fc
 801b83c:	0801f370 	.word	0x0801f370
 801b840:	0801ad75 	.word	0x0801ad75
 801b844:	2000013c 	.word	0x2000013c

0801b848 <__sflush_r>:
 801b848:	898a      	ldrh	r2, [r1, #12]
 801b84a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b84e:	4605      	mov	r5, r0
 801b850:	0710      	lsls	r0, r2, #28
 801b852:	460c      	mov	r4, r1
 801b854:	d458      	bmi.n	801b908 <__sflush_r+0xc0>
 801b856:	684b      	ldr	r3, [r1, #4]
 801b858:	2b00      	cmp	r3, #0
 801b85a:	dc05      	bgt.n	801b868 <__sflush_r+0x20>
 801b85c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801b85e:	2b00      	cmp	r3, #0
 801b860:	dc02      	bgt.n	801b868 <__sflush_r+0x20>
 801b862:	2000      	movs	r0, #0
 801b864:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b868:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801b86a:	2e00      	cmp	r6, #0
 801b86c:	d0f9      	beq.n	801b862 <__sflush_r+0x1a>
 801b86e:	2300      	movs	r3, #0
 801b870:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801b874:	682f      	ldr	r7, [r5, #0]
 801b876:	602b      	str	r3, [r5, #0]
 801b878:	d032      	beq.n	801b8e0 <__sflush_r+0x98>
 801b87a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801b87c:	89a3      	ldrh	r3, [r4, #12]
 801b87e:	075a      	lsls	r2, r3, #29
 801b880:	d505      	bpl.n	801b88e <__sflush_r+0x46>
 801b882:	6863      	ldr	r3, [r4, #4]
 801b884:	1ac0      	subs	r0, r0, r3
 801b886:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801b888:	b10b      	cbz	r3, 801b88e <__sflush_r+0x46>
 801b88a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801b88c:	1ac0      	subs	r0, r0, r3
 801b88e:	2300      	movs	r3, #0
 801b890:	4602      	mov	r2, r0
 801b892:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801b894:	6a21      	ldr	r1, [r4, #32]
 801b896:	4628      	mov	r0, r5
 801b898:	47b0      	blx	r6
 801b89a:	1c43      	adds	r3, r0, #1
 801b89c:	89a3      	ldrh	r3, [r4, #12]
 801b89e:	d106      	bne.n	801b8ae <__sflush_r+0x66>
 801b8a0:	6829      	ldr	r1, [r5, #0]
 801b8a2:	291d      	cmp	r1, #29
 801b8a4:	d82c      	bhi.n	801b900 <__sflush_r+0xb8>
 801b8a6:	4a2a      	ldr	r2, [pc, #168]	; (801b950 <__sflush_r+0x108>)
 801b8a8:	40ca      	lsrs	r2, r1
 801b8aa:	07d6      	lsls	r6, r2, #31
 801b8ac:	d528      	bpl.n	801b900 <__sflush_r+0xb8>
 801b8ae:	2200      	movs	r2, #0
 801b8b0:	6062      	str	r2, [r4, #4]
 801b8b2:	04d9      	lsls	r1, r3, #19
 801b8b4:	6922      	ldr	r2, [r4, #16]
 801b8b6:	6022      	str	r2, [r4, #0]
 801b8b8:	d504      	bpl.n	801b8c4 <__sflush_r+0x7c>
 801b8ba:	1c42      	adds	r2, r0, #1
 801b8bc:	d101      	bne.n	801b8c2 <__sflush_r+0x7a>
 801b8be:	682b      	ldr	r3, [r5, #0]
 801b8c0:	b903      	cbnz	r3, 801b8c4 <__sflush_r+0x7c>
 801b8c2:	6560      	str	r0, [r4, #84]	; 0x54
 801b8c4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801b8c6:	602f      	str	r7, [r5, #0]
 801b8c8:	2900      	cmp	r1, #0
 801b8ca:	d0ca      	beq.n	801b862 <__sflush_r+0x1a>
 801b8cc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801b8d0:	4299      	cmp	r1, r3
 801b8d2:	d002      	beq.n	801b8da <__sflush_r+0x92>
 801b8d4:	4628      	mov	r0, r5
 801b8d6:	f7ff fa73 	bl	801adc0 <_free_r>
 801b8da:	2000      	movs	r0, #0
 801b8dc:	6360      	str	r0, [r4, #52]	; 0x34
 801b8de:	e7c1      	b.n	801b864 <__sflush_r+0x1c>
 801b8e0:	6a21      	ldr	r1, [r4, #32]
 801b8e2:	2301      	movs	r3, #1
 801b8e4:	4628      	mov	r0, r5
 801b8e6:	47b0      	blx	r6
 801b8e8:	1c41      	adds	r1, r0, #1
 801b8ea:	d1c7      	bne.n	801b87c <__sflush_r+0x34>
 801b8ec:	682b      	ldr	r3, [r5, #0]
 801b8ee:	2b00      	cmp	r3, #0
 801b8f0:	d0c4      	beq.n	801b87c <__sflush_r+0x34>
 801b8f2:	2b1d      	cmp	r3, #29
 801b8f4:	d001      	beq.n	801b8fa <__sflush_r+0xb2>
 801b8f6:	2b16      	cmp	r3, #22
 801b8f8:	d101      	bne.n	801b8fe <__sflush_r+0xb6>
 801b8fa:	602f      	str	r7, [r5, #0]
 801b8fc:	e7b1      	b.n	801b862 <__sflush_r+0x1a>
 801b8fe:	89a3      	ldrh	r3, [r4, #12]
 801b900:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b904:	81a3      	strh	r3, [r4, #12]
 801b906:	e7ad      	b.n	801b864 <__sflush_r+0x1c>
 801b908:	690f      	ldr	r7, [r1, #16]
 801b90a:	2f00      	cmp	r7, #0
 801b90c:	d0a9      	beq.n	801b862 <__sflush_r+0x1a>
 801b90e:	0793      	lsls	r3, r2, #30
 801b910:	680e      	ldr	r6, [r1, #0]
 801b912:	bf08      	it	eq
 801b914:	694b      	ldreq	r3, [r1, #20]
 801b916:	600f      	str	r7, [r1, #0]
 801b918:	bf18      	it	ne
 801b91a:	2300      	movne	r3, #0
 801b91c:	eba6 0807 	sub.w	r8, r6, r7
 801b920:	608b      	str	r3, [r1, #8]
 801b922:	f1b8 0f00 	cmp.w	r8, #0
 801b926:	dd9c      	ble.n	801b862 <__sflush_r+0x1a>
 801b928:	6a21      	ldr	r1, [r4, #32]
 801b92a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801b92c:	4643      	mov	r3, r8
 801b92e:	463a      	mov	r2, r7
 801b930:	4628      	mov	r0, r5
 801b932:	47b0      	blx	r6
 801b934:	2800      	cmp	r0, #0
 801b936:	dc06      	bgt.n	801b946 <__sflush_r+0xfe>
 801b938:	89a3      	ldrh	r3, [r4, #12]
 801b93a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801b93e:	81a3      	strh	r3, [r4, #12]
 801b940:	f04f 30ff 	mov.w	r0, #4294967295
 801b944:	e78e      	b.n	801b864 <__sflush_r+0x1c>
 801b946:	4407      	add	r7, r0
 801b948:	eba8 0800 	sub.w	r8, r8, r0
 801b94c:	e7e9      	b.n	801b922 <__sflush_r+0xda>
 801b94e:	bf00      	nop
 801b950:	20400001 	.word	0x20400001

0801b954 <_fflush_r>:
 801b954:	b538      	push	{r3, r4, r5, lr}
 801b956:	690b      	ldr	r3, [r1, #16]
 801b958:	4605      	mov	r5, r0
 801b95a:	460c      	mov	r4, r1
 801b95c:	b913      	cbnz	r3, 801b964 <_fflush_r+0x10>
 801b95e:	2500      	movs	r5, #0
 801b960:	4628      	mov	r0, r5
 801b962:	bd38      	pop	{r3, r4, r5, pc}
 801b964:	b118      	cbz	r0, 801b96e <_fflush_r+0x1a>
 801b966:	6983      	ldr	r3, [r0, #24]
 801b968:	b90b      	cbnz	r3, 801b96e <_fflush_r+0x1a>
 801b96a:	f000 f887 	bl	801ba7c <__sinit>
 801b96e:	4b14      	ldr	r3, [pc, #80]	; (801b9c0 <_fflush_r+0x6c>)
 801b970:	429c      	cmp	r4, r3
 801b972:	d11b      	bne.n	801b9ac <_fflush_r+0x58>
 801b974:	686c      	ldr	r4, [r5, #4]
 801b976:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801b97a:	2b00      	cmp	r3, #0
 801b97c:	d0ef      	beq.n	801b95e <_fflush_r+0xa>
 801b97e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801b980:	07d0      	lsls	r0, r2, #31
 801b982:	d404      	bmi.n	801b98e <_fflush_r+0x3a>
 801b984:	0599      	lsls	r1, r3, #22
 801b986:	d402      	bmi.n	801b98e <_fflush_r+0x3a>
 801b988:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b98a:	f000 f915 	bl	801bbb8 <__retarget_lock_acquire_recursive>
 801b98e:	4628      	mov	r0, r5
 801b990:	4621      	mov	r1, r4
 801b992:	f7ff ff59 	bl	801b848 <__sflush_r>
 801b996:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801b998:	07da      	lsls	r2, r3, #31
 801b99a:	4605      	mov	r5, r0
 801b99c:	d4e0      	bmi.n	801b960 <_fflush_r+0xc>
 801b99e:	89a3      	ldrh	r3, [r4, #12]
 801b9a0:	059b      	lsls	r3, r3, #22
 801b9a2:	d4dd      	bmi.n	801b960 <_fflush_r+0xc>
 801b9a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801b9a6:	f000 f909 	bl	801bbbc <__retarget_lock_release_recursive>
 801b9aa:	e7d9      	b.n	801b960 <_fflush_r+0xc>
 801b9ac:	4b05      	ldr	r3, [pc, #20]	; (801b9c4 <_fflush_r+0x70>)
 801b9ae:	429c      	cmp	r4, r3
 801b9b0:	d101      	bne.n	801b9b6 <_fflush_r+0x62>
 801b9b2:	68ac      	ldr	r4, [r5, #8]
 801b9b4:	e7df      	b.n	801b976 <_fflush_r+0x22>
 801b9b6:	4b04      	ldr	r3, [pc, #16]	; (801b9c8 <_fflush_r+0x74>)
 801b9b8:	429c      	cmp	r4, r3
 801b9ba:	bf08      	it	eq
 801b9bc:	68ec      	ldreq	r4, [r5, #12]
 801b9be:	e7da      	b.n	801b976 <_fflush_r+0x22>
 801b9c0:	0801f394 	.word	0x0801f394
 801b9c4:	0801f3b4 	.word	0x0801f3b4
 801b9c8:	0801f374 	.word	0x0801f374

0801b9cc <std>:
 801b9cc:	2300      	movs	r3, #0
 801b9ce:	b510      	push	{r4, lr}
 801b9d0:	4604      	mov	r4, r0
 801b9d2:	e9c0 3300 	strd	r3, r3, [r0]
 801b9d6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801b9da:	6083      	str	r3, [r0, #8]
 801b9dc:	8181      	strh	r1, [r0, #12]
 801b9de:	6643      	str	r3, [r0, #100]	; 0x64
 801b9e0:	81c2      	strh	r2, [r0, #14]
 801b9e2:	6183      	str	r3, [r0, #24]
 801b9e4:	4619      	mov	r1, r3
 801b9e6:	2208      	movs	r2, #8
 801b9e8:	305c      	adds	r0, #92	; 0x5c
 801b9ea:	f7ff f9e1 	bl	801adb0 <memset>
 801b9ee:	4b05      	ldr	r3, [pc, #20]	; (801ba04 <std+0x38>)
 801b9f0:	6263      	str	r3, [r4, #36]	; 0x24
 801b9f2:	4b05      	ldr	r3, [pc, #20]	; (801ba08 <std+0x3c>)
 801b9f4:	62a3      	str	r3, [r4, #40]	; 0x28
 801b9f6:	4b05      	ldr	r3, [pc, #20]	; (801ba0c <std+0x40>)
 801b9f8:	62e3      	str	r3, [r4, #44]	; 0x2c
 801b9fa:	4b05      	ldr	r3, [pc, #20]	; (801ba10 <std+0x44>)
 801b9fc:	6224      	str	r4, [r4, #32]
 801b9fe:	6323      	str	r3, [r4, #48]	; 0x30
 801ba00:	bd10      	pop	{r4, pc}
 801ba02:	bf00      	nop
 801ba04:	0801bca1 	.word	0x0801bca1
 801ba08:	0801bcc3 	.word	0x0801bcc3
 801ba0c:	0801bcfb 	.word	0x0801bcfb
 801ba10:	0801bd1f 	.word	0x0801bd1f

0801ba14 <_cleanup_r>:
 801ba14:	4901      	ldr	r1, [pc, #4]	; (801ba1c <_cleanup_r+0x8>)
 801ba16:	f000 b8af 	b.w	801bb78 <_fwalk_reent>
 801ba1a:	bf00      	nop
 801ba1c:	0801b955 	.word	0x0801b955

0801ba20 <__sfmoreglue>:
 801ba20:	b570      	push	{r4, r5, r6, lr}
 801ba22:	2268      	movs	r2, #104	; 0x68
 801ba24:	1e4d      	subs	r5, r1, #1
 801ba26:	4355      	muls	r5, r2
 801ba28:	460e      	mov	r6, r1
 801ba2a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801ba2e:	f7ff fa33 	bl	801ae98 <_malloc_r>
 801ba32:	4604      	mov	r4, r0
 801ba34:	b140      	cbz	r0, 801ba48 <__sfmoreglue+0x28>
 801ba36:	2100      	movs	r1, #0
 801ba38:	e9c0 1600 	strd	r1, r6, [r0]
 801ba3c:	300c      	adds	r0, #12
 801ba3e:	60a0      	str	r0, [r4, #8]
 801ba40:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801ba44:	f7ff f9b4 	bl	801adb0 <memset>
 801ba48:	4620      	mov	r0, r4
 801ba4a:	bd70      	pop	{r4, r5, r6, pc}

0801ba4c <__sfp_lock_acquire>:
 801ba4c:	4801      	ldr	r0, [pc, #4]	; (801ba54 <__sfp_lock_acquire+0x8>)
 801ba4e:	f000 b8b3 	b.w	801bbb8 <__retarget_lock_acquire_recursive>
 801ba52:	bf00      	nop
 801ba54:	2000a78e 	.word	0x2000a78e

0801ba58 <__sfp_lock_release>:
 801ba58:	4801      	ldr	r0, [pc, #4]	; (801ba60 <__sfp_lock_release+0x8>)
 801ba5a:	f000 b8af 	b.w	801bbbc <__retarget_lock_release_recursive>
 801ba5e:	bf00      	nop
 801ba60:	2000a78e 	.word	0x2000a78e

0801ba64 <__sinit_lock_acquire>:
 801ba64:	4801      	ldr	r0, [pc, #4]	; (801ba6c <__sinit_lock_acquire+0x8>)
 801ba66:	f000 b8a7 	b.w	801bbb8 <__retarget_lock_acquire_recursive>
 801ba6a:	bf00      	nop
 801ba6c:	2000a78f 	.word	0x2000a78f

0801ba70 <__sinit_lock_release>:
 801ba70:	4801      	ldr	r0, [pc, #4]	; (801ba78 <__sinit_lock_release+0x8>)
 801ba72:	f000 b8a3 	b.w	801bbbc <__retarget_lock_release_recursive>
 801ba76:	bf00      	nop
 801ba78:	2000a78f 	.word	0x2000a78f

0801ba7c <__sinit>:
 801ba7c:	b510      	push	{r4, lr}
 801ba7e:	4604      	mov	r4, r0
 801ba80:	f7ff fff0 	bl	801ba64 <__sinit_lock_acquire>
 801ba84:	69a3      	ldr	r3, [r4, #24]
 801ba86:	b11b      	cbz	r3, 801ba90 <__sinit+0x14>
 801ba88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ba8c:	f7ff bff0 	b.w	801ba70 <__sinit_lock_release>
 801ba90:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801ba94:	6523      	str	r3, [r4, #80]	; 0x50
 801ba96:	4b13      	ldr	r3, [pc, #76]	; (801bae4 <__sinit+0x68>)
 801ba98:	4a13      	ldr	r2, [pc, #76]	; (801bae8 <__sinit+0x6c>)
 801ba9a:	681b      	ldr	r3, [r3, #0]
 801ba9c:	62a2      	str	r2, [r4, #40]	; 0x28
 801ba9e:	42a3      	cmp	r3, r4
 801baa0:	bf04      	itt	eq
 801baa2:	2301      	moveq	r3, #1
 801baa4:	61a3      	streq	r3, [r4, #24]
 801baa6:	4620      	mov	r0, r4
 801baa8:	f000 f820 	bl	801baec <__sfp>
 801baac:	6060      	str	r0, [r4, #4]
 801baae:	4620      	mov	r0, r4
 801bab0:	f000 f81c 	bl	801baec <__sfp>
 801bab4:	60a0      	str	r0, [r4, #8]
 801bab6:	4620      	mov	r0, r4
 801bab8:	f000 f818 	bl	801baec <__sfp>
 801babc:	2200      	movs	r2, #0
 801babe:	60e0      	str	r0, [r4, #12]
 801bac0:	2104      	movs	r1, #4
 801bac2:	6860      	ldr	r0, [r4, #4]
 801bac4:	f7ff ff82 	bl	801b9cc <std>
 801bac8:	68a0      	ldr	r0, [r4, #8]
 801baca:	2201      	movs	r2, #1
 801bacc:	2109      	movs	r1, #9
 801bace:	f7ff ff7d 	bl	801b9cc <std>
 801bad2:	68e0      	ldr	r0, [r4, #12]
 801bad4:	2202      	movs	r2, #2
 801bad6:	2112      	movs	r1, #18
 801bad8:	f7ff ff78 	bl	801b9cc <std>
 801badc:	2301      	movs	r3, #1
 801bade:	61a3      	str	r3, [r4, #24]
 801bae0:	e7d2      	b.n	801ba88 <__sinit+0xc>
 801bae2:	bf00      	nop
 801bae4:	0801f338 	.word	0x0801f338
 801bae8:	0801ba15 	.word	0x0801ba15

0801baec <__sfp>:
 801baec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801baee:	4607      	mov	r7, r0
 801baf0:	f7ff ffac 	bl	801ba4c <__sfp_lock_acquire>
 801baf4:	4b1e      	ldr	r3, [pc, #120]	; (801bb70 <__sfp+0x84>)
 801baf6:	681e      	ldr	r6, [r3, #0]
 801baf8:	69b3      	ldr	r3, [r6, #24]
 801bafa:	b913      	cbnz	r3, 801bb02 <__sfp+0x16>
 801bafc:	4630      	mov	r0, r6
 801bafe:	f7ff ffbd 	bl	801ba7c <__sinit>
 801bb02:	3648      	adds	r6, #72	; 0x48
 801bb04:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801bb08:	3b01      	subs	r3, #1
 801bb0a:	d503      	bpl.n	801bb14 <__sfp+0x28>
 801bb0c:	6833      	ldr	r3, [r6, #0]
 801bb0e:	b30b      	cbz	r3, 801bb54 <__sfp+0x68>
 801bb10:	6836      	ldr	r6, [r6, #0]
 801bb12:	e7f7      	b.n	801bb04 <__sfp+0x18>
 801bb14:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801bb18:	b9d5      	cbnz	r5, 801bb50 <__sfp+0x64>
 801bb1a:	4b16      	ldr	r3, [pc, #88]	; (801bb74 <__sfp+0x88>)
 801bb1c:	60e3      	str	r3, [r4, #12]
 801bb1e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801bb22:	6665      	str	r5, [r4, #100]	; 0x64
 801bb24:	f000 f847 	bl	801bbb6 <__retarget_lock_init_recursive>
 801bb28:	f7ff ff96 	bl	801ba58 <__sfp_lock_release>
 801bb2c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801bb30:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801bb34:	6025      	str	r5, [r4, #0]
 801bb36:	61a5      	str	r5, [r4, #24]
 801bb38:	2208      	movs	r2, #8
 801bb3a:	4629      	mov	r1, r5
 801bb3c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801bb40:	f7ff f936 	bl	801adb0 <memset>
 801bb44:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801bb48:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801bb4c:	4620      	mov	r0, r4
 801bb4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801bb50:	3468      	adds	r4, #104	; 0x68
 801bb52:	e7d9      	b.n	801bb08 <__sfp+0x1c>
 801bb54:	2104      	movs	r1, #4
 801bb56:	4638      	mov	r0, r7
 801bb58:	f7ff ff62 	bl	801ba20 <__sfmoreglue>
 801bb5c:	4604      	mov	r4, r0
 801bb5e:	6030      	str	r0, [r6, #0]
 801bb60:	2800      	cmp	r0, #0
 801bb62:	d1d5      	bne.n	801bb10 <__sfp+0x24>
 801bb64:	f7ff ff78 	bl	801ba58 <__sfp_lock_release>
 801bb68:	230c      	movs	r3, #12
 801bb6a:	603b      	str	r3, [r7, #0]
 801bb6c:	e7ee      	b.n	801bb4c <__sfp+0x60>
 801bb6e:	bf00      	nop
 801bb70:	0801f338 	.word	0x0801f338
 801bb74:	ffff0001 	.word	0xffff0001

0801bb78 <_fwalk_reent>:
 801bb78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801bb7c:	4606      	mov	r6, r0
 801bb7e:	4688      	mov	r8, r1
 801bb80:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801bb84:	2700      	movs	r7, #0
 801bb86:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801bb8a:	f1b9 0901 	subs.w	r9, r9, #1
 801bb8e:	d505      	bpl.n	801bb9c <_fwalk_reent+0x24>
 801bb90:	6824      	ldr	r4, [r4, #0]
 801bb92:	2c00      	cmp	r4, #0
 801bb94:	d1f7      	bne.n	801bb86 <_fwalk_reent+0xe>
 801bb96:	4638      	mov	r0, r7
 801bb98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801bb9c:	89ab      	ldrh	r3, [r5, #12]
 801bb9e:	2b01      	cmp	r3, #1
 801bba0:	d907      	bls.n	801bbb2 <_fwalk_reent+0x3a>
 801bba2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801bba6:	3301      	adds	r3, #1
 801bba8:	d003      	beq.n	801bbb2 <_fwalk_reent+0x3a>
 801bbaa:	4629      	mov	r1, r5
 801bbac:	4630      	mov	r0, r6
 801bbae:	47c0      	blx	r8
 801bbb0:	4307      	orrs	r7, r0
 801bbb2:	3568      	adds	r5, #104	; 0x68
 801bbb4:	e7e9      	b.n	801bb8a <_fwalk_reent+0x12>

0801bbb6 <__retarget_lock_init_recursive>:
 801bbb6:	4770      	bx	lr

0801bbb8 <__retarget_lock_acquire_recursive>:
 801bbb8:	4770      	bx	lr

0801bbba <__retarget_lock_release>:
 801bbba:	4770      	bx	lr

0801bbbc <__retarget_lock_release_recursive>:
 801bbbc:	4770      	bx	lr

0801bbbe <__swhatbuf_r>:
 801bbbe:	b570      	push	{r4, r5, r6, lr}
 801bbc0:	460e      	mov	r6, r1
 801bbc2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bbc6:	2900      	cmp	r1, #0
 801bbc8:	b096      	sub	sp, #88	; 0x58
 801bbca:	4614      	mov	r4, r2
 801bbcc:	461d      	mov	r5, r3
 801bbce:	da08      	bge.n	801bbe2 <__swhatbuf_r+0x24>
 801bbd0:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801bbd4:	2200      	movs	r2, #0
 801bbd6:	602a      	str	r2, [r5, #0]
 801bbd8:	061a      	lsls	r2, r3, #24
 801bbda:	d410      	bmi.n	801bbfe <__swhatbuf_r+0x40>
 801bbdc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801bbe0:	e00e      	b.n	801bc00 <__swhatbuf_r+0x42>
 801bbe2:	466a      	mov	r2, sp
 801bbe4:	f000 f8c2 	bl	801bd6c <_fstat_r>
 801bbe8:	2800      	cmp	r0, #0
 801bbea:	dbf1      	blt.n	801bbd0 <__swhatbuf_r+0x12>
 801bbec:	9a01      	ldr	r2, [sp, #4]
 801bbee:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801bbf2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801bbf6:	425a      	negs	r2, r3
 801bbf8:	415a      	adcs	r2, r3
 801bbfa:	602a      	str	r2, [r5, #0]
 801bbfc:	e7ee      	b.n	801bbdc <__swhatbuf_r+0x1e>
 801bbfe:	2340      	movs	r3, #64	; 0x40
 801bc00:	2000      	movs	r0, #0
 801bc02:	6023      	str	r3, [r4, #0]
 801bc04:	b016      	add	sp, #88	; 0x58
 801bc06:	bd70      	pop	{r4, r5, r6, pc}

0801bc08 <__smakebuf_r>:
 801bc08:	898b      	ldrh	r3, [r1, #12]
 801bc0a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801bc0c:	079d      	lsls	r5, r3, #30
 801bc0e:	4606      	mov	r6, r0
 801bc10:	460c      	mov	r4, r1
 801bc12:	d507      	bpl.n	801bc24 <__smakebuf_r+0x1c>
 801bc14:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801bc18:	6023      	str	r3, [r4, #0]
 801bc1a:	6123      	str	r3, [r4, #16]
 801bc1c:	2301      	movs	r3, #1
 801bc1e:	6163      	str	r3, [r4, #20]
 801bc20:	b002      	add	sp, #8
 801bc22:	bd70      	pop	{r4, r5, r6, pc}
 801bc24:	ab01      	add	r3, sp, #4
 801bc26:	466a      	mov	r2, sp
 801bc28:	f7ff ffc9 	bl	801bbbe <__swhatbuf_r>
 801bc2c:	9900      	ldr	r1, [sp, #0]
 801bc2e:	4605      	mov	r5, r0
 801bc30:	4630      	mov	r0, r6
 801bc32:	f7ff f931 	bl	801ae98 <_malloc_r>
 801bc36:	b948      	cbnz	r0, 801bc4c <__smakebuf_r+0x44>
 801bc38:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801bc3c:	059a      	lsls	r2, r3, #22
 801bc3e:	d4ef      	bmi.n	801bc20 <__smakebuf_r+0x18>
 801bc40:	f023 0303 	bic.w	r3, r3, #3
 801bc44:	f043 0302 	orr.w	r3, r3, #2
 801bc48:	81a3      	strh	r3, [r4, #12]
 801bc4a:	e7e3      	b.n	801bc14 <__smakebuf_r+0xc>
 801bc4c:	4b0d      	ldr	r3, [pc, #52]	; (801bc84 <__smakebuf_r+0x7c>)
 801bc4e:	62b3      	str	r3, [r6, #40]	; 0x28
 801bc50:	89a3      	ldrh	r3, [r4, #12]
 801bc52:	6020      	str	r0, [r4, #0]
 801bc54:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801bc58:	81a3      	strh	r3, [r4, #12]
 801bc5a:	9b00      	ldr	r3, [sp, #0]
 801bc5c:	6163      	str	r3, [r4, #20]
 801bc5e:	9b01      	ldr	r3, [sp, #4]
 801bc60:	6120      	str	r0, [r4, #16]
 801bc62:	b15b      	cbz	r3, 801bc7c <__smakebuf_r+0x74>
 801bc64:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801bc68:	4630      	mov	r0, r6
 801bc6a:	f000 f891 	bl	801bd90 <_isatty_r>
 801bc6e:	b128      	cbz	r0, 801bc7c <__smakebuf_r+0x74>
 801bc70:	89a3      	ldrh	r3, [r4, #12]
 801bc72:	f023 0303 	bic.w	r3, r3, #3
 801bc76:	f043 0301 	orr.w	r3, r3, #1
 801bc7a:	81a3      	strh	r3, [r4, #12]
 801bc7c:	89a0      	ldrh	r0, [r4, #12]
 801bc7e:	4305      	orrs	r5, r0
 801bc80:	81a5      	strh	r5, [r4, #12]
 801bc82:	e7cd      	b.n	801bc20 <__smakebuf_r+0x18>
 801bc84:	0801ba15 	.word	0x0801ba15

0801bc88 <__malloc_lock>:
 801bc88:	4801      	ldr	r0, [pc, #4]	; (801bc90 <__malloc_lock+0x8>)
 801bc8a:	f7ff bf95 	b.w	801bbb8 <__retarget_lock_acquire_recursive>
 801bc8e:	bf00      	nop
 801bc90:	2000a78d 	.word	0x2000a78d

0801bc94 <__malloc_unlock>:
 801bc94:	4801      	ldr	r0, [pc, #4]	; (801bc9c <__malloc_unlock+0x8>)
 801bc96:	f7ff bf91 	b.w	801bbbc <__retarget_lock_release_recursive>
 801bc9a:	bf00      	nop
 801bc9c:	2000a78d 	.word	0x2000a78d

0801bca0 <__sread>:
 801bca0:	b510      	push	{r4, lr}
 801bca2:	460c      	mov	r4, r1
 801bca4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bca8:	f000 f894 	bl	801bdd4 <_read_r>
 801bcac:	2800      	cmp	r0, #0
 801bcae:	bfab      	itete	ge
 801bcb0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801bcb2:	89a3      	ldrhlt	r3, [r4, #12]
 801bcb4:	181b      	addge	r3, r3, r0
 801bcb6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801bcba:	bfac      	ite	ge
 801bcbc:	6563      	strge	r3, [r4, #84]	; 0x54
 801bcbe:	81a3      	strhlt	r3, [r4, #12]
 801bcc0:	bd10      	pop	{r4, pc}

0801bcc2 <__swrite>:
 801bcc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bcc6:	461f      	mov	r7, r3
 801bcc8:	898b      	ldrh	r3, [r1, #12]
 801bcca:	05db      	lsls	r3, r3, #23
 801bccc:	4605      	mov	r5, r0
 801bcce:	460c      	mov	r4, r1
 801bcd0:	4616      	mov	r6, r2
 801bcd2:	d505      	bpl.n	801bce0 <__swrite+0x1e>
 801bcd4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bcd8:	2302      	movs	r3, #2
 801bcda:	2200      	movs	r2, #0
 801bcdc:	f000 f868 	bl	801bdb0 <_lseek_r>
 801bce0:	89a3      	ldrh	r3, [r4, #12]
 801bce2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801bce6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801bcea:	81a3      	strh	r3, [r4, #12]
 801bcec:	4632      	mov	r2, r6
 801bcee:	463b      	mov	r3, r7
 801bcf0:	4628      	mov	r0, r5
 801bcf2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801bcf6:	f000 b817 	b.w	801bd28 <_write_r>

0801bcfa <__sseek>:
 801bcfa:	b510      	push	{r4, lr}
 801bcfc:	460c      	mov	r4, r1
 801bcfe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bd02:	f000 f855 	bl	801bdb0 <_lseek_r>
 801bd06:	1c43      	adds	r3, r0, #1
 801bd08:	89a3      	ldrh	r3, [r4, #12]
 801bd0a:	bf15      	itete	ne
 801bd0c:	6560      	strne	r0, [r4, #84]	; 0x54
 801bd0e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801bd12:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801bd16:	81a3      	strheq	r3, [r4, #12]
 801bd18:	bf18      	it	ne
 801bd1a:	81a3      	strhne	r3, [r4, #12]
 801bd1c:	bd10      	pop	{r4, pc}

0801bd1e <__sclose>:
 801bd1e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bd22:	f000 b813 	b.w	801bd4c <_close_r>
	...

0801bd28 <_write_r>:
 801bd28:	b538      	push	{r3, r4, r5, lr}
 801bd2a:	4d07      	ldr	r5, [pc, #28]	; (801bd48 <_write_r+0x20>)
 801bd2c:	4604      	mov	r4, r0
 801bd2e:	4608      	mov	r0, r1
 801bd30:	4611      	mov	r1, r2
 801bd32:	2200      	movs	r2, #0
 801bd34:	602a      	str	r2, [r5, #0]
 801bd36:	461a      	mov	r2, r3
 801bd38:	f7e6 f928 	bl	8001f8c <_write>
 801bd3c:	1c43      	adds	r3, r0, #1
 801bd3e:	d102      	bne.n	801bd46 <_write_r+0x1e>
 801bd40:	682b      	ldr	r3, [r5, #0]
 801bd42:	b103      	cbz	r3, 801bd46 <_write_r+0x1e>
 801bd44:	6023      	str	r3, [r4, #0]
 801bd46:	bd38      	pop	{r3, r4, r5, pc}
 801bd48:	2000a790 	.word	0x2000a790

0801bd4c <_close_r>:
 801bd4c:	b538      	push	{r3, r4, r5, lr}
 801bd4e:	4d06      	ldr	r5, [pc, #24]	; (801bd68 <_close_r+0x1c>)
 801bd50:	2300      	movs	r3, #0
 801bd52:	4604      	mov	r4, r0
 801bd54:	4608      	mov	r0, r1
 801bd56:	602b      	str	r3, [r5, #0]
 801bd58:	f7e6 f926 	bl	8001fa8 <_close>
 801bd5c:	1c43      	adds	r3, r0, #1
 801bd5e:	d102      	bne.n	801bd66 <_close_r+0x1a>
 801bd60:	682b      	ldr	r3, [r5, #0]
 801bd62:	b103      	cbz	r3, 801bd66 <_close_r+0x1a>
 801bd64:	6023      	str	r3, [r4, #0]
 801bd66:	bd38      	pop	{r3, r4, r5, pc}
 801bd68:	2000a790 	.word	0x2000a790

0801bd6c <_fstat_r>:
 801bd6c:	b538      	push	{r3, r4, r5, lr}
 801bd6e:	4d07      	ldr	r5, [pc, #28]	; (801bd8c <_fstat_r+0x20>)
 801bd70:	2300      	movs	r3, #0
 801bd72:	4604      	mov	r4, r0
 801bd74:	4608      	mov	r0, r1
 801bd76:	4611      	mov	r1, r2
 801bd78:	602b      	str	r3, [r5, #0]
 801bd7a:	f7e6 f918 	bl	8001fae <_fstat>
 801bd7e:	1c43      	adds	r3, r0, #1
 801bd80:	d102      	bne.n	801bd88 <_fstat_r+0x1c>
 801bd82:	682b      	ldr	r3, [r5, #0]
 801bd84:	b103      	cbz	r3, 801bd88 <_fstat_r+0x1c>
 801bd86:	6023      	str	r3, [r4, #0]
 801bd88:	bd38      	pop	{r3, r4, r5, pc}
 801bd8a:	bf00      	nop
 801bd8c:	2000a790 	.word	0x2000a790

0801bd90 <_isatty_r>:
 801bd90:	b538      	push	{r3, r4, r5, lr}
 801bd92:	4d06      	ldr	r5, [pc, #24]	; (801bdac <_isatty_r+0x1c>)
 801bd94:	2300      	movs	r3, #0
 801bd96:	4604      	mov	r4, r0
 801bd98:	4608      	mov	r0, r1
 801bd9a:	602b      	str	r3, [r5, #0]
 801bd9c:	f7e6 f90c 	bl	8001fb8 <_isatty>
 801bda0:	1c43      	adds	r3, r0, #1
 801bda2:	d102      	bne.n	801bdaa <_isatty_r+0x1a>
 801bda4:	682b      	ldr	r3, [r5, #0]
 801bda6:	b103      	cbz	r3, 801bdaa <_isatty_r+0x1a>
 801bda8:	6023      	str	r3, [r4, #0]
 801bdaa:	bd38      	pop	{r3, r4, r5, pc}
 801bdac:	2000a790 	.word	0x2000a790

0801bdb0 <_lseek_r>:
 801bdb0:	b538      	push	{r3, r4, r5, lr}
 801bdb2:	4d07      	ldr	r5, [pc, #28]	; (801bdd0 <_lseek_r+0x20>)
 801bdb4:	4604      	mov	r4, r0
 801bdb6:	4608      	mov	r0, r1
 801bdb8:	4611      	mov	r1, r2
 801bdba:	2200      	movs	r2, #0
 801bdbc:	602a      	str	r2, [r5, #0]
 801bdbe:	461a      	mov	r2, r3
 801bdc0:	f7e6 f8fc 	bl	8001fbc <_lseek>
 801bdc4:	1c43      	adds	r3, r0, #1
 801bdc6:	d102      	bne.n	801bdce <_lseek_r+0x1e>
 801bdc8:	682b      	ldr	r3, [r5, #0]
 801bdca:	b103      	cbz	r3, 801bdce <_lseek_r+0x1e>
 801bdcc:	6023      	str	r3, [r4, #0]
 801bdce:	bd38      	pop	{r3, r4, r5, pc}
 801bdd0:	2000a790 	.word	0x2000a790

0801bdd4 <_read_r>:
 801bdd4:	b538      	push	{r3, r4, r5, lr}
 801bdd6:	4d07      	ldr	r5, [pc, #28]	; (801bdf4 <_read_r+0x20>)
 801bdd8:	4604      	mov	r4, r0
 801bdda:	4608      	mov	r0, r1
 801bddc:	4611      	mov	r1, r2
 801bdde:	2200      	movs	r2, #0
 801bde0:	602a      	str	r2, [r5, #0]
 801bde2:	461a      	mov	r2, r3
 801bde4:	f7e6 f8c4 	bl	8001f70 <_read>
 801bde8:	1c43      	adds	r3, r0, #1
 801bdea:	d102      	bne.n	801bdf2 <_read_r+0x1e>
 801bdec:	682b      	ldr	r3, [r5, #0]
 801bdee:	b103      	cbz	r3, 801bdf2 <_read_r+0x1e>
 801bdf0:	6023      	str	r3, [r4, #0]
 801bdf2:	bd38      	pop	{r3, r4, r5, pc}
 801bdf4:	2000a790 	.word	0x2000a790

0801bdf8 <_init>:
 801bdf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bdfa:	bf00      	nop
 801bdfc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801bdfe:	bc08      	pop	{r3}
 801be00:	469e      	mov	lr, r3
 801be02:	4770      	bx	lr

0801be04 <_fini>:
 801be04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801be06:	bf00      	nop
 801be08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801be0a:	bc08      	pop	{r3}
 801be0c:	469e      	mov	lr, r3
 801be0e:	4770      	bx	lr
